int main(int argc, const char **argv, const char **envp)
{
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(NSXPCListener), "serviceListener");
  qword_1004A1D80 = (uint64_t)v3;
  if (qword_10048BCC0 != -1)
    swift_once(&qword_10048BCC0, sub_1000052EC);
  objc_msgSend(v3, "setDelegate:", qword_1004A1D88);
  objc_msgSend((id)qword_1004A1D80, "resume");
  exit(0);
}

id sub_1000050E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  objc_super v14;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = v8;
  v10 = a1;
  static Logger.music(_:)(0xD000000000000013, 0x80000001003AB860);

  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v14.receiver = v10;
  v14.super_class = (Class)type metadata accessor for MusicScriptUpdateService(0);
  v12 = objc_msgSendSuper2(&v14, *a5, v11, a4);

  return v12;
}

id sub_1000051B0()
{
  return sub_100005360(0, (uint64_t (*)(void))type metadata accessor for MusicScriptUpdateService);
}

id sub_1000052EC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ScriptUpdateServiceDelegate()), "init");
  qword_1004A1D88 = (uint64_t)result;
  return result;
}

id sub_100005354(uint64_t a1)
{
  return sub_100005360(a1, type metadata accessor for ScriptUpdateServiceDelegate);
}

id sub_100005360(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t variable initialization expression of JSThread.accessQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005538();
  static DispatchQoS.unspecified.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100006924(&qword_10048BCF0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = sub_100005574(&qword_10048BCF8);
  v12 = sub_1000055B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x80000001003AB770, v9, v6, v3, 0);
}

unint64_t sub_100005538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048BCE8;
  if (!qword_10048BCE8)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10048BCE8);
  }
  return result;
}

uint64_t sub_100005574(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1000055B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048BD00;
  if (!qword_10048BD00)
  {
    v1 = sub_100005600(&qword_10048BCF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10048BD00);
  }
  return result;
}

uint64_t sub_100005600(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void *variable initialization expression of Library.Context.playlistVariants()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t variable initialization expression of JSThread.scriptingThreadIdentifier()
{
  id v0;
  id v1;
  uint64_t v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v1 = objc_msgSend(v0, "UUIDString");

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  return v2;
}

uint64_t sub_1000056D0()
{
  return type metadata accessor for MusicScriptUpdateService(0);
}

uint64_t type metadata accessor for MusicScriptUpdateService(uint64_t a1)
{
  uint64_t result;

  result = qword_10048BD30;
  if (!qword_10048BD30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MusicScriptUpdateService);
  return result;
}

uint64_t sub_100005714(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for Logger(319, a2);
  if (v4 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v5, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ScriptUpdateServiceDelegate()
{
  return objc_opt_self(_TtC24MusicScriptUpdateService27ScriptUpdateServiceDelegate);
}

uint64_t sub_1000057A0(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003846F8, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_1000057DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003846F8, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100005824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000058C0(a1, a2, a3, (uint64_t)&unk_1003846F8);
}

uint64_t sub_100005830(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003846CC, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_10000586C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_1003846CC, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_1000058B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000058C0(a1, a2, a3, (uint64_t)&unk_1003846CC);
}

Swift::Int sub_1000058C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  WitnessTable = swift_getWitnessTable(a4, a2);
  _CFObject.hash(into:)(v8, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_100005920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_1003846F8, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_10000596C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_1003846CC, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

uint64_t sub_1000059B8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t static MPPropertySet.with(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100005A0C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v6 = a4();
  v8 = v7;
  v9 = sub_100005A7C(v6, v7, a3);
  v10 = *a1;
  v11 = *a1 + 8;
  v13 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v10, v11);
  result = swift_bridgeObjectRelease(v8);
  *a1 = v11;
  return result;
}

uint64_t sub_100005A7C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100005B4C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000684C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000684C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000682C(v12);
  return v7;
}

uint64_t sub_100005B4C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100005D04(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100005D04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100005D98(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_100005F70(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100005F70(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100005D98(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100005F0C(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100005F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100005574(&qword_10048BDD0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100005F70(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048BDD0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_1000060BC(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1000060CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint8_t *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t inited;
  void (*v36)(char *, uint64_t, uint64_t);
  id v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  __n128 v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  char v77[8];
  uint64_t v78;
  char v79[32];

  v10 = type metadata accessor for ApplicationScriptProvider.Compiler(0);
  __chkstk_darwin(v10);
  v70 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  v16 = __chkstk_darwin(v72);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v73 = (uint64_t *)((char *)&v70 - v20);
  v74 = a4 + OBJC_IVAR____TtC24MusicScriptUpdateService24MusicScriptUpdateService_logger;
  v21 = Logger.logObject.getter(v19);
  v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    v71 = v15;
    v24 = v12;
    v25 = a1;
    v26 = v13;
    v27 = a3;
    v28 = a2;
    v29 = a5;
    v30 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Beginning JavaScript bytecode update XPC service", v23, 2u);
    v31 = v30;
    a5 = v29;
    a2 = v28;
    a3 = v27;
    v13 = v26;
    a1 = v25;
    v12 = v24;
    v15 = v71;
    swift_slowDealloc(v31, -1, -1);
  }

  v32 = objc_msgSend(objc_allocWithZone((Class)JSContext), "init");
  if (v32)
  {
    v33 = v32;
    v34 = type metadata accessor for ApplicationScriptProvider();
    inited = swift_initStackObject(v34, v79);
    *(_QWORD *)(inited + 16) = v33;
    *(_QWORD *)(inited + 24) = 0;
    v71 = (char *)inited;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v36(v15, a1, v12);
    v18[32] = 1;
    v36(&v18[*(int *)(v72 + 32)], (uint64_t)v15, v12);
    *((_QWORD *)v18 + 2) = a2;
    *((_QWORD *)v18 + 3) = a3;
    *((_QWORD *)v18 + 1) = 0;
    swift_bridgeObjectRetain_n(a3, 2);
    v37 = v33;
    v38 = sub_100008814(a2, a3, 1);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *(_QWORD *)v18 = v38;
    v39 = v73;
    v40 = sub_1000066CC((uint64_t)v18, (uint64_t)v73);
    if (*v39 && (v42 = sub_100007D14(v40, v41), v43 >> 60 != 15))
    {
      v52 = v42;
      v53 = v43;
      v54 = v70;
      sub_100006754((uint64_t)v39, v70);
      v65 = sub_1000069E8(v52, v53, *((char **)v71 + 2));
      sub_1000067D4(v52, v53);

      v66 = sub_100006798(v54, type metadata accessor for ApplicationScriptProvider.Compiler);
    }
    else
    {
      v44 = sub_100006710();
      v45 = swift_allocError(&type metadata for ApplicationScriptProvider.ScriptError, v44, 0, 0);
      *v46 = 2;
      swift_willThrow(v47);
      swift_errorRetain(v45);
      v55 = swift_errorRetain(v45);
      v56 = Logger.logObject.getter(v55);
      v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v60 = swift_slowAlloc(32, -1);
        v78 = v60;
        *(_DWORD *)v59 = 136315138;
        swift_getErrorValue(v45, v77, v76);
        v61 = Error.localizedDescription.getter(v76[1], v76[2]);
        v63 = v62;
        v75 = sub_100005A7C(v61, v62, &v78);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v59 + 4, v59 + 12);
        swift_bridgeObjectRelease(v63);
        swift_errorRelease(v45);
        swift_errorRelease(v45);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failure while trying to compile: %s", v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        v64 = v60;
        v39 = v73;
        swift_slowDealloc(v64, -1, -1);
        swift_slowDealloc(v59, -1, -1);
        swift_errorRelease(v45);

      }
      else
      {
        swift_errorRelease(v45);

        swift_errorRelease(v45);
        v66 = swift_errorRelease(v45);
      }
    }
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Cached bytecode with no errors", v69, 2u);
      swift_slowDealloc(v69, -1, -1);

      swift_release(v71);
    }
    else
    {

      swift_release(v71);
    }
    return sub_100006798((uint64_t)v39, type metadata accessor for ApplicationScriptProvider.Descriptor);
  }
  else
  {
    v48 = Logger.logObject.getter(0);
    v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Unable to create JSContext", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, _QWORD))(a5 + 16))(a5, 0);
  }
}

uint64_t sub_1000066CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100006710()
{
  unint64_t result;

  result = qword_10048BDC8;
  if (!qword_10048BDC8)
  {
    result = swift_getWitnessTable(&unk_10038494C, &type metadata for ApplicationScriptProvider.ScriptError);
    atomic_store(result, (unint64_t *)&qword_10048BDC8);
  }
  return result;
}

uint64_t sub_100006754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100006798(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000067D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000067E8(a1, a2);
  return a1;
}

uint64_t sub_1000067E8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    ((void (*)(void))swift_release)();
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10000682C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10000684C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CFRunLoopSource(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048BDD8, (uint64_t)&unk_10043C198);
}

void type metadata accessor for CFRunLoop(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048BDE0, (uint64_t)&unk_10043C1C8);
}

void sub_1000068B4(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1000068F8()
{
  return sub_100006924(&qword_10048BDE8, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoop, (uint64_t)&unk_1003845EC);
}

uint64_t sub_100006924(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100006964()
{
  return sub_100006924(&qword_10048BDF0, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoopSource, (uint64_t)&unk_10038465C);
}

uint64_t sub_100006990()
{
  return sub_100006924(&qword_10048BDF8, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoopSource, (uint64_t)&unk_100384688);
}

uint64_t sub_1000069BC()
{
  return sub_100006924((unint64_t *)&unk_10048BE00, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoop, (uint64_t)&unk_100384618);
}

char *sub_1000069E8(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v6;
  void (**v7)(uint64_t, uint64_t, uint64_t, uint8_t *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  unint64_t v49;
  _BYTE *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  void (**v62)(uint64_t, uint64_t, uint64_t, uint8_t *);
  uint64_t v63;
  NSString v64;
  NSString v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  Class isa;
  void (**v74)(uint64_t, uint64_t, uint64_t, uint8_t *);
  void (**v75)(uint64_t, uint64_t, uint64_t, uint8_t *);
  unsigned int v76;
  id v77;
  uint64_t v78;
  id v79;
  char *result;
  char *v81;
  uint8_t *v82;
  char *v83;
  id v84;
  __n128 v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  void (**v107)(uint64_t, uint64_t, uint64_t, uint8_t *);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  NSObject *v113;
  os_log_type_t v114;
  _BOOL4 v115;
  uint8_t *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  void (**v120)(uint64_t, uint64_t, uint64_t, uint8_t *);
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  NSObject *v124;
  void *v125;
  NSObject *v126;
  unsigned int v127;
  id v128;
  NSObject *v129;
  os_log_type_t v130;
  uint8_t *v131;
  id v132;
  uint64_t v133;
  __n128 v134;
  char *v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  uint8_t *v140;
  void *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint8_t *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint8_t *v160;
  char *v161;
  NSObject *v162;
  uint8_t *v163;
  void (**v164)(uint64_t, uint64_t, uint64_t, uint8_t *);
  uint64_t v165;
  uint64_t v166;
  _QWORD v167[3];
  char v168[8];
  id v169;

  v161 = a3;
  v6 = type metadata accessor for URL(0);
  v7 = *(void (***)(uint64_t, uint64_t, uint64_t, uint8_t *))(v6 - 8);
  v163 = (uint8_t *)v6;
  v164 = v7;
  v8 = __chkstk_darwin(v6);
  v162 = ((char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v11 = (char *)&v148 - v10;
  v13 = type metadata accessor for Logger(0, v12);
  v158 = *(_QWORD *)(v13 - 8);
  v159 = v13;
  v14 = __chkstk_darwin(v13);
  v152 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v154 = (char *)&v148 - v17;
  v18 = __chkstk_darwin(v16);
  v157 = (char *)&v148 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v148 - v21;
  v23 = __chkstk_darwin(v20);
  v155 = (char *)&v148 - v24;
  __chkstk_darwin(v23);
  v26 = (char *)&v148 - v25;
  v151 = sub_100005574(&qword_10048C350);
  v27 = __chkstk_darwin(v151);
  v150 = (uint64_t)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v153 = (uint64_t)&v148 - v30;
  v31 = __chkstk_darwin(v29);
  v156 = (uint64_t)&v148 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v148 - v34;
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v148 - v37;
  __chkstk_darwin(v36);
  v165 = (uint64_t)&v148 - v39;
  v40 = type metadata accessor for String.Encoding(0);
  v41 = __chkstk_darwin(v40);
  v43 = (char *)&v148 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter(v41);
  v44 = String.init(data:encoding:)(a1, a2, v43);
  if (!v45)
  {
    v49 = sub_100006710();
    swift_allocError(&type metadata for ApplicationScriptProvider.ScriptError, v49, 0, 0);
    *v50 = 0;
    swift_willThrow(v51);
    return v26;
  }
  v46 = v45;
  v47 = *(unsigned __int8 *)(v3 + 32);
  v148 = v22;
  v48 = (char *)v3;
  v149 = v44;
  if (v47)
  {
    if (v47 != 1)
    {
      v164[7](v165, 1, 1, v163);
      goto LABEL_25;
    }
  }
  else
  {
    if (!*(_QWORD *)v3)
      goto LABEL_23;
    if ((sub_100007B60() & 1) != 0)
    {
      if (qword_10048BCE0 != -1)
        swift_once(&qword_10048BCE0, sub_100008654);
      v52 = v159;
      v53 = sub_1000086B4(v159, (uint64_t)qword_10048BEA8);
      v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 16))(v26, v53, v52);
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Path for bytecode cache exists and will be used in the JSScript creation.", v57, 2u);
        swift_slowDealloc(v57, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v158 + 8))(v26, v159);
    }
  }
  v58 = *(_QWORD *)v48;
  if (*(_QWORD *)v48)
  {
    if (*(_BYTE *)(v58
                  + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
      v59 = 1954047342;
    else
      v59 = 0x746E6572727563;
    if (*(_BYTE *)(v58
                  + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
      v60 = 0xE400000000000000;
    else
      v60 = 0xE700000000000000;
    static URL.+ infix(_:_:)(v58+ OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_versionPath, v59, v60, 0);
    swift_bridgeObjectRelease(v60);
    v61 = v163;
    if (qword_10048BCD0 != -1)
      swift_once(&qword_10048BCD0, sub_100007FAC);
    static URL.+ infix(_:_:)((uint64_t)v11, qword_10048BE88, unk_10048BE90, 1);
    v62 = v164;
    ((void (*)(char *, uint8_t *))v164[1])(v11, v61);
    v63 = 0;
    goto LABEL_24;
  }
LABEL_23:
  v63 = 1;
  v61 = v163;
  v62 = v164;
LABEL_24:
  v62[7]((uint64_t)v38, v63, 1, v61);
  sub_100008BC8((uint64_t)v38, v165);
LABEL_25:
  v64 = String._bridgeToObjectiveC()();
  v65 = String._bridgeToObjectiveC()();
  v66 = objc_msgSend((id)objc_opt_self(RBSDomainAttribute), "attributeWithDomain:name:", v64, v65);

  v67 = objc_msgSend((id)objc_opt_self(RBSTarget), "currentProcess");
  v68 = sub_100005574(&qword_10048C358);
  v69 = swift_allocObject(v68, 40, 7);
  *(_OWORD *)(v69 + 16) = xmmword_100384730;
  *(_QWORD *)(v69 + 32) = v66;
  v169 = (id)v69;
  specialized Array._endMutation()(v69);
  v70 = v169;
  v71 = objc_allocWithZone((Class)RBSAssertion);
  v72 = v66;
  v26 = (char *)String._bridgeToObjectiveC()();
  sub_1000087DC(0, &qword_10048C360, RBSAttribute_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  v74 = (void (**)(uint64_t, uint64_t, uint64_t, uint8_t *))objc_msgSend(v71, "initWithExplanation:target:attributes:", v26, v67, isa);

  v75 = v74;
  v169 = 0;
  v76 = objc_msgSend(v74, "acquireWithError:", &v169);
  v77 = v169;
  if (!v76)
  {
    v84 = v169;
    swift_bridgeObjectRelease(v46);
    _convertNSErrorToError(_:)(v77);

    swift_willThrow(v85);
LABEL_30:
    objc_msgSend(v75, "invalidate", v148);

    sub_100008758(v165, &qword_10048C350);
    return v26;
  }
  v78 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  v26 = (char *)v162;
  ((void (*)(NSObject *, char *, uint8_t *))v164[2])(v162, &v48[*(int *)(v78 + 32)], v163);
  sub_100008794(v165, (uint64_t)v35);
  v79 = v77;
  result = (char *)objc_msgSend(v161, "virtualMachine");
  if (result)
  {
    v81 = result;
    sub_1000087DC(0, &qword_10048C368, JSScript_ptr);
    v82 = v160;
    v83 = (char *)sub_100008A2C(0, v149, v46, (uint64_t)v26, (uint64_t)v35, (uint64_t)v81);
    if (v82)
    {

    }
    else
    {
      v26 = v83;

      if ((objc_msgSend(v26, "isUsingBytecodeCache") & 1) != 0)
      {
        v86 = v26;
        v87 = v159;
        if (qword_10048BCE0 != -1)
          swift_once(&qword_10048BCE0, sub_100008654);
        v88 = sub_1000086B4(v87, (uint64_t)qword_10048BEA8);
        v89 = v158;
        v90 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v158 + 16))(v157, v88, v87);
        v91 = Logger.logObject.getter(v90);
        v92 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v93 = 0;
          _os_log_impl((void *)&_mh_execute_header, v91, v92, "Successfully started script with cached bytecode.", v93, 2u);
          swift_slowDealloc(v93, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v89 + 8))(v157, v87);
        v26 = v86;
      }
      else
      {
        v94 = v156;
        sub_100008794(v165, v156);
        v95 = ((uint64_t (*)(uint64_t, uint64_t, uint8_t *))v164[6])(v94, 1, v163);
        sub_100008758(v94, &qword_10048C350);
        v96 = v159;
        if (v95 == 1)
        {
          v97 = v158;
          if (qword_10048BCE0 != -1)
            swift_once(&qword_10048BCE0, sub_100008654);
          v98 = sub_1000086B4(v96, (uint64_t)qword_10048BEA8);
          v99 = v154;
          v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 16))(v154, v98, v96);
          v101 = Logger.logObject.getter(v100);
          v102 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v101, v102))
          {
            v103 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v103 = 0;
            _os_log_impl((void *)&_mh_execute_header, v101, v102, "Not using bytecode cache", v103, 2u);
            v104 = v103;
            v99 = v154;
            swift_slowDealloc(v104, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v97 + 8))(v99, v96);
        }
        else
        {
          v105 = v158;
          if (qword_10048BCE0 != -1)
            swift_once(&qword_10048BCE0, sub_100008654);
          v106 = sub_1000086B4(v96, (uint64_t)qword_10048BEA8);
          v107 = *(void (***)(uint64_t, uint64_t, uint64_t, uint8_t *))(v105 + 16);
          v108 = v155;
          v163 = (uint8_t *)v106;
          v164 = v107;
          ((void (*)(char *))v107)(v155);
          v109 = v153;
          v110 = sub_100008794(v165, v153);
          v111 = Logger.logObject.getter(v110);
          v112 = static os_log_type_t.default.getter();
          v162 = v111;
          v113 = v111;
          v114 = v112;
          v115 = os_log_type_enabled(v113, v112);
          v161 = v26;
          if (v115)
          {
            v116 = (uint8_t *)swift_slowAlloc(12, -1);
            v117 = (void *)swift_slowAlloc(32, -1);
            v169 = v117;
            *(_DWORD *)v116 = 136315138;
            v160 = v116 + 4;
            v118 = v150;
            sub_100008794(v109, v150);
            v119 = String.init<A>(describing:)(v118, v151);
            v120 = v75;
            v122 = v121;
            v166 = sub_100005A7C(v119, v121, (uint64_t *)&v169);
            v96 = v159;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167, v160, v116 + 12);
            v123 = v122;
            v75 = v120;
            swift_bridgeObjectRelease(v123);
            sub_100008758(v109, &qword_10048C350);
            v124 = v162;
            _os_log_impl((void *)&_mh_execute_header, v162, v114, "Caching bytecode at %s", v116, 0xCu);
            swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
            v125 = v117;
            v26 = v161;
            swift_slowDealloc(v125, -1, -1);
            swift_slowDealloc(v116, -1, -1);

            v126 = *(NSObject **)(v158 + 8);
            ((void (*)(char *, uint64_t))v126)(v155, v96);
          }
          else
          {
            sub_100008758(v109, &qword_10048C350);

            v126 = *(NSObject **)(v105 + 8);
            ((void (*)(char *, uint64_t))v126)(v108, v96);
          }
          v169 = 0;
          v127 = objc_msgSend(v26, "cacheBytecodeWithError:", &v169);
          v128 = v169;
          if (v127)
          {
            ((void (*)(char *, uint8_t *, uint64_t))v164)(v148, v163, v96);
            v129 = Logger.logObject.getter(v128);
            v130 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v129, v130))
            {
              v131 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v131 = 0;
              _os_log_impl((void *)&_mh_execute_header, v129, v130, "Successfully cached bytecode", v131, 2u);
              swift_slowDealloc(v131, -1, -1);
            }

            ((void (*)(char *, uint64_t))v126)(v148, v96);
          }
          else
          {
            v162 = v126;
            v132 = v169;
            v133 = _convertNSErrorToError(_:)(v128);

            swift_willThrow(v134);
            v135 = v152;
            ((void (*)(char *, uint8_t *, uint64_t))v164)(v152, v163, v96);
            swift_errorRetain(v133);
            v136 = swift_errorRetain(v133);
            v137 = Logger.logObject.getter(v136);
            v138 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v137, v138))
            {
              v139 = swift_slowAlloc(12, -1);
              v164 = v75;
              v140 = (uint8_t *)v139;
              v141 = (void *)swift_slowAlloc(32, -1);
              v169 = v141;
              *(_DWORD *)v140 = 136315138;
              v163 = v140 + 4;
              swift_getErrorValue(v133, v168, v167);
              v142 = Error.localizedDescription.getter(v167[1], v167[2]);
              v144 = v143;
              v166 = sub_100005A7C(v142, v143, (uint64_t *)&v169);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, v167, v163, v140 + 12);
              swift_bridgeObjectRelease(v144);
              swift_errorRelease(v133);
              swift_errorRelease(v133);
              _os_log_impl((void *)&_mh_execute_header, v137, v138, "An error has occurred while trying to cache bytecode: %s", v140, 0xCu);
              swift_arrayDestroy(v141, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v141, -1, -1);
              v145 = v140;
              v75 = v164;
              swift_slowDealloc(v145, -1, -1);

              swift_errorRelease(v133);
              v146 = v152;
              v147 = v159;
            }
            else
            {
              swift_errorRelease(v133);
              swift_errorRelease(v133);
              swift_errorRelease(v133);

              v146 = v135;
              v147 = v96;
            }
            ((void (*)(char *, uint64_t))v162)(v146, v147);
            v26 = v161;
          }
        }
      }
    }
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_100007828()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ApplicationScriptProvider()
{
  return objc_opt_self(_TtC24MusicScriptUpdateService25ApplicationScriptProvider);
}

BOOL sub_10000787C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100007890()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000078D4()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000078FC()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10000794C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000871C(v0+ OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E10Downloader_descriptor);
  v1 = v0
     + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E10Downloader_request;
  v2 = type metadata accessor for URLRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1000079AC()
{
  return type metadata accessor for ApplicationScriptProvider.Downloader(0);
}

uint64_t type metadata accessor for ApplicationScriptProvider.Downloader(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10048BFE0, (uint64_t)&nominal type descriptor for ApplicationScriptProvider.Downloader);
}

uint64_t sub_1000079C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for ApplicationScriptProvider.Descriptor(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URLRequest(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 2, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ApplicationScriptProvider.Descriptor(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10048C300, (uint64_t)&nominal type descriptor for ApplicationScriptProvider.Descriptor);
}

uint64_t sub_100007A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[24];

  v0 = sub_100005574(&qword_10048C350);
  sub_1000086DC(v0, qword_10048BE70);
  v1 = sub_1000086B4(v0, (uint64_t)qword_10048BE70);
  v2 = Datavault.music.unsafeMutableAddressor();
  swift_beginAccess(v2, v8, 0, 0);
  v3 = *v2;
  if (v3)
  {
    v4 = v3 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
    swift_retain(v3);
    static URL.+ infix(_:_:)(v4, 0x747069726353, 0xE600000000000000, 0);
    swift_release(v3);
    v5 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 1, 1, v7);
  }
}

id sub_100007B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v18;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v18 - v6;
  v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
    v9 = 1954047342;
  else
    v9 = 0x746E6572727563;
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
    v10 = 0xE400000000000000;
  else
    v10 = 0xE700000000000000;
  static URL.+ infix(_:_:)(v0+ OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_versionPath, v9, v10, 0);
  swift_bridgeObjectRelease(v10);
  if (qword_10048BCD0 != -1)
    swift_once(&qword_10048BCD0, sub_100007FAC);
  static URL.+ infix(_:_:)((uint64_t)v5, qword_10048BE88, unk_10048BE90, 1);
  v11 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  v12 = v11(v5, v1);
  URL.path.getter(v12);
  v14 = v13;
  v11(v7, v1);
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v16 = objc_msgSend(v8, "fileExistsAtPath:", v15);

  return v16;
}

uint64_t sub_100007D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];

  v3 = type metadata accessor for Logger(0, a2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v16[-v9];
  if (*(_BYTE *)(v2
                + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
    v11 = 1954047342;
  else
    v11 = 0x746E6572727563;
  if (*(_BYTE *)(v2
                + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate))
    v12 = 0xE400000000000000;
  else
    v12 = 0xE700000000000000;
  static URL.+ infix(_:_:)(v2+ OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_versionPath, v11, v12, 0);
  swift_bridgeObjectRelease(v12);
  if (qword_10048BCD8 != -1)
    swift_once(&qword_10048BCD8, sub_100007FDC);
  static URL.+ infix(_:_:)((uint64_t)v8, qword_10048BE98, unk_10048BEA0, 1);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v8, v4);
  v14 = Data.init(contentsOf:options:)(v10, 0);
  v13(v10, v4);
  return v14;
}

void sub_100007FAC()
{
  strcpy((char *)&qword_10048BE88, "musicApp._jsc");
  unk_10048BE96 = -4864;
}

void sub_100007FDC()
{
  qword_10048BE98 = 0x707041636973756DLL;
  unk_10048BEA0 = 0xEB00000000736A2ELL;
}

uint64_t sub_100008008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_versionPath;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_version
                                      + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10000806C()
{
  return type metadata accessor for ApplicationScriptProvider.Storage(0);
}

uint64_t type metadata accessor for ApplicationScriptProvider.Storage(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10048C0C8, (uint64_t)&nominal type descriptor for ApplicationScriptProvider.Storage);
}

uint64_t sub_100008088(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1003847C0;
    v4[2] = &unk_1003847D8;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100008108()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "invalidate");

  sub_100008758(v0 + 24, &qword_10048C348);
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for ScriptBackgroundUpdateService()
{
  return objc_opt_self(_TtC24MusicScriptUpdateServiceP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E29ScriptBackgroundUpdateService);
}

uint64_t sub_100008174(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v6 = a2[3];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(a3 + 32);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v4);
    swift_bridgeObjectRetain(v6);
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_100008234(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100008284(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  v5 = a2[3];
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = type metadata accessor for URL(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  v10(v7, v8, v9);
  return a1;
}

uint64_t *sub_10000831C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  swift_retain(v7);
  swift_release(v6);
  a1[1] = a2[1];
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v10 = *(int *)(a3 + 32);
  v11 = (uint64_t)a1 + v10;
  v12 = (uint64_t)a2 + v10;
  v13 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1000083C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t *sub_10000842C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v8 = *(int *)(a3 + 32);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1000084B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000084C4);
}

uint64_t sub_1000084C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100008540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000854C);
}

uint64_t sub_10000854C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000085C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = &unk_1003847D8;
  v4[3] = &unk_100384848;
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100008654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_10048BEA8);
  sub_1000086B4(v2, (uint64_t)qword_10048BEA8);
  return static Logger.music(_:)(0xD000000000000019, 0x8000000100384770);
}

uint64_t sub_1000086B4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1000086CC(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t *sub_1000086DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10000871C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100008758(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100005574(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100008794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048C350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000087DC(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100008814(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t *v19;
  _BYTE v21[12];
  int v22;

  v22 = a3;
  v5 = sub_100005574(&qword_10048C350);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v21[-v13];
  v15 = type metadata accessor for ApplicationScriptProvider.Storage(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  if (qword_10048BCC8 != -1)
    swift_once(&qword_10048BCC8, sub_100007A64);
  v17 = sub_1000086B4(v5, (uint64_t)qword_10048BE70);
  sub_100008794(v17, (uint64_t)v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease(a2);
    sub_100008758((uint64_t)v7, &qword_10048C350);
    swift_deallocPartialClassInstance(v16, v15, *(unsigned int *)(*(_QWORD *)v16 + 48), *(unsigned __int16 *)(*(_QWORD *)v16 + 52));
    return 0;
  }
  else
  {
    v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
    v18(v14, v7, v8);
    swift_bridgeObjectRetain();
    static URL.+ infix(_:_:)((uint64_t)v14, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v14, v8);
    v18((_BYTE *)(v16+ OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_versionPath), v12, v8);
    *(_BYTE *)(v16
             + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_isUpdate) = v22 & 1;
    v19 = (uint64_t *)(v16
                    + OBJC_IVAR____TtCC24MusicScriptUpdateService25ApplicationScriptProviderP33_0D2AB3BEB3F9753D7B455D5AEAE42E6E7Storage_version);
    *v19 = a1;
    v19[1] = a2;
  }
  return v16;
}

id sub_100008A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  NSString v12;
  NSURL *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSURL *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void (*v23)(uint64_t, uint64_t);
  id v24;
  id v25;
  uint64_t v28;
  id v29;

  v7 = v6;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v28 = a4;
  URL._bridgeToObjectiveC()(v13);
  v15 = v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(a5, 1, v16) != 1)
  {
    URL._bridgeToObjectiveC()(v18);
    v19 = v20;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  }
  v29 = 0;
  v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(v7), "scriptOfType:withSource:andSourceURL:andBytecodeCache:inVirtualMachine:error:", a1, v12, v15, v19, a6, &v29);

  v22 = v29;
  if (v21)
  {
    v23 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v24 = v29;
    v23(v28, v16);
  }
  else
  {
    v25 = v29;
    _convertNSErrorToError(_:)(v22);

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v28, v16);
  }
  return v21;
}

uint64_t sub_100008BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048C350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_BYTE *initializeBufferWithCopyOfBuffer for ApplicationScriptProvider.Intent(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ApplicationScriptProvider.ScriptError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationScriptProvider.ScriptError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100008CFC + 4 * byte_100384745[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100008D30 + 4 * byte_100384740[v4]))();
}

uint64_t sub_100008D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100008D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100008D40);
  return result;
}

uint64_t sub_100008D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100008D54);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100008D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100008D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100008D6C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100008D78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationScriptProvider.ScriptError()
{
  return &type metadata for ApplicationScriptProvider.ScriptError;
}

uint64_t sub_100008D90(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(v4 + 32);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain(v6);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100008E5C(_QWORD *a1)
{
  char *v2;
  uint64_t v3;

  swift_release(*a1);
  swift_bridgeObjectRelease(a1[3]);
  v2 = (char *)a1 + *(int *)(type metadata accessor for ApplicationScriptProvider.Descriptor(0) + 32);
  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_100008EB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  v5 = *(int *)(type metadata accessor for ApplicationScriptProvider.Descriptor(0) + 32);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = type metadata accessor for URL(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain(v4);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100008F54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v7 = *(int *)(type metadata accessor for ApplicationScriptProvider.Descriptor(0) + 32);
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100008FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for ApplicationScriptProvider.Descriptor(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t *sub_100009074(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  v6 = *(int *)(type metadata accessor for ApplicationScriptProvider.Descriptor(0) + 32);
  v7 = (uint64_t)a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100009104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100009110);
}

uint64_t sub_100009110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_10000914C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100009158);
}

uint64_t sub_100009158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ApplicationScriptProvider.Descriptor(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ApplicationScriptProvider.Compiler(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10048C3C8, (uint64_t)&nominal type descriptor for ApplicationScriptProvider.Compiler);
}

uint64_t sub_1000091AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_1000091E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ApplicationScriptProvider.Descriptor(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ApplicationScriptProvider.Intent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationScriptProvider.Intent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100009324 + 4 * byte_10038474F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100009358 + 4 * byte_10038474A[v4]))();
}

uint64_t sub_100009358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100009360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100009368);
  return result;
}

uint64_t sub_100009374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10000937CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100009380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100009388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ApplicationScriptProvider.Intent()
{
  return &type metadata for ApplicationScriptProvider.Intent;
}

unint64_t sub_1000093A8()
{
  unint64_t result;

  result = qword_10048C400;
  if (!qword_10048C400)
  {
    result = swift_getWitnessTable(&unk_1003848BC, &type metadata for ApplicationScriptProvider.Intent);
    atomic_store(result, (unint64_t *)&qword_10048C400);
  }
  return result;
}

unint64_t sub_1000093F0()
{
  unint64_t result;

  result = qword_10048C408;
  if (!qword_10048C408)
  {
    result = swift_getWitnessTable(&unk_100384924, &type metadata for ApplicationScriptProvider.ScriptError);
    atomic_store(result, (unint64_t *)&qword_10048C408);
  }
  return result;
}

uint64_t JSThread.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 80, 7);
  JSThread.init(name:)(a1, a2);
  return v5;
}

_QWORD *JSThread.init(name:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v3 = v2;
  v25 = a1;
  v26 = a2;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000087DC(0, (unint64_t *)&qword_10048BCE8, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter();
  v27 = _swiftEmptyArrayStorage;
  v14 = sub_100006924(&qword_10048BCF0, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_100005574(&qword_10048BCF8);
  v16 = sub_1000055B4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v15, v16, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  v3[4] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000018, 0x80000001003AB770, v13, v10, v7, 0);
  v3[5] = _swiftEmptyArrayStorage;
  v3[6] = 0;
  v3[7] = 0;
  v17 = objc_msgSend(objc_allocWithZone((Class)NSUUID), "init");
  v18 = objc_msgSend(v17, "UUIDString");

  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v3[8] = v19;
  v3[9] = v21;
  v22 = v26;
  v3[2] = v25;
  v3[3] = v22;
  return v3;
}

uint64_t static JSThread.assertRunning(on:)()
{
  id v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t result;
  _QWORD v5[2];
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(NSThread), "currentThread");
  v1 = objc_msgSend(v0, "threadDictionary");

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "objectForKey:", v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(v3);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1000097E4((uint64_t)v6, (uint64_t)v7);
  if (!v8)
    return sub_10000982C((uint64_t)v7);
  result = swift_dynamicCast(v5, v7, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if ((_DWORD)result)
    return swift_bridgeObjectRelease(v5[1]);
  return result;
}

uint64_t sub_1000097E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048C348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000982C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10048C348);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Alert.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

void JSThread.enqueueBlock(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void *v11;
  char *v12;
  __CFRunLoopSource *v13;
  _QWORD v14[5];
  uint64_t v15;
  char *v16;
  void *v17;

  v16 = 0;
  v17 = 0;
  v5 = *(NSObject **)(v2 + 32);
  v6 = (_QWORD *)swift_allocObject(&unk_10043C3C0, 48, 7);
  v6[2] = &v16;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject(&unk_10043C3E8, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_100009B94;
  *(_QWORD *)(v7 + 24) = v6;
  v14[4] = sub_100009BB0;
  v15 = v7;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100009BD0;
  v14[3] = &unk_10043C400;
  v8 = _Block_copy(v14);
  v9 = v15;
  swift_retain(v2);
  swift_retain(a2);
  swift_retain(v7);
  swift_release(v9);
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v7, "", 100, 31, 31, 1, v10);
  swift_release(v7);
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((unint64_t)(v16 - 1) >= 2)
    {
      if (v16)
      {
        v11 = v17;
        v12 = v16;
        v13 = v11;
        CFRunLoopSourceSignal(v13);
        CFRunLoopWakeUp((CFRunLoopRef)v12);

      }
      else
      {
        sub_100009E48();
      }
    }
    sub_100009C08(v16, v17);
    swift_release(v6);
  }
}

uint64_t sub_100009A2C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _BYTE v22[24];

  v8 = (void *)a2[6];
  v9 = (void *)a2[7];
  v10 = *(void **)a1;
  v11 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  sub_10000ABEC(v8, v9);
  sub_100009C08(v10, v11);
  if (!*(_QWORD *)a1)
  {
    v12 = (void *)a2[6];
    v13 = (void *)a2[7];
    *((_OWORD *)a2 + 3) = xmmword_1003849A0;
    sub_100009C08(v12, v13);
  }
  v14 = swift_allocObject(&unk_10043C630, 32, 7);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  v15 = a2 + 5;
  swift_beginAccess(a2 + 5, v22, 33, 0);
  v16 = (_QWORD *)a2[5];
  swift_retain(a4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
  a2[5] = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_10000A8A0(0, v16[2] + 1, 1, v16);
    *v15 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_10000A8A0((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *v15 = v16;
  }
  v16[2] = v19 + 1;
  v20 = &v16[2 * v19];
  v20[4] = sub_100009BB0;
  v20[5] = v14;
  return swift_endAccess(v22);
}

uint64_t sub_100009B68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100009B94()
{
  uint64_t v0;

  return sub_100009A2C(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100009BA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009BB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100009BD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100009BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100009C00(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100009C08(void *a1, void *a2)
{
  if ((unint64_t)a1 >= 3)
  {

  }
}

void sub_100009C38()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  __n128 v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(void);
  void *v13;
  _QWORD aBlock[5];
  uint64_t v15;
  _QWORD *v16;

  v1 = v0;
  v16 = _swiftEmptyArrayStorage;
  v2 = *(NSObject **)(v0 + 32);
  v3 = swift_allocObject(&unk_10043C5B8, 32, 7);
  *(_QWORD *)(v3 + 16) = &v16;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = swift_allocObject(&unk_10043C5E0, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_10000ABB0;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_10000AD24;
  v15 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10043C5F8;
  v5 = _Block_copy(aBlock);
  v6 = v15;
  swift_retain(v1);
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 100, 65, 31, 1, v7);
  swift_release(v4);
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v16;
    v9 = v16[2];
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = v8 + 5;
      do
      {
        v12 = (void (*)(void))*(v10 - 1);
        v11 = *v10;
        swift_retain(*v10);
        v13 = objc_autoreleasePoolPush();
        v12();
        objc_autoreleasePoolPop(v13);
        swift_release(v11);
        v10 += 2;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease(v8);
      v8 = v16;
    }
    swift_release(v3);
    swift_bridgeObjectRelease(v8);
  }
}

uint64_t sub_100009DD8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(a2 + 40, v8, 1, 0);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *a1;
  *a1 = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = &_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease(v6);
}

void sub_100009E48()
{
  uint64_t v0;
  NSString v1;
  id v2;
  _OWORD v3[2];
  _QWORD v4[4];

  sub_1000087DC(0, &qword_10048C550, NSThread_ptr);
  v4[3] = type metadata accessor for JSThread();
  v4[0] = v0;
  memset(v3, 0, sizeof(v3));
  swift_retain(v0);
  v2 = sub_100009F10(v4, (uint64_t)"_scriptingThreadMain", v3);
  objc_msgSend(v2, "setQualityOfService:", 25);
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setName:", v1);

  objc_msgSend(v2, "start");
}

id sub_100009F10(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v6 = a1[3];
  v7 = sub_10000ABC8(a1, v6);
  v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
  v9 = a3[3];
  if (v9)
  {
    v10 = sub_10000ABC8(a3, a3[3]);
    v11 = *(_QWORD *)(v9 - 8);
    __chkstk_darwin(v10);
    v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    v14 = _bridgeAnythingToObjectiveC<A>(_:)(v13, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    sub_10000682C(a3);
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "initWithTarget:selector:object:", v8, a2, v14);
  swift_unknownObjectRelease(v8);
  swift_unknownObjectRelease(v14);
  sub_10000682C(a1);
  return v15;
}

void sub_10000A044()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  NSString v4;
  NSString v5;
  CFRunLoopSourceRef v6;
  __CFRunLoopSource *v7;
  __CFRunLoop *v8;
  __CFRunLoop *v9;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __CFRunLoop *v15;
  __CFRunLoopSource *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  char isEscapingClosureAtFileLocation;
  void **aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  char v30;
  CFRunLoopSourceContext context;

  v1 = objc_msgSend((id)objc_opt_self(NSThread), "currentThread");
  v2 = objc_msgSend(v1, "threadDictionary");

  v3 = v0[9];
  swift_bridgeObjectRetain();
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", v4, v5);

  context.version = 0;
  context.info = v0;
  memset(&context.retain, 0, 56);
  context.perform = (void (__cdecl *)(void *))sub_10000A3F0;
  v6 = CFRunLoopSourceCreate(kCFAllocatorDefault, 0, &context);
  if (!v6)
    goto LABEL_12;
  v7 = v6;
  v8 = CFRunLoopGetCurrent();
  if (!v8)
    goto LABEL_13;
  v9 = v8;
  CFRunLoopAddSource(v8, v7, kCFRunLoopDefaultMode);
  v30 = 0;
  v10 = v0[4];
  v11 = (_QWORD *)swift_allocObject(&unk_10043C4C8, 48, 7);
  v11[2] = v0;
  v11[3] = v9;
  v11[4] = v7;
  v11[5] = &v30;
  v12 = swift_allocObject(&unk_10043C4F0, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_10000AB34;
  *(_QWORD *)(v12 + 24) = v11;
  v28 = sub_10000AD24;
  v29 = v12;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_100009BD0;
  v27 = &unk_10043C508;
  v13 = _Block_copy(&aBlock);
  v14 = v29;
  swift_retain(v0);
  v15 = v9;
  v16 = v7;
  swift_retain(v12);
  swift_release(v14);
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v12, "", 100, 136, 31, 1, v17);
  swift_release(v12);
  if ((v13 & 1) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  if (v30 == 1)
  {
    CFRunLoopSourceSignal(v16);
    CFRunLoopWakeUp(v15);
  }
  CFRunLoopRun();
  v18 = swift_allocObject(&unk_10043C540, 32, 7);
  *(_QWORD *)(v18 + 16) = v0;
  *(_QWORD *)(v18 + 24) = &v30;
  v19 = swift_allocObject(&unk_10043C568, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_10000AB74;
  *(_QWORD *)(v19 + 24) = v18;
  v28 = sub_10000AD24;
  v29 = v19;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_100009BD0;
  v27 = &unk_10043C580;
  v20 = _Block_copy(&aBlock);
  v21 = v29;
  swift_retain(v0);
  swift_retain(v19);
  swift_release(v21);
  dispatch_sync(v10, v20);
  _Block_release(v20);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 100, 148, 31, 1, v22);
  swift_release(v19);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_11;
  if (v30 == 1)
    sub_100009E48();
  swift_release(v18);
  swift_release(v11);

}

double sub_10000A3F0(uint64_t a1)
{
  double result;

  if (a1)
  {
    swift_retain(a1);
    sub_100009C38();
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

void sub_10000A420(_QWORD *a1, void *a2, void *a3, BOOL *a4)
{
  void *v7;
  void *v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v7 = (void *)a1[6];
  v8 = (void *)a1[7];
  a1[6] = a2;
  a1[7] = a3;
  v9 = a2;
  v10 = a3;
  sub_100009C08(v7, v8);
  swift_beginAccess(a1 + 5, v11, 0, 0);
  *a4 = *(_QWORD *)(a1[5] + 16) != 0;
}

void sub_10000A4A0(_QWORD *a1, BOOL *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _BYTE v9[24];

  v4 = (void *)a1[6];
  v5 = (void *)a1[7];
  a1[6] = 0;
  a1[7] = 0;
  sub_100009C08(v4, v5);
  swift_beginAccess(a1 + 5, v9, 0, 0);
  v6 = *(_QWORD *)(a1[5] + 16);
  *a2 = v6 != 0;
  if (v6)
  {
    v7 = (void *)a1[6];
    v8 = (void *)a1[7];
    *((_OWORD *)a1 + 3) = xmmword_1003849A0;
    sub_100009C08(v7, v8);
  }
}

BOOL sub_10000A540(void **a1, void **a2)
{
  return sub_10000A9AC(*a1, a1[1], *a2, a2[1]);
}

uint64_t JSThread.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_100009C08(*(void **)(v0 + 48), *(void **)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t JSThread.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_100009C08(*(void **)(v0 + 48), *(void **)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for JSThread()
{
  return objc_opt_self(_TtC24MusicScriptUpdateService8JSThread);
}

void destroy for JSThread.State(id *a1)
{
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
  {

  }
}

uint64_t _s24MusicScriptUpdateService8JSThreadC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = v3;
    v6 = v4;
  }
  return a1;
}

void **assignWithCopy for JSThread.State(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v4 = *a1;
  v5 = *(void **)a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      v10 = *(void **)(a2 + 8);
      a1[1] = v10;
      v11 = v5;
      v12 = v10;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *a1 = v5;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = a1[1];
  a1[1] = v7;
  v9 = v7;

  return a1;
}

__n128 initializeWithTake for JSThread.State(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void **assignWithTake for JSThread.State(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *a1;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(void **)a2;

  v5 = a1[1];
  a1[1] = *(void **)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for JSThread.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JSThread.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_10000A858(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_10000A870(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for JSThread.State()
{
  return &type metadata for JSThread.State;
}

_QWORD *sub_10000A8A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100005574(&qword_10048C558);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10000AC1C(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

BOOL sub_10000A9AC(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1)
  {
    if (a1 == (void *)1)
    {
      if (a3 == (void *)1)
        return 1;
    }
    else
    {
      if (a1 == (void *)2)
        return a3 == (void *)2;
      if ((unint64_t)a3 >= 3)
      {
        type metadata accessor for CFRunLoop(0);
        v10 = v9;
        v11 = sub_100006924(&qword_10048C540, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoop, (uint64_t)&unk_1003846F8);
        v12 = a1;
        v13 = a3;
        v14 = a2;
        v15 = a4;
        if ((static _CFObject.== infix(_:_:)(v12, v13, v10, v11) & 1) != 0)
        {
          type metadata accessor for CFRunLoopSource(0);
          v17 = v16;
          v18 = sub_100006924(&qword_10048C548, (uint64_t (*)(uint64_t))type metadata accessor for CFRunLoopSource, (uint64_t)&unk_1003846CC);
          LOBYTE(v17) = static _CFObject.== infix(_:_:)(v14, v15, v17, v18);

          return v17 & 1;
        }

      }
    }
  }
  else if (!a3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_10000AB00()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10000AB34()
{
  uint64_t v0;

  sub_10000A420(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(BOOL **)(v0 + 40));
}

uint64_t sub_10000AB40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000AB50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10000AB74()
{
  uint64_t v0;

  sub_10000A4A0(*(_QWORD **)(v0 + 16), *(BOOL **)(v0 + 24));
}

uint64_t sub_10000AB7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000AB8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000ABB0()
{
  uint64_t v0;

  return sub_100009DD8(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10000ABB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_10000ABC8(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id sub_10000ABEC(id result, void *a2)
{
  id v2;

  if ((unint64_t)result >= 3)
  {
    v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_10000AC1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      v8 = sub_100005574((uint64_t *)&unk_10048C560);
      swift_arrayInitWithCopy(a3, v6, v4, v8);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_10000AD54()
{
  uint64_t result;

  result = sub_10000AD70();
  qword_1004A1DA0 = result;
  return result;
}

uint64_t sub_10000AD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  char *v45;
  id v46;
  NSURL *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  void (*v58)(uint64_t, char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v61 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100005574(&qword_10048D510);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v54 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v54 - v12;
  v14 = __chkstk_darwin(v11);
  v58 = (void (*)(uint64_t, char *, uint64_t))((char *)&v54 - v15);
  __chkstk_darwin(v14);
  v17 = (char *)&v54 - v16;
  v56 = sub_1001ACEA4((uint64_t)_swiftEmptyArrayStorage);
  v18 = sub_100005574(&qword_10048D518);
  v19 = *(_QWORD *)(v4 + 72);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 32) & ~v20;
  v62 = v19;
  v22 = swift_allocObject(v18, v21 + 3 * v19, v20 | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100384A40;
  v57 = v21;
  v55 = v22;
  v23 = v22 + v21;
  v24 = (void *)objc_opt_self(NSBundle);
  v25 = objc_msgSend(v24, "mainBundle");
  v26 = objc_msgSend(v25, "resourceURL");

  v60 = v1;
  if (v26)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v26);

    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 0, 1, v0);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    v27(v17, 1, 1, v0);
  }
  sub_10000DCB0((uint64_t)v17, v23);
  type metadata accessor for BundleFinder();
  v28 = objc_msgSend(v24, "bundleForClass:", swift_getObjCClassFromMetadata());
  v29 = objc_msgSend(v28, "resourceURL");

  if (v29)
  {
    v30 = (uint64_t)v58;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = 0;
  }
  else
  {
    v31 = 1;
    v30 = (uint64_t)v58;
  }
  v27((char *)v30, v31, 1, v0);
  v32 = v62;
  sub_10000DCB0(v30, v23 + v62);
  v33 = v23 + 2 * v32;
  v34 = objc_msgSend(v24, "mainBundle");
  v35 = objc_msgSend(v34, "bundleURL");

  v36 = v61;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v35);

  v37 = v60;
  v58 = *(void (**)(uint64_t, char *, uint64_t))(v60 + 32);
  v58(v33, v36, v0);
  v27((char *)v33, 0, 1, v0);
  v63 = v56;
  sub_10008A354(v55);
  v38 = v63;
  v39 = v63[2];
  if (v39)
  {
    v40 = (uint64_t)v63 + v57;
    v56 = v63;
    v57 = 0x80000001003AD0B0;
    v59 = v13;
    do
    {
      sub_10000DCF8(v40, (uint64_t)v10);
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      if (v41(v10, 1, v0) == 1)
      {
        sub_10000DD40((uint64_t)v10);
        v42 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)(0xD000000000000020, v57);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v0);
        v42 = 0;
      }
      v27(v13, v42, 1, v0);
      sub_10000DCF8((uint64_t)v13, (uint64_t)v7);
      if (v41(v7, 1, v0) == 1)
      {
        sub_10000DD40((uint64_t)v13);
      }
      else
      {
        v43 = v10;
        v44 = v27;
        v45 = v61;
        v58((uint64_t)v61, v7, v0);
        v46 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v47);
        v49 = v48;
        v50 = v46;
        v37 = v60;
        v51 = objc_msgSend(v50, "initWithURL:", v49);

        v52 = v45;
        v27 = v44;
        v10 = v43;
        v13 = v59;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v52, v0);
        sub_10000DD40((uint64_t)v13);
        if (v51)
        {
          swift_bridgeObjectRelease(v56);
          return (uint64_t)v51;
        }
      }
      v40 += v62;
      --v39;
    }
    while (v39);
    v38 = v56;
  }
  swift_bridgeObjectRelease(v38);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000035, 0x80000001003AD070, "MusicCore/resource_bundle_accessor.swift", 40, 2, 44, 0);
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Variant, a1);
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.actionContext()
{
  return 0;
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.page@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for MetricsEvent.Page, a1);
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

uint64_t variable initialization expression of Notice.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for Notice.Thumbnail, a1);
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

double variable initialization expression of AnyAction.displayConfiguration@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_100384A50;
  a1[1] = 0u;
  a1[2] = 0u;
  return result;
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

uint64_t variable initialization expression of ArtworkVideoReportingController.signpostsForIndex(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a1, &type metadata for ComponentRenderEventSignposts, 0, 0);
  v5 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v5, a1, &type metadata for ComponentRenderEventSignposts, a2);
}

uint64_t variable initialization expression of MetricsEvent.ComponentRender.componentType()
{
  return 24;
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler()
{
  return sub_10000B364(&qword_10048CFE8);
}

uint64_t variable initialization expression of MetricsReportingController.pageRenderEventSampler()
{
  return sub_10000B364((uint64_t *)&unk_10048CFF0);
}

uint64_t sub_10000B364(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_100005574(a1);
  v2 = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(v2 + 16) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  return v2;
}

id variable initialization expression of MetricsReportingController.carFocusedMetricsController()
{
  return objc_msgSend(objc_allocWithZone((Class)SSMetricsController), "init");
}

uint64_t variable initialization expression of MetricsReportingController.carMetricsReporter()
{
  uint64_t v0;

  v0 = type metadata accessor for CarNowPlayingMetrics.Reporter();
  return swift_allocObject(v0, 16, 7);
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.Metadata.URL@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for URL, a1);
}

uint64_t variable initialization expression of MetricsEvent.PageRender.request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

id variable initialization expression of ApplicationCapabilities.hasNetworkConnectivity()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, "hasProperNetworkConditionsToShowCloudMedia");

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of ApplicationCapabilities.ratingWarning@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 0x7FFFFFFFFFFFFFFFLL;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

id variable initialization expression of ApplicationCapabilities.subscriptionStatus()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
  v1 = objc_msgSend(v0, "musicSubscriptionStatus");

  return v1;
}

char *variable initialization expression of ApplicationCapabilities.tabs()
{
  return sub_1000B9208((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.storeBag()
{
  uint64_t v1;

  if (qword_10048C720 != -1)
    swift_once(&qword_10048C720, sub_1000C378C);
  sub_100005574(&qword_100490BA0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000D460);
  return v1;
}

id variable initialization expression of BackgroundRefreshController.cloudClient()
{
  return objc_msgSend(objc_allocWithZone((Class)ICCloudClient), "init");
}

uint64_t variable initialization expression of GroupActivitiesManager.signpostInitiationToFirstAudioFrame@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for Signpost, a1);
}

uint64_t variable initialization expression of BagProvider.durableObservers()
{
  uint64_t v0;

  v0 = type metadata accessor for BagProvider.Observer();
  return WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v0);
}

uint64_t variable initialization expression of BagProvider.logger()
{
  if (qword_10048C770 != -1)
    swift_once(&qword_10048C770, sub_1000F0340);
  return Logger.init(_:)((id)static OS_os_log.musicBag);
}

id variable initialization expression of BagProvider.retry()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()), "init");
}

unint64_t variable initialization expression of Collaboration.ArtworkCachingReference.identifier()
{
  return 0xD000000000000027;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._hasDisregardedBanner()
{
  id v0;
  unint64_t v1;
  _QWORD v3[2];
  char v4;
  uint64_t v5;

  v4 = 2;
  v3[0] = 0xD000000000000014;
  v3[1] = 0x80000001003ACF70;
  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = sub_10000D478();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v4, (uint64_t)v0, (uint64_t)v3, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Bool, v1, (char *)&v5);
  return v5;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver.capabilitiesController()
{
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  return swift_retain(static ApplicationCapabilities.Controller.shared);
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._status()
{
  return 0x80000000;
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t variable initialization expression of MusicLibrary.ActionableStateController.currentState()
{
  return 0;
}

void variable initialization expression of MusicLibrary.ActionableStateController.itemStateSubscriptions()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      sub_1000D3C48((uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t variable initialization expression of Library.Context.musicLibrary()
{
  type metadata accessor for MusicLibrary(0);
  return static MusicLibrary.shared.getter();
}

uint64_t variable initialization expression of Library.Context.album@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t variable initialization expression of Library.Context.artist@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t variable initialization expression of Library.Context.composer@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Composer, a1);
}

uint64_t variable initialization expression of Library.Context.genre@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Genre, a1);
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t variable initialization expression of Library.Context.tvShow@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t variable initialization expression of Library.Context.tvSeason@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t static MPIdentifierSet.Purpose.Options.all.getter()
{
  return 3;
}

id variable initialization expression of Library.Menu.Request.librarySource()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (!result)
    __break(1u);
  return result;
}

unint64_t variable initialization expression of PushNotificationObserver.registeredHandlers()
{
  return sub_100099470((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of PushNotificationObserver.connection()
{
  return 0;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of Player._path()
{
  id v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;
  void *v5;

  v0 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v1 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_10048C858 != -1)
    swift_once(&qword_10048C858, sub_100150D8C);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "systemMusicPathWithRoute:playerID:", v0, v2);

  if (objc_msgSend(v0, "isDeviceRoute"))
    v4 = v3;
  else
    v4 = objc_msgSend(v1, "pathWithRoute:bundleID:playerID:", v0, 0, 0);
  v5 = v4;

  return v3;
}

uint64_t variable initialization expression of Player.nowPlayingConfiguration()
{
  uint64_t v0;
  id v1;

  if (qword_10048C888 != -1)
    swift_once(&qword_10048C888, sub_10017DC64);
  v0 = qword_100493710;
  v1 = (id)qword_100493710;
  return v0;
}

unint64_t variable initialization expression of Player.failingPlayerPathTimers()
{
  return sub_100099620((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t _s9MusicCore6PlayerC4lock33_031AD420BBF8BBF113A2662767DAC2BBLL0A9Utilities10UnfairLockCvpfi_0()
{
  uint64_t v0;

  v0 = type metadata accessor for UnfairLock();
  swift_allocObject(v0, 24, 7);
  return UnfairLock.init()();
}

id sub_10000BA74()
{
  if (qword_10048C888 != -1)
    swift_once(&qword_10048C888, sub_10017DC64);
  return (id)qword_100493710;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of Player.NowPlayingConfiguration.BadCountedSet.dictionary(uint64_t a1, uint64_t a2)
{
  return Dictionary.init()(a1, &type metadata for Int, a2);
}

uint64_t variable initialization expression of MusicItemState._playabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  v3 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t variable initialization expression of MusicItemState._previewCapabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:);
  v5 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t variable initialization expression of SequentialVocalCommandsFilter.queuedCommand()
{
  return 0x1000000000000;
}

id variable initialization expression of PlaylistCovers.ArtworkDataSource.cache()
{
  return objc_msgSend(objc_allocWithZone((Class)NSCache), "init");
}

double variable initialization expression of PresentationSource.position@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 40) = -1;
  return result;
}

uint64_t ActionMenuItemConfiguring.menuItemImage.getter()
{
  return 0;
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of RequestResponse.Controller.enqueuedRevisionCompletions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t FunctionTypeMetadata2;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  return static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
}

uint64_t variable initialization expression of RequestResponse.Controller.revisionIDCompletionsMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;

  v6 = type metadata accessor for RequestResponse.Controller(255, a1, a2, a4);
  v8 = type metadata accessor for RequestResponse.Revision(255, a1, a2, v7);
  swift_getFunctionTypeMetadata2(67108866, v6, v8, (char *)&type metadata for () + 8);
  v9 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v9, 0, 0);
  v11 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v11, &type metadata for Int, v9, &protocol witness table for Int);
}

uint64_t variable initialization expression of SharePlayTogetherSession._host@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for SharePlayTogetherSession.Participant, a1);
}

unint64_t variable initialization expression of SharePlayTogetherSession.participantProfileMap()
{
  return sub_100099728((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SharePlayTogetherSession.Participant.socialProfile@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for SocialProfile, a1);
}

double variable initialization expression of GroupActivitiesManager.Activity.Metadata.artworkSize()
{
  return 300.0;
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.customMetadata@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for GroupActivitiesManager.Activity.Metadata, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.pendingNoticeAlert()
{
  return 0;
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t variable initialization expression of GroupActivitiesManager.artworkCachingReference()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;

  v0 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v1 + 24) = 0x80000001003ACF90;
  v2 = (void *)objc_opt_self(MPArtworkCatalog);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v3, v1);

  return v1;
}

uint64_t variable initialization expression of GroupActivitiesManager.sessionStateObserver()
{
  type metadata accessor for GroupStateObserver(0);
  return GroupStateObserver.__allocating_init()();
}

uint64_t variable initialization expression of GroupActivitiesManager.activity@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74(type metadata accessor for GroupActivitiesManager.Activity, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.autoBugCaptureIntervalBeginDate@<X0>(uint64_t a1@<X8>)
{
  return sub_10000BE74((uint64_t (*)(_QWORD))&type metadata accessor for Date, a1);
}

uint64_t sub_10000BE74@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of GroupActivitiesManager.eligibilityContext()
{
  return 0;
}

id variable initialization expression of EnvironmentMonitorObserver.environmentMonitor()
{
  return objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
}

uint64_t variable initialization expression of ExplicitRestrictionsController.symbol()
{
  uint64_t v0;

  if (qword_10048CF40 != -1)
    swift_once(&qword_10048CF40, sub_1001F12D4);
  v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t variable initialization expression of LaunchURL.Resolver.logger()
{
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000012, 0x80000001003ACFB0);
}

uint64_t sub_10000BF84(uint64_t a1, uint64_t a2)
{
  return sub_10000D2EC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

void sub_10000BFA4(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10000BFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

BOOL sub_10000BFC4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10000BFF4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_10000C008@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_10000C01C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_10000C030(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_10000C044(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_10000C058(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_10000C06C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10000C078@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id UIView.Shadow.color.getter()
{
  id *v0;

  return *v0;
}

_QWORD *sub_10000C088@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

_QWORD *sub_10000C098@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_10000C0AC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_10000C0C0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10000C0EC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_10000C110(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_10000C124@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10000C138(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_10000C14C()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_10000C15C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

void sub_10000C170(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_10000C178@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_10000C18C(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_10000C1BC(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_10000C1D0(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

unsigned __int8 *sub_10000C1E4@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10000C1F4(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_10000C200(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_10000C274(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_10000C2F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_10000C330(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D730, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038641C);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000C370(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D730, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038641C);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000C3B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000C3F0(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100386E3C, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_10000C42C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100386E3C, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_10000C474(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  WitnessTable = swift_getWitnessTable(&unk_100386E3C, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

uint64_t sub_10000C4CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100386E3C, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

BOOL sub_10000C518(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_10000C530(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10000C53C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerEnqueueErrorDomain);
}

uint64_t sub_10000C54C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000C58C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000C5CC(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10000C630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000C684()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlayerRequestErrorDomain);
}

uint64_t sub_10000C694(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000C6D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000C714(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10000C778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000C7C8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
}

uint64_t sub_10000C7D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000C818(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000C858(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10000C8BC()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10000C8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_10000C940()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(MPCMusicBehaviorErrorDomain);
}

uint64_t sub_10000C950(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_10000C990(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_10000C9D0(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_10000CA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000CA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_10000CAE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10000D4C0(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

_DWORD *sub_10000CB1C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_10000CB28(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_10000CB38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924((unint64_t *)&qword_1004932E0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100386F78);
  v3 = sub_100006924(&qword_10048D760, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100386860);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000CBBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_10048D788, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1003862A4);
  v3 = sub_100006924(&qword_10048D790, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100386244);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000CC40@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10000CC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_10048D4A0, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100385808);
  v3 = sub_100006924(&qword_10048D4A8, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003857B0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000CCEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_10048D490, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100385C4C);
  v3 = sub_100006924(&qword_10048D498, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100385BF4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000CD70(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D708, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100386548);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000CDB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D708, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100386548);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000CDF0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000CE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000CE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000CEE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6C0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003869F4);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000CF20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6C0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003869F4);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000CF60(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000CFF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D658, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386C70);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000D038(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D658, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386C70);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10000D078(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_10000D0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_10000D110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924((unint64_t *)&qword_10048D778, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100386FBC);
  v3 = sub_100006924(&qword_10048D780, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003865F4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_10048D768, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100386768);
  v3 = sub_100006924(&qword_10048D770, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100386708);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D218@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_10000D25C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_10048D480, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100385DC4);
  v3 = sub_100006924(&qword_10048D488, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100385D6C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000D2E0(uint64_t a1, uint64_t a2)
{
  return sub_10000D2EC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10000D2EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_10000D328(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10000D368()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v0);
  v3 = v2;
  Hasher.init(_seed:)(v6);
  String.hash(into:)(v6, v1, v3);
  v4 = Hasher._finalize()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_10000D3D8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

_BYTE *sub_10000D460@<X0>(_QWORD *a1@<X8>)
{
  _BYTE *v1;

  return sub_1000C3860(v1, a1);
}

unint64_t sub_10000D478()
{
  unint64_t result;

  result = qword_10048D060;
  if (!qword_10048D060)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10048D060);
  }
  return result;
}

uint64_t sub_10000D4C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC9MusicCoreP33_77107B98A7172A040C127BED6BB4A6AC12BundleFinder);
}

{
  return objc_opt_self(_TtC11MusicCoreUIP33_78477A7C4507C6B926161B408121F9AD12BundleFinder);
}

void type metadata accessor for ErrorCorrectionLevel(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D2E0, (uint64_t)&unk_10043F310);
}

__n128 initializeWithTake for ActionSupportedStatus(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D2E8, (uint64_t)&unk_10043F388);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D2F0, (uint64_t)&unk_10043F3B0);
}

void type metadata accessor for MSVAutoBugCaptureDomain(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D2F8, (uint64_t)&unk_10043F3E0);
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D300, (uint64_t)&unk_10043F408);
}

uint64_t sub_10000D58C(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_10000D5D0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D308, (uint64_t)&unk_10043F480);
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D310, (uint64_t)&unk_10043F4A8);
}

void type metadata accessor for ICPrivacyIdentifier(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D318, (uint64_t)&unk_10043F4C8);
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D320, (uint64_t)&unk_10043F4F0);
}

void type metadata accessor for ICMusicSubscriptionStatusType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D328, (uint64_t)&unk_10043F510);
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D330, (uint64_t)&unk_10043F530);
}

void type metadata accessor for FeedbackType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D338, (uint64_t)&unk_10043F558);
}

uint64_t getEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VenueElement.Attributes.Geo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MPCPlayerRequestTracklistRange(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D340, (uint64_t)&unk_10043F5D0);
}

void type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D348, (uint64_t)&unk_10043F5F8);
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D350, (uint64_t)&unk_10043F618);
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D358, (uint64_t)&unk_10043F638);
}

void type metadata accessor for ICURLBagKey(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D360, (uint64_t)&unk_10043F658);
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D368, (uint64_t)&unk_10043F680);
}

void type metadata accessor for MPCPlayerTracklistReplaceIntent(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D370, (uint64_t)&unk_10043F6A8);
}

void type metadata accessor for MPCPlaybackIntentOptions(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D378, (uint64_t)&unk_10043F6C8);
}

void type metadata accessor for MPCPlaybackIntentRepeatMode(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D380, (uint64_t)&unk_10043F6F0);
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D388, (uint64_t)&unk_10043F710);
}

void type metadata accessor for MPCExplicitContentAuthorizationReason(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D390, (uint64_t)&unk_10043F730);
}

__n128 _s12EditPlaylistO7ContextVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.ShapeChange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D398, (uint64_t)&unk_10043F7A8);
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D3A0, (uint64_t)&unk_10043F7D0);
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D3A8, (uint64_t)&unk_10043F7F8);
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D3B0, (uint64_t)&unk_10043F818);
}

uint64_t sub_10000D864()
{
  return sub_100006924(&qword_10048D3B8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_1003851E8);
}

uint64_t sub_10000D890()
{
  return sub_100006924(&qword_10048D3C0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)"Ѫ\v");
}

uint64_t sub_10000D8BC()
{
  return sub_100006924(&qword_10048D3C8, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100385210);
}

uint64_t sub_10000D8E8()
{
  return sub_100006924(&qword_10048D3D0, (uint64_t (*)(uint64_t))type metadata accessor for MPMediaLibraryFilteringOptions, (uint64_t)&unk_100385248);
}

uint64_t sub_10000D914()
{
  return sub_100006924(&qword_10048D3D8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100385400);
}

uint64_t sub_10000D940()
{
  return sub_100006924(&qword_10048D3E0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_1003853CC);
}

uint64_t sub_10000D96C()
{
  return sub_100006924(&qword_10048D3E8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_10038542C);
}

uint64_t sub_10000D998()
{
  return sub_100006924(&qword_10048D3F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlaybackIntentOptions, (uint64_t)&unk_100385468);
}

uint64_t sub_10000D9C4()
{
  return sub_100006924(&qword_10048D3F8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003855E0);
}

uint64_t sub_10000D9F0()
{
  return sub_100006924(&qword_10048D400, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_1003855AC);
}

uint64_t sub_10000DA1C()
{
  return sub_100006924(&qword_10048D408, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_10038560C);
}

uint64_t sub_10000DA48()
{
  return sub_100006924(&qword_10048D410, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerChangeRequestOptions, (uint64_t)&unk_100385648);
}

uint64_t sub_10000DA74()
{
  return sub_100006924(&qword_10048D418, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100385778);
}

uint64_t sub_10000DAA0()
{
  return sub_100006924(&qword_10048D420, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_100385750);
}

uint64_t sub_10000DACC()
{
  return sub_100006924(&qword_10048D428, (uint64_t (*)(uint64_t))type metadata accessor for ICURLBagKey, (uint64_t)&unk_1003857E0);
}

uint64_t sub_10000DAF8()
{
  return sub_100006924(&qword_10048D430, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_10038596C);
}

uint64_t sub_10000DB24()
{
  return sub_100006924(&qword_10048D438, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_10038593C);
}

uint64_t sub_10000DB50()
{
  return sub_100006924(&qword_10048D440, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_100385994);
}

uint64_t sub_10000DB7C()
{
  return sub_100006924(&qword_10048D448, (uint64_t (*)(uint64_t))type metadata accessor for ICMusicSubscriptionStatusCapabilities, (uint64_t)&unk_1003859CC);
}

uint64_t sub_10000DBA8()
{
  return sub_100006924(&qword_10048D450, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100385BBC);
}

uint64_t sub_10000DBD4()
{
  return sub_100006924(&qword_10048D458, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100385B94);
}

uint64_t sub_10000DC00()
{
  return sub_100006924(&qword_10048D460, (uint64_t (*)(uint64_t))type metadata accessor for ICPrivacyIdentifier, (uint64_t)&unk_100385C24);
}

uint64_t sub_10000DC2C()
{
  return sub_100006924(&qword_10048D468, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100385D34);
}

uint64_t sub_10000DC58()
{
  return sub_100006924(&qword_10048D470, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100385D0C);
}

uint64_t sub_10000DC84()
{
  return sub_100006924(&qword_10048D478, (uint64_t (*)(uint64_t))type metadata accessor for MSVAutoBugCaptureDomain, (uint64_t)&unk_100385D9C);
}

uint64_t sub_10000DCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000DCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000DD40(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10048D510);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D520, (uint64_t)&unk_10043F840);
}

void type metadata accessor for MPCMusicBehaviorError(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D528, (uint64_t)&unk_10043F868);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D530, (uint64_t)&unk_10043F890);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D538, (uint64_t)&unk_10043F8B0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D540, (uint64_t)&unk_10043F8D0);
}

void type metadata accessor for MPModelCuratorKind(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D548, (uint64_t)&unk_10043F900);
}

void type metadata accessor for MPCSharedListeningSessionEventKind(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D550, (uint64_t)&unk_10043F920);
}

void type metadata accessor for MPCSharedListeningPlaybackEventKind(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D558, (uint64_t)&unk_10043F940);
}

void type metadata accessor for MPCSharedListeningEventType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D560, (uint64_t)&unk_10043F960);
}

void type metadata accessor for MPCError(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D568, (uint64_t)&unk_10043F980);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D570, (uint64_t)&unk_10043F9A8);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D578, (uint64_t)&unk_10043F9D0);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D580, (uint64_t)&unk_10043F9F8);
}

uint64_t _s13ReportConcernO7ContextVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 _s12AddToLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10000DEC8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10000DEE8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D588, (uint64_t)&unk_10043FA78);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D590, (uint64_t)&unk_10043FAB0);
}

void type metadata accessor for MPCPlayerEnqueueError(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D598, (uint64_t)&unk_10043FAE0);
}

void type metadata accessor for MPCPlayerRequestError(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D5A0, (uint64_t)&unk_10043FB08);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D5A8, (uint64_t)&unk_10043FB30);
}

_QWORD *initializeBufferWithCopyOfBuffer for CloudLibrary.UpdateContext(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s29CompressionResistancePriorityVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s29CompressionResistancePriorityVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D5B0, (uint64_t)&unk_10043FBB0);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D5B8, (uint64_t)&unk_10043FC30);
}

uint64_t sub_10000E000()
{
  return sub_100006924(&qword_10048D5C0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100386208);
}

uint64_t sub_10000E02C()
{
  return sub_100006924(&qword_10048D5C8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)"ś\v");
}

uint64_t sub_10000E058()
{
  return sub_100006924(&qword_10048D5D0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_100386278);
}

uint64_t sub_10000E084()
{
  return sub_100006924(&qword_10048D5D8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100386334);
}

uint64_t sub_10000E0B0()
{
  return sub_100006924(&qword_10048D5E0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_100386360);
}

uint64_t sub_10000E0DC()
{
  return sub_100006924(&qword_10048D5E8, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100386460);
}

uint64_t sub_10000E108()
{
  return sub_100006924(&qword_10048D5F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_10038648C);
}

uint64_t sub_10000E134()
{
  return sub_100006924(&qword_10048D5F8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1003865B8);
}

uint64_t sub_10000E160()
{
  return sub_100006924(&qword_10048D600, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10038658C);
}

uint64_t sub_10000E18C()
{
  return sub_100006924(&qword_10048D608, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003866CC);
}

uint64_t sub_10000E1B8()
{
  return sub_100006924(&qword_10048D610, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1003866A0);
}

uint64_t sub_10000E1E4()
{
  return sub_100006924(&qword_10048D618, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_10038673C);
}

uint64_t sub_10000E210()
{
  return sub_100006924(&qword_10048D620, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100386824);
}

uint64_t sub_10000E23C()
{
  return sub_100006924(&qword_10048D628, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1003867F8);
}

uint64_t sub_10000E268()
{
  return sub_100006924(&qword_10048D630, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10038690C);
}

uint64_t sub_10000E294()
{
  return sub_100006924(&qword_10048D638, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386938);
}

uint64_t sub_10000E2C0()
{
  return sub_100006924(&qword_10048D640, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100386A48);
}

uint64_t sub_10000E2EC()
{
  return sub_100006924(&qword_10048D648, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386B88);
}

uint64_t sub_10000E318()
{
  return sub_100006924(&qword_10048D650, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386BB4);
}

uint64_t sub_10000E344()
{
  return sub_100006924(&qword_10048D658, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386C70);
}

uint64_t sub_10000E370()
{
  return sub_100006924(&qword_10048D660, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386C3C);
}

uint64_t sub_10000E39C()
{
  return sub_100006924(&qword_10048D668, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386BF8);
}

uint64_t sub_10000E3C8()
{
  return sub_100006924(&qword_10048D670, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100386D5C);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
  sub_1000068B4(a1, (unint64_t *)&unk_10048D7A0, (uint64_t)&unk_10043FC78);
}

uint64_t sub_10000E408()
{
  return sub_100006924(&qword_10048D678, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100386D20);
}

unint64_t sub_10000E438()
{
  unint64_t result;

  result = qword_10048D680;
  if (!qword_10048D680)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10048D680);
  }
  return result;
}

uint64_t sub_10000E47C()
{
  return sub_100006924(&qword_10048D688, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_100386D98);
}

uint64_t sub_10000E4A8()
{
  return sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
}

uint64_t sub_10000E4D4()
{
  return sub_100006924(&qword_10048D698, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100386B20);
}

uint64_t sub_10000E500()
{
  return sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
}

uint64_t sub_10000E52C()
{
  return sub_100006924(&qword_10048D6A8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100386AB8);
}

uint64_t sub_10000E558()
{
  return sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
}

uint64_t sub_10000E584()
{
  return sub_100006924(&qword_10048D6B8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100386A74);
}

uint64_t sub_10000E5B0()
{
  return sub_100006924(&qword_10048D6C0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003869F4);
}

uint64_t sub_10000E5DC()
{
  return sub_100006924(&qword_10048D6C8, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_1003869C0);
}

uint64_t sub_10000E608()
{
  return sub_100006924(&qword_10048D6D0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_10038697C);
}

uint64_t sub_10000E634()
{
  return sub_100006924(&qword_10048D6D8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100386F10);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_1000068B4(a1, &qword_10048D798, (uint64_t)&unk_10043FC58);
}

uint64_t sub_10000E674()
{
  return sub_100006924(&qword_10048D6E0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100386ED4);
}

uint64_t sub_10000E6A0()
{
  return sub_100006924(&qword_10048D6E8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_100386F4C);
}

uint64_t sub_10000E6CC()
{
  return sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
}

uint64_t sub_10000E6F8()
{
  return sub_100006924(&qword_10048D6F8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100386894);
}

uint64_t sub_10000E724()
{
  return sub_100006924(&qword_10048D700, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100386628);
}

uint64_t sub_10000E750()
{
  return sub_100006924(&qword_10048D708, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100386548);
}

uint64_t sub_10000E77C()
{
  return sub_100006924(&qword_10048D710, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100386514);
}

uint64_t sub_10000E7A8()
{
  return sub_100006924(&qword_10048D718, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_1003864D0);
}

uint64_t sub_10000E7D4()
{
  return sub_100006924(&qword_10048D720, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100386E00);
}

uint64_t sub_10000E800()
{
  return sub_100006924(&qword_10048D728, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100386AE4);
}

uint64_t sub_10000E82C()
{
  return sub_100006924(&qword_10048D730, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038641C);
}

uint64_t sub_10000E858()
{
  return sub_100006924(&qword_10048D738, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003863E8);
}

uint64_t sub_10000E884()
{
  return sub_100006924(&qword_10048D740, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_1003863A4);
}

uint64_t sub_10000E8B0()
{
  return sub_100006924(&qword_10048D748, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100386DC4);
}

uint64_t sub_10000E8DC()
{
  return sub_100006924((unint64_t *)&unk_10048D750, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100386B4C);
}

uint64_t static Actions.ReportConcern.action(context:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 6);
  *(_BYTE *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v3;
  v5 = *((_OWORD *)a1 + 1);
  v7 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v4;
  *(_BYTE *)(a2 + 56) = v2;
  *(_QWORD *)(a2 + 64) = sub_10000EA14;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0x4014000000000000;
  *(_QWORD *)(a2 + 88) = &unk_10048D8D0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = &unk_10048D8D8;
  *(_QWORD *)(a2 + 112) = 0;
  swift_retain(v5);
  swift_retain(v7);
  return swift_retain(v4);
}

uint64_t sub_10000EA14(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t sub_10000EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 24);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000EA88;
  return v6();
}

uint64_t sub_10000EA88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *(_QWORD *)(v4 + 16);
  v2 = *v0;
  v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10000EAD0(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 40);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5();
}

uint64_t (*Actions.ReportConcern.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_10043FF18, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001003AD0E0;
  v1 = swift_allocObject(&unk_10043FF40, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001003AD0E0;
  return sub_10000F228;
}

uint64_t (*sub_10000EBAC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440068, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000016;
  *(_QWORD *)(v0 + 24) = 0x80000001003AD0E0;
  v1 = swift_allocObject(&unk_100440090, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000016;
  *(_QWORD *)(v1 + 24) = 0x80000001003AD0E0;
  return sub_10000F88C;
}

uint64_t Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;

  v16 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (*(_QWORD *)(v16 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_10043FF68, v20 + 16, v17 | 7);
  result = sub_10000F3EC(a11, v21 + v18);
  v23 = (_QWORD *)(v21 + v19);
  *v23 = a1;
  v23[1] = a2;
  v24 = (_QWORD *)(v21 + v20);
  *v24 = a3;
  v24[1] = a4;
  *(_BYTE *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a7;
  *(_QWORD *)(a9 + 24) = a8;
  *(_QWORD *)(a9 + 32) = a10;
  *(_QWORD *)(a9 + 40) = &unk_10048D8F0;
  *(_QWORD *)(a9 + 48) = v21;
  return result;
}

uint64_t sub_10000ED30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_100005574(&qword_10048D510);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D8E8);
  v5[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[20] = v9;
  v5[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10000EDE0, 0, 0);
}

uint64_t sub_10000EDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  sub_10000F76C(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 144), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 128);
    sub_10000F7B4(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 40) = v8;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100384A70;
    *(_BYTE *)(inited + 72) = 3;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_100033420(inited);
    *(_QWORD *)(v0 + 184) = v13;
    *(_QWORD *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v16);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_10000EF80, v17, v18);
  }
}

uint64_t sub_10000EF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v4 = *(uint64_t **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100033830(v7, v6, 5, 32, v5, v3, v2, v1, v8, v4);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  sub_100008758(v5, &qword_10048D510);
  return swift_task_switch(sub_10000F048, 0, 0);
}

uint64_t sub_10000F048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000F850(*(_QWORD *)(v0 + 168));
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO13ReportConcernO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x80000001003AD100);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10000F204()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000F228()
{
  uint64_t v0;

  return sub_10003D6DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

id sub_10000F230()
{
  uint64_t v0;

  return sub_10003D75C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10000F238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v12 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 16, v2 | 7);
}

uint64_t sub_10000F3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = v0 + v3;
  v7 = (uint64_t *)(v0 + v4);
  v8 = *v7;
  v9 = v7[1];
  v10 = v0 + v5;
  v11 = *(_QWORD *)(v0 + v5);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc(dword_10048D8E4);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000EA88;
  return sub_10000ED30(v6, v8, v9, v11, v12);
}

unint64_t sub_10000F4E8()
{
  unint64_t result;

  result = qword_10048D8F8;
  if (!qword_10048D8F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionType, &type metadata for ActionType);
    atomic_store(result, (unint64_t *)&qword_10048D8F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern()
{
  return &type metadata for Actions.ReportConcern;
}

uint64_t _s13ReportConcernO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[2]);
  swift_release(a1[4]);
  return swift_release(a1[6]);
}

uint64_t _s13ReportConcernO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

__n128 _s13ReportConcernO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13ReportConcernO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t _s13ReportConcernO7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ReportConcernO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern.Context()
{
  return &type metadata for Actions.ReportConcern.Context;
}

uint64_t sub_10000F76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10000F7F8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 3:
      return (void *)swift_bridgeObjectRelease(result);
    case 2:
      result = (void *)a2;
      return (void *)swift_bridgeObjectRelease(result);
    case 1:
      return sub_10000F824(result, a2, a3);
  }
  return result;
}

void *sub_10000F824(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a3);
  }
  return result;
}

uint64_t sub_10000F850(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Actions.AddToLibrary.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048D938;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048D940;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t sub_10000F930(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t sub_10000F950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000EA88;
  return v6();
}

uint64_t sub_10000F9A4(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 32);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5();
}

uint64_t Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)();
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)();
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t (**v42)();
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)();
  uint64_t v55;
  uint64_t v56;

  v52 = a4;
  v53 = a8;
  v49 = a7;
  v50 = a5;
  v55 = a2;
  v56 = a6;
  v51 = a3;
  v44 = a1;
  v54 = a9;
  v47 = a11;
  v48 = a12;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v45 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - v15;
  (*(void (**)(char *))(v12 + 16))((char *)&v43 - v15);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 40) & ~v17;
  v46 = v17 | 7;
  v19 = v13 + 7;
  v20 = (v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  v21 = (uint64_t (*)())swift_allocObject(&unk_1004400D0, v20 + 8, v17 | 7);
  *((_QWORD *)v21 + 2) = a10;
  *((_QWORD *)v21 + 3) = a11;
  *((_QWORD *)v21 + 4) = a12;
  v22 = (char *)v21 + v18;
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v22, v16, a10);
  *(_QWORD *)((char *)v21 + v20) = v55;
  v24 = v45;
  v23(v45, (char *)v44, a10);
  v25 = (v17 + 56) & ~v17;
  v26 = (v19 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 79) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (((v28 + 47) & 0xFFFFFFFFFFFFFFF8) + v30 + 40) & ~v30;
  v32 = (uint64_t (*)())swift_allocObject(&unk_1004400F8, v31 + *(_QWORD *)(v29 + 64), v46 | v30);
  v33 = v47;
  *((_QWORD *)v32 + 2) = a10;
  *((_QWORD *)v32 + 3) = v33;
  v34 = v56;
  *((_QWORD *)v32 + 4) = v48;
  *((_QWORD *)v32 + 5) = v34;
  v35 = (char *)v32 + v25;
  v36 = v49;
  *((_QWORD *)v32 + 6) = v49;
  v23(v35, v24, a10);
  v37 = v55;
  *(_QWORD *)((char *)v32 + v26) = v55;
  sub_1000149A8(v50, (uint64_t)v32 + v27, &qword_10048D950);
  sub_1000137C8(v51, (uint64_t)v32 + v28);
  sub_1000149A8(v52, (uint64_t)v32 + v44, &qword_10048D958);
  sub_1000149A8(v53, (uint64_t)v32 + v31, &qword_10048D8E8);
  v38 = swift_allocObject(&unk_100440120, 32, 7);
  v39 = v56;
  *(_QWORD *)(v38 + 16) = v56;
  *(_QWORD *)(v38 + 24) = v36;
  v40 = swift_allocObject(&unk_100440148, 32, 7);
  *(_QWORD *)(v40 + 16) = &unk_10048D970;
  *(_QWORD *)(v40 + 24) = v38;
  swift_unknownObjectRetain(v39);
  result = swift_retain(v37);
  v42 = v54;
  *v54 = sub_10000FF8C;
  v42[1] = v21;
  v42[2] = (uint64_t (*)())&unk_10048D960;
  v42[3] = v32;
  v42[4] = (uint64_t (*)())&unk_10048D980;
  v42[5] = (uint64_t (*)())v40;
  return result;
}

uint64_t sub_10000FC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v35 = a5;
  v36 = a2;
  v7 = type metadata accessor for MusicLibrary.AddAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100005574(&qword_10048D988);
  v31 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048D9F8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v14);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Album(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a3);
  v24 = swift_dynamicCast(v16, v19, a3, v20, 6);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v20);
    v27 = sub_100008758((uint64_t)v16, &qword_10048D9F8);
    goto LABEL_5;
  }
  v25(v16, 0, 1, v20);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v16, v20);
  v26 = Album.childrenAddStatus(_:)(v36);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  if (v26 != 1)
  {
LABEL_5:
    static MusicLibraryAction<>.add.getter(v27);
    v29 = v32;
    MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v10, a3, v32, v35, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v29);
    v28 = sub_100010480();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v34);
    return v28;
  }
  return 0;
}

uint64_t sub_10000FF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10000FF8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_10000FC8C((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t Album.childrenAddStatus(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD v59[4];
  uint64_t v60;

  v56 = a1;
  v1 = type metadata accessor for MusicLibrary.AddAction(0);
  v54 = *(_QWORD *)(v1 - 8);
  v55 = v1;
  __chkstk_darwin(v1);
  v53 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100005574(&qword_10048D988);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v58 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Track(0);
  v57 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v50 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v49 = (char *)&v45 - v8;
  v9 = sub_100005574(&qword_10048D990);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_100005574(&qword_10048D998);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10048D9A0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v45 - v24;
  Album.tracks.getter(v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_100008758((uint64_t)v17, &qword_10048D998);
    return 0;
  }
  v48 = v14;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  v26 = sub_100014B3C((unint64_t *)&qword_10048D9A8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v18);
  dispatch thunk of Collection.endIndex.getter(&v60, v18, v26);
  if (v59[0] == v60)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    return 0;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v47 = v19;
  v46(v12, v25, v18);
  v45 = v25;
  dispatch thunk of Collection.startIndex.getter(v18);
  *(_QWORD *)&v12[*(int *)(v9 + 36)] = v59[0];
  v28 = (uint64_t)v48;
  sub_1000149A8((uint64_t)v12, (uint64_t)v48, &qword_10048D990);
  v29 = (uint64_t *)(v28 + *(int *)(v9 + 36));
  v30 = v57;
  v31 = v50;
  while (1)
  {
    v32 = *v29;
    dispatch thunk of Collection.endIndex.getter(v59, v18, v26);
    if (v32 == v59[0])
      break;
    v33 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v59, v29, v18, v26);
    v34 = v49;
    (*(void (**)(char *))(v30 + 16))(v49);
    v33(v59, 0);
    v46(v22, (char *)v28, v18);
    dispatch thunk of Collection.formIndex(after:)(v29, v18, v26);
    v35 = *(void (**)(char *, uint64_t))(v47 + 8);
    v35(v22, v18);
    v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v31, v34, v5);
    v37 = v53;
    static MusicLibraryAction<>.add.getter(v36);
    v38 = v55;
    MusicLibrary.supportedStatus<A, B>(for:action:)(v31, v37, v5, v55, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
    v39 = v37;
    v40 = v58;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v38);
    v41 = sub_100010480();
    v43 = v42;
    v44 = v40;
    v30 = v57;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v52);
    sub_10001406C(v41, v43);
    v28 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v5);
    if (v43 == 1)
    {
      sub_100008758(v28, &qword_10048D990);
      v35(v45, v18);
      return 1;
    }
  }
  sub_100008758(v28, &qword_10048D990);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v18);
  return 2;
}

BOOL static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_100010480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  int v28;
  int v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v32 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - v5;
  v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v32 - v12;
  v14 = sub_100005574(&qword_10048D988);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v19 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      v28 = v19;
      v26 = 0xD000000000000010;
      if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return 0xD000000000000012;
      }
      else
      {
        v29 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
        v30 = *(void (**)(char *, uint64_t))(v8 + 8);
        v30(v13, v7);
        if (v28 != v29)
        {
          v26 = 0x206E776F6E6B6E55;
          v30(v11, v7);
        }
      }
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v6, v11, v2);
    v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v33, v6, v2);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v2);
    if (v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v34 = 0;
      v35 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(v35);
      v34 = 0xD000000000000016;
      v35 = 0x80000001003AD170;
      v23 = sub_100014A3C(&qword_10048D9E8, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v23);
      object = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(object);
      v26 = v34;
      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v27(v21, v2);
      return v26;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 0;
  }
  if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+AddToLibrary.swift", 36, 2, 158, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000108F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v8[81] = v33;
  v8[80] = v32;
  v8[79] = v31;
  v8[78] = a8;
  v8[77] = a7;
  v8[76] = a6;
  v8[75] = a5;
  v8[74] = a4;
  v8[73] = a3;
  v8[72] = a2;
  v8[71] = a1;
  v9 = sub_100005574(&qword_10048D510);
  v8[82] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D8E8);
  v8[83] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Actions.MetricsReportingContext(0);
  v8[84] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[85] = v12;
  v8[86] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice.Variant(0);
  v8[87] = v13;
  v8[88] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[89] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[90] = v15;
  v8[91] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574(&qword_10048D9F0);
  v8[92] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[93] = swift_task_alloc(v17);
  v8[94] = swift_task_alloc(v17);
  v18 = type metadata accessor for MusicLibrary.AddAction(0);
  v8[95] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[96] = v19;
  v8[97] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048D988);
  v8[98] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[99] = v21;
  v8[100] = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100005574(&qword_10048D998);
  v8[101] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D9A0);
  v8[102] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v8[103] = v24;
  v8[104] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005574(&qword_10048D9F8);
  v8[105] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v25 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v31 - 8);
  v8[106] = v26;
  v8[107] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v8[108] = v27;
  v28 = *(_QWORD *)(v27 - 8);
  v8[109] = v28;
  v8[110] = swift_task_alloc((*(_QWORD *)(v28 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048DA00) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[111] = swift_task_alloc(v29);
  v8[112] = swift_task_alloc(v29);
  v8[113] = swift_task_alloc(v29);
  v8[114] = swift_task_alloc(v29);
  v8[115] = swift_task_alloc(v29);
  v8[116] = swift_task_alloc(v29);
  v8[117] = swift_task_alloc(v29);
  return swift_task_switch(sub_100010BD0, 0, 0);
}

uint64_t sub_100010BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  char v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD, uint64_t);
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  void (*v96)(uint64_t, uint64_t);
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  void (*v110)(uint64_t, uint64_t);
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t WitnessTable;
  uint64_t v130;
  uint64_t v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t inited;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  __int16 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v174;

  if (*(_QWORD *)(v0 + 568))
  {
    v1 = *(_QWORD *)(v0 + 576);
    *(_QWORD *)(v0 + 944) = swift_getObjectType();
    *(_BYTE *)(v0 + 516) = 0;
    *(_QWORD *)(v0 + 952) = *(_QWORD *)(v1 + 8);
    v2 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 960) = static MainActor.shared.getter(v2);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
    v5 = v4;
    v6 = sub_1000119F8;
    return swift_task_switch(v6, v3, v5);
  }
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v8 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100387258);
  v10 = swift_getKeyPath(&unk_100387280);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v8, KeyPath, v10);
  swift_release(v10);
  swift_release(KeyPath);
  v11 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 88);
  v15 = *(void **)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  if ((v11 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_100014974(v0 + 472);
    v18 = *(_QWORD *)(v0 + 928);
    v19 = *(_QWORD *)(v0 + 920);
    v20 = *(_QWORD *)(v0 + 912);
    v21 = *(_QWORD *)(v0 + 904);
    v22 = *(_QWORD *)(v0 + 896);
    v23 = *(_QWORD *)(v0 + 888);
    v24 = *(_QWORD *)(v0 + 880);
    v25 = *(_QWORD *)(v0 + 856);
    v26 = *(_QWORD *)(v0 + 840);
    v158 = *(_QWORD *)(v0 + 832);
    v159 = *(_QWORD *)(v0 + 808);
    v160 = *(_QWORD *)(v0 + 800);
    v161 = *(_QWORD *)(v0 + 776);
    v162 = *(_QWORD *)(v0 + 752);
    v163 = *(_QWORD *)(v0 + 744);
    v164 = *(_QWORD *)(v0 + 728);
    v165 = *(_QWORD *)(v0 + 704);
    v167 = *(_QWORD *)(v0 + 688);
    v169 = *(_QWORD *)(v0 + 664);
    v172 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v163);
    swift_task_dealloc(v164);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v172);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v27 = *(_QWORD *)(v0 + 872);
  v28 = *(_QWORD *)(v0 + 864);
  v29 = *(_QWORD *)(v0 + 856);
  v30 = *(_QWORD *)(v0 + 848);
  v31 = *(_QWORD *)(v0 + 840);
  v32 = *(_QWORD *)(v0 + 632);
  v33 = *(_QWORD *)(v0 + 584);
  v173 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v173(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  *(_QWORD *)(v0 + 968) = v34;
  v34(v29, v33, v32);
  v35 = swift_dynamicCast(v31, v29, v32, v28, 6);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  if ((v35 & 1) == 0)
  {
    v47 = *(_QWORD *)(v0 + 840);
    v36(v47, 1, 1, *(_QWORD *)(v0 + 864));
    v48 = (uint64_t *)&unk_10048D9F8;
    goto LABEL_13;
  }
  v37 = *(_QWORD *)(v0 + 880);
  v38 = *(_QWORD *)(v0 + 872);
  v39 = *(_QWORD *)(v0 + 864);
  v40 = *(_QWORD *)(v0 + 840);
  v41 = *(_QWORD *)(v0 + 592);
  v36(v40, 0, 1, v39);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v37, v40, v39);
  v42 = Album.childrenAddStatus(_:)(v41);
  v43 = *(_QWORD *)(v0 + 880);
  if (v42 != 1)
  {
    v49 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v43, *(_QWORD *)(v0 + 864));
    goto LABEL_15;
  }
  v44 = *(_QWORD *)(v0 + 824);
  v45 = *(_QWORD *)(v0 + 816);
  v46 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v46, 1, v45) == 1)
  {
    v47 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v48 = &qword_10048D998;
LABEL_13:
    v49 = sub_100008758(v47, v48);
LABEL_15:
    v50 = *(_QWORD *)(v0 + 920);
    v51 = *(_QWORD *)(v0 + 800);
    v166 = *(_QWORD *)(v0 + 792);
    v168 = *(_QWORD *)(v0 + 784);
    v170 = *(_QWORD *)(v0 + 936);
    v52 = *(_QWORD *)(v0 + 776);
    v53 = *(_QWORD *)(v0 + 768);
    v54 = *(_QWORD *)(v0 + 760);
    v55 = *(_QWORD *)(v0 + 648);
    v56 = *(_QWORD *)(v0 + 632);
    v57 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v49);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v57, v52, v56, v54, v55, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v50);
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v51, v168);
    sub_100008758(v170, &qword_10048DA00);
    sub_1000149A8(v50, v170, &qword_10048DA00);
    goto LABEL_16;
  }
  v130 = *(_QWORD *)(v0 + 832);
  v131 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v130, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v174 = (char *)_swiftEmptyArrayStorage;
  swift_retain(v131);
  LOBYTE(v130) = sub_1000146AC(v130, v131, &v174);
  v132 = swift_release(v131);
  if ((v130 & 1) != 0)
  {
    v133 = *(_QWORD *)(v0 + 880);
    v134 = *(_QWORD *)(v0 + 872);
    v135 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v132);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
    v136 = v174;
  }
  else
  {
    v136 = v174;
    if (*((_QWORD *)v174 + 2))
    {
      (*(void (**)(_QWORD, char *, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), &v174[(*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)], *(_QWORD *)(v0 + 712), v132);
      v149 = 0;
    }
    else
    {
      v149 = 1;
    }
    v150 = *(_QWORD *)(v0 + 936);
    v151 = *(_QWORD *)(v0 + 928);
    v152 = *(_QWORD *)(v0 + 880);
    v153 = *(_QWORD *)(v0 + 872);
    v154 = *(_QWORD *)(v0 + 864);
    v155 = *(_QWORD *)(v0 + 832);
    v156 = *(_QWORD *)(v0 + 824);
    v157 = *(_QWORD *)(v0 + 816);
    v173(v151, v149, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v155, v157);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
    sub_100008758(v150, &qword_10048DA00);
    sub_1000149A8(v151, v150, &qword_10048DA00);
  }
  swift_bridgeObjectRelease(v136);
LABEL_16:
  v58 = *(_QWORD *)(v0 + 936);
  v59 = *(_QWORD *)(v0 + 912);
  v60 = *(_QWORD *)(v0 + 752);
  v61 = *(_QWORD *)(v0 + 736);
  v62 = *(_QWORD *)(v0 + 720);
  v63 = *(_QWORD *)(v0 + 712);
  v64 = *(void (**)(uint64_t, _QWORD, uint64_t))(v62 + 104);
  v64(v59, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v63);
  v173(v59, 0, 1, v63);
  v65 = v60 + *(int *)(v61 + 48);
  sub_100014A7C(v58, v60, &qword_10048DA00);
  sub_100014A7C(v59, v65, &qword_10048DA00);
  v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v66(v60, 1, v63) == 1)
  {
    v67 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 912), &qword_10048DA00);
    if (v66(v65, 1, v67) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 752), &qword_10048DA00);
LABEL_31:
      sub_100014A7C(*(_QWORD *)(v0 + 600), v0 + 288, &qword_10048D950);
      if (*(_QWORD *)(v0 + 344) == 1)
      {
        v97 = *(_QWORD **)(v0 + 608);
        sub_100008758(v0 + 288, &qword_10048D950);
        v98 = v97[3];
        *(_QWORD *)(v0 + 976) = v98;
        *(_QWORD *)(v0 + 984) = v97[4];
        *(_QWORD *)(v0 + 992) = sub_10000ABC8(v97, v98);
        v99 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v99);
        v3 = dispatch thunk of Actor.unownedExecutor.getter(v99, &protocol witness table for MainActor);
        v5 = v100;
        v6 = sub_100012840;
        return swift_task_switch(v6, v3, v5);
      }
      sub_100014AC0(v0 + 288, v0 + 216);
      v101 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1016) = v101;
      *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v101);
      v102 = dispatch thunk of Actor.unownedExecutor.getter(v101, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 1032) = v102;
      *(_QWORD *)(v0 + 1040) = v103;
      return swift_task_switch(sub_100012924, v102, v103);
    }
    goto LABEL_21;
  }
  v68 = *(_QWORD *)(v0 + 712);
  sub_100014A7C(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_10048DA00);
  v69 = v66(v65, 1, v68);
  v70 = *(_QWORD *)(v0 + 912);
  v71 = *(_QWORD *)(v0 + 904);
  if (v69 == 1)
  {
    v72 = *(_QWORD *)(v0 + 720);
    v73 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 912), &qword_10048DA00);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
LABEL_21:
    sub_100008758(*(_QWORD *)(v0 + 752), &qword_10048D9F0);
    goto LABEL_22;
  }
  v171 = *(_QWORD *)(v0 + 752);
  v91 = *(_QWORD *)(v0 + 728);
  v92 = *(_QWORD *)(v0 + 720);
  v93 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v91, v65, v93);
  v94 = sub_100014A3C(&qword_10048DA08, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v95 = dispatch thunk of static Equatable.== infix(_:_:)(v71, v91, v93, v94);
  v96 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v96(v91, v93);
  sub_100008758(v70, &qword_10048DA00);
  v96(v71, v93);
  sub_100008758(v171, &qword_10048DA00);
  if ((v95 & 1) != 0)
    goto LABEL_31;
LABEL_22:
  v74 = *(_QWORD *)(v0 + 936);
  v75 = *(_QWORD *)(v0 + 896);
  v76 = *(_QWORD *)(v0 + 744);
  v77 = *(_QWORD *)(v0 + 712);
  v64(v75, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v77);
  v173(v75, 0, 1, v77);
  v78 = v76 + *(int *)(v61 + 48);
  sub_100014A7C(v74, v76, &qword_10048DA00);
  sub_100014A7C(v75, v78, &qword_10048DA00);
  if (v66(v76, 1, v77) == 1)
  {
    v79 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 896), &qword_10048DA00);
    if (v66(v78, 1, v79) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 744), &qword_10048DA00);
LABEL_35:
      v111 = *(_QWORD **)(v0 + 608);
      v112 = v111[3];
      *(_QWORD *)(v0 + 1072) = v112;
      *(_QWORD *)(v0 + 1080) = v111[4];
      *(_QWORD *)(v0 + 1088) = sub_10000ABC8(v111, v112);
      v113 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v113);
      v3 = dispatch thunk of Actor.unownedExecutor.getter(v113, &protocol witness table for MainActor);
      v5 = v114;
      v6 = sub_100012C08;
      return swift_task_switch(v6, v3, v5);
    }
    goto LABEL_27;
  }
  v80 = *(_QWORD *)(v0 + 712);
  sub_100014A7C(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_10048DA00);
  v81 = v66(v78, 1, v80);
  v82 = *(_QWORD *)(v0 + 896);
  v83 = *(_QWORD *)(v0 + 888);
  if (v81 == 1)
  {
    v84 = *(_QWORD *)(v0 + 720);
    v85 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 896), &qword_10048DA00);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
LABEL_27:
    sub_100008758(*(_QWORD *)(v0 + 744), &qword_10048D9F0);
    goto LABEL_28;
  }
  v104 = *(_QWORD *)(v0 + 744);
  v105 = *(_QWORD *)(v0 + 728);
  v106 = *(_QWORD *)(v0 + 720);
  v107 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v105, v78, v107);
  v108 = sub_100014A3C(&qword_10048DA08, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v109 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v105, v107, v108);
  v110 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
  v110(v105, v107);
  sub_100008758(v82, &qword_10048DA00);
  v110(v83, v107);
  sub_100008758(v104, &qword_10048DA00);
  if ((v109 & 1) != 0)
    goto LABEL_35;
LABEL_28:
  sub_100014A7C(*(_QWORD *)(v0 + 616), v0 + 520, &qword_10048D958);
  v86 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v86;
  if (v86)
  {
    v87 = *(_QWORD *)(v0 + 704);
    v88 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_10000ABC8((_QWORD *)(v0 + 520), v86);
    swift_storeEnumTagMultiPayload(v87, v88, 7);
    v89 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v89);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v89, &protocol witness table for MainActor);
    v5 = v90;
    v6 = sub_100012E58;
    return swift_task_switch(v6, v3, v5);
  }
  sub_100008758(v0 + 520, &qword_10048D958);
  v115 = *(_QWORD *)(v0 + 680);
  v116 = *(_QWORD *)(v0 + 672);
  v117 = *(_QWORD *)(v0 + 664);
  sub_100014A7C(*(_QWORD *)(v0 + 624), v117, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v117, 1, v116) != 1)
  {
    v137 = *(_QWORD *)(v0 + 656);
    v138 = *(_QWORD *)(v0 + 632);
    sub_10000F7B4(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v138);
    *(_QWORD *)(v0 + 1152) = v139;
    v140 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 56))(v137, 1, 1, v140);
    v141 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v141, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v138);
    *(_QWORD *)(inited + 40) = v143;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 1168) = v144;
    *(_QWORD *)(v0 + 1176) = v145;
    *(_WORD *)(v0 + 514) = v146;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v147 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v147);
    v3 = dispatch thunk of Actor.unownedExecutor.getter(v147, &protocol witness table for MainActor);
    v5 = v148;
    v6 = sub_100013164;
    return swift_task_switch(v6, v3, v5);
  }
  sub_100008758(*(_QWORD *)(v0 + 664), &qword_10048D8E8);
  v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
  v119 = *(_QWORD *)(v0 + 848);
  v120 = *(_QWORD *)(v0 + 632);
  v121 = *(_QWORD *)(v0 + 584);
  v122 = sub_100123878(v120, v120);
  v123 = swift_allocObject(v122, ((*(unsigned __int8 *)(v119 + 80) + (unint64_t)*(unsigned int *)(v122 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72), *(unsigned __int8 *)(v119 + 80) | (unint64_t)*(unsigned __int16 *)(v122 + 52));
  v124 = static Array._adoptStorage(_:count:)(v123, 1);
  v118(v125, v121, v120);
  v126 = sub_10003001C(v124);
  *(_QWORD *)(v0 + 1192) = v126;
  *(_QWORD *)(v0 + 560) = v126;
  v127 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  *(_QWORD *)(v0 + 1200) = v127;
  v128 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v128);
  *v127 = v0;
  v127[1] = sub_100013358;
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v128, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
}

uint64_t sub_1000119F8()
{
  char *v0;
  void (*v1)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))*((_QWORD *)v0 + 119);
  v2 = *((_QWORD *)v0 + 118);
  v3 = *((_QWORD *)v0 + 72);
  swift_release(*((_QWORD *)v0 + 120));
  v4 = sub_10000F4E8();
  v1(v0 + 516, &type metadata for ActionType, v4, v2, v3);
  return swift_task_switch(sub_100011A78, 0, 0);
}

uint64_t sub_100011A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t);
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)();
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  void (*v93)(uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  void (*v107)(uint64_t, uint64_t);
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t WitnessTable;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t inited;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int16 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v171;

  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100387258);
  v3 = swift_getKeyPath(&unk_100387280);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(void **)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 128);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);

  if ((v4 & 0x200) == 0)
  {
    *(_QWORD *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(_BYTE *)(v0 + 512) = -1;
    _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 472);
    sub_100014974(v0 + 472);
    v11 = *(_QWORD *)(v0 + 928);
    v12 = *(_QWORD *)(v0 + 920);
    v13 = *(_QWORD *)(v0 + 912);
    v14 = *(_QWORD *)(v0 + 904);
    v15 = *(_QWORD *)(v0 + 896);
    v16 = *(_QWORD *)(v0 + 888);
    v17 = *(_QWORD *)(v0 + 880);
    v18 = *(_QWORD *)(v0 + 856);
    v19 = *(_QWORD *)(v0 + 840);
    v155 = *(_QWORD *)(v0 + 832);
    v156 = *(_QWORD *)(v0 + 808);
    v157 = *(_QWORD *)(v0 + 800);
    v158 = *(_QWORD *)(v0 + 776);
    v159 = *(_QWORD *)(v0 + 752);
    v160 = *(_QWORD *)(v0 + 744);
    v161 = *(_QWORD *)(v0 + 728);
    v162 = *(_QWORD *)(v0 + 704);
    v164 = *(_QWORD *)(v0 + 688);
    v166 = *(_QWORD *)(v0 + 664);
    v169 = *(_QWORD *)(v0 + 656);
    swift_task_dealloc(*(_QWORD *)(v0 + 936));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v162);
    swift_task_dealloc(v164);
    swift_task_dealloc(v166);
    swift_task_dealloc(v169);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v21 = *(_QWORD *)(v0 + 872);
  v22 = *(_QWORD *)(v0 + 864);
  v23 = *(_QWORD *)(v0 + 856);
  v24 = *(_QWORD *)(v0 + 848);
  v25 = *(_QWORD *)(v0 + 840);
  v26 = *(_QWORD *)(v0 + 632);
  v27 = *(_QWORD *)(v0 + 584);
  v170 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 56);
  v170(*(_QWORD *)(v0 + 936), 1, 1, *(_QWORD *)(v0 + 712));
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(_QWORD *)(v0 + 968) = v28;
  v28(v23, v27, v26);
  v29 = swift_dynamicCast(v25, v23, v26, v22, 6);
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v29 & 1) == 0)
  {
    v41 = *(_QWORD *)(v0 + 840);
    v30(v41, 1, 1, *(_QWORD *)(v0 + 864));
    v42 = (uint64_t *)&unk_10048D9F8;
    goto LABEL_10;
  }
  v31 = *(_QWORD *)(v0 + 880);
  v32 = *(_QWORD *)(v0 + 872);
  v33 = *(_QWORD *)(v0 + 864);
  v34 = *(_QWORD *)(v0 + 840);
  v35 = *(_QWORD *)(v0 + 592);
  v30(v34, 0, 1, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v34, v33);
  v36 = Album.childrenAddStatus(_:)(v35);
  v37 = *(_QWORD *)(v0 + 880);
  if (v36 != 1)
  {
    v43 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(v37, *(_QWORD *)(v0 + 864));
    goto LABEL_12;
  }
  v38 = *(_QWORD *)(v0 + 824);
  v39 = *(_QWORD *)(v0 + 816);
  v40 = *(_QWORD *)(v0 + 808);
  Album.tracks.getter(v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v39) == 1)
  {
    v41 = *(_QWORD *)(v0 + 808);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 872) + 8))(*(_QWORD *)(v0 + 880), *(_QWORD *)(v0 + 864));
    v42 = &qword_10048D998;
LABEL_10:
    v43 = sub_100008758(v41, v42);
LABEL_12:
    v44 = *(_QWORD *)(v0 + 920);
    v45 = *(_QWORD *)(v0 + 800);
    v163 = *(_QWORD *)(v0 + 792);
    v165 = *(_QWORD *)(v0 + 784);
    v167 = *(_QWORD *)(v0 + 936);
    v46 = *(_QWORD *)(v0 + 776);
    v47 = *(_QWORD *)(v0 + 768);
    v48 = *(_QWORD *)(v0 + 760);
    v49 = *(_QWORD *)(v0 + 648);
    v50 = *(_QWORD *)(v0 + 632);
    v51 = *(_QWORD *)(v0 + 584);
    static MusicLibraryAction<>.add.getter(v43);
    MusicLibrary.supportedStatus<A, B>(for:action:)(v51, v46, v50, v48, v49, &protocol witness table for MusicLibrary.AddAction);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v44);
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v45, v165);
    sub_100008758(v167, &qword_10048DA00);
    sub_1000149A8(v44, v167, &qword_10048DA00);
    goto LABEL_13;
  }
  v127 = *(_QWORD *)(v0 + 832);
  v128 = *(_QWORD *)(v0 + 592);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 824) + 32))(v127, *(_QWORD *)(v0 + 808), *(_QWORD *)(v0 + 816));
  v171 = (char *)_swiftEmptyArrayStorage;
  swift_retain(v128);
  LOBYTE(v127) = sub_1000146AC(v127, v128, &v171);
  v129 = swift_release(v128);
  if ((v127 & 1) != 0)
  {
    v130 = *(_QWORD *)(v0 + 880);
    v131 = *(_QWORD *)(v0 + 872);
    v132 = *(_QWORD *)(v0 + 864);
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 824) + 8))(*(_QWORD *)(v0 + 832), *(_QWORD *)(v0 + 816), v129);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v130, v132);
    v133 = v171;
  }
  else
  {
    v133 = v171;
    if (*((_QWORD *)v171 + 2))
    {
      (*(void (**)(_QWORD, char *, _QWORD, __n128))(*(_QWORD *)(v0 + 720) + 16))(*(_QWORD *)(v0 + 928), &v171[(*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 720) + 80)], *(_QWORD *)(v0 + 712), v129);
      v146 = 0;
    }
    else
    {
      v146 = 1;
    }
    v147 = *(_QWORD *)(v0 + 936);
    v148 = *(_QWORD *)(v0 + 928);
    v149 = *(_QWORD *)(v0 + 880);
    v150 = *(_QWORD *)(v0 + 872);
    v151 = *(_QWORD *)(v0 + 864);
    v152 = *(_QWORD *)(v0 + 832);
    v153 = *(_QWORD *)(v0 + 824);
    v154 = *(_QWORD *)(v0 + 816);
    v170(v148, v146, 1, *(_QWORD *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v152, v154);
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
    sub_100008758(v147, &qword_10048DA00);
    sub_1000149A8(v148, v147, &qword_10048DA00);
  }
  swift_bridgeObjectRelease(v133);
LABEL_13:
  v52 = *(_QWORD *)(v0 + 936);
  v53 = *(_QWORD *)(v0 + 912);
  v54 = *(_QWORD *)(v0 + 752);
  v55 = *(_QWORD *)(v0 + 736);
  v56 = *(_QWORD *)(v0 + 720);
  v57 = *(_QWORD *)(v0 + 712);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t))(v56 + 104);
  v58(v53, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v57);
  v170(v53, 0, 1, v57);
  v59 = v54 + *(int *)(v55 + 48);
  sub_100014A7C(v52, v54, &qword_10048DA00);
  sub_100014A7C(v53, v59, &qword_10048DA00);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v60(v54, 1, v57) == 1)
  {
    v61 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 912), &qword_10048DA00);
    if (v60(v59, 1, v61) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 752), &qword_10048DA00);
LABEL_28:
      sub_100014A7C(*(_QWORD *)(v0 + 600), v0 + 288, &qword_10048D950);
      if (*(_QWORD *)(v0 + 344) != 1)
      {
        sub_100014AC0(v0 + 288, v0 + 216);
        v98 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v0 + 1016) = v98;
        *(_QWORD *)(v0 + 1024) = static MainActor.shared.getter(v98);
        v99 = dispatch thunk of Actor.unownedExecutor.getter(v98, &protocol witness table for MainActor);
        *(_QWORD *)(v0 + 1032) = v99;
        *(_QWORD *)(v0 + 1040) = v100;
        return swift_task_switch(sub_100012924, v99, v100);
      }
      v94 = *(_QWORD **)(v0 + 608);
      sub_100008758(v0 + 288, &qword_10048D950);
      v95 = v94[3];
      *(_QWORD *)(v0 + 976) = v95;
      *(_QWORD *)(v0 + 984) = v94[4];
      *(_QWORD *)(v0 + 992) = sub_10000ABC8(v94, v95);
      v96 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1000) = static MainActor.shared.getter(v96);
      v84 = dispatch thunk of Actor.unownedExecutor.getter(v96, &protocol witness table for MainActor);
      v86 = v97;
      v87 = sub_100012840;
      return swift_task_switch(v87, v84, v86);
    }
    goto LABEL_18;
  }
  v62 = *(_QWORD *)(v0 + 712);
  sub_100014A7C(*(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 904), &qword_10048DA00);
  v63 = v60(v59, 1, v62);
  v64 = *(_QWORD *)(v0 + 912);
  v65 = *(_QWORD *)(v0 + 904);
  if (v63 == 1)
  {
    v66 = *(_QWORD *)(v0 + 720);
    v67 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 912), &qword_10048DA00);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
LABEL_18:
    sub_100008758(*(_QWORD *)(v0 + 752), &qword_10048D9F0);
    goto LABEL_19;
  }
  v168 = *(_QWORD *)(v0 + 752);
  v88 = *(_QWORD *)(v0 + 728);
  v89 = *(_QWORD *)(v0 + 720);
  v90 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v59, v90);
  v91 = sub_100014A3C(&qword_10048DA08, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v92 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v88, v90, v91);
  v93 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
  v93(v88, v90);
  sub_100008758(v64, &qword_10048DA00);
  v93(v65, v90);
  sub_100008758(v168, &qword_10048DA00);
  if ((v92 & 1) != 0)
    goto LABEL_28;
LABEL_19:
  v68 = *(_QWORD *)(v0 + 936);
  v69 = *(_QWORD *)(v0 + 896);
  v70 = *(_QWORD *)(v0 + 744);
  v71 = *(_QWORD *)(v0 + 712);
  v58(v69, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v71);
  v170(v69, 0, 1, v71);
  v72 = v70 + *(int *)(v55 + 48);
  sub_100014A7C(v68, v70, &qword_10048DA00);
  sub_100014A7C(v69, v72, &qword_10048DA00);
  if (v60(v70, 1, v71) == 1)
  {
    v73 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 896), &qword_10048DA00);
    if (v60(v72, 1, v73) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 744), &qword_10048DA00);
LABEL_32:
      v108 = *(_QWORD **)(v0 + 608);
      v109 = v108[3];
      *(_QWORD *)(v0 + 1072) = v109;
      *(_QWORD *)(v0 + 1080) = v108[4];
      *(_QWORD *)(v0 + 1088) = sub_10000ABC8(v108, v109);
      v110 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 1096) = static MainActor.shared.getter(v110);
      v84 = dispatch thunk of Actor.unownedExecutor.getter(v110, &protocol witness table for MainActor);
      v86 = v111;
      v87 = sub_100012C08;
      return swift_task_switch(v87, v84, v86);
    }
    goto LABEL_24;
  }
  v74 = *(_QWORD *)(v0 + 712);
  sub_100014A7C(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 888), &qword_10048DA00);
  v75 = v60(v72, 1, v74);
  v76 = *(_QWORD *)(v0 + 896);
  v77 = *(_QWORD *)(v0 + 888);
  if (v75 == 1)
  {
    v78 = *(_QWORD *)(v0 + 720);
    v79 = *(_QWORD *)(v0 + 712);
    sub_100008758(*(_QWORD *)(v0 + 896), &qword_10048DA00);
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
LABEL_24:
    sub_100008758(*(_QWORD *)(v0 + 744), &qword_10048D9F0);
    goto LABEL_25;
  }
  v101 = *(_QWORD *)(v0 + 744);
  v102 = *(_QWORD *)(v0 + 728);
  v103 = *(_QWORD *)(v0 + 720);
  v104 = *(_QWORD *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v102, v72, v104);
  v105 = sub_100014A3C(&qword_10048DA08, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
  v106 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v102, v104, v105);
  v107 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
  v107(v102, v104);
  sub_100008758(v76, &qword_10048DA00);
  v107(v77, v104);
  sub_100008758(v101, &qword_10048DA00);
  if ((v106 & 1) != 0)
    goto LABEL_32;
LABEL_25:
  sub_100014A7C(*(_QWORD *)(v0 + 616), v0 + 520, &qword_10048D958);
  v80 = *(_QWORD *)(v0 + 544);
  *(_QWORD *)(v0 + 1112) = v80;
  if (v80)
  {
    v81 = *(_QWORD *)(v0 + 704);
    v82 = *(_QWORD *)(v0 + 696);
    *(_QWORD *)(v0 + 1120) = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 1128) = sub_10000ABC8((_QWORD *)(v0 + 520), v80);
    swift_storeEnumTagMultiPayload(v81, v82, 7);
    v83 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1136) = static MainActor.shared.getter(v83);
    v84 = dispatch thunk of Actor.unownedExecutor.getter(v83, &protocol witness table for MainActor);
    v86 = v85;
    v87 = sub_100012E58;
  }
  else
  {
    sub_100008758(v0 + 520, &qword_10048D958);
    v112 = *(_QWORD *)(v0 + 680);
    v113 = *(_QWORD *)(v0 + 672);
    v114 = *(_QWORD *)(v0 + 664);
    sub_100014A7C(*(_QWORD *)(v0 + 624), v114, &qword_10048D8E8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v114, 1, v113) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 664), &qword_10048D8E8);
      v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
      v116 = *(_QWORD *)(v0 + 848);
      v117 = *(_QWORD *)(v0 + 632);
      v118 = *(_QWORD *)(v0 + 584);
      v119 = sub_100123878(v117, v117);
      v120 = swift_allocObject(v119, ((*(unsigned __int8 *)(v116 + 80) + (unint64_t)*(unsigned int *)(v119 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80))+ *(_QWORD *)(v116 + 72), *(unsigned __int8 *)(v116 + 80) | (unint64_t)*(unsigned __int16 *)(v119 + 52));
      v121 = static Array._adoptStorage(_:count:)(v120, 1);
      v115(v122, v118, v117);
      v123 = sub_10003001C(v121);
      *(_QWORD *)(v0 + 1192) = v123;
      *(_QWORD *)(v0 + 560) = v123;
      v124 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
      *(_QWORD *)(v0 + 1200) = v124;
      v125 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v125);
      *v124 = v0;
      v124[1] = sub_100013358;
      return MusicLibrary.add<A, B>(_:)(v0 + 560, v125, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
    }
    v134 = *(_QWORD *)(v0 + 656);
    v135 = *(_QWORD *)(v0 + 632);
    sub_10000F7B4(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v135);
    *(_QWORD *)(v0 + 1152) = v136;
    v137 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v134, 1, 1, v137);
    v138 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v138, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v135);
    *(_QWORD *)(inited + 40) = v140;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 1168) = v141;
    *(_QWORD *)(v0 + 1176) = v142;
    *(_WORD *)(v0 + 514) = v143;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v144 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v144);
    v84 = dispatch thunk of Actor.unownedExecutor.getter(v144, &protocol witness table for MainActor);
    v86 = v145;
    v87 = sub_100013164;
  }
  return swift_task_switch(v87, v84, v86);
}

uint64_t sub_100012840()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[123];
  swift_release(v0[125]);
  sub_1000DD89C(0, (uint64_t)(v0 + 52));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[126] = v3;
  *v3 = v0;
  v3[1] = sub_1000128C4;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 52, v0[122], v0[123]);
}

uint64_t sub_1000128C4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 416);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1008));
  sub_1000149EC(v1);
  return swift_task_switch(sub_100014B80, 0, 0);
}

uint64_t sub_100012924(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[131] = v2;
  v3 = swift_task_alloc(48);
  v1[132] = v3;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v1 + 27;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[133] = v4;
  *v4 = v1;
  v4[1] = sub_1000129E4;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 513, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003AD1D0, sub_100014AFC, v3, &type metadata for Bool);
}

uint64_t sub_1000129E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1056);
  v3 = *(_QWORD *)(*v0 + 1048);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1064));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100012A54, *(_QWORD *)(v1 + 1032), *(_QWORD *)(v1 + 1040));
}

uint64_t sub_100012A54()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 1024));
  return swift_task_switch(sub_100012A90, 0, 0);
}

uint64_t sub_100012A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  sub_100014B08(v0 + 216);
  sub_100008758(v1, &qword_10048DA00);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v10 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100012C08()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[135];
  swift_release(v0[137]);
  sub_1000DDA90(0, (uint64_t)(v0 + 45));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[138] = v3;
  *v3 = v0;
  v3[1] = sub_100012C8C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 45, v0[134], v0[135]);
}

uint64_t sub_100012C8C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 360);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1104));
  sub_1000149EC(v1);
  return swift_task_switch(sub_100012CEC, 0, 0);
}

uint64_t sub_100012CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_100008758(*(_QWORD *)(v0 + 936), &qword_10048DA00);
  v1 = *(_QWORD *)(v0 + 928);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 912);
  v4 = *(_QWORD *)(v0 + 904);
  v5 = *(_QWORD *)(v0 + 896);
  v6 = *(_QWORD *)(v0 + 888);
  v7 = *(_QWORD *)(v0 + 880);
  v8 = *(_QWORD *)(v0 + 856);
  v9 = *(_QWORD *)(v0 + 840);
  v11 = *(_QWORD *)(v0 + 832);
  v12 = *(_QWORD *)(v0 + 808);
  v13 = *(_QWORD *)(v0 + 800);
  v14 = *(_QWORD *)(v0 + 776);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD *)(v0 + 744);
  v17 = *(_QWORD *)(v0 + 728);
  v18 = *(_QWORD *)(v0 + 704);
  v19 = *(_QWORD *)(v0 + 688);
  v20 = *(_QWORD *)(v0 + 664);
  v21 = *(_QWORD *)(v0 + 656);
  swift_task_dealloc(*(_QWORD *)(v0 + 936));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100012E58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[140];
  v2 = v0[139];
  v3 = v0[88];
  swift_release(v0[142]);
  sub_100084534(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_100012ED0, 0, 0);
}

uint64_t sub_100012ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_10000682C((_QWORD *)(v0 + 520));
  v1 = *(_QWORD *)(v0 + 680);
  v2 = *(_QWORD *)(v0 + 672);
  v3 = *(_QWORD *)(v0 + 664);
  sub_100014A7C(*(_QWORD *)(v0 + 624), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 664), &qword_10048D8E8);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 968);
    v5 = *(_QWORD *)(v0 + 848);
    v6 = *(_QWORD *)(v0 + 632);
    v7 = *(_QWORD *)(v0 + 584);
    v8 = sub_100123878(v6, v6);
    v9 = swift_allocObject(v8, ((*(unsigned __int8 *)(v5 + 80) + (unint64_t)*(unsigned int *)(v8 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72), *(unsigned __int8 *)(v5 + 80) | (unint64_t)*(unsigned __int16 *)(v8 + 52));
    v10 = static Array._adoptStorage(_:count:)(v9, 1);
    v4(v11, v7, v6);
    v12 = sub_10003001C(v10);
    *(_QWORD *)(v0 + 1192) = v12;
    *(_QWORD *)(v0 + 560) = v12;
    v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
    *(_QWORD *)(v0 + 1200) = v13;
    v14 = type metadata accessor for Array(0);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
    *v13 = v0;
    v13[1] = sub_100013358;
    return MusicLibrary.add<A, B>(_:)(v0 + 560, v14, *(_QWORD *)(v0 + 632), WitnessTable, *(_QWORD *)(v0 + 640));
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 656);
    v18 = *(_QWORD *)(v0 + 632);
    sub_10000F7B4(*(_QWORD *)(v0 + 664), *(_QWORD *)(v0 + 688));
    *(_QWORD *)(v0 + 1144) = MusicItem.metricsTargetIdentifier.getter(v18);
    *(_QWORD *)(v0 + 1152) = v19;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 1, 1, v20);
    v21 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v21, v0 + 136);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v18);
    *(_QWORD *)(inited + 40) = v23;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 1160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 1168) = v24;
    *(_QWORD *)(v0 + 1176) = v25;
    *(_WORD *)(v0 + 514) = v26;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v27 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 1184) = static MainActor.shared.getter(v27);
    v28 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    return swift_task_switch(sub_100013164, v28, v29);
  }
}

uint64_t sub_100013164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 1176);
  v2 = *(_QWORD *)(v0 + 1168);
  v3 = *(void **)(v0 + 1160);
  v4 = *(_QWORD *)(v0 + 1152);
  v5 = *(_QWORD *)(v0 + 1144);
  v6 = *(uint64_t **)(v0 + 688);
  v7 = *(_QWORD *)(v0 + 656);
  v8 = *(unsigned __int16 *)(v0 + 514);
  swift_release(*(_QWORD *)(v0 + 1184));
  sub_100033830(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_100013240, 0, 0);
}

uint64_t sub_100013240()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t WitnessTable;

  sub_100006798(v0[86], type metadata accessor for Actions.MetricsReportingContext);
  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[121];
  v2 = v0[106];
  v3 = v0[79];
  v4 = v0[73];
  v5 = sub_100123878(v3, v3);
  v6 = swift_allocObject(v5, ((*(unsigned __int8 *)(v2 + 80) + (unint64_t)*(unsigned int *)(v5 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72), *(unsigned __int8 *)(v2 + 80) | (unint64_t)*(unsigned __int16 *)(v5 + 52));
  v7 = static Array._adoptStorage(_:count:)(v6, 1);
  v1(v8, v4, v3);
  v9 = sub_10003001C(v7);
  v0[149] = v9;
  v0[70] = v9;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
  v0[150] = v10;
  v11 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v11);
  *v10 = v0;
  v10[1] = sub_100013358;
  return MusicLibrary.add<A, B>(_:)(v0 + 70, v11, v0[79], WitnessTable, v0[80]);
}

uint64_t sub_100013358(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 1200);
  *(_QWORD *)(*v2 + 1208) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v4 + 1192));
    v6 = sub_1000133E4;
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 1192);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v7);
    v6 = sub_100014B80;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1000133E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 928);
  v3 = *(_QWORD *)(v0 + 920);
  v4 = *(_QWORD *)(v0 + 912);
  v5 = *(_QWORD *)(v0 + 904);
  v6 = *(_QWORD *)(v0 + 896);
  v7 = *(_QWORD *)(v0 + 888);
  v8 = *(_QWORD *)(v0 + 880);
  v9 = *(_QWORD *)(v0 + 856);
  v11 = *(_QWORD *)(v0 + 840);
  v12 = *(_QWORD *)(v0 + 832);
  v13 = *(_QWORD *)(v0 + 808);
  v14 = *(_QWORD *)(v0 + 800);
  v15 = *(_QWORD *)(v0 + 776);
  v16 = *(_QWORD *)(v0 + 752);
  v17 = *(_QWORD *)(v0 + 744);
  v18 = *(_QWORD *)(v0 + 728);
  v19 = *(_QWORD *)(v0 + 704);
  v20 = *(_QWORD *)(v0 + 688);
  v21 = *(_QWORD *)(v0 + 664);
  v22 = *(_QWORD *)(v0 + 656);
  sub_100008758(v1, &qword_10048DA00);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100013558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v23 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v23 + 56) & ~v23;
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(_QWORD *)(v0 + v4));
  v10 = v0 + v5;
  if (*(_QWORD *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v5);
    v11 = *(unsigned __int8 *)(v10 + 48);
    if (v11 != 255)
      sub_1000137A4(*(id *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), v11);
    if (*(_QWORD *)(v10 + 56))
      swift_release(*(_QWORD *)(v10 + 64));
  }
  v12 = (v9 + v7 + 40) & ~v9;
  sub_10000682C((_QWORD *)(v0 + v6));
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_10000682C((_QWORD *)(v0 + v7));
  v13 = v0 + v12;
  v14 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v0 + v12, 1, v14))
  {
    v15 = *(_QWORD *)(v13 + 8);
    if (v15 >= 0xA)
      swift_bridgeObjectRelease(v15);
    v16 = v13 + v14[5];
    v17 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v17 - 1) + 48))(v16, 1, v17))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + 24));
      v18 = v16 + v17[6];
      v19 = type metadata accessor for URL(0);
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v16 + v17[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8]));
  }
  return swift_deallocObject(v0, v12 + v22, v23 | v9 | 7);
}

void sub_1000137A4(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease(a1);
  }
  else if (a6 <= 1u)
  {

  }
}

uint64_t sub_1000137C8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000137E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0[2] - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8) + 80);
  v9 = v8 + v7 + 40;
  v10 = v0[5];
  v11 = v0[6];
  v12 = (uint64_t)v0 + v3;
  v13 = *(_QWORD *)((char *)v0 + v4);
  v14 = (uint64_t)v0 + v5;
  v15 = (uint64_t)v0 + v6;
  v16 = (uint64_t)v0 + v7;
  v17 = (uint64_t)v0 + (v9 & ~v8);
  v18 = (_QWORD *)swift_task_alloc(dword_10048D94C);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10000EA88;
  return sub_1000108F4(v10, v11, v12, v13, v14, v15, v16, v17);
}

BOOL sub_1000138F8(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  char **v25;
  char *v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v35;
  char *v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a3;
  v38 = a2;
  v4 = sub_100005574(&qword_10048DA00);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for MusicLibrary.AddAction(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10048D988);
  v39 = *(_QWORD *)(v17 - 8);
  v40 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.add.getter(v18);
  v21 = type metadata accessor for Track(0);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v16, v21, v13, &protocol witness table for Track, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100008758((uint64_t)v6, &qword_10048DA00);
  }
  else
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v22(v12, v6, v7);
    v23 = v36;
    v24 = v7;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v36, v12, v7);
    v25 = v37;
    v26 = *v37;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v37);
    *v25 = v26;
    v28 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v26 = (char *)sub_10003DE14(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
      *v25 = v26;
    }
    v30 = *((_QWORD *)v26 + 2);
    v29 = *((_QWORD *)v26 + 3);
    if (v30 >= v29 >> 1)
    {
      v26 = (char *)sub_10003DE14(v29 > 1, v30 + 1, 1, v26);
      *v37 = v26;
    }
    *((_QWORD *)v26 + 2) = v30 + 1;
    v22(&v26[((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v30], v28, v24);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v24);
  }
  v31 = sub_100010480();
  v33 = v32 == 1;
  sub_10001406C(v31, v32);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  return v33;
}

uint64_t MusicLibrary.SupportedStatus<>.unaddableReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = sub_100005574(&qword_10048D988);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v14, v7, v8);
    v15(v12, v14, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) == enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      v16 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
      v17 = *(_QWORD *)(v16 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t sub_100013DDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100013E48, v4, v5);
}

uint64_t sub_100013E48()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 40) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_10000F4E8();
    v5(v0 + 40, &type metadata for ActionType, v6, ObjectType, v3);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100013ECC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100013EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10048D96C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  return sub_100013DDC(v2, v3);
}

uint64_t sub_100013F40(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc(a1[1]);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_100013F98;
  return v4();
}

uint64_t sub_100013F98()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100013FE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100014008()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10048D97C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return ((uint64_t (*)(int *))((char *)&dword_10048D978 + dword_10048D978))(v2);
}

uint64_t sub_10001406C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t Actions.AddToLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.AddToLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440170, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100440198, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F228;
}

uint64_t (*sub_10001426C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440328, 32, 7);
  *(_QWORD *)(v0 + 16) = 1937075312;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100440350, 32, 7);
  *(_QWORD *)(v1 + 16) = 1937075312;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F88C;
}

void NSDirectionalEdgeInsets.Edge.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int MPCPlaybackEngine.Option.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

uint64_t sub_10001434C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100014374()
{
  unint64_t result;

  result = qword_10048D9E0;
  if (!qword_10048D9E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Album.ChildrenAddStatus, &type metadata for Album.ChildrenAddStatus);
    atomic_store(result, (unint64_t *)&qword_10048D9E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary()
{
  return &type metadata for Actions.AddToLibrary;
}

uint64_t _s12AddToLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  return swift_release(a1[5]);
}

uint64_t _s12AddToLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v4);
  return a1;
}

_QWORD *_s12AddToLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v9 = a2[4];
  v8 = a2[5];
  v10 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  return a1;
}

uint64_t _s12AddToLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12AddToLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary.Context()
{
  return &type metadata for Actions.AddToLibrary.Context;
}

_BYTE *initializeBufferWithCopyOfBuffer for ActionType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s17ChildrenAddStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100014624 + 4 * byte_100387175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100014658 + 4 * asc_100387170[v4]))();
}

uint64_t sub_100014658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100014660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100014668);
  return result;
}

uint64_t sub_100014674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10001467CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100014680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100014688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Album.ChildrenAddStatus()
{
  return &type metadata for Album.ChildrenAddStatus;
}

BOOL sub_1000146AC(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];
  uint64_t v47;

  v42 = a2;
  v43 = a3;
  v4 = type metadata accessor for Track(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v39 = (char *)&v34 - v8;
  v9 = sub_100005574(&qword_10048D9A0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048D990);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v10;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36(v12, a1, v9);
  v16 = sub_100014B3C(&qword_10048DA10, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v37 = v12;
  dispatch thunk of Sequence.makeIterator()(v9, v16);
  v17 = &v15[*(int *)(v13 + 36)];
  v18 = sub_100014B3C((unint64_t *)&qword_10048D9A8, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v35 = v15;
  v19 = v39;
  while (1)
  {
    v20 = *(_QWORD *)v17;
    dispatch thunk of Collection.endIndex.getter(v46, v9, v18);
    v44 = v46[0];
    v45 = v20;
    if (v20 == v46[0])
    {
LABEL_5:
      v32 = (uint64_t)v15;
      goto LABEL_7;
    }
    v21 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v46, v17, v9, v18);
    v22 = v40;
    v23 = v9;
    v24 = v17;
    v25 = v15;
    v26 = v41;
    (*(void (**)(char *))(v40 + 16))(v19);
    v21(v46, 0);
    v27 = v37;
    v28 = v25;
    v17 = v24;
    v9 = v23;
    v36(v37, (uint64_t)v28, v23);
    dispatch thunk of Collection.formIndex(after:)(v17, v23, v18);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v23);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v19, v26);
    v29 = v47;
    v30 = sub_1000138F8((uint64_t)v7, v42, v43);
    v47 = v29;
    if (v29)
      break;
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
    v15 = v35;
    if (v31)
      goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v26);
  v32 = (uint64_t)v35;
LABEL_7:
  sub_100008758(v32, &qword_10048D990);
  return v45 != v44;
}

uint64_t sub_100014974(uint64_t a1)
{
  destroy for SubscriptionUpsellPresenter.Placement(a1);
  return a1;
}

uint64_t sub_1000149A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100005574(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_QWORD *sub_1000149EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = (void *)a1[6];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  return a1;
}

uint64_t sub_100014A3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100014A7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100005574(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100014AC0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for PresentationSource(a2, a1);
  return a2;
}

double sub_100014AFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1000FC53C(a1, *(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100014B08(uint64_t a1)
{
  destroy for PresentationSource(a1);
  return a1;
}

uint64_t sub_100014B3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100005600(&qword_10048D9A0);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.AddToPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 2;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048DA18;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048DA20;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t (*Actions.AddToPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004403D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_1004403F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10000F228;
}

uint64_t (*sub_100014CB0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004404F8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v0 + 24) = 0xEF73756C702E6567;
  v1 = swift_allocObject(&unk_100440520, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6461622E74786574;
  *(_QWORD *)(v1 + 24) = 0xEF73756C702E6567;
  return sub_10000F88C;
}

double Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __int128 v14;
  double result;
  _OWORD v16[2];
  __int128 v17;

  sub_100019970(a1, a2, a3, a4, a5, a6, a7, a8, (unint64_t (**)())v16, a10, a11, a12);
  swift_release(a2);
  v14 = v16[1];
  *a9 = v16[0];
  a9[1] = v14;
  result = *(double *)&v17;
  a9[2] = v17;
  return result;
}

unint64_t sub_100014D94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  int v46;
  int v47;
  void (*v48)(char *, uint64_t);
  int v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v58 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v56 = *(_QWORD *)(v58 - 8);
  v2 = __chkstk_darwin(v58);
  v57 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v55 = (char *)&v52 - v4;
  v5 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v52 - v10;
  v12 = sub_100005574(&qword_10048D988);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v54 = (char *)&v52 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v52 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21 = a1;
  v20((char *)&v52 - v18, a1, v12);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v19, v12);
  if (v22 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v22 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      if (qword_10048C590 != -1)
        swift_once(&qword_10048C590, sub_100086650);
      v33 = type metadata accessor for Logger(0, v23);
      sub_1000086B4(v33, (uint64_t)static Logger.actions);
      v34 = v54;
      v35 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v54, v21, v12);
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v59 = v39;
        *(_DWORD *)v38 = 136315138;
        v40 = v53;
        v20(v53, (uint64_t)v34, v12);
        v41 = (char *)String.init<A>(describing:)(v40, v12);
        v42 = v34;
        v44 = v43;
        *(_QWORD *)(v38 + 4) = sub_100019400(v41, v43, &v59);
        swift_bridgeObjectRelease(v44);
        v45 = *(void (**)(char *, uint64_t))(v13 + 8);
        v45(v42, v12);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unknown status=%s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        swift_slowDealloc(v38, -1, -1);
      }
      else
      {
        v45 = *(void (**)(char *, uint64_t))(v13 + 8);
        v45(v34, v12);
      }

      v32 = 0x206E776F6E6B6E55;
      v45(v19, v12);
      return v32;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 96))(v19, v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v19, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v24 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
  {
    v46 = v24;
    if (v24 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
    {
      v32 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v32;
    }
    if (v24 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      goto LABEL_27;
    v47 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
    v48 = *(void (**)(char *, uint64_t))(v6 + 8);
    v48(v11, v5);
    if (v46 != v47)
    {
      v32 = 0x206E776F6E6B6E55;
      v48(v9, v5);
      return v32;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 96))(v9, v5);
  v26 = v55;
  v25 = v56;
  v27 = v9;
  v28 = v58;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v27, v58);
  v29 = v57;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v57, v26, v28);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v29, v28);
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
    goto LABEL_26;
  v31 = v30;
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
    goto LABEL_26;
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001CLL;
  }
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD00000000000001ELL;
  }
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000014;
  }
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000025;
  }
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0;
  }
  if (v30 == enum case for MusicLibrary.AddStatus.UnaddableReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return 0xD000000000000016;
  }
  else
  {
    v32 = 0x206E776F6E6B6E55;
    v50 = enum case for MusicLibrary.AddStatus.UnaddableReason.unknown(_:);
    v51 = *(void (**)(char *, uint64_t))(v25 + 8);
    v51(v26, v28);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    if (v31 != v50)
      v51(v29, v28);
  }
  return v32;
}

uint64_t sub_100015498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[48] = v17;
  v8[49] = v18;
  v8[46] = a7;
  v8[47] = a8;
  v8[44] = a5;
  v8[45] = a6;
  v8[42] = a3;
  v8[43] = a4;
  v8[40] = a1;
  v8[41] = a2;
  v9 = sub_100005574(&qword_10048D998);
  v8[50] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D9A0);
  v8[51] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[52] = v11;
  v8[53] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DA00);
  v8[54] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v8[55] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[56] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[57] = swift_task_alloc(v15);
  v8[58] = swift_task_alloc(v15);
  v8[59] = swift_task_alloc(v15);
  return swift_task_switch(sub_10001559C, 0, 0);
}

uint64_t sub_10001559C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 432);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 432), &qword_10048DA00);
    v4 = (_QWORD *)swift_task_alloc(dword_10048DA2C);
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_100015A80;
    return MusicPlaylistAddable.tracks.getter(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 360));
  }
  v6 = *(_QWORD *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_QWORD *)(v0 + 440);
  v9 = *(_QWORD *)(v0 + 448);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 432), v8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v10(v6, v7, v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v6, v8);
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
  {
    v13 = *(_QWORD **)(v0 + 328);
    v14 = v13[3];
    *(_QWORD *)(v0 + 488) = v14;
    *(_QWORD *)(v0 + 496) = v13[4];
    *(_QWORD *)(v0 + 504) = sub_10000ABC8(v13, v14);
    v15 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v15);
    v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
    v18 = v17;
    v19 = sub_100015BC4;
    return swift_task_switch(v19, v16, v18);
  }
  if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
  {
    sub_100014A7C(*(_QWORD *)(v0 + 336), v0 + 88, &qword_10048D950);
    if (*(_QWORD *)(v0 + 144) == 1)
    {
      v20 = *(_QWORD **)(v0 + 328);
      sub_100008758(v0 + 88, &qword_10048D950);
      v21 = v20[3];
      *(_QWORD *)(v0 + 528) = v21;
      *(_QWORD *)(v0 + 536) = v20[4];
      *(_QWORD *)(v0 + 544) = sub_10000ABC8(v20, v21);
      v22 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 552) = static MainActor.shared.getter(v22);
      v16 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
      v18 = v23;
      v19 = sub_100015D2C;
      return swift_task_switch(v19, v16, v18);
    }
    sub_100014AC0(v0 + 88, v0 + 16);
    v27 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 568) = v27;
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v27);
    v28 = dispatch thunk of Actor.unownedExecutor.getter(v27, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 584) = v28;
    *(_QWORD *)(v0 + 592) = v29;
    return swift_task_switch(sub_100015E10, v28, v29);
  }
  else
  {
    if (v11 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v24 = *(_QWORD *)(v0 + 472);
      v25 = *(_QWORD *)(v0 + 440);
      v26 = *(_QWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 272) = 0u;
      *(_OWORD *)(v0 + 288) = 0u;
      *(_QWORD *)(v0 + 304) = 0;
      *(_BYTE *)(v0 + 312) = -2;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 272);
      sub_100014974(v0 + 272);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    else
    {
      if (qword_10048C590 != -1)
        swift_once(&qword_10048C590, sub_100086650);
      v30 = *(_QWORD *)(v0 + 472);
      v31 = *(_QWORD *)(v0 + 456);
      v32 = *(_QWORD *)(v0 + 440);
      v33 = type metadata accessor for Logger(0, v12);
      sub_1000086B4(v33, (uint64_t)static Logger.actions);
      v34 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v31, v30, v32);
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.fault.getter();
      v37 = os_log_type_enabled(v35, v36);
      v38 = *(_QWORD *)(v0 + 472);
      v40 = *(_QWORD *)(v0 + 448);
      v39 = *(_QWORD *)(v0 + 456);
      v41 = *(_QWORD *)(v0 + 440);
      if (v37)
      {
        v42 = swift_slowAlloc(12, -1);
        v43 = swift_slowAlloc(32, -1);
        v54 = v43;
        *(_DWORD *)v42 = 136315138;
        v44 = sub_100006924(&qword_10048D9E8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v45 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v41, v44);
        v47 = v46;
        *(_QWORD *)(v42 + 4) = sub_100019400(v45, v46, &v54);
        swift_bridgeObjectRelease(v47);
        v48 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v48(v39, v41);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unhandled unaddableReason=%s", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

      }
      else
      {

        v48 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v48(v39, v41);
      }
      v48(v38, v41);
      v48(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    }
    v49 = *(_QWORD *)(v0 + 464);
    v50 = *(_QWORD *)(v0 + 456);
    v52 = *(_QWORD *)(v0 + 424);
    v51 = *(_QWORD *)(v0 + 432);
    v53 = *(_QWORD *)(v0 + 400);
    swift_task_dealloc(*(_QWORD *)(v0 + 472));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100015A80()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 480));
  return swift_task_switch(sub_100015AD4, 0, 0);
}

uint64_t sub_100015AD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v8;

  v1 = v0[51];
  v2 = v0[52];
  v3 = v0[50];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = type metadata accessor for Track(0);
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, v4, &protocol witness table for Track);
    sub_100008758(v3, &qword_10048D998);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
  }
  v5 = *(int **)(v0[49] + 8);
  v8 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  v0[78] = v6;
  *v6 = v0;
  v6[1] = sub_100016018;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v8)(v0[53], v0[43], v0[45], v0[47], v0[48], v0[46], v0[49]);
}

uint64_t sub_100015BC4()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[62];
  swift_release(v0[64]);
  sub_1000DDA90(0, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[65] = v3;
  *v3 = v0;
  v3[1] = sub_100015C44;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[61], v0[62]);
}

uint64_t sub_100015C44()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  sub_1000149EC(v1);
  return swift_task_switch(sub_100015CA4, 0, 0);
}

uint64_t sub_100015CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100015D2C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release(v0[69]);
  sub_1000DD89C(2, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_100015DB0;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[66], v0[67]);
}

uint64_t sub_100015DB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_1000149EC(v1);
  return swift_task_switch(sub_10001A2EC, 0, 0);
}

uint64_t sub_100015E10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_100015ED4;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 313, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003AD1D0, sub_100014AFC, v3, &type metadata for Bool);
}

uint64_t sub_100015ED4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  v3 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100015F44, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_100015F44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 576));
  return swift_task_switch(sub_100015F80, 0, 0);
}

uint64_t sub_100015F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  sub_100014B08(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100016018()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 624));
  return swift_task_switch(sub_10001606C, 0, 0);
}

uint64_t sub_10001606C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 416) + 8))(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 408));
  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 456);
  v4 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v5 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc(*(_QWORD *)(v0 + 472));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MusicPlaylistAddable.tracks.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v5 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[8] = swift_task_alloc(v7);
  v3[9] = swift_task_alloc(v7);
  v8 = sub_100005574(&qword_10048DA30);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist.Entry(0);
  v3[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[12] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[13] = swift_task_alloc(v11);
  v3[14] = swift_task_alloc(v11);
  v12 = sub_100005574(&qword_10048DA38);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Track(0);
  v3[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[17] = v14;
  v3[18] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10048DA40);
  v3[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicVideo(0);
  v3[20] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v3[21] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[22] = swift_task_alloc(v18);
  v3[23] = swift_task_alloc(v18);
  v19 = sub_100005574(&qword_10048DA48);
  v3[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v19 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Song(0);
  v3[25] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v3[26] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[27] = swift_task_alloc(v22);
  v3[28] = swift_task_alloc(v22);
  v23 = sub_100005574(&qword_10048D9A0);
  v3[29] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v3[30] = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[31] = swift_task_alloc(v25);
  v3[32] = swift_task_alloc(v25);
  v26 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D998) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v26);
  v3[34] = swift_task_alloc(v26);
  v3[35] = swift_task_alloc(v26);
  v27 = sub_100005574(&qword_100491260);
  v3[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v27 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Playlist(0);
  v3[37] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v3[38] = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[39] = swift_task_alloc(v30);
  v3[40] = swift_task_alloc(v30);
  v3[41] = swift_task_alloc(v30);
  v31 = sub_100005574(&qword_10048D9F8);
  v3[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v31 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(a2 - 8);
  v3[43] = v32;
  v33 = (*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[44] = swift_task_alloc(v33);
  v3[45] = swift_task_alloc(v33);
  v3[46] = swift_task_alloc(v33);
  v3[47] = swift_task_alloc(v33);
  v3[48] = swift_task_alloc(v33);
  v3[49] = swift_task_alloc(v33);
  v3[50] = swift_task_alloc(v33);
  v3[51] = swift_task_alloc(v33);
  v34 = type metadata accessor for Album(0);
  v3[52] = v34;
  v35 = *(_QWORD *)(v34 - 8);
  v3[53] = v35;
  v36 = (*(_QWORD *)(v35 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[54] = swift_task_alloc(v36);
  v3[55] = swift_task_alloc(v36);
  return swift_task_switch(sub_100016480, 0, 0);
}

uint64_t sub_100016480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  _BOOL4 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 344) + 16);
  *(_QWORD *)(v0 + 448) = v7;
  v7(v3, v5, v6);
  v8 = swift_dynamicCast(v4, v3, v6, v1, 6);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 440);
    v11 = *(_QWORD *)(v0 + 416);
    v12 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 336);
    v9(v13, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v13, v11);
    v14 = sub_100005574((uint64_t *)&unk_100491910);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100384730;
    sub_100005574(&qword_10048DA70);
    v16 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v205 = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v0 + 456) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v0 + 464) = v18;
    v19 = sub_100006924(&qword_10048DA78, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    *v18 = v0;
    v18[1] = sub_10001716C;
    return MusicItem<>.with(_:)(*(_QWORD *)(v0 + 432), v17, *(_QWORD *)(v0 + 416), &protocol witness table for Album, &protocol witness table for Album, v19);
  }
  v21 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 336);
  v23 = *(_QWORD *)(v0 + 296);
  v24 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 288);
  v27 = *(_QWORD *)(v0 + 32);
  v26 = *(_QWORD *)(v0 + 40);
  v9(v22, 1, 1, *(_QWORD *)(v0 + 416));
  sub_100008758(v22, &qword_10048D9F8);
  v7(v21, v26, v27);
  v28 = swift_dynamicCast(v25, v21, v27, v23, 6);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v28)
  {
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 304);
    v33 = *(_QWORD *)(v0 + 288);
    v29(v33, 0, 1, v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v33, v31);
    v34 = sub_100005574((uint64_t *)&unk_100491910);
    *(_QWORD *)(v0 + 480) = v34;
    v35 = swift_allocObject(v34, 40, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100384730;
    *(_QWORD *)(v0 + 488) = sub_100005574(&qword_10048DA60);
    v36 = static PartialMusicProperty<A>.tracks.getter();
    *(_QWORD *)(v35 + 32) = v36;
    v205 = v35;
    specialized Array._endMutation()(v36);
    *(_QWORD *)(v0 + 496) = v35;
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
    *(_QWORD *)(v0 + 504) = v37;
    *v37 = v0;
    v37[1] = sub_1000173F0;
    return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 320), v35, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
  }
  v38 = *(_QWORD *)(v0 + 392);
  v39 = *(_QWORD *)(v0 + 288);
  v40 = *(_QWORD *)(v0 + 200);
  v41 = *(_QWORD *)(v0 + 208);
  v42 = *(_QWORD *)(v0 + 192);
  v44 = *(_QWORD *)(v0 + 32);
  v43 = *(_QWORD *)(v0 + 40);
  v29(v39, 1, 1, *(_QWORD *)(v0 + 296));
  sub_100008758(v39, &qword_100491260);
  v7(v38, v43, v44);
  v45 = swift_dynamicCast(v42, v38, v44, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if (v45)
  {
    v47 = *(_QWORD *)(v0 + 240);
    v202 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 224);
    v49 = *(_QWORD *)(v0 + 200);
    v50 = *(_QWORD *)(v0 + 208);
    v51 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v46(v51, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v51, v49);
    v55 = sub_100005574(&qword_10048DA58);
    v56 = *(unsigned __int8 *)(v52 + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = swift_allocObject(v55, v57 + *(_QWORD *)(v52 + 72), v56 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100384A80;
    v59 = v58 + v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.song(_:);
  }
  else
  {
    v61 = *(_QWORD *)(v0 + 384);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = *(_QWORD *)(v0 + 160);
    v64 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 152);
    v67 = *(_QWORD *)(v0 + 32);
    v66 = *(_QWORD *)(v0 + 40);
    v46(v62, 1, 1, *(_QWORD *)(v0 + 200));
    sub_100008758(v62, &qword_10048DA48);
    v7(v61, v66, v67);
    v68 = swift_dynamicCast(v65, v61, v67, v63, 6);
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    if (!v68)
    {
      v87 = *(_QWORD *)(v0 + 376);
      v88 = *(_QWORD *)(v0 + 152);
      v89 = *(_QWORD *)(v0 + 128);
      v90 = *(_QWORD *)(v0 + 136);
      v91 = *(_QWORD *)(v0 + 120);
      v93 = *(_QWORD *)(v0 + 32);
      v92 = *(_QWORD *)(v0 + 40);
      v69(v88, 1, 1, *(_QWORD *)(v0 + 160));
      sub_100008758(v88, &qword_10048DA40);
      v7(v87, v92, v93);
      v94 = swift_dynamicCast(v91, v87, v93, v89, 6);
      v95 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
      if (v94)
      {
        v96 = *(_QWORD *)(v0 + 232);
        v97 = *(_QWORD *)(v0 + 240);
        v99 = *(_QWORD *)(v0 + 136);
        v98 = *(_QWORD *)(v0 + 144);
        v101 = *(_QWORD *)(v0 + 120);
        v100 = *(_QWORD *)(v0 + 128);
        v102 = *(_QWORD *)(v0 + 24);
        v95(v101, 0, 1, v100);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 32))(v98, v101, v100);
        v103 = sub_100005574(&qword_10048DA58);
        v104 = *(unsigned __int8 *)(v99 + 80);
        v105 = (v104 + 32) & ~v104;
        v106 = swift_allocObject(v103, v105 + *(_QWORD *)(v99 + 72), v104 | 7);
        *(_OWORD *)(v106 + 16) = xmmword_100384A80;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v106 + v105, v98, v100);
        MusicItemCollection.init(arrayLiteral:)(v106, v100, &protocol witness table for Track);
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56);
        v75 = v102;
        v76 = 0;
      }
      else
      {
        v107 = *(_QWORD *)(v0 + 368);
        v108 = *(_QWORD *)(v0 + 120);
        v109 = *(_QWORD *)(v0 + 88);
        v110 = *(_QWORD *)(v0 + 96);
        v111 = *(_QWORD *)(v0 + 80);
        v113 = *(_QWORD *)(v0 + 32);
        v112 = *(_QWORD *)(v0 + 40);
        v95(v108, 1, 1, *(_QWORD *)(v0 + 128));
        sub_100008758(v108, &qword_10048DA38);
        v7(v107, v112, v113);
        v114 = swift_dynamicCast(v111, v107, v113, v109, 6);
        v115 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56);
        if (v114)
        {
          v116 = *(_QWORD *)(v0 + 112);
          v117 = *(_QWORD *)(v0 + 88);
          v118 = *(_QWORD *)(v0 + 96);
          v120 = *(_QWORD *)(v0 + 72);
          v119 = *(_QWORD *)(v0 + 80);
          v121 = *(_QWORD *)(v0 + 48);
          v122 = *(_QWORD *)(v0 + 56);
          v115(v119, 0, 1, v117);
          v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 32))(v116, v119, v117);
          Playlist.Entry.internalItem.getter(v123);
          v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 88))(v120, v121);
          if (v124 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
          {
            v200 = *(_QWORD *)(v0 + 240);
            v202 = *(_QWORD *)(v0 + 232);
            v126 = *(_QWORD *)(v0 + 168);
            v127 = *(_QWORD *)(v0 + 176);
            v128 = *(_QWORD *)(v0 + 160);
            v130 = *(_QWORD *)(v0 + 128);
            v129 = *(_QWORD *)(v0 + 136);
            v131 = *(_QWORD *)(v0 + 96);
            v194 = *(_QWORD *)(v0 + 88);
            v197 = *(_QWORD *)(v0 + 112);
            v132 = *(_QWORD *)(v0 + 72);
            v133 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v132, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v127, v132, v128);
            v134 = sub_100005574(&qword_10048DA58);
            v135 = *(unsigned __int8 *)(v129 + 80);
            v136 = (v135 + 32) & ~v135;
            v137 = swift_allocObject(v134, v136 + *(_QWORD *)(v129 + 72), v135 | 7);
            *(_OWORD *)(v137 + 16) = xmmword_100384A80;
            v138 = v137 + v136;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v138, v127, v128);
            v139 = (unsigned int *)&enum case for Track.musicVideo(_:);
          }
          else
          {
            if (v124 != enum case for Playlist.Entry.InternalItem.song(_:))
            {
              if (qword_10048C590 != -1)
                swift_once(&qword_10048C590, sub_100086650);
              v147 = *(_QWORD *)(v0 + 104);
              v148 = *(_QWORD *)(v0 + 112);
              v149 = *(_QWORD *)(v0 + 88);
              v150 = *(_QWORD *)(v0 + 96);
              v151 = type metadata accessor for Logger(0, v125);
              sub_1000086B4(v151, (uint64_t)static Logger.actions);
              v152 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v150 + 16))(v147, v148, v149);
              v153 = Logger.logObject.getter(v152);
              v154 = static os_log_type_t.fault.getter();
              v155 = os_log_type_enabled(v153, v154);
              v157 = *(_QWORD *)(v0 + 104);
              v156 = *(_QWORD *)(v0 + 112);
              v159 = *(_QWORD *)(v0 + 88);
              v158 = *(_QWORD *)(v0 + 96);
              if (v155)
              {
                v160 = *(_QWORD *)(v0 + 64);
                v198 = *(_QWORD *)(v0 + 56);
                v204 = *(_QWORD *)(v0 + 112);
                v161 = *(_QWORD *)(v0 + 48);
                v162 = swift_slowAlloc(12, -1);
                v201 = swift_slowAlloc(32, -1);
                v205 = v201;
                *(_DWORD *)v162 = 136315138;
                v195 = v158;
                Playlist.Entry.internalItem.getter(v201);
                v163 = sub_100006924(&qword_10048DA50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
                v164 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v161, v163);
                v165 = v159;
                v167 = v166;
                (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v160, v161);
                *(_QWORD *)(v162 + 4) = sub_100019400(v164, v167, &v205);
                swift_bridgeObjectRelease(v167);
                v168 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
                v168(v157, v165);
                _os_log_impl((void *)&_mh_execute_header, v153, v154, "Unsupported Playlist.Entry.InternalItem=%s", (uint8_t *)v162, 0xCu);
                swift_arrayDestroy(v201, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v201, -1, -1);
                swift_slowDealloc(v162, -1, -1);

                v169 = v204;
                v170 = v165;
              }
              else
              {

                v168 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
                v168(v157, v159);
                v169 = v156;
                v170 = v159;
              }
              v168(v169, v170);
              v171 = *(_QWORD *)(v0 + 72);
              v172 = *(_QWORD *)(v0 + 48);
              v173 = *(_QWORD *)(v0 + 56);
              (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
              (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v171, v172);
              goto LABEL_12;
            }
            v200 = *(_QWORD *)(v0 + 240);
            v202 = *(_QWORD *)(v0 + 232);
            v126 = *(_QWORD *)(v0 + 208);
            v127 = *(_QWORD *)(v0 + 216);
            v128 = *(_QWORD *)(v0 + 200);
            v130 = *(_QWORD *)(v0 + 128);
            v129 = *(_QWORD *)(v0 + 136);
            v131 = *(_QWORD *)(v0 + 96);
            v194 = *(_QWORD *)(v0 + 88);
            v197 = *(_QWORD *)(v0 + 112);
            v143 = *(_QWORD *)(v0 + 72);
            v133 = *(_QWORD *)(v0 + 24);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 96))(v143, *(_QWORD *)(v0 + 48));
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v127, v143, v128);
            v144 = sub_100005574(&qword_10048DA58);
            v145 = *(unsigned __int8 *)(v129 + 80);
            v146 = (v145 + 32) & ~v145;
            v137 = swift_allocObject(v144, v146 + *(_QWORD *)(v129 + 72), v145 | 7);
            *(_OWORD *)(v137 + 16) = xmmword_100384A80;
            v138 = v137 + v146;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v138, v127, v128);
            v139 = (unsigned int *)&enum case for Track.song(_:);
          }
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v129 + 104))(v138, *v139, v130);
          MusicItemCollection.init(arrayLiteral:)(v137, v130, &protocol witness table for Track);
          (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v127, v128);
          (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v197, v194);
          v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v200 + 56);
          v75 = v133;
          goto LABEL_10;
        }
        v96 = *(_QWORD *)(v0 + 232);
        v140 = *(_QWORD *)(v0 + 240);
        v141 = *(_QWORD *)(v0 + 80);
        v142 = *(_QWORD *)(v0 + 24);
        v115(v141, 1, 1, *(_QWORD *)(v0 + 88));
        sub_100008758(v141, &qword_10048DA30);
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56);
        v75 = v142;
        v76 = 1;
      }
      v77 = v96;
      goto LABEL_11;
    }
    v47 = *(_QWORD *)(v0 + 240);
    v202 = *(_QWORD *)(v0 + 232);
    v48 = *(_QWORD *)(v0 + 184);
    v49 = *(_QWORD *)(v0 + 160);
    v50 = *(_QWORD *)(v0 + 168);
    v70 = *(_QWORD *)(v0 + 152);
    v53 = *(_QWORD *)(v0 + 128);
    v52 = *(_QWORD *)(v0 + 136);
    v54 = *(_QWORD *)(v0 + 24);
    v69(v70, 0, 1, v49);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v48, v70, v49);
    v71 = sub_100005574(&qword_10048DA58);
    v72 = *(unsigned __int8 *)(v52 + 80);
    v73 = (v72 + 32) & ~v72;
    v58 = swift_allocObject(v71, v73 + *(_QWORD *)(v52 + 72), v72 | 7);
    *(_OWORD *)(v58 + 16) = xmmword_100384A80;
    v59 = v58 + v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v59, v48, v49);
    v60 = (unsigned int *)&enum case for Track.musicVideo(_:);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v59, *v60, v53);
  MusicItemCollection.init(arrayLiteral:)(v58, v53, &protocol witness table for Track);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v75 = v54;
LABEL_10:
  v76 = 0;
  v77 = v202;
LABEL_11:
  v74(v75, v76, 1, v77);
LABEL_12:
  v78 = *(_QWORD *)(v0 + 432);
  v80 = *(_QWORD *)(v0 + 400);
  v79 = *(_QWORD *)(v0 + 408);
  v81 = *(_QWORD *)(v0 + 384);
  v82 = *(_QWORD *)(v0 + 392);
  v84 = *(_QWORD *)(v0 + 368);
  v83 = *(_QWORD *)(v0 + 376);
  v86 = *(_QWORD *)(v0 + 352);
  v85 = *(_QWORD *)(v0 + 360);
  v174 = *(_QWORD *)(v0 + 336);
  v175 = *(_QWORD *)(v0 + 328);
  v176 = *(_QWORD *)(v0 + 320);
  v177 = *(_QWORD *)(v0 + 312);
  v178 = *(_QWORD *)(v0 + 288);
  v179 = *(_QWORD *)(v0 + 280);
  v180 = *(_QWORD *)(v0 + 272);
  v181 = *(_QWORD *)(v0 + 264);
  v182 = *(_QWORD *)(v0 + 256);
  v183 = *(_QWORD *)(v0 + 248);
  v184 = *(_QWORD *)(v0 + 224);
  v185 = *(_QWORD *)(v0 + 216);
  v186 = *(_QWORD *)(v0 + 192);
  v187 = *(_QWORD *)(v0 + 184);
  v188 = *(_QWORD *)(v0 + 176);
  v189 = *(_QWORD *)(v0 + 152);
  v190 = *(_QWORD *)(v0 + 144);
  v191 = *(_QWORD *)(v0 + 120);
  v192 = *(_QWORD *)(v0 + 112);
  v193 = *(_QWORD *)(v0 + 104);
  v196 = *(_QWORD *)(v0 + 80);
  v199 = *(_QWORD *)(v0 + 72);
  v203 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v174);
  swift_task_dealloc(v175);
  swift_task_dealloc(v176);
  swift_task_dealloc(v177);
  swift_task_dealloc(v178);
  swift_task_dealloc(v179);
  swift_task_dealloc(v180);
  swift_task_dealloc(v181);
  swift_task_dealloc(v182);
  swift_task_dealloc(v183);
  swift_task_dealloc(v184);
  swift_task_dealloc(v185);
  swift_task_dealloc(v186);
  swift_task_dealloc(v187);
  swift_task_dealloc(v188);
  swift_task_dealloc(v189);
  swift_task_dealloc(v190);
  swift_task_dealloc(v191);
  swift_task_dealloc(v192);
  swift_task_dealloc(v193);
  swift_task_dealloc(v196);
  swift_task_dealloc(v199);
  swift_task_dealloc(v203);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001716C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100018790;
  else
    v4 = sub_1000171D8;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000171D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = *(_QWORD *)(v0 + 432);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  Album.tracks.getter();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  v6 = *(_QWORD *)(v0 + 432);
  v8 = *(_QWORD *)(v0 + 400);
  v7 = *(_QWORD *)(v0 + 408);
  v9 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  v12 = *(_QWORD *)(v0 + 368);
  v11 = *(_QWORD *)(v0 + 376);
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v16 = *(_QWORD *)(v0 + 336);
  v17 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 312);
  v20 = *(_QWORD *)(v0 + 288);
  v21 = *(_QWORD *)(v0 + 280);
  v22 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 256);
  v25 = *(_QWORD *)(v0 + 248);
  v26 = *(_QWORD *)(v0 + 224);
  v27 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 192);
  v29 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 72);
  v38 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000173F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 496);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 504);
  *(_QWORD *)(*(_QWORD *)v1 + 512) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_10001779C;
  else
    v4 = sub_10001745C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10001745C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  ((void (*)(void))Playlist.tracks.getter)();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 520) = v4;
  v5 = v4(v1, 1, v2);
  v6 = *(_QWORD *)(v0 + 280);
  if (v5 == 1)
  {
    v7 = sub_100008758(*(_QWORD *)(v0 + 280), &qword_10048D998);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 232);
    v9 = *(_QWORD *)(v0 + 240);
    v10 = MusicItemCollection.hasNextBatch.getter(v8);
    v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v0 + 528) = v11;
    v7 = v11(v6, v8);
    if ((v10 & 1) != 0)
    {
      v12 = swift_allocObject(*(_QWORD *)(v0 + 480), 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100384730;
      v13 = static PartialMusicProperty<A>.tracks.getter();
      v14 = MusicRelationshipProperty.limit(_:)(10000);
      swift_release(v13);
      *(_QWORD *)(v12 + 32) = v14;
      specialized Array._endMutation()(v15);
      *(_QWORD *)(v0 + 536) = v12;
      v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MusicPropertyContainer.with(_:)[1]);
      *(_QWORD *)(v0 + 544) = v16;
      *v16 = v0;
      v16[1] = sub_100017BCC;
      return dispatch thunk of MusicPropertyContainer.with(_:)(*(_QWORD *)(v0 + 312), v12, *(_QWORD *)(v0 + 296), &protocol witness table for Playlist);
    }
  }
  v19 = *(_QWORD *)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 328);
  v20 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 304);
  Playlist.tracks.getter(v7);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v22(v19, v20);
  v22(v18, v20);
  v23 = *(_QWORD *)(v0 + 432);
  v25 = *(_QWORD *)(v0 + 400);
  v24 = *(_QWORD *)(v0 + 408);
  v26 = *(_QWORD *)(v0 + 384);
  v27 = *(_QWORD *)(v0 + 392);
  v29 = *(_QWORD *)(v0 + 368);
  v28 = *(_QWORD *)(v0 + 376);
  v31 = *(_QWORD *)(v0 + 352);
  v30 = *(_QWORD *)(v0 + 360);
  v32 = *(_QWORD *)(v0 + 336);
  v33 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 320);
  v35 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 256);
  v41 = *(_QWORD *)(v0 + 248);
  v42 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 216);
  v44 = *(_QWORD *)(v0 + 192);
  v45 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 176);
  v47 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 120);
  v50 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 80);
  v53 = *(_QWORD *)(v0 + 72);
  v54 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001779C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 296));
  v2 = *(_QWORD *)(v0 + 512);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v4 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v7, (uint64_t)static Logger.actions);
  v3(v4, v5, v6);
  swift_errorRetain(v2);
  v8 = swift_errorRetain(v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v13 = *(_QWORD *)(v0 + 352);
    v12 = *(_QWORD *)(v0 + 360);
    v58 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 32);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v61[0] = v16;
    *(_DWORD *)v15 = 136446466;
    v11(v13, v12, v14);
    v17 = (char *)String.init<A>(describing:)(v13, v14);
    v19 = v18;
    *(_QWORD *)(v15 + 4) = sub_100019400(v17, v18, v61);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v12, v14);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v2;
    swift_errorRetain(v2);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 16, v20);
    v23 = v22;
    *(_QWORD *)(v15 + 14) = sub_100019400(v21, v22, v61);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v2);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v27 = *(_QWORD *)(v0 + 432);
  v29 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 384);
  v31 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 328);
  v39 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 312);
  v41 = *(_QWORD *)(v0 + 288);
  v42 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 272);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 192);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 176);
  v52 = *(_QWORD *)(v0 + 152);
  v53 = *(_QWORD *)(v0 + 144);
  v54 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 104);
  v57 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100017BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 544);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0)
    v4 = sub_100017FA0;
  else
    v4 = sub_100017C3C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100017C3C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  v3 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 272);
  v6 = *(_QWORD *)(v0 + 232);
  Playlist.tracks.getter();
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 560) = v7;
  v7(v2, v4);
  v8 = v1(v5, 1, v6);
  v9 = *(_QWORD *)(v0 + 272);
  if (v8 == 1)
  {
    MusicItemCollection.init(arrayLiteral:)(_swiftEmptyArrayStorage, *(_QWORD *)(v0 + 128), &protocol witness table for Track);
    sub_100008758(v9, &qword_10048D998);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 32))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 232));
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v10;
    v11 = sub_100006924(&qword_10048DA68, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v10 = v0;
    v10[1] = sub_1000183E0;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v11);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v14 = *(_QWORD *)(v0 + 328);
    v15 = *(_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 232);
    v18 = *(_QWORD *)(v0 + 240);
    v19 = *(_QWORD *)(v0 + 24);
    v13(*(_QWORD *)(v0 + 320), v15);
    v13(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v16, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    v20 = *(_QWORD *)(v0 + 432);
    v22 = *(_QWORD *)(v0 + 400);
    v21 = *(_QWORD *)(v0 + 408);
    v23 = *(_QWORD *)(v0 + 384);
    v24 = *(_QWORD *)(v0 + 392);
    v26 = *(_QWORD *)(v0 + 368);
    v25 = *(_QWORD *)(v0 + 376);
    v28 = *(_QWORD *)(v0 + 352);
    v27 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 336);
    v30 = *(_QWORD *)(v0 + 328);
    v31 = *(_QWORD *)(v0 + 320);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 288);
    v34 = *(_QWORD *)(v0 + 280);
    v35 = *(_QWORD *)(v0 + 272);
    v36 = *(_QWORD *)(v0 + 264);
    v37 = *(_QWORD *)(v0 + 256);
    v38 = *(_QWORD *)(v0 + 248);
    v39 = *(_QWORD *)(v0 + 224);
    v40 = *(_QWORD *)(v0 + 216);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 184);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 152);
    v45 = *(_QWORD *)(v0 + 144);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = *(_QWORD *)(v0 + 112);
    v48 = *(_QWORD *)(v0 + 104);
    v49 = *(_QWORD *)(v0 + 80);
    v50 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v24);
    swift_task_dealloc(v23);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100017FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];

  v1 = *(_QWORD *)(v0 + 328);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
  v3(*(_QWORD *)(v0 + 320), v2);
  v3(v1, v2);
  v5 = *(_QWORD *)(v0 + 552);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v7 = *(_QWORD *)(v0 + 360);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = type metadata accessor for Logger(0, v4);
  sub_1000086B4(v10, (uint64_t)static Logger.actions);
  v6(v7, v8, v9);
  swift_errorRetain(v5);
  v11 = swift_errorRetain(v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v16 = *(_QWORD *)(v0 + 352);
    v15 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 344);
    v17 = *(_QWORD *)(v0 + 32);
    v18 = swift_slowAlloc(22, -1);
    v19 = swift_slowAlloc(64, -1);
    v64[0] = v19;
    *(_DWORD *)v18 = 136446466;
    v14(v16, v15, v17);
    v20 = (char *)String.init<A>(describing:)(v16, v17);
    v22 = v21;
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, v64);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v15, v17);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v5;
    swift_errorRetain(v5);
    v23 = sub_100005574((uint64_t *)&unk_1004911F0);
    v24 = (char *)String.init<A>(describing:)(v0 + 16, v23);
    v26 = v25;
    *(_QWORD *)(v18 + 14) = sub_100019400(v24, v25, v64);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 344);
    v29 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v5);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v30 = *(_QWORD *)(v0 + 432);
  v32 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 408);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 392);
  v36 = *(_QWORD *)(v0 + 368);
  v35 = *(_QWORD *)(v0 + 376);
  v38 = *(_QWORD *)(v0 + 352);
  v37 = *(_QWORD *)(v0 + 360);
  v40 = *(_QWORD *)(v0 + 336);
  v41 = *(_QWORD *)(v0 + 328);
  v42 = *(_QWORD *)(v0 + 320);
  v43 = *(_QWORD *)(v0 + 312);
  v44 = *(_QWORD *)(v0 + 288);
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 272);
  v47 = *(_QWORD *)(v0 + 264);
  v48 = *(_QWORD *)(v0 + 256);
  v49 = *(_QWORD *)(v0 + 248);
  v50 = *(_QWORD *)(v0 + 224);
  v51 = *(_QWORD *)(v0 + 216);
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 184);
  v54 = *(_QWORD *)(v0 + 176);
  v55 = *(_QWORD *)(v0 + 152);
  v56 = *(_QWORD *)(v0 + 144);
  v57 = *(_QWORD *)(v0 + 120);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 104);
  v60 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 72);
  v63 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000183E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 568);
  *(_QWORD *)(*(_QWORD *)v1 + 576) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100018BC0;
  else
    v3 = sub_100018444;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100018444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 520))(v1, 1, v2) == 1)
  {
    sub_100008758(v1, &qword_10048D998);
  }
  else
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 528);
    v5 = *(_QWORD *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 240) + 32))(v5, v1, v2);
    static MusicItemCollection.+= infix(_:_:)(v4, v5, v6, &protocol witness table for Track);
    v3(v5, v2);
  }
  if ((MusicItemCollection.hasNextBatch.getter(*(_QWORD *)(v0 + 232)) & 1) != 0)
  {
    v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicItemCollection.nextBatch<>(limit:)[1]);
    *(_QWORD *)(v0 + 568) = v7;
    v8 = sub_100006924(&qword_10048DA68, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
    *v7 = v0;
    v7[1] = sub_1000183E0;
    return MusicItemCollection.nextBatch<>(limit:)(*(_QWORD *)(v0 + 264), 10000, 0, *(_QWORD *)(v0 + 232), v8);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    v11 = *(_QWORD *)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 296);
    v13 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 24);
    v10(*(_QWORD *)(v0 + 320), v12);
    v10(v11, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v13, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
    v17 = *(_QWORD *)(v0 + 432);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 392);
    v23 = *(_QWORD *)(v0 + 368);
    v22 = *(_QWORD *)(v0 + 376);
    v25 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 360);
    v26 = *(_QWORD *)(v0 + 336);
    v27 = *(_QWORD *)(v0 + 328);
    v28 = *(_QWORD *)(v0 + 320);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 288);
    v31 = *(_QWORD *)(v0 + 280);
    v32 = *(_QWORD *)(v0 + 272);
    v33 = *(_QWORD *)(v0 + 264);
    v34 = *(_QWORD *)(v0 + 256);
    v35 = *(_QWORD *)(v0 + 248);
    v36 = *(_QWORD *)(v0 + 224);
    v37 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 192);
    v39 = *(_QWORD *)(v0 + 184);
    v40 = *(_QWORD *)(v0 + 176);
    v41 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 144);
    v43 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 104);
    v46 = *(_QWORD *)(v0 + 80);
    v47 = *(_QWORD *)(v0 + 72);
    v48 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc(*(_QWORD *)(v0 + 440));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100018790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 8))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
  v2 = *(_QWORD *)(v0 + 472);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v4 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v7, (uint64_t)static Logger.actions);
  v3(v4, v5, v6);
  swift_errorRetain(v2);
  v8 = swift_errorRetain(v2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v13 = *(_QWORD *)(v0 + 352);
    v12 = *(_QWORD *)(v0 + 360);
    v58 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 32);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v61[0] = v16;
    *(_DWORD *)v15 = 136446466;
    v11(v13, v12, v14);
    v17 = (char *)String.init<A>(describing:)(v13, v14);
    v19 = v18;
    *(_QWORD *)(v15 + 4) = sub_100019400(v17, v18, v61);
    swift_bridgeObjectRelease(v19);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v12, v14);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v2;
    swift_errorRetain(v2);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 16, v20);
    v23 = v22;
    *(_QWORD *)(v15 + 14) = sub_100019400(v21, v22, v61);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 360);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v2);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v27 = *(_QWORD *)(v0 + 432);
  v29 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 408);
  v30 = *(_QWORD *)(v0 + 384);
  v31 = *(_QWORD *)(v0 + 392);
  v33 = *(_QWORD *)(v0 + 368);
  v32 = *(_QWORD *)(v0 + 376);
  v35 = *(_QWORD *)(v0 + 352);
  v34 = *(_QWORD *)(v0 + 360);
  v37 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 328);
  v39 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 312);
  v41 = *(_QWORD *)(v0 + 288);
  v42 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 272);
  v44 = *(_QWORD *)(v0 + 264);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 224);
  v48 = *(_QWORD *)(v0 + 216);
  v49 = *(_QWORD *)(v0 + 192);
  v50 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 176);
  v52 = *(_QWORD *)(v0 + 152);
  v53 = *(_QWORD *)(v0 + 144);
  v54 = *(_QWORD *)(v0 + 120);
  v55 = *(_QWORD *)(v0 + 112);
  v56 = *(_QWORD *)(v0 + 104);
  v57 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v60 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100018BC0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[2];

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  (*(void (**)(_QWORD, _QWORD))(v0 + 528))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 232));
  v1(v2, v4);
  v1(v3, v4);
  v6 = *(_QWORD *)(v0 + 576);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  v8 = *(_QWORD *)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  v11 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v11, (uint64_t)static Logger.actions);
  v7(v8, v9, v10);
  swift_errorRetain(v6);
  v12 = swift_errorRetain(v6);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    v17 = *(_QWORD *)(v0 + 352);
    v16 = *(_QWORD *)(v0 + 360);
    v62 = *(_QWORD *)(v0 + 344);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v65[0] = v20;
    *(_DWORD *)v19 = 136446466;
    v15(v17, v16, v18);
    v21 = (char *)String.init<A>(describing:)(v17, v18);
    v23 = v22;
    *(_QWORD *)(v19 + 4) = sub_100019400(v21, v22, v65);
    swift_bridgeObjectRelease(v23);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v16, v18);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 16) = v6;
    swift_errorRetain(v6);
    v24 = sub_100005574((uint64_t *)&unk_1004911F0);
    v25 = (char *)String.init<A>(describing:)(v0 + 16, v24);
    v27 = v26;
    *(_QWORD *)(v19 + 14) = sub_100019400(v25, v26, v65);
    swift_bridgeObjectRelease(v27);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 344);
    v30 = *(_QWORD *)(v0 + 32);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    swift_errorRelease(v6);
    swift_errorRelease(v6);

  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 240) + 56))(*(_QWORD *)(v0 + 24), 1, 1, *(_QWORD *)(v0 + 232));
  v31 = *(_QWORD *)(v0 + 432);
  v33 = *(_QWORD *)(v0 + 400);
  v32 = *(_QWORD *)(v0 + 408);
  v34 = *(_QWORD *)(v0 + 384);
  v35 = *(_QWORD *)(v0 + 392);
  v37 = *(_QWORD *)(v0 + 368);
  v36 = *(_QWORD *)(v0 + 376);
  v39 = *(_QWORD *)(v0 + 352);
  v38 = *(_QWORD *)(v0 + 360);
  v41 = *(_QWORD *)(v0 + 336);
  v42 = *(_QWORD *)(v0 + 328);
  v43 = *(_QWORD *)(v0 + 320);
  v44 = *(_QWORD *)(v0 + 312);
  v45 = *(_QWORD *)(v0 + 288);
  v46 = *(_QWORD *)(v0 + 280);
  v47 = *(_QWORD *)(v0 + 272);
  v48 = *(_QWORD *)(v0 + 264);
  v49 = *(_QWORD *)(v0 + 256);
  v50 = *(_QWORD *)(v0 + 248);
  v51 = *(_QWORD *)(v0 + 224);
  v52 = *(_QWORD *)(v0 + 216);
  v53 = *(_QWORD *)(v0 + 192);
  v54 = *(_QWORD *)(v0 + 184);
  v55 = *(_QWORD *)(v0 + 176);
  v56 = *(_QWORD *)(v0 + 152);
  v57 = *(_QWORD *)(v0 + 144);
  v58 = *(_QWORD *)(v0 + 120);
  v59 = *(_QWORD *)(v0 + 112);
  v60 = *(_QWORD *)(v0 + 104);
  v61 = *(_QWORD *)(v0 + 80);
  v63 = *(_QWORD *)(v0 + 72);
  v64 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 440));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100019014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_100005574(&qword_10048D510);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D8E8);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000190C0, 0, 0);
}

uint64_t sub_1000190C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100014A7C(*(_QWORD *)(v0 + 96), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000F7B4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003849A0;
    *(_BYTE *)(inited + 72) = 1;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100019290, v18, v19);
  }
}

uint64_t sub_100019290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_100019360, 0, 0);
}

uint64_t sub_100019360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000F850(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000193B0(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  uint64_t result;

  v6 = (char *)a4();
  v8 = v7;
  v9 = sub_100019400(v6, v7, a3);
  v10 = (_QWORD *)*a1;
  *(_QWORD *)*a1 = v9;
  result = swift_bridgeObjectRelease(v8);
  *a1 = v10 + 1;
  return result;
}

char *sub_100019400(char *a1, char *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v12[3];
  void *ObjectType;

  v6 = sub_1000194D0(v12, 0, 0, 1, (uint64_t)a1, (unint64_t)a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_10000684C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_10000684C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000682C(v12);
  return v7;
}

char *sub_1000194D0(char **a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char *result;
  uint64_t v10;
  char *v11;
  _QWORD v12[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          result = 0;
          *((_BYTE *)__dst + v10) = 0;
          *a1 = (char *)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1000195CC(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = (char *)((a6 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = (char *)_StringObject.sharedUTF8.getter(a5, a6);
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return (char *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

char *sub_1000195CC(uint64_t a1, unint64_t a2)
{
  char *v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (char *)sub_100019660(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_1000196F8(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  if (v4 >= v3 >> 1)
    v2 = sub_1000196F8((char *)(v3 > 1), v4 + 1, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 1;
  v2[v4 + 32] = 0;
  return v2;
}

_QWORD *sub_100019660(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *result;
  char v7;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_9;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_1001EAD50(v4, 0);
      result = (_QWORD *)_StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v7 & 1) != 0)
        break;
      if (result == (_QWORD *)v4)
        return v5;
      __break(1u);
LABEL_9:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_1000196F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048DAB0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t _s9MusicCore7ActionsO13AddToPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000014, 0x80000001003AD2C0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10001994C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100019970@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t (*v55)();
  uint64_t v56;
  uint64_t result;
  unint64_t (**v58)();
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t (**v73)();
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = a2;
  v66 = a8;
  v71 = a3;
  v72 = a6;
  v68 = a4;
  v69 = a5;
  v73 = a9;
  v67 = a12;
  v79 = a10;
  v80 = a7;
  v75 = *(_QWORD *)(a7 - 8);
  v76 = a11;
  v78 = *(_QWORD *)(v75 + 64);
  v13 = __chkstk_darwin(a1);
  v70 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v77 = (char *)&v60 - v15;
  v16 = type metadata accessor for MusicLibrary.AddAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048D988);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v74 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v60 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v60 - v28;
  static MusicLibraryAction<>.add.getter(v27);
  v64 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, v80, v16, a11, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v29, v20);
  v30 = *(unsigned __int8 *)(v21 + 80);
  v31 = (v30 + 16) & ~v30;
  v62 = v30 | 7;
  v65 = swift_allocObject(&unk_100440548, v31 + v22, v30 | 7);
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v63 = v20;
  v32(v65 + v31, v26, v20);
  v32((uint64_t)v74, v29, v20);
  v33 = v75;
  v34 = v80;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v77, a1, v80);
  v35 = (v30 + 56) & ~v30;
  v36 = (v22 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(unsigned __int8 *)(v33 + 80);
  v39 = (v37 + v38 + 72) & ~v38;
  v40 = v66;
  v41 = *(_QWORD *)(v66 - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v61 = (v39 + v78 + v42) & ~v42;
  v43 = (char *)swift_allocObject(&unk_100440570, v61 + *(_QWORD *)(v41 + 64), v62 | v38 | v42);
  *((_QWORD *)v43 + 2) = v34;
  *((_QWORD *)v43 + 3) = v40;
  v44 = v76;
  *((_QWORD *)v43 + 4) = v79;
  *((_QWORD *)v43 + 5) = v44;
  v45 = &v43[v35];
  v46 = v67;
  *((_QWORD *)v43 + 6) = v67;
  v32((uint64_t)v45, v74, v63);
  sub_1000137C8(v68, (uint64_t)&v43[v36]);
  sub_1000149A8(v69, (uint64_t)&v43[v37], &qword_10048D950);
  v47 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  v48 = v80;
  v47(&v43[v39], v77, v80);
  v49 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v43[v61], v71, v40);
  v50 = v70;
  v47(v70, v64, v48);
  v51 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v52 = *(unsigned __int8 *)(v51 + 80);
  v53 = (v52 + 56) & ~v52;
  v54 = (*(_QWORD *)(v51 + 64) + v38 + v53) & ~v38;
  v55 = (unint64_t (*)())swift_allocObject(&unk_100440598, v54 + v78, v38 | v52 | 7);
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v49;
  v56 = v76;
  *((_QWORD *)v55 + 4) = v79;
  *((_QWORD *)v55 + 5) = v56;
  *((_QWORD *)v55 + 6) = v46;
  sub_1000149A8(v72, (uint64_t)v55 + v53, &qword_10048D8E8);
  result = ((uint64_t (*)(char *, char *, uint64_t))v47)((char *)v55 + v54, v50, v48);
  v58 = v73;
  v59 = v65;
  *v73 = sub_100019DD8;
  v58[1] = (unint64_t (*)())v59;
  v58[2] = (unint64_t (*)())&unk_10048DAC0;
  v58[3] = (unint64_t (*)())v43;
  v58[4] = (unint64_t (*)())&unk_10048DAD0;
  v58[5] = v55;
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist()
{
  return &type metadata for Actions.AddToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist.Context()
{
  return &type metadata for Actions.AddToPlaylist.Context;
}

uint64_t sub_100019D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574(&qword_10048D988);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100019DD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048D988) - 8) + 80);
  return sub_100014D94(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100019E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = sub_100005574(&qword_10048D988);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = (*(_QWORD *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v2 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v1 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_QWORD *)(v9 + 64);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v3);
  sub_10000682C((_QWORD *)(v0 + v7));
  v14 = v0 + v8;
  if (*(_QWORD *)(v0 + v8 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v8);
    v15 = *(unsigned __int8 *)(v14 + 48);
    if (v15 != 255)
      sub_1000137A4(*(id *)(v14 + 8), *(_QWORD *)(v14 + 16), *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 40), v15);
    if (*(_QWORD *)(v14 + 56))
      v13 = swift_release(*(_QWORD *)(v14 + 64));
  }
  v16 = (v10 + v8 + 72) & ~v10;
  v17 = (v20 + v12 + v16) & ~v12;
  (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v0 + v16, v2, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v17, v1);
  return swift_deallocObject(v0, v17 + v19, v5 | v10 | v12 | 7);
}

uint64_t sub_100019F54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v3 = v0[2];
  v2 = v0[3];
  v18 = v0[4];
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D988) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v11 = (uint64_t)v0 + v5;
  v12 = (uint64_t)v0 + v6;
  v13 = (uint64_t)v0 + v7;
  v14 = (uint64_t)v0 + v9;
  v15 = (uint64_t)v0 + ((*(_QWORD *)(v8 + 64) + v10 + v9) & ~v10);
  v16 = (_QWORD *)swift_task_alloc(dword_10048DABC);
  *(_QWORD *)(v1 + 16) = v16;
  *v16 = v1;
  v16[1] = sub_10000EA88;
  return sub_100015498(v11, v12, v13, v14, v15, v3, v2, v18);
}

uint64_t sub_10001A060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10001A220()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DACC);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000F894;
  return sub_100019014(v8, v9, v2, v3, v4);
}

uint64_t Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a7, a1, v12);
  v15 = (int *)type metadata accessor for Actions.Collaborate.Context(0);
  v16 = (_QWORD *)(a7 + v15[5]);
  *v16 = a2;
  v16[1] = a3;
  v17 = swift_allocObject(&unk_1004405D8, 32, 7);
  v18 = v29;
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = (_QWORD *)(a7 + v15[6]);
  *v19 = &unk_10048DAE0;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v20((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v21 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = (v23 + *(_QWORD *)(v21 + 64) + v24) & ~v24;
  v26 = swift_allocObject(&unk_100440600, v25 + v14, v22 | v24 | 7);
  sub_10000F3EC(v30, v26 + v23);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v26 + v25, (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v28 = (_QWORD *)(a7 + v15[7]);
  *v28 = &unk_10048DAF0;
  v28[1] = v26;
  return result;
}

uint64_t type metadata accessor for Actions.Collaborate.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10048DB98;
  if (!qword_10048DB98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.Collaborate.Context);
  return result;
}

uint64_t sub_10001A4A8(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return sub_10001B47C(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_10001A4E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001A504()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;

  v2 = *(void (**)(void))(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10048DADC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return ((uint64_t (*)(void (*)(void)))((char *)&dword_10048DAD8 + dword_10048DAD8))(v2);
}

uint64_t sub_10001A568(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100005574(&qword_10048D510);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10048D8E8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001A610, 0, 0);
}

uint64_t sub_10001A610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_10000F76C(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 96), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = sub_10000F7B4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = Playlist.catalogID.getter(v8);
    *(_QWORD *)(v0 + 128) = v10;
    *(_QWORD *)(v0 + 136) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = sub_100031F98();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_100033420(inited);
    *(_QWORD *)(v0 + 152) = v15;
    *(_QWORD *)(v0 + 160) = v16;
    *(_WORD *)(v0 + 176) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10001A7A0, v19, v20);
  }
}

uint64_t sub_10001A7A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 168));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_100033830(v9, v4, 5, 8, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10001A894, 0, 0);
}

uint64_t sub_10001A894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000F850(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001A8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_10001AAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_10048DAEC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000EA88;
  return sub_10001A568(v7, v8);
}

int *static Actions.Collaborate.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *result;
  uint64_t (**v4)(uint64_t);
  _QWORD *v5;
  _QWORD *v6;

  sub_10001ABC8(a1, a2);
  result = (int *)sub_100005574(&qword_10048DB08);
  *(_BYTE *)(a2 + result[13]) = 7;
  *(_QWORD *)(a2 + result[15]) = 0x4014000000000000;
  v4 = (uint64_t (**)(uint64_t))(a2 + result[14]);
  *v4 = sub_10001AC0C;
  v4[1] = 0;
  v5 = (_QWORD *)(a2 + result[16]);
  *v5 = &unk_10048DAF8;
  v5[1] = 0;
  v6 = (_QWORD *)(a2 + result[17]);
  *v6 = &unk_10048DB00;
  v6[1] = 0;
  return result;
}

uint64_t sub_10001ABC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.Collaborate.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001AC0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Actions.Collaborate.Context(0);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 20)))();
}

uint64_t sub_10001AC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch(sub_10001AC58, 0, 0);
}

uint64_t sub_10001AC58()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 24));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_10001ACC0;
  return v5();
}

uint64_t sub_10001ACC0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10001AD08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10001AD20, 0, 0);
}

uint64_t sub_10001AD20()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int **)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context(0) + 28));
  v5 = (uint64_t (*)(void))((char *)*v2 + **v2);
  v3 = (_QWORD *)swift_task_alloc((*v2)[1]);
  *(_QWORD *)(v0 + 24) = v3;
  *v3 = v0;
  v3[1] = sub_10001B490;
  return v5();
}

uint64_t Actions.Collaborate.Context.menuItemTitle.getter()
{
  char active;

  active = Playlist.hasActiveCollaboration.getter();
  return _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0(active & 1);
}

uint64_t (*Actions.Collaborate.Context.menuItemImage.getter())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001003AD2E0;
  v3 = swift_allocObject(&unk_100440628, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100440650, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10001AF28;
}

uint64_t (*sub_10001AE64())()
{
  char active;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  active = Playlist.hasActiveCollaboration.getter();
  if ((active & 1) != 0)
    v1 = 0x322E6E6F73726570;
  else
    v1 = 0xD000000000000011;
  if ((active & 1) != 0)
    v2 = 0xE800000000000000;
  else
    v2 = 0x80000001003AD2E0;
  v3 = swift_allocObject(&unk_1004406C8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_1004406F0, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10001B488;
}

uint64_t sub_10001AF28()
{
  uint64_t v0;

  return sub_10003D920(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10001AF30()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10001AF54()
{
  uint64_t v0;

  return sub_10003D950(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for Actions.Collaborate()
{
  return &type metadata for Actions.Collaborate;
}

uint64_t *_s11CollaborateO7ContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Playlist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_retain(v12);
    swift_retain(v15);
  }
  swift_retain(v19);
  return v4;
}

uint64_t _s11CollaborateO7ContextVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_release(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t _s11CollaborateO7ContextVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v18);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  v16 = v13[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  swift_release(v12);
  return a1;
}

uint64_t _s11CollaborateO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001B304);
}

uint64_t sub_10001B304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s11CollaborateO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001B38C);
}

uint64_t sub_10001B38C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_10001B404(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10001B47C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static Actions.DeleteFromLibrary.action(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;

  v4 = *a1;
  v5 = a1[7];
  v6 = (_OWORD *)swift_allocObject(&unk_100440730, 80, 7);
  v7 = *(_OWORD *)(a1 + 1);
  v11 = *(_OWORD *)(a1 + 3);
  v12 = *(_OWORD *)(a1 + 5);
  v8 = *((_OWORD *)a1 + 1);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v8;
  v9 = *((_OWORD *)a1 + 3);
  v6[3] = *((_OWORD *)a1 + 2);
  v6[4] = v9;
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v5;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_10001B5F0;
  *(_QWORD *)(a2 + 80) = v6;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10048DBD8;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10048DBE0;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v7, 2);
  swift_retain_n(v11, 2);
  swift_retain_n(v12, 2);
  return swift_retain_n(v5, 2);
}

uint64_t sub_10001B58C(uint64_t (**a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = (*a1)();
  if (v4 == 1)
  {
    v5 = (*(uint64_t (**)(uint64_t))(a2 + 32))(result);
    v7 = v6;
    sub_10001406C(v5, v6);
    if (v7 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_10001B5F0(uint64_t (**a1)(void))
{
  uint64_t v1;

  return sub_10001B58C(a1, v1 + 16);
}

uint64_t sub_10001B5F8(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 48);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5();
}

uint64_t sub_10001B64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DC38);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_10001B774();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_10001B774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v16 - v7;
  v9 = sub_100005574(&qword_10048DC38);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v14;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+DeleteFromLibrary.swift", 41, 2, 94, 0);
  __break(1u);
  return result;
}

uint64_t sub_10001B954@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v10 = a1[6];
  v9 = a1[7];
  v11 = (_QWORD *)swift_allocObject(&unk_100440970, 80, 7);
  v11[2] = v4;
  v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v7;
  v11[8] = v10;
  v11[9] = v9;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = 8;
  *(_QWORD *)(a2 + 72) = sub_10001CD0C;
  *(_QWORD *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10048DBD8;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10048DBE0;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain_n(v3, 2);
  swift_retain_n(v5, 2);
  swift_retain_n(v7, 2);
  return swift_retain_n(v9, 2);
}

uint64_t (*Actions.DeleteFromLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440758, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100440780, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F228;
}

uint64_t (*sub_10001BAB8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440920, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100440948, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F88C;
}

uint64_t Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t (**v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t (**v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v81 = a7;
  v82 = a8;
  v76 = a4;
  v77 = a9;
  v72 = a3;
  v83 = a2;
  v63 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = __chkstk_darwin(a1);
  v75 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v71 = (char *)&v63 - v17;
  v18 = __chkstk_darwin(v16);
  v66 = (char *)&v63 - v19;
  v21 = v20;
  v74 = v20;
  __chkstk_darwin(v18);
  v23 = (char *)&v63 - v22;
  v80 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v65 = a1;
  v80((char *)&v63 - v22, (uint64_t)a1, v24);
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v25 + 56) & ~v25;
  v27 = v25;
  v64 = v21 + 7;
  v28 = (v21 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v69 = v28 + 8;
  v70 = v26;
  v68 = v28;
  v29 = v25 | 7;
  v79 = v25 | 7;
  v30 = (_QWORD *)swift_allocObject(&unk_1004407A8, v28 + 8, v25 | 7);
  v30[2] = a5;
  v30[3] = a6;
  v31 = v82;
  v30[4] = v81;
  v30[5] = v31;
  v30[6] = a10;
  v32 = v30;
  v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30;
  v78 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v78((char *)v30 + v26, v23, a5);
  *(_QWORD *)((char *)v32 + v28) = v83;
  v33 = v66;
  v80(v66, (uint64_t)a1, a5);
  v34 = a6;
  v35 = *(_QWORD *)(a6 - 8);
  v36 = *(unsigned __int8 *)(v35 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = *(_QWORD *)(v35 + 64);
  v67 = v27;
  v39 = (v38 + v27 + v37) & ~v27;
  v40 = v29 | v36;
  v41 = (v64 + v39) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject(&unk_1004407D0, v41 + 8, v40);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = v34;
  v43 = v34;
  v45 = v81;
  v44 = v82;
  *((_QWORD *)v42 + 4) = v81;
  *((_QWORD *)v42 + 5) = v44;
  v46 = v63;
  *((_QWORD *)v42 + 6) = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v42[v37], v72, v43);
  v47 = v78;
  v78(&v42[v39], v33, a5);
  v48 = v83;
  *(_QWORD *)&v42[v41] = v83;
  v49 = v71;
  v50 = v65;
  v80(v71, (uint64_t)v65, a5);
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_1004407F8, v69, v79);
  *((_QWORD *)v51 + 2) = a5;
  *((_QWORD *)v51 + 3) = v43;
  *((_QWORD *)v51 + 4) = v45;
  v52 = v82;
  *((_QWORD *)v51 + 5) = v82;
  v53 = (char *)v51 + v70;
  *((_QWORD *)v51 + 6) = v46;
  v47(v53, v49, a5);
  *(_QWORD *)((char *)v51 + v68) = v48;
  v54 = v75;
  v47(v75, v50, a5);
  v55 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 56) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v67 + v57) & ~v67;
  v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_100440820, v58 + v74, v79 | v56);
  *((_QWORD *)v59 + 2) = a5;
  *((_QWORD *)v59 + 3) = v43;
  *((_QWORD *)v59 + 4) = v81;
  *((_QWORD *)v59 + 5) = v52;
  *((_QWORD *)v59 + 6) = v46;
  sub_10000F3EC(v76, (uint64_t)v59 + v57);
  v78((char *)v59 + v58, v54, a5);
  result = swift_retain_n(v83, 2);
  v61 = v77;
  v62 = v73;
  *v77 = sub_10001C580;
  v61[1] = v62;
  v61[2] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_10048DBF0;
  v61[3] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42;
  v61[4] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10001C798;
  v61[5] = v51;
  v61[6] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))&unk_10048DC00;
  v61[7] = v59;
  return result;
}

uint64_t sub_10001BEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a6;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v8[16] = v9;
  v8[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001BF14, 0, 0);
}

uint64_t sub_10001BF14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[16] + 16))(v0[17], v0[10], v0[12]);
  v1 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10001BF90, v2, v3);
}

uint64_t sub_10001BF90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[17];
  v3 = v0[15];
  v2 = v0[16];
  v4 = v0[14];
  v6 = v0[11];
  v5 = v0[12];
  swift_release(v0[18]);
  sub_1000D6C94(v1, v6, v5, v4, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  v7 = *(int **)(v3 + 8);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[19] = v8;
  *v8 = v0;
  v8[1] = sub_10001C04C;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v10)(v0 + 2, v0[13], v0[15]);
}

uint64_t sub_10001C04C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (_QWORD *)(*v0 + 16);
  v2 = *(_QWORD *)(*v0 + 136);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  sub_1000149EC(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10001C0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  v6 = sub_100005574(&qword_10048D510);
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D8E8);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[19] = v9;
  v5[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001C15C, 0, 0);
}

uint64_t sub_10001C15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_10000F76C(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000F7B4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10001C31C, v18, v19);
  }
}

uint64_t sub_10001C31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 14, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_100019360, 0, 0);
}

uint64_t _s9MusicCore7ActionsO17DeleteFromLibraryO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003AD330);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10001C558()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001C580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_10001B64C(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 40));
}

uint64_t sub_10001C5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v3 | v6 | 7;
  v9 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v8);
}

uint64_t sub_10001C65C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = *(_QWORD *)(v3 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v2 - 8);
  v10 = (v8 + *(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (uint64_t)v0 + v8;
  v12 = (uint64_t)v0 + v10;
  v13 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8));
  v14 = (_QWORD *)swift_task_alloc(dword_10048DBEC);
  *(_QWORD *)(v1 + 16) = v14;
  *v14 = v1;
  v14[1] = sub_10000EA88;
  return sub_10001BEB4(v11, v12, v13, v2, v3, v4, v5, v6);
}

uint64_t sub_10001C72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 56) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_10001C798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_100024F3C((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[4], v0[5]);
}

uint64_t sub_10001C7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10001C98C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DBFC);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000F894;
  return sub_10001C0B0(v8, v9, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary()
{
  return &type metadata for Actions.DeleteFromLibrary;
}

uint64_t _s17DeleteFromLibraryO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s17DeleteFromLibraryO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s17DeleteFromLibraryO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

__n128 _s17DeleteFromLibraryO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s17DeleteFromLibraryO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = a2[3];
  swift_release(v7);
  return a1;
}

uint64_t _s17DeleteFromLibraryO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s17DeleteFromLibraryO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary.Context()
{
  return &type metadata for Actions.DeleteFromLibrary.Context;
}

uint64_t sub_10001CCC4()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10001CD10(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v19[-v12];
  if (!a2)
  {
    if ((a1 & 1) != 0)
    {
      v15 = 0x80000001003AD770;
      v14 = 0xD000000000000010;
    }
    else
    {
      v14 = 0x442065766F6D6552;
      v15 = 0xEF64616F6C6E776FLL;
    }
    goto LABEL_10;
  }
  if (a2 == 1)
  {
    v14 = 0xD000000000000013;
    v15 = 0x80000001003AD330;
LABEL_10:
    String.LocalizationValue.init(stringLiteral:)(v14, v15);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v17 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v17, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    return v16;
  }
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v16 = static String.cancelButtonTitle;
  swift_bridgeObjectRetain();
  return v16;
}

_UNKNOWN **static Actions.DeleteOrRemoveDownload.Choice.allCases.getter()
{
  return &off_10043C970;
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6F4465766F6D6572;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x6C65636E6163;
}

uint64_t sub_10001CFA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100027B48(*a1, *a2);
}

Swift::Int sub_10001CFAC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001003ABF10;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10001D058(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001003ABF10;
  v3 = 0xD000000000000011;
  if (*v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10001D0E0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0x80000001003ABF10;
  v3 = 0xD000000000000011;
  if (v1 != 1)
  {
    v3 = 0x6C65636E6163;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6F4465766F6D6572;
  if (v1)
    v5 = v2;
  else
    v5 = 0xEE0064616F6C6E77;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_10001D188@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10001D1B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE0064616F6C6E77;
  v4 = 0x80000001003ABF10;
  v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    v5 = 0x6C65636E6163;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F4465766F6D6572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_10001D220(_QWORD *a1@<X8>)
{
  *a1 = &off_10043C998;
}

uint64_t static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_100020270(a1, a2);
  result = swift_allocObject(&unk_1004409B0, 32, 7);
  *(_QWORD *)(result + 16) = &unk_10048DC40;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10001D2A8;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_10048DC58;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_10048DC48;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

unint64_t sub_10001D2A8(uint64_t (**a1)(void))
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  v2 = sub_100005574(&qword_10048DD28);
  inited = swift_initStackObject(v2, &v8);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  *(_QWORD *)(inited + 32) = (*a1)();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = a1[4]();
  *(_QWORD *)(inited + 56) = v5;
  v6 = _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0((_QWORD *)inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for ActionSupportedStatus);
  return v6;
}

uint64_t sub_10001D34C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[28] = a1;
  v2[29] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[30] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[31] = v4;
  v2[32] = v5;
  return swift_task_switch(sub_10001D3B8, v4, v5);
}

uint64_t sub_10001D3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  sub_100020270(*(_QWORD *)(v0 + 224), v0 + 16);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 264) = v2;
  v4 = swift_task_alloc(32);
  *(_QWORD *)(v4 + 16) = v0 + 16;
  *(_QWORD *)(v4 + 24) = v1;
  swift_bridgeObjectRetain();
  v5 = sub_10001DB58((void (*)(uint64_t *__return_ptr, char *))sub_1000210D0, v4, (uint64_t)&off_10043C9C0);
  *(_QWORD *)(v0 + 272) = v5;
  swift_task_dealloc(v4);
  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 168) = 0;
  *(_QWORD *)(v0 + 176) = v3;
  *(_QWORD *)(v0 + 184) = v2;
  *(_BYTE *)(v0 + 192) = 1;
  *(_QWORD *)(v0 + 200) = v5;
  *(_QWORD *)(v0 + 208) = 0;
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  sub_10000ABC8((_QWORD *)(v0 + 96), v6);
  v8 = *(int **)(v7 + 8);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  *(_QWORD *)(v0 + 280) = v9;
  *v9 = v0;
  v9[1] = sub_10001D4C4;
  return v11(v0 + 160, v6, v7);
}

uint64_t sub_10001D4C4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 280));
  return swift_task_switch(sub_10001D510, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_10001D510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRelease(0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  swift_release(v3);
  sub_1000210EC((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001D578@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _OWORD v29[7];
  _OWORD v30[2];

  v8 = sub_100005574(&qword_10048DCE8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *a1;
  if (*a1)
  {
    if (v11 == 1)
    {
      v28 = 0x80000001003ABF10;
      v12 = 0xD000000000000011;
    }
    else
    {
      v28 = 0xE600000000000000;
      v12 = 0x6C65636E6163;
    }
  }
  else
  {
    v28 = 0xEE0064616F6C6E77;
    v12 = 0x6F4465766F6D6572;
  }
  v27 = v12;
  v26 = sub_10001CD10(*(_BYTE *)(a2 + 136), v11);
  v25 = v13;
  sub_100020270(a2, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 161) & ~v14;
  v16 = swift_allocObject(&unk_100440D08, v15 + v10, v14 | 7);
  v17 = v29[4];
  *(_OWORD *)(v16 + 104) = v29[5];
  v18 = v30[0];
  *(_OWORD *)(v16 + 120) = v29[6];
  *(_OWORD *)(v16 + 136) = v18;
  *(_OWORD *)(v16 + 145) = *(_OWORD *)((char *)v30 + 9);
  v19 = v29[0];
  *(_OWORD *)(v16 + 40) = v29[1];
  v20 = v29[3];
  *(_OWORD *)(v16 + 56) = v29[2];
  *(_OWORD *)(v16 + 72) = v20;
  *(_OWORD *)(v16 + 88) = v17;
  *(_BYTE *)(v16 + 16) = v11;
  *(_OWORD *)(v16 + 24) = v19;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v22 = v28;
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v22;
  v23 = v25;
  *(_QWORD *)(a4 + 16) = v26;
  *(_QWORD *)(a4 + 24) = v23;
  *(_BYTE *)(a4 + 32) = v11 < 2;
  *(_QWORD *)(a4 + 40) = &unk_10048DD10;
  *(_QWORD *)(a4 + 48) = v16;
  return result;
}

uint64_t sub_10001D76C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = a3;
  *(_BYTE *)(v3 + 153) = a1;
  v4 = sub_100005574(&qword_10048DCE8);
  *(_QWORD *)(v3 + 176) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 184) = v5;
  v6 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v3 + 192) = v6;
  *(_QWORD *)(v3 + 200) = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001D7FC, 0, 0);
}

uint64_t sub_10001D7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_BYTE *)(v0 + 153);
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v1, 1, 1, v9);
  sub_100020270(v7, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 177) & ~v10;
  v12 = swift_allocObject(&unk_100440D30, v11 + v4, v10 | 7);
  v13 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(v0 + 96);
  v14 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v12 + 136) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v12 + 152) = v14;
  *(_OWORD *)(v12 + 161) = *(_OWORD *)(v0 + 137);
  v15 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v0 + 32);
  v16 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v12 + 88) = v16;
  *(_OWORD *)(v12 + 104) = v13;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = v8;
  *(_OWORD *)(v12 + 40) = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v12 + v11, v2, v5);
  v17 = sub_1001AD214(v1, (uint64_t)&unk_10048DD20, v12);
  swift_release(v17);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001D940(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = a5;
  *(_QWORD *)(v6 + 24) = a6;
  *(_BYTE *)(v6 + 49) = a4;
  return swift_task_switch(sub_10001D95C, 0, 0);
}

uint64_t sub_10001D95C()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v3)();
  int *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t (*v8)(void);

  if (*(_BYTE *)(v0 + 49))
  {
    if (*(_BYTE *)(v0 + 49) != 1)
    {
      *(_BYTE *)(v0 + 48) = 2;
      v6 = sub_100005574(&qword_10048DCE8);
      CheckedContinuation.resume(returning:)(v0 + 48, v6);
      v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    v1 = *(int **)(*(_QWORD *)(v0 + 16) + 16);
    v8 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    v3 = sub_10001DAEC;
  }
  else
  {
    v4 = *(int **)(*(_QWORD *)(v0 + 16) + 48);
    v8 = (uint64_t (*)(void))((char *)v4 + *v4);
    v2 = (_QWORD *)swift_task_alloc(v4[1]);
    *(_QWORD *)(v0 + 32) = v2;
    v3 = sub_10001DA2C;
  }
  *v2 = v0;
  v2[1] = v3;
  v5 = v8;
  return v5();
}

uint64_t sub_10001DA2C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_10001DA98, 0, 0);
}

uint64_t sub_10001DA98()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v0 + 49);
  v1 = sub_100005574(&qword_10048DCE8);
  CheckedContinuation.resume(returning:)(v0 + 48, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001DAEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  swift_task_dealloc(v2);
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch(sub_100021380, 0, 0);
}

_QWORD *sub_10001DB58(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  __int128 v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  _QWORD *v32;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    v32 = _swiftEmptyArrayStorage;
    sub_100077334(0, v5, 0);
    v6 = _swiftEmptyArrayStorage;
    v8 = (char *)(a3 + 32);
    while (1)
    {
      v9 = *v8++;
      v25 = v9;
      a1(&v26, &v25);
      if (v4)
        break;
      v4 = 0;
      v11 = v26;
      v10 = v27;
      v13 = v28;
      v12 = v29;
      v14 = v30;
      v15 = v31;
      v32 = v6;
      v17 = v6[2];
      v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        v23 = v31;
        v22 = v27;
        v19 = v29;
        v21 = v30;
        sub_100077334((char *)(v16 > 1), v17 + 1, 1);
        v14 = v21;
        v12 = v19;
        v10 = v22;
        v15 = v23;
        v6 = v32;
      }
      v6[2] = v17 + 1;
      v18 = &v6[7 * v17];
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v13;
      v18[7] = v12;
      *((_BYTE *)v18 + 64) = v14;
      *(_OWORD *)(v18 + 9) = v15;
      if (!--v5)
        return v6;
    }
    swift_release(v6);
  }
  return v6;
}

uint64_t sub_10001DC98(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10001DCB0, 0, 0);
}

uint64_t sub_10001DCB0()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 16) + 64);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc(v1[1]);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_10001ACC0;
  return v4();
}

uint64_t sub_10001DD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_100020270(a1, a2);
  result = swift_allocObject(&unk_100440CB8, 32, 7);
  *(_QWORD *)(result + 16) = &unk_10048DC40;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(a2 + 137) = 39;
  *(_QWORD *)(a2 + 144) = sub_10001D2A8;
  *(_QWORD *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0x403E000000000000;
  *(_QWORD *)(a2 + 168) = &unk_10048DCD8;
  *(_QWORD *)(a2 + 176) = result;
  *(_QWORD *)(a2 + 184) = &unk_10048DC48;
  *(_QWORD *)(a2 + 192) = 0;
  return result;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)()@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t (*v43)();
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t (*v66)();
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)();
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)();
  void (*v87)(uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (**v100)();
  uint64_t (*v101)();
  uint64_t (*v102)();
  uint64_t (*v103)();
  uint64_t (*v104)();
  uint64_t result;
  uint64_t (*v106)();
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)();
  char *v126;
  uint64_t (*v127)();
  char *v128;
  uint64_t (*v129)();
  uint64_t v130;
  uint64_t (**v131)();
  char *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t (*v142)();
  __int128 v143;
  uint64_t v144;
  uint64_t v145;

  v137 = a4;
  v138 = a8;
  v130 = a2;
  v131 = a9;
  v139 = a1;
  v141 = a10;
  v142 = a3;
  v113 = type metadata accessor for Playlist(0);
  v108 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v112 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for Album(0);
  v111 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v128 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10048D8E8);
  v122 = *(_QWORD *)(v17 - 8);
  v123 = *(_QWORD *)(v122 + 64);
  v18 = __chkstk_darwin(v17);
  v121 = (uint64_t)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a5 - 8);
  v21 = __chkstk_darwin(v18);
  v109 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v132 = (char *)&v107 - v24;
  v25 = __chkstk_darwin(v23);
  v126 = (char *)&v107 - v26;
  v27 = __chkstk_darwin(v25);
  v120 = (char *)&v107 - v28;
  v29 = __chkstk_darwin(v27);
  v118 = (char *)&v107 - v30;
  v31 = __chkstk_darwin(v29);
  v116 = (char *)&v107 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v107 - v34;
  v125 = (uint64_t (*)())((char *)&v107 - v34);
  v37 = v36;
  v117 = v36;
  __chkstk_darwin(v33);
  v39 = (char *)&v107 - v38;
  v140 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v140((char *)&v107 - v38, a1, a5);
  v119 = *(unsigned __int8 *)(v20 + 80);
  v40 = ((v119 + 64) & ~v119) + v37;
  v41 = (v119 + 64) & ~v119;
  v133 = (_QWORD *)v41;
  v134 = v119 | 7;
  v42 = (uint64_t (*)())swift_allocObject(&unk_1004409D8, v40, v119 | 7);
  *((_QWORD *)v42 + 2) = a5;
  *((_QWORD *)v42 + 3) = a6;
  v114 = a6;
  *((_QWORD *)v42 + 4) = a7;
  *((_QWORD *)v42 + 5) = a8;
  v43 = v142;
  *((_QWORD *)v42 + 6) = v141;
  *((_QWORD *)v42 + 7) = v43;
  v129 = v42;
  v110 = v20;
  v44 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v45 = v39;
  v46 = a5;
  v44((char *)v42 + v41, v45, a5);
  v136 = v44;
  v47 = v35;
  v48 = v139;
  v49 = v140;
  v140(v47, v139, v46);
  v115 = v40;
  v50 = v134;
  v51 = (uint64_t (*)())swift_allocObject(&unk_100440A00, v40, v134);
  v52 = v46;
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = a6;
  v53 = a7;
  v135 = a7;
  v54 = v138;
  *((_QWORD *)v51 + 4) = a7;
  *((_QWORD *)v51 + 5) = v54;
  v55 = v133;
  v56 = (char *)v133 + (_QWORD)v51;
  v57 = v141;
  *((_QWORD *)v51 + 6) = v141;
  *((_QWORD *)v51 + 7) = v43;
  v127 = v51;
  v58 = v52;
  ((void (*)(char *, uint64_t (*)()))v44)(v56, v125);
  v59 = v116;
  v49(v116, v48, v58);
  v60 = (char *)swift_allocObject(&unk_100440A28, v40, v50);
  v61 = v58;
  *((_QWORD *)v60 + 2) = v58;
  v62 = v114;
  *((_QWORD *)v60 + 3) = v114;
  *((_QWORD *)v60 + 4) = v53;
  *((_QWORD *)v60 + 5) = v54;
  v63 = v54;
  v64 = (char *)v55 + (_QWORD)v60;
  v65 = v57;
  *((_QWORD *)v60 + 6) = v57;
  v125 = (uint64_t (*)())v60;
  v66 = v142;
  *((_QWORD *)v60 + 7) = v142;
  v67 = v136;
  v136(v64, v59, v61);
  v68 = v118;
  v69 = v139;
  v49(v118, v139, v61);
  v70 = (_QWORD *)swift_allocObject(&unk_100440A50, v115, v50);
  v70[2] = v61;
  v70[3] = v62;
  v71 = v135;
  v70[4] = v135;
  v70[5] = v63;
  v72 = (char *)v133 + (_QWORD)v70;
  v70[6] = v65;
  v70[7] = v66;
  v133 = v70;
  v67(v72, v68, v61);
  v73 = v121;
  sub_100014A7C(v137, v121, &qword_10048D8E8);
  v74 = v120;
  v140(v120, v69, v61);
  v75 = *(unsigned __int8 *)(v122 + 80);
  v76 = (v75 + 56) & ~v75;
  v77 = (v123 + v119 + v76) & ~v119;
  v78 = (uint64_t (*)())swift_allocObject(&unk_100440A78, v77 + v117, v134 | v75);
  *((_QWORD *)v78 + 2) = v61;
  *((_QWORD *)v78 + 3) = v62;
  v79 = v138;
  *((_QWORD *)v78 + 4) = v71;
  *((_QWORD *)v78 + 5) = v79;
  v80 = v141;
  *((_QWORD *)v78 + 6) = v141;
  sub_10000F3EC(v73, (uint64_t)v78 + v76);
  v67((char *)v78 + v77, v74, v61);
  v144 = v62;
  v145 = v80;
  v81 = sub_1000207D4(&v143);
  v82 = *(_QWORD *)(v62 - 8);
  v83 = v130;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 16))(v81, v130, v62);
  swift_retain_n(v142, 3);
  v84 = v139;
  v85 = sub_10001EB44(v139, v61);
  v142 = v86;
  sub_100008758(v137, &qword_10048D8E8);
  v87 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v88 = v128;
  v87(v83, v62);
  v89 = v126;
  v140(v126, v84, v61);
  v90 = v124;
  if (swift_dynamicCast(v88, v89, v61, v124, 6))
  {
    (*(void (**)(char *, uint64_t))(v111 + 8))(v88, v90);
    v91 = v132;
    v136(v132, (char *)v84, v61);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v91, v61);
    v92 = 1;
  }
  else
  {
    v93 = v85;
    v94 = v132;
    v95 = v136;
    v136(v132, (char *)v84, v61);
    v96 = v109;
    v95(v109, v94, v61);
    v97 = v112;
    v98 = v61;
    v99 = v113;
    if (swift_dynamicCast(v112, v96, v98, v113, 6))
    {
      (*(void (**)(char *, uint64_t))(v108 + 8))(v97, v99);
      v92 = 1;
    }
    else
    {
      v92 = 0;
    }
    v85 = v93;
  }
  v100 = v131;
  v101 = v129;
  *v131 = sub_10002034C;
  v100[1] = v101;
  v102 = v127;
  v100[2] = (uint64_t (*)())&unk_10048DC68;
  v100[3] = v102;
  v103 = v125;
  v100[4] = sub_100020408;
  v100[5] = v103;
  v104 = (uint64_t (*)())v133;
  v100[6] = (uint64_t (*)())&unk_10048DC78;
  v100[7] = v104;
  v100[8] = (uint64_t (*)())&unk_10048DC88;
  v100[9] = v78;
  result = sub_1000137C8(&v143, (uint64_t)(v100 + 10));
  v106 = v142;
  v100[15] = (uint64_t (*)())v85;
  v100[16] = v106;
  *((_BYTE *)v100 + 136) = v92;
  return result;
}

uint64_t sub_10001E48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048DC38);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_10001B774();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10001E5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10000F894;
  return MusicLibrary.remove<A>(_:)(a2, a3, a5);
}

uint64_t sub_10001E624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v9 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048DCE0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v15);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v12, a3, v9, a6, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_100025064();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v18;
}

uint64_t sub_10001E74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_10000F894;
  return MusicLibrary.removeDownload<A>(_:)(a2, a3, a5);
}

uint64_t sub_10001E7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  v6 = sub_100005574(&qword_10048D510);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D8E8);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10001E868, 0, 0);
}

uint64_t sub_10001E868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10001EA24, v18, v19);
  }
}

uint64_t sub_10001EA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 30, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10001EAF4, 0, 0);
}

uint64_t sub_10001EAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000F850(*(_QWORD *)(v0 + 136));
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001EB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  char *v125;
  char *v126;
  void (*v127)(char *, uint64_t, uint64_t);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;

  v160 = a1;
  v132 = type metadata accessor for Genre(0);
  v129 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for Composer(0);
  v130 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v134 = (char *)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for Artist(0);
  v133 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for TVEpisode(0);
  v136 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v140 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for TVSeason(0);
  v139 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v143 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for TVShow(0);
  v142 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v145 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for MusicMovie(0);
  v147 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v149 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for Song(0);
  v148 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v153 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for Playlist(0);
  v151 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v156 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicVideo(0);
  v154 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v159 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v126 - v22;
  v24 = type metadata accessor for Album(0);
  v157 = *(char **)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v25);
  v126 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v128 = (char *)&v126 - v31;
  __chkstk_darwin(v30);
  v33 = (char *)&v126 - v32;
  v158 = v34;
  v127 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v127((char *)&v126 - v32, v160, a2);
  if (swift_dynamicCast(v27, v33, a2, v24, 0))
  {
    v160 = a2;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003AD6D0);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    v35 = v17;
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v36 = qword_1004A1DA0;
    v37 = (id)qword_1004A1DA0;
    v38 = v159;
    static Locale.current.getter(v37);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v36, v38, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v35);
    (*((void (**)(char *, uint64_t))v157 + 1))(v27, v24);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v33, v160);
    return v39;
  }
  v40 = v33;
  if (swift_dynamicCast(v14, v33, a2, v12, 0))
  {
    v41 = v12;
    v42 = v14;
    v43 = v23;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003AD670);
    v44 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v45 = qword_1004A1DA0;
    v46 = (id)qword_1004A1DA0;
    v47 = v159;
    static Locale.current.getter(v46);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v45, v47, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v17);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v42, v41);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v158 + 8))(v40, a2);
    return v39;
  }
  v48 = v155;
  v49 = v21;
  if (swift_dynamicCast(v156, v33, a2, v155, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003AD610);
    v50 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v51 = qword_1004A1DA0;
    v52 = (id)qword_1004A1DA0;
    v53 = v159;
    static Locale.current.getter(v52);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v51, v53, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v156, v48);
    goto LABEL_17;
  }
  v54 = v152;
  if (swift_dynamicCast(v153, v33, a2, v152, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x80000001003AD370);
    v55 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v56 = qword_1004A1DA0;
    v57 = (id)qword_1004A1DA0;
    v58 = v159;
    static Locale.current.getter(v57);
    v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v56, v58, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v17);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v153, v54);
    goto LABEL_17;
  }
  v60 = v17;
  if (swift_dynamicCast(v149, v33, a2, v150, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003AD5B0);
    v61 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v23, v17);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v62 = qword_1004A1DA0;
    v63 = (id)qword_1004A1DA0;
    v64 = v159;
    static Locale.current.getter(v63);
    v65 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v62, v64, 0, 0, 256);
    v66 = *(void (**)(char *, uint64_t))(v61 + 8);
    v39 = v65;
    v66(v23, v17);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v149, v150);
    goto LABEL_17;
  }
  v157 = v23;
  v67 = v145;
  v68 = v146;
  if (swift_dynamicCast(v145, v33, a2, v146, 0))
  {
    (*(void (**)(char *, uint64_t))(v142 + 8))(v67, v68);
LABEL_27:
    v72 = v157;
    (*(void (**)(char *, uint64_t))(v158 + 8))(v40, a2);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000001003AD550);
    v73 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v72, v60);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v74 = qword_1004A1DA0;
    v75 = (id)qword_1004A1DA0;
    v76 = v159;
    static Locale.current.getter(v75);
    v39 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v74, v76, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v60);
    return v39;
  }
  v69 = v60;
  v70 = v143;
  v71 = v144;
  if (swift_dynamicCast(v143, v40, a2, v144, 0))
  {
    (*(void (**)(char *, uint64_t))(v139 + 8))(v70, v71);
    v60 = v69;
    goto LABEL_27;
  }
  v77 = swift_dynamicCast(v140, v40, a2, v141, 0);
  v78 = v157;
  if (v77)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000056, 0x80000001003AD4F0);
    v79 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v80 = qword_1004A1DA0;
    v81 = (id)qword_1004A1DA0;
    v82 = v159;
    static Locale.current.getter(v81);
    v83 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v80, v82, 0, 0, 256);
    v84 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39 = v83;
    v84(v78, v69);
    (*(void (**)(char *, uint64_t))(v136 + 8))(v140, v141);
    goto LABEL_17;
  }
  v85 = v69;
  if (swift_dynamicCast(v137, v40, a2, v138, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000001003AD490);
    v86 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v87 = qword_1004A1DA0;
    v88 = (id)qword_1004A1DA0;
    v89 = v159;
    static Locale.current.getter(v88);
    v90 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v87, v89, 0, 0, 256);
    v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    v39 = v90;
    v91(v78, v69);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v137, v138);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v134, v40, a2, v135, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003AD430);
    v92 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v93 = qword_1004A1DA0;
    v94 = (id)qword_1004A1DA0;
    v95 = v159;
    static Locale.current.getter(v94);
    v96 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v93, v95, 0, 0, 256);
    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
    v39 = v96;
    v97(v78, v69);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v134, v135);
    goto LABEL_17;
  }
  if (swift_dynamicCast(v131, v40, a2, v132, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003AD3D0);
    v99 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v49, v78, v69);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v100 = qword_1004A1DA0;
    v101 = (id)qword_1004A1DA0;
    v102 = v159;
    static Locale.current.getter(v101);
    v103 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v100, v102, 0, 0, 256);
    v104 = *(void (**)(char *, uint64_t))(v99 + 8);
    v39 = v103;
    v104(v78, v69);
    (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v132);
    goto LABEL_17;
  }
  v157 = v40;
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v105 = type metadata accessor for Logger(0, v98);
  sub_1000086B4(v105, (uint64_t)static Logger.actions);
  v106 = v128;
  v107 = v127;
  v108 = ((uint64_t (*)(char *, uint64_t, uint64_t))v127)(v128, v160, a2);
  v109 = Logger.logObject.getter(v108);
  v110 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v109, v110))
  {
    v111 = swift_slowAlloc(12, -1);
    v160 = swift_slowAlloc(32, -1);
    v161 = v160;
    *(_DWORD *)v111 = 136315138;
    v112 = (void (*)(char *, char *, uint64_t))v107;
    v113 = v126;
    v112(v126, v106, a2);
    v114 = (char *)String.init<A>(describing:)(v113, a2);
    v115 = v106;
    v117 = v116;
    *(_QWORD *)(v111 + 4) = sub_100019400(v114, v116, &v161);
    swift_bridgeObjectRelease(v117);
    v118 = *(void (**)(char *, uint64_t))(v158 + 8);
    v118(v115, a2);
    _os_log_impl((void *)&_mh_execute_header, v109, v110, "DeleteOrRemoveDownload: unhandled item type=%s", (uint8_t *)v111, 0xCu);
    v119 = v160;
    swift_arrayDestroy(v160, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v119, -1, -1);
    swift_slowDealloc(v111, -1, -1);
  }
  else
  {
    v120 = v106;
    v118 = *(void (**)(char *, uint64_t))(v158 + 8);
    v118(v120, a2);
  }

  v121 = v157;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000053, 0x80000001003AD370);
  v122 = v18;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v85);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v123 = qword_1004A1DA0;
  v124 = (id)qword_1004A1DA0;
  v125 = v159;
  static Locale.current.getter(v124);
  v39 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v123, v125, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v23, v85);
  v118(v121, a2);
  return v39;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x80E265766F6D6552, 0xA9000000000000A6);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.DeleteOrRemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440AA0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100440AC8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F228;
}

uint64_t (*sub_10001FDF0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440C68, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100440C90, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F88C;
}

double sub_10001FE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  _OWORD v27[12];
  uint64_t v28;

  v8 = sub_100005574(&qword_10048DCE8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_100014A7C(a4, (uint64_t)v27, &qword_10048DCF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 248) & ~v15;
  v17 = swift_allocObject(&unk_100440CE0, v16 + v10, v15 | 7);
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  v18 = v27[11];
  *(_OWORD *)(v17 + 208) = v27[10];
  *(_OWORD *)(v17 + 224) = v18;
  *(_QWORD *)(v17 + 240) = v28;
  v19 = v27[7];
  *(_OWORD *)(v17 + 144) = v27[6];
  *(_OWORD *)(v17 + 160) = v19;
  v20 = v27[9];
  *(_OWORD *)(v17 + 176) = v27[8];
  *(_OWORD *)(v17 + 192) = v20;
  v21 = v27[3];
  *(_OWORD *)(v17 + 80) = v27[2];
  *(_OWORD *)(v17 + 96) = v21;
  v22 = v27[5];
  *(_OWORD *)(v17 + 112) = v27[4];
  *(_OWORD *)(v17 + 128) = v22;
  v23 = v27[1];
  *(_OWORD *)(v17 + 48) = v27[0];
  *(_OWORD *)(v17 + 64) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(a3);
  v24 = sub_1001AD214((uint64_t)v13, (uint64_t)&unk_10048DD00, v17);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_100020034(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10000EA88;
  return v12(a6, a7);
}

uint64_t sub_1000200A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1000200C0, 0, 0);
}

uint64_t sub_1000200C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_100020170;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000003ALL, 0x80000001003AD730, sub_100020F40, v2, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_100020170()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1000201F4, 0, 0);
  v5 = *(_BYTE **)(v3 + 16);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  *v5 = *(_BYTE *)(v3 + 72);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1000201F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t _s9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043C908, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100020270(uint64_t a1, uint64_t a2)
{
  _s22DeleteOrRemoveDownloadO7ContextVwcp(a2, a1);
  return a2;
}

uint64_t sub_1000202A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000202C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_10048DC54);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10048DC50 + dword_10048DC50))(a1, a2, v7, v6);
}

uint64_t sub_10002034C()
{
  return sub_100020414((uint64_t (*)(_QWORD, uint64_t))sub_10001E48C);
}

uint64_t sub_10002035C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10048DC64);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10000F894;
  return MusicLibrary.remove<A>(_:)(v5, v2, v3);
}

uint64_t sub_100020408()
{
  return sub_100020414((uint64_t (*)(_QWORD, uint64_t))sub_10001E624);
}

uint64_t sub_100020414(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 56), v1 + ((v2 + 64) & ~v2));
}

uint64_t sub_100020440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000204AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 64) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10048DC74);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10000F894;
  return MusicLibrary.removeDownload<A>(_:)(v5, v2, v3);
}

uint64_t sub_100020554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_100020714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v8 = (uint64_t)v0 + v6;
  v9 = (uint64_t)v0 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DC84);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000F894;
  return sub_10001E7BC(v8, v9, v2, v3, v4);
}

_QWORD *sub_1000207D4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_100020810()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100020838()
{
  unint64_t result;

  result = qword_10048DC90;
  if (!qword_10048DC90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.DeleteOrRemoveDownload.Choice, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
    atomic_store(result, (unint64_t *)&qword_10048DC90);
  }
  return result;
}

unint64_t sub_100020880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048DC98;
  if (!qword_10048DC98)
  {
    v1 = sub_100005600(&qword_10048DCA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10048DC98);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload()
{
  return &type metadata for Actions.DeleteOrRemoveDownload;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  sub_10000682C(a1 + 10);
  return swift_bridgeObjectRelease(a1[16]);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v13 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v13;
  v14 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v14;
  v5 = *(_QWORD *)(a2 + 72);
  v15 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 72) = v5;
  v6 = a1 + 80;
  v7 = a2 + 80;
  v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain(v4);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v5);
  v10(v6, v7, v9);
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_retain(v12);
  swift_release(v13);
  sub_100020AF8((_QWORD *)(a1 + 80), (_QWORD *)(a2 + 80));
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v14 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

_QWORD *sub_100020AF8(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v11 = *result;
        v12 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v11);
        *v3 = v12;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v10);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v13 = *a2;
          *v3 = *a2;
          swift_retain(v13);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }
  return result;
}

__n128 _s22DeleteOrRemoveDownloadO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v8);
  sub_10000682C((_QWORD *)(a1 + 80));
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v10 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  return a1;
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 137))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22DeleteOrRemoveDownloadO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 137) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 137) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Context()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Context;
}

uint64_t _s22DeleteOrRemoveDownloadO6ChoiceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100020E40 + 4 * byte_100387385[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100020E74 + 4 * asc_100387380[v4]))();
}

uint64_t sub_100020E74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100020E7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100020E84);
  return result;
}

uint64_t sub_100020E90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100020E98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100020E9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100020EA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Choice()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t sub_100020EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_10048DC54);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10048DC50 + dword_10048DC50))(a1, a2, v7, v6);
}

double sub_100020F40(uint64_t a1)
{
  uint64_t *v1;

  return sub_10001FE6C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100020F4C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_100005574(&qword_10048DCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 248) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 5));
  swift_release(*((_QWORD *)v0 + 7));
  swift_release(*((_QWORD *)v0 + 9));
  swift_release(*((_QWORD *)v0 + 11));
  swift_release(*((_QWORD *)v0 + 13));
  swift_release(*((_QWORD *)v0 + 15));
  sub_10000682C((_QWORD *)v0 + 16);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 22));
  swift_release(*((_QWORD *)v0 + 25));
  swift_release(*((_QWORD *)v0 + 28));
  v7 = swift_release(*((_QWORD *)v0 + 30));
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(&v0[v4], v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10002101C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048DCE8) - 8) + 80);
  v3 = *(int **)(v0 + 32);
  v4 = v0 + 48;
  v5 = v0 + ((v2 + 248) & ~v2);
  v6 = (_QWORD *)swift_task_alloc(dword_10048DCFC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v7 = (_QWORD *)swift_task_alloc(v3[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10000EA88;
  return v9(v4, v5);
}

uint64_t sub_1000210D0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10001D578(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_1000210EC(_QWORD *a1)
{
  _s22DeleteOrRemoveDownloadO7ContextVwxx(a1);
  return a1;
}

uint64_t sub_100021118()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574(&qword_10048DCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 161) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*((_QWORD *)v0 + 4));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  sub_10000682C((_QWORD *)v0 + 13);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 19));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000211C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048DCE8) - 8) + 80);
  v3 = v0 + 24;
  v4 = v0 + ((v2 + 161) & ~v2);
  v5 = *(_BYTE *)(v0 + 16);
  v6 = (_QWORD *)swift_task_alloc(dword_10048DD0C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000EA88;
  return sub_10001D76C(v5, v3, v4);
}

uint64_t sub_100021240()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574(&qword_10048DCE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 177) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 6));
  swift_release(*((_QWORD *)v0 + 8));
  swift_release(*((_QWORD *)v0 + 10));
  swift_release(*((_QWORD *)v0 + 12));
  swift_release(*((_QWORD *)v0 + 14));
  sub_10000682C((_QWORD *)v0 + 15);
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 21));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000212F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048DCE8) - 8) + 80);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = v0 + 40;
  v5 = v0 + ((v2 + 177) & ~v2);
  v6 = swift_task_alloc(dword_10048DD1C);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10000F894;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  *(_BYTE *)(v6 + 49) = v3;
  return swift_task_switch(sub_10001D95C, 0, 0);
}

uint64_t static Actions.Download.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048DD30;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048DD38;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t (**a8)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t (*v58)();
  uint64_t v59;
  uint64_t result;
  unint64_t (**v61)();
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  __int128 *v67;
  char *v68;
  uint64_t v69;
  unint64_t (**v70)();
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v77 = a6;
  v69 = a4;
  v70 = a8;
  v66 = a2;
  v67 = a3;
  v72 = *(_QWORD *)(a5 - 8);
  v73 = a7;
  v74 = *(_QWORD *)(v72 + 64);
  v11 = __chkstk_darwin(a1);
  v68 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v78 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  v71 = (char *)&v62 - v15;
  v16 = type metadata accessor for MusicLibrary.DownloadAction(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100005574(&qword_10048DD40);
  v64 = *(_QWORD *)(v79 - 8);
  v20 = *(_QWORD *)(v64 + 64);
  v21 = __chkstk_darwin(v79);
  v76 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v62 - v23;
  v62 = (char *)&v62 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v62 - v26;
  static MusicLibraryAction<>.download.getter(v25);
  v75 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v19, a5, v16, a7, &protocol witness table for MusicLibrary.DownloadAction);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v28 = v72;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v29 = a5;
  v65(v71, a1, a5);
  v30 = v64;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v24, v27, v79);
  v31 = *(unsigned __int8 *)(v28 + 80);
  v32 = (v31 + 40) & ~v31;
  v33 = *(unsigned __int8 *)(v30 + 80);
  v34 = v30;
  v35 = v74;
  v36 = (v74 + v32 + v33) & ~v33;
  v63 = v31 | v33 | 7;
  v37 = (unint64_t (*)())swift_allocObject(&unk_100440DE8, v36 + v20, v63);
  v38 = v29;
  *((_QWORD *)v37 + 2) = v29;
  v39 = v77;
  v40 = v73;
  *((_QWORD *)v37 + 3) = v77;
  *((_QWORD *)v37 + 4) = v40;
  v41 = (char *)v37 + v32;
  v72 = *(_QWORD *)(v72 + 32);
  v42 = v38;
  ((void (*)(char *, char *))v72)(v41, v71);
  v43 = (char *)v37 + v36;
  v44 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v45 = v79;
  v44(v43, v62, v79);
  v44(v76, v27, v45);
  v65(v78, v75, v42);
  v46 = (v33 + 80) & ~v33;
  v47 = (v20 + v31 + v46) & ~v31;
  v48 = (v35 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (unint64_t (*)())swift_allocObject(&unk_100440E10, v48 + 8, v63);
  *((_QWORD *)v49 + 2) = v42;
  *((_QWORD *)v49 + 3) = v39;
  v50 = v73;
  *((_QWORD *)v49 + 4) = v73;
  sub_1000137C8(v67, (uint64_t)v49 + 40);
  v44((char *)v49 + v46, v76, v79);
  v51 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(char *, char *, uint64_t))v72)((char *)v49 + v47, v78, v42);
  *(_QWORD *)((char *)v49 + v48) = v66;
  v52 = v68;
  v51(v68, v75, v42);
  v53 = (uint64_t (*)(char *, char *, uint64_t))v51;
  v54 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = (v55 + 40) & ~v55;
  v57 = (*(_QWORD *)(v54 + 64) + v31 + v56) & ~v31;
  v58 = (unint64_t (*)())swift_allocObject(&unk_100440E38, v57 + v74, v31 | v55 | 7);
  v59 = v77;
  *((_QWORD *)v58 + 2) = v42;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v50;
  sub_10000F3EC(v69, (uint64_t)v58 + v56);
  result = v53((char *)v58 + v57, v52, v42);
  v61 = v70;
  *v70 = sub_100021B70;
  v61[1] = v37;
  v61[2] = (unint64_t (*)())&unk_10048DD50;
  v61[3] = v49;
  v61[4] = (unint64_t (*)())&unk_10048DD60;
  v61[5] = v58;
  return result;
}

unint64_t sub_100021800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];

  v35 = a2;
  v36 = a1;
  v4 = sub_100005574(&qword_10048DDC8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100491250);
  v34 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_100491260);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v36, a3);
  v21 = swift_dynamicCast(v13, v16, a3, v17, 6);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, v17);
    v26 = &qword_100491260;
    v27 = (uint64_t)v13;
    goto LABEL_5;
  }
  v23 = v9;
  v22(v13, 0, 1, v17);
  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v13, v17);
  Playlist.entries.getter(v24);
  v25 = v34;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v26 = &qword_10048DDC8;
    v27 = (uint64_t)v6;
LABEL_5:
    sub_100008758(v27, v26);
    return sub_100021BE8();
  }
  v29 = v23;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v6, v7);
  v30 = sub_1000246FC();
  dispatch thunk of Collection.startIndex.getter(v7);
  dispatch thunk of Collection.endIndex.getter(v37, v7, v30);
  v32 = v37[0];
  v31 = v37[1];
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v31 == v32)
    return 0xD000000000000011;
  return sub_100021BE8();
}

uint64_t sub_100021AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = sub_100005574(&qword_10048DD40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

unint64_t sub_100021B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048DD40) - 8) + 80);
  return sub_100021800(v0 + v3, v0 + ((v3 + v4 + v5) & ~v5), v1);
}

uint64_t sub_100021BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42[2];

  v1 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v38 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v38 - v9;
  v11 = sub_100005574(&qword_10048DD40);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v39 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v40 = (char *)&v38 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v38 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v41 = v0;
  v19((char *)&v38 - v17, v0, v11);
  v20 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v18, v11);
  if (v20 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v18, v11);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v18, v1);
    v22 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v22(v8, v10, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v8, v1) != enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v22(v5, v10, v1);
      v23 = String.init<A>(describing:)(v5, v1);
      v24 = *(void (**)(char *, uint64_t))(v2 + 8);
      v24(v10, v1);
      v24(v8, v1);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v25 = type metadata accessor for Logger(0, v21);
  sub_1000086B4(v25, (uint64_t)static Logger.actions);
  v26 = v40;
  v27 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v40, v41, v11);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    v42[0] = v31;
    *(_DWORD *)v30 = 136315138;
    v32 = v39;
    v19(v39, (uint64_t)v26, v11);
    v33 = (char *)String.init<A>(describing:)(v32, v11);
    v35 = v34;
    *(_QWORD *)(v30 + 4) = sub_100019400(v33, v34, v42);
    swift_bridgeObjectRelease(v35);
    v36 = *(void (**)(char *, uint64_t))(v12 + 8);
    v36(v26, v11);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unknown status=%s", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    v36 = *(void (**)(char *, uint64_t))(v12 + 8);
    v36(v26, v11);
  }

  v42[0] = 0;
  v42[1] = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)(v41, v42, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v23 = v42[0];
  v36(v18, v11);
  return v23;
}

uint64_t sub_100021FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  v9 = type metadata accessor for Locale(0);
  v7[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v7[27] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[28] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[29] = swift_task_alloc(v12);
  v7[30] = swift_task_alloc(v12);
  v13 = *(_QWORD *)(a5 - 8);
  v7[31] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v7[32] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[33] = swift_task_alloc(v15);
  v7[34] = swift_task_alloc(v15);
  v16 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason(0);
  v7[35] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[36] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[37] = swift_task_alloc(v18);
  v7[38] = swift_task_alloc(v18);
  v7[39] = swift_task_alloc(v18);
  v7[40] = swift_task_alloc(v18);
  v19 = sub_100005574(&qword_10048DD40);
  v7[41] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v7[42] = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[43] = swift_task_alloc(v21);
  v7[44] = swift_task_alloc(v21);
  v7[45] = swift_task_alloc(v21);
  return swift_task_switch(sub_100022128, 0, 0);
}

uint64_t sub_100022128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  unsigned __int8 v60;
  void *v61;
  id v62;
  NSString v63;
  unsigned __int8 v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(_QWORD *)(v0 + 160), v2);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v7 = *(_QWORD *)(v0 + 360);
    v9 = *(_QWORD *)(v0 + 312);
    v8 = *(_QWORD *)(v0 + 320);
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 288);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 336) + 96))(v7, *(_QWORD *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v7, v10);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v12(v9, v8, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v9, v10) == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v14 = *(_QWORD *)(v0 + 152);
      v15 = swift_task_alloc(32);
      *(_QWORD *)(v0 + 368) = v15;
      *(_QWORD *)(v15 + 16) = v14;
      v16 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 376) = v16;
      *v16 = v0;
      v16[1] = sub_1000229BC;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 440, 0, 0, 0xD00000000000001DLL, 0x80000001003AD880, sub_1000244A8, v15, &type metadata for Bool);
    }
    else
    {
      if (qword_10048C590 != -1)
        swift_once(&qword_10048C590, sub_100086650);
      v35 = *(_QWORD *)(v0 + 320);
      v36 = *(_QWORD *)(v0 + 304);
      v37 = *(_QWORD *)(v0 + 280);
      v38 = type metadata accessor for Logger(0, v13);
      sub_1000086B4(v38, (uint64_t)static Logger.actions);
      v39 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v36, v35, v37);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter();
      v42 = os_log_type_enabled(v40, v41);
      v43 = *(_QWORD *)(v0 + 320);
      v44 = *(_QWORD *)(v0 + 304);
      if (v42)
      {
        v45 = *(_QWORD *)(v0 + 296);
        v103 = *(_QWORD *)(v0 + 288);
        v46 = *(_QWORD *)(v0 + 280);
        v47 = swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v106 = v48;
        *(_DWORD *)v47 = 136315138;
        v12(v45, v44, v46);
        v49 = (char *)String.init<A>(describing:)(v45, v46);
        v51 = v50;
        *(_QWORD *)(v47 + 4) = sub_100019400(v49, v50, &v106);
        swift_bridgeObjectRelease(v51);
        v52 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
        v52(v44, v46);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Couldn't download for reason: %s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {
        v46 = *(_QWORD *)(v0 + 280);
        v66 = *(_QWORD *)(v0 + 288);

        v52 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v52(v44, v46);
      }
      v52(v43, v46);
      v52(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 280));
      v67 = *(_QWORD *)(v0 + 352);
      v68 = *(_QWORD *)(v0 + 344);
      v70 = *(_QWORD *)(v0 + 312);
      v69 = *(_QWORD *)(v0 + 320);
      v72 = *(_QWORD *)(v0 + 296);
      v71 = *(_QWORD *)(v0 + 304);
      v74 = *(_QWORD *)(v0 + 264);
      v73 = *(_QWORD *)(v0 + 272);
      v75 = *(_QWORD *)(v0 + 240);
      v100 = *(_QWORD *)(v0 + 232);
      v104 = *(_QWORD *)(v0 + 208);
      swift_task_dealloc(*(_QWORD *)(v0 + 360));
      swift_task_dealloc(v67);
      swift_task_dealloc(v68);
      swift_task_dealloc(v69);
      swift_task_dealloc(v70);
      swift_task_dealloc(v71);
      swift_task_dealloc(v72);
      swift_task_dealloc(v73);
      swift_task_dealloc(v74);
      swift_task_dealloc(v75);
      swift_task_dealloc(v100);
      swift_task_dealloc(v104);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if (v5 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    if (qword_10048C590 != -1)
      swift_once(&qword_10048C590, sub_100086650);
    v18 = *(_QWORD *)(v0 + 352);
    v19 = *(_QWORD *)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 160);
    v21 = type metadata accessor for Logger(0, v6);
    sub_1000086B4(v21, (uint64_t)static Logger.actions);
    v22 = v4(v18, v20, v19);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.fault.getter();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 352);
    if (v25)
    {
      v27 = *(_QWORD *)(v0 + 344);
      v102 = *(_QWORD *)(v0 + 336);
      v28 = *(_QWORD *)(v0 + 328);
      v29 = swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v106 = v30;
      *(_DWORD *)v29 = 136315138;
      v4(v27, v26, v28);
      v31 = (char *)String.init<A>(describing:)(v27, v28);
      v33 = v32;
      *(_QWORD *)(v29 + 4) = sub_100019400(v31, v32, &v106);
      swift_bridgeObjectRelease(v33);
      v34 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v34(v26, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unknown status=%s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 336) + 8);
      v34(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
    }

    v34(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 328));
  }
  v53 = *(_QWORD *)(v0 + 272);
  v54 = *(_QWORD *)(v0 + 184);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
  v55(v53, *(_QWORD *)(v0 + 168), v54);
  v56 = sub_100005574(&qword_10048DD98);
  if ((swift_dynamicCast(v0 + 112, v53, v54, v56, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    sub_100008758(v0 + 112, &qword_10048DDA0);
    goto LABEL_21;
  }
  sub_1000137C8((__int128 *)(v0 + 112), v0 + 72);
  v58 = *(_QWORD *)(v0 + 96);
  v57 = *(_QWORD *)(v0 + 104);
  sub_10000ABC8((_QWORD *)(v0 + 72), v58);
  if (!sub_1000ED070(v58, v57))
    goto LABEL_19;
  v59 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v60 = objc_msgSend(v59, "prefersSpatialDownloads");

  if ((v60 & 1) != 0
    || (v61 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v0 + 384) = v61,
        v62 = objc_msgSend(v61, "standardUserDefaults"),
        v63 = String._bridgeToObjectiveC()(),
        v64 = objc_msgSend(v62, "BOOLForKey:", v63),
        v63,
        v62,
        (v64 & 1) != 0))
  {
LABEL_19:
    sub_10000682C((_QWORD *)(v0 + 72));
LABEL_21:
    v65 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v0 + 432) = v65;
    *v65 = v0;
    v65[1] = sub_1000231A8;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  }
  v76 = *(_QWORD *)(v0 + 232);
  v77 = *(_QWORD *)(v0 + 240);
  v78 = *(_QWORD *)(v0 + 216);
  v79 = *(_QWORD *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x80000001003AD7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v76, v77, v78);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v80 = *(_QWORD *)(v0 + 248);
  v97 = *(_QWORD *)(v0 + 264);
  v98 = *(_QWORD *)(v0 + 256);
  v82 = *(_QWORD *)(v0 + 232);
  v81 = *(_QWORD *)(v0 + 240);
  v84 = *(_QWORD *)(v0 + 216);
  v83 = *(_QWORD *)(v0 + 224);
  v85 = *(_QWORD *)(v0 + 208);
  v86 = *(_QWORD *)(v0 + 168);
  v99 = *(_QWORD *)(v0 + 176);
  v101 = *(_QWORD *)(v0 + 200);
  v87 = qword_1004A1DA0;
  v88 = (id)qword_1004A1DA0;
  v105 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter(v88);
  *(_QWORD *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)(v82, 0, 0, v87, v85, 0, 0, 256);
  *(_QWORD *)(v0 + 400) = v89;
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v84);
  v55(v97, v86, v105);
  v90 = *(unsigned __int8 *)(v80 + 80);
  v91 = (v90 + 48) & ~v90;
  v92 = swift_allocObject(&unk_100440FD8, v91 + v98, v90 | 7);
  *(_QWORD *)(v0 + 408) = v92;
  *(_OWORD *)(v92 + 16) = v105;
  *(_QWORD *)(v92 + 32) = v101;
  *(_QWORD *)(v92 + 40) = v99;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v80 + 32))(v92 + v91, v97, v105);
  v93 = type metadata accessor for MainActor(0);
  v94 = swift_retain(v99);
  *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v94);
  v95 = dispatch thunk of Actor.unownedExecutor.getter(v93, &protocol witness table for MainActor);
  return swift_task_switch(sub_100022F08, v95, v96);
}

uint64_t sub_1000229BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 368);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100022A18, 0, 0);
}

uint64_t sub_100022A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned __int8 v19;
  void *v20;
  id v21;
  NSString v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;

  v3 = *(unsigned __int8 *)(v2 + 440);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v4 = type metadata accessor for Logger(0, a2);
  v5 = sub_1000086B4(v4, (uint64_t)static Logger.actions);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v8 + 4) = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Cellular data enablement: %{BOOL}d", (uint8_t *)v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v2 + 320);
  v10 = *(_QWORD *)(v2 + 280);
  v11 = *(_QWORD *)(v2 + 288);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (!v3)
  {
    v24 = *(_QWORD *)(v2 + 352);
    v25 = *(_QWORD *)(v2 + 344);
    v27 = *(_QWORD *)(v2 + 312);
    v26 = *(_QWORD *)(v2 + 320);
    v29 = *(_QWORD *)(v2 + 296);
    v28 = *(_QWORD *)(v2 + 304);
    v31 = *(_QWORD *)(v2 + 264);
    v30 = *(_QWORD *)(v2 + 272);
    v32 = *(_QWORD *)(v2 + 240);
    v59 = *(_QWORD *)(v2 + 232);
    v61 = *(_QWORD *)(v2 + 208);
    swift_task_dealloc(*(_QWORD *)(v2 + 360));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  v12 = *(_QWORD *)(v2 + 272);
  v13 = *(_QWORD *)(v2 + 184);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 248) + 16);
  v14(v12, *(_QWORD *)(v2 + 168), v13);
  v15 = sub_100005574(&qword_10048DD98);
  if ((swift_dynamicCast(v2 + 112, v12, v13, v15, 6) & 1) == 0)
  {
    *(_QWORD *)(v2 + 144) = 0;
    *(_OWORD *)(v2 + 112) = 0u;
    *(_OWORD *)(v2 + 128) = 0u;
    sub_100008758(v2 + 112, &qword_10048DDA0);
    goto LABEL_13;
  }
  sub_1000137C8((__int128 *)(v2 + 112), v2 + 72);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 104);
  sub_10000ABC8((_QWORD *)(v2 + 72), v16);
  if (!sub_1000ED070(v16, v17))
    goto LABEL_10;
  v18 = objc_msgSend((id)objc_opt_self(MPPlaybackUserDefaults), "standardUserDefaults");
  v19 = objc_msgSend(v18, "prefersSpatialDownloads");

  if ((v19 & 1) != 0
    || (v20 = (void *)objc_opt_self(NSUserDefaults),
        *(_QWORD *)(v2 + 384) = v20,
        v21 = objc_msgSend(v20, "standardUserDefaults"),
        v22 = String._bridgeToObjectiveC()(),
        v23 = objc_msgSend(v21, "BOOLForKey:", v22),
        v22,
        v21,
        (v23 & 1) != 0))
  {
LABEL_10:
    sub_10000682C((_QWORD *)(v2 + 72));
LABEL_13:
    v34 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
    *(_QWORD *)(v2 + 432) = v34;
    *v34 = v2;
    v34[1] = sub_1000231A8;
    return MusicLibrary.download<A>(_:)(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192));
  }
  v35 = *(_QWORD *)(v2 + 232);
  v36 = *(_QWORD *)(v2 + 240);
  v37 = *(_QWORD *)(v2 + 216);
  v38 = *(_QWORD *)(v2 + 224);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000098, 0x80000001003AD7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v35, v36, v37);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v39 = *(_QWORD *)(v2 + 248);
  v56 = *(_QWORD *)(v2 + 264);
  v57 = *(_QWORD *)(v2 + 256);
  v41 = *(_QWORD *)(v2 + 232);
  v40 = *(_QWORD *)(v2 + 240);
  v43 = *(_QWORD *)(v2 + 216);
  v42 = *(_QWORD *)(v2 + 224);
  v44 = *(_QWORD *)(v2 + 208);
  v45 = *(_QWORD *)(v2 + 168);
  v58 = *(_QWORD *)(v2 + 176);
  v60 = *(_QWORD *)(v2 + 200);
  v46 = qword_1004A1DA0;
  v47 = (id)qword_1004A1DA0;
  v62 = *(_OWORD *)(v2 + 184);
  static Locale.current.getter(v47);
  *(_QWORD *)(v2 + 392) = String.init(localized:table:bundle:locale:comment:)(v41, 0, 0, v46, v44, 0, 0, 256);
  *(_QWORD *)(v2 + 400) = v48;
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v43);
  v14(v56, v45, v62);
  v49 = *(unsigned __int8 *)(v39 + 80);
  v50 = (v49 + 48) & ~v49;
  v51 = swift_allocObject(&unk_100440FD8, v50 + v57, v49 | 7);
  *(_QWORD *)(v2 + 408) = v51;
  *(_OWORD *)(v51 + 16) = v62;
  *(_QWORD *)(v51 + 32) = v60;
  *(_QWORD *)(v51 + 40) = v58;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v39 + 32))(v51 + v50, v56, v62);
  v52 = type metadata accessor for MainActor(0);
  v53 = swift_retain(v58);
  *(_QWORD *)(v2 + 416) = static MainActor.shared.getter(v53);
  v54 = dispatch thunk of Actor.unownedExecutor.getter(v52, &protocol witness table for MainActor);
  return swift_task_switch(sub_100022F08, v54, v55);
}

uint64_t sub_100022F08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[51];
  v3 = v0[49];
  v2 = v0[50];
  swift_release(v0[52]);
  sub_1000DE424(v3, v2, (uint64_t)&unk_10048DDB0, v1, (uint64_t)(v0 + 2));
  swift_bridgeObjectRelease(v2);
  swift_release(v1);
  return swift_task_switch(sub_100022F80, 0, 0);
}

uint64_t sub_100022F80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 152);
  v2 = v1[3];
  v3 = v1[4];
  sub_10000ABC8(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 424) = v5;
  *v5 = v0;
  v5[1] = sub_100023008;
  return v7(v0 + 16, v2, v3);
}

uint64_t sub_100023008()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  return swift_task_switch(sub_10002305C, 0, 0);
}

uint64_t sub_10002305C()
{
  uint64_t v0;
  id v1;
  Class isa;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend(*(id *)(v0 + 384), "standardUserDefaults");
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v3);

  sub_1000149EC((_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 72));
  v4 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 344);
  v7 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 320);
  v9 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 264);
  v10 = *(_QWORD *)(v0 + 272);
  v12 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc(*(_QWORD *)(v0 + 360));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000231A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(*v0 + 432);
  v2 = *v0;
  swift_task_dealloc(v1);
  v3 = *(_QWORD *)(v2 + 352);
  v4 = *(_QWORD *)(v2 + 344);
  v6 = *(_QWORD *)(v2 + 312);
  v5 = *(_QWORD *)(v2 + 320);
  v8 = *(_QWORD *)(v2 + 296);
  v7 = *(_QWORD *)(v2 + 304);
  v9 = *(_QWORD *)(v2 + 272);
  v11 = *(_QWORD *)(v2 + 264);
  v12 = *(_QWORD *)(v2 + 240);
  v13 = *(_QWORD *)(v2 + 232);
  v14 = *(_QWORD *)(v2 + 208);
  swift_task_dealloc(*(_QWORD *)(v2 + 360));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000232A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_100005574(&qword_10048DD40);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 80) & ~v4;
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + *(_QWORD *)(v3 + 64) + v7) & ~v7;
  v9 = v4 | v7 | 7;
  v10 = (*(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10000682C((_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v1);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v9);
}

uint64_t sub_100023370()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = *(_QWORD *)(sub_100005574(&qword_10048DD40) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)(v0 + 5);
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v8;
  v12 = *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc(dword_10048DD4C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000EA88;
  return sub_100021FC0(v9, v10, v11, v12, v2, v3, v4);
}

double sub_100023444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21[2];

  v4 = sub_100005574(&qword_1004921D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1000244B0(a2, (uint64_t)v21);
  v12 = type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject(&unk_100441000, v16 + 40, v14 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v7, v4);
  sub_1000137C8(v21, v17 + v16);
  v18 = sub_1000C66A8((uint64_t)v10, (uint64_t)&unk_10048DDC0, v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1000235C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_100005574(&qword_1004921D0);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[13] = v8;
  v5[14] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[15] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[16] = v10;
  v5[17] = v11;
  return swift_task_switch(sub_100023660, v10, v11);
}

uint64_t sub_100023660(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t **v20;
  uint64_t (*v22)(uint64_t *, uint64_t, uint64_t);

  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.actions);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Will present cellular data enablement alert", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v9 = v2[13];
  v8 = v2[14];
  v10 = v2[11];
  v11 = v2[12];
  v13 = v2[9];
  v12 = (_QWORD *)v2[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v13, v10);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_100441028, v15 + v9, v14 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v16 + v15, v8, v10);
  sub_1000DE7C8((uint64_t)sub_100024694, v16, v2 + 2);
  swift_release(v16);
  v17 = v12[3];
  v18 = v12[4];
  sub_10000ABC8(v12, v17);
  v19 = *(int **)(v18 + 8);
  v22 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)v19 + *v19);
  v20 = (uint64_t **)swift_task_alloc(v19[1]);
  v2[18] = (uint64_t)v20;
  *v20 = v2;
  v20[1] = (uint64_t *)sub_100023818;
  return v22(v2 + 2, v17, v18);
}

uint64_t sub_100023818()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_100023864, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_100023864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  sub_1000149EC((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000238A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  *(_QWORD *)(v5 + 24) = v9;
  *v9 = v5;
  v9[1] = sub_100023918;
  return MusicLibrary.download<A>(_:)(a3, a4, a5);
}

uint64_t sub_100023918()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 24);
  v3 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100023984, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100023984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v17;

  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = *(_QWORD *)(v2 + 32);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)static Logger.actions);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 32);
  if (v8)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v17 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v2 + 16) = v9;
    swift_errorRetain(v9);
    v12 = sub_100005574((uint64_t *)&unk_1004911F0);
    v13 = (char *)String.init<A>(describing:)(v2 + 16, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v17);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Download: perform failed: %{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v2 + 32));
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100023B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100023BF4, 0, 0);
}

uint64_t sub_100023BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000F76C(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100023DA8, v18, v19);
  }
}

uint64_t sub_100023DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 12, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10001EAF4, 0, 0);
}

uint64_t sub_100023E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_100024038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048DD5C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100023B48(v7, v8, v2, v3);
}

uint64_t Actions.Download.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.Download.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440E60, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x80000001003AD790;
  v1 = swift_allocObject(&unk_100440E88, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x80000001003AD790;
  return sub_10000F228;
}

uint64_t (*sub_1000242D0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100440F88, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000011;
  *(_QWORD *)(v0 + 24) = 0x80000001003AD790;
  v1 = swift_allocObject(&unk_100440FB0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000011;
  *(_QWORD *)(v1 + 24) = 0x80000001003AD790;
  return sub_10000F88C;
}

uint64_t sub_100024354()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.Download()
{
  return &type metadata for Actions.Download;
}

ValueMetadata *type metadata accessor for Actions.Download.Context()
{
  return &type metadata for Actions.Download.Context;
}

uint64_t sub_100024398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100024404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 48) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10048DDAC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.download<A>(_:)[1]);
  v6[3] = v7;
  *v7 = v6;
  v7[1] = sub_100023918;
  return MusicLibrary.download<A>(_:)(v5, v2, v3);
}

double sub_1000244A8(uint64_t a1)
{
  uint64_t v1;

  return sub_100023444(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1000244B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000244F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_100005574(&qword_1004921D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10000682C((_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_100024588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100005574(&qword_1004921D0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DDBC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000EA88;
  return sub_1000235C4(a1, v6, v7, v8, v9);
}

uint64_t sub_100024630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574(&qword_1004921D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100024694(char a1)
{
  uint64_t v2;
  char v4;

  sub_100005574(&qword_1004921D0);
  v4 = a1;
  v2 = sub_100005574(&qword_1004921D0);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

unint64_t sub_1000246FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100491280;
  if (!qword_100491280)
  {
    v1 = sub_100005600(&qword_100491250);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100491280);
  }
  return result;
}

uint64_t NSUserDefaults.ValueTransformer.transform.getter(uint64_t a1, uint64_t a2)
{
  swift_retain(a2);
  return a1;
}

uint64_t NSUserDefaults.ValueTransformer.transform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release(v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.color.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain(a4);
  return a3;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.radius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.init(canEditPlaylist:presentEditPlaylistView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = swift_allocObject(&unk_100441068, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  return a1;
}

uint64_t sub_100024898(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100024904, v4, v5);
}

uint64_t sub_100024904()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 32));
  v1(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002493C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100024960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10048DDD4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10048DDD0 + dword_10048DDD0))(v2, v3);
}

uint64_t static Actions.EditPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 25;
  *(_QWORD *)(a5 + 40) = sub_10000F930;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_10048DDE0;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_10048DDE8;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain(a2);
  return swift_retain(a4);
}

uint64_t sub_100024A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100013F98;
  return v6();
}

uint64_t sub_100024A7C()
{
  uint64_t v0;

  return sub_10001B47C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100024A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 25;
  *(_QWORD *)(a2 + 40) = sub_10000F930;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_10048DDE0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_10048DDE8;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain(v3);
  return swift_retain(v2);
}

uint64_t Actions.EditPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.EditPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100441090, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1004410B8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10000F228;
}

uint64_t (*sub_100024CD8())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004411B0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v0 + 24) = 0xE600000000000000;
  v1 = swift_allocObject(&unk_1004411D8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6C69636E6570;
  *(_QWORD *)(v1 + 24) = 0xE600000000000000;
  return sub_10000F88C;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist()
{
  return &type metadata for Actions.EditPlaylist;
}

uint64_t _s12EditPlaylistO7ContextVwxx(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t _s12EditPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain(v4);
  swift_retain(v3);
  return a1;
}

_QWORD *_s12EditPlaylistO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v7 = a2[2];
  v6 = a2[3];
  v8 = a1[3];
  a1[2] = v7;
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t _s12EditPlaylistO7ContextVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12EditPlaylistO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist.Context()
{
  return &type metadata for Actions.EditPlaylist.Context;
}

uint64_t sub_100024F0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100024F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for MusicLibrary.RemoveDownloadAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DCE0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter(v14);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a1, v11, a3, v8, a5, &protocol witness table for MusicLibrary.RemoveDownloadAction);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17 = sub_100025064();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v17;
}

uint64_t sub_100025064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18 - v7;
  v9 = sub_100005574(&qword_10048DCE0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
    {
      v15 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
      {
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        v15 = 0xD000000000000015;
      }
      else
      {
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
        {
          v15 = 0x6E776F6420746F4ELL;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v15;
        }
        v16 = *(void (**)(char *, uint64_t))(v3 + 8);
        if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
        {
          v15 = 0x61685320656D6F48;
        }
        else
        {
          v15 = 0x206E776F6E6B6E55;
          v16(v6, v2);
        }
      }
      v16(v8, v2);
    }
    return v15;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    return 0;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x206E776F6E6B6E55, 0xEF74726F70707573, "MusicCore/Actions+RemoveDownload.swift", 38, 2, 109, 0);
  __break(1u);
  return result;
}

uint64_t static Actions.RemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  v6 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 56) = v2;
  *(_BYTE *)(a2 + 64) = 40;
  *(_QWORD *)(a2 + 72) = sub_1000253EC;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10048DE20;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10048DE28;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v6);
  return swift_retain(v2);
}

uint64_t sub_1000253EC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(uint64_t (**)(uint64_t))a1;
  result = (*(uint64_t (**)(void))(a1 + 16))();
  if (v3 == 1)
  {
    v4 = v1(result);
    v6 = v5;
    sub_10001406C(v4, v5);
    if (v6 == 1)
      return 0xD00000000000001BLL;
    else
      return 0;
  }
  return result;
}

uint64_t sub_100025454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000F894;
  return v6();
}

uint64_t sub_1000254A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000EA88;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t Actions.RemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x442065766F6D6552, 0xEF64616F6C6E776FLL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100441218, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100441240, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F228;
}

uint64_t (*sub_100025708())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004413E0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x6873617274;
  *(_QWORD *)(v0 + 24) = 0xE500000000000000;
  v1 = swift_allocObject(&unk_100441408, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x6873617274;
  *(_QWORD *)(v1 + 24) = 0xE500000000000000;
  return sub_10000F88C;
}

uint64_t Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t result;
  uint64_t (**v52)();
  uint64_t (*v53)();
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)();
  char *v63;
  uint64_t v64;
  uint64_t (**v65)();
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;

  v67 = a6;
  v64 = a3;
  v65 = a7;
  v69 = a2;
  v11 = *(_QWORD *)(a4 - 8);
  v12 = __chkstk_darwin(a1);
  v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v59 = (char *)&v54 - v15;
  v16 = __chkstk_darwin(v14);
  v58 = (char *)&v54 - v17;
  v19 = v18;
  v60 = v18;
  __chkstk_darwin(v16);
  v21 = (char *)&v54 - v20;
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v68((char *)&v54 - v20, a1, v22);
  v61 = *(unsigned __int8 *)(v11 + 80);
  v23 = (v61 + 40) & ~v61;
  v66 = v61 | 7;
  v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = v24 + 8;
  v56 = v24;
  v57 = v24 + 8;
  v26 = (_QWORD *)swift_allocObject(&unk_100441268, v24 + 8, v61 | 7);
  v26[2] = a4;
  v26[3] = a5;
  v27 = a5;
  v54 = a5;
  v26[4] = a6;
  v28 = v26;
  v62 = (uint64_t (*)())v26;
  v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v29((char *)v26 + v23, v21, a4);
  v30 = v29;
  v55 = (void (*)(char *, uint64_t, uint64_t))v29;
  v31 = v68;
  v32 = v69;
  *(_QWORD *)((char *)v28 + v24) = v69;
  v33 = v58;
  v31(v58, a1, a4);
  v34 = v25;
  v35 = v66;
  v36 = (uint64_t (*)())swift_allocObject(&unk_100441290, v34, v66);
  *((_QWORD *)v36 + 2) = a4;
  *((_QWORD *)v36 + 3) = v27;
  v37 = v67;
  *((_QWORD *)v36 + 4) = v67;
  v30((char *)v36 + v23, v33, a4);
  v38 = v56;
  *(_QWORD *)((char *)v36 + v56) = v32;
  v39 = v59;
  v40 = a1;
  v68(v59, a1, a4);
  v41 = (uint64_t (*)())swift_allocObject(&unk_1004412B8, v57, v35);
  v42 = v54;
  *((_QWORD *)v41 + 2) = a4;
  *((_QWORD *)v41 + 3) = v42;
  *((_QWORD *)v41 + 4) = v37;
  v43 = v55;
  v55((char *)v41 + v23, (uint64_t)v39, a4);
  v44 = v69;
  *(_QWORD *)((char *)v41 + v38) = v69;
  v45 = v63;
  v43(v63, v40, a4);
  v46 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v47 = *(unsigned __int8 *)(v46 + 80);
  v48 = (v47 + 40) & ~v47;
  v49 = (*(_QWORD *)(v46 + 64) + v61 + v48) & ~v61;
  v50 = (uint64_t (*)())swift_allocObject(&unk_1004412E0, v49 + v60, v66 | v47);
  *((_QWORD *)v50 + 2) = a4;
  *((_QWORD *)v50 + 3) = v42;
  *((_QWORD *)v50 + 4) = v67;
  sub_10000F3EC(v64, (uint64_t)v50 + v48);
  v43((char *)v50 + v49, (uint64_t)v45, a4);
  result = swift_retain_n(v44, 2);
  v52 = v65;
  v53 = v62;
  *v65 = sub_100025E78;
  v52[1] = v53;
  v52[2] = (uint64_t (*)())sub_100025EB0;
  v52[3] = v36;
  v52[4] = (uint64_t (*)())&unk_10048DE38;
  v52[5] = v41;
  v52[6] = (uint64_t (*)())&unk_10048DE48;
  v52[7] = v50;
  return result;
}

uint64_t sub_100025A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)swift_task_alloc(dword_10048DE84);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000F894;
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.removeDownload<A>(_:)[1]);
  v8[2] = v9;
  *v9 = v8;
  v9[1] = sub_10000EA88;
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t sub_100025B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100025BCC, 0, 0);
}

uint64_t sub_100025BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_10000F76C(*(_QWORD *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100025D80, v18, v19);
  }
}

uint64_t sub_100025D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 29, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10001EAF4, 0, 0);
}

uint64_t sub_100025E50()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100025E78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return sub_10001B64C((uint64_t)v0 + v3, *(_QWORD *)((char *)v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8)), v1, v0[3], v0[4]);
}

uint64_t sub_100025EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_100024F3C(v4 + v7, *(_QWORD *)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)), v5, a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_100025EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v4 = v2 | 7;
  v5 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  swift_release(*(_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100025F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v5;
  v7 = *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_10048DE34);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_10000EA88;
  return sub_100025A88(v6, v7, v2, v3);
}

uint64_t sub_100025FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_1000261AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048DE44);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100025B20(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload()
{
  return &type metadata for Actions.RemoveDownload;
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload.Context()
{
  return &type metadata for Actions.RemoveDownload.Context;
}

uint64_t static Actions.RemoveFromPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 41;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048DE88;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048DE90;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t (*Actions.RemoveFromPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100441448, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_100441470, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10000F228;
}

uint64_t (*sub_1000263A0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004415E8, 32, 7);
  strcpy((char *)(v0 + 16), "minus.circle");
  *(_BYTE *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  v1 = swift_allocObject(&unk_100441610, 32, 7);
  strcpy((char *)(v1 + 16), "minus.circle");
  *(_BYTE *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return sub_10000F88C;
}

uint64_t Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  unint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t (**v48)();
  char *v49;
  uint64_t v50;

  v46 = a3;
  v47 = a4;
  v42 = a2;
  v48 = a5;
  v49 = a1;
  v43 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v43 - 8);
  v50 = *(_QWORD *)(v6 + 64);
  v7 = __chkstk_darwin(v43);
  v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - v9;
  v40 = (char *)&v39 - v9;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v39 - v15, a2, v11);
  v17 = *(unsigned __int8 *)(v12 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = v17 | 7;
  v44 = swift_allocObject(&unk_100441498, v18 + v13, v17 | 7);
  v20 = v44 + v18;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v21(v20, v16, v11);
  v22 = v10;
  v23 = v43;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v49, v43);
  v21((uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v11);
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (v24 + 24) & ~v24;
  v26 = (v50 + v17 + v25) & ~v17;
  v27 = swift_allocObject(&unk_1004414C0, v26 + v13, v19 | v24);
  *(_QWORD *)(v27 + 16) = v46;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v29 = v23;
  v28(v27 + v25, v40, v23);
  v21(v27 + v26, v41, v11);
  v30 = v45;
  v28((uint64_t)v45, v49, v29);
  v31 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 16) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v24 + v33) & ~v24;
  v35 = swift_allocObject(&unk_1004414E8, v34 + v50, v24 | v32 | 7);
  sub_10000F3EC(v47, v35 + v33);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v35 + v34, v30, v29);
  v37 = v48;
  v38 = v44;
  *v48 = sub_10002717C;
  v37[1] = (unint64_t (*)())v38;
  v37[2] = (unint64_t (*)())&unk_10048DEA0;
  v37[3] = (unint64_t (*)())v27;
  v37[4] = (unint64_t (*)())&unk_10048DEB0;
  v37[5] = (unint64_t (*)())v35;
  return result;
}

unint64_t sub_1000266B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v0 = type metadata accessor for Playlist.EditableComponents(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574((uint64_t *)&unk_100491640);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_100008758((uint64_t)v7, (uint64_t *)&unk_100491640);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    v8 = sub_100027580();
    v9 = dispatch thunk of SetAlgebra.isSuperset(of:)(v3, v0, v8);
    v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    v10(v7, v0);
    if ((v9 & 1) != 0)
      return 0;
  }
  return 0xD00000000000001ALL;
}

uint64_t sub_1000267F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3[3] = a2;
  v3[4] = a3;
  v6 = type metadata accessor for Playlist(0);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[6] = v7;
  v3[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Playlist.Entry(0);
  v3[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[9] = v9;
  v3[10] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.remove(_:from:)[1]);
  v3[11] = v10;
  *v10 = v3;
  v10[1] = sub_1000268B0;
  return MusicLibrary.remove(_:from:)(a2, a3);
}

uint64_t sub_1000268B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_100026934, 0, 0);
  v5 = *(_QWORD *)(v3 + 56);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100026934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  os_log_type_t type;
  NSObject *log;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = *(_QWORD *)(v2 + 96);
  v5 = *(_QWORD *)(v2 + 72);
  v4 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v2 + 64);
  v39 = *(_QWORD *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v10 = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  v11 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v11, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v10, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v39, v9, v8);
  swift_errorRetain(v3);
  v12 = swift_errorRetain(v3);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 72);
  v18 = *(_QWORD *)(v2 + 80);
  v19 = *(_QWORD *)(v2 + 56);
  v20 = *(_QWORD *)(v2 + 64);
  v22 = *(_QWORD *)(v2 + 40);
  v21 = *(_QWORD *)(v2 + 48);
  if (v15)
  {
    log = v13;
    v23 = swift_slowAlloc(32, -1);
    v40 = swift_slowAlloc(96, -1);
    v41 = v40;
    *(_DWORD *)v23 = 136446722;
    v24 = (char *)Playlist.Entry.description.getter();
    type = v14;
    v26 = v25;
    *(_QWORD *)(v23 + 4) = sub_100019400(v24, v25, &v41);
    swift_bridgeObjectRelease(v26);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v18, v20);
    *(_WORD *)(v23 + 12) = 2082;
    v28 = (char *)Playlist.description.getter(v27);
    v30 = v29;
    *(_QWORD *)(v23 + 14) = sub_100019400(v28, v29, &v41);
    swift_bridgeObjectRelease(v30);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v22);
    *(_WORD *)(v23 + 22) = 2082;
    *(_QWORD *)(v2 + 16) = v16;
    swift_errorRetain(v16);
    v31 = sub_100005574((uint64_t *)&unk_1004911F0);
    v32 = (char *)String.init<A>(describing:)(v2 + 16, v31);
    v34 = v33;
    *(_QWORD *)(v23 + 24) = sub_100019400(v32, v33, &v41);
    swift_bridgeObjectRelease(v34);
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v23, 0x20u);
    swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    swift_errorRelease(v16);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v2 + 96));
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v22);
    swift_errorRelease(v16);
    swift_errorRelease(v16);

  }
  v35 = *(_QWORD *)(v2 + 56);
  swift_task_dealloc(*(_QWORD *)(v2 + 80));
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100026BFC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_100005574(&qword_10048D510);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10048D8E8);
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[16] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[17] = v6;
  v2[18] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100026CA4, 0, 0);
}

uint64_t sub_100026CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_10000F76C(*(_QWORD *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 120), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 112);
    v8 = sub_10000F7B4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    v9 = Playlist.Entry.catalogID.getter(v8);
    *(_QWORD *)(v0 + 152) = v10;
    *(_QWORD *)(v0 + 160) = v9;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = Playlist.Entry.metricsContentType.getter();
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003849A0;
    *(_BYTE *)(inited + 72) = 2;
    *(_QWORD *)(v0 + 168) = sub_100033420(inited);
    *(_QWORD *)(v0 + 176) = v15;
    *(_QWORD *)(v0 + 184) = v16;
    *(_WORD *)(v0 + 200) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_100026E48, v19, v20);
  }
}

uint64_t sub_100026E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int16 *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 192));
  if (v4)
  {
    v9 = v5;
  }
  else
  {
    v4 = 0xEB000000006D6574;
    v9 = 0x497972617262694CLL;
  }
  sub_100033830(v9, v4, 5, 31, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_100026F3C, 0, 0);
}

uint64_t sub_100026F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10000F850(*(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s9MusicCore7ActionsO18RemoveFromPlaylistO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003AD930);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_1000270F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002711C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_10002717C()
{
  type metadata accessor for Playlist(0);
  return sub_1000266B4();
}

uint64_t sub_1000271A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100027264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DE9C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000EA88;
  return sub_1000267F4(v7, v8, v9);
}

uint64_t sub_100027300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_1000274C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = v0 + v3;
  v8 = v0 + (v6 & ~v5);
  v9 = (_QWORD *)swift_task_alloc(dword_10048DEAC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100026BFC(v7, v8);
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist()
{
  return &type metadata for Actions.RemoveFromPlaylist;
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist.Context()
{
  return &type metadata for Actions.RemoveFromPlaylist.Context;
}

unint64_t sub_100027580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048DEE8;
  if (!qword_10048DEE8)
  {
    v1 = type metadata accessor for Playlist.EditableComponents(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.EditableComponents, v1);
    atomic_store(result, (unint64_t *)&qword_10048DEE8);
  }
  return result;
}

uint64_t sub_1000275D4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000001CLL;
  else
    v3 = 0xD00000000000001DLL;
  if (v2)
    v4 = 0x80000001003ACD40;
  else
    v4 = 0x80000001003ACD60;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000001CLL;
  else
    v5 = 0xD00000000000001DLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003ACD60;
  else
    v6 = 0x80000001003ACD40;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_10002767C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1000276CC(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_100027730 + 4 * byte_1003875F4[a2]))(v2 + 16);
}

uint64_t sub_100027730(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001003ACA00;
  if (a1 == v1 + 16 && v2 == 0x80000001003ACA00)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 16, 0x80000001003ACA00, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_1000277CC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100027828(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100027890 + 4 * byte_1003875FC[a2]))(0x6C61727475656ELL);
}

uint64_t sub_100027890(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C61727475656ELL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C61727475656ELL, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_100027940(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xE900000000000073;
  v3 = 7105633;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x657469726F766166;
    else
      v4 = 0x64616F6C6E776F64;
    v5 = 0xE900000000000073;
    v6 = a2;
    if (a2)
    {
LABEL_6:
      if (v6 == 1)
        v3 = 0x657469726F766166;
      else
        v3 = 0x64616F6C6E776F64;
      if (v4 != v3)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 7105633;
    v6 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE300000000000000;
  if (v4 != 7105633)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v3, v2, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v5 != v2)
    goto LABEL_15;
  v7 = 1;
  v2 = v5;
LABEL_16:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  return v7 & 1;
}

uint64_t sub_100027A40(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x64657463656C6573;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 7105633;
    else
      v4 = 0x6E6F6973726576;
    if (v3 == 1)
      v5 = 0xE300000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 7105633;
      else
        v2 = 0x6E6F6973726576;
      if (v6 == 1)
        v7 = 0xE300000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE800000000000000;
    v4 = 0x64657463656C6573;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE800000000000000;
  if (v4 != 0x64657463656C6573)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_100027B48(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE0064616F6C6E77;
  v3 = 0x6F4465766F6D6572;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000011;
    else
      v5 = 0x6C65636E6163;
    if (v4 == 1)
      v6 = 0x80000001003ABF10;
    else
      v6 = 0xE600000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F4465766F6D6572;
  v6 = 0xEE0064616F6C6E77;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000011;
    else
      v3 = 0x6C65636E6163;
    if (v7 == 1)
      v2 = 0x80000001003ABF10;
    else
      v2 = 0xE600000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_100027C68(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100027CD4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100027D48 + 4 * byte_100387605[a2]))(0x656C746974);
}

uint64_t sub_100027D48(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_100027E08(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_100027E54(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_100027EB8 + 4 * byte_10038760E[a2]))(v2 + 11);
}

uint64_t sub_100027EB8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000001003ACAF0;
  if (a1 == v1 + 11 && v2 == 0x80000001003ACAF0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 11, 0x80000001003ACAF0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_100027F54(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000018;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001003ACA80;
  else
    v4 = 0x80000001003ACAA0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000018;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003ACAA0;
  else
    v6 = 0x80000001003ACA80;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_100028000(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100028050(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000280D8 + 4 * byte_100387618[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_1000280D8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4E6E657473696CLL, 0xE900000000000077, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  return v2 & 1;
}

void sub_1000281B0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100028200(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10002829C + 4 * byte_100387625[a2]))(0x756F795F726F66);
}

uint64_t sub_10002829C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x756F795F726F66 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x756F795F726F66, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_10002838C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1000283E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100028458 + 4 * byte_100387630[a2]))(0x63697373616C63);
}

uint64_t sub_100028458(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x63697373616C63 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x63697373616C63, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_100028510(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10002855C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000285C8 + 4 * byte_100387638[a2]))(0x6E776F6E6B6E75);
}

uint64_t sub_1000285C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E776F6E6B6E75 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6E776F6E6B6E75, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_100028678(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000019;
  if (v2)
    v4 = 0x80000001003ACF00;
  else
    v4 = 0x80000001003ACF20;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000019;
  if ((a2 & 1) != 0)
    v6 = 0x80000001003ACF20;
  else
    v6 = 0x80000001003ACF00;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100028720(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D75626C61;
  else
    v3 = 0x747369747261;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D75626C61;
  else
    v5 = 0x747369747261;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1000287BC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E69646E6570;
  else
    v3 = 1852403562;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E69646E6570;
  else
    v5 = 1852403562;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_100028858(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x7972617262696CLL;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7473696C79616C70;
  else
    v5 = 0x7972617262696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_1000288FC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100028944(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000289B0 + 4 * byte_100387640[a2]))(0x747369747241);
}

uint64_t sub_1000289B0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x747369747241 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x747369747241, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_100028A60(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100028AA0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100028B18 + 4 * byte_100387648[a2]))(0x6C616974726170);
}

uint64_t sub_100028B18(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616974726170 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616974726170, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t LaunchURL.Resolver.option.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Actions.SortPlaylist.Context.sortOption.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t Actions.SortPlaylist.Context.currentSort.getter()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 2))
    v1 = 256;
  else
    v1 = 0;
  return v1 | *(unsigned __int8 *)(v0 + 1);
}

uint64_t Actions.SortPlaylist.Context.currentSort.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  *(_BYTE *)(v1 + 2) = BYTE1(result) & 1;
  return result;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.currentSort.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_100028C8C(v3, a1);
}

uint64_t type metadata accessor for Actions.SortPlaylist.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10048DFD8;
  if (!qword_10048DFD8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.SortPlaylist.Context);
  return result;
}

uint64_t sub_100028C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048DEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24);
  return sub_100028D04(a1, v3);
}

uint64_t sub_100028D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048DEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.playlistVariant.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

void Actions.SortPlaylist.Context.didSelectSort.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  swift_release(v5[1]);
  *v5 = a1;
  v5[1] = a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.didSelectSort.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.SortPlaylist.Context(0);
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)@<X0>(char a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v12 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v13 = (uint64_t)&a6[*(int *)(v12 + 24)];
  v14 = type metadata accessor for Playlist.Variant(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = HIBYTE(a2) & 1;
  result = sub_100028D04(a3, v13);
  v16 = &a6[*(int *)(v12 + 28)];
  *v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Actions.SortPlaylist.action(context:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t result;
  uint64_t (**v17)();
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - v9;
  sub_10002901C((uint64_t)a1, (uint64_t)&v20 - v9);
  v11 = 0x1D1B1C1E1FuLL >> (8 * *a1);
  sub_10002901C((uint64_t)a1, (uint64_t)v8);
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = swift_allocObject(&unk_100441650, v13 + v6, v12 | 7);
  sub_100029274((uint64_t)v8, v14 + v13);
  v15 = (int *)sub_100005574(&qword_10048DF10);
  *(_BYTE *)(a2 + v15[13]) = v11;
  result = sub_100029274((uint64_t)v10, a2);
  *(_QWORD *)(a2 + v15[15]) = 0x4014000000000000;
  v17 = (uint64_t (**)())(a2 + v15[14]);
  *v17 = variable initialization expression of _NSRange.NSRangeIterator.current;
  v17[1] = 0;
  v18 = (_QWORD *)(a2 + v15[16]);
  *v18 = &unk_10048DF00;
  v18[1] = v14;
  v19 = (_QWORD *)(a2 + v15[17]);
  *v19 = &unk_10048DF08;
  v19[1] = 0;
  return result;
}

uint64_t sub_10002901C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100029060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a3;
  return swift_task_switch(sub_100029078, 0, 0);
}

uint64_t sub_100029078()
{
  uint64_t v0;
  unsigned int v1;
  char v2;
  __int16 v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = **(unsigned __int8 **)(v0 + 16);
  *(_BYTE *)(v0 + 52) = v1;
  sub_100027C68(v1);
  if ((v2 & 1) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_BYTE *)(v4 + 2);
    v6 = 256;
  }
  else
  {
    v6 = 0;
    v5 = v1 < 4;
    v4 = *(_QWORD *)(v0 + 16);
    v3 = 256;
  }
  *(_BYTE *)(v0 + 53) = v5;
  *(_WORD *)(v0 + 50) = v3;
  *(_WORD *)(v0 + 48) = v6;
  v7 = (_QWORD *)(v4 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 28));
  *(_QWORD *)(v0 + 24) = *v7;
  *(_QWORD *)(v0 + 32) = v7[1];
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_100029150, v9, v10);
}

uint64_t sub_100029150()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  unsigned int v2;
  unsigned __int16 *v3;
  int v4;

  v1 = *(void (**)(_QWORD))(v0 + 24);
  v2 = *(unsigned __int8 *)(v0 + 52);
  if (*(_BYTE *)(v0 + 53))
    v3 = (unsigned __int16 *)(v0 + 50);
  else
    v3 = (unsigned __int16 *)(v0 + 48);
  v4 = *v3;
  swift_release(*(_QWORD *)(v0 + 40));
  v1(v4 | v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000291B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Actions.SortPlaylist.Context(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100029274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Actions.SortPlaylist.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000292B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Actions.SortPlaylist.Context(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10048DEFC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  v4[2] = v3;
  return swift_task_switch(sub_100029078, 0, 0);
}

uint64_t Actions.SortPlaylist.TrackListSort.init(option:isAscending:)(unsigned __int8 a1, char a2)
{
  int v2;

  if ((a2 & 1) != 0)
    v2 = 256;
  else
    v2 = 0;
  return v2 & 0xFFFFFF00 | a1;
}

void Actions.SortPlaylist.Context.menuItemTitle.getter()
{
  char *v0;
  char v1;
  uint64_t v2;

  v1 = *v0;
  v2 = (uint64_t)&v0[*(int *)(type metadata accessor for Actions.SortPlaylist.Context(0) + 24)];
  sub_10002937C(v2, v1);
}

void sub_10002937C(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[1] = a1;
  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v11[3] = *(_QWORD *)(v5 - 8);
  v11[4] = v5;
  v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin(v7);
  v8 = sub_100005574(&qword_10048E050);
  __chkstk_darwin(v8);
  v9 = sub_100005574(&qword_10048DEF0);
  v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  __asm { BR              X10 }
}

uint64_t sub_100029514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v0, enum case for Playlist.Variant.favoriteSongs(_:), v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v0, 0, 1, v1);
  v10 = v5 + *(int *)(v3 + 48);
  sub_100028C8C(*(_QWORD *)(v9 - 120), v5);
  sub_100028C8C(v0, v10);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v11(v5, 1, v1) != 1)
  {
    sub_100028C8C(v5, v8);
    if (v11(v10, 1, v1) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v10, v1);
      v14 = sub_10002BC3C();
      v15 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v1, v14);
      v16 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v16(v6, v1);
      sub_100008758(v0, &qword_10048DEF0);
      v16(v8, v1);
      sub_100008758(v5, &qword_10048DEF0);
      if ((v15 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v12 = 0x7473696C79616C50;
      v13 = 0x726564724F20;
      goto LABEL_10;
    }
    sub_100008758(v0, &qword_10048DEF0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v1);
LABEL_6:
    sub_100008758(v5, &qword_10048E050);
    goto LABEL_7;
  }
  sub_100008758(v0, &qword_10048DEF0);
  if (v11(v10, 1, v1) != 1)
    goto LABEL_6;
  sub_100008758(v5, &qword_10048DEF0);
LABEL_9:
  v12 = 0x7661462065746144;
  v13 = 0x64657469726FLL;
LABEL_10:
  String.LocalizationValue.init(stringLiteral:)(v12, v13 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000);
  v18 = *(_QWORD *)(v9 - 104);
  v17 = *(_QWORD *)(v9 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, v2, v17);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v19 = qword_1004A1DA0;
  v20 = (id)qword_1004A1DA0;
  v21 = *(_QWORD *)(v9 - 112);
  static Locale.current.getter(v20);
  v22 = String.init(localized:table:bundle:locale:comment:)(v4, 0, 0, v19, v21, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  return v22;
}

void Actions.SortPlaylist.Context.menuItemImage.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_100029868@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)&loc_1000298C8 + *((int *)qword_100029B38 + a1)))(0x656C746974);
}

uint64_t (*sub_1000298D8(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    goto LABEL_5;
  }
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v3 & 1) != 0)
  {
LABEL_5:
    v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
    if (*(_BYTE *)(v1 + 2) == 1)
    {
      v5 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v6)
        goto LABEL_9;
    }
    else
    {
      v7 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v7);

      if (v6)
      {
LABEL_9:
        v8 = objc_msgSend(v6, "imageWithConfiguration:", v4);

LABEL_11:
        v9 = swift_allocObject(&unk_100441678, 24, 7);
        *(_QWORD *)(v9 + 16) = v8;
        v10 = swift_allocObject(&unk_1004416A0, 32, 7);
        *(_QWORD *)(v10 + 16) = Artwork.Placeholder.image.getter;
        *(_QWORD *)(v10 + 24) = v9;
        swift_retain(v9);
        return sub_10002AA8C;
      }
    }

    v8 = 0;
    goto LABEL_11;
  }
  return 0;
}

void Actions.SortPlaylist.Context.menuItemState.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_100029BBC@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100029C2C + 4 * byte_100387656[a1]))(0x656C746974);
}

uint64_t sub_100029C2C(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x656C746974 && v1 == 0xE500000000000000)
  {
    ((void (*)(unint64_t, uint64_t))swift_bridgeObjectRelease_n)(0xE500000000000000, 2);
    return 1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(0xE500000000000000);
    return v3 & 1;
  }
}

void sub_100029CF4(uint64_t a1)
{
  char *v1;

  sub_10002937C((uint64_t)&v1[*(int *)(a1 + 24)], *v1);
}

uint64_t sub_100029D08()
{
  uint64_t v0;
  char v1;

  sub_100027C68(*(_BYTE *)(v0 + 1));
  return v1 & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

_UNKNOWN **static Actions.SortPlaylist.TrackListSort.Option.allCases.getter()
{
  return &off_10043CA80;
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100029D88 + 4 * byte_10038765B[a1]))(0x7473696C79616C70, 0xED0000726564724FLL);
}

uint64_t sub_100029D88()
{
  return 0x656C746974;
}

uint64_t sub_100029D9C()
{
  return 0x747369747261;
}

uint64_t sub_100029DB0()
{
  return 0x6D75626C61;
}

uint64_t sub_100029DC4()
{
  return 0x44657361656C6572;
}

uint64_t sub_100029DE4(char *a1)
{
  char v1;

  sub_100027C68(*a1);
  return v1 & 1;
}

void sub_100029E04()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100029E5C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_100029EE0()
{
  __asm { BR              X10 }
}

uint64_t sub_100029F28(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C746974, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_100029F98()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100029FEC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10002A070@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10002A09C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_10002A0D8 + 4 * byte_10038766F[*v0]))();
}

void sub_10002A0D8(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_10002A0F0(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747261;
  a1[1] = 0xE600000000000000;
}

void sub_10002A108(_QWORD *a1@<X8>)
{
  *a1 = 0x6D75626C61;
  a1[1] = 0xE500000000000000;
}

void sub_10002A120(_QWORD *a1@<X8>)
{
  *a1 = 0x44657361656C6572;
  a1[1] = 0xEB00000000657461;
}

uint64_t sub_10002A144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10002BBB4();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10002A1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10002BBB4();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void sub_10002A1EC(_QWORD *a1@<X8>)
{
  *a1 = &off_10043CAA8;
}

void Actions.SortPlaylist.TrackListSort.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_10002A250()
{
  __int16 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
}

void static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_10002A350@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10002A3C0 + 4 * byte_10038767E[a1]))(0x656C746974);
}

uint64_t sub_10002A3C0(uint64_t a1)
{
  __int16 v1;
  uint64_t v2;
  __int16 v3;
  char v4;
  uint64_t result;

  if (a1 == 0x656C746974 && v2 == 0xE500000000000000)
  {
    ((void (*)(unint64_t, uint64_t))swift_bridgeObjectRelease_n)(0xE500000000000000, 2);
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x656C746974, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(0xE500000000000000);
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  return ((v1 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

BOOL sub_10002A49C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10002A4B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E656373417369;
  else
    return 0x6E6F6974706FLL;
}

uint64_t sub_10002A4F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10002AB64(a1, a2);
  *a3 = result;
  return result;
}

void sub_10002A518(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10002A524(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002AADC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002A54C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002AADC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Actions.SortPlaylist.TrackListSort.encode(to:)(_QWORD *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = sub_100005574(&qword_10048DF18);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_10002AADC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v11, v9, v10);
  v17 = a2;
  v16 = 0;
  v12 = sub_10002AB20();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v17, &v16, v5, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v12);
  if (!v2)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v15, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void Actions.SortPlaylist.TrackListSort.hashValue.getter(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  __asm { BR              X10 }
}

Swift::Int sub_10002A6FC()
{
  __int16 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(HIBYTE(v0) & 1);
  return Hasher._finalize()();
}

uint64_t Actions.SortPlaylist.TrackListSort.init(from:)(_QWORD *a1)
{
  return sub_10002AC64(a1) & 0x1FF;
}

void sub_10002A7A4()
{
  char *v0;

  Actions.SortPlaylist.TrackListSort.hashValue.getter(*v0);
}

void sub_10002A7C0()
{
  __asm { BR              X10 }
}

void sub_10002A814()
{
  Swift::UInt8 v0;
  uint64_t v1;

  String.hash(into:)(v1, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
}

void sub_10002A89C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_10002A8F8()
{
  Swift::UInt8 v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x656C746974, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

uint64_t sub_10002A98C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10002AC64(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_10002A9BC(_QWORD *a1)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return Actions.SortPlaylist.TrackListSort.encode(to:)(a1, v2 | *v1);
}

uint64_t sub_10002A9E8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(unsigned __int8 *)(a2 + 1);
  sub_100027C68(*(_BYTE *)a1);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t sub_10002AA20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *Artwork.Placeholder.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_10002AA68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002AA8C()
{
  uint64_t v0;

  return sub_10003D8AC(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t _s9MusicCore7ActionsO12SortPlaylistO09TrackListD0V6OptionO8rawValueAISgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043C9E8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_10002AADC()
{
  unint64_t result;

  result = qword_10048DF20;
  if (!qword_10048DF20)
  {
    result = swift_getWitnessTable(&unk_1003879E0, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10048DF20);
  }
  return result;
}

unint64_t sub_10002AB20()
{
  unint64_t result;

  result = qword_10048DF28;
  if (!qword_10048DF28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10048DF28);
  }
  return result;
}

uint64_t sub_10002AB64(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6E6F6974706FLL && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974706FLL, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x646E656373417369 && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease(0xEB00000000676E69);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646E656373417369, 0xEB00000000676E69, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10002AC64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  char v12;
  int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;

  v3 = sub_100005574(&qword_10048E040);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v7);
  v9 = sub_10002AADC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s12SortPlaylistO13TrackListSortV10CodingKeysON, &_s12SortPlaylistO13TrackListSortV10CodingKeysON, v9, v7, v8);
  if (v1)
    return sub_10000682C(a1);
  v17 = 0;
  v10 = sub_10002BBF8();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v18, &type metadata for Actions.SortPlaylist.TrackListSort.Option, &v17, v3, &type metadata for Actions.SortPlaylist.TrackListSort.Option, v10);
  v11 = v18;
  v16 = 1;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v16, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10000682C(a1);
  if ((v12 & 1) != 0)
    v14 = 256;
  else
    v14 = 0;
  return v14 | v11;
}

unint64_t sub_10002ADD8()
{
  unint64_t result;

  result = qword_10048DF60;
  if (!qword_10048DF60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10048DF60);
  }
  return result;
}

unint64_t sub_10002AE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048DF68;
  if (!qword_10048DF68)
  {
    v1 = sub_100005600(&qword_10048DF70);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10048DF68);
  }
  return result;
}

unint64_t sub_10002AE70()
{
  unint64_t result;

  result = qword_10048DF78;
  if (!qword_10048DF78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort, &type metadata for Actions.SortPlaylist.TrackListSort);
    atomic_store(result, (unint64_t *)&qword_10048DF78);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist()
{
  return &type metadata for Actions.SortPlaylist;
}

_QWORD *_s12SortPlaylistO7ContextVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Playlist.Variant(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100005574(&qword_10048DEF0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v13 = v16[1];
    *v15 = *v16;
    v15[1] = v13;
  }
  swift_retain(v13);
  return v4;
}

uint64_t _s12SortPlaylistO7ContextVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Playlist.Variant(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t _s12SortPlaylistO7ContextVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_10048DEF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v15);
  return a1;
}

_BYTE *_s12SortPlaylistO7ContextVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100005574(&qword_10048DEF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v17[1];
  v19 = v16[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain(v18);
  swift_release(v19);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_10048DEF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for Playlist.Variant(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100005574(&qword_10048DEF0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = *(_QWORD *)(a1 + v15 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  swift_release(v16);
  return a1;
}

uint64_t _s12SortPlaylistO7ContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002B4B0);
}

uint64_t sub_10002B4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100005574(&qword_10048DEF0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t _s12SortPlaylistO7ContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B540);
}

uint64_t sub_10002B540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100005574(&qword_10048DEF0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_10002B5C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1003878D8;
  v4[1] = &unk_1003878F0;
  sub_10002B648(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_10002B648(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10048DFE8)
  {
    v2 = type metadata accessor for Playlist.Variant(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10048DFE8);
  }
}

_WORD *_s12SortPlaylistO13TrackListSortVwCP(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s12SortPlaylistO13TrackListSortVwet(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortVwst(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10002B798 + 4 * byte_100387697[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_10002B7CC + 4 * byte_100387692[v4]))();
}

uint64_t sub_10002B7CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_10002B7D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x10002B7DCLL);
  return result;
}

uint64_t sub_10002B7E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x10002B7F0);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_10002B7F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_10002B7FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort;
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortV6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10002B8F4 + 4 * byte_1003876A1[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10002B928 + 4 * byte_10038769C[v4]))();
}

uint64_t sub_10002B928(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002B930(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002B938);
  return result;
}

uint64_t sub_10002B944(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002B94CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10002B950(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002B958(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort.Option()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort.Option;
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s12SortPlaylistO13TrackListSortV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10002BA50 + 4 * byte_1003876AB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10002BA84 + 4 * byte_1003876A6[v4]))();
}

uint64_t sub_10002BA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10002BA94);
  return result;
}

uint64_t sub_10002BAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10002BAA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10002BAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10002BAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10002BAC0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *_s12SortPlaylistO13TrackListSortV10CodingKeysOMa()
{
  return &_s12SortPlaylistO13TrackListSortV10CodingKeysON;
}

unint64_t sub_10002BAE0()
{
  unint64_t result;

  result = qword_10048E020;
  if (!qword_10048E020)
  {
    result = swift_getWitnessTable(&unk_1003879B8, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10048E020);
  }
  return result;
}

unint64_t sub_10002BB28()
{
  unint64_t result;

  result = qword_10048E028;
  if (!qword_10048E028)
  {
    result = swift_getWitnessTable(&unk_100387928, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10048E028);
  }
  return result;
}

unint64_t sub_10002BB70()
{
  unint64_t result;

  result = qword_10048E030;
  if (!qword_10048E030)
  {
    result = swift_getWitnessTable(&unk_100387950, &_s12SortPlaylistO13TrackListSortV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10048E030);
  }
  return result;
}

unint64_t sub_10002BBB4()
{
  unint64_t result;

  result = qword_10048E038;
  if (!qword_10048E038)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10048E038);
  }
  return result;
}

unint64_t sub_10002BBF8()
{
  unint64_t result;

  result = qword_10048E048;
  if (!qword_10048E048)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Actions.SortPlaylist.TrackListSort.Option, &type metadata for Actions.SortPlaylist.TrackListSort.Option);
    atomic_store(result, (unint64_t *)&qword_10048E048);
  }
  return result;
}

unint64_t sub_10002BC3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100490B90;
  if (!qword_100490B90)
  {
    v1 = type metadata accessor for Playlist.Variant(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Playlist.Variant, v1);
    atomic_store(result, (unint64_t *)&qword_100490B90);
  }
  return result;
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v21;
  uint64_t result;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v28[4];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(a9, a1, a11);
  v28[0] = a11;
  v28[1] = a12;
  v28[2] = a13;
  v28[3] = a14;
  v21 = (int *)type metadata accessor for Action(0, (uint64_t)v28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 32))(a9 + v21[13], a2, a12);
  *(double *)(a9 + v21[15]) = a10;
  v23 = (_QWORD *)(a9 + v21[14]);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(a9 + v21[16]);
  *v24 = a5;
  v24[1] = a6;
  v25 = (_QWORD *)(a9 + v21[17]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

{
  _QWORD *v21;

  v21 = (_QWORD *)swift_allocObject(&unk_1004419C0, 64, 7);
  v21[2] = a11;
  v21[3] = a12;
  v21[4] = a13;
  v21[5] = a14;
  v21[6] = a5;
  v21[7] = a6;
  return Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, a2, a3, a4, (uint64_t)&unk_10048E078, (uint64_t)v21, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t type metadata accessor for Action(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Action);
}

uint64_t AnyAction.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Action.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Action.supportedStatus()(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 56)))(v1);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 340) = a2;
  *(_QWORD *)(v4 + 40) = a1;
  v6 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v4 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 32);
  *(_QWORD *)(v4 + 72) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 80) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 88) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 96) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 104) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 112) = swift_task_alloc(v10);
  v11 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 120) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v4 + 128) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 136) = v13;
  *(_QWORD *)(v4 + 144) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  *(_QWORD *)(v4 + 152) = v14;
  v15 = *(_QWORD *)(v14 + 64);
  *(_QWORD *)(v4 + 160) = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 200) = swift_task_alloc(v16);
  v18 = type metadata accessor for Logger(0, v17);
  *(_QWORD *)(v4 + 208) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v4 + 216) = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 224) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 232) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 240) = swift_task_alloc(v20);
  *(_QWORD *)(v4 + 248) = swift_task_alloc(v20);
  return swift_task_switch(sub_10002C048, 0, 0);
}

uint64_t sub_10002C048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  int **v52;
  _QWORD *v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t type;
  os_log_type_t typea;
  os_log_type_t typeb[8];
  NSObject *log;
  os_log_t loga;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t, __n128);
  int *v115;
  uint64_t v116;
  uint64_t v117[2];

  if ((*(_BYTE *)(v0 + 340) & 1) != 0
    || (v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 56) + *(int *)(*(_QWORD *)(v0 + 48) + 56)))(), v2 == 1))
  {
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(_QWORD *)(v0 + 208);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v10 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 256) = v10;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    *(_QWORD *)(v0 + 264) = v11;
    v11(v3, v10, v4);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 16);
    *(_QWORD *)(v0 + 272) = v12;
    v114 = v12;
    v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v6, v8, v9);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 240);
    v18 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 216);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 152);
    if (v16)
    {
      v22 = *(_QWORD *)(v0 + 144);
      v98 = *(_QWORD *)(v0 + 136);
      v23 = *(_QWORD *)(v0 + 128);
      v110 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 48);
      v106 = *(_QWORD *)(v0 + 208);
      v25 = swift_slowAlloc(12, -1);
      type = swift_slowAlloc(32, -1);
      v117[0] = type;
      *(_DWORD *)v25 = 136446210;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v22, v20 + *(int *)(v24 + 52), v23);
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(v20, v24);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, *(_QWORD *)(*(_QWORD *)(v24 + 40) + 8));
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v22, v23);
      *(_QWORD *)(v25 + 4) = sub_100019400(v27, v29, v117);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s: performing…", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      swift_slowDealloc(v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v110, v106);
    }
    else
    {
      v26 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v26(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 48));

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    *(_QWORD *)(v0 + 280) = v26;
    v30 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 152);
    v32 = *(_QWORD *)(v0 + 160);
    v33 = *(_QWORD *)(v0 + 120);
    v107 = *(_QWORD *)(v0 + 72);
    v111 = *(_QWORD *)(v0 + 128);
    v35 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 56);
    sub_10002E9E4();
    v36 = *(double *)(v34 + *(int *)(v35 + 60));
    v37 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 1, 1, v38);
    v39 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v37, NSRunLoopCommonModes, v33, v36);

    sub_100008758(v33, &qword_10048E088);
    *(_QWORD *)(v0 + 16) = v39;
    v40 = type metadata accessor for NSTimer.TimerPublisher(0);
    v41 = sub_10002EA20();
    v42 = ConnectablePublisher.autoconnect()(v40, v41);
    v43 = swift_release(v39);
    *(_QWORD *)(v0 + 24) = v42;
    v114(v30, v34, v35, v43);
    LODWORD(v44) = *(_DWORD *)(v31 + 80);
    *(_DWORD *)(v0 + 336) = v44;
    v44 = v44;
    v45 = (v44 + 48) & ~v44;
    v46 = (char *)swift_allocObject(&unk_1004419E8, v45 + v32, v44 | 7);
    v47 = *(_QWORD *)(v35 + 16);
    *(_QWORD *)(v0 + 288) = v47;
    *((_QWORD *)v46 + 2) = v47;
    *((_QWORD *)v46 + 3) = v111;
    *((_QWORD *)v46 + 4) = v107;
    v48 = *(_QWORD *)(v35 + 40);
    *(_QWORD *)(v0 + 296) = v48;
    *((_QWORD *)v46 + 5) = v48;
    v49 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    *(_QWORD *)(v0 + 304) = v49;
    v49(&v46[v45], v30, v35);
    v50 = sub_100005574(&qword_10048E0A0);
    v51 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 312) = Publisher<>.sink(receiveValue:)(sub_10002EA6C, v46, v50, v51);
    swift_release(v46);
    swift_release(*(_QWORD *)(v0 + 24));
    v52 = (int **)(v34 + *(int *)(v35 + 64));
    v115 = (int *)((char *)*v52 + **v52);
    v53 = (_QWORD *)swift_task_alloc((*v52)[1]);
    *(_QWORD *)(v0 + 320) = v53;
    *v53 = v0;
    v53[1] = sub_10002C868;
    return ((uint64_t (*)(_QWORD, _QWORD))v115)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 56));
  }
  else
  {
    v55 = v1;
    v56 = v2;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v57 = *(_QWORD *)(v0 + 248);
    v58 = *(_QWORD *)(v0 + 208);
    v59 = *(_QWORD *)(v0 + 216);
    v60 = *(_QWORD *)(v0 + 200);
    v61 = *(_QWORD *)(v0 + 152);
    v63 = *(_QWORD *)(v0 + 48);
    v62 = *(_QWORD *)(v0 + 56);
    v64 = sub_1000086B4(v58, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v57, v64, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v60, v62, v63);
    sub_10002ECD0(v55, v56);
    v65 = swift_bridgeObjectRetain();
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter();
    v68 = os_log_type_enabled(v66, v67);
    v69 = *(_QWORD *)(v0 + 248);
    v70 = *(_QWORD *)(v0 + 208);
    v71 = *(_QWORD *)(v0 + 216);
    v72 = *(_QWORD *)(v0 + 200);
    v73 = *(_QWORD *)(v0 + 152);
    if (v68)
    {
      v112 = *(_QWORD *)(v0 + 208);
      v116 = *(_QWORD *)(v0 + 248);
      log = v66;
      v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 144);
      v76 = *(_QWORD *)(v0 + 128);
      typea = v67;
      v77 = *(_QWORD *)(v0 + 48);
      v108 = *(_QWORD *)(v0 + 216);
      v78 = swift_slowAlloc(22, -1);
      v99 = swift_slowAlloc(64, -1);
      v117[0] = v99;
      *(_DWORD *)v78 = 136446466;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v75, v72 + *(int *)(v77 + 52), v76);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v77);
      v79 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v76, *(_QWORD *)(*(_QWORD *)(v77 + 40) + 8));
      v81 = v80;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      *(_QWORD *)(v78 + 4) = sub_100019400(v79, v81, v117);
      swift_bridgeObjectRelease(v81);
      *(_WORD *)(v78 + 12) = 2082;
      swift_bridgeObjectRetain();
      v82 = (char *)Optional<A>.description.getter(v55, v56);
      v84 = v83;
      sub_10001406C(v55, v56);
      *(_QWORD *)(v78 + 14) = sub_100019400(v82, v84, v117);
      swift_bridgeObjectRelease(v84);
      sub_10001406C(v55, v56);
      sub_10001406C(v55, v56);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v99, -1, -1);
      swift_slowDealloc(v78, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v116, v112);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v73 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 48));
      sub_10001406C(v55, v56);
      sub_10001406C(v55, v56);

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
    }
    v85 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v85, 0, 0);
    *v86 = v55;
    v86[1] = v56;
    v88 = *(_QWORD *)(v0 + 240);
    v87 = *(_QWORD *)(v0 + 248);
    v90 = *(_QWORD *)(v0 + 224);
    v89 = *(_QWORD *)(v0 + 232);
    v91 = *(_QWORD *)(v0 + 192);
    v92 = *(_QWORD *)(v0 + 200);
    v93 = *(_QWORD *)(v0 + 176);
    v94 = *(_QWORD *)(v0 + 184);
    v96 = *(_QWORD *)(v0 + 168);
    v97 = *(_QWORD *)(v0 + 144);
    v100 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)typeb = *(_QWORD *)(v0 + 112);
    loga = *(os_log_t *)(v0 + 104);
    v109 = *(_QWORD *)(v0 + 96);
    v113 = *(_QWORD *)(v0 + 64);
    swift_willThrow(v95);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v91);
    swift_task_dealloc(v94);
    swift_task_dealloc(v93);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v100);
    swift_task_dealloc(*(_QWORD *)typeb);
    swift_task_dealloc(loga);
    swift_task_dealloc(v109);
    swift_task_dealloc(v113);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10002C868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10002CE40;
  else
    v3 = sub_10002C8CC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10002C8CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void *object;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  _QWORD v94[2];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 176);
  v88 = *(_QWORD *)(v0 + 112);
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v82 = *(_QWORD *)(v0 + 80);
  v85 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 40);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v91(v5, v6, v7);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
  v10 = v9(v88, v8, v85);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v92 = v9;
  if (os_log_type_enabled(v11, v12))
  {
    v86 = v12;
    v89 = v11;
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 128);
    v16 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 104);
    v78 = *(_QWORD *)(v0 + 296);
    v80 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v83 = swift_slowAlloc(64, -1);
    v93 = v83;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v13 + *(int *)(v20 + 52), v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, *(_QWORD *)(v78 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    *(_QWORD *)(v21 + 4) = sub_100019400(v22, v24, &v93);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    v25 = v92(v18, v80, v19);
    v26 = swift_dynamicCast(v25, v18, v19, (char *)&type metadata for () + 8, 6);
    v27 = (char *)0xE000000000000000;
    if ((v26 & 1) != 0)
    {
      v28 = 0;
    }
    else
    {
      v35 = *(_QWORD *)(v0 + 112);
      v36 = *(_QWORD *)(v0 + 96);
      v37 = *(_QWORD *)(v0 + 72);
      v94[0] = 0;
      v94[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(v94[1]);
      strcpy((char *)v94, " with result: ");
      HIBYTE(v94[1]) = -18;
      v92(v36, v35, v37);
      v38._countAndFlagsBits = String.init<A>(describing:)(v36, v37);
      object = v38._object;
      String.append(_:)(v38);
      swift_bridgeObjectRelease(object);
      v28 = (char *)v94[0];
      v27 = (char *)v94[1];
    }
    v40 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 112);
    v45 = *(_QWORD *)(v0 + 72);
    v44 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v21 + 14) = sub_100019400(v28, v27, &v93);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    _os_log_impl((void *)&_mh_execute_header, v89, v86, "%{public}s: perform success%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 208);
    v30 = *(_QWORD *)(v0 + 216);
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 72);
    v34 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  v69 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 304);
  v70 = *(_QWORD *)(v0 + 312);
  v67 = *(_QWORD *)(v0 + 288);
  v68 = *(_QWORD *)(v0 + 296);
  v46 = *(unsigned __int8 *)(v0 + 336);
  v71 = *(_QWORD *)(v0 + 248);
  v72 = *(_QWORD *)(v0 + 240);
  v73 = *(_QWORD *)(v0 + 232);
  v74 = *(_QWORD *)(v0 + 224);
  v47 = *(_QWORD *)(v0 + 184);
  v75 = *(_QWORD *)(v0 + 200);
  v76 = *(_QWORD *)(v0 + 192);
  v77 = *(_QWORD *)(v0 + 176);
  v79 = *(_QWORD *)(v0 + 168);
  v63 = *(_QWORD *)(v0 + 160);
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v81 = *(_QWORD *)(v0 + 144);
  v66 = *(_QWORD *)(v0 + 128);
  v84 = *(_QWORD *)(v0 + 120);
  v87 = *(_QWORD *)(v0 + 112);
  v48 = *(_QWORD *)(v0 + 96);
  v90 = *(_QWORD *)(v0 + 104);
  v49 = *(_QWORD *)(v0 + 80);
  v62 = *(_QWORD *)(v0 + 88);
  v50 = *(_QWORD *)(v0 + 64);
  v51 = *(_QWORD *)(v0 + 72);
  v65 = v50;
  v53 = *(_QWORD *)(v0 + 48);
  v52 = *(_QWORD *)(v0 + 56);
  v54 = *(_QWORD *)(v0 + 40);
  v55 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v50, 1, 1, v55);
  v64(v47, v52, v53);
  v92(v48, v54, v51);
  v56 = (v46 + 64) & ~v46;
  v57 = *(unsigned __int8 *)(v49 + 80);
  v58 = (v63 + v56 + v57) & ~v57;
  v59 = (char *)swift_allocObject(&unk_100441A10, v58 + v62, v46 | v57 | 7);
  *((_QWORD *)v59 + 2) = 0;
  *((_QWORD *)v59 + 3) = 0;
  *((_QWORD *)v59 + 4) = v67;
  *((_QWORD *)v59 + 5) = v66;
  *((_QWORD *)v59 + 6) = v51;
  *((_QWORD *)v59 + 7) = v68;
  v69(&v59[v56], v47, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(&v59[v58], v48, v51);
  v60 = sub_10002DE80(v65, (uint64_t)&unk_10048E0B8, (uint64_t)v59);
  swift_release(v60);
  swift_release(v70);
  sub_100008758(v65, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v47);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v48);
  swift_task_dealloc(v65);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002CE40()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];

  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 264);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = swift_release(*(_QWORD *)(v0 + 312));
  v3(v5, v4, v6, v10);
  v2(v7, v8, v9);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 216);
    v53 = *(_QWORD *)(v0 + 208);
    v55 = *(_QWORD *)(v0 + 224);
    type = v13;
    v15 = *(_QWORD *)(v0 + 168);
    v17 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v20 = *(_QWORD *)(v0 + 48);
    v21 = swift_slowAlloc(22, -1);
    v47 = swift_slowAlloc(64, -1);
    v56[0] = v47;
    *(_DWORD *)v21 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v15 + *(int *)(v20 + 52), v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v20);
    v22 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v45 + 8));
    v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    *(_QWORD *)(v21 + 4) = sub_100019400(v22, v24, v56);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v21 + 12) = 2082;
    *(_QWORD *)(v0 + 32) = v14;
    swift_errorRetain(v14);
    v25 = sub_100005574((uint64_t *)&unk_1004911F0);
    v26 = (char *)String.init<A>(describing:)(v0 + 32, v25);
    v28 = v27;
    *(_QWORD *)(v21 + 14) = sub_100019400(v26, v27, v56);
    swift_bridgeObjectRelease(v28);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v51 + 8))(v55, v53);
  }
  else
  {
    v30 = *(_QWORD *)(v0 + 328);
    v32 = *(_QWORD *)(v0 + 216);
    v31 = *(_QWORD *)(v0 + 224);
    v33 = *(_QWORD *)(v0 + 208);
    (*(void (**)(_QWORD, _QWORD))(v0 + 280))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 48));
    swift_errorRelease(v30);
    swift_errorRelease(v30);

    v29.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  v35 = *(_QWORD *)(v0 + 240);
  v34 = *(_QWORD *)(v0 + 248);
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 192);
  v39 = *(_QWORD *)(v0 + 200);
  v40 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 120);
  v48 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 96);
  v54 = *(_QWORD *)(v0 + 64);
  swift_willThrow(v29);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(*(_QWORD *)typea);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002D1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v8[13] = a8;
  v8[14] = v22;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  v12 = sub_100005574(&qword_10048E088);
  v8[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = v22;
  v13 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  v8[16] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[17] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v8[18] = v15;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[19] = swift_task_alloc(v16);
  v8[20] = swift_task_alloc(v16);
  v8[21] = swift_task_alloc(v16);
  v8[22] = swift_task_alloc(v16);
  v18 = type metadata accessor for Logger(0, v17);
  v8[23] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v8[24] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[25] = swift_task_alloc(v20);
  v8[26] = swift_task_alloc(v20);
  v8[27] = swift_task_alloc(v20);
  return swift_task_switch(sub_10002D2CC, 0, 0);
}

uint64_t sub_10002D2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int **v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, __n128);
  int *v58;
  uint64_t v59;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 224) = v8;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 232) = v9;
  v9(v1, v8, v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  *(_QWORD *)(v0 + 240) = v10;
  v57 = v10;
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v4, v7, v5);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 136);
  if (v14)
  {
    v55 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 112);
    v51 = *(_QWORD *)(v0 + 96);
    v53 = *(_QWORD *)(v0 + 184);
    v22 = swift_slowAlloc(12, -1);
    v52 = v17;
    v23 = swift_slowAlloc(32, -1);
    v59 = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, *(_QWORD *)(v21 + 8));
    v26 = v25;
    *(_QWORD *)(v22 + 4) = sub_100019400(v24, v25, &v59);
    swift_bridgeObjectRelease(v26);
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(v18, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);

    v28 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v28(v55, v53);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v27(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 128));

    v28 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v28(v15, v16);
  }
  *(_QWORD *)(v0 + 248) = v28;
  *(_QWORD *)(v0 + 256) = v27;
  v29 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 72);
  sub_10002E9E4();
  v35 = *(double *)(v34 + *(int *)(v32 + 60));
  v54 = *(_OWORD *)(v0 + 104);
  v56 = *(_OWORD *)(v0 + 88);
  v36 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v37 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 1, 1, v37);
  v38 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v36, NSRunLoopCommonModes, v33, v35);

  sub_100008758(v33, &qword_10048E088);
  *(_QWORD *)(v0 + 48) = v38;
  v39 = type metadata accessor for NSTimer.TimerPublisher(0);
  v40 = sub_10002EA20();
  v41 = ConnectablePublisher.autoconnect()(v39, v40);
  v42 = swift_release(v38);
  *(_QWORD *)(v0 + 56) = v41;
  v57(v29, v34, v32, v42);
  v43 = *(unsigned __int8 *)(v30 + 80);
  v44 = (v43 + 48) & ~v43;
  v45 = swift_allocObject(&unk_100441BD8, v44 + v31, v43 | 7);
  *(_OWORD *)(v45 + 16) = v56;
  *(_OWORD *)(v45 + 32) = v54;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v45 + v44, v29, v32);
  v46 = sub_100005574(&qword_10048E0A0);
  v47 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 264) = Publisher<>.sink(receiveValue:)(sub_10002FCB0, v45, v46, v47);
  swift_release(v45);
  swift_release(*(_QWORD *)(v0 + 56));
  v48 = (int **)(v34 + *(int *)(v32 + 68));
  v58 = (int *)((char *)*v48 + **v48);
  v49 = (_QWORD *)swift_task_alloc((*v48)[1]);
  *(_QWORD *)(v0 + 272) = v49;
  *v49 = v0;
  v49[1] = sub_10002D6C8;
  return ((uint64_t (*)(_QWORD, _QWORD))v58)(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_10002D6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 272);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10002D964;
  else
    v3 = sub_10002D72C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10002D72C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 72);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v9 = v1(v6, v8, v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  v14 = *(_QWORD *)(v0 + 264);
  v15 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
  v16 = *(_QWORD *)(v0 + 208);
  v17 = *(_QWORD *)(v0 + 184);
  v18 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 128);
  if (v12)
  {
    v38 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 264);
    v21 = swift_slowAlloc(12, -1);
    v37 = v17;
    v22 = swift_slowAlloc(32, -1);
    v39 = v22;
    *(_DWORD *)v21 = 136446210;
    v35 = v15;
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v34, *(_QWORD *)(v20 + 8));
    v25 = v24;
    *(_QWORD *)(v21 + 4) = sub_100019400(v23, v24, &v39);
    swift_bridgeObjectRelease(v25);
    v13(v18, v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
    swift_release(v36);

    v35(v38, v37);
  }
  else
  {
    v13(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128));
    swift_release(v14);

    v15(v16, v17);
  }
  v26 = *(_QWORD *)(v0 + 208);
  v27 = *(_QWORD *)(v0 + 200);
  v29 = *(_QWORD *)(v0 + 168);
  v28 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 152);
  v30 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002D964()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  void (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 280);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 72);
  v10 = swift_release(*(_QWORD *)(v0 + 264));
  v3(v5, v4, v6, v10);
  v2(v7, v9, v8);
  swift_errorRetain(v1);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 280);
    v42 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v45 = *(_QWORD *)(v0 + 200);
    v46 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v44 = *(_QWORD *)(v0 + 184);
    v15 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = swift_slowAlloc(22, -1);
    v43 = swift_slowAlloc(64, -1);
    v47 = v43;
    *(_DWORD *)v19 = 136446466;
    v20 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v18, *(_QWORD *)(v17 + 8));
    v22 = v21;
    *(_QWORD *)(v19 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease(v22);
    v42(v15, v16);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 64) = v14;
    swift_errorRetain(v14);
    v23 = sub_100005574((uint64_t *)&unk_1004911F0);
    v24 = (char *)String.init<A>(describing:)(v0 + 64, v23);
    v26 = v25;
    *(_QWORD *)(v19 + 14) = sub_100019400(v24, v25, &v47);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v14);
    v46(v45, v44);
  }
  else
  {
    v27 = *(_QWORD *)(v0 + 280);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v30 = *(_QWORD *)(v0 + 200);
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 128);
    swift_errorRelease(v27);
    v28(v32, v33);
    swift_errorRelease(v27);
    swift_errorRelease(v27);

    v29(v30, v31);
  }
  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(_QWORD *)(v0 + 200);
  v37 = *(_QWORD *)(v0 + 168);
  v36 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 152);
  v38 = *(_QWORD *)(v0 + 160);
  v40 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002DC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[4];

  v33 = a4;
  v34[0] = a3;
  v34[1] = a4;
  v34[2] = a5;
  v32 = a6;
  v34[3] = a6;
  v9 = type metadata accessor for Action(0, (uint64_t)v34);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v30 - v11;
  v14 = type metadata accessor for Logger(0, v13);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v18 = sub_1000086B4(v14, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v30 = a7;
    v23 = v22;
    v24 = swift_slowAlloc(32, -1);
    v31 = v15;
    v25 = v24;
    v34[0] = v24;
    *(_DWORD *)v23 = 136446210;
    v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v33, *(_QWORD *)(v32 + 8));
    v28 = v27;
    *(_QWORD *)(v23 + 4) = sub_100019400(v26, v27, v34);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, v30, (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v17, v14);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10002DE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v6 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FAE4(a1, (uint64_t)v8);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100008758((uint64_t)v8, (uint64_t *)&unk_100493720);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v18 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = swift_allocObject(&unk_100441BB0, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, (char *)&type metadata for () + 8, &unk_1004915E0, v19);
}

uint64_t sub_10002E010(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(*a1, a1[1], *a2, a2[1]);
}

unint64_t ActionError.description.getter(uint64_t a1, void *a2)
{
  void *v4;
  Swift::String v5;

  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a2)
  {
    v4 = a2;
  }
  else
  {
    a1 = 0x6E776F6E6B6E75;
    v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  return 0xD000000000000020;
}

BOOL static ActionError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
    return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0);
  if (a4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

uint64_t sub_10002E124(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRelease(0);
    return 0;
  }
  return 1;
}

unint64_t sub_10002E188()
{
  uint64_t v0;

  return ActionError.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

uint64_t sub_10002E190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch(sub_10002E1B4, 0, 0);
}

uint64_t sub_10002E1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_OWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(_QWORD *)(v2 + 64) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_10002E25C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000003ALL, 0x80000001003AD730, sub_10002FD48, v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_10002E25C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10002E2D0, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10002E2D0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10002E304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];

  v42 = a6;
  v43 = a8;
  v41 = a5;
  v39 = a4;
  v45 = a2;
  v46 = a3;
  v44 = a1;
  v12 = sub_100005600((uint64_t *)&unk_1004911F0);
  v40 = a7;
  v13 = type metadata accessor for CheckedContinuation(0, a7, v12, &protocol self-conformance witness table for Error);
  v14 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v17 = (char *)&v37 - v16;
  v47[0] = a5;
  v47[1] = a6;
  v47[2] = a7;
  v47[3] = a8;
  v18 = type metadata accessor for Action(0, (uint64_t)v47);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v22 = (char *)&v37 - v21;
  v23 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v23);
  v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v39, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v44, v13);
  v27 = *(unsigned __int8 *)(v19 + 80);
  v28 = (v27 + 80) & ~v27;
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v20 + v28 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_100441C00, v30 + v15, v27 | v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  v32 = v42;
  *((_QWORD *)v31 + 4) = v41;
  *((_QWORD *)v31 + 5) = v32;
  v33 = v43;
  *((_QWORD *)v31 + 6) = v40;
  *((_QWORD *)v31 + 7) = v33;
  v34 = v46;
  *((_QWORD *)v31 + 8) = v45;
  *((_QWORD *)v31 + 9) = v34;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v31[v28], v22, v18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v31[v30], v17, v38);
  swift_retain(v34);
  v35 = sub_1001AD214((uint64_t)v25, (uint64_t)&unk_10048E150, (uint64_t)v31);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_10002E530(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v7 + 16) = v10;
  *v10 = v7;
  v10[1] = sub_10000EA88;
  return v12(a6, a7);
}

uint64_t sub_10002E5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_10048E058);
  sub_1000086B4(v2, (uint64_t)qword_10048E058);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x6E6F69746341, 0xE600000000000000);
}

uint64_t _s9MusicCore21ActionSupportedStatusO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1)
      return 1;
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0) & 1) != 0))
        return 1;
    }
    else
    {
      if (!a4)
        return 1;
      sub_10001406C(a1, 0);
    }
  }
  return 0;
}

unint64_t _s9MusicCore21ActionSupportedStatusO03allD0yA2Cd_tFZ_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t inited;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25[64];

  v1 = a1[2];
  if (!v1)
    return 0xD000000000000015;
  v4 = a1[4];
  v3 = a1[5];
  swift_bridgeObjectRetain();
  sub_10002ECD0(v4, v3);
  v5 = v1 - 1;
  v24 = a1;
  if (v1 != 1)
  {
    v8 = a1 + 7;
    while (1)
    {
      v6 = *(v8 - 1);
      v15 = *v8;
      if (v3 == 1 && v15 == 1)
      {
        sub_10002FFF8(v4, 1);
        v3 = 1;
        goto LABEL_10;
      }
      v16 = sub_100005574(&qword_10048DD28);
      inited = swift_initStackObject(v16, v25);
      *(_OWORD *)(inited + 16) = xmmword_100384A60;
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v3;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v15;
      if (v3 == 1)
      {
        sub_10002ECD0(v6, v15);
      }
      else
      {
        sub_10002ECD0(v6, v15);
        if (v3)
        {
          sub_100030008(v4, v3);
          sub_10002ECD0(v6, v15);
          sub_100030008(v4, v3);
          v18 = sub_10003DE28(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          v20 = *((_QWORD *)v18 + 2);
          v19 = *((_QWORD *)v18 + 3);
          if (v20 >= v19 >> 1)
            v18 = sub_10003DE28((char *)(v19 > 1), v20 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v20 + 1;
          v21 = &v18[16 * v20];
          *((_QWORD *)v21 + 4) = v4;
          *((_QWORD *)v21 + 5) = v3;
          if (v15 < 2)
            goto LABEL_9;
LABEL_22:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
            v18 = sub_10003DE28(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
          v23 = *((_QWORD *)v18 + 2);
          v22 = *((_QWORD *)v18 + 3);
          if (v23 >= v22 >> 1)
            v18 = sub_10003DE28((char *)(v22 > 1), v23 + 1, 1, v18);
          *((_QWORD *)v18 + 2) = v23 + 1;
          v9 = &v18[16 * v23];
          *((_QWORD *)v9 + 4) = v6;
          *((_QWORD *)v9 + 5) = v15;
          goto LABEL_9;
        }
      }
      sub_10002ECD0(v6, v15);
      v18 = (char *)_swiftEmptyArrayStorage;
      if (v15 >= 2)
        goto LABEL_22;
LABEL_9:
      swift_release(inited);
      v10 = sub_100005574(&qword_10048E158);
      v11 = sub_10002FFB8((unint64_t *)&qword_100491870, &qword_10048E158, (uint64_t)&protocol conformance descriptor for [A]);
      v12 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v10, v11);
      v14 = v13;
      swift_bridgeObjectRelease(v18);
      sub_10001406C(v6, v15);
      sub_10002FFF8(v4, v3);
      v6 = v12;
      v3 = v14;
LABEL_10:
      v8 += 2;
      v4 = v6;
      if (!--v5)
        goto LABEL_4;
    }
  }
  v6 = v4;
LABEL_4:
  swift_bridgeObjectRelease(v24);
  return v6;
}

uint64_t sub_10002E944()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10002E968(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v6 = swift_task_alloc(dword_10048E074);
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[1];
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_10000EA88;
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch(sub_10002E1B4, 0, 0);
}

unint64_t sub_10002E9E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E090;
  if (!qword_10048E090)
  {
    v1 = objc_opt_self(NSTimer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10048E090);
  }
  return result;
}

unint64_t sub_10002EA20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E098;
  if (!qword_10048E098)
  {
    v1 = type metadata accessor for NSTimer.TimerPublisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSTimer.TimerPublisher, v1);
    atomic_store(result, (unint64_t *)&qword_10048E098);
  }
  return result;
}

uint64_t sub_10002EA6C(uint64_t a1)
{
  return sub_10002FCBC(a1, "%{public}s: waiting for perform to return…");
}

uint64_t sub_10002EA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  _QWORD v16[2];
  __int128 v17;

  v2 = *(_QWORD *)(v0 + 40);
  v16[0] = *(_QWORD *)(v0 + 32);
  v1 = v16[0];
  v16[1] = v2;
  v17 = *(_OWORD *)(v0 + 48);
  v15 = v17;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v16);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 64) & ~v5;
  v7 = *(_QWORD *)(v15 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v6 + *(_QWORD *)(v4 + 64) + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v5 | v8 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v12 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v12, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v12 + v3[13], v2);
  swift_release(*(_QWORD *)(v12 + v3[14] + 8));
  swift_release(*(_QWORD *)(v12 + v3[16] + 8));
  v13 = swift_release(*(_QWORD *)(v12 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v9, v15, v13);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10002EBA4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v4;
  v2[3] = v5;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v11 = v1[2];
  v12 = v1[3];
  v13 = (uint64_t)v1 + v9;
  v14 = (uint64_t)v1 + ((v9 + *(_QWORD *)(v8 + 64) + v10) & ~v10);
  v15 = (_QWORD *)swift_task_alloc(dword_10048E0B4);
  v2[6] = v15;
  *v15 = v2;
  v15[1] = sub_10002EC88;
  return sub_10002D1A4(a1, v11, v12, v13, v14, v4, v5, v6);
}

uint64_t sub_10002EC88()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10002ECD0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

unint64_t sub_10002ECE4()
{
  unint64_t result;

  result = qword_10048E0C0[0];
  if (!qword_10048E0C0[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionError, &type metadata for ActionError);
    atomic_store(result, qword_10048E0C0);
  }
  return result;
}

uint64_t sub_10002ED28(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
}

uint64_t sub_10002ED34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t sub_10002ED3C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[6];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = (char *)&value witness table for () + 64;
      v5[5] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 6, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10002EDE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((((((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v26 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_retain(v18);
    swift_retain(v23);
  }
  swift_retain(v26);
  return v4;
}

uint64_t sub_10002EF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v8 + 8));
  v9 = (((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v9 + 8));
  return swift_release(*(_QWORD *)(((v9 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10002EFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain(v16);
  swift_retain(v21);
  swift_retain(v24);
  return a1;
}

uint64_t sub_10002F0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  v23 = v20[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain(v22);
  swift_release(v23);
  v24 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  v27 = v24[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

uint64_t sub_10002F1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *v18;
  _OWORD *v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10002F2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = v13 + v12;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v16);
  v18 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  v19 = (v17 & 0xFFFFFFFFFFFFF8) + 15;
  *v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFF8);
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v20 + 8);
  v22 = (v19 & 0xFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v20 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)(v23 + 8);
  *(_OWORD *)v23 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFF8);
  swift_release(v24);
  return a1;
}

uint64_t sub_10002F38C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((((((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10002F444 + 4 * byte_100387A30[v15]))();
  }
}

void sub_10002F4EC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((((((((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_10002F620()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10002F6B0);
}

void sub_10002F628(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10002F630);
  JUMPOUT(0x10002F6B0);
}

void sub_10002F674()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10002F6B0);
}

void sub_10002F67C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10002F6B0);
}

uint64_t sub_10002F684(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x10002F6B0);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x10002F690);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

unint64_t destroy for ActionSupportedStatus(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease(result);
  return result;
}

uint64_t _s9MusicCore21ActionSupportedStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 8);
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }
  return a1;
}

_QWORD *assignWithCopy for ActionSupportedStatus(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[1];
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v6) = -1;
  else
    v6 = a1[1];
  v7 = v6 + 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v5 = a2[1];
  v8 = v5 + 1;
  if (v7 > 1)
  {
    if (v8 <= 1)
    {
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      swift_bridgeObjectRetain(v10);
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v8 > 1)
  {
    swift_bridgeObjectRelease(a1[1]);
    goto LABEL_12;
  }
  *a1 = *a2;
  v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if ((v5 + 1) > 1)
    goto LABEL_9;
  v6 = *(_QWORD *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(a2 + 8);
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease(v4);
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSupportedStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionSupportedStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_10002F924(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_10002F944(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    result[1] = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSupportedStatus()
{
  return &type metadata for ActionSupportedStatus;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ActionError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for ActionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t sub_10002FAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_100493720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FB2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002FB50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049664C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100496648 + dword_100496648))(a1, v4);
}

uint64_t sub_10002FBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 16);
  v1 = v12;
  v13 = *(_OWORD *)(v0 + 24);
  v11 = v13;
  v14 = v2;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)&v12);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v6, v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9 + v3[13]);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_10002FCB0(uint64_t a1)
{
  return sub_10002FCBC(a1, "%{public}s: waiting for finish to return…");
}

uint64_t sub_10002FCBC(uint64_t a1, const char *a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v11) - 8) + 80);
  return sub_10002DC34(a1, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

double sub_10002FD48(uint64_t a1)
{
  uint64_t *v1;

  return sub_10002E304(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10002FD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  _QWORD v20[2];
  __int128 v21;

  v1 = *(_QWORD *)(v0 + 40);
  v20[0] = *(_QWORD *)(v0 + 32);
  v2 = v20[0];
  v20[1] = v1;
  v21 = *(_OWORD *)(v0 + 48);
  v19 = v21;
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v20);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 80) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = sub_100005600((uint64_t *)&unk_1004911F0);
  v9 = type metadata accessor for CheckedContinuation(0, v19, v8, &protocol self-conformance witness table for Error);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11) & ~v11;
  v13 = v12 + *(_QWORD *)(v10 + 64);
  v14 = v5 | v11 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v15 = swift_release(*(_QWORD *)(v0 + 72));
  v16 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 8) + 8))(v16, v2, v15);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v16 + v3[13], v1);
  swift_release(*(_QWORD *)(v16 + v3[14] + 8));
  swift_release(*(_QWORD *)(v16 + v3[16] + 8));
  v17 = swift_release(*(_QWORD *)(v16 + v3[17] + 8));
  (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v0 + v12, v9, v17);
  return swift_deallocObject(v0, v13, v14);
}

uint64_t sub_10002FEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v14;
  v2 = *(_QWORD *)(type metadata accessor for Action(0, v1 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_100005600((uint64_t *)&unk_1004911F0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v14, v5, &protocol self-conformance witness table for Error)- 8)+ 80);
  v7 = v3 + v4 + v6;
  v8 = *(int **)(v0 + 64);
  v9 = v0 + v3;
  v10 = v0 + (v7 & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_10048E14C);
  *(_QWORD *)(v1 + 48) = v11;
  *v11 = v1;
  v11[1] = sub_10002EC88;
  *(_QWORD *)&v14 = (char *)v8 + *v8;
  v12 = (_QWORD *)swift_task_alloc(v8[1]);
  v11[2] = v12;
  *v12 = v11;
  v12[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v9, v10);
}

uint64_t sub_10002FFB8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100005600(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002FFF8(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_10001406C(a1, a2);
  return a1;
}

uint64_t sub_100030008(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_10002ECD0(a1, a2);
  return a1;
}

uint64_t sub_10003001C(uint64_t a1)
{
  type metadata accessor for Array(0);
  return a1;
}

uint64_t sub_100030044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_100031D8C(a1);
    v10 = 7168;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v10, v17, a4, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v10 = v18 | 0x1C00;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
      goto LABEL_6;
  }
  v12 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v11);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v12);
  v16 = v15;
  swift_unknownObjectRelease(v11);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v10, v17, a4, a2, a3);
}

uint64_t ActionMenu.Element.id.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v5 = v4;
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = type metadata accessor for ActionMenu.Item(0, v8, v7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v15, v5, a1);
  if (swift_getEnumCaseMultiPayload(v15, a1) == 1)
  {
    v17 = *v15;
    v18 = v15[3];
    v19 = v15[5];
    v20 = (void *)v15[6];
    swift_release(v15[9]);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v13, v15, v9);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v8, *(_QWORD *)(v7 + 8));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return v17;
}

uint64_t static ActionMenu.Element.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[5];
  _OWORD v40[6];

  v38 = a2;
  v35 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v34 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v33 = (char *)&v33 - v7;
  v36 = a3;
  v37 = a4;
  v9 = type metadata accessor for ActionMenu.Element(0, a3, a4, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v33 - v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v9, v9, 0, 0);
  v17 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = __chkstk_darwin(TupleTypeMetadata2);
  v20 = (char *)&v33 - v19;
  v21 = (char *)&v33 + *(int *)(v18 + 48) - v19;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22((char *)&v33 - v19, a1, v9);
  v22(v21, v38, v9);
  if (swift_getEnumCaseMultiPayload(v20, v9) != 1)
  {
    v22(v15, (uint64_t)v20, v9);
    if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
    {
      v28 = v34;
      v29 = (uint64_t)v33;
      v30 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v21, v35);
      v27 = static ActionMenu.Item.== infix(_:_:)((uint64_t)v15, v29, v36, v37);
      v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v31(v29, v30);
      v31((uint64_t)v15, v30);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v35);
    goto LABEL_7;
  }
  v22(v13, (uint64_t)v20, v9);
  v23 = *((_OWORD *)v13 + 3);
  v39[2] = *((_OWORD *)v13 + 2);
  v39[3] = v23;
  v39[4] = *((_OWORD *)v13 + 4);
  v24 = *((_OWORD *)v13 + 1);
  v39[0] = *(_OWORD *)v13;
  v39[1] = v24;
  if (swift_getEnumCaseMultiPayload(v21, v9) != 1)
  {
    sub_100030D34(v39);
LABEL_7:
    v27 = 0;
    v10 = v17;
    v9 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v25 = *((_OWORD *)v21 + 3);
  v40[2] = *((_OWORD *)v21 + 2);
  v40[3] = v25;
  v40[4] = *((_OWORD *)v21 + 4);
  v26 = *((_OWORD *)v21 + 1);
  v40[0] = *(_OWORD *)v21;
  v40[1] = v26;
  v27 = static ActionMenu.== infix(_:_:)((uint64_t *)v39, v40);
  sub_100030D34(v40);
  sub_100030D34(v39);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
  return v27 & 1;
}

uint64_t sub_1000305A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = ActionMenu.Element.id.getter(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1000305C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Element.__derived_enum_equals(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t static ActionMenu.ElementBuilder.buildBlock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000305E8(a1, a2, a3, (uint64_t)sub_100031DFC);
}

uint64_t static ActionMenu.ElementBuilder.buildArray(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000305E8(a1, a2, a3, (uint64_t)sub_100030D94);
}

uint64_t sub_1000305E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v5 = type metadata accessor for Array(255);
  v6 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  return Sequence.flatMap<A>(_:)(a4, v10, v6, v5, WitnessTable, v8);
}

uint64_t static ActionMenu.ElementBuilder.buildIf(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    v5 = type metadata accessor for ActionMenu.Element(0, a2, a3, a4);
    v4 = static Array._allocateUninitialized(_:)(0, v5);
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];

  v69 = a3;
  v70 = a6;
  v71[0] = a3;
  v71[1] = a2;
  v71[2] = a4;
  v71[3] = a5;
  v59 = a5;
  v10 = type metadata accessor for Action(0, (uint64_t)v71);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  v13 = *(_QWORD *)(v11 + 64);
  v14 = __chkstk_darwin(v10);
  v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v62 = (char *)&v52 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v52 - v18;
  v57 = (char *)&v52 - v18;
  v20 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v17);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v22;
  v24 = type metadata accessor for ActionMenu.Element(255, a2, a5, v23);
  v65 = v24;
  v25 = type metadata accessor for _ContiguousArrayStorage(0, v24);
  v26 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  v63 = static Array._adoptStorage(_:count:)(v26, 1);
  v61 = v27;
  v28 = *(int *)(v12 + 52);
  v68 = a1;
  v29 = a1 + v28;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v56 = a2;
  v30(v22, v29, a2);
  v31 = v11;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v32 = v12;
  v58(v19, a1, v12);
  v33 = *(unsigned __int8 *)(v11 + 80);
  v34 = (v33 + 56) & ~v33;
  v35 = v34 + v13;
  v67 = v33 | 7;
  v54 = v34 + v13;
  v36 = (char *)swift_allocObject(&unk_100441C98, v34 + v13, v33 | 7);
  v37 = v69;
  v38 = v70;
  *((_QWORD *)v36 + 2) = a2;
  *((_QWORD *)v36 + 3) = v37;
  v55 = a4;
  v39 = v59;
  *((_QWORD *)v36 + 4) = a4;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v38;
  v53 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v66 = v32;
  v53(&v36[v34], v57, v32);
  v40 = v62;
  v41 = v58;
  v58(v62, v68, v32);
  v42 = (char *)swift_allocObject(&unk_100441CC0, v35, v67);
  v43 = v56;
  *((_QWORD *)v42 + 2) = v56;
  *((_QWORD *)v42 + 3) = v37;
  *((_QWORD *)v42 + 4) = a4;
  *((_QWORD *)v42 + 5) = v39;
  *((_QWORD *)v42 + 6) = v38;
  v44 = v40;
  v45 = v66;
  v46 = v53;
  v53(&v42[v34], v44, v66);
  v47 = v64;
  v41(v64, v68, v45);
  v48 = (char *)swift_allocObject(&unk_100441CE8, v54, v67);
  v49 = v69;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v49;
  *((_QWORD *)v48 + 4) = v55;
  *((_QWORD *)v48 + 5) = v39;
  *((_QWORD *)v48 + 6) = v70;
  v46(&v48[v34], v47, v66);
  v50 = v61;
  sub_10003CA34((uint64_t)v60, (uint64_t)sub_100030DB4, (uint64_t)v36, (uint64_t)sub_100030E34, (uint64_t)v42, (uint64_t)&unk_10048E168, (uint64_t)v48, v43, v61, v39);
  swift_storeEnumTagMultiPayload(v50, v65, 0);
  type metadata accessor for Array(0);
  return v63;
}

uint64_t sub_1000309F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = a4;
  v6[5] = a5;
  v7 = type metadata accessor for Action(0, (uint64_t)(v6 + 2));
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v6[14] = v9;
  v6[15] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574((uint64_t *)&unk_100493720);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100030A9C, 0, 0);
}

uint64_t sub_100030A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 56);
  v15 = *(_OWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v7, v5);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 72) & ~v9;
  v11 = swift_allocObject(&unk_100441D80, v10 + v3, v9 | 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v15;
  *(_QWORD *)(v11 + 64) = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v5);
  v12 = sub_100030044(v1, (uint64_t)&unk_10048E278, v11, v15);
  swift_release(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100030BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v14;
  uint64_t v15;

  v14 = (_QWORD *)swift_task_alloc(dword_10048E084);
  v8[2] = a6;
  v8[3] = a5;
  v8[4] = a7;
  v8[5] = a8;
  v8[6] = v14;
  v15 = type metadata accessor for Action(0, (uint64_t)(v8 + 2));
  *v14 = v8;
  v14[1] = sub_10002EC88;
  return Action.execute(bypassSupportedStatusCheck:)(a1, 0, v15);
}

uint64_t static ActionMenu.ElementBuilder.buildExpression(_:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v5 = type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v6 = type metadata accessor for _ContiguousArrayStorage(0, v5);
  v7 = swift_allocObject(v6, ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v5 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) | 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  *v9 = *a1;
  v10 = a1[4];
  v12 = a1[1];
  v11 = a1[2];
  v9[3] = a1[3];
  v9[4] = v10;
  v9[1] = v12;
  v9[2] = v11;
  swift_storeEnumTagMultiPayload(v9, v5, 1);
  type metadata accessor for Array(0);
  sub_100031038((uint64_t)a1);
  return v8;
}

uint64_t sub_100030D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of CustomStringConvertible.description.getter(a2, a3);
}

uint64_t type metadata accessor for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Element);
}

_QWORD *sub_100030D34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  return a1;
}

uint64_t sub_100030D94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100030DB4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];
  __int128 v11;

  v3 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 48);
  v10[0] = *(_QWORD *)(v1 + 24);
  v4 = v10[0];
  v10[1] = v3;
  v11 = *(_OWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)v10) - 8) + 80);
  v7 = v1 + ((v6 + 56) & ~v6);
  a1[3] = v4;
  a1[4] = v5;
  v8 = sub_1000207D4(a1);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v8, v7, v4);
}

uint64_t sub_100030E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v7 = v0[3];
  v2 = v7;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  type metadata accessor for Action(0, (uint64_t)&v7);
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  v5 = type metadata accessor for Action(0, (uint64_t)&v7);
  return Action.supportedStatus()(v5);
}

uint64_t sub_100030EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 16);
  v11[0] = *(_QWORD *)(v0 + 24);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 32);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0 + v6, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100030F94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v1 + 2)) - 8) + 80);
  v8 = (uint64_t)v0 + ((v7 + 56) & ~v7);
  v9 = (_QWORD *)swift_task_alloc(dword_10048E164);
  v1[6] = v9;
  *v9 = v1;
  v9[1] = sub_10002EC88;
  return sub_1000309F8(v8, v2, v3, v4, v5, v6);
}

uint64_t sub_100031038(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(id *)(a1 + 48);
  swift_retain(v5);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *sub_10003109C()
{
  return &protocol witness table for String;
}

uint64_t sub_1000310A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000310B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = "P";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v7);
    return 0;
  }
  return result;
}

uint64_t sub_100031120(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 80) & 0xF8;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4 + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~(_WORD)v3 & 0x1F8);
  swift_retain(v4);
  return v5;
}

uint64_t sub_10003116C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = 80;
  if (((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x50)
    v5 = ((((((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = v5 & 0xFFFFFFF8;
  if (v6 >= 2 && v7 != 0)
    v6 = *(_DWORD *)a1 + 2;
  if (v6 == 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

    v9 = (_QWORD *)(a1 + 72);
  }
  else
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
    v10 = (a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v10 + 8));
    v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    swift_release(*(_QWORD *)(v11 + 8));
    v9 = (_QWORD *)(((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  return swift_release(*v9);
}

uint64_t sub_100031248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    v11 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v11;
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v12;
    v13 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v15 = v13;
    v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
    v17 = (_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v24[1];
    *v23 = *v24;
    v23[1] = v14;
    swift_retain(v19);
    swift_retain(v22);
    v16 = 0;
  }
  swift_retain(v14);
  *(_BYTE *)(a1 + v7) = v16;
  return a1;
}

uint64_t sub_1000313A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v16 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v18 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v18;
      v19 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v19;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v20;
      *(_QWORD *)(a1 + 72) = v21;
      *(_BYTE *)(a1 + v8) = 1;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v22 = v19;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      v23 = (_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      v21 = v30[1];
      *v29 = *v30;
      v29[1] = v21;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain(v25);
      swift_retain(v28);
    }
    swift_retain(v21);
  }
  return a1;
}

_OWORD *sub_1000315B4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v10;
  __int128 v11;
  char v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
    v7 = 80;
  else
    v7 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2 && (v7 & 0xFFFFFFF8) != 0)
    v8 = *(_DWORD *)a2 + 2;
  if (v8 == 1)
  {
    v10 = *(_OWORD *)(a2 + 48);
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v10;
    a1[4] = *(_OWORD *)(a2 + 64);
    v11 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v11;
    v12 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, uint64_t))(v5 + 32))(a1, a2);
    v12 = 0;
    v13 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v14 = (_OWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
    *v15 = *v16;
    *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v7) = v12;
  return a1;
}

uint64_t sub_1000316B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50)
      v8 = 80;
    else
      v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0)
      v9 = *(_DWORD *)a1 + 2;
    if (v9 == 1)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

      v11 = (_QWORD *)(a1 + 72);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      v12 = (a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v12 + 8));
      v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_release(*(_QWORD *)(v13 + 8));
      v11 = (_QWORD *)(((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    swift_release(*v11);
    v14 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v14 >= 2)
      v14 = *(_DWORD *)a2 + 2;
    if (v14 == 1)
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      LOBYTE(v14) = 0;
      v18 = (_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v19 = (_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *v18 = *v19;
      v20 = (_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
      v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
      *v20 = *v21;
      *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    }
    *(_BYTE *)(a1 + v8) = v14;
  }
  return a1;
}

uint64_t sub_100031854(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int v6;
  int v7;
  int v9;
  int v10;
  unsigned int v11;

  v3 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v3 <= 0x50)
    v3 = 80;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_20;
  v4 = v3 | 1;
  v5 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    v6 = (a2 + ~(-1 << v5) - 254) >> v5;
    if (v6 > 0xFFFE)
    {
      v7 = *(_DWORD *)&a1[v4];
      if (!v7)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v6 > 0xFE)
    {
      v7 = *(unsigned __int16 *)&a1[v4];
      if (!*(_WORD *)&a1[v4])
        goto LABEL_20;
      goto LABEL_13;
    }
    if (!v6)
      goto LABEL_20;
  }
  v7 = a1[v4];
  if (!a1[v4])
  {
LABEL_20:
    v11 = a1[v3];
    if (v11 >= 2)
      return (v11 ^ 0xFF) + 1;
    else
      return 0;
  }
LABEL_13:
  v9 = (v7 - 1) << v5;
  if (v4 >= 4)
    v9 = 0;
  if ((_DWORD)v4 == 1)
    v10 = *a1;
  else
    v10 = *(_DWORD *)a1;
  return (v10 | v9) + 255;
}

void sub_10003193C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v5 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v5 <= 0x50)
    v5 = 80;
  v6 = v5 | 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    v8 &= ~(-1 << (8 * v6));
    bzero(a1, v6);
    if ((_DWORD)v6 == 1)
    {
      *a1 = v8;
      goto LABEL_18;
    }
  }
  else
  {
    bzero(a1, v5 | 1);
  }
  *(_DWORD *)a1 = v8;
LABEL_18:
  __asm { BR              X10 }
}

uint64_t sub_100031AE0(_DWORD *a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = 80;
  if (((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x50)
    v2 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v3 = *((unsigned __int8 *)a1 + v2);
  v4 = v2 & 0xFFFFFFF8;
  if (v3 >= 2 && v4 != 0)
    return (*a1 + 2);
  return v3;
}

void sub_100031B38(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  char v5;
  unsigned int v6;

  v4 = ((((((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v4 <= 0x50)
    v4 = 80;
  if (a2 > 1)
  {
    if ((_DWORD)v4)
      v5 = 2;
    else
      v5 = a2;
    if ((_DWORD)v4)
      v6 = a2 - 2;
    else
      v6 = 0;
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_100031BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for ActionMenu.ElementBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.ElementBuilder);
}

uint64_t sub_100031BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;

  v1 = *(_QWORD *)(v0 + 32);
  v11[0] = *(_QWORD *)(v0 + 40);
  v2 = v11[0];
  v11[1] = v1;
  v12 = *(_OWORD *)(v0 + 48);
  v3 = (int *)type metadata accessor for Action(0, (uint64_t)v11);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 72) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = v0 + v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v9, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[13], v1);
  swift_release(*(_QWORD *)(v9 + v3[14] + 8));
  swift_release(*(_QWORD *)(v9 + v3[16] + 8));
  swift_release(*(_QWORD *)(v9 + v3[17] + 8));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100031CC0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v2[2] = v5;
  v2[3] = v4;
  v2[4] = v6;
  v2[5] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Action(0, (uint64_t)(v2 + 2)) - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + ((v8 + 72) & ~v8);
  v12 = (_QWORD *)swift_task_alloc(dword_10048E274);
  v2[6] = v12;
  *v12 = v2;
  v12[1] = sub_100031DF8;
  return sub_100030BB8(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_100031D8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574((uint64_t *)&unk_100493720);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100031DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100031DFC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_100030D94(a1, a2);
}

void *MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  void *v2;

  v2 = sub_100033420(a1);
  swift_bridgeObjectRelease(a1);
  return v2;
}

uint64_t static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  return sub_100033830(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t MusicItem.metricsTargetIdentifier.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  __chkstk_darwin(a1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v5 = sub_100005574(&qword_10048E280);
  if ((swift_dynamicCast(&v12, v3, a1, v5, 6) & 1) == 0)
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    sub_100008758((uint64_t)&v12, (uint64_t *)&unk_1004940C0);
    return 0x497972617262694CLL;
  }
  v6 = *((_QWORD *)&v13 + 1);
  v7 = v14;
  sub_10000ABC8(&v12, *((uint64_t *)&v13 + 1));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v9)
  {
    sub_10000682C(&v12);
    return 0x497972617262694CLL;
  }
  v10 = v8;
  sub_10000682C(&v12);
  return v10;
}

uint64_t sub_100031F98()
{
  return sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for Playlist, qword_10048E398);
}

uint64_t sub_100031FAC()
{
  return sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for Album, &qword_10048E360);
}

uint64_t sub_100031FC0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = a1(0);
  v3 = sub_100005574(a2);
  v4 = String.init<A>(describing:)(v19, v3);
  v6 = v5;
  sub_100033A78(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_100033B00(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_100033B9C();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t MusicItem.metricsContentType.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t MetatypeMetadata;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[4];
  Swift::String v20;

  v19[0] = swift_getDynamicType(v1, a1, 0);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v4 = String.init<A>(describing:)(v19, MetatypeMetadata);
  v6 = v5;
  sub_100033A78(1, v4, v5);
  v8 = v7;
  v9 = Substring.lowercased()();
  swift_bridgeObjectRelease(v8);
  v10 = sub_100033B00(1uLL, v4, v6);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease(v6);
  v20 = v9;
  v19[0] = v10;
  v19[1] = v12;
  v19[2] = v14;
  v19[3] = v16;
  v17 = sub_100033B9C();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)(v19, &type metadata for Substring, v17);
  swift_bridgeObjectRelease(v9._object);
  swift_bridgeObjectRelease(v16);
  return v20._countAndFlagsBits;
}

uint64_t Playlist.Entry.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t *v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v0 = type metadata accessor for UploadedVideo(0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v31 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for UploadedAudio(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TVEpisode(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  __chkstk_darwin(v4);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicMovie(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter(v18);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v21 != enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    if (v21 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
      v23 = v42;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v20, v42);
      v22 = sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_10048E370);
      v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    }
    else
    {
      if (v21 == enum case for Playlist.Entry.InternalItem.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v25 = v40;
        v23 = v41;
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v15, v20, v41);
        v22 = sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_10048E368);
        v24 = *(void (**)(char *, uint64_t))(v25 + 8);
        v26 = v15;
LABEL_15:
        v24(v26, v23);
        return v22;
      }
      if (v21 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v37;
        v27 = v38;
        v23 = v39;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v20, v39);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode;
        v29 = (uint64_t *)&unk_10048E380;
      }
      else if (v21 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v34;
        v27 = v35;
        v23 = v36;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v20, v36);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio;
        v29 = (uint64_t *)&unk_10048E388;
      }
      else
      {
        if (v21 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
          return 1735290739;
        }
        (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
        v12 = v31;
        v27 = v32;
        v23 = v33;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v20, v33);
        v28 = (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo;
        v29 = (uint64_t *)&unk_10048E390;
      }
      v22 = sub_100031FC0(v28, v29);
      v24 = *(void (**)(char *, uint64_t))(v27 + 8);
    }
    v26 = v12;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v20, v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v20, v6);
  v22 = sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, &qword_10048E378);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v22;
}

uint64_t Actions.MetricsReportingContext.actionContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_100033BE0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t Actions.MetricsReportingContext.actionContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_100033C04(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t Actions.MetricsReportingContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Actions.MetricsReportingContext(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 20), a1, &qword_10048E290);
}

uint64_t Actions.MetricsReportingContext.page.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  return sub_100033C64(a1, v3);
}

CFRange (__swiftcall *Actions.MetricsReportingContext.page.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.pageContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.MetricsReportingContext.pageContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.pageContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.locations.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 28);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.locations.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.impressions.getter()
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.impressions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 32);
  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + v3));
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.impressions.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 36));
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for Actions.MetricsReportingContext(0);
  v8 = v3 + *(int *)(result + 36);
  *(_BYTE *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_QWORD *)(v8 + 16) = a3;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.sharedListeningContext.modify())(__C::_NSRange)
{
  type metadata accessor for Actions.MetricsReportingContext(0);
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char *v23;

  v16 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[6]);
  *v19 = 0;
  v19[1] = 0;
  v20 = v16[7];
  *(_QWORD *)((char *)a9 + v20) = 0;
  v21 = v16[8];
  *(_QWORD *)((char *)a9 + v21) = 0;
  *a9 = a1;
  a9[1] = a2;
  sub_100033C64(a3, v17);
  swift_bridgeObjectRelease(v19[1]);
  *v19 = a4;
  v19[1] = a5;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v20));
  *(_QWORD *)((char *)a9 + v20) = a6;
  result = swift_bridgeObjectRelease(*(_QWORD *)((char *)a9 + v21));
  *(_QWORD *)((char *)a9 + v21) = a7;
  v23 = (char *)a9 + v16[9];
  *v23 = a8;
  *((_QWORD *)v23 + 1) = a10;
  *((_QWORD *)v23 + 2) = a11;
  return result;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  unsigned int v4;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CC28, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473696C79616C70;
  else
    return 0x7972617262696CLL;
}

uint64_t sub_100032B08(char *a1, char *a2)
{
  return sub_100028858(*a1, *a2);
}

Swift::Int sub_100032B14()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100032B94(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100032BF0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7473696C79616C70;
  else
    v2 = 0x7972617262696CLL;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100032C6C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CC28, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100032CC8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7972617262696CLL;
  if (*v1)
    v2 = 0x7473696C79616C70;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

BOOL MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:)(Swift::String string)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CC78, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.PlayType.rawValue.getter()
{
  return 0x7453657461657263;
}

Swift::Int sub_100032D70()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_100032DCC(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7453657461657263, 0xED00006E6F697461);
}

Swift::Int sub_100032DF0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  String.hash(into:)(v1, 0x7453657461657263, 0xED00006E6F697461);
  return Hasher._finalize()();
}

uint64_t sub_100032E48@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CCB0, v3);
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_100032E98(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "createStation");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.NavigationType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100032EF4 + 4 * byte_100387C70[a1]))(0x6D75626C41, 0xE500000000000000);
}

uint64_t sub_100032EF4()
{
  return 0x747369747241;
}

uint64_t sub_100032F08()
{
  return 0x7473696C79616C50;
}

uint64_t sub_100032F20()
{
  return 0x434174726F706552;
}

void sub_100032F44(char *a1)
{
  sub_1000288FC(*a1);
}

void sub_100032F50()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_100032F98()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_100033010()
{
  __asm { BR              X10 }
}

uint64_t sub_100033048(uint64_t a1)
{
  String.hash(into:)(a1, 0x747369747241, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1000330AC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2);
  __asm { BR              X9 }
}

Swift::Int sub_1000330F0()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x747369747241, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_100033168@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100033194()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1000331C0 + 4 * byte_100387C80[*v0]))();
}

void sub_1000331C0(_QWORD *a1@<X8>)
{
  *a1 = 0x747369747241;
  a1[1] = 0xE600000000000000;
}

void sub_1000331D8(_QWORD *a1@<X8>)
{
  *a1 = 0x7473696C79616C50;
  a1[1] = 0xE800000000000000;
}

void sub_1000331F4(char *a1@<X8>)
{
  strcpy(a1, "ReportAConcern");
  a1[15] = -18;
}

uint64_t Track.metricsContentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for MusicVideo(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Track(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    v15 = sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for Song, &qword_10048E368);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    v15 = sub_100031FC0((uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, &qword_10048E370);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 1735290739;
  }
  return v15;
}

void *sub_100033420(uint64_t a1)
{
  char *v1;

  if (*(_QWORD *)(a1 + 16))
  {
    v1 = (char *)&loc_1000334F0 + dword_10003380C[*(unsigned __int8 *)(swift_bridgeObjectRetain() + 48)];
    __asm { BR              X8 }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100033830(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;

  v35 = a6;
  v36 = a8;
  v38 = a3;
  v39 = a4;
  v31 = a2;
  v37 = a1;
  v12 = sub_100005574(&qword_10048E290);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v14;
  v15 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v17;
  v18 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v18);
  v33 = (uint64_t)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a5, (uint64_t)v17, &qword_10048D510);
  v20 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v21 = *(uint64_t *)((char *)a10 + v20[7]);
  v22 = *a10;
  v23 = a10[1];
  sub_100014A7C((uint64_t)a10 + v20[5], (uint64_t)v14, &qword_10048E290);
  v24 = *(uint64_t *)((char *)a10 + v20[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100033BE0(v22, v23);
  v25 = v35;
  v26 = v36;
  sub_1000355C4(v35, a7, v36, a9);
  swift_bridgeObjectRetain();
  v30 = v24;
  v27 = v33;
  *((_QWORD *)&v29 + 1) = a7;
  *(_QWORD *)&v29 = v25;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(v37, v31, v38, v39, (uint64_t)v34, v21, v22, v23, v33, v29, v26, a9, (uint64_t)v32, v30);
  if (qword_10048C648 != -1)
    swift_once(&qword_10048C648, sub_10009F8B8);
  MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(v27, *(uint64_t *)((char *)a10 + v20[6]), *(uint64_t *)((char *)a10 + v20[6] + 8), *((_BYTE *)a10 + v20[9]), *(uint64_t *)((char *)a10 + v20[9] + 8), *(uint64_t *)((char *)a10 + v20[9] + 16));
  return sub_100006798(v27, type metadata accessor for MetricsEvent.Click);
}

uint64_t sub_100033A78(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_100033B00(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v5 = HIBYTE(a3) & 0xF;
    else
      v5 = a2 & 0xFFFFFFFFFFFFLL;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    result = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v8 & 1) != 0)
      result = v7;
    if (4 * v5 >= result >> 14)
      return String.subscript.getter(result, v7, a2, a3);
  }
  __break(1u);
  return result;
}

unint64_t sub_100033B9C()
{
  unint64_t result;

  result = qword_10048E288;
  if (!qword_10048E288)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_10048E288);
  }
  return result;
}

uint64_t sub_100033BE0(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_100033BF0(a1, a2);
  return a1;
}

uint64_t sub_100033BF0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100033C04(uint64_t a1, unint64_t a2)
{
  if (a2 != 9)
    return sub_100033C14(a1, a2);
  return a1;
}

uint64_t sub_100033C14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 9)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t type metadata accessor for Actions.MetricsReportingContext(uint64_t a1)
{
  uint64_t result;

  result = qword_10048E310;
  if (!qword_10048E310)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Actions.MetricsReportingContext);
  return result;
}

uint64_t sub_100033C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048E290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO3KeyO14NavigationTypeO8rawValueAKSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CCE8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_100033CF8()
{
  unint64_t result;

  result = qword_10048E298;
  if (!qword_10048E298)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.DestinationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType);
    atomic_store(result, (unint64_t *)&qword_10048E298);
  }
  return result;
}

unint64_t sub_100033D40()
{
  unint64_t result;

  result = qword_10048E2A0;
  if (!qword_10048E2A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.PlayType, &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType);
    atomic_store(result, (unint64_t *)&qword_10048E2A0);
  }
  return result;
}

unint64_t sub_100033D88()
{
  unint64_t result;

  result = qword_10048E2A8;
  if (!qword_10048E2A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MetricsEvent.Click.ActionDetails.Key.NavigationType, &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType);
    atomic_store(result, (unint64_t *)&qword_10048E2A8);
  }
  return result;
}

uint64_t *_s23MetricsReportingContextVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    if (v7 > 9)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100005574(&qword_10048E290);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v42 = v12;
      v15 = v10[1];
      *v9 = *v10;
      v9[1] = v15;
      v16 = v10[3];
      v9[2] = v10[2];
      v9[3] = v16;
      v17 = v11[6];
      __dst = (char *)v9 + v17;
      v18 = (char *)v10 + v17;
      v19 = type metadata accessor for URL(0);
      v39 = *(_QWORD *)(v19 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40(v18, 1, v19))
      {
        v20 = sub_100005574(&qword_10048D510);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(__dst, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v19);
      }
      *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
      v21 = v11[8];
      v22 = (_QWORD *)((char *)v9 + v21);
      v23 = (_QWORD *)((char *)v10 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
      v25 = v11[10];
      v26 = (_QWORD *)((char *)v9 + v25);
      v27 = (_QWORD *)((char *)v10 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v9, 0, 1, v11);
    }
    v30 = a3[6];
    v31 = a3[7];
    v32 = (uint64_t *)((char *)a1 + v30);
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)a1 + v31) = *(uint64_t *)((char *)a2 + v31);
    v35 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *((_QWORD *)v36 + 2) = *((_QWORD *)v37 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s23MetricsReportingContextVwxx(uint64_t a1, int *a2)
{
  unint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >= 0xA)
    swift_bridgeObjectRelease(v4);
  v5 = a1 + a2[5];
  v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + 24));
    v7 = v5 + v6[6];
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[10] + 8));
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

_QWORD *_s23MetricsReportingContextVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v40;

  v6 = a2[1];
  if (v6 > 9)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_10048E290);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v40 = v11;
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    v15 = v10[6];
    __dst = (char *)v8 + v15;
    v16 = (char *)v9 + v15;
    v17 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v17 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38(v16, 1, v17))
    {
      v18 = sub_100005574(&qword_10048D510);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
    }
    *(_QWORD *)((char *)v8 + v10[7]) = *(_QWORD *)((char *)v9 + v10[7]);
    v19 = v10[8];
    v20 = (_QWORD *)((char *)v8 + v19);
    v21 = (_QWORD *)((char *)v9 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v8 + v10[9]) = *((_BYTE *)v9 + v10[9]);
    v23 = v10[10];
    v24 = (_QWORD *)((char *)v8 + v23);
    v25 = (_QWORD *)((char *)v9 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v40 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v8, 0, 1, v10);
  }
  v28 = a3[6];
  v29 = a3[7];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v33 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23MetricsReportingContextVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  void (*v38)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v61;
  char *v62;
  void *v63;
  char *__dst;
  int *v65;
  int *v66;

  v6 = a1[1];
  v7 = a2[1];
  if (v6 == 9)
  {
    if (v7 >= 0xA)
      goto LABEL_16;
    goto LABEL_6;
  }
  if (v7 == 9)
  {
    sub_1000348BC((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6 < 9)
  {
    if (v7 >= 9)
    {
LABEL_16:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  if (v7 < 9)
  {
    sub_100008758((uint64_t)a1, &qword_10048E2B0);
    goto LABEL_6;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
LABEL_7:
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100006798((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_13;
    }
    v66 = a3;
    *v9 = *v10;
    v21 = v9[1];
    v9[1] = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v21);
    v9[2] = v10[2];
    v22 = v9[3];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v22);
    v23 = v11[6];
    v24 = (char *)v9 + v23;
    v25 = (char *)v10 + v23;
    v26 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v63 = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    v29 = v28(v25, 1, v26);
    if ((_DWORD)v24)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v63, v25, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v63, 0, 1, v26);
        goto LABEL_30;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D510) - 8) + 64);
      v31 = v63;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v27 + 24))(v63, v25, v26);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v27 + 8))(v63, v26);
      v30 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D510) - 8) + 64);
      v31 = v63;
    }
    memcpy(v31, v25, v30);
LABEL_30:
    v39 = v11[7];
    v40 = *(_QWORD *)((char *)v9 + v39);
    *(_QWORD *)((char *)v9 + v39) = *(_QWORD *)((char *)v10 + v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v40);
    v41 = v11[8];
    v42 = (_QWORD *)((char *)v9 + v41);
    v43 = (_QWORD *)((char *)v10 + v41);
    *v42 = *v43;
    v44 = v42[1];
    v42[1] = v43[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v44);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v45 = v11[10];
    v46 = (_QWORD *)((char *)v9 + v45);
    v47 = (_QWORD *)((char *)v10 + v45);
    *v46 = *v47;
    v48 = v46[1];
    v46[1] = v47[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease(v48);
    a3 = v66;
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_13:
    v20 = sub_100005574(&qword_10048E290);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_31;
  }
  *v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v16 = v11[6];
  __dst = (char *)v9 + v16;
  v65 = a3;
  v62 = (char *)v10 + v16;
  v17 = type metadata accessor for URL(0);
  v61 = *(_QWORD *)(v17 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v62, 1, v17))
  {
    v19 = sub_100005574(&qword_10048D510);
    memcpy(__dst, v62, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(__dst, v62, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dst, 0, 1, v17);
  }
  a3 = v65;
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  v32 = v11[8];
  v33 = (_QWORD *)((char *)v9 + v32);
  v34 = (_QWORD *)((char *)v10 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  v35 = v11[10];
  v36 = (_QWORD *)((char *)v9 + v35);
  v37 = (_QWORD *)((char *)v10 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v9, 0, 1, v11);
LABEL_31:
  v49 = a3[6];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  *v50 = *v51;
  v52 = v50[1];
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v52);
  v53 = a3[7];
  v54 = *(_QWORD *)((char *)a1 + v53);
  *(_QWORD *)((char *)a1 + v53) = *(_QWORD *)((char *)a2 + v53);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v54);
  v55 = a3[8];
  v56 = *(_QWORD *)((char *)a1 + v55);
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v56);
  v57 = a3[9];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *v58 = *v59;
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
  return a1;
}

uint64_t sub_1000348BC(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionContext(a1);
  return a1;
}

_OWORD *_s23MetricsReportingContextVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_10048E290);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = v9[6];
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100005574(&qword_10048D510);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_QWORD *)((char *)v7 + v9[7]) = *(_QWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *((_BYTE *)v7 + v9[9]) = *((_BYTE *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  v19 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  return a1;
}

uint64_t _s23MetricsReportingContextVwta(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, int *);
  int v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  if (v6 == 9)
    goto LABEL_7;
  if (v7 == 9)
  {
    sub_1000348BC(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 9)
    goto LABEL_7;
  if (v7 < 9)
  {
    sub_100008758(a1, &qword_10048E2B0);
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRelease(v6);
LABEL_8:
  v8 = a3[5];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_100006798((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_14;
    }
    v23 = v10[1];
    v24 = v9[1];
    *v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease(v24);
    v25 = v10[3];
    v26 = v9[3];
    v9[2] = v10[2];
    v9[3] = v25;
    swift_bridgeObjectRelease(v26);
    v27 = v11[6];
    v28 = (char *)v9 + v27;
    v29 = (char *)v10 + v27;
    v30 = type metadata accessor for URL(0);
    v63 = *(_QWORD *)(v30 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
    __dsta = v28;
    LODWORD(v28) = v31(v28, 1, v30);
    v32 = v31(v29, 1, v30);
    if ((_DWORD)v28)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 32))(__dsta, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v30);
        goto LABEL_26;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D510) - 8) + 64);
      v34 = __dsta;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v63 + 40))(__dsta, v29, v30);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v63 + 8))(__dsta, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D510) - 8) + 64);
      v34 = __dsta;
    }
    memcpy(v34, v29, v33);
LABEL_26:
    v35 = v11[7];
    v36 = *(_QWORD *)((char *)v9 + v35);
    *(_QWORD *)((char *)v9 + v35) = *(_QWORD *)((char *)v10 + v35);
    swift_bridgeObjectRelease(v36);
    v37 = v11[8];
    v38 = (_QWORD *)((char *)v9 + v37);
    v39 = (_QWORD *)((char *)v10 + v37);
    v41 = *v39;
    v40 = v39[1];
    v42 = v38[1];
    *v38 = v41;
    v38[1] = v40;
    swift_bridgeObjectRelease(v42);
    *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
    v43 = v11[10];
    v44 = (_QWORD *)((char *)v9 + v43);
    v45 = (_QWORD *)((char *)v10 + v43);
    v47 = *v45;
    v46 = v45[1];
    v48 = v44[1];
    *v44 = v47;
    v44[1] = v46;
    swift_bridgeObjectRelease(v48);
    goto LABEL_27;
  }
  if (v15)
  {
LABEL_14:
    v22 = sub_100005574(&qword_10048E290);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_27;
  }
  v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  v17 = v11[6];
  __dst = (char *)v9 + v17;
  v18 = (char *)v10 + v17;
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100005574(&qword_10048D510);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
  *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
  *((_BYTE *)v9 + v11[9]) = *((_BYTE *)v10 + v11[9]);
  *(_OWORD *)((char *)v9 + v11[10]) = *(_OWORD *)((char *)v10 + v11[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_27:
  v49 = a3[6];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  v54 = v50[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease(v54);
  v55 = a3[7];
  v56 = *(_QWORD *)(a1 + v55);
  *(_QWORD *)(a1 + v55) = *(_QWORD *)(a2 + v55);
  swift_bridgeObjectRelease(v56);
  v57 = a3[8];
  v58 = *(_QWORD *)(a1 + v57);
  *(_QWORD *)(a1 + v57) = *(_QWORD *)(a2 + v57);
  swift_bridgeObjectRelease(v58);
  v59 = a3[9];
  v60 = a1 + v59;
  v61 = a2 + v59;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  *(_OWORD *)(v60 + 8) = *(_OWORD *)(v61 + 8);
  return a1;
}

uint64_t _s23MetricsReportingContextVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100034EA4);
}

uint64_t sub_100034EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100005574(&qword_10048E290);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s23MetricsReportingContextVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100034F44);
}

uint64_t sub_100034F44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100005574(&qword_10048E290);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_100034FC8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_100387EA8;
  sub_10003505C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_100387EC0;
    v4[3] = &unk_100387ED8;
    v4[4] = &unk_100387ED8;
    v4[5] = &unk_100387EF0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

void sub_10003505C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10048E320)
  {
    v2 = type metadata accessor for MetricsEvent.Page(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10048E320);
  }
}

uint64_t sub_1000350B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s3KeyOwxx(uint64_t a1)
{
  return sub_1000350D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1000350D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s3KeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000350B4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s3KeyOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1000350B4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1000350D8(v6, v7, v8);
  return a1;
}

__n128 _s3KeyOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s3KeyOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1000350D8(v4, v5, v6);
  return a1;
}

uint64_t _s3KeyOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s3KeyOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10003526C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_100035284(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key;
}

uint64_t _s3KeyO15DestinationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1000352F8 + 4 * byte_100387C89[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10003532C + 4 * byte_100387C84[v4]))();
}

uint64_t sub_10003532C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035334(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10003533CLL);
  return result;
}

uint64_t sub_100035348(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100035350);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100035354(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003535C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page.DisplayType(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s3KeyO8PlayTypeOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10003540C + 4 * byte_100387C8E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10003542C + 4 * byte_100387C93[v4]))();
}

_BYTE *sub_10003540C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10003542C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100035434(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10003543C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100035444(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10003544C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType;
}

uint64_t _s3KeyO14NavigationTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s3KeyO14NavigationTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100035544 + 4 * byte_100387C9D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100035578 + 4 * byte_100387C98[v4]))();
}

uint64_t sub_100035578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100035580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100035588);
  return result;
}

uint64_t sub_100035594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10003559CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1000355A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000355A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType;
}

id sub_1000355C4(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (BYTE1(a4) != 255)
    return sub_1000355D8(result, a2, a3, a4, SBYTE1(a4));
  return result;
}

id sub_1000355D8(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a5 == 1)
    return sub_100035604(result, a2, a3);
  return result;
}

id sub_100035604(id result, uint64_t a2, uint64_t a3)
{
  id v3;

  if (result)
  {
    v3 = result;
    swift_bridgeObjectRetain(a3);
    return v3;
  }
  return result;
}

uint64_t View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t WitnessTable;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_OWORD *, uint64_t, uint64_t);
  uint64_t OpaqueTypeMetadata2;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  id v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  char **v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v58;
  char *v59;
  char **v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t (*v71)(_OWORD *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(_QWORD, _QWORD, _QWORD);
  void *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[10];
  _OWORD v91[5];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;

  v75 = a9;
  v78 = a7;
  v68 = a2;
  v69 = (char *)a4;
  v67 = a1;
  v13 = type metadata accessor for ActionMenu(255, a6, a8, a4);
  v14 = type metadata accessor for Optional(0, v13);
  v71 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
  v15 = v71(v90, a3, v14);
  v64 = v90[1];
  v65 = v90[3];
  v66 = v90[5];
  v62 = (id)v90[6];
  v63 = v90[9];
  v60 = *(char ***)(a5 - 8);
  v16 = __chkstk_darwin(v15);
  v59 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v58 = (char *)&v58 - v18;
  v20 = type metadata accessor for ActionMenuView(255, a6, a8, v19);
  *(_QWORD *)&v92 = a6;
  *((_QWORD *)&v92 + 1) = a6;
  *(_QWORD *)&v93 = a8;
  *((_QWORD *)&v93 + 1) = a8;
  v21 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v92);
  v22 = type metadata accessor for Optional(255, v21);
  v23 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v22);
  v24 = type metadata accessor for ModifiedContent(255, v20, v23);
  v25 = type metadata accessor for Section(255, &type metadata for Text, v24, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v20);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v23);
  v88 = WitnessTable;
  v89 = v27;
  v28 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  v85 = &protocol witness table for Text;
  v86 = v28;
  v87 = &protocol witness table for EmptyView;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v25);
  *(_QWORD *)&v92 = a5;
  *((_QWORD *)&v92 + 1) = v25;
  v77 = v25;
  v30 = (uint64_t (*)(_OWORD *, uint64_t, uint64_t))v29;
  *(_QWORD *)&v93 = v78;
  *((_QWORD *)&v93 + 1) = v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v92, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v61 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v32 = __chkstk_darwin(OpaqueTypeMetadata2);
  v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v36 = (char *)&v58 - v35;
  v37 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a5);
  v72 = *(_QWORD *)(v37 - 8);
  v73 = v37;
  __chkstk_darwin(v37);
  v76 = (char *)&v58 - v38;
  v70 = a3;
  v39 = v71(v91, a3, v14);
  if (*((_QWORD *)&v91[0] + 1))
  {
    v60 = &v58;
    v94 = v91[2];
    v95 = v91[3];
    v96 = v91[4];
    v92 = v91[0];
    v93 = v91[1];
    __chkstk_darwin(v39);
    v71 = v30;
    *(&v58 - 10) = (char *)a5;
    *(&v58 - 9) = (char *)a6;
    v40 = (uint64_t)v78;
    *(&v58 - 8) = v78;
    *(&v58 - 7) = (char *)a8;
    *(&v58 - 6) = v74;
    *(&v58 - 5) = (char *)&v92;
    v41 = v68;
    *(&v58 - 4) = v67;
    *(&v58 - 3) = v41;
    *(&v58 - 2) = v69;
    v42 = v62;
    swift_retain(v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = swift_checkMetadataState(0, v77);
    v30 = v71;
    View.contextMenu<A>(menuItems:)(sub_100036038, &v58 - 12, a5, v43, v40, v71);
    v81 = a5;
    v82 = v43;
    v83 = v40;
    v84 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    v45 = v61;
    v46 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v46(v36, v34, OpaqueTypeMetadata2);
    v47 = *(void (**)(char *, uint64_t))(v45 + 8);
    v47(v34, OpaqueTypeMetadata2);
    v46(v34, v36, OpaqueTypeMetadata2);
    sub_100035EB0((uint64_t)v34, OpaqueTypeMetadata2, a5, OpaqueTypeConformance2, v40);
    sub_1000369DC(v70);
    v47(v34, OpaqueTypeMetadata2);
    v47(v36, OpaqueTypeMetadata2);
  }
  else
  {
    v48 = v60;
    v49 = v60[2];
    v50 = v58;
    ((void (*)(char *, char *, uint64_t))v49)(v58, v74, a5);
    v51 = (uint64_t)v59;
    ((void (*)(char *, char *, uint64_t))v49)(v59, v50, a5);
    v40 = (uint64_t)v78;
    *(_QWORD *)&v92 = a5;
    *((_QWORD *)&v92 + 1) = v77;
    *(_QWORD *)&v93 = v78;
    *((_QWORD *)&v93 + 1) = v30;
    v52 = swift_getOpaqueTypeConformance2(&v92, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
    sub_100035F74(v51, OpaqueTypeMetadata2, a5, v52, v40);
    v53 = v48[1];
    ((void (*)(uint64_t, uint64_t))v53)(v51, a5);
    ((void (*)(char *, uint64_t))v53)(v50, a5);
  }
  v81 = a5;
  v82 = v77;
  v83 = v40;
  v84 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v30;
  v79 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  v80 = v40;
  v54 = v73;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v73);
  v55 = v72;
  v56 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v75, v76, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v54);
}

uint64_t type metadata accessor for ActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView);
}

uint64_t type metadata accessor for ActionMenuView.Excluding(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ActionMenuView.Excluding);
}

uint64_t sub_100035B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a6;
  v35 = a8;
  v31 = a4;
  v32 = a5;
  v30 = a3;
  v33 = a1;
  v36 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_100035D60(a2, v30, v31, v32, v34, a7, v35, a10);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_100035D60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  unint64_t v18;
  _QWORD v20[10];
  _QWORD v21[4];
  _QWORD v22[2];

  if (a3)
    v10 = a2;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (a3)
    v11 = a3;
  v22[0] = v10;
  v22[1] = v11;
  v20[2] = a5;
  v20[3] = a6;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a1;
  v20[7] = a4;
  v12 = type metadata accessor for ActionMenuView(255, a6, a8, a4);
  swift_bridgeObjectRetain();
  v21[0] = a6;
  v21[1] = a6;
  v21[2] = a8;
  v21[3] = a8;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v21);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v20[8] = swift_getWitnessTable(&unk_100388010, v12);
  v20[9] = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v18 = sub_10000D478();
  return Section<>.init<A>(_:content:)(v22, sub_10003A5E8, v20, v16, &type metadata for String, WitnessTable, v18);
}

uint64_t sub_100035E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100035EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100035F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_100036038@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_100035B78(v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, _QWORD *a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t OpaqueTypeConformance2;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[5];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;

  v81 = a9;
  v76 = a7;
  v77 = a8;
  v74 = a5;
  v75 = a6;
  v72 = a2;
  v73 = a4;
  v85 = a3;
  v71 = a1;
  v15 = a13;
  v78 = a12;
  v16 = a10;
  v69 = *(_QWORD *)(a10 - 8);
  v17 = __chkstk_darwin(a1);
  v68 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v67 = (char *)&v66 - v19;
  v21 = type metadata accessor for ActionMenuView(255, a11, a14, v20);
  *(_QWORD *)&v101 = a11;
  *((_QWORD *)&v101 + 1) = a11;
  *(_QWORD *)&v102 = a14;
  *((_QWORD *)&v102 + 1) = a14;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v101);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(255, v21, v24);
  v26 = type metadata accessor for Section(255, &type metadata for Text, v25, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v21);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v98 = WitnessTable;
  v99 = v28;
  v29 = v25;
  v30 = v78;
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v95 = &protocol witness table for Text;
  v96 = v31;
  v97 = &protocol witness table for EmptyView;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v26);
  *(_QWORD *)&v101 = a10;
  *((_QWORD *)&v101 + 1) = v26;
  v83 = v26;
  v84 = a15;
  *(_QWORD *)&v102 = v30;
  *((_QWORD *)&v102 + 1) = a13;
  v86 = v32;
  *(_QWORD *)&v103 = v32;
  *((_QWORD *)&v103 + 1) = a15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v70 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v34 = __chkstk_darwin(OpaqueTypeMetadata2);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v38 = (char *)&v66 - v37;
  v39 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a10);
  v80 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v79 = (char *)&v66 - v40;
  v42 = type metadata accessor for ActionMenu(255, a11, a14, v41);
  v43 = type metadata accessor for Optional(0, v42);
  v44 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v100, v85, v43);
  if (*((_QWORD *)&v100[0] + 1))
  {
    v68 = (char *)&v66;
    v103 = v100[2];
    v104 = v100[3];
    v105 = v100[4];
    v101 = v100[0];
    v102 = v100[1];
    v45 = __chkstk_darwin(v44);
    v66 = &v66 - 14;
    v67 = v38;
    *(&v66 - 12) = (_QWORD *)a10;
    *(&v66 - 11) = (_QWORD *)a11;
    *(&v66 - 10) = v30;
    *(&v66 - 9) = (_QWORD *)a13;
    v46 = v30;
    v47 = v84;
    *(&v66 - 8) = (_QWORD *)a14;
    *(&v66 - 7) = v47;
    v69 = v39;
    *(&v66 - 6) = v82;
    *(&v66 - 5) = &v101;
    __chkstk_darwin(v45);
    *(&v66 - 8) = (_QWORD *)a10;
    *(&v66 - 7) = (_QWORD *)a11;
    *(&v66 - 6) = v46;
    *(&v66 - 5) = (_QWORD *)a13;
    v48 = swift_allocObject(&unk_100442098, 32, 7);
    v49 = v77;
    *(_QWORD *)(v48 + 16) = v76;
    *(_QWORD *)(v48 + 24) = v49;
    sub_10003693C(v85);
    swift_retain(v49);
    v50 = swift_checkMetadataState(0, v83);
    View.contextMenu<A, B>(menuItems:preview:previewAction:)(sub_100036800, v66, sub_100036904, &v66 - 10, sub_100009BB0, v48, a10, v50, v46, a13, v86, v47);
    swift_release(v48);
    v89 = a10;
    v90 = v50;
    v91 = v46;
    v92 = a13;
    v93 = v86;
    v94 = v47;
    v30 = v46;
    v15 = a13;
    v16 = a10;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v52 = v70;
    v53 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
    v54 = v67;
    v53(v67, v36, OpaqueTypeMetadata2);
    v55 = *(void (**)(char *, uint64_t))(v52 + 8);
    v55(v36, OpaqueTypeMetadata2);
    v53(v36, v54, OpaqueTypeMetadata2);
    v56 = v79;
    v57 = OpaqueTypeConformance2;
    v39 = v69;
    sub_100035EB0((uint64_t)v36, OpaqueTypeMetadata2, a10, v57, a13);
    sub_1000369DC(v85);
    v55(v36, OpaqueTypeMetadata2);
    v55(v54, OpaqueTypeMetadata2);
  }
  else
  {
    v58 = v69;
    v59 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v60 = v67;
    v59(v67, (char *)v82, a10);
    v61 = (uint64_t)v68;
    v59(v68, v60, a10);
    *(_QWORD *)&v101 = a10;
    *((_QWORD *)&v101 + 1) = v83;
    *(_QWORD *)&v102 = v30;
    *((_QWORD *)&v102 + 1) = a13;
    *(_QWORD *)&v103 = v86;
    *((_QWORD *)&v103 + 1) = v84;
    v62 = swift_getOpaqueTypeConformance2(&v101, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
    v56 = v79;
    sub_100035F74(v61, OpaqueTypeMetadata2, a10, v62, a13);
    v63 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v63(v61, a10);
    v63((uint64_t)v60, a10);
  }
  v89 = v16;
  v90 = v83;
  v91 = v30;
  v92 = v15;
  v93 = v86;
  v94 = v84;
  v87 = swift_getOpaqueTypeConformance2(&v89, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  v88 = v15;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v39);
  v64 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v81, v56, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v56, v39);
}

uint64_t sub_10003661C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t WitnessTable;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];

  v34 = a1;
  v35 = a6;
  v32 = a4;
  v33 = a5;
  v36 = a8;
  v30 = a3;
  v31 = a9;
  v12 = type metadata accessor for ActionMenuView(255, a7, a10, a4);
  v42[0] = a7;
  v42[1] = a7;
  v42[2] = a10;
  v42[3] = a10;
  v13 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)v42);
  v14 = type metadata accessor for Optional(255, v13);
  v15 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v14);
  v16 = type metadata accessor for ModifiedContent(255, v12, v15);
  v17 = type metadata accessor for Section(0, &type metadata for Text, v16, &type metadata for EmptyView);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v30 - v22;
  sub_100035D60(a2, v30, v32, v33, v35, a7, v31, a10);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v12);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v15);
  v40 = WitnessTable;
  v41 = v25;
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v37 = &protocol witness table for Text;
  v38 = v26;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v27 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v27(v23, v21, v17);
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v27(v36, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_100036800@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_10003661C(v1[8], v1[9], v1[10], v1[11], v1[12], v1[2], v1[3], a1, v1[5], v1[6]);
}

uint64_t sub_10003683C@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(void);
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void (*)(void))__chkstk_darwin(v5);
  v10 = (char *)&v14 - v9;
  v8();
  v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t sub_100036904@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10003683C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_100036918()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003693C(uint64_t a1)
{
  sub_100036984(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

uint64_t sub_100036984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v13;
  uint64_t result;

  if (a2)
  {
    v13 = a7;
    swift_retain(a10);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

uint64_t sub_1000369DC(uint64_t a1)
{
  sub_100036A24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return a1;
}

void sub_100036A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_release(a10);

  }
}

_QWORD *sub_100036A88@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, __int128 *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *, __int128 *, uint64_t);
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[7];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  sub_100031038((uint64_t)a1);
  sub_100036CF0(a1, 1, 0, 0, a3, a4, (uint64_t)v39);
  v45 = v39[4];
  v46 = v39[5];
  v47 = v39[6];
  *(_QWORD *)&v48 = v40;
  v41 = v39[0];
  v42 = v39[1];
  v43 = v39[2];
  v44 = v39[3];
  *(_QWORD *)&v50 = a3;
  *((_QWORD *)&v50 + 1) = a3;
  *(_QWORD *)&v51 = a4;
  *((_QWORD *)&v51 + 1) = a4;
  v10 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)&v50);
  v11 = swift_allocObject(v10, 24, 7);
  *(_QWORD *)(v11 + 16) = a2;
  v13 = type metadata accessor for ActionMenuView(0, a3, a4, v12);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_100388010, v13);
  v15 = swift_getWitnessTable(&unk_100387FD8, v10);
  View.environmentObject<A>(_:)(&v50, v11, v13, v10, WitnessTable, v15);
  swift_release(v11);
  sub_10003A5F8(v39);
  v47 = v56;
  v48 = v57;
  v43 = v52;
  v44 = v53;
  v45 = v54;
  v46 = v55;
  v41 = v50;
  v42 = v51;
  v27 = v56;
  v28 = v57;
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v49 = v58;
  v29 = v58;
  v21 = v50;
  v22 = v51;
  v16 = type metadata accessor for Optional(255, v10);
  v17 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v16);
  v18 = type metadata accessor for ModifiedContent(0, v13, v17);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v19 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v19(&v30, &v21, v18);
  sub_10003A67C(&v41);
  v56 = v36;
  v57 = v37;
  v52 = v32;
  v53 = v33;
  v54 = v34;
  v55 = v35;
  v50 = v30;
  v51 = v31;
  v27 = v36;
  v28 = v37;
  v23 = v32;
  v24 = v33;
  v25 = v34;
  v26 = v35;
  v58 = v38;
  v29 = v38;
  v21 = v30;
  v22 = v31;
  v19(a5, &v21, v18);
  return sub_10003A67C(&v50);
}

__n128 sub_100036CF0@<Q0>(__int128 *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  __n128 result;
  uint64_t v18;
  __n128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];

  v21 = a1[1];
  v22 = *a1;
  v20 = a1[2];
  v12 = *((_QWORD *)a1 + 6);
  v13 = *((_BYTE *)a1 + 56) & 1;
  v23[0] = a5;
  v23[1] = a5;
  v23[2] = a6;
  v23[3] = a6;
  v14 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v23);
  WitnessTable = swift_getWitnessTable(&unk_100387FD8, v14);
  v19 = (__n128)a1[4];
  v16 = EnvironmentObject.init()(v14, WitnessTable);
  *(_OWORD *)a7 = v22;
  *(_OWORD *)(a7 + 16) = v21;
  *(_OWORD *)(a7 + 32) = v20;
  *(_QWORD *)(a7 + 48) = v12;
  *(_BYTE *)(a7 + 56) = v13;
  result = v19;
  *(__n128 *)(a7 + 64) = v19;
  *(_BYTE *)(a7 + 80) = a2;
  *(_QWORD *)(a7 + 88) = a3;
  *(_QWORD *)(a7 + 96) = a4;
  *(_QWORD *)(a7 + 104) = v16;
  *(_QWORD *)(a7 + 112) = v18;
  return result;
}

uint64_t sub_100036DC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_allocObject(v1, 24, 7);
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72[16];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  void *v88;

  v62 = a7;
  v65 = a6;
  v66 = a5;
  v64 = a4;
  v67 = a3;
  v61 = a2;
  v60 = a1;
  v71 = a9;
  v54 = a11;
  v53 = a10;
  v70 = type metadata accessor for MenuOrder(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a8 + 16);
  v13 = *(_QWORD *)(a8 + 24);
  v16 = type metadata accessor for ActionMenuView(255, v14, v13, v15);
  v17 = type metadata accessor for Section(255, &type metadata for Text, v16, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v16);
  v86 = &protocol witness table for Text;
  v87 = WitnessTable;
  v88 = &protocol witness table for EmptyView;
  v57 = v17;
  v56 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v17);
  v82 = a10;
  v83 = v17;
  v84 = a11;
  v85 = v56;
  v19 = type metadata accessor for Menu(0, &v82);
  v59 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v55 = (char *)&v50 - v20;
  v21 = v14;
  v82 = v14;
  v83 = v14;
  v84 = v13;
  v85 = v13;
  v22 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v82);
  v23 = type metadata accessor for Optional(255, v22);
  v24 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v23);
  v25 = type metadata accessor for ModifiedContent(0, v19, v24);
  v58 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v27 = (uint64_t *)((char *)&v50 - v26);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v19);
  v50 = v28;
  v29 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v24);
  v80 = v28;
  v81 = v29;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v82 = v25;
  v83 = v51;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v82, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 0);
  v52 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v31 = __chkstk_darwin(OpaqueTypeMetadata2);
  v33 = (char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v35 = (char *)&v50 - v34;
  v36 = v53;
  v73 = v21;
  v74 = v53;
  v37 = v54;
  v75 = v13;
  v76 = v54;
  v77 = v60;
  v78 = v61;
  v79 = v63;
  v38 = v62;
  swift_retain(v62);
  v49 = v37;
  v39 = v55;
  Menu.init(onPresentationChanged:content:label:)(v65, v38, sub_100037464, v72, v64, v66, v36, v57, v49, v56);
  v40 = swift_allocObject(v22, 24, 7);
  *(_QWORD *)(v40 + 16) = v67;
  swift_bridgeObjectRetain();
  v41 = swift_getWitnessTable(&unk_100387FD8, v22);
  View.environmentObject<A>(_:)(v27, v40, v19, v22, v50, v41);
  v42 = swift_release(v40);
  v43 = (*(uint64_t (**)(char *, uint64_t, __n128))(v59 + 8))(v39, v19, v42);
  v44 = v68;
  static MenuOrder.fixed.getter(v43);
  View.menuOrder(_:)(v44, v25, v51);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v70);
  (*(void (**)(_QWORD *, uint64_t))(v58 + 8))(v27, v25);
  v45 = v52;
  v46 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v46(v35, v33, OpaqueTypeMetadata2);
  v47 = *(void (**)(char *, uint64_t))(v45 + 8);
  v47(v33, OpaqueTypeMetadata2);
  v46(v71, v35, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v47)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_1000372A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t WitnessTable;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  _QWORD v40[2];

  v28 = a3;
  v29 = a7;
  v27 = a5;
  v30 = a8;
  v12 = type metadata accessor for ActionMenuView(255, a4, a6, a4);
  v13 = type metadata accessor for Section(0, &type metadata for Text, v12, &type metadata for EmptyView);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v27 - v18;
  if (a2)
    v20 = a1;
  else
    v20 = 0;
  v21 = 0xE000000000000000;
  if (a2)
    v21 = a2;
  v40[0] = v20;
  v40[1] = v21;
  v32 = a4;
  v33 = v27;
  v34 = a6;
  v35 = v29;
  v36 = v28;
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&unk_100388010, v12);
  v23 = sub_10000D478();
  Section<>.init<A>(_:content:)(v40, sub_10003A5D8, v31, v12, &type metadata for String, WitnessTable, v23);
  v37 = &protocol witness table for Text;
  v38 = WitnessTable;
  v39 = &protocol witness table for EmptyView;
  swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v24 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v24(v19, v17, v13);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v17, v13);
  v24(v30, v19, v13);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v13);
}

uint64_t sub_100037464@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1000372A0(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

double sub_100037478@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, __int128 *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(__int128 *, __int128 *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  char v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD v37[7];
  uint64_t v38;

  sub_100031038((uint64_t)a1);
  sub_100036CF0(a1, 1, 0, 0, a2, a3, (uint64_t)v37);
  v24 = v37[4];
  v25 = v37[5];
  *(_OWORD *)v26 = v37[6];
  *(_QWORD *)&v26[16] = v38;
  v20 = v37[0];
  v21 = v37[1];
  v22 = v37[2];
  v23 = v37[3];
  v8 = type metadata accessor for ActionMenuView(0, a2, a3, v7);
  swift_getWitnessTable(&unk_100388010, v8);
  v9 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(&v27, &v20, v8);
  sub_10003A5F8(v37);
  v10 = *((_QWORD *)&v27 + 1);
  v11 = *((_QWORD *)&v28 + 1);
  v12 = *((_QWORD *)&v29 + 1);
  v13 = v30;
  v14 = *((_QWORD *)&v32 + 1);
  v15 = v34;
  v16 = v35;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  *(_QWORD *)&v23 = v30;
  BYTE8(v23) = v31;
  v24 = v32;
  LOBYTE(v25) = v33;
  *((_QWORD *)&v25 + 1) = v34;
  *(_QWORD *)v26 = v35;
  v18 = v36;
  *(_OWORD *)&v26[8] = v36;
  v9(a4, &v20, v8);
  swift_release(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);

  sub_10003A5C8(v15, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t WeakValuesDictionary.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_100037624@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  uint64_t result;
  _OWORD v6[2];

  v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  v4 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v6);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a2 = result;
  return result;
}

uint64_t sub_100037674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  void (*v51)(uint64_t);
  void (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  void (*v105)(uint64_t, uint64_t, __n128);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t WitnessTable;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  void (*v143)(uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD v155[2];
  uint64_t v156[13];
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;

  v3 = v2;
  v149 = a2;
  v5 = sub_100005600(&qword_10048E4A0);
  v6 = *(_QWORD *)(a1 + 24);
  v150 = *(_QWORD *)(a1 + 16);
  v145 = v6;
  type metadata accessor for ActionMenu.Element(255, v150, v6, v7);
  v8 = type metadata accessor for Array(255);
  v10 = type metadata accessor for ActionMenuView.ItemView(255, v150, v6, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v10, a1);
  *(_QWORD *)&v157 = v8;
  *((_QWORD *)&v157 + 1) = &type metadata for String;
  *(_QWORD *)&v158 = v11;
  *((_QWORD *)&v158 + 1) = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v132 = *((_QWORD *)&v158 + 1);
  *(_QWORD *)&v159 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v157);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_10003A1F8();
  v156[11] = swift_getWitnessTable(&unk_1003880C8, v10);
  v156[12] = swift_getWitnessTable(&unk_100388010, a1);
  v133 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  v156[10] = WitnessTable;
  v131 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v156[8] = v131;
  v156[9] = (uint64_t)&protocol witness table for _AppearanceActionModifier;
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v127 = v5;
  *(_QWORD *)&v157 = v5;
  *((_QWORD *)&v157 + 1) = v13;
  v126 = v14;
  *(_QWORD *)&v158 = v14;
  *((_QWORD *)&v158 + 1) = v15;
  v136 = v15;
  v16 = type metadata accessor for Menu(0, &v157);
  v120 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v123 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v122 = (char *)&v114 - v19;
  v20 = sub_100005600(&qword_10048E4C0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v20, 0, 0);
  v22 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v125 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v124 = (char *)&v114 - v24;
  v119 = v20;
  v25 = __chkstk_darwin(v23);
  v118 = (uint64_t)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v121 = (char *)&v114 - v27;
  v144 = v16;
  v28 = type metadata accessor for _ConditionalContent(0, v22, v16);
  v139 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v138 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v137 = (char *)&v114 - v32;
  v135 = v12;
  v129 = *(_QWORD *)(v12 - 8);
  v33 = __chkstk_darwin(v31);
  v128 = (char *)&v114 - v34;
  v140 = v13;
  v142 = *(_QWORD *)(v13 - 8);
  v35 = __chkstk_darwin(v33);
  v117 = (char *)&v114 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v141 = (char *)&v114 - v38;
  __chkstk_darwin(v37);
  v146 = (char *)&v114 - v39;
  v148 = type metadata accessor for _ConditionalContent(0, &type metadata for EmptyView, v28);
  v147 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin(v148);
  v41 = (char *)&v114 - v40;
  v42 = *(_OWORD *)(v3 + 48);
  v159 = *(_OWORD *)(v3 + 32);
  v160 = v42;
  v161 = *(_OWORD *)(v3 + 64);
  v43 = *(_OWORD *)(v3 + 16);
  v157 = *(_OWORD *)v3;
  v158 = v43;
  v44 = *(_QWORD *)(sub_10003A27C(a1) + 16);
  v45 = v145;
  v47 = type metadata accessor for ActionMenu(0, v150, v145, v46);
  v48 = swift_bridgeObjectRetain();
  v49 = ActionMenu.elements(excluding:)(v48, v47);
  v143 = v50;
  v52 = v51;
  swift_bridgeObjectRelease(v44);
  v156[0] = v49;
  v53 = swift_getWitnessTable(&protocol conformance descriptor for [A], v8);
  v134 = v8;
  v54 = Collection.isEmpty.getter(v8, v53);
  if ((v54 & 1) != 0)
  {
    v55 = swift_bridgeObjectRelease(v49);
    v143(v55);
    v56 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v57 = v144;
    v58 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v144);
    v151 = v56;
    v152 = v58;
    v59 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
    sub_100035EB0(v59, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v59);
    swift_release(v52);
    v60 = v41;
  }
  else
  {
    v116 = v41;
    v115 = v28;
    v61 = v144;
    v156[0] = v49;
    __chkstk_darwin(v54);
    v62 = v150;
    v112 = v150;
    v113 = v45;
    KeyPath = swift_getKeyPath(&unk_100388060);
    v64 = swift_allocObject(&unk_1004421D0, 152, 7);
    *(_QWORD *)(v64 + 16) = v62;
    *(_QWORD *)(v64 + 24) = v45;
    v65 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v64 + 96) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v64 + 112) = v65;
    *(_OWORD *)(v64 + 128) = *(_OWORD *)(v3 + 96);
    *(_QWORD *)(v64 + 144) = *(_QWORD *)(v3 + 112);
    v66 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v64 + 32) = *(_OWORD *)v3;
    *(_OWORD *)(v64 + 48) = v66;
    v67 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v64 + 64) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v64 + 80) = v67;
    sub_10003A3AC(v3);
    v68 = v128;
    ForEach<>.init(_:id:content:)(v156, KeyPath, sub_10003A3A0, v64, v134, v133, v132, &protocol witness table for String, WitnessTable);
    v69 = swift_allocObject(&unk_1004421F8, 32, 7);
    *(_QWORD *)(v69 + 16) = v143;
    *(_QWORD *)(v69 + 24) = v52;
    v143 = v52;
    swift_retain(v52);
    v70 = v146;
    v71 = v135;
    View.onAppear(perform:)(sub_10000AD24, v69, v135, v131);
    v72 = swift_release(v69);
    v73 = (*(uint64_t (**)(char *, uint64_t, __n128))(v129 + 8))(v68, v71, v72);
    if ((BYTE8(v160) & 1) != 0)
    {
      v74 = __chkstk_darwin(v73);
      *(&v114 - 4) = v62;
      *(&v114 - 3) = v45;
      __chkstk_darwin(v74);
      *(&v114 - 4) = v62;
      *(&v114 - 3) = v45;
      v112 = v3;
      v75 = (uint64_t)v123;
      v76 = v140;
      Menu.init(content:label:)(sub_10003A444);
      v57 = v61;
      v77 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v61);
      v78 = v120;
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
      v80 = v122;
      v79(v122, v75, v61);
      v81 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
      v81(v75, v61);
      v79((char *)v75, (uint64_t)v80, v61);
      v82 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v83 = v137;
      sub_100035F74(v75, v22, v57, v82, v77);
      v81(v75, v57);
      v81((uint64_t)v80, v57);
      v60 = v116;
      v84 = v142;
    }
    else
    {
      v85 = *(uint64_t (**)(char *, char *, uint64_t))(v142 + 16);
      v76 = v140;
      v86 = v85(v141, v70, v140);
      v57 = v61;
      v83 = v137;
      if ((*(_BYTE *)(v3 + 80) & 1) != 0)
      {
        v88 = (uint64_t)v121;
        Divider.init()(v86);
        v89 = type metadata accessor for Divider(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
      }
      else
      {
        v87 = type metadata accessor for Divider(0);
        v88 = (uint64_t)v121;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v121, 1, 1, v87);
      }
      v60 = v116;
      v90 = (uint64_t)v117;
      v85(v117, v141, v76);
      v156[0] = v90;
      v91 = v118;
      sub_10003A45C(v88, v118);
      v156[1] = v91;
      v155[0] = v76;
      v155[1] = v119;
      v153 = v136;
      v154 = sub_10003A4A4();
      v92 = (uint64_t)v124;
      sub_1000388A8(v156, 2uLL, (uint64_t)v155);
      sub_10003A550(v91);
      v93 = v142;
      v94 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
      v94(v90, v76);
      v95 = v88;
      v96 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
      v97 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
      sub_100035EB0(v92, v22, v57, v96, v97);
      v98 = v92;
      v84 = v93;
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v98, v22);
      sub_10003A550(v95);
      v94((uint64_t)v141, v76);
    }
    v99 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
    v100 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
    v156[6] = v99;
    v156[7] = v100;
    v28 = v115;
    v101 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v115);
    v102 = v139;
    v103 = (uint64_t)v138;
    (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, v83, v28);
    sub_100035F74(v103, (uint64_t)&type metadata for EmptyView, v28, (uint64_t)&protocol witness table for EmptyView, v101);
    v104 = swift_release(v143);
    v105 = *(void (**)(uint64_t, uint64_t, __n128))(v102 + 8);
    v105(v103, v28, v104);
    ((void (*)(char *, uint64_t))v105)(v83, v28);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v146, v76);
  }
  v106 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v22);
  v107 = swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v57);
  v156[4] = v106;
  v156[5] = v107;
  v108 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v28);
  v156[2] = (uint64_t)&protocol witness table for EmptyView;
  v156[3] = v108;
  v109 = v148;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v148);
  v110 = v147;
  (*(void (**)(uint64_t, char *, uint64_t))(v147 + 16))(v149, v60, v109);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v60, v109);
}

uint64_t sub_100038274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__int128 *, __int128 *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v60;
  id v61;
  __int128 v62;
  uint64_t v63;
  uint64_t WitnessTable;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  char v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD v95[2];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  void *v99;
  char v100;
  __int128 v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  _OWORD v106[7];
  uint64_t v107;
  __int128 v108[6];

  v68 = a1;
  v69 = a2;
  v74 = a5;
  v7 = type metadata accessor for ActionMenuView.ItemView(0, a3, a4, a4);
  v65 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v67 = (char *)&v60 - v11;
  v66 = type metadata accessor for ActionMenu.Item(0, a3, a4, v12);
  *(_QWORD *)&v70 = *(_QWORD *)(v66 - 8);
  v13 = __chkstk_darwin(v66);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v60 - v16;
  v19 = type metadata accessor for ActionMenu.Element(0, a3, a4, v18);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (__int128 *)((char *)&v60 - v21);
  v24 = type metadata accessor for ActionMenuView(255, a3, a4, v23);
  v71 = v7;
  v75 = v24;
  v25 = type metadata accessor for _ConditionalContent(0, v7, v24);
  v72 = *(_QWORD *)(v25 - 8);
  v73 = v25;
  __chkstk_darwin(v25);
  v76 = (char *)&v60 - v26;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v20 + 16))(v22, v68, v19);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 1)
  {
    v27 = v22[3];
    v108[2] = v22[2];
    v108[3] = v27;
    v108[4] = v22[4];
    v28 = v22[1];
    v108[0] = *v22;
    v108[1] = v28;
    v29 = *(_QWORD *)(v69 + 88);
    v30 = *(_QWORD *)(v69 + 96);
    sub_100031038((uint64_t)v108);
    sub_10003A434(v29, v30);
    sub_100036CF0(v108, 1, v29, v30, a3, a4, (uint64_t)v106);
    v93 = v106[4];
    v94 = v106[5];
    v95[0] = v106[6];
    *(_QWORD *)&v95[1] = v107;
    v89 = v106[0];
    v90 = v106[1];
    v91 = v106[2];
    v92 = v106[3];
    v31 = v75;
    WitnessTable = swift_getWitnessTable(&unk_100388010, v75);
    v32 = *(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(&v96, &v89, v31);
    sub_10003A5F8(v106);
    v66 = *((_QWORD *)&v97 + 1);
    v67 = (char *)*((_QWORD *)&v96 + 1);
    v65 = *((_QWORD *)&v98 + 1);
    v61 = v99;
    v63 = *((_QWORD *)&v101 + 1);
    v68 = v104;
    v69 = v103;
    v79 = v96;
    v80 = v97;
    v81 = v98;
    v82 = v99;
    v83 = v100;
    v84 = v101;
    v85 = v102;
    v86 = v103;
    v87 = v104;
    v70 = v105;
    v88 = v105;
    v32(&v89, &v79, v31);
    v33 = *((_QWORD *)&v89 + 1);
    v34 = *((_QWORD *)&v90 + 1);
    v35 = *((_QWORD *)&v91 + 1);
    v36 = (void *)v92;
    v37 = *((_QWORD *)&v93 + 1);
    v39 = *((_QWORD *)&v94 + 1);
    v38 = *(_QWORD *)&v95[0];
    v79 = v89;
    v80 = v90;
    v81 = v91;
    v82 = (void *)v92;
    v83 = BYTE8(v92);
    v84 = v93;
    v85 = v94;
    v86 = *((_QWORD *)&v94 + 1);
    v87 = *(_QWORD *)&v95[0];
    v62 = *(_OWORD *)((char *)v95 + 8);
    v88 = *(_OWORD *)((char *)v95 + 8);
    v40 = v71;
    v41 = swift_getWitnessTable(&unk_1003880C8, v71);
    sub_100035F74((uint64_t)&v79, v40, v31, v41, WitnessTable);
    sub_100030D34(v108);
    swift_release(v37);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v33);

    sub_10003A5C8(v39, v38);
    swift_release(v63);
    swift_bridgeObjectRelease(v65);
    swift_bridgeObjectRelease(v66);
    swift_bridgeObjectRelease(v67);
    swift_release(v62);

    sub_10003A5C8(v69, v68);
    swift_release(v70);
  }
  else
  {
    v42 = v70;
    v43 = v66;
    (*(void (**)(char *, __int128 *, uint64_t))(v70 + 32))(v17, v22, v66);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v15, v17, v43);
    v44 = *(_QWORD *)(v69 + 88);
    v45 = *(_QWORD *)(v69 + 96);
    sub_100038824((uint64_t)v15, v44, v45, a3, a4, (uint64_t)v10);
    v46 = v71;
    v69 = swift_getWitnessTable(&unk_1003880C8, v71);
    v47 = v65;
    v48 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    v49 = v67;
    v48(v67, v10, v46);
    sub_10003A434(v44, v45);
    v50 = *(void (**)(char *, uint64_t))(v47 + 8);
    v50(v10, v46);
    v48(v10, v49, v46);
    v51 = v75;
    v52 = swift_getWitnessTable(&unk_100388010, v75);
    sub_100035EB0((uint64_t)v10, v46, v51, v69, v52);
    v53 = v10;
    v40 = v46;
    v50(v53, v46);
    v50(v49, v46);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v43);
  }
  v54 = swift_getWitnessTable(&unk_1003880C8, v40);
  v55 = swift_getWitnessTable(&unk_100388010, v75);
  v77 = v54;
  v78 = v55;
  v56 = v73;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v73);
  v57 = v72;
  v58 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v74, v76, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v56);
}

uint64_t sub_100038824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;

  v12 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for ActionMenuView.ItemView(0, a4, a5, v13);
  v15 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t sub_1000388A8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

uint64_t sub_100038A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t WitnessTable;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  _QWORD v24[5];
  _QWORD v25[5];

  type metadata accessor for ActionMenu.Element(255, a2, a3, a4);
  v9 = type metadata accessor for Array(255);
  v11 = type metadata accessor for ActionMenuView.ItemView(255, a2, a3, v10);
  v13 = type metadata accessor for ActionMenuView(255, a2, a3, v12);
  v14 = type metadata accessor for _ConditionalContent(255, v11, v13);
  v25[0] = v9;
  v25[1] = &type metadata for String;
  v25[2] = v14;
  v25[3] = swift_getWitnessTable(&protocol conformance descriptor for [A], v9);
  v25[4] = &protocol witness table for String;
  v15 = type metadata accessor for ForEach(255, v25);
  v16 = type metadata accessor for ModifiedContent(0, v15, &type metadata for _AppearanceActionModifier);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v24 - v18;
  WitnessTable = swift_getWitnessTable(&unk_1003880C8, v11);
  v21 = swift_getWitnessTable(&unk_100388010, v13);
  v24[3] = WitnessTable;
  v24[4] = v21;
  v24[2] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v14);
  v24[0] = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v15);
  v24[1] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v22(v19, a1, v16);
  v22(a5, (uint64_t)v19, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_100038C24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];

  v8 = sub_100005574(&qword_10048E4B8);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(qword_10048E4D8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[6])
  {
    v16 = __chkstk_darwin(v13);
    v27[1] = a4;
    v27[-4] = a2;
    v27[-3] = a3;
    v27[-2] = a1;
    __chkstk_darwin(v16);
    v27[-2] = v17;
    v18 = v17;
    Label.init(title:icon:)(sub_10003A590, &v27[-6], sub_10003A59C, &v27[-4], &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
    swift_storeEnumTagMultiPayload(v15, v12, 0);
    v19 = sub_10002FFB8(&qword_10048E4B0, &qword_10048E4B8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v19, &protocol witness table for Text);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v21 = a1[5];
    v28[0] = a1[4];
    v28[1] = v21;
    v22 = sub_10000D478();
    swift_bridgeObjectRetain();
    *(_QWORD *)v15 = Text.init<A>(_:)(v28, &type metadata for String, v22);
    *((_QWORD *)v15 + 1) = v23;
    v15[16] = v24 & 1;
    *((_QWORD *)v15 + 3) = v25;
    swift_storeEnumTagMultiPayload(v15, v12, 1);
    v26 = sub_10002FFB8(&qword_10048E4B0, &qword_10048E4B8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    return _ConditionalContent<>.init(storage:)(v15, v8, &type metadata for Text, v26, &protocol witness table for Text);
  }
}

uint64_t sub_100038E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v3 = *(_QWORD *)(a1 + 40);
  v9[0] = *(_QWORD *)(a1 + 32);
  v9[1] = v3;
  v4 = sub_10000D478();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_100038EFC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;

  v38 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(a1);
  v6 = sub_100005574(&qword_10048E560);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100005574(&qword_10048E568);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v10 = __chkstk_darwin(v9);
  v35 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v34 = (char *)&v32 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v16 = *(int *)(type metadata accessor for ActionMenu.Item(0, v13, v14, v15) + 36);
  v33 = v2;
  (*(void (**)(_QWORD *__return_ptr))(v2 + v16))(v39);
  v17 = v40;
  v18 = v41;
  sub_10000ABC8(v39, v40);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18) & 1) != 0)
  {
    static ButtonRole.destructive.getter(v8);
    v20 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
  }
  else
  {
    v19 = type metadata accessor for ButtonRole(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v33, a1);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(&unk_100442278, v22 + v5, v21 | 7);
  *(_QWORD *)(v23 + 16) = v13;
  *(_QWORD *)(v23 + 24) = v14;
  v24 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __chkstk_darwin(v24);
  *(&v32 - 2) = (uint64_t)v39;
  v25 = sub_100005574(&qword_10048E570);
  v26 = sub_10002FFB8(&qword_10048E578, &qword_10048E570, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v27 = v35;
  Button.init(role:action:label:)(v8, sub_10003B3F4, v23, sub_10003B444, &v32 - 4, v25, v26);
  v28 = v37;
  v29 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v30 = v34;
  v29(v34, v27, v37);
  v29(v38, v30, v28);
  return sub_10000682C(v39);
}

uint64_t ActionMenuItemStyle.buttonRole.getter@<X0>(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v5;
  uint64_t v6;

  if ((a1 & 1) != 0)
  {
    static ButtonRole.destructive.getter(a2);
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 0;
  }
  else
  {
    v3 = type metadata accessor for ButtonRole(0);
    v4 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
    v5 = a2;
    v6 = 1;
  }
  return v4(v5, v6, 1, v3);
}

uint64_t sub_100039220(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 112);
}

uint64_t sub_100039264(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, v5, v6, a4);
  v18 = v5;
  v19 = v5;
  v20 = v6;
  v21 = v6;
  v9 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v18);
  v10 = type metadata accessor for Optional(255, v9);
  v11 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v10);
  v12 = type metadata accessor for ModifiedContent(255, v8, v11);
  v13 = type metadata accessor for Section(255, &type metadata for Text, v12, &type metadata for EmptyView);
  swift_getWitnessTable(&unk_100388010, v8);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v13);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 0);
  v16 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v18 = v4;
  v19 = v13;
  v20 = v7;
  v21 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v18, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v16);
}

uint64_t sub_1000393E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = type metadata accessor for ActionMenuView(255, v5, v8, a4);
  v23 = v5;
  v24 = v5;
  v25 = v8;
  v26 = v8;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v23);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  v15 = type metadata accessor for Section(255, &type metadata for Text, v14, &type metadata for EmptyView);
  WitnessTable = swift_getWitnessTable(&unk_100388010, v10);
  v17 = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v32 = WitnessTable;
  v33 = v17;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v29 = &protocol witness table for Text;
  v30 = v18;
  v31 = &protocol witness table for EmptyView;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v15);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 0);
  v21 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4);
  v23 = v4;
  v24 = v15;
  v25 = v7;
  v26 = v6;
  v27 = v19;
  v28 = v9;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:previewAction:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
}

uint64_t sub_100039580(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t WitnessTable;
  void *v23;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = type metadata accessor for ActionMenuView(255, *a1, v6, a4);
  v9 = type metadata accessor for Section(255, &type metadata for Text, v8, &type metadata for EmptyView);
  v21 = &protocol witness table for Text;
  WitnessTable = swift_getWitnessTable(&unk_100388010, v8);
  v23 = &protocol witness table for EmptyView;
  v17 = v5;
  v18 = v9;
  v19 = v7;
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v9);
  v10 = type metadata accessor for Menu(255, &v17);
  v17 = v4;
  v18 = v4;
  v19 = v6;
  v20 = v6;
  v11 = type metadata accessor for ActionMenuView.Excluding(255, (uint64_t)&v17);
  v12 = type metadata accessor for Optional(255, v11);
  v13 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v12);
  v14 = type metadata accessor for ModifiedContent(255, v10, v13);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v13);
  v15 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  v17 = v14;
  v18 = v15;
  return swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
}

uint64_t sub_1000396D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_1000396E0(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_release(*(_QWORD *)(a1 + 72));
  if (*(_QWORD *)(a1 + 88))
    swift_release(*(_QWORD *)(a1 + 96));
  return swift_release(*(_QWORD *)(a1 + 104));
}

uint64_t sub_100039738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = (_OWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v11 = v7;
  swift_retain(v8);
  if (v10)
  {
    v12 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v9;
  }
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v13);
  return a1;
}

uint64_t sub_100039800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  if (!v15)
  {
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v16;
      *(_QWORD *)(a1 + 96) = v19;
      swift_retain(v19);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v16)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v17 = *(_QWORD *)(a2 + 96);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  swift_retain(v17);
  swift_release(v18);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v21;
  swift_retain(v21);
  swift_release(v20);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for ApplicationCapabilities(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_10003996C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a1 + 88);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  if (!v11)
  {
    if (v10)
    {
      v14 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v10)
  {
    swift_release(*(_QWORD *)(a1 + 96));
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  swift_release(v13);
LABEL_8:
  v15 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v15);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t sub_100039A5C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100039AA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void *sub_100039B00()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100039B0C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003D98B4, 1);
}

double sub_100039B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = type metadata accessor for ActionMenuView.ItemView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)&v23 - v10;
  v12 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v16 = type metadata accessor for MainActor(0);
  v17 = static MainActor.shared.getter(v16);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 48) & ~v18;
  v20 = (char *)swift_allocObject(&unk_1004422A0, v19 + v9, v18 | 7);
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], v11, v7);
  v21 = sub_1001AD214((uint64_t)v14, (uint64_t)&unk_10048E5B8, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100039CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_100039D14, v8, v9);
}

uint64_t sub_100039D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_100039D80;
  return v9();
}

uint64_t sub_100039D80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100039E48;
  else
    v4 = sub_100039DE0;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_100039DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  v5 = *(void (**)(void))(v3 + *(int *)(type metadata accessor for ActionMenuView.ItemView(0, v2, v1, v4) + 36));
  if (v5)
    v5();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100039E48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100039E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[4];
  _BYTE v7[16];
  uint64_t v8;

  v8 = a1;
  v6[2] = a1;
  v1 = sub_100005574(&qword_10048E580);
  v2 = sub_100005574(&qword_10048E588);
  v3 = sub_10002FFB8(&qword_10048E590, &qword_10048E580, (uint64_t)&protocol conformance descriptor for LabelGroup<A>);
  v4 = sub_10003B45C();
  return Label.init(title:icon:)(sub_10003B44C, v7, sub_10003B454, v6, v1, v2, v3, v4);
}

uint64_t sub_100039F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[4];

  v4[2] = a1;
  v1 = sub_100005574(&qword_10048E5A0);
  v2 = sub_10002FFB8(&qword_10048E5A8, &qword_10048E5A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return LabelGroup.init(content:)(sub_10003B4B8, v4, v1, v2);
}

uint64_t sub_100039F9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v29;
  unint64_t v30;

  v4 = a1[3];
  v5 = a1[4];
  sub_10000ABC8(a1, v4);
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v30 = v6;
  v7 = sub_10000D478();
  v8 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = a1[3];
  v15 = a1[4];
  sub_10000ABC8(a1, v16);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  if (v18)
    v19 = v17;
  else
    v19 = 0;
  v20 = 0xE000000000000000;
  if (v18)
    v20 = v18;
  v29 = v19;
  v30 = v20;
  v21 = Text.init<A>(_:)(&v29, &type metadata for String, v7);
  v23 = v22;
  v25 = v24;
  LOBYTE(v29) = v14;
  v27 = v26 & 1;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v22;
  *(_BYTE *)(a2 + 48) = v26 & 1;
  *(_QWORD *)(a2 + 56) = v24;
  sub_10003B4C0(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v21, v23, v27);
  swift_bridgeObjectRetain();
  sub_10003B4D0(v21, v23, v27);
  swift_bridgeObjectRelease(v25);
  sub_10003B4D0(v8, v10, v29);
  return swift_bridgeObjectRelease(v12);
}

void sub_10003A10C(_QWORD *a1@<X0>, uint64_t (**a2)(__n128)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__n128);
  uint64_t v8;
  __n128 v9;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000ABC8(a1, v3);
  v7 = (uint64_t (*)(__n128))(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v7)
  {
    v8 = v5;
    v9 = swift_release(v6);
    v7 = (uint64_t (*)(__n128))v7(v9);
    swift_release(v8);
  }
  *a2 = v7;
}

uint64_t sub_10003A180()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10003A19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100037674(a1, a2);
}

uint64_t type metadata accessor for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenuView.ItemView);
}

unint64_t sub_10003A1F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E4A8;
  if (!qword_10048E4A8)
  {
    v1 = sub_100005600(&qword_10048E4A0);
    sub_10002FFB8(&qword_10048E4B0, &qword_10048E4B8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10048E4A8);
  }
  return result;
}

uint64_t sub_10003A27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t result;
  _QWORD v8[4];

  v3 = *(_QWORD *)(v1 + 104);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = *(_QWORD *)(a1 + 24);
  v8[0] = *(_QWORD *)(a1 + 16);
  v8[1] = v8[0];
  v8[2] = v4;
  v8[3] = v4;
  v5 = type metadata accessor for ActionMenuView.Excluding(0, (uint64_t)v8);
  WitnessTable = swift_getWitnessTable(&unk_100387FD8, v5);
  if (v3)
    return v3;
  result = EnvironmentObject.error()(0, v2, v5, WitnessTable);
  __break(1u);
  return result;
}

uint64_t sub_10003A2F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = type metadata accessor for ActionMenu.Element(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = ActionMenu.Element.id.getter(v5, v6, v7, v8);
  *a4 = result;
  a4[1] = v10;
  return result;
}

uint64_t sub_10003A32C()
{
  return 16;
}

__n128 sub_10003A338(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10003A344()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_release(*(_QWORD *)(v0 + 104));
  if (*(_QWORD *)(v0 + 120))
    swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10003A3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100038274(a1, v2 + 32, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_10003A3AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(id *)(a1 + 48);
  swift_retain(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003A434(v3, v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_10003A434(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_10003A444@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_100038A5C(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_10003A450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100038C24(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10003A45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048E4C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003A4A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E4C8;
  if (!qword_10048E4C8)
  {
    v1 = sub_100005600(&qword_10048E4C0);
    sub_10003A508();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10048E4C8);
  }
  return result;
}

unint64_t sub_10003A508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E4D0;
  if (!qword_10048E4D0)
  {
    v1 = type metadata accessor for Divider(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Divider, v1);
    atomic_store(result, (unint64_t *)&qword_10048E4D0);
  }
  return result;
}

uint64_t sub_10003A550(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10048E4C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003A590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100038E94(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_10003A59C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Image.init(uiImage:)(*(id *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_10003A5C8(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

double sub_10003A5D8@<D0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_100037478(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

_QWORD *sub_10003A5E8@<X0>(__int128 *a1@<X8>)
{
  uint64_t v1;

  return sub_100036A88(*(__int128 **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

_QWORD *sub_10003A5F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10003A5C8(v6, v7);
  swift_release(v8);
  return a1;
}

_QWORD *sub_10003A67C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = (void *)a1[6];
  v6 = a1[11];
  v7 = a1[12];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[16];
  swift_release(a1[9]);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  sub_10003A5C8(v6, v7);
  swift_release(v9);
  swift_release(v8);
  swift_release(v10);
  return a1;
}

uint64_t sub_10003A71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v6;
  _QWORD v7[2];

  result = type metadata accessor for ActionMenu.Item(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v6 <= 0x3F)
  {
    v7[0] = *(_QWORD *)(result - 8) + 64;
    v7[1] = &unk_1003880A0;
    swift_initStructMetadata(a1, 0, 2, v7, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_10003A790(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    v11 = v7 + 16;
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (char *)a2 + 7;
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v12 = *v14;
    v12[1] = v15;
    v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = ((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = (unint64_t *)((unint64_t)&v13[v11] & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    swift_retain(v15);
    swift_retain(v18);
    swift_retain(v21);
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      return v4;
    }
    v10 = v23[1];
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v10;
  }
  swift_retain(v10);
  return v4;
}

uint64_t sub_10003A8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  _QWORD *v8;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + 7;
  v5 = (v4 + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v6 + 8));
  result = swift_release(*(_QWORD *)(((v6 + 23) & 0xFFFFFFFFFFFFF8) + 8));
  v8 = (_QWORD *)((a1 + (((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL)
    return swift_release(v8[1]);
  return result;
}

uint64_t sub_10003A98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v17 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v18;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  if (v19 < 0xFFFFFFFF)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v20 = v18[1];
    *(_QWORD *)v17 = v19;
    *(_QWORD *)(v17 + 8) = v20;
    swift_retain(v20);
  }
  return a1;
}

uint64_t sub_10003AA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v20 = (_QWORD *)((a1 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)((a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      swift_retain(v25);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release(v20[1]);
    goto LABEL_7;
  }
  v23 = v21[1];
  v24 = v20[1];
  *v20 = v22;
  v20[1] = v23;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

uint64_t sub_10003ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v12 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (uint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if ((unint64_t)*v13 < 0xFFFFFFFF)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v15 = v13[1];
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
  }
  return a1;
}

uint64_t sub_10003ACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)(v7 + 8);
  *(_OWORD *)v7 = *v8;
  swift_release(v9);
  v10 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = *(_QWORD *)(v10 + 8);
  *(_OWORD *)v10 = *v11;
  swift_release(v12);
  v13 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  v15 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = (_QWORD *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t *)((a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  if (*v16 < 0xFFFFFFFFuLL)
  {
    if (v18 >= 0xFFFFFFFF)
    {
      v21 = v17[1];
      *v16 = v18;
      v16[1] = v21;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  if (v18 < 0xFFFFFFFF)
  {
    swift_release(v16[1]);
    goto LABEL_7;
  }
  v19 = v17[1];
  v20 = v16[1];
  *v16 = v18;
  v16[1] = v19;
  swift_release(v20);
  return a1;
}

uint64_t sub_10003ADE8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10003AE7C + 4 * byte_100387F38[v10]))();
  }
}

void sub_10003AF00(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10003B00C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10003B084);
}

void sub_10003B014(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10003B01CLL);
  JUMPOUT(0x10003B084);
}

void sub_10003B05C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10003B084);
}

void sub_10003B064()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10003B084);
}

uint64_t sub_10003B06C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10003B084);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10003B080);
    JUMPOUT(0x10003B078);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_10003B09C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t WitnessTable;
  void *v28;

  v4 = *a1;
  v5 = a1[1];
  type metadata accessor for ActionMenu.Element(255, *a1, v5, a4);
  v6 = type metadata accessor for Array(255);
  v8 = type metadata accessor for ActionMenuView.ItemView(255, v4, v5, v7);
  v10 = type metadata accessor for ActionMenuView(255, v4, v5, v9);
  v11 = type metadata accessor for _ConditionalContent(255, v8, v10);
  v24 = v6;
  v25 = &type metadata for String;
  v26 = v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  v28 = &protocol witness table for String;
  v12 = type metadata accessor for ForEach(255, &v24);
  v13 = type metadata accessor for ModifiedContent(255, v12, &type metadata for _AppearanceActionModifier);
  v14 = sub_100005600(&qword_10048E4C0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v13, v14, 0, 0);
  v16 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = sub_100005600(&qword_10048E4A0);
  v18 = sub_10003A1F8();
  swift_getWitnessTable(&unk_1003880C8, v8);
  swift_getWitnessTable(&unk_100388010, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v24 = v17;
  v25 = (_QWORD *)v13;
  v26 = v18;
  WitnessTable = v19;
  v20 = type metadata accessor for Menu(255, &v24);
  v21 = type metadata accessor for _ConditionalContent(255, v16, v20);
  v22 = type metadata accessor for _ConditionalContent(255, &type metadata for EmptyView, v21);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v16);
  swift_getWitnessTable(&protocol conformance descriptor for Menu<A, B>, v20);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v21);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v22);
}

uint64_t sub_10003B2E4(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003D98E8, 1);
}

uint64_t sub_10003B318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v10, v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)(v4 + v10 + v13[9] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[10] + 8));
  swift_release(*(_QWORD *)(v4 + v10 + v13[11] + 8));
  v14 = (_QWORD *)(v4 + v10 + *(int *)(v7 + 36));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

double sub_10003B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4) - 8) + 80);
  return sub_100039B40(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_10003B444()
{
  uint64_t v0;

  return sub_100039E7C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10003B44C()
{
  uint64_t v0;

  return sub_100039F24(*(_QWORD *)(v0 + 16));
}

void sub_10003B454(uint64_t (**a1)(__n128)@<X8>)
{
  uint64_t v1;

  sub_10003A10C(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_10003B45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048E598;
  if (!qword_10048E598)
  {
    v1 = sub_100005600(&qword_10048E588);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10048E598);
  }
  return result;
}

uint64_t sub_10003B4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100039F9C(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_10003B4C0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t sub_10003B4D0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release(a1);
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_10003B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  char *v14;

  v5 = *((_QWORD *)v4 + 4);
  v6 = *((_QWORD *)v4 + 5);
  v7 = type metadata accessor for ActionMenuView.ItemView(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 48) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(&v4[v10], v5);
  v13 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v6, v12);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[9]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[10]]);
  swift_release(*(_QWORD *)&v4[v10 + 8 + v13[11]]);
  v14 = &v4[v10 + *(int *)(v7 + 36)];
  if (*(_QWORD *)v14)
    swift_release(*((_QWORD *)v14 + 1));
  return swift_deallocObject(v4, v10 + v11, v9 | 7);
}

uint64_t sub_10003B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenuView.ItemView(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_10048E5B4);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10000EA88;
  return sub_100039CA4(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_10003B664()
{
  return sub_10002FFB8(&qword_10048E5C0, &qword_10048E568, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t sub_10003B69C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  Swift::Int v22;
  char *v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _BYTE v43[32];
  uint64_t v44;

  v32 = a5;
  v33 = a8;
  v38 = a1;
  v39 = a2;
  v31 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v40 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v12 + 8));
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = __chkstk_darwin(AssociatedTypeWitness);
  v36 = (char *)&v29 - v16;
  v41 = a4;
  __chkstk_darwin(v15);
  v35 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness(0, a6);
  v34 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v21)
    return static Array._allocateUninitialized(_:)(0, v41);
  v22 = v21;
  v30 = v18;
  v23 = v41;
  v44 = ContiguousArray.init()(v41);
  v37 = type metadata accessor for ContiguousArray(0, v23);
  ContiguousArray.reserveCapacity(_:)(v22);
  v41 = v20;
  result = dispatch thunk of Collection.startIndex.getter(a3);
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    v26 = v35;
    v25 = v36;
    while (1)
    {
      v27 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v43, v41, a3, a6);
      (*(void (**)(char *))(v14 + 16))(v25);
      v27(v43, 0);
      v28 = v42;
      v38(v25, v40);
      if (v28)
        break;
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v26, v37);
      dispatch thunk of Collection.formIndex(after:)(v41, a3, a6);
      if (!--v22)
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
        return v44;
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v30);
    swift_release(v44);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v40, v32);
  }
  return result;
}

UIMenu_optional __swiftcall ActionMenu.uiMenu(excluding:)(Swift::OpaquePointer excluding)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t);
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t WitnessTable;
  uint64_t v16;
  uint64_t v17;
  UIMenuElementSize preferredElementSize;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _BOOL8 v30;
  id v31;
  Swift::String v32;
  UIMenu v33;
  Swift::Bool v34;
  uint64_t v35;
  uint64_t v36;
  objc_class *isa;
  Swift::OpaquePointer v38;
  _BYTE v39[16];
  uint64_t v40;
  uint64_t v41;
  void *rawValue;
  UIMenuElementSize v43;
  UIMenu_optional result;
  UIImage_optional v45;

  v3 = v2;
  v4 = v1;
  v6 = ActionMenu.elements(excluding:)((uint64_t)excluding._rawValue, v1);
  v8 = v7;
  v10 = v9;
  v43 = v6;
  v11 = *(_QWORD *)(v4 + 24);
  v40 = *(_QWORD *)(v4 + 16);
  v41 = v11;
  rawValue = excluding._rawValue;
  type metadata accessor for ActionMenu.Element(255, v40, v11, v12);
  v13 = type metadata accessor for Array(0);
  v14 = (char *)sub_100005574(&qword_10048E5C8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v13);
  v17 = sub_10003B69C((void (*)(char *, char *))sub_10003BBD8, (uint64_t)v39, v13, v14, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v16);
  swift_bridgeObjectRelease();
  preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v43 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v19 = *(_QWORD *)(v17 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v19; ++i)
    {
      v22 = *(void **)(v17 + 8 * i + 32);
      if (v22)
      {
        v23 = v22;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v25 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v24 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v25 >= v24 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
        v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized Array._endMutation()(v21);
      }
    }
    swift_bridgeObjectRelease();
    preferredElementSize = v43;
  }
  v26 = swift_bridgeObjectRelease();
  v8(v26);
  if ((unint64_t)preferredElementSize >> 62)
  {
    if (preferredElementSize < UIMenuElementSizeSmall)
      v35 = preferredElementSize;
    else
      v35 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v36 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease();
    if (v36)
      goto LABEL_11;
LABEL_16:
    swift_release(v10);
    swift_bridgeObjectRelease();
    v33.super.super.isa = 0;
    goto LABEL_17;
  }
  if (!*(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_11:
  sub_1000087DC(0, &qword_10048E5D0, UIMenu_ptr);
  v27 = *(_QWORD *)(v3 + 32);
  v28 = *(void **)(v3 + 40);
  v29 = *(void **)(v3 + 48);
  v30 = (*(_BYTE *)(v3 + 56) & 1) == 0;
  v31 = v29;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = v27;
  v32._object = v28;
  v45.value.super.isa = (Class)v29;
  v45.is_nil = 0;
  v33.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)v30, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v38).super.super.isa;
  swift_release(v10);
LABEL_17:
  isa = v33.super.super.isa;
  result.value.super.super.isa = isa;
  result.is_nil = v34;
  return result;
}

id sub_10003BBD8@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  Swift::OpaquePointer v8;
  uint64_t v9;
  uint64_t v10;
  id result;

  v4 = v2[2];
  v5 = v2[3];
  v6 = (void *)v2[4];
  v7 = type metadata accessor for ActionMenu.Element(0, v4, v5, a1);
  v8._rawValue = v6;
  result = sub_10003BC2C(v8, v7, v9, v10);
  *a2 = result;
  return result;
}

id sub_10003BC2C(Swift::OpaquePointer a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  Swift::String *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  id v22;
  id v23;
  Swift::String v24;
  void *v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(Swift::String *__return_ptr, __n128);
  __n128 v36;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(__n128);
  uint64_t v49;
  uint64_t (*v50)(__n128);
  uint64_t v51;
  __n128 v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  void *v69;
  Swift::String v70;
  void *v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  NSString v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, Swift::String *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String v93;

  v5 = v4;
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = type metadata accessor for ActionMenu.Item(0, v9, v8, a4);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin();
  v86 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v77 - v13;
  __chkstk_darwin();
  v16 = (Swift::String *)((char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(Swift::String *, uint64_t, uint64_t))(v17 + 16))(v16, v5, a2);
  if (swift_getEnumCaseMultiPayload(v16, a2) == 1)
  {
    v19 = v16[3];
    v91 = v16[2];
    v92 = v19;
    v93 = v16[4];
    v20 = v16[1];
    v89 = *v16;
    v90 = v20;
    type metadata accessor for ActionMenu(0, v9, v8, v18);
    v21 = (void *)ActionMenu.uiMenu(excluding:)(a1);
    v22 = v21;
    if (v21)
    {
      v87 = 0;
      v88 = 0xE000000000000000;
      v23 = v21;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      v87 = 0xD000000000000012;
      v88 = 0x80000001003AD9A0;
      v24 = v89;
      swift_bridgeObjectRetain();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v26 = v87;
      v25 = (void *)v88;
      if (qword_10048C980 != -1)
        swift_once(&qword_10048C980, sub_1001DBC90);
      v87 = qword_1004965F8;
      v88 = unk_100496600;
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = 46;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRetain();
      v28._countAndFlagsBits = v26;
      v28._object = v25;
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, "setAccessibilityIdentifier:", v29);
      sub_100030D34(&v89);

    }
    else
    {
      sub_100030D34(&v89);
    }
  }
  else
  {
    v84 = v8;
    v85 = v11;
    v83 = *(void (**)(char *, Swift::String *, uint64_t))(v11 + 32);
    v83(v14, v16, v10);
    v30 = v10;
    v31 = *(int *)(v10 + 36);
    v32 = v14;
    v33 = &v14[v31];
    v35 = *(void (**)(Swift::String *__return_ptr, __n128))v33;
    v34 = *((_QWORD *)v33 + 1);
    v36 = swift_retain(v34);
    v35(&v89, v36);
    swift_release(v34);
    object = v90._object;
    countAndFlagsBits = v91._countAndFlagsBits;
    sub_10000ABC8(&v89, (uint64_t)v90._object);
    v39 = (*(uint64_t (**)(void *, uint64_t))(countAndFlagsBits + 8))(object, countAndFlagsBits);
    v81 = v40;
    v82 = v39;
    v41 = v90._object;
    v42 = v91._countAndFlagsBits;
    sub_10000ABC8(&v89, (uint64_t)v90._object);
    v43 = (*(uint64_t (**)(void *, uint64_t))(v42 + 16))(v41, v42);
    v79 = v44;
    v80 = v43;
    v45 = v90._object;
    v46 = v91._countAndFlagsBits;
    sub_10000ABC8(&v89, (uint64_t)v90._object);
    if ((*(uint64_t (**)(void *, uint64_t))(v46 + 24))(v45, v46))
    {
      v50 = v48;
      v51 = v49;
      v52 = swift_release(v47);
      v78 = v50(v52);
      swift_release(v51);
    }
    else
    {
      v78 = 0;
    }
    v53 = v90._object;
    v54 = v91._countAndFlagsBits;
    sub_10000ABC8(&v89, (uint64_t)v90._object);
    v55 = 2 * ((*(uint64_t (**)(void *, uint64_t))(v54 + 32))(v53, v54) & 1);
    sub_1000087DC(0, &qword_100492190, UIAction_ptr);
    v57 = v90._object;
    v56 = v91._countAndFlagsBits;
    sub_10000ABC8(&v89, (uint64_t)v90._object);
    v58 = (*(uint64_t (**)(void *, uint64_t))(v56 + 40))(v57, v56);
    v60 = v85;
    v59 = v86;
    v61 = v32;
    v62 = v32;
    v63 = v30;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v62, v30);
    v64 = *(unsigned __int8 *)(v60 + 80);
    v65 = (v64 + 32) & ~v64;
    v66 = swift_allocObject(&unk_100442330, v65 + v12, v64 | 7);
    v67 = (void (*)(uint64_t, char *, uint64_t))v83;
    v68 = v84;
    *(_QWORD *)(v66 + 16) = v9;
    *(_QWORD *)(v66 + 24) = v68;
    v67(v66 + v65, v59, v63);
    v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v82, v81, v80, v79, v78, 0, 0, 0, 0, v55, v58, sub_10003C530, v66);
    v87 = 0;
    v88 = 0xE000000000000000;
    v22 = v69;
    _StringGuts.grow(_:)(20);
    v70._object = (void *)0x80000001003AD9A0;
    v70._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v70);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v61, v9, *(_QWORD *)(v68 + 8));
    v72 = v87;
    v71 = (void *)v88;
    if (qword_10048C980 != -1)
      swift_once(&qword_10048C980, sub_1001DBC90);
    v87 = qword_1004965F8;
    v88 = unk_100496600;
    swift_bridgeObjectRetain();
    v73._countAndFlagsBits = 46;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    swift_bridgeObjectRetain();
    v74._countAndFlagsBits = v72;
    v74._object = v71;
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, "setAccessibilityIdentifier:", v75);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v61, v63);
    sub_10000682C(&v89);
  }
  return v22;
}

double sub_10003C1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double result;
  uint64_t v22;

  v7 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v22 - v10;
  sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a2, v7);
  v15 = type metadata accessor for MainActor(0);
  v16 = static MainActor.shared.getter(v15);
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = (char *)swift_allocObject(&unk_100442358, v18 + v9, v17 | 7);
  *((_QWORD *)v19 + 2) = v16;
  *((_QWORD *)v19 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v19 + 4) = a3;
  *((_QWORD *)v19 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v11, v7);
  v20 = sub_1001AD214((uint64_t)v13, (uint64_t)&unk_10048E5E0, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_10003C314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_10003C384, v8, v9);
}

uint64_t sub_10003C384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int **v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v5 = v4[2];
  v6 = (int **)(v5 + *(int *)(type metadata accessor for ActionMenu.Item(0, v4[3], v4[4], a4) + 44));
  v9 = (uint64_t (*)(void))((char *)*v6 + **v6);
  v7 = (_QWORD *)swift_task_alloc((*v6)[1]);
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_10003C3F0;
  return v9();
}

uint64_t sub_10003C3F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100039E48;
  else
    v4 = sub_10003C450;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_10003C450()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003C484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  v12 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v9, v5);
  swift_release(*(_QWORD *)(v12 + v6[9] + 8));
  swift_release(*(_QWORD *)(v12 + v6[10] + 8));
  swift_release(*(_QWORD *)(v12 + v6[11] + 8));
  return swift_deallocObject(v4, v10, v11);
}

double sub_10003C530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v6, v7, a4) - 8) + 80);
  return sub_10003C1A8(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_10003C588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;

  v5 = v4[4];
  v6 = (int *)type metadata accessor for ActionMenu.Item(0, v5, v4[5], a4);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 48) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v8 | 7;
  swift_unknownObjectRelease(v4[2]);
  v12 = (char *)v4 + v9;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12, v5);
  swift_release(*(_QWORD *)&v12[v6[9] + 8]);
  swift_release(*(_QWORD *)&v12[v6[10] + 8]);
  swift_release(*(_QWORD *)&v12[v6[11] + 8]);
  return swift_deallocObject(v4, v10, v11);
}

uint64_t sub_10003C63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActionMenu.Item(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc(dword_10048E5DC);
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_10000EA88;
  return sub_10003C314(a1, v10, v11, v12, v7, v8);
}

uint64_t (*ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject(&unk_100442380, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject(&unk_1004423A8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return sub_10003D730;
}

uint64_t (*ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_1004423D0, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain(a2);
  return sub_10003D8F8;
}

uint64_t static ActionMenu.Item.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for ActionMenu.Item(0, a3, a4, a4);
  v7 = (*(_QWORD *(**)(_QWORD *__return_ptr))(a1 + *(int *)(v6 + 36)))(v41);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(a2 + *(int *)(v6 + 36)))(v38, v7);
  v8 = v42;
  v9 = v43;
  sub_10000ABC8(v41, v42);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v12 = v11;
  v13 = v39;
  v14 = v40;
  sub_10000ABC8(v38, v39);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v10 == v15 && v12 == v16)
  {
    swift_bridgeObjectRelease_n(v12, 2);
    sub_1000244B0((uint64_t)v41, (uint64_t)v35);
    sub_1000244B0((uint64_t)v38, (uint64_t)v32);
  }
  else
  {
    v18 = v16;
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v15, v16, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v18);
    sub_1000244B0((uint64_t)v41, (uint64_t)v35);
    sub_1000244B0((uint64_t)v38, (uint64_t)v32);
    v20 = 0;
    if ((v19 & 1) == 0)
      goto LABEL_18;
  }
  v21 = v36;
  v22 = v37;
  sub_10000ABC8(v35, v36);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  v25 = v24;
  v26 = v33;
  v27 = v34;
  sub_10000ABC8(v32, v33);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  v30 = v29;
  if (v25)
  {
    if (v29)
    {
      if (v23 == v28 && v25 == v29)
      {
        swift_bridgeObjectRelease(v25);
        v20 = 1;
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v25, v28, v29, 0);
        swift_bridgeObjectRelease(v25);
      }
    }
    else
    {
      v20 = 0;
      v30 = v25;
    }
  }
  else
  {
    if (!v29)
    {
      v20 = 1;
      goto LABEL_18;
    }
    v20 = 0;
  }
  swift_bridgeObjectRelease(v30);
LABEL_18:
  sub_10000682C(v35);
  sub_10000682C(v32);
  sub_10000682C(v38);
  sub_10000682C(v41);
  return v20 & 1;
}

uint64_t static ActionMenu.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

int *sub_10003CA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *result;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  result = (int *)type metadata accessor for ActionMenu.Item(0, a8, a10, v18);
  v20 = (_QWORD *)(a9 + result[9]);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(a9 + result[10]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)(a9 + result[11]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t ActionMenu.elements(excluding:)(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(void);
  uint64_t (**v3)(void);
  Swift::String v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[5];
  uint64_t v29;
  unint64_t v30;

  v3 = v2;
  v29 = 0;
  v30 = 0xE000000000000000;
  v6._countAndFlagsBits = 8254;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  v7 = *((_OWORD *)v2 + 3);
  v28[2] = *((_OWORD *)v2 + 2);
  v28[3] = v7;
  v28[4] = *((_OWORD *)v2 + 4);
  v8 = *((_OWORD *)v2 + 1);
  v28[0] = *(_OWORD *)v2;
  v28[1] = v8;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v28, a2);
  v9 = v29;
  v10 = v30;
  v11 = sub_10003DE28(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v13 = *((_QWORD *)v11 + 2);
  v12 = *((_QWORD *)v11 + 3);
  if (v13 >= v12 >> 1)
    v11 = sub_10003DE28((char *)(v12 > 1), v13 + 1, 1, v11);
  v14 = swift_allocObject(&unk_1004423F8, 24, 7);
  *((_QWORD *)v11 + 2) = v13 + 1;
  v15 = &v11[16 * v13];
  *((_QWORD *)v15 + 4) = v9;
  *((_QWORD *)v15 + 5) = v10;
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)&v28[0] = v3[8]();
  __chkstk_darwin(*(_QWORD *)&v28[0]);
  v16 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = v16;
  v26 = a1;
  v27 = v14 + 16;
  type metadata accessor for ActionMenu.Element(255, v24, v16, v17);
  v18 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  v20 = _ArrayProtocol.filter(_:)(sub_10003DF4C, &v23, v18, WitnessTable);
  *(_QWORD *)&v28[0] = v20;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v18);
  result = Collection.isEmpty.getter(v18, v21);
  if ((result & 1) == 0)
    return v20;
  if (*(_QWORD *)(*(_QWORD *)(v14 + 16) + 16))
  {
    sub_10003F29C(1uLL, 1, 0xD00000000000001CLL, 0x80000001003AD9C0);
    return v20;
  }
  __break(1u);
  return result;
}

BOOL static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LaunchURL.Resolver.PerformOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(a2 & 1);
}

Swift::Int LaunchURL.Resolver.PerformOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

BOOL sub_10003CD4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10003CD58()
{
  char *v0;

  return LaunchURL.Resolver.PerformOption.hashValue.getter(*v0);
}

void sub_10003CD60(uint64_t a1)
{
  char *v1;

  LaunchURL.Resolver.PerformOption.hash(into:)(a1, *v1);
}

Swift::Int sub_10003CD68()
{
  char *v0;
  _QWORD v2[9];

  Hasher.init(_seed:)(v2);
  LaunchURL.Resolver.PerformOption.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t ActionMenu.init(_:image:style:id:debugDescription:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  void *v17;
  id v19;
  id v20;
  Swift::String v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];

  strcpy((char *)v26, "ActionMenu: ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  if (a8)
  {
    v17 = a8;
    v19 = a3;
  }
  else
  {
    v20 = a3;
    swift_bridgeObjectRetain(a6);
    a7 = a5;
    v17 = a6;
  }
  v21._countAndFlagsBits = a7;
  v21._object = v17;
  String.append(_:)(v21);

  result = swift_bridgeObjectRelease(v17);
  v23 = v26[0];
  v24 = v26[1];
  *(_QWORD *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  *(_QWORD *)(a9 + 32) = a1;
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(_BYTE *)(a9 + 56) = a4 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

uint64_t Actions.GoToArtist.Context.menuItemSubtitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_10003CEC4(uint64_t a1, uint64_t a2, char **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t WitnessTable;
  Swift::String v24;
  Swift::String v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  char **v36;
  char *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char **v50;
  char *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char **v57;
  uint64_t v58;
  unint64_t v59;

  v57 = a3;
  v9 = type metadata accessor for ActionMenu.Item(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v14 = type metadata accessor for ActionMenu.Element(0, a4, a5, v13);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v56 - v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v56 - v15, a1, v14);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v18 = v16[1];
    v19 = v16[3];
    v20 = v16[5];
    v21 = (void *)v16[6];
    swift_release(v16[9]);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v18);

    return 1;
  }
  (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v16, v9);
  v58 = a2;
  v22 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  if ((Sequence<>.contains(_:)(v12, v22, WitnessTable, *(_QWORD *)(*(_QWORD *)(a5 + 16) + 8)) & 1) != 0)
  {
    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v24._countAndFlagsBits = 544743456;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v25._countAndFlagsBits = 0x756C637865202D20;
    v25._object = (void *)0xEB00000000646564;
    String.append(_:)(v25);
  }
  else
  {
    v26 = &v12[*(int *)(v9 + 40)];
    v28 = *(uint64_t (**)(uint64_t))v26;
    v27 = *((_QWORD *)v26 + 1);
    v29 = swift_retain(v27);
    v30 = v28(v29);
    v32 = v31;
    swift_release(v27);
    if (v32 == 1)
    {
      v58 = 0;
      v59 = 0xE000000000000000;
      v33._countAndFlagsBits = 0x20939CE22020;
      v33._object = (void *)0xA600000000000000;
      String.append(_:)(v33);
      DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
      v34 = v58;
      v35 = v59;
      v36 = v57;
      v37 = *v57;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v57);
      *v36 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v37 = sub_10003DE28(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
        *v36 = v37;
      }
      v40 = *((_QWORD *)v37 + 2);
      v39 = *((_QWORD *)v37 + 3);
      if (v40 >= v39 >> 1)
      {
        v37 = sub_10003DE28((char *)(v39 > 1), v40 + 1, 1, v37);
        *v36 = v37;
      }
      *((_QWORD *)v37 + 2) = v40 + 1;
      v41 = &v37[16 * v40];
      *((_QWORD *)v41 + 4) = v34;
      *((_QWORD *)v41 + 5) = v35;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 1;
    }
    v58 = 0;
    v59 = 0xE000000000000000;
    v43._countAndFlagsBits = 544743456;
    v43._object = (void *)0xE400000000000000;
    String.append(_:)(v43);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v12, a4, *(_QWORD *)(a5 + 8));
    v44._countAndFlagsBits = 2108704;
    v44._object = (void *)0xE300000000000000;
    String.append(_:)(v44);
    if (v32)
      v45 = v30;
    else
      v45 = 0x6E776F6E6B6E75;
    if (v32)
      v46 = v32;
    else
      v46 = 0xE700000000000000;
    v47 = v46;
    String.append(_:)(*(Swift::String *)&v45);
    swift_bridgeObjectRelease(v46);
  }
  v48 = v58;
  v49 = v59;
  v50 = v57;
  v51 = *v57;
  v52 = swift_isUniquelyReferenced_nonNull_native(*v57);
  *v50 = v51;
  if ((v52 & 1) == 0)
  {
    v51 = sub_10003DE28(0, *((_QWORD *)v51 + 2) + 1, 1, v51);
    *v50 = v51;
  }
  v54 = *((_QWORD *)v51 + 2);
  v53 = *((_QWORD *)v51 + 3);
  if (v54 >= v53 >> 1)
  {
    v51 = sub_10003DE28((char *)(v53 > 1), v54 + 1, 1, v51);
    *v50 = v51;
  }
  *((_QWORD *)v51 + 2) = v54 + 1;
  v55 = &v51[16 * v54];
  *((_QWORD *)v55 + 4) = v48;
  *((_QWORD *)v55 + 5) = v49;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

void sub_10003D29C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char **v11;
  uint64_t *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + 16, v30, 0, 0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = qword_10048C580;
    swift_bridgeObjectRetain();
    if (v9 != -1)
      swift_once(&qword_10048C580, sub_10003D9F0);
    v24 = v7;
    v11 = (char **)(v7 + 40);
    v12 = qword_10048E5E8;
    *(_QWORD *)&v10 = 136446210;
    v26 = v10;
    v25 = (char *)&type metadata for Any + 8;
    v27 = v4;
    v28 = v3;
    do
    {
      v14 = *(v11 - 1);
      v13 = *v11;
      v15 = sub_1000086B4(v3, (uint64_t)v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v15, v3);
      v16 = swift_bridgeObjectRetain_n(v13, 2);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(12, -1);
        v20 = v12;
        v21 = swift_slowAlloc(32, -1);
        v29 = v21;
        *(_DWORD *)v19 = v26;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v19 + 4) = sub_100019400(v14, v13, &v29);
        swift_bridgeObjectRelease_n(v13, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy(v21, 1, v25);
        v22 = v21;
        v12 = v20;
        swift_slowDealloc(v22, -1, -1);
        v23 = v19;
        v4 = v27;
        v3 = v28;
        swift_slowDealloc(v23, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v13, 2);
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v11 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v24);
  }
}

uint64_t sub_10003D4DC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t ActionMenu.Item.menuItemConfiguring.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

uint64_t ActionMenu.Item.execute.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 44));
  v3 = *v2;
  swift_retain(v2[1]);
  return v3;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtFront(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  v5 = swift_allocObject(&unk_100442420, 56, 7);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(Swift::OpaquePointer *)(v5 + 32) = a1;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = sub_10003F3F4;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_10003D5B0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a2();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(a1, v8, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtEnd(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v3 = v1;
  v5 = swift_allocObject(&unk_100442448, 56, 7);
  v6 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(Swift::OpaquePointer *)(v5 + 48) = a1;
  *(_QWORD *)(v2 + 64) = sub_10003F42C;
  *(_QWORD *)(v2 + 72) = v5;
  swift_bridgeObjectRetain();
}

uint64_t sub_10003D674(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a1();
  v10 = type metadata accessor for ActionMenu.Element(0, a4, a5, v9);
  v11 = static Array.+ infix(_:_:)(v8, a3, v10);
  swift_bridgeObjectRelease(v8);
  return v11;
}

uint64_t sub_10003D6DC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(systemName:)(a1, a2);
}

uint64_t sub_10003D70C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003D730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain(v2);
  return Image.init(systemName:)(v1, v2);
}

id sub_10003D75C(uint64_t a1, uint64_t a2)
{
  return sub_10003D95C(a1, a2, (SEL *)&selRef_systemImageNamed_);
}

id sub_10003D768()
{
  uint64_t v0;

  return sub_10003D95C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_systemImageNamed_);
}

uint64_t sub_10003D788()
{
  return sub_10003D84C(0x696D2E636973756DLL, 0xE900000000000063, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10003D7AC()
{
  return sub_10003D84C(0xD000000000000016, 0x80000001003AD9E0, (SEL *)&selRef_imageNamed_);
}

uint64_t sub_10003D7D0()
{
  return sub_10003D84C(0x6F6E2E636973756DLL, 0xEF7473696C2E6574, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10003D7FC()
{
  return sub_10003D84C(0x75622E65746F7571, 0xEC000000656C6262, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10003D824()
{
  return sub_10003D84C(0x71732E636973756DLL, 0xEC00000065726175, (SEL *)&selRef__systemImageNamed_);
}

uint64_t sub_10003D84C(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4;
  id v5;

  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v4);

  if (v5)
    return Image.init(uiImage:)(v5);
  else
    return 0;
}

uint64_t sub_10003D8AC(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_10003D8D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003D8F8()
{
  uint64_t v0;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v0 + 16))();
  if (result)
    return Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_10003D920(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain(a2);
  return Image.init(_internalSystemName:)(a1, a2);
}

id sub_10003D950(uint64_t a1, uint64_t a2)
{
  return sub_10003D95C(a1, a2, (SEL *)&selRef__systemImageNamed_);
}

id sub_10003D95C(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v5;
  id v6;

  swift_bridgeObjectRetain(a2);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v6 = objc_msgSend((id)objc_opt_self(UIImage), *a3, v5);

  return v6;
}

uint64_t type metadata accessor for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Item);
}

uint64_t sub_10003D9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Item.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_10003D9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_10048E5E8);
  sub_1000086B4(v2, (uint64_t)qword_10048E5E8);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x654D6E6F69746341, 0xEA0000000000756ELL);
}

size_t sub_10003DA68(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100005574(&qword_10048D518);
  v11 = *(_QWORD *)(sub_100005574(&qword_10048D510) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = sub_100005574(&qword_10048D510);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_10003DBE4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10003E8C0(a1, a2, a3, a4, &qword_10048E840);
}

char *sub_10003DBF0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E798);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10003DCE4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_100493240);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13, v14, v8, &type metadata for Alert.Action);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_10003DE00(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003EDE4(a1, a2, a3, a4, &qword_10048E830, (uint64_t (*)(_QWORD))&type metadata accessor for URLQueryItem);
}

size_t sub_10003DE14(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003EDE4(a1, a2, a3, a4, &qword_10048E870, (uint64_t (*)(_QWORD))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
}

char *sub_10003DE28(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574((uint64_t *)&unk_100491700);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_10003DF28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003DF4C(uint64_t a1)
{
  uint64_t v1;

  return sub_10003CEC4(a1, *(_QWORD *)(v1 + 32), *(char ***)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

void sub_10003DF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10003D29C(v2, a2);
}

char *sub_10003DF74(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E868);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for Substring);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E074(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E858);
    v11 = (_QWORD *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[11 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 88 * v8);
    a4[2] = 0;
  }
  else
  {
    v14 = sub_100005574(&qword_10048E860);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E1AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E820);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    type metadata accessor for ICURLBagKey(0);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E2C8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003E654(a1, a2, a3, a4, &qword_10048E7F0);
}

_QWORD *sub_10003E2D4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003F06C(a1, a2, a3, a4, (uint64_t *)&unk_1004940F0, &qword_100493120);
}

_QWORD *sub_10003E2E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E828);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    v15 = sub_100005574(&qword_10048E158);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E408(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E848);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    v15 = sub_100005574(&qword_10048E850);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E528(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E838);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    v15 = sub_100005574((uint64_t *)&unk_1004911F0);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_10003E648(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003E654(a1, a2, a3, a4, &qword_10048E818);
}

_QWORD *sub_10003E654(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = a4[3];
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = a4[2];
  if (v8 <= v9)
    v10 = a4[2];
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100005574(a5);
    v12 = (_QWORD *)swift_allocObject(v11, 16 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    v12[2] = v9;
    v12[3] = 2 * (v14 >> 4);
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v12 + 4 >= &a4[2 * v9 + 4])
      memmove(v12 + 4, a4 + 4, 16 * v9);
    a4[2] = 0;
  }
  else
  {
    v16 = sub_100005574(&qword_10048E7A0);
    swift_arrayInitWithCopy(v12 + 4, a4 + 4, v9, v16);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

_QWORD *sub_10003E770(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E810);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = a4 + 4;
  if ((v5 & 1) != 0)
  {
    if (v11 < a4 || v14 >= (unint64_t)&v15[2 * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v14, v15, v8, &type metadata for CloudLibrary.StatusObserver.InternalObserver);
    }
    else if (v11 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v14);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for CloudLibrary.StatusObserver.InternalObserver);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10003E894(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10003E8C0(a1, a2, a3, a4, &qword_10048E800);
}

_QWORD *sub_10003E8A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003F06C(a1, a2, a3, a4, &qword_100490BF0, &qword_10048E808);
}

char *sub_10003E8B4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10003E8C0(a1, a2, a3, a4, &qword_10048E7F8);
}

char *sub_10003E8C0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100005574(a5);
    v12 = (char *)swift_allocObject(v11, v10 + 32, 7);
    v13 = j__malloc_size(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v9])
      memmove(v14, v15, v9);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, v9);
  }
  swift_bridgeObjectRelease(a4);
  return v12;
}

char *sub_10003E9A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E790);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10003EA9C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7E8);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13, v14, v8, &type metadata for PlaylistCovers.Cover.Representation);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_10003EBB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7E0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_10003ECB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7D0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    v15 = sub_100005574(&qword_10048E7D8);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_10003EDD0(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003EDE4(a1, a2, a3, a4, &qword_10048E788, type metadata accessor for SharePlayTogetherSession.Participant);
}

size_t sub_10003EDE4(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100005574(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = a6(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v23, v24, v11, v20);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v18;
}

char *sub_10003EF58(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7C8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for Text);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_10003F058(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10003F06C(a1, a2, a3, a4, &qword_10048E7B8, &qword_10048E7C0);
}

_QWORD *sub_10003F06C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_100005574(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[5 * v11 + 4])
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    v17 = sub_100005574(a6);
    swift_arrayInitWithCopy(v14 + 4, a4 + 4, v11, v17);
  }
  swift_bridgeObjectRelease(a4);
  return v14;
}

char *sub_10003F1A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7B0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_10003F29C(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  char **v4;
  char *v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  char *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = *v4;
  v7 = *((_QWORD *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = result;
  v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v4);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *((_QWORD *)v6 + 3) >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_10003DE28(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[16 * v8 + 32];
  result = swift_arrayDestroy(v16, v9, &type metadata for String);
  if (!v10)
    goto LABEL_19;
  v17 = *((_QWORD *)v6 + 2);
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_25;
  result = (unint64_t)(v16 + 16);
  v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19])
    result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  v21 = *((_QWORD *)v6 + 2);
  v18 = __OFADD__(v21, v10);
  v22 = v21 + v10;
  if (!v18)
  {
    *((_QWORD *)v6 + 2) = v22;
LABEL_19:
    *(_QWORD *)v16 = a3;
    *((_QWORD *)v16 + 1) = a4;
    *v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10003F3C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10003F3F4()
{
  return sub_10003F438((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D5B0);
}

uint64_t sub_10003F400()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10003F42C()
{
  return sub_10003F438((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003D674);
}

uint64_t sub_10003F438(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_10003F44C(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for ActionMenu<A>.Style, a1);
}

uint64_t sub_10003F45C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
}

unint64_t sub_10003F46C()
{
  unint64_t result;

  result = qword_10048E600[0];
  if (!qword_10048E600[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ActionMenuItemStyle, &type metadata for ActionMenuItemStyle);
    atomic_store(result, qword_10048E600);
  }
  return result;
}

uint64_t sub_10003F4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10003F4B8(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t sub_10003F4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v8 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t sub_10003F578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(void **)(a1 + 48);
  v11 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v15);
  return a1;
}

__n128 initializeWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_10003F654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v8 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CAPackageDefinition(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CAPackageDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu);
}

uint64_t type metadata accessor for ActionMenu.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionMenu.Style);
}

uint64_t sub_10003F78C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_10003F808(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v17 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain(v11);
    swift_retain(v14);
  }
  swift_retain(v17);
  return v4;
}

uint64_t sub_10003F908(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 8));
  return swift_release(*(_QWORD *)(((v5 + 23) & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10003F968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain(v9);
  swift_retain(v12);
  swift_retain(v15);
  return a1;
}

uint64_t sub_10003FA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  v10 = v7[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  v14 = v11[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain(v13);
  swift_release(v14);
  v15 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  v18 = v15[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain(v17);
  swift_release(v18);
  return a1;
}

uint64_t sub_10003FAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10003FB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *(_OWORD *)v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release(v9);
  v11 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFF8uLL;
  v12 = *(_QWORD *)(v11 + 8);
  *(_OWORD *)v11 = *(_OWORD *)v10;
  swift_release(v12);
  v13 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release(v14);
  return a1;
}

uint64_t sub_10003FBDC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10003FC68 + 4 * byte_100388120[v10]))();
  }
}

void sub_10003FCEC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10003FDF0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10003FE68);
}

void sub_10003FDF8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10003FE00);
  JUMPOUT(0x10003FE68);
}

void sub_10003FE40()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10003FE68);
}

void sub_10003FE48()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10003FE68);
}

uint64_t sub_10003FE50(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10003FE68);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10003FE64);
    JUMPOUT(0x10003FE5CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

ValueMetadata *type metadata accessor for ActionMenuItemImage()
{
  return &type metadata for ActionMenuItemImage;
}

uint64_t _s9MusicCore19ActionMenuItemStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10003FEDC + 4 * byte_100388134[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10003FF10 + 4 * byte_10038812F[v4]))();
}

uint64_t sub_10003FF10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003FF18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10003FF20);
  return result;
}

uint64_t sub_10003FF2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10003FF34);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10003FF38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003FF40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuItemStyle()
{
  return &type metadata for ActionMenuItemStyle;
}

char *sub_10003FF5C(char *result, int64_t a2, char a3)
{
  char **v3;
  char *v5;
  int64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *((_QWORD *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v7 = result;
  v8 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)result || v10 > *((_QWORD *)v5 + 3) >> 1)
  {
    if (v6 <= v10)
      v12 = v6 + v9;
    else
      v12 = v6;
    result = sub_10003E8C0(result, v12, 1, v5, &qword_10048E800);
    v5 = result;
  }
  v13 = v5 + 32;
  v14 = &v7[(_QWORD)(v5 + 32)];
  if (!v9)
    goto LABEL_19;
  v15 = *((_QWORD *)v5 + 2);
  v16 = v15 - a2;
  if (__OFSUB__(v15, a2))
    goto LABEL_25;
  result = v14 + 1;
  v17 = &v13[a2];
  if (v14 + 1 != &v13[a2] || result >= &v17[v16])
    result = (char *)memmove(result, v17, v16);
  v18 = *((_QWORD *)v5 + 2);
  v19 = __OFADD__(v18, v9);
  v20 = v18 + v9;
  if (!v19)
  {
    *((_QWORD *)v5 + 2) = v20;
LABEL_19:
    *v14 = a3;
    *v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

char *sub_10004006C(char *result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  char *v6;
  int64_t v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  size_t v12;
  char *v13;
  uint64_t v14;
  BOOL v15;
  char *v16;

  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = &result[-a2];
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = (int64_t)&v8[v5];
    else
      v10 = v5;
    result = sub_10003E8C0(result, v10, 1, v4, &qword_10048E800);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *((_QWORD *)v4 + 2);
  v12 = v11 - a2;
  if (__OFSUB__(v11, a2))
    goto LABEL_26;
  result = &v6[(_QWORD)(v4 + 32)];
  v13 = &v4[a2 + 32];
  if (v6 != (char *)a2 || result >= &v13[v12])
    result = (char *)memmove(result, v13, v12);
  v14 = *((_QWORD *)v4 + 2);
  v15 = __OFADD__(v14, v8);
  v16 = &v8[v14];
  if (!v15)
  {
    *((_QWORD *)v4 + 2) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100040174(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10003E1AC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for ICURLBagKey(0);
  result = swift_arrayDestroy(&v4[v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[a2 + 4];
  if (v6 != a2 || &v4[v6 + 4] >= (_QWORD *)&v16[8 * v15])
    result = (uint64_t)memmove(&v4[v6 + 4], v16, 8 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10004028C(uint64_t result, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10003E654(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_10048E7A8);
  }
  v12 = sub_100005574(&qword_10048E7A0);
  result = swift_arrayDestroy(&v4[2 * v6 + 4], v7, v12);
  if (!v7)
    goto LABEL_19;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_25;
  v16 = (char *)&v4[2 * a2 + 4];
  if (v6 != a2 || &v4[2 * v6 + 4] >= (_QWORD *)&v16[16 * v15])
    result = (uint64_t)memmove(&v4[2 * v6 + 4], v16, 16 * v15);
  v17 = v4[2];
  v14 = __OFADD__(v17, v8);
  v18 = v17 - v7;
  if (!v14)
  {
    v4[2] = v18;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1000403B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  if (v5 < 0)
    v20 = v5;
  else
    v20 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_33;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_41:
    __break(1u);
LABEL_42:
    if (v5 < 0)
      v22 = v5;
    else
      v22 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_36:
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_41;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_42;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for BagProvider.Observer();
  result = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return (void *)specialized Array._endMutation()(result);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v5 < 0)
    v23 = v5;
  else
    v23 = v11;
  swift_bridgeObjectRetain();
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  result = (void *)swift_bridgeObjectRelease(v5);
  v16 = v24 - v2;
  if (__OFSUB__(v24, v2))
    goto LABEL_51;
LABEL_21:
  v17 = (const void *)(v11 + 32 + 8 * v2);
  if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
    result = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
  if ((unint64_t)v5 >> 62)
  {
LABEL_52:
    if (v5 < 0)
      v25 = v5;
    else
      v25 = v11;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v25);
    result = (void *)swift_bridgeObjectRelease(v5);
    v19 = v26 + v6;
    if (!__OFADD__(v26, v6))
      goto LABEL_26;
    goto LABEL_57;
  }
  v18 = *(_QWORD *)(v11 + 16);
  v19 = v18 + v6;
  if (!__OFADD__(v18, v6))
  {
LABEL_26:
    *(_QWORD *)(v11 + 16) = v19;
    return (void *)specialized Array._endMutation()(result);
  }
LABEL_57:
  __break(1u);
  return result;
}

uint64_t sub_100040628(uint64_t result, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *((_QWORD *)v4 + 3) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_10003DE28(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy(&v4[16 * v6 + 32], v7, &type metadata for String);
  if (!v7)
    goto LABEL_19;
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_25;
  v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14])
    result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  v16 = *((_QWORD *)v4 + 2);
  v13 = __OFADD__(v16, v8);
  v17 = v16 - v7;
  if (!v13)
  {
    *((_QWORD *)v4 + 2) = v17;
LABEL_19:
    *v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_10004073C(unint64_t result, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_20;
  }
  else
  {
    if (v5 <= v9)
      v10 = v5 + v8;
    else
      v10 = v5;
    result = (unint64_t)sub_10003F1A4((char *)result, v10, 1, (char *)v4);
    v4 = result;
    if (!v8)
      goto LABEL_20;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFSUB__(v11, a2);
  v13 = v11 - a2;
  if (v12)
    goto LABEL_26;
  result = v4 + 32 + 16 * v6;
  v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13)
    result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  v15 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v15, v8);
  v16 = v15 + v8;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v16;
LABEL_20:
    *v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100040848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100443268, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100443290, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1004432B8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000540D8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EB18;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_10004098C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1004433A8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1004433D0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1004433F8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100054574;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EB38;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100040AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100443560, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100443588, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_1004435B0, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100054B08;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000534DC;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10048EB88;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100054B90((_QWORD *)a1);
  sub_100054B90((_QWORD *)a1);
  sub_100054B90((_QWORD *)a1);
  return v3;
}

uint64_t sub_100040C14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100443628, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100443650, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100443678, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100054CD4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000534DC;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10048EBA8;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100054DC0((_QWORD *)a1);
  sub_100054DC0((_QWORD *)a1);
  sub_100054DC0((_QWORD *)a1);
  return v3;
}

uint64_t sub_100040D58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_1004436F0, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100443718, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100443740, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100054FB4;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EBC8;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100040E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100443498, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1004434C0, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1004434E8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000548C8;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EB58;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100040FE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 72);
  v5 = swift_allocObject(&unk_100442BB0, 152, 7);
  v6 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 144) = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v9;
  v10 = swift_allocObject(&unk_100442BD8, 152, 7);
  v11 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v10 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v10 + 64) = v12;
  v13 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v10 + 96) = v13;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 32) = v14;
  v15 = swift_allocObject(&unk_100442C00, 152, 7);
  v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 32) = v19;
  *(_BYTE *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = sub_100052728;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100052734;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10048EA08;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100052850(a1);
  sub_100052850(a1);
  sub_100052850(a1);
  return v3;
}

uint64_t sub_10004113C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100443100, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100443128, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100443150, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000537EC;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EAE0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100442F70, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100442F98, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100442FC0, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_10005349C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100053380;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10048EAA0;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000535A4((_QWORD *)a1);
  sub_1000535A4((_QWORD *)a1);
  sub_1000535A4((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000413C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 64);
  v5 = (_OWORD *)swift_allocObject(&unk_100442EA8, 144, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v7 = *(_OWORD *)(a1 + 112);
  v5[7] = *(_OWORD *)(a1 + 96);
  v5[8] = v7;
  v8 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v9;
  v10 = (_OWORD *)swift_allocObject(&unk_100442ED0, 144, 7);
  v11 = *(_OWORD *)(a1 + 80);
  v10[5] = *(_OWORD *)(a1 + 64);
  v10[6] = v11;
  v12 = *(_OWORD *)(a1 + 112);
  v10[7] = *(_OWORD *)(a1 + 96);
  v10[8] = v12;
  v13 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v14;
  v15 = (_OWORD *)swift_allocObject(&unk_100442EF8, 144, 7);
  v16 = *(_OWORD *)(a1 + 80);
  v15[5] = *(_OWORD *)(a1 + 64);
  v15[6] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v15[7] = *(_OWORD *)(a1 + 96);
  v15[8] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v15[1] = *(_OWORD *)a1;
  v15[2] = v18;
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v15[3] = v19;
  v15[4] = v20;
  *(_QWORD *)(v3 + 40) = sub_100053340;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100053380;
  *(_QWORD *)(v3 + 64) = v10;
  *(_QWORD *)(v3 + 72) = &unk_10048EA80;
  *(_QWORD *)(v3 + 80) = v15;
  *(_BYTE *)(v3 + 112) = 0;
  sub_1000535A4((_QWORD *)a1);
  sub_1000535A4((_QWORD *)a1);
  sub_1000535A4((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100442D90, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100442DB8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100442DE0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000530D0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EA50;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_10004164C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100443038, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100443060, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100443088, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000536D0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048EAC0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100442AE8, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100442B10, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100442B38, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000524DC;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048E9E0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_1000418D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100442A20, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100442A48, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100442A70, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_1000523C0;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048E9C0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041A18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100442958, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_100442980, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1004429A8, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_10005228C;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000522C0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048E9A0;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *(_BYTE *)(a1 + 48);
  v5 = (_OWORD *)swift_allocObject(&unk_100442890, 128, 7);
  v6 = *(_OWORD *)(a1 + 80);
  v5[5] = *(_OWORD *)(a1 + 64);
  v5[6] = v6;
  v5[7] = *(_OWORD *)(a1 + 96);
  v7 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v7;
  v8 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  v5[4] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1004428B8, 128, 7);
  v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  v9[7] = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  v9[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_1004428E0, 128, 7);
  v14 = *(_OWORD *)(a1 + 80);
  v13[5] = *(_OWORD *)(a1 + 64);
  v13[6] = v14;
  v13[7] = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 16);
  v13[1] = *(_OWORD *)a1;
  v13[2] = v15;
  v17 = *(_OWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v3 + 32) = v4;
  v13[3] = v17;
  v13[4] = v16;
  *(_QWORD *)(v3 + 40) = sub_100052170;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_1000556D0;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048E980;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  sub_100055090((_QWORD *)a1);
  return v3;
}

uint64_t sub_100041CA0(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = sub_100005574(&qword_10048E858);
  v3 = swift_allocObject(v2, 120, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  v4 = *((_BYTE *)a1 + 32);
  v5 = (_OWORD *)swift_allocObject(&unk_1004427C8, 112, 7);
  v6 = a1[3];
  v5[3] = a1[2];
  v5[4] = v6;
  v7 = a1[5];
  v5[5] = a1[4];
  v5[6] = v7;
  v8 = a1[1];
  v5[1] = *a1;
  v5[2] = v8;
  v9 = (_OWORD *)swift_allocObject(&unk_1004427F0, 112, 7);
  v10 = a1[3];
  v9[3] = a1[2];
  v9[4] = v10;
  v11 = a1[5];
  v9[5] = a1[4];
  v9[6] = v11;
  v12 = a1[1];
  v9[1] = *a1;
  v9[2] = v12;
  v13 = (_OWORD *)swift_allocObject(&unk_100442818, 112, 7);
  v14 = a1[3];
  v13[3] = a1[2];
  v13[4] = v14;
  v15 = a1[5];
  v13[5] = a1[4];
  v13[6] = v15;
  v16 = *a1;
  v17 = a1[1];
  *(_BYTE *)(v3 + 32) = v4;
  v13[1] = v16;
  v13[2] = v17;
  *(_QWORD *)(v3 + 40) = sub_100051F58;
  *(_QWORD *)(v3 + 48) = v5;
  *(_QWORD *)(v3 + 56) = sub_100051F64;
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 72) = &unk_10048E960;
  *(_QWORD *)(v3 + 80) = v13;
  *(_BYTE *)(v3 + 112) = 0;
  sub_10005200C(a1);
  sub_10005200C(a1);
  sub_10005200C(a1);
  return v3;
}

uint64_t sub_100041DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 216) = a1;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100041E28, 0, 0);
}

uint64_t sub_100041E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  sub_100014A7C(v2, v0 + 16, &qword_10048DCF0);
  v4 = swift_allocObject(&unk_100442E58, 232, 7);
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v0 + 208);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  v11 = sub_1001AD224(v1, (uint64_t)&unk_10048EA70, v4);
  swift_release(v11);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Playlist.Entry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext(uint64_t a1)
{
  uint64_t result;

  result = qword_10048E900;
  if (!qword_10048E900)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistContext);
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v4 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

CFRange (__swiftcall *PlaylistContext.playlist.modify())(__C::_NSRange)
{
  type metadata accessor for PlaylistContext(0);
  return CFRange.init(_:);
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v8 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, __int128 a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;
  unsigned __int8 v39;
  __n128 v40;

  v33 = a4;
  v32 = a7;
  *(_QWORD *)&v36 = a6;
  *(_QWORD *)&v35 = a5;
  v31 = a9;
  v30 = a10;
  v18 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100005574(&qword_10048E878);
  __chkstk_darwin(v21);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  sub_10004DA20(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  v35 = v37[1];
  v36 = v37[0];
  v34 = v37[2];
  v26 = v38;
  v27 = v39;
  sub_100008758((uint64_t)v20, &qword_10048D8E8);
  sub_100008758((uint64_t)v23, &qword_10048E878);
  result = v40;
  v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(_QWORD *)(a8 + 48) = v26;
  *(_QWORD *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  NSObject *v173;
  os_log_type_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  void (*v182)(char *, uint64_t);
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  void *v232;
  void *v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  unint64_t v240;
  __int128 v241;
  __int128 v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  uint64_t v256;

  v231 = a8;
  v240 = a7;
  v236 = a6;
  v235 = a5;
  v210 = a4;
  v234 = a3;
  v233 = a2;
  v232 = a1;
  v238 = a9;
  v227 = a15;
  v228 = a14;
  v229 = a13;
  v230 = a12;
  v237 = a11;
  v226 = type metadata accessor for UploadedVideo(0);
  v185 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v184 = (char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for TVShow(0);
  v188 = *(_QWORD *)(v189 - 8);
  __chkstk_darwin(v189);
  v187 = (char *)&v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = type metadata accessor for TVSeason(0);
  v191 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v190 = (char *)&v183 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = type metadata accessor for TVEpisode(0);
  v193 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v192 = (char *)&v183 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = type metadata accessor for Station(0);
  v196 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v195 = (char *)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = type metadata accessor for Song(0);
  v199 = *(_QWORD *)(v201 - 8);
  __chkstk_darwin(v201);
  v198 = (char *)&v183 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = type metadata accessor for RadioShow(0);
  v203 = *(_QWORD *)(v206 - 8);
  __chkstk_darwin(v206);
  v202 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = type metadata accessor for Playlist(0);
  v205 = *(_QWORD *)(v209 - 8);
  __chkstk_darwin(v209);
  v204 = (char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = type metadata accessor for MusicVideo(0);
  v208 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v207 = (char *)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = type metadata accessor for MusicMovie(0);
  v213 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v212 = (char *)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = type metadata accessor for Genre(0);
  v215 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v214 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for EditorialItem(0);
  v218 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v217 = (char *)&v183 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for Curator(0);
  v221 = *(_QWORD *)(v222 - 8);
  __chkstk_darwin(v222);
  v220 = (char *)&v183 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for Artist(0);
  v224 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin(v225);
  v29 = (char *)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v30);
  v32 = (char *)&v183 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100005574(&qword_10048E878);
  __chkstk_darwin(v33);
  v35 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for Album(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v39 = (char *)&v183 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GenericMusicItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = __chkstk_darwin(v40);
  v186 = (char *)&v183 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v45 = (char *)&v183 - v44;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
  v46((char *)&v183 - v44, v239, v40);
  v47 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v45, v40);
  if (v47 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v45, v36);
    v49 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v35, 1, 1, v49);
    v50 = type metadata accessor for Actions.MetricsReportingContext(0);
    v244 = 0u;
    v245 = 0u;
    v246 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v32, 1, 1, v50);
    sub_1000496E8((uint64_t)v39, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, v237, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v51 = v251;
    v236 = v250;
    v52 = v252;
    v53 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758((uint64_t)v32, &qword_10048D8E8);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758((uint64_t)v35, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
    v57 = v53;
    v58 = v51;
    v59 = v39;
LABEL_3:
    v60 = v36;
LABEL_29:
    result = v56(v59, v60);
    goto LABEL_30;
  }
  v61 = v237;
  v62 = v226;
  if (v47 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v63 = v224;
    v64 = v225;
    (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v29, v45, v225);
    v65 = type metadata accessor for PlaylistContext(0);
    v66 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v35, 1, 1, v65);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v67 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v68 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v32, 1, 1, v67);
    sub_100049B58((uint64_t)v29, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v69 = v255;
    v235 = v256;
    sub_100008758(v68, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v66, &qword_10048E878);
    v70 = v29;
    v55 = v69;
    result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v70, v64);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v72 = v221;
    v73 = (uint64_t)v220;
    v36 = v222;
    (*(void (**)(char *, char *, uint64_t))(v221 + 32))(v220, v45, v222);
    v74 = type metadata accessor for PlaylistContext(0);
    v75 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v35, 1, 1, v74);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v76 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v77 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v32, 1, 1, v76);
    sub_100049FC8(v73, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v77, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v75, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v72 + 8);
    v59 = (char *)v73;
    goto LABEL_3;
  }
  if (v47 == enum case for GenericMusicItem.editorialItem(_:))
  {
    v78 = v40;
    v79 = (uint64_t)v35;
    v80 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v78);
    v81 = v218;
    v82 = (uint64_t)v217;
    (*(void (**)(char *, char *, uint64_t))(v218 + 32))(v217, v45, v223);
    v83 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v35, 1, 1, v83);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v84 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v85 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v32, 1, 1, v84);
    sub_10004A438(v82, v232, v233, v234, (uint64_t)v35, v235, v236, v80, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v85, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v79, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v81 + 8);
    v59 = (char *)v82;
    v86 = (uint64_t *)&v250;
LABEL_28:
    v60 = *(v86 - 32);
    goto LABEL_29;
  }
  if (v47 == enum case for GenericMusicItem.genre(_:))
  {
    v87 = v40;
    v88 = (uint64_t)v35;
    v89 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v87);
    v90 = v215;
    v91 = (uint64_t)v214;
    (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v214, v45, v219);
    v92 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v35, 1, 1, v92);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v93 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v94 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v32, 1, 1, v93);
    sub_10004A8C4(v91, v232, v233, v234, (uint64_t)v35, v235, v236, v89, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v94, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v88, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v90 + 8);
    v59 = (char *)v91;
    v86 = &v246;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v95 = v40;
    v96 = (uint64_t)v35;
    v97 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v95);
    v98 = v213;
    v99 = (uint64_t)v32;
    v100 = (uint64_t)v212;
    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v212, v45, v216);
    v101 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v35, 1, 1, v101);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v102 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v32, 1, 1, v102);
    sub_10004AD34(v100, v232, v233, v234, (uint64_t)v35, v235, v236, v97, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v99, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v96, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v98 + 8);
    v59 = (char *)v100;
    v86 = (uint64_t *)&v244 + 1;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v103 = v40;
    v104 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v103);
    v105 = v208;
    v106 = (uint64_t)v207;
    (*(void (**)(char *, char *, uint64_t))(v208 + 32))(v207, v45, v211);
    v107 = type metadata accessor for Actions.MetricsReportingContext(0);
    v108 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v32, 1, 1, v107);
    sub_10004B1C0(v106, v232, v233, v234, v210, v235, v236, v104, &v247, v231, a10, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v108, &qword_10048D8E8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
    v59 = (char *)v106;
    v86 = (uint64_t *)&v242;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.playlist(_:))
  {
    v109 = v40;
    v110 = (uint64_t)v35;
    v111 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v109);
    v112 = v205;
    v113 = (uint64_t)v204;
    (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v204, v45, v209);
    v114 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v35, 1, 1, v114);
    v115 = type metadata accessor for Actions.MetricsReportingContext(0);
    v244 = 0u;
    v245 = 0u;
    v246 = 0;
    v116 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v32, 1, 1, v115);
    sub_10004B630(v113, v232, v233, v234, (uint64_t)v35, v235, v236, v111, &v247, v231, (uint64_t)&v244, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v116, &qword_10048D8E8);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v110, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v112 + 8);
    v59 = (char *)v113;
    v86 = (uint64_t *)&v241;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.radioShow(_:))
  {
    v117 = v40;
    v118 = (uint64_t)v35;
    v119 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v117);
    v120 = v203;
    v121 = (uint64_t)v202;
    (*(void (**)(char *, char *, uint64_t))(v203 + 32))(v202, v45, v206);
    v122 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v35, 1, 1, v122);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v123 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v124 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v32, 1, 1, v123);
    sub_10004BAA0(v121, v232, v233, v234, (uint64_t)v35, v235, v236, v119, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v124, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v118, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v120 + 8);
    v59 = (char *)v121;
    v86 = (uint64_t *)&v238;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.song(_:))
  {
    v125 = v40;
    v126 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v125);
    v127 = v199;
    v128 = (uint64_t)v198;
    (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v198, v45, v201);
    v129 = type metadata accessor for Actions.MetricsReportingContext(0);
    v130 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v32, 1, 1, v129);
    sub_10004BF10(v128, v232, v233, v234, v210, v235, v236, v126, &v247, v231, a10, v61, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v130, &qword_10048D8E8);
    v56 = *(uint64_t (**)(char *, uint64_t))(v127 + 8);
    v59 = (char *)v128;
    v86 = (uint64_t *)&v233;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.station(_:))
  {
    v131 = v40;
    v132 = (uint64_t)v35;
    v133 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v131);
    v134 = v196;
    v135 = (uint64_t)v195;
    (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v195, v45, v200);
    v136 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v35, 1, 1, v136);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v137 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v138 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v32, 1, 1, v137);
    sub_10004C380(v135, v232, v233, v234, (uint64_t)v35, v235, v236, v133, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v138, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v132, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v134 + 8);
    v59 = (char *)v135;
    v86 = (uint64_t *)&v232;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v139 = v40;
    v140 = (uint64_t)v35;
    v141 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v139);
    v142 = v193;
    v143 = (uint64_t)v192;
    (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v192, v45, v197);
    v144 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v35, 1, 1, v144);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v145 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v146 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v32, 1, 1, v145);
    sub_10004C7F0(v143, v232, v233, v234, (uint64_t)v35, v235, v236, v141, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v146, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v140, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v142 + 8);
    v59 = (char *)v143;
    v86 = &v229;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v147 = v40;
    v148 = (uint64_t)v35;
    v149 = v240;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v147);
    v150 = v191;
    v151 = (uint64_t)v190;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v45, v194);
    v152 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v35, 1, 1, v152);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v153 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v154 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v32, 1, 1, v153);
    sub_10004CC7C(v151, v232, v233, v234, (uint64_t)v35, v235, v236, v149, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v154, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    sub_100008758(v148, &qword_10048E878);
    v56 = *(uint64_t (**)(char *, uint64_t))(v150 + 8);
    v59 = (char *)v151;
    v86 = &v226;
    goto LABEL_28;
  }
  if (v47 == enum case for GenericMusicItem.tvShow(_:))
  {
    v159 = v35;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v160 = v188;
    v161 = (uint64_t)v187;
    v162 = v189;
    (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v187, v45, v189);
    v163 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v35, 1, 1, v163);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v164 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v165 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56))(v32, 1, 1, v164);
    sub_10004D108(v161, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v165, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    v166 = (uint64_t)v159;
LABEL_35:
    sub_100008758(v166, &qword_10048E878);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v161, v162);
    goto LABEL_30;
  }
  if (v47 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v41 + 96))(v45, v40);
    v160 = v185;
    v161 = (uint64_t)v184;
    v162 = v62;
    (*(void (**)(char *, char *, uint64_t))(v185 + 32))(v184, v45, v62);
    v167 = type metadata accessor for PlaylistContext(0);
    v168 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v167 - 8) + 56))(v35, 1, 1, v167);
    v246 = 0;
    v244 = 0u;
    v245 = 0u;
    v169 = type metadata accessor for Actions.MetricsReportingContext(0);
    v241 = 0u;
    v242 = 0u;
    v243 = 0;
    v170 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v32, 1, 1, v169);
    sub_10004D594(v161, v232, v233, v234, (uint64_t)v35, v235, v236, v240, &v247, v231, (uint64_t)&v244, (unint64_t)&v241, v230, v229, v228, v227, (uint64_t)v32);
    v239 = v247;
    v240 = v248;
    v237 = v249;
    v58 = v251;
    v236 = v250;
    v52 = v252;
    v57 = v253;
    v54 = v254;
    v55 = v255;
    v235 = v256;
    sub_100008758(v170, &qword_10048D8E8);
    sub_100008758((uint64_t)&v241, &qword_10048E888);
    sub_100008758((uint64_t)&v244, &qword_10048E890);
    v166 = (uint64_t)v168;
    goto LABEL_35;
  }
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v171 = type metadata accessor for Logger(0, v48);
  sub_1000086B4(v171, (uint64_t)static Logger.actions);
  v172 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v186, v239, v40);
  v173 = Logger.logObject.getter(v172);
  v174 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v173, v174))
  {
    v175 = swift_slowAlloc(12, -1);
    v176 = swift_slowAlloc(32, -1);
    v247 = v176;
    *(_DWORD *)v175 = 136315138;
    v177 = sub_100006924(&qword_10048E880, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v178 = v186;
    v179 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v40, v177);
    v181 = v180;
    *(_QWORD *)(v175 + 4) = sub_100019400(v179, v180, &v247);
    swift_bridgeObjectRelease(v181);
    v182 = *(void (**)(char *, uint64_t))(v41 + 8);
    v182(v178, v40);
    _os_log_impl((void *)&_mh_execute_header, v173, v174, "GenericMusicItem %s actions not handled.", (uint8_t *)v175, 0xCu);
    swift_arrayDestroy(v176, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v176, -1, -1);
    swift_slowDealloc(v175, -1, -1);
  }
  else
  {
    v182 = *(void (**)(char *, uint64_t))(v41 + 8);
    v182(v186, v40);
  }

  result = ((uint64_t (*)(char *, uint64_t))v182)(v45, v40);
  v239 = 0;
  v240 = 0;
  v237 = 0;
  v236 = 0;
  v58 = 0;
  v52 = 0;
  v57 = 0;
  v54 = 0;
  v55 = 0;
  v235 = 0;
LABEL_30:
  v155 = v238;
  v156 = v240;
  *v238 = v239;
  v155[1] = v156;
  v157 = v236;
  v155[2] = v237;
  v155[3] = v157;
  v155[4] = v58;
  v155[5] = v52;
  v155[6] = v57;
  v155[7] = v54;
  v158 = v235;
  v155[8] = v55;
  v155[9] = v158;
  return result;
}

_QWORD *sub_1000445CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char **__ptr32 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  _QWORD *v88;
  uint64_t v89;
  char v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  unint64_t v120;
  id v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  Swift::String v127;
  void *v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *result;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  int64_t v148;
  int64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  _QWORD *v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183[2];
  __int128 v184[2];
  uint64_t v185;
  __int128 v186[2];
  uint64_t v187;
  __int128 v188[3];
  uint64_t v189;
  unsigned __int8 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  unsigned __int8 v196;
  __int128 v197;
  __int128 v198[3];
  uint64_t v199;
  unsigned __int8 v200;
  __int128 v201;

  v166 = a8;
  v172 = a6;
  *(_QWORD *)&v181 = a5;
  v168 = a4;
  *(_QWORD *)&v182 = a3;
  v19 = sub_100005574(&qword_10048E878);
  __chkstk_darwin(v19);
  *(_QWORD *)&v169 = (char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for PlaylistContext(0);
  *(_QWORD *)&v170 = *(_QWORD *)(v167 - 8);
  v21 = __chkstk_darwin(v167);
  v164 = v22;
  v165 = (_QWORD *)((char *)&v157 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  *(_QWORD *)&v171 = (char *)&v157 - v23;
  v24 = type metadata accessor for UUID(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100005574(&qword_10048D8E8);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 64);
  __chkstk_darwin(v28);
  v31 = (char *)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = a1;
  sub_100014A7C(a1, (uint64_t)&v192, &qword_10048E890);
  v179 = a7;
  *(_QWORD *)&v180 = a2;
  v177 = v25;
  *(_QWORD *)&v178 = v24;
  v175 = v31;
  v176 = v27;
  v173 = v29;
  v174 = v30;
  if (*((_QWORD *)&v193 + 1))
  {
    sub_1000137C8(&v192, (uint64_t)v198);
    sub_1000244B0(a2, (uint64_t)&v192);
    v32 = sub_100005574(&qword_100493480);
    v163 = String.init<A>(describing:)(&v192, v32);
    v33 = v27;
    v35 = v34;
    sub_1000244B0(a2, (uint64_t)&v192);
    sub_1000244B0((uint64_t)v198, (uint64_t)v188);
    sub_100014A7C(v182, (uint64_t)&v157 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
    v36 = *(unsigned __int8 *)(v29 + 80);
    v37 = (v36 + 96) & ~v36;
    v38 = swift_allocObject(&unk_100443240, v37 + v30, v36 | 7);
    sub_1000137C8(&v192, v38 + 16);
    sub_1000137C8(v188, v38 + 56);
    sub_1000149A8((uint64_t)v31, v38 + v37, &qword_10048D8E8);
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v40 = UUID.uuidString.getter(v39);
    v42 = v41;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
    strcpy((char *)&v192, "ActionMenu: ");
    BYTE13(v192) = 0;
    HIWORD(v192) = -5120;
    v43._countAndFlagsBits = v163;
    v43._object = v35;
    String.append(_:)(v43);
    swift_bridgeObjectRelease(v35);
    v44 = v192;
    v45 = sub_100005574(&qword_10048E858);
    v46 = swift_allocObject(v45, 120, 7);
    *(_OWORD *)(v46 + 16) = xmmword_100384A80;
    *(_QWORD *)(v46 + 32) = v40;
    *(_QWORD *)(v46 + 40) = v42;
    *(_OWORD *)(v46 + 48) = v44;
    *(_OWORD *)(v46 + 64) = xmmword_100384A90;
    *(_QWORD *)(v46 + 80) = 0;
    *(_QWORD *)(v46 + 88) = 0;
    *(_QWORD *)(v46 + 96) = sub_10005409C;
    *(_QWORD *)(v46 + 104) = v38;
    *(_BYTE *)(v46 + 112) = 1;
    *(_QWORD *)&v192 = _swiftEmptyArrayStorage;
    sub_10008A458((_QWORD *)v46);
    v160 = (_QWORD *)v192;
    sub_10000682C(v198);
  }
  else
  {
    sub_100008758((uint64_t)&v192, &qword_10048E890);
    v160 = _swiftEmptyArrayStorage;
  }
  v47 = v170;
  v48 = v169;
  v49 = v167;
  sub_100014A7C((uint64_t)v168, v169, &qword_10048E878);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v49) == 1)
  {
    sub_100008758(v48, &qword_10048E878);
    v50 = _swiftEmptyArrayStorage;
    v51 = v179;
    v52 = v180;
    v53 = &off_100384000;
  }
  else
  {
    v54 = v48;
    v55 = v171;
    sub_100053BCC(v54, v171);
    v52 = v180;
    sub_1000244B0(v180, (uint64_t)v198);
    v56 = sub_100005574(&qword_100493480);
    *(_QWORD *)&v170 = String.init<A>(describing:)(v198, v56);
    v58 = v57;
    v59 = (uint64_t)v165;
    sub_100053C10(v55, (uint64_t)v165);
    v60 = (uint64_t)v175;
    sub_100014A7C(v182, (uint64_t)v175, &qword_10048D8E8);
    v61 = *(unsigned __int8 *)(v47 + 80);
    v62 = (v61 + 16) & ~v61;
    v63 = ((unint64_t)v164 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = *(unsigned __int8 *)(v173 + 80);
    v65 = (v64 + v63 + 8) & ~v64;
    v66 = swift_allocObject(&unk_100443218, v65 + v174, v61 | v64 | 7);
    sub_100053BCC(v59, v66 + v62);
    v67 = v181;
    *(_QWORD *)(v66 + v63) = v181;
    sub_1000149A8(v60, v66 + v65, &qword_10048D8E8);
    swift_retain(v67);
    v68 = v176;
    v69 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v70 = UUID.uuidString.getter(v69);
    v72 = v71;
    (*(void (**)(char *, _QWORD))(v177 + 8))(v68, v178);
    strcpy((char *)v198, "ActionMenu: ");
    BYTE13(v198[0]) = 0;
    HIWORD(v198[0]) = -5120;
    v73._countAndFlagsBits = v170;
    v73._object = v58;
    String.append(_:)(v73);
    swift_bridgeObjectRelease(v58);
    v75 = *((_QWORD *)&v198[0] + 1);
    v74 = *(_QWORD *)&v198[0];
    v76 = sub_100005574(&qword_10048E858);
    v77 = swift_allocObject(v76, 120, 7);
    *(_OWORD *)(v77 + 16) = xmmword_100384A80;
    *(_QWORD *)(v77 + 32) = v70;
    *(_QWORD *)(v77 + 40) = v72;
    *(_OWORD *)(v77 + 48) = __PAIR128__(v75, v74);
    *(_OWORD *)(v77 + 64) = xmmword_100384A90;
    *(_QWORD *)(v77 + 80) = 0;
    *(_QWORD *)(v77 + 88) = 0;
    *(_QWORD *)(v77 + 96) = sub_100053E5C;
    *(_QWORD *)(v77 + 104) = v66;
    *(_BYTE *)(v77 + 112) = 1;
    v53 = &off_100384000;
    *(_QWORD *)&v198[0] = _swiftEmptyArrayStorage;
    sub_10008A458((_QWORD *)v77);
    v50 = *(_QWORD **)&v198[0];
    sub_100053ED0(v171);
    v51 = v179;
  }
  v78 = (uint64_t)a16;
  sub_1000244B0(v52, (uint64_t)v188);
  v79 = sub_100005574(&qword_100493480);
  v80 = sub_100005574(&qword_10048EA20);
  if ((swift_dynamicCast(&v192, v188, v79, v80, 6) & 1) != 0)
  {
    sub_100051EA0(&v192, v198);
    sub_1000244B0(v51, (uint64_t)&v192);
    v81 = v182;
    sub_100050ACC(v198, v181, v172, (uint64_t)&v192, v166, a9, v182, (uint64_t)v188);
    v170 = v188[1];
    v171 = v188[0];
    v169 = v188[2];
    v82 = v189;
    v83 = v190;
    sub_100008758((uint64_t)&v192, &qword_10048D958);
    v84 = sub_100005574(&qword_10048E858);
    v85 = swift_allocObject(v84, 120, 7);
    v86 = v171;
    *(_OWORD *)(v85 + 16) = *((_OWORD *)v53 + 168);
    *(_OWORD *)(v85 + 32) = v86;
    v87 = v169;
    *(_OWORD *)(v85 + 48) = v170;
    *(_OWORD *)(v85 + 64) = v87;
    *(_QWORD *)(v85 + 80) = v82;
    *(_QWORD *)(v85 + 88) = v83;
    *(_OWORD *)(v85 + 96) = v191;
    *(_BYTE *)(v85 + 112) = 1;
    *(_QWORD *)&v192 = _swiftEmptyArrayStorage;
    sub_10008A458((_QWORD *)v85);
    v88 = (_QWORD *)v192;
    sub_10000682C(v198);
  }
  else
  {
    v193 = 0u;
    v194 = 0u;
    v192 = 0u;
    sub_100008758((uint64_t)&v192, &qword_10048EAF8);
    v88 = _swiftEmptyArrayStorage;
    v81 = v182;
  }
  *(_QWORD *)&v171 = a15;
  *(_QWORD *)&v170 = a14;
  *(_QWORD *)&v169 = a13;
  v167 = a12;
  v168 = a11;
  sub_1000244B0(v52, (uint64_t)&v192);
  v89 = sub_100005574(&qword_10048E898);
  v90 = swift_dynamicCast(v186, &v192, v79, v89, 6);
  v164 = v88;
  v165 = v50;
  if ((v90 & 1) == 0)
  {
    v187 = 0;
    memset(v186, 0, sizeof(v186));
    sub_100008758((uint64_t)v186, &qword_10048EB00);
LABEL_15:
    *(_QWORD *)&v159 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  sub_1000137C8(v186, (uint64_t)v198);
  if (!a10)
  {
    sub_10000682C(v198);
    goto LABEL_15;
  }
  v91 = a10;
  v161 = a16;
  v92 = v91;
  sub_100050FA0((uint64_t)v198, v91, v168, v51, v167, v169, v170, (uint64_t)&v192, v171, v81);
  v158 = v193;
  v159 = v192;
  v157 = v194;
  v93 = v195;
  v94 = v196;
  v95 = sub_100005574(&qword_10048E858);
  v96 = swift_allocObject(v95, 120, 7);
  v97 = v159;
  *(_OWORD *)(v96 + 16) = *((_OWORD *)v53 + 168);
  *(_OWORD *)(v96 + 32) = v97;
  v98 = v157;
  *(_OWORD *)(v96 + 48) = v158;
  *(_OWORD *)(v96 + 64) = v98;
  *(_QWORD *)(v96 + 80) = v93;
  *(_QWORD *)(v96 + 88) = v94;
  v78 = (uint64_t)v161;
  *(_OWORD *)(v96 + 96) = v197;
  *(_BYTE *)(v96 + 112) = 1;
  *(_QWORD *)&v186[0] = _swiftEmptyArrayStorage;
  sub_10008A458((_QWORD *)v96);

  *(_QWORD *)&v159 = *(_QWORD *)&v186[0];
  sub_10000682C(v198);
LABEL_16:
  v99 = v162;
  v101 = v173;
  v100 = v174;
  v163 = v79;
  sub_1000244B0(v52, (uint64_t)v198);
  v102 = String.init<A>(describing:)(v198, v79);
  v161 = v103;
  v162 = v102;
  sub_1000244B0(v52, (uint64_t)v198);
  sub_1000244B0(v78, (uint64_t)v186);
  v104 = (uint64_t)v175;
  sub_100014A7C(v81, (uint64_t)v175, &qword_10048D8E8);
  sub_100014A7C(v99, (uint64_t)v184, &qword_10048E890);
  sub_1000244B0(v51, (uint64_t)v183);
  v105 = *(unsigned __int8 *)(v101 + 80);
  v106 = (v105 + 96) & ~v105;
  v107 = (v100 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
  v108 = (v107 + 47) & 0xFFFFFFFFFFFFFFF8;
  v109 = (v108 + 15) & 0xFFFFFFFFFFFFFFF8;
  v110 = (v109 + 15) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v110 + 47) & 0xFFFFFFFFFFFFFFF8;
  v112 = (v111 + 23) & 0xFFFFFFFFFFFFFFF8;
  v113 = swift_allocObject(&unk_1004431F0, v112 + 16, v105 | 7);
  sub_1000137C8(v198, v113 + 16);
  sub_1000137C8(v186, v113 + 56);
  sub_1000149A8(v104, v113 + v106, &qword_10048D8E8);
  sub_1000149A8((uint64_t)v184, v113 + v107, &qword_10048E890);
  v114 = v181;
  *(_QWORD *)(v113 + v108) = v181;
  v115 = v168;
  *(_QWORD *)(v113 + v109) = v168;
  sub_1000137C8(v183, v113 + v110);
  v116 = (_QWORD *)(v113 + v111);
  v117 = v169;
  *v116 = v167;
  v116[1] = v117;
  v118 = (_QWORD *)(v113 + v112);
  v119 = v170;
  v120 = v171;
  *v118 = v170;
  v118[1] = v120;
  swift_retain(v114);
  v121 = v115;
  swift_bridgeObjectRetain();
  sub_1000516E4(v119, v120);
  v122 = v176;
  v123 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v124 = UUID.uuidString.getter(v123);
  v126 = v125;
  (*(void (**)(char *, _QWORD))(v177 + 8))(v122, v178);
  strcpy((char *)v198, "ActionMenu: ");
  BYTE13(v198[0]) = 0;
  HIWORD(v198[0]) = -5120;
  v128 = v161;
  v127._countAndFlagsBits = v162;
  v127._object = v161;
  String.append(_:)(v127);
  swift_bridgeObjectRelease(v128);
  v129 = v198[0];
  v130 = sub_100005574(&qword_10048E858);
  v131 = swift_allocObject(v130, 120, 7);
  v178 = xmmword_100384A80;
  *(_OWORD *)(v131 + 16) = xmmword_100384A80;
  *(_QWORD *)(v131 + 32) = v124;
  *(_QWORD *)(v131 + 40) = v126;
  *(_OWORD *)(v131 + 48) = v129;
  *(_OWORD *)(v131 + 64) = xmmword_100384A90;
  *(_QWORD *)(v131 + 80) = 0;
  *(_QWORD *)(v131 + 88) = 0;
  *(_QWORD *)(v131 + 96) = sub_100053B28;
  *(_QWORD *)(v131 + 104) = v113;
  *(_BYTE *)(v131 + 112) = 1;
  sub_1000244B0(v180, (uint64_t)v198);
  v132 = sub_100005574(&qword_10048E8A0);
  if ((swift_dynamicCast(v184, v198, v163, v132, 6) & 1) != 0)
  {
    sub_1000137C8(v184, (uint64_t)v186);
    sub_1000244B0(v179, (uint64_t)v184);
    sub_1000511E4((uint64_t)v186, v114, v172, (uint64_t)v184, v166, v182, 0, 0, (uint64_t)v198);
    v181 = v198[1];
    v182 = v198[0];
    v180 = v198[2];
    v133 = v199;
    v134 = v200;
    sub_100008758((uint64_t)v184, &qword_10048D958);
    v135 = swift_allocObject(v130, 120, 7);
    v136 = v182;
    *(_OWORD *)(v135 + 16) = v178;
    *(_OWORD *)(v135 + 32) = v136;
    v137 = v180;
    *(_OWORD *)(v135 + 48) = v181;
    *(_OWORD *)(v135 + 64) = v137;
    *(_QWORD *)(v135 + 80) = v133;
    *(_QWORD *)(v135 + 88) = v134;
    *(_OWORD *)(v135 + 96) = v201;
    *(_BYTE *)(v135 + 112) = 1;
    *(_QWORD *)&v184[0] = _swiftEmptyArrayStorage;
    sub_10008A458((_QWORD *)v135);
    v138 = *(_QWORD **)&v184[0];
    sub_10000682C(v186);
  }
  else
  {
    v185 = 0;
    memset(v184, 0, sizeof(v184));
    sub_100008758((uint64_t)v184, &qword_10048EB08);
    v138 = _swiftEmptyArrayStorage;
  }
  v139 = sub_100005574(&qword_10048E948);
  result = (_QWORD *)swift_allocObject(v139, 80, 7);
  v141 = result;
  result[4] = v160;
  *(_QWORD *)&v182 = result + 4;
  v142 = v164;
  result[5] = v165;
  result[6] = v142;
  result[7] = v159;
  result[8] = v131;
  result[9] = v138;
  v143 = 4;
  v144 = _swiftEmptyArrayStorage;
  while (1)
  {
    v145 = v141[v143];
    v146 = *(_QWORD *)(v145 + 16);
    v147 = v144[2];
    v148 = v147 + v146;
    if (__OFADD__(v147, v146))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v144);
    if ((_DWORD)result && v148 <= v144[3] >> 1)
    {
      if (*(_QWORD *)(v145 + 16))
        goto LABEL_31;
    }
    else
    {
      if (v147 <= v148)
        v149 = v147 + v146;
      else
        v149 = v147;
      result = sub_10003E074(result, v149, 1, v144);
      v144 = result;
      if (*(_QWORD *)(v145 + 16))
      {
LABEL_31:
        v150 = v144[2];
        if ((v144[3] >> 1) - v150 < v146)
          goto LABEL_38;
        v151 = (uint64_t)&v144[11 * v150 + 4];
        v152 = sub_100005574(&qword_10048E860);
        result = (_QWORD *)swift_arrayInitWithCopy(v151, v145 + 32, v146, v152);
        if (v146)
        {
          v153 = v144[2];
          v154 = __OFADD__(v153, v146);
          v155 = v153 + v146;
          if (v154)
            goto LABEL_39;
          v144[2] = v155;
        }
        goto LABEL_21;
      }
    }
    if (v146)
      goto LABEL_37;
LABEL_21:
    result = (_QWORD *)swift_bridgeObjectRelease(v145);
    if (++v143 == 10)
    {
      swift_setDeallocating(v141);
      v156 = sub_100005574(&qword_10048E950);
      swift_arrayDestroy(v182, 6, v156);
      swift_deallocClassInstance(v141, 32, 7);
      return v144;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_1000452E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_10000ABC8(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_10000ABC8(a2, v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v17 + 16))(v16, v11, v9);
  __chkstk_darwin(v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD *, uint64_t))(v21 + 16))(v20, v14, v12);
  sub_100014A7C(a3, (uint64_t)v8, &qword_10048D8E8);
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v22 = static ApplicationCapabilities.Controller.shared;
  swift_retain(static ApplicationCapabilities.Controller.shared);
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v16, v22, (uint64_t)v20, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v23 = v32;
  v33 = v29;
  v27 = v30;
  v26 = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_10005B6C0;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_10048EC20;
  v42 = 0;
  v43 = &unk_10048EC28;
  v44 = 0;
  v24 = (_QWORD *)sub_100040848((uint64_t)&v33);
  swift_release(v23);
  swift_release(v26);
  swift_release(v27);
  v28 = _swiftEmptyArrayStorage;
  sub_10008A458(v24);
  return v28;
}

_QWORD *sub_100045534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(uint64_t, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD v67[6];
  char v68;
  uint64_t (*v69)(uint64_t (**)(void));
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  v60 = a3;
  v65 = a2;
  v4 = sub_100005574(&qword_10048D8E8);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v7;
  v8 = type metadata accessor for Playlist(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v52 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v52 - v15;
  v17 = type metadata accessor for Playlist.Entry(0);
  v18 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  v19 = *(_QWORD *)(v18 + 64);
  v57 = v18;
  v20 = __chkstk_darwin(v17);
  v61 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v64 = (char *)&v52 - v22;
  __chkstk_darwin(v21);
  v24 = (char *)&v52 - v23;
  v56 = *(void (**)(char *, uint64_t))(v25 + 16);
  v54 = (char *)&v52 - v23;
  v56((char *)&v52 - v23, a1);
  v26 = a1 + *(int *)(type metadata accessor for PlaylistContext(0) + 20);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v27(v16, v26, v8);
  sub_100014A7C(v60, (uint64_t)v7, &qword_10048D8E8);
  v27(v14, (uint64_t)v16, v8);
  v28 = *(unsigned __int8 *)(v9 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = v28 | 7;
  v60 = swift_allocObject(&unk_100443330, v29 + v10, v28 | 7);
  v31 = v60 + v29;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v33 = v8;
  v53 = v8;
  v32(v31, v14, v8);
  v34 = v55;
  ((void (*)(char *, char *, uint64_t))v56)(v64, v24, v55);
  v35 = v58;
  v32((uint64_t)v58, v16, v33);
  v36 = v57;
  v37 = *(unsigned __int8 *)(v57 + 80);
  v38 = (v37 + 24) & ~v37;
  v39 = (v19 + v28 + v38) & ~v28;
  v40 = swift_allocObject(&unk_100443358, v39 + v10, v30 | v37);
  v41 = v64;
  *(_QWORD *)(v40 + 16) = v65;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v42(v40 + v38, v41, v34);
  v32(v40 + v39, v35, v53);
  v43 = v61;
  v44 = v34;
  v42((uint64_t)v61, v54, v34);
  v45 = *(unsigned __int8 *)(v62 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = (v63 + v37 + v46) & ~v37;
  v48 = swift_allocObject(&unk_100443380, v47 + v19, v37 | v45 | 7);
  sub_1000149A8((uint64_t)v59, v48 + v46, &qword_10048D8E8);
  v42(v48 + v47, v43, v44);
  v49 = v60;
  v67[0] = sub_10002717C;
  v67[1] = v60;
  v67[2] = &unk_10048DEA0;
  v67[3] = v40;
  v67[4] = &unk_10048DEB0;
  v67[5] = v48;
  v68 = 41;
  v69 = sub_10000F930;
  v70 = 0;
  v71 = 0x4014000000000000;
  v72 = &unk_10048DE88;
  v73 = 0;
  v74 = &unk_10048DE90;
  v75 = 0;
  swift_retain(v65);
  v50 = (_QWORD *)sub_10004098C((uint64_t)v67);
  swift_release(v48);
  swift_release(v40);
  swift_release(v49);
  v66 = _swiftEmptyArrayStorage;
  sub_10008A458(v50);
  return v66;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v9;
  __n128 result;
  _OWORD v11[5];

  sub_100050ACC(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_100045978(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(char *, char *, uint64_t), int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  __int128 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t result;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  int64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  _QWORD *v105;
  _OWORD v106[3];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  _QWORD v114[8];
  _OWORD v115[4];
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[8];
  char v121;
  uint64_t (*v122)(uint64_t (**)(void));
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  _QWORD v129[18];

  *(_QWORD *)&v102 = a8;
  *(_QWORD *)&v101 = a7;
  v104 = a5;
  v100 = a11;
  v99 = (_QWORD *)a10;
  v103 = a9;
  v16 = (char *)v114;
  v17 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v17);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0(a1, (uint64_t)v115);
  v20 = sub_100005574(&qword_100493480);
  v21 = sub_100005574(&qword_10048EB70);
  v22 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast(&v116, v115, v20, v21, 6) & 1) == 0)
  {
    v118 = 0;
    v116 = 0u;
    v117 = 0u;
    sub_100008758((uint64_t)&v116, &qword_10048EB78);
    v98 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_1000137C8(&v116, (uint64_t)v106);
  sub_1000244B0((uint64_t)v106, (uint64_t)v129);
  sub_1000244B0(a2, (uint64_t)v120);
  sub_100014A7C(a3, (uint64_t)v19, &qword_10048D8E8);
  if (qword_10048C658 != -1)
    goto LABEL_47;
  while (1)
  {
    v23 = static ApplicationCapabilities.Controller.shared;
    swift_retain(static ApplicationCapabilities.Controller.shared);
    sub_100077E3C(v129, v23, v120, (uint64_t)v19, v114);
    v24 = v114[6];
    v25 = v114[7];
    v26 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v26;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v120[6] = v24;
    v120[7] = v25;
    v121 = 42;
    v122 = sub_10000F930;
    v123 = 0;
    v124 = 0x4014000000000000;
    v125 = &unk_10048F188;
    v126 = 0;
    v127 = &unk_10048F190;
    v128 = 0;
    v27 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v27;
    v28 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v28;
    v29 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v29;
    v30 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v30;
    v31 = (_QWORD *)sub_100040AD0((uint64_t)v129);
    sub_100054A68(v120, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_QWORD *)&v112 = v22;
    sub_10008A458(v31);
    v98 = (char *)v112;
    sub_10000682C(v106);
LABEL_5:
    v96 = v19;
    sub_100014A7C((uint64_t)a4, (uint64_t)&v112, &qword_10048E890);
    v97 = a3;
    if (v113)
    {
      sub_1000137C8(&v112, (uint64_t)&v116);
      v32 = *(_QWORD *)(a1 + 24);
      v94 = *(_QWORD *)(a1 + 32);
      v33 = sub_10000ABC8((_QWORD *)a1, v32);
      v95 = a6;
      v34 = v33;
      v35 = *((_QWORD *)&v117 + 1);
      v92 = v118;
      v36 = (_QWORD *)a1;
      v37 = sub_10000ABC8(&v116, *((uint64_t *)&v117 + 1));
      v93 = &v91;
      __chkstk_darwin(v37);
      v39 = (char *)&v91 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      v41 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v40 + 16))(v39, v34, v32);
      __chkstk_darwin(v41);
      v43 = (char *)&v91 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v44 + 16))(v43, v37, v35);
      v45 = (uint64_t)v96;
      sub_100014A7C(a3, (uint64_t)v96, &qword_10048D8E8);
      v46 = (uint64_t)v43;
      a6 = v95;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v39, v46, v45, v32, v35, v94, v92, v115);
      v47 = *((_OWORD *)v16 + 6);
      v48 = *((_OWORD *)v16 + 7);
      v49 = *((_OWORD *)v16 + 5);
      v106[0] = *((_OWORD *)v16 + 4);
      v106[1] = v49;
      v106[2] = v47;
      v107 = v48;
      LOBYTE(v108) = 17;
      *((_QWORD *)&v108 + 1) = sub_10005B6B0;
      *(_QWORD *)&v109 = 0;
      *((_QWORD *)&v109 + 1) = 0x4014000000000000;
      *(_QWORD *)&v110 = &unk_10048EC40;
      *((_QWORD *)&v110 + 1) = 0;
      *(_QWORD *)&v111 = &unk_10048EC48;
      *((_QWORD *)&v111 + 1) = 0;
      v50 = v109;
      *((_OWORD *)v16 + 15) = v108;
      *((_OWORD *)v16 + 16) = v50;
      v51 = v111;
      *((_OWORD *)v16 + 17) = v110;
      *((_OWORD *)v16 + 18) = v51;
      v52 = v106[1];
      *((_OWORD *)v16 + 11) = v106[0];
      *((_OWORD *)v16 + 12) = v52;
      v53 = v107;
      *((_OWORD *)v16 + 13) = v106[2];
      *((_OWORD *)v16 + 14) = v53;
      v54 = (_QWORD *)sub_100040C14((uint64_t)v120);
      sub_1000549E0(v106);
      v105 = _swiftEmptyArrayStorage;
      sub_10008A458(v54);
      v55 = v105;
      sub_10000682C(&v116);
    }
    else
    {
      sub_100008758((uint64_t)&v112, &qword_10048E890);
      v55 = _swiftEmptyArrayStorage;
      v36 = (_QWORD *)a1;
      v45 = (uint64_t)v96;
    }
    v56 = v36[3];
    v57 = v36[4];
    v58 = sub_10000ABC8(v36, v56);
    v19 = (char *)&v91;
    __chkstk_darwin(v58);
    v60 = (char *)&v91 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v61 + 16))(v60);
    sub_1000244B0(v101, (uint64_t)v106);
    sub_100014A7C(v97, v45, &qword_10048D8E8);
    v90 = v45;
    v62 = (uint64_t)v60;
    v63 = v104;
    v22 = v99;
    a1 = v100;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v62, v104, (void *)a6, (uint64_t)v106, v102, v103, (uint64_t)v99, v100, (unint64_t (**)())&v116, v90, v56, v57);
    v64 = v119;
    v65 = *(_OWORD *)(v16 + 136);
    v101 = *(_OWORD *)(v16 + 152);
    v102 = v65;
    *(_QWORD *)&v106[0] = v116;
    *(_OWORD *)((char *)v106 + 8) = v65;
    *(_OWORD *)((char *)&v106[1] + 8) = v101;
    *((_QWORD *)&v106[2] + 1) = v119;
    LOBYTE(v107) = 5;
    *((_QWORD *)&v107 + 1) = sub_10000F930;
    *(_QWORD *)&v108 = 0;
    *((_QWORD *)&v108 + 1) = 0x4014000000000000;
    *(_QWORD *)&v109 = &unk_10048EFC0;
    *((_QWORD *)&v109 + 1) = 0;
    *(_QWORD *)&v110 = &unk_10048EFC8;
    *((_QWORD *)&v110 + 1) = 0;
    swift_retain(v63);
    v66 = (id)a6;
    swift_bridgeObjectRetain();
    sub_1000516E4((uint64_t)v22, a1);
    v67 = sub_100040D58((uint64_t)v106);
    swift_release(v64);
    swift_release(v101);
    swift_release(v102);
    v68 = sub_100005574(&qword_10048E948);
    v69 = (_QWORD *)swift_allocObject(v68, 56, 7);
    v16 = v98;
    v69[4] = v98;
    a3 = (uint64_t)(v69 + 4);
    v69[5] = v55;
    v69[6] = v67;
    v70 = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
    v71 = sub_10003E074(0, v70, 1, _swiftEmptyArrayStorage);
    a4 = v71;
    if (*((_QWORD *)v16 + 2))
    {
      v72 = v71[2];
      if ((v71[3] >> 1) - v72 < v70)
        goto LABEL_44;
      v73 = (uint64_t)&v71[11 * v72 + 4];
      v74 = sub_100005574(&qword_10048E860);
      result = swift_arrayInitWithCopy(v73, v16 + 32, v70, v74);
      if (v70)
      {
        v76 = a4[2];
        v77 = __OFADD__(v76, v70);
        v78 = v76 + v70;
        if (v77)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v78;
      }
    }
    else if (v70)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease(v16);
    v79 = v69[5];
    v19 = *(char **)(v79 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19)
          goto LABEL_17;
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16)
      v83 = (int64_t)&v19[a6];
    else
      v83 = a6;
    a4 = sub_10003E074((_QWORD *)1, v83, 1, a4);
    a6 = a4[2];
    if (*(_QWORD *)(v79 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19)
        goto LABEL_45;
      v80 = sub_100005574(&qword_10048E860);
      result = swift_arrayInitWithCopy(&a4[11 * a6 + 4], v79 + 32, v19, v80);
      if (v19)
      {
        v81 = a4[2];
        v77 = __OFADD__(v81, v19);
        v82 = &v19[v81];
        if (v77)
          goto LABEL_49;
        a4[2] = v82;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19)
      goto LABEL_42;
LABEL_27:
    swift_bridgeObjectRelease(v79);
    v84 = v69[6];
    v19 = *(char **)(v84 + 16);
    a6 = a4[2];
    v16 = &v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19)
          goto LABEL_39;
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16)
      v88 = (int64_t)&v19[a6];
    else
      v88 = a6;
    a4 = sub_10003E074((_QWORD *)1, v88, 1, a4);
    a6 = a4[2];
    if (!*(_QWORD *)(v84 + 16))
    {
LABEL_39:
      if (!v19)
        goto LABEL_40;
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19)
      break;
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once(&qword_10048C658, sub_1000B3BEC);
  }
  v85 = sub_100005574(&qword_10048E860);
  result = swift_arrayInitWithCopy(&a4[11 * a6 + 4], v84 + 32, v19, v85);
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease(v84);
    swift_setDeallocating(v69);
    v89 = sub_100005574(&qword_10048E950);
    swift_arrayDestroy(a3, 3, v89);
    swift_deallocClassInstance(v69, 32, 7);
    return (uint64_t)a4;
  }
  v86 = a4[2];
  v77 = __OFADD__(v86, v19);
  v87 = &v19[v86];
  if (!v77)
  {
    a4[2] = v87;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __int128 v10;
  __n128 result;
  _OWORD v12[5];

  sub_1000511E4(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

_QWORD *sub_100046230(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  unint64_t (*v90)();
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[8];
  _BYTE v96[136];
  uint64_t v97;
  _QWORD v98[8];
  _BYTE v99[136];
  uint64_t v100;
  _QWORD v101[8];
  _BYTE v102[136];
  _BYTE v103[16];
  id v104;
  _BYTE v105[16];
  id v106;
  _BYTE v107[16];
  id v108;
  unint64_t (*v109)();
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  char v113;
  uint64_t (*v114)(uint64_t (**)(void));
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;

  v85 = a6;
  v86 = a8;
  v88 = a7;
  v89 = (_QWORD *)a4;
  v80 = a5;
  v87 = a9;
  v13 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v13);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v84 = a1[4];
  v17 = sub_10000ABC8(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  v21 = a8;
  v22 = (uint64_t)v15;
  sub_100014A7C(v21, (uint64_t)v15, &qword_10048D8E8);
  v23 = a2;
  v24 = a3;
  v25 = v80;
  swift_bridgeObjectRetain();
  v26 = v85;
  v27 = v88;
  sub_1000516E4(v85, v88);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, (uint64_t)v23, (uint64_t)v24, (uint64_t)v89, v25, v26, v27, v22, &v90, v16, v84);
  v28 = v93;
  v83 = v91;
  v110 = v91;
  v82 = v92;
  v111 = v92;
  v109 = v90;
  v112 = v93;
  v113 = 23;
  v114 = sub_10005B6C0;
  v115 = 0;
  v116 = 0x4014000000000000;
  v117 = &unk_10048EFF8;
  v118 = 0;
  v119 = &unk_10048F000;
  v120 = 0;
  v84 = sub_100040E9C((uint64_t)&v109);
  swift_release(v28);
  swift_release(v82);
  swift_release(v83);
  v29 = a1[3];
  *(_QWORD *)&v83 = a1[4];
  v30 = sub_10000ABC8(a1, v29);
  __chkstk_darwin(v30);
  v32 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000244B0(v87, (uint64_t)v102);
  sub_100014A7C(v86, v22, &qword_10048D8E8);
  v34 = v23;
  v35 = v24;
  *(_QWORD *)&v82 = v35;
  swift_bridgeObjectRetain();
  v36 = v85;
  v37 = v88;
  sub_1000516E4(v85, v88);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v32, v34, (uint64_t)v35, (uint64_t)v102, (uint64_t)v89, v25, v36, &v94, v37, v22, v29, v83);
  sub_10006422C(&v94, (uint64_t)v96);
  sub_1000525F4(&v94, &v108);
  sub_100052630(&v108);
  sub_1000149A8((uint64_t)v95, (uint64_t)v107, &qword_10048E9F8);
  sub_100052668((uint64_t)v107);
  swift_release(v95[3]);
  swift_release(v95[5]);
  swift_release(v95[7]);
  *(_QWORD *)&v83 = sub_100040FE0((uint64_t)v96);
  sub_100052690((uint64_t)v96);
  v38 = a1[3];
  v79 = a1[4];
  v39 = sub_10000ABC8(a1, v38);
  __chkstk_darwin(v39);
  v41 = (char *)&v78 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_1000244B0(v87, (uint64_t)v102);
  v43 = v22;
  v81 = v22;
  sub_100014A7C(v86, v22, &qword_10048D8E8);
  v44 = v34;
  v45 = (id)v82;
  v46 = v25;
  swift_bridgeObjectRetain();
  v47 = v88;
  sub_1000516E4(v36, v88);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v41, v44, (uint64_t)v45, (uint64_t)v102, (uint64_t)v89, v46, v36, &v97, v47, v43, v38, v79);
  sub_10006422C(&v97, (uint64_t)v99);
  sub_1000525F4(&v97, &v106);
  sub_100052630(&v106);
  sub_1000149A8((uint64_t)v98, (uint64_t)v105, &qword_10048E9F8);
  sub_100052668((uint64_t)v105);
  swift_release(v98[3]);
  swift_release(v98[5]);
  swift_release(v98[7]);
  *(_QWORD *)&v82 = sub_100040FE0((uint64_t)v99);
  sub_100052690((uint64_t)v99);
  v49 = a1[3];
  v48 = a1[4];
  v50 = sub_10000ABC8(a1, v49);
  __chkstk_darwin(v50);
  v52 = (char *)&v78 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v53 + 16))(v52);
  sub_1000244B0(v87, (uint64_t)v102);
  v54 = v81;
  sub_100014A7C(v86, v81, &qword_10048D8E8);
  v55 = v44;
  v56 = v45;
  swift_bridgeObjectRetain();
  v57 = v85;
  v58 = v88;
  sub_1000516E4(v85, v88);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v52, v55, (uint64_t)v56, (uint64_t)v102, (uint64_t)v89, v46, v57, &v100, v58, v54, v49, v48);
  sub_10006422C(&v100, (uint64_t)v102);
  sub_1000525F4(&v100, &v104);
  sub_100052630(&v104);
  sub_1000149A8((uint64_t)v101, (uint64_t)v103, &qword_10048E9F8);
  sub_100052668((uint64_t)v103);
  swift_release(v101[3]);
  swift_release(v101[5]);
  swift_release(v101[7]);
  v59 = sub_100040FE0((uint64_t)v102);
  sub_100052690((uint64_t)v102);
  v60 = sub_100005574(&qword_10048E948);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v84;
  v89 = result + 4;
  v63 = v82;
  result[5] = v83;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_10003E074(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        v73 = sub_100005574(&qword_10048E860);
        result = (_QWORD *)swift_arrayInitWithCopy(v72, v66 + 32, v67, v73);
        if (v67)
        {
          v74 = v64[2];
          v75 = __OFADD__(v74, v67);
          v76 = v74 + v67;
          if (v75)
            goto LABEL_21;
          v64[2] = v76;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v77 = sub_100005574(&qword_10048E950);
      swift_arrayDestroy(v89, 4, v77);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  __int128 v51[3];

  v46 = a5;
  v47 = a6;
  v42 = a3;
  v44 = a8;
  v45 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10048D8E8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0(a1, (uint64_t)v51);
  v21 = sub_100005574(&qword_10048E898);
  v43 = String.init<A>(describing:)(v51, v21);
  v23 = v22;
  sub_1000244B0(a1, (uint64_t)v51);
  sub_100014A7C(a4, (uint64_t)v50, &qword_10048D958);
  sub_100014A7C(a10, (uint64_t)v20, &qword_10048D8E8);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 144) & ~v24;
  v26 = (_QWORD *)swift_allocObject(&unk_100442710, v25 + v19, v24 | 7);
  sub_1000137C8(v51, (uint64_t)(v26 + 2));
  v27 = v42;
  v26[7] = a2;
  v26[8] = v27;
  sub_1000149A8((uint64_t)v50, (uint64_t)(v26 + 9), &qword_10048D958);
  v28 = v47;
  v26[14] = v46;
  v26[15] = v28;
  v29 = (uint64_t)v26 + v25;
  v31 = v44;
  v30 = v45;
  v26[16] = v44;
  v26[17] = v30;
  sub_1000149A8((uint64_t)v20, v29, &qword_10048D8E8);
  v32 = a2;
  v33 = v27;
  swift_bridgeObjectRetain();
  sub_1000516E4(v31, v30);
  v34 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v35 = UUID.uuidString.getter(v34);
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v38._countAndFlagsBits = v43;
  v38._object = v23;
  String.append(_:)(v38);
  result = swift_bridgeObjectRelease(v23);
  v40 = v51[0];
  *(_QWORD *)a7 = v35;
  *(_QWORD *)(a7 + 8) = v37;
  *(_OWORD *)(a7 + 16) = v40;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 40) = 0xE000000000000000;
  *(_QWORD *)(a7 + 48) = 0;
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = sub_100051690;
  *(_QWORD *)(a7 + 72) = v26;
  return result;
}

_QWORD *sub_100046BC4(_QWORD *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *result;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  int64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD v92[8];
  _BYTE v93[136];
  uint64_t v94;
  _QWORD v95[8];
  _BYTE v96[136];
  uint64_t v97;
  _QWORD v98[8];
  _BYTE v99[136];
  uint64_t v100;
  _QWORD v101[8];
  _BYTE v102[136];
  _BYTE v103[16];
  id v104;
  _BYTE v105[16];
  id v106;
  _BYTE v107[16];
  id v108;
  _BYTE v109[16];
  id v110[2];

  v86 = a8;
  v87 = a4;
  v89 = a7;
  v90 = (_QWORD *)a5;
  v80 = a6;
  v88 = a9;
  v13 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v85 = a1[4];
  v17 = sub_10000ABC8(a1, v16);
  __chkstk_darwin(v17);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  sub_100014A7C(a4, (uint64_t)v102, &qword_10048D958);
  sub_100014A7C(a9, (uint64_t)v15, &qword_10048D8E8);
  v21 = a2;
  v22 = a3;
  v23 = v80;
  swift_bridgeObjectRetain();
  v24 = v89;
  v25 = v86;
  sub_1000516E4(v89, v86);
  v78 = v25;
  v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v102, (uint64_t)v90, v23, v24, &v91, v78, (uint64_t)v15, v16, v85);
  sub_10006422C(&v91, (uint64_t)v93);
  sub_1000525F4(&v91, v110);
  sub_100052630(v110);
  sub_1000149A8((uint64_t)v92, (uint64_t)v109, &qword_10048E9F8);
  sub_100052668((uint64_t)v109);
  swift_release(v92[3]);
  swift_release(v92[5]);
  swift_release(v92[7]);
  v85 = sub_100040FE0((uint64_t)v93);
  sub_100052690((uint64_t)v93);
  v27 = a1[3];
  v84 = a1[4];
  v28 = sub_10000ABC8(a1, v27);
  __chkstk_darwin(v28);
  v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_100014A7C(v87, (uint64_t)v102, &qword_10048D958);
  v32 = (uint64_t)v15;
  sub_100014A7C(v88, (uint64_t)v15, &qword_10048D8E8);
  v33 = v21;
  v34 = v26;
  v35 = v23;
  swift_bridgeObjectRetain();
  v36 = v89;
  v37 = v86;
  sub_1000516E4(v89, v86);
  v79 = v37;
  v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v102, (uint64_t)v90, v35, v36, &v94, v79, v32, v27, v84);
  sub_10006422C(&v94, (uint64_t)v96);
  sub_1000525F4(&v94, &v108);
  sub_100052630(&v108);
  sub_1000149A8((uint64_t)v95, (uint64_t)v107, &qword_10048E9F8);
  sub_100052668((uint64_t)v107);
  swift_release(v95[3]);
  swift_release(v95[5]);
  swift_release(v95[7]);
  v84 = sub_100040FE0((uint64_t)v96);
  sub_100052690((uint64_t)v96);
  v39 = a1[3];
  v83 = a1[4];
  v40 = sub_10000ABC8(a1, v39);
  __chkstk_darwin(v40);
  v42 = (char *)&v80 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_100014A7C(v87, (uint64_t)v102, &qword_10048D958);
  v44 = v32;
  sub_100014A7C(v88, v32, &qword_10048D8E8);
  v45 = v38;
  v81 = v45;
  v46 = v34;
  v82 = v46;
  v47 = v35;
  swift_bridgeObjectRetain();
  v48 = v89;
  v49 = v86;
  sub_1000516E4(v89, v86);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v102, (uint64_t)v90, v47, v48, &v97, v49, v44, v39, v83);
  sub_10006422C(&v97, (uint64_t)v99);
  sub_1000525F4(&v97, &v106);
  sub_100052630(&v106);
  sub_1000149A8((uint64_t)v98, (uint64_t)v105, &qword_10048E9F8);
  sub_100052668((uint64_t)v105);
  swift_release(v98[3]);
  swift_release(v98[5]);
  swift_release(v98[7]);
  v83 = sub_100040FE0((uint64_t)v99);
  sub_100052690((uint64_t)v99);
  v51 = a1[3];
  v50 = a1[4];
  v52 = sub_10000ABC8(a1, v51);
  __chkstk_darwin(v52);
  v54 = (char *)&v80 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  sub_100014A7C(v87, (uint64_t)v102, &qword_10048D958);
  sub_100014A7C(v88, v44, &qword_10048D8E8);
  v56 = v81;
  v57 = v82;
  swift_bridgeObjectRetain();
  v58 = v89;
  sub_1000516E4(v89, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v102, (uint64_t)v90, v47, v58, &v100, v49, v44, v51, v50);
  sub_10006422C(&v100, (uint64_t)v102);
  sub_1000525F4(&v100, &v104);
  sub_100052630(&v104);
  sub_1000149A8((uint64_t)v101, (uint64_t)v103, &qword_10048E9F8);
  sub_100052668((uint64_t)v103);
  swift_release(v101[3]);
  swift_release(v101[5]);
  swift_release(v101[7]);
  v59 = sub_100040FE0((uint64_t)v102);
  sub_100052690((uint64_t)v102);
  v60 = sub_100005574(&qword_10048E948);
  result = (_QWORD *)swift_allocObject(v60, 64, 7);
  v62 = result;
  result[4] = v85;
  v90 = result + 4;
  v63 = v83;
  result[5] = v84;
  result[6] = v63;
  result[7] = v59;
  v64 = _swiftEmptyArrayStorage;
  v65 = 4;
  while (1)
  {
    v66 = v62[v65];
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v64[2];
    v69 = v68 + v67;
    if (__OFADD__(v68, v67))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v64);
    if ((_DWORD)result && v69 <= v64[3] >> 1)
    {
      if (*(_QWORD *)(v66 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v68 <= v69)
        v70 = v68 + v67;
      else
        v70 = v68;
      result = sub_10003E074(result, v70, 1, v64);
      v64 = result;
      if (*(_QWORD *)(v66 + 16))
      {
LABEL_13:
        v71 = v64[2];
        if ((v64[3] >> 1) - v71 < v67)
          goto LABEL_20;
        v72 = (uint64_t)&v64[11 * v71 + 4];
        v73 = sub_100005574(&qword_10048E860);
        result = (_QWORD *)swift_arrayInitWithCopy(v72, v66 + 32, v67, v73);
        if (v67)
        {
          v74 = v64[2];
          v75 = __OFADD__(v74, v67);
          v76 = v74 + v67;
          if (v75)
            goto LABEL_21;
          v64[2] = v76;
        }
        goto LABEL_3;
      }
    }
    if (v67)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v66);
    if (++v65 == 8)
    {
      swift_setDeallocating(v62);
      v77 = sub_100005574(&qword_10048E950);
      swift_arrayDestroy(v90, 4, v77);
      swift_deallocClassInstance(v62, 32, 7);
      return v64;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100047330(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  int64_t v100;
  char *v101;
  int64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  int64_t v133;
  uint64_t result;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  int64_t v146;
  int64_t v147;
  int64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  _QWORD *v163;
  _QWORD *v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  _OWORD v168[12];
  uint64_t v169;
  __int128 v170[3];
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  _OWORD v175[5];
  uint64_t v176;
  __int128 v177[3];
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  __int128 v188[3];
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  _BYTE v193[25];
  char v194;
  unint64_t (*v195)(uint64_t (**)(void));
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  _OWORD v202[4];
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215[2];
  _OWORD v216[4];
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  _OWORD v221[8];
  _OWORD v222[9];

  *(_QWORD *)&v166 = a6;
  *(_QWORD *)&v167 = a5;
  v164 = a4;
  v13 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v13);
  v165 = (uint64_t)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004113C(a1);
  v16 = v15;
  v17 = _swiftEmptyArrayStorage;
  if ((a2 & 1) != 0)
  {
    v156 = a7;
    v157 = a8;
    v158 = v15;
    v18 = a3[3];
    *(_QWORD *)&v162 = a3[4];
    *(_QWORD *)&v161 = a3[5];
    v19 = sub_10000ABC8(a3, v18);
    v20 = v164[3];
    *(_QWORD *)&v160 = v164[4];
    v21 = sub_10000ABC8(v164, v20);
    *(_QWORD *)&v159 = &v155;
    __chkstk_darwin(v21);
    v163 = a3;
    v23 = (char *)&v155 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    v27 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v28 + 16))(v27, v21, v20);
    v29 = v165;
    sub_100014A7C(v166, v165, &qword_10048D8E8);
    v30 = v167;
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v167, (uint64_t)v27, v29, v18, v20, v162, v161, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))v216, v160);
    v31 = *(_QWORD *)&v216[0];
    v32 = *((_QWORD *)&v216[3] + 1);
    v160 = *(_OWORD *)((char *)v216 + 8);
    v161 = *(_OWORD *)((char *)&v216[1] + 8);
    v162 = *(_OWORD *)((char *)&v216[2] + 8);
    v33 = (_OWORD *)swift_allocObject(&unk_100442CC8, 80, 7);
    v34 = v216[1];
    v33[1] = v216[0];
    v33[2] = v34;
    v35 = v216[3];
    v33[3] = v216[2];
    v33[4] = v35;
    *(_OWORD *)((char *)v202 + 8) = v160;
    *(_OWORD *)((char *)&v202[1] + 8) = v161;
    *(_OWORD *)((char *)&v202[2] + 8) = v162;
    *(_QWORD *)&v202[0] = v31;
    *((_QWORD *)&v202[3] + 1) = v32;
    LOBYTE(v203) = 8;
    *((_QWORD *)&v203 + 1) = sub_10001B5F0;
    *(_QWORD *)&v204 = v33;
    *((_QWORD *)&v204 + 1) = 0x4014000000000000;
    *(_QWORD *)&v205 = &unk_10048DBD8;
    *((_QWORD *)&v205 + 1) = 0;
    *(_QWORD *)&v206 = &unk_10048DBE0;
    *((_QWORD *)&v206 + 1) = 0;
    v222[2] = v202[2];
    v222[3] = v202[3];
    v222[0] = v202[0];
    v222[1] = v202[1];
    v222[4] = v203;
    v222[5] = v204;
    v222[6] = v205;
    v222[7] = v206;
    swift_retain(v30);
    swift_retain(v160);
    swift_retain(v161);
    swift_retain(v162);
    swift_retain(v32);
    *(_QWORD *)&v162 = sub_100041280((uint64_t)v222);
    sub_100054A68(v202, (void (*)(uint64_t))&_swift_release);
    v36 = v163;
    v37 = v163[3];
    v38 = v163[4];
    v39 = v163[5];
    v40 = sub_10000ABC8(v163, v37);
    __chkstk_darwin(v40);
    v42 = (char *)&v155 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    v44 = v165;
    sub_100014A7C(v166, v165, &qword_10048D8E8);
    v45 = (uint64_t)v42;
    v46 = v167;
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v45, v167, v44, v37, v38, v39, (uint64_t (**)())&v217);
    v207 = v217;
    v208 = v218;
    v209 = v219;
    v210 = v220;
    LOBYTE(v211) = 40;
    *((_QWORD *)&v211 + 1) = sub_1000253EC;
    *(_QWORD *)&v212 = 0;
    *((_QWORD *)&v212 + 1) = 0x4014000000000000;
    *(_QWORD *)&v213 = &unk_10048DE20;
    *((_QWORD *)&v213 + 1) = 0;
    *(_QWORD *)&v214 = &unk_10048DE28;
    *((_QWORD *)&v214 + 1) = 0;
    v221[4] = v211;
    v221[5] = v212;
    v221[6] = v213;
    v221[7] = v214;
    v221[0] = v217;
    v221[1] = v218;
    v221[2] = v219;
    v221[3] = v220;
    swift_retain(v46);
    *(_QWORD *)&v161 = sub_1000413C4((uint64_t)v221);
    sub_100054A68(&v207, (void (*)(uint64_t))&_swift_release);
    v47 = v36[3];
    *(_QWORD *)&v160 = v36[4];
    *(_QWORD *)&v159 = v36[5];
    v48 = sub_10000ABC8(v36, v47);
    v50 = v164[3];
    v49 = v164[4];
    v51 = sub_10000ABC8(v164, v50);
    __chkstk_darwin(v51);
    v53 = (char *)&v155 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    v55 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v54 + 16))(v53, v48, v47);
    __chkstk_darwin(v55);
    v57 = (char *)&v155 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, _QWORD *, uint64_t))(v58 + 16))(v57, v51, v50);
    v59 = v165;
    sub_100014A7C(v166, v165, &qword_10048D8E8);
    v60 = (uint64_t (*)())v167;
    swift_retain(v167);
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v53, (uint64_t)v57, v60, v59, v47, v50, v160, v159, (uint64_t (**)())v177, v49);
    sub_100020270((uint64_t)v177, (uint64_t)v170);
    v61 = 4;
    v62 = swift_allocObject(&unk_100442CF0, 32, 7);
    *(_QWORD *)(v62 + 16) = &unk_10048DC40;
    *(_QWORD *)(v62 + 24) = 0;
    v194 = 39;
    v191 = v173;
    v192 = v174;
    *(_OWORD *)v193 = v175[0];
    *(_OWORD *)&v193[9] = *(_OWORD *)((char *)v175 + 9);
    v188[2] = v170[2];
    v189 = v171;
    v190 = v172;
    v188[0] = v170[0];
    v188[1] = v170[1];
    v195 = sub_10001D2A8;
    v196 = 0;
    v197 = 0x403E000000000000;
    v198 = &unk_10048DC58;
    v199 = v62;
    v200 = &unk_10048DC48;
    v201 = 0;
    sub_1000210EC(v177);
    v63 = sub_100005574(&qword_10048E858);
    v64 = swift_allocObject(v63, 120, 7);
    *(_OWORD *)(v64 + 16) = xmmword_100384A80;
    LOBYTE(v57) = v194;
    sub_100014A7C((uint64_t)v188, (uint64_t)v177, &qword_10048DCF0);
    v65 = swift_allocObject(&unk_100442D18, 216, 7);
    v66 = v186;
    *(_OWORD *)(v65 + 176) = v185;
    *(_OWORD *)(v65 + 192) = v66;
    *(_QWORD *)(v65 + 208) = v187;
    v67 = v182;
    *(_OWORD *)(v65 + 112) = v181;
    *(_OWORD *)(v65 + 128) = v67;
    v68 = v184;
    *(_OWORD *)(v65 + 144) = v183;
    *(_OWORD *)(v65 + 160) = v68;
    v69 = v178;
    *(_OWORD *)(v65 + 48) = v177[2];
    *(_OWORD *)(v65 + 64) = v69;
    v70 = v180;
    *(_OWORD *)(v65 + 80) = v179;
    *(_OWORD *)(v65 + 96) = v70;
    v71 = v177[1];
    *(_OWORD *)(v65 + 16) = v177[0];
    *(_OWORD *)(v65 + 32) = v71;
    sub_100014A7C((uint64_t)v188, (uint64_t)v170, &qword_10048DCF0);
    v72 = swift_allocObject(&unk_100442D40, 216, 7);
    v73 = v175[4];
    *(_OWORD *)(v72 + 176) = v175[3];
    *(_OWORD *)(v72 + 192) = v73;
    *(_QWORD *)(v72 + 208) = v176;
    v74 = v175[0];
    *(_OWORD *)(v72 + 112) = v174;
    *(_OWORD *)(v72 + 128) = v74;
    v75 = v175[2];
    *(_OWORD *)(v72 + 144) = v175[1];
    *(_OWORD *)(v72 + 160) = v75;
    v76 = v171;
    *(_OWORD *)(v72 + 48) = v170[2];
    *(_OWORD *)(v72 + 64) = v76;
    v77 = v173;
    *(_OWORD *)(v72 + 80) = v172;
    *(_OWORD *)(v72 + 96) = v77;
    v78 = v170[1];
    *(_OWORD *)(v72 + 16) = v170[0];
    *(_OWORD *)(v72 + 32) = v78;
    sub_100014A7C((uint64_t)v188, (uint64_t)v168, &qword_10048DCF0);
    v79 = swift_allocObject(&unk_100442D68, 216, 7);
    v80 = v168[11];
    *(_OWORD *)(v79 + 176) = v168[10];
    *(_OWORD *)(v79 + 192) = v80;
    *(_QWORD *)(v79 + 208) = v169;
    v81 = v168[7];
    *(_OWORD *)(v79 + 112) = v168[6];
    *(_OWORD *)(v79 + 128) = v81;
    v82 = v168[9];
    *(_OWORD *)(v79 + 144) = v168[8];
    *(_OWORD *)(v79 + 160) = v82;
    v83 = v168[3];
    *(_OWORD *)(v79 + 48) = v168[2];
    *(_OWORD *)(v79 + 64) = v83;
    v84 = v168[5];
    *(_OWORD *)(v79 + 80) = v168[4];
    *(_OWORD *)(v79 + 96) = v84;
    v85 = v168[1];
    *(_OWORD *)(v79 + 16) = v168[0];
    *(_OWORD *)(v79 + 32) = v85;
    *(_BYTE *)(v64 + 32) = (_BYTE)v57;
    *(_QWORD *)(v64 + 40) = sub_100052F94;
    *(_QWORD *)(v64 + 48) = v65;
    *(_QWORD *)(v64 + 56) = sub_100053058;
    *(_QWORD *)(v64 + 64) = v72;
    *(_QWORD *)(v64 + 72) = &unk_10048EA40;
    *(_QWORD *)(v64 + 80) = v79;
    *(_BYTE *)(v64 + 112) = 0;
    sub_100008758((uint64_t)v188, &qword_10048DCF0);
    v86 = v163[3];
    v87 = v163[4];
    v88 = v163[5];
    v89 = sub_10000ABC8(v163, v86);
    __chkstk_darwin(v89);
    v91 = (char *)&v155 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v92 + 16))(v91);
    sub_1000244B0((uint64_t)v164, (uint64_t)v188);
    v93 = v59;
    sub_100014A7C(v166, v59, &qword_10048D8E8);
    v94 = v167;
    swift_retain(v167);
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v91, v94, v188, v93, v86, v87, v88, (unint64_t (**)())v168);
    v95 = *((_QWORD *)&v168[2] + 1);
    v159 = *(_OWORD *)((char *)&v168[1] + 8);
    v160 = *(_OWORD *)((char *)v168 + 8);
    *(__int128 *)((char *)v188 + 8) = *(_OWORD *)((char *)v168 + 8);
    *(__int128 *)((char *)&v188[1] + 8) = *(_OWORD *)((char *)&v168[1] + 8);
    *(_QWORD *)&v188[0] = *(_QWORD *)&v168[0];
    *((_QWORD *)&v188[2] + 1) = *((_QWORD *)&v168[2] + 1);
    LOBYTE(v189) = 9;
    *((_QWORD *)&v189 + 1) = sub_10000F930;
    *(_QWORD *)&v190 = 0;
    *((_QWORD *)&v190 + 1) = 0x4014000000000000;
    *(_QWORD *)&v191 = &unk_10048DD30;
    *((_QWORD *)&v191 + 1) = 0;
    *(_QWORD *)&v192 = &unk_10048DD38;
    *((_QWORD *)&v192 + 1) = 0;
    v96 = sub_100041508((uint64_t)v188);
    swift_release(v95);
    swift_release(v159);
    swift_release(v160);
    v97 = sub_100005574(&qword_10048E948);
    v98 = (_QWORD *)swift_allocObject(v97, 64, 7);
    v98[4] = v162;
    *(_QWORD *)&v160 = v98 + 4;
    v98[5] = v161;
    v98[6] = v64;
    v98[7] = v96;
    v17 = _swiftEmptyArrayStorage;
    v99 = 88;
    v100 = (int64_t)&qword_10048E860;
    while (1)
    {
      v101 = (char *)v98[v61];
      v102 = *((_QWORD *)v101 + 2);
      v103 = (_QWORD *)v17[2];
      v104 = (_QWORD *)((char *)v103 + v102);
      if (__OFADD__(v103, v102))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v17);
      if ((_DWORD)isUniquelyReferenced_nonNull_native && (uint64_t)v104 <= v17[3] >> 1)
      {
        if (*((_QWORD *)v101 + 2))
          goto LABEL_14;
      }
      else
      {
        if ((uint64_t)v103 <= (uint64_t)v104)
          v106 = (int64_t)v103 + v102;
        else
          v106 = (int64_t)v103;
        v17 = sub_10003E074(isUniquelyReferenced_nonNull_native, v106, 1, v17);
        if (*((_QWORD *)v101 + 2))
        {
LABEL_14:
          v107 = v17[2];
          if ((v17[3] >> 1) - v107 < v102)
            goto LABEL_40;
          v103 = &v17[11 * v107 + 4];
          v104 = v101 + 32;
          v108 = sub_100005574(&qword_10048E860);
          swift_arrayInitWithCopy(v103, v101 + 32, v102, v108);
          if (v102)
          {
            v109 = v17[2];
            v110 = __OFADD__(v109, v102);
            v111 = v109 + v102;
            if (v110)
              goto LABEL_41;
            v17[2] = v111;
          }
          goto LABEL_4;
        }
      }
      if (v102)
        goto LABEL_39;
LABEL_4:
      swift_bridgeObjectRelease(v101);
      if (++v61 == 8)
      {
        swift_setDeallocating(v98);
        v112 = sub_100005574(&qword_10048E950);
        swift_arrayDestroy(v160, 4, v112);
        swift_deallocClassInstance(v98, 32, 7);
        a8 = v157;
        v16 = v158;
        a7 = v156;
        a3 = v163;
        break;
      }
    }
  }
  sub_100052C84((uint64_t)a3, (uint64_t)v177);
  v113 = sub_100005574(&qword_10048EA20);
  v114 = sub_100005574(&qword_10048EA28);
  if (swift_dynamicCast(v170, v177, v113, v114, 6))
  {
    sub_100051EA0(v170, &v207);
    sub_100014A7C(a7, (uint64_t)v177, &qword_10048E888);
    if (*((_QWORD *)&v177[1] + 1))
    {
      sub_1000137C8(v177, (uint64_t)v202);
      v115 = *((_QWORD *)&v208 + 1);
      *(_QWORD *)&v162 = *((_QWORD *)&v209 + 1);
      v163 = (_QWORD *)v209;
      v116 = sub_10000ABC8(&v207, *((uint64_t *)&v208 + 1));
      v117 = *((_QWORD *)&v202[1] + 1);
      *(_QWORD *)&v160 = *(_QWORD *)&v202[2];
      v118 = sub_10000ABC8(v202, *((uint64_t *)&v202[1] + 1));
      *(_QWORD *)&v161 = &v155;
      __chkstk_darwin(v118);
      v120 = (char *)&v155 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
      v122 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v121 + 16))(v120, v116, v115);
      __chkstk_darwin(v122);
      v124 = (char *)&v155 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, _QWORD *, uint64_t))(v125 + 16))(v124, v118, v117);
      sub_1000244B0((uint64_t)v164, (uint64_t)v215);
      sub_100014A7C(a8, (uint64_t)v177, &qword_10048D950);
      v126 = v165;
      sub_100014A7C(v166, v165, &qword_10048D8E8);
      v127 = v167;
      swift_retain(v167);
      sub_100019970(v120, v127, (uint64_t)v124, v215, (uint64_t)v177, v126, v115, v117, (unint64_t (**)())v170, (uint64_t)v163, v162, v160);
      v128 = *(_QWORD *)&v170[0];
      v129 = *((_QWORD *)&v170[2] + 1);
      swift_release(v127);
      v166 = *(__int128 *)((char *)&v170[1] + 8);
      v167 = *(__int128 *)((char *)v170 + 8);
      *(__int128 *)((char *)v177 + 8) = *(__int128 *)((char *)v170 + 8);
      *(__int128 *)((char *)&v177[1] + 8) = *(__int128 *)((char *)&v170[1] + 8);
      *(_QWORD *)&v177[0] = v128;
      *((_QWORD *)&v177[2] + 1) = v129;
      LOBYTE(v178) = 2;
      *((_QWORD *)&v178 + 1) = sub_10000F930;
      *(_QWORD *)&v179 = 0;
      *((_QWORD *)&v179 + 1) = 0x4014000000000000;
      *(_QWORD *)&v180 = &unk_10048DA18;
      *((_QWORD *)&v180 + 1) = 0;
      *(_QWORD *)&v181 = &unk_10048DA20;
      *((_QWORD *)&v181 + 1) = 0;
      v130 = (_QWORD *)sub_10004164C((uint64_t)v177);
      swift_release(v129);
      swift_release(v166);
      swift_release(v167);
      *(_QWORD *)&v215[0] = _swiftEmptyArrayStorage;
      sub_10008A458(v130);
      v131 = *(_QWORD **)&v215[0];
      sub_10000682C(v202);
      sub_10000682C(&v207);
      goto LABEL_25;
    }
    sub_100008758((uint64_t)v177, &qword_10048E888);
    sub_10000682C(&v207);
  }
  else
  {
    memset(v170, 0, sizeof(v170));
    sub_100008758((uint64_t)v170, &qword_10048EA30);
  }
  v131 = _swiftEmptyArrayStorage;
LABEL_25:
  v132 = sub_100005574(&qword_10048E948);
  v103 = (_QWORD *)swift_allocObject(v132, 56, 7);
  v103[4] = v16;
  v104 = v103 + 4;
  v103[5] = v17;
  v103[6] = v131;
  v133 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_10003E074(0, v133, 1, _swiftEmptyArrayStorage);
  v99 = result;
  if (*(_QWORD *)(v16 + 16))
  {
    v135 = *(_QWORD *)(result + 16);
    if ((*(_QWORD *)(result + 24) >> 1) - v135 < v133)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    v136 = result + 88 * v135 + 32;
    v137 = sub_100005574(&qword_10048E860);
    result = swift_arrayInitWithCopy(v136, v16 + 32, v133, v137);
    if (v133)
    {
      v138 = *(_QWORD *)(v99 + 16);
      v110 = __OFADD__(v138, v133);
      v139 = v138 + v133;
      if (v110)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      *(_QWORD *)(v99 + 16) = v139;
    }
  }
  else if (v133)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease(v16);
  v102 = v17[2];
  v100 = *(_QWORD *)(v99 + 16);
  v101 = (char *)(v100 + v102);
  if (__OFADD__(v100, v102))
    goto LABEL_42;
  v140 = *(_QWORD *)(v99 + 24);
  result = swift_bridgeObjectRetain();
  if ((uint64_t)v101 > (uint64_t)(v140 >> 1))
  {
LABEL_43:
    if (v100 <= (uint64_t)v101)
      v144 = (int64_t)v101;
    else
      v144 = v100;
    result = (uint64_t)sub_10003E074((_QWORD *)1, v144, 1, (_QWORD *)v99);
    v99 = result;
    v100 = *(_QWORD *)(result + 16);
    if (v17[2])
      goto LABEL_34;
    goto LABEL_47;
  }
  if (!v102)
  {
LABEL_47:
    if (!v102)
      goto LABEL_48;
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v100 < v102)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v141 = sub_100005574(&qword_10048E860);
  result = swift_arrayInitWithCopy(v99 + 88 * v100 + 32, v17 + 4, v102, v141);
  if (v102)
  {
    v142 = *(_QWORD *)(v99 + 16);
    v110 = __OFADD__(v142, v102);
    v143 = v142 + v102;
    if (v110)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    *(_QWORD *)(v99 + 16) = v143;
  }
LABEL_48:
  swift_bridgeObjectRelease(v17);
  v145 = v103[6];
  v146 = *(_QWORD *)(v145 + 16);
  v147 = *(_QWORD *)(v99 + 16);
  v148 = v147 + v146;
  if (__OFADD__(v147, v146))
  {
    __break(1u);
  }
  else
  {
    v149 = *(_QWORD *)(v99 + 24);
    result = swift_bridgeObjectRetain();
    if (v148 <= (uint64_t)(v149 >> 1))
    {
      if (v146)
        goto LABEL_51;
      goto LABEL_60;
    }
  }
  if (v147 <= v148)
    v153 = v147 + v146;
  else
    v153 = v147;
  result = (uint64_t)sub_10003E074((_QWORD *)1, v153, 1, (_QWORD *)v99);
  v99 = result;
  v147 = *(_QWORD *)(result + 16);
  if (!*(_QWORD *)(v145 + 16))
  {
LABEL_60:
    if (!v146)
      goto LABEL_61;
    goto LABEL_64;
  }
LABEL_51:
  if ((*(_QWORD *)(v99 + 24) >> 1) - v147 < v146)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v150 = sub_100005574(&qword_10048E860);
  result = swift_arrayInitWithCopy(v99 + 88 * v147 + 32, v145 + 32, v146, v150);
  if (!v146)
  {
LABEL_61:
    swift_bridgeObjectRelease(v145);
    swift_setDeallocating(v103);
    v154 = sub_100005574(&qword_10048E950);
    swift_arrayDestroy(v104, 3, v154);
    swift_deallocClassInstance(v103, 32, 7);
    return v99;
  }
  v151 = *(_QWORD *)(v99 + 16);
  v110 = __OFADD__(v151, v146);
  v152 = v151 + v146;
  if (!v110)
  {
    *(_QWORD *)(v99 + 16) = v152;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

_QWORD *sub_100048344(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *result;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t (*v81)();
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t (*v85)();
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t (*v89)();
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t (*v93)();
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t (*v97)();
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char v101;
  uint64_t (*v102)(uint64_t (**)(void));
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t (*v109)();
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  char v113;
  uint64_t (*v114)(uint64_t (**)(void));
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t (*v121)();
  __int128 v122;
  __int128 v123;
  uint64_t v124;
  char v125;
  uint64_t (*v126)(uint64_t (**)(void));
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t (*v133)();
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  char v137;
  uint64_t (*v138)(uint64_t (**)(void));
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;

  v74 = a7;
  *(_QWORD *)&v75 = a8;
  v76 = a6;
  *(_QWORD *)&v77 = a5;
  v78 = a3;
  *(_QWORD *)&v80 = a2;
  v13 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  v18 = sub_10000ABC8(a1, v16);
  __chkstk_darwin(v18);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  sub_1000244B0(a3, (uint64_t)&v121);
  v22 = a4;
  sub_100014A7C(a4, (uint64_t)&v109, &qword_10048D958);
  sub_100014A7C(a5, (uint64_t)&v133, &qword_10048D950);
  sub_100014A7C(a6, (uint64_t)v15, &qword_10048D8E8);
  v23 = v80;
  v24 = v74;
  v25 = v75;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v20, v80, (__int128 *)&v121, (uint64_t)&v109, (uint64_t)&v133, (uint64_t)v15, v74, v75, &v81, v16, v17);
  v26 = v84;
  v73 = v82;
  v134 = v82;
  v72 = v83;
  v135 = v83;
  v133 = v81;
  v136 = v84;
  v137 = 10;
  v138 = sub_10005B6C0;
  v139 = 0;
  v140 = 0x4014000000000000;
  v141 = &unk_10048F658;
  v142 = 0;
  v143 = &unk_10048F660;
  v144 = 0;
  swift_retain(v23);
  sub_10003A434(v24, v25);
  v79 = sub_100041790((uint64_t)&v133);
  swift_release(v26);
  swift_release(v72);
  swift_release(v73);
  v27 = a1[3];
  v28 = a1[4];
  v29 = sub_10000ABC8(a1, v27);
  __chkstk_darwin(v29);
  v31 = (char *)&v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  sub_1000244B0(v78, (uint64_t)&v109);
  sub_100014A7C(v22, (uint64_t)&v97, &qword_10048D958);
  sub_100014A7C(v77, (uint64_t)&v121, &qword_10048D950);
  v33 = v76;
  sub_100014A7C(v76, (uint64_t)v15, &qword_10048D8E8);
  v34 = (uint64_t)v31;
  v35 = v80;
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v34, v80, (__int128 *)&v109, (uint64_t)&v97, (uint64_t)&v121, (uint64_t)v15, v24, v25, &v85, v27, v28);
  v36 = v88;
  v77 = v86;
  v122 = v86;
  v73 = v87;
  v123 = v87;
  v121 = v85;
  v124 = v88;
  v125 = 55;
  v126 = sub_10005B6C0;
  v127 = 0;
  v128 = 0x4014000000000000;
  v129 = &unk_10048F688;
  v130 = 0;
  v131 = &unk_10048F690;
  v132 = 0;
  swift_retain(v35);
  sub_10003A434(v24, v25);
  v78 = sub_1000418D4((uint64_t)&v121);
  swift_release(v36);
  swift_release(v73);
  swift_release(v77);
  v37 = a1[3];
  v38 = a1[4];
  v39 = sub_10000ABC8(a1, v37);
  __chkstk_darwin(v39);
  v41 = (char *)&v72 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v42 + 16))(v41);
  sub_100014A7C(v22, (uint64_t)&v109, &qword_10048D958);
  v43 = v33;
  sub_100014A7C(v33, (uint64_t)v15, &qword_10048D8E8);
  v44 = v80;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v41, v80, (uint64_t)&v109, (uint64_t)v15, v37, v38, &v89);
  v45 = v92;
  v77 = v90;
  v110 = v90;
  v75 = v91;
  v111 = v91;
  v113 = 54;
  v109 = v89;
  v112 = v92;
  v114 = sub_10000F930;
  v115 = 0;
  v116 = 0x4014000000000000;
  v117 = &unk_10048F6B8;
  v118 = 0;
  v119 = &unk_10048F6C0;
  v120 = 0;
  swift_retain(v44);
  v46 = sub_100041A18((uint64_t)&v109);
  swift_release(v45);
  swift_release(v75);
  swift_release(v77);
  v47 = a1[3];
  v48 = a1[4];
  v49 = sub_10000ABC8(a1, v47);
  __chkstk_darwin(v49);
  v51 = (char *)&v72 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v52 + 16))(v51);
  sub_100014A7C(v22, (uint64_t)&v97, &qword_10048D958);
  sub_100014A7C(v43, (uint64_t)v15, &qword_10048D8E8);
  swift_retain(v44);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v51, v44, (uint64_t)v15, v47, v48, &v93);
  v53 = v96;
  v80 = v94;
  v98 = v94;
  v77 = v95;
  v99 = v95;
  v97 = v93;
  v100 = v96;
  v101 = 56;
  v102 = sub_10005B6C0;
  v103 = 0;
  v104 = 0x4014000000000000;
  v105 = &unk_10048F6E8;
  v106 = 0;
  v107 = &unk_10048F6F0;
  v108 = 0;
  v54 = sub_100041B5C((uint64_t)&v97);
  swift_release(v53);
  swift_release(v77);
  swift_release(v80);
  v55 = sub_100005574(&qword_10048E948);
  result = (_QWORD *)swift_allocObject(v55, 64, 7);
  v57 = result;
  result[4] = v79;
  *(_QWORD *)&v80 = result + 4;
  result[5] = v78;
  result[6] = v46;
  result[7] = v54;
  v58 = _swiftEmptyArrayStorage;
  v59 = 4;
  while (1)
  {
    v60 = v57[v59];
    v61 = *(_QWORD *)(v60 + 16);
    v62 = v58[2];
    v63 = v62 + v61;
    if (__OFADD__(v62, v61))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v58);
    if ((_DWORD)result && v63 <= v58[3] >> 1)
    {
      if (*(_QWORD *)(v60 + 16))
        goto LABEL_13;
    }
    else
    {
      if (v62 <= v63)
        v64 = v62 + v61;
      else
        v64 = v62;
      result = sub_10003E074(result, v64, 1, v58);
      v58 = result;
      if (*(_QWORD *)(v60 + 16))
      {
LABEL_13:
        v65 = v58[2];
        if ((v58[3] >> 1) - v65 < v61)
          goto LABEL_20;
        v66 = (uint64_t)&v58[11 * v65 + 4];
        v67 = sub_100005574(&qword_10048E860);
        result = (_QWORD *)swift_arrayInitWithCopy(v66, v60 + 32, v61, v67);
        if (v61)
        {
          v68 = v58[2];
          v69 = __OFADD__(v68, v61);
          v70 = v68 + v61;
          if (v69)
            goto LABEL_21;
          v58[2] = v70;
        }
        goto LABEL_3;
      }
    }
    if (v61)
      goto LABEL_19;
LABEL_3:
    result = (_QWORD *)swift_bridgeObjectRelease(v60);
    if (++v59 == 8)
    {
      swift_setDeallocating(v57);
      v71 = sub_100005574(&qword_10048E950);
      swift_arrayDestroy(v80, 4, v71);
      swift_deallocClassInstance(v57, 32, 7);
      return v58;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[9];
  _BYTE v54[40];
  __int128 v55[2];
  __int128 v56[2];

  v44 = a8;
  v50 = a6;
  v49 = a5;
  v45 = a2;
  v48 = a11;
  v47 = a10;
  v52 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10048D8E8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0(a1, (uint64_t)v53);
  v22 = sub_100005574(&qword_10048E8A0);
  v46 = String.init<A>(describing:)(v53, v22);
  v24 = v23;
  sub_1000244B0(a1, (uint64_t)v56);
  sub_1000244B0(a3, (uint64_t)v55);
  sub_100014A7C(a4, (uint64_t)v54, &qword_10048D958);
  sub_10005173C(a7, (uint64_t)v53);
  sub_100014A7C(v44, (uint64_t)v21, &qword_10048D8E8);
  v25 = *(unsigned __int8 *)(v19 + 80);
  v26 = (v25 + 216) & ~v25;
  v27 = (v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject(&unk_100442738, v28 + 16, v25 | 7);
  sub_1000137C8(v56, v29 + 16);
  v30 = v45;
  *(_QWORD *)(v29 + 56) = v45;
  sub_1000137C8(v55, v29 + 64);
  sub_1000149A8((uint64_t)v54, v29 + 104, &qword_10048D958);
  sub_100014AC0((uint64_t)v53, v29 + 144);
  sub_1000149A8((uint64_t)v21, v29 + v26, &qword_10048D8E8);
  v31 = (uint64_t *)(v29 + v27);
  v32 = v47;
  v33 = v48;
  *v31 = v47;
  v31[1] = v33;
  v34 = (_QWORD *)(v29 + v28);
  v35 = v50;
  *v34 = v49;
  v34[1] = v35;
  swift_retain(v30);
  sub_10003A434(v32, v33);
  swift_retain(v35);
  v36 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v37 = UUID.uuidString.getter(v36);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v52);
  strcpy((char *)v53, "ActionMenu: ");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  v40._countAndFlagsBits = v46;
  v40._object = v24;
  String.append(_:)(v40);
  result = swift_bridgeObjectRelease(v24);
  v42 = v53[0];
  v43 = v53[1];
  *(_QWORD *)a9 = v37;
  *(_QWORD *)(a9 + 8) = v39;
  *(_QWORD *)(a9 + 16) = v42;
  *(_QWORD *)(a9 + 24) = v43;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_100051984;
  *(_QWORD *)(a9 + 72) = v29;
  return result;
}

_QWORD *sub_100048DC0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *result;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int64_t v79;
  int64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  _QWORD v99[5];
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)();
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t (*v108)();
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t (*v112)();
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  uint64_t (*v116)();
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t (*v129)();
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  char v133;
  uint64_t (*v134)(uint64_t (**)(void));
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t (*v141)();
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  char v145;
  uint64_t (*v146)(uint64_t (**)(void));
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t (*v153)();
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  char v157;
  uint64_t (*v158)(uint64_t (**)(void));
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t (*v165)();
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  char v169;
  uint64_t (*v170)(uint64_t (**)(void));
  uint64_t v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;

  v93 = a8;
  v94 = a3;
  *(_QWORD *)&v91 = a7;
  v97 = a5;
  *(_QWORD *)&v98 = a4;
  v96 = a2;
  v15 = sub_100005574(&qword_10048D8E8);
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  v20 = sub_10000ABC8(a1, v19);
  __chkstk_darwin(v20);
  v22 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  sub_1000244B0(a3, (uint64_t)&v153);
  sub_100014A7C(a4, (uint64_t)&v141, &qword_10048D958);
  sub_10005173C(a5, (uint64_t)&v165);
  *(_QWORD *)&v92 = a6;
  v24 = v96;
  sub_100014A7C(a6, (uint64_t)v17, &qword_10048D8E8);
  v25 = v91;
  v26 = v93;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (__int128 *)&v153, (uint64_t)&v141, (uint64_t)&v165, (uint64_t)v17, v91, v93, &v104, v19, v18);
  v27 = v107;
  v90 = v105;
  v166 = v105;
  v89 = v106;
  v167 = v106;
  v165 = v104;
  v168 = v107;
  v169 = 10;
  v170 = sub_10005B6C0;
  v171 = 0;
  v172 = 0x4014000000000000;
  v173 = &unk_10048F658;
  v174 = 0;
  v175 = &unk_10048F660;
  v176 = 0;
  swift_retain(v24);
  sub_10003A434(v25, v26);
  v95 = sub_100041790((uint64_t)&v165);
  swift_release(v27);
  swift_release(v89);
  swift_release(v90);
  v28 = a1[3];
  v29 = a1[4];
  v30 = sub_10000ABC8(a1, v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1000244B0(v94, (uint64_t)&v141);
  sub_100014A7C(v98, (uint64_t)&v129, &qword_10048D958);
  sub_10005173C(v97, (uint64_t)&v153);
  sub_100014A7C(a6, (uint64_t)v17, &qword_10048D8E8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v32, v24, (__int128 *)&v141, (uint64_t)&v129, (uint64_t)&v153, (uint64_t)v17, v25, v26, &v108, v28, v29);
  v34 = v111;
  v90 = v109;
  v154 = v109;
  v89 = v110;
  v155 = v110;
  v157 = 55;
  v153 = v108;
  v156 = v111;
  v158 = sub_10005B6C0;
  v159 = 0;
  v160 = 0x4014000000000000;
  v161 = &unk_10048F688;
  v162 = 0;
  v163 = &unk_10048F690;
  v164 = 0;
  swift_retain(v24);
  sub_10003A434(v25, v26);
  v94 = sub_1000418D4((uint64_t)&v153);
  swift_release(v34);
  swift_release(v89);
  swift_release(v90);
  v35 = a1[3];
  v36 = a1[4];
  v37 = sub_10000ABC8(a1, v35);
  __chkstk_darwin(v37);
  v39 = (char *)&v89 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v39);
  v41 = v98;
  sub_100014A7C(v98, (uint64_t)&v141, &qword_10048D958);
  v42 = v92;
  sub_100014A7C(v92, (uint64_t)v17, &qword_10048D8E8);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)((uint64_t)v39, v24, (uint64_t)&v141, (uint64_t)v17, v35, v36, &v112);
  v43 = v115;
  v91 = v113;
  v142 = v113;
  v90 = v114;
  v143 = v114;
  v145 = 54;
  v141 = v112;
  v144 = v115;
  v146 = sub_10000F930;
  v147 = 0;
  v148 = 0x4014000000000000;
  v149 = &unk_10048F6B8;
  v150 = 0;
  v151 = &unk_10048F6C0;
  v152 = 0;
  swift_retain(v24);
  v93 = sub_100041A18((uint64_t)&v141);
  swift_release(v43);
  swift_release(v90);
  swift_release(v91);
  v44 = a1[3];
  v45 = a1[4];
  v46 = sub_10000ABC8(a1, v44);
  __chkstk_darwin(v46);
  v48 = (char *)&v89 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v49 + 16))(v48);
  sub_100014A7C(v41, (uint64_t)&v129, &qword_10048D958);
  sub_100014A7C(v42, (uint64_t)v17, &qword_10048D8E8);
  swift_retain(v24);
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v48, v24, (uint64_t)v17, v44, v45, &v116);
  v50 = v119;
  v98 = v117;
  v130 = v117;
  v92 = v118;
  v131 = v118;
  v129 = v116;
  v132 = v119;
  v133 = 56;
  v134 = sub_10005B6C0;
  v135 = 0;
  v136 = 0x4014000000000000;
  v137 = &unk_10048F6E8;
  v138 = 0;
  v139 = &unk_10048F6F0;
  v140 = 0;
  v51 = sub_100041B5C((uint64_t)&v129);
  swift_release(v50);
  swift_release(v92);
  swift_release(v98);
  sub_1000244B0((uint64_t)a1, (uint64_t)v99);
  v52 = sub_100005574(&qword_10048E8A0);
  v53 = sub_100005574(&qword_10048E938);
  if ((swift_dynamicCast(&v120, v99, v52, v53, 6) & 1) != 0)
  {
    sub_100051EA0(&v120, &v100);
    v54 = v101;
    v55 = v102;
    v56 = v103;
    v57 = sub_10000ABC8(&v100, v101);
    __chkstk_darwin(v57);
    v59 = (char *)&v89 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v60 + 16))(v59);
    sub_10005173C(v97, (uint64_t)&v120);
    v61 = (_QWORD *)swift_allocObject(&unk_1004427A0, 56, 7);
    v61[2] = v54;
    v61[3] = v55;
    v61[4] = v56;
    v61[5] = a9;
    v61[6] = a10;
    v62 = v96;
    v63 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v59, v96, (uint64_t)sub_100051EDC, (uint64_t)v61, (uint64_t)&v120, v54, v55, v56);
    v65 = v64;
    v67 = v66;
    *(_QWORD *)&v120 = v63;
    *((_QWORD *)&v120 + 1) = v64;
    *(_QWORD *)&v121 = v68;
    *((_QWORD *)&v121 + 1) = v66;
    LOBYTE(v122) = 38;
    *((_QWORD *)&v122 + 1) = sub_10000F930;
    v123 = 0;
    v124 = 0x4014000000000000;
    v125 = &unk_10048F7E8;
    v126 = 0;
    v127 = &unk_10048F7F0;
    v128 = 0;
    swift_retain(v62);
    swift_retain(a10);
    v69 = (_QWORD *)sub_100041CA0(&v120);
    swift_release(v67);
    swift_release(v65);
    v99[0] = _swiftEmptyArrayStorage;
    sub_10008A458(v69);
    v70 = (_QWORD *)v99[0];
    sub_10000682C(&v100);
  }
  else
  {
    v121 = 0u;
    v122 = 0u;
    v120 = 0u;
    sub_100008758((uint64_t)&v120, &qword_10048E940);
    v70 = _swiftEmptyArrayStorage;
  }
  v71 = sub_100005574(&qword_10048E948);
  result = (_QWORD *)swift_allocObject(v71, 72, 7);
  v73 = result;
  result[4] = v95;
  *(_QWORD *)&v98 = result + 4;
  v74 = v93;
  result[5] = v94;
  result[6] = v74;
  result[7] = v51;
  result[8] = v70;
  v75 = _swiftEmptyArrayStorage;
  v76 = 4;
  while (1)
  {
    v77 = v73[v76];
    v78 = *(_QWORD *)(v77 + 16);
    v79 = v75[2];
    v80 = v79 + v78;
    if (__OFADD__(v79, v78))
      break;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v75);
    if ((_DWORD)result && v80 <= v75[3] >> 1)
    {
      if (*(_QWORD *)(v77 + 16))
        goto LABEL_16;
    }
    else
    {
      if (v79 <= v80)
        v81 = v79 + v78;
      else
        v81 = v79;
      result = sub_10003E074(result, v81, 1, v75);
      v75 = result;
      if (*(_QWORD *)(v77 + 16))
      {
LABEL_16:
        v82 = v75[2];
        if ((v75[3] >> 1) - v82 < v78)
          goto LABEL_23;
        v83 = (uint64_t)&v75[11 * v82 + 4];
        v84 = sub_100005574(&qword_10048E860);
        result = (_QWORD *)swift_arrayInitWithCopy(v83, v77 + 32, v78, v84);
        if (v78)
        {
          v85 = v75[2];
          v86 = __OFADD__(v85, v78);
          v87 = v85 + v78;
          if (v86)
            goto LABEL_24;
          v75[2] = v87;
        }
        goto LABEL_6;
      }
    }
    if (v78)
      goto LABEL_22;
LABEL_6:
    result = (_QWORD *)swift_bridgeObjectRelease(v77);
    if (++v76 == 9)
    {
      swift_setDeallocating(v73);
      v88 = sub_100005574(&qword_10048E950);
      swift_arrayDestroy(v98, 5, v88);
      swift_deallocClassInstance(v73, 32, 7);
      return v75;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1000496E8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Album;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004431C8, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_100049B58@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Artist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Artist;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004437B8, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_100049FC8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Curator(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Curator;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004437E0, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004A438@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EditorialItem(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EBE0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443808, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004A8C4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Genre(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Genre;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443830, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004AD34@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicMovie(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EBE8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443858, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004B1C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MusicVideo(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for MusicVideo;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443880, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004B630@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Playlist(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Playlist;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004438A8, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004BAA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for RadioShow(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for RadioShow;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004438D0, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004BF10@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Song(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Song;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004438F8, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004C380@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v64 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v66 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v65 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Station(0);
  v94[3] = v26;
  v94[4] = &protocol witness table for Station;
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v64, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443920, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v65, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v66, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v44 = v79;
  v43 = v80;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  v48 = v78;
  *v47 = v77;
  v47[1] = v48;
  v49 = (uint64_t *)(v41 + v70);
  v50 = v41 + v72;
  *v49 = v45;
  v49[1] = v43;
  sub_1000137C8(v87, v50);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v43);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004C7F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVEpisode(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EBF0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443948, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004CC7C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVSeason(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EBF8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443970, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004D108@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for TVShow(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EC00, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_100443998, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004D594@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  __int128 v87[2];
  _BYTE v88[40];
  _QWORD v89[9];
  __int128 v90[2];
  __int128 v91[2];
  __int128 v92[2];
  _BYTE v93[40];
  _QWORD v94[6];

  v73 = a8;
  v69 = a6;
  v70 = a7;
  v68 = a5;
  v76 = a4;
  v81 = a3;
  v79 = a2;
  v86 = a9;
  v82 = a15;
  v78 = a14;
  v77 = a13;
  v71 = a12;
  v80 = a16;
  v67 = a17;
  v72 = a10;
  v66 = a11;
  v18 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  __chkstk_darwin(v18);
  v83 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_10048E878);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048D8E8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  __chkstk_darwin(v23);
  v64 = (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for UploadedVideo(0);
  v94[3] = v26;
  v94[4] = sub_100006924(&qword_10048EC08, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  v27 = sub_1000207D4(v94);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v27, a1, v26);
  sub_1000244B0((uint64_t)v94, (uint64_t)v89);
  v28 = sub_100005574(&qword_100493480);
  v29 = String.init<A>(describing:)(v89, v28);
  v74 = v30;
  v75 = v29;
  sub_100014A7C(v66, (uint64_t)v93, &qword_10048E890);
  sub_1000244B0((uint64_t)v94, (uint64_t)v92);
  sub_100014A7C(v67, (uint64_t)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v68, (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v69, (uint64_t)v91);
  sub_1000244B0(v70, (uint64_t)v90);
  sub_100014A7C(v73, (uint64_t)v89, &qword_10048D950);
  sub_100014A7C(v71, (uint64_t)v88, &qword_10048E888);
  sub_1000244B0(v72, (uint64_t)v87);
  v31 = *(unsigned __int8 *)(v24 + 80);
  v32 = (v31 + 96) & ~v31;
  v33 = *(unsigned __int8 *)(v21 + 80);
  v34 = (v25 + v33 + v32) & ~v33;
  v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 79) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
  v70 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject(&unk_1004439C0, v72 + 40, v31 | v33 | 7);
  sub_1000149A8((uint64_t)v93, v41 + 16, &qword_10048E890);
  sub_1000137C8(v92, v41 + 56);
  sub_1000149A8(v64, v41 + v32, &qword_10048D8E8);
  sub_1000149A8(v65, v41 + v34, &qword_10048E878);
  v42 = v76;
  *(_QWORD *)(v41 + v35) = v76;
  sub_1000137C8(v91, v41 + v36);
  sub_1000137C8(v90, v41 + v37);
  sub_1000149A8((uint64_t)v89, v41 + v38, &qword_10048D950);
  sub_1000149A8((uint64_t)v88, v41 + v39, &qword_10048E888);
  v43 = v78;
  v44 = v79;
  *(_QWORD *)(v41 + v73) = v79;
  v46 = v81;
  v45 = v82;
  *(_QWORD *)(v41 + v71) = v81;
  v47 = (_QWORD *)(v41 + v40);
  *v47 = v77;
  v47[1] = v43;
  v48 = (uint64_t *)(v41 + v70);
  v49 = v41 + v72;
  v50 = v80;
  *v48 = v45;
  v48[1] = v50;
  sub_1000137C8(v87, v49);
  v51 = v44;
  v52 = v46;
  swift_bridgeObjectRetain();
  swift_retain(v42);
  sub_1000516E4(v45, v50);
  v53 = v83;
  v54 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v85);
  strcpy((char *)v89, "ActionMenu: ");
  BYTE5(v89[1]) = 0;
  HIWORD(v89[1]) = -5120;
  v59 = v74;
  v58._countAndFlagsBits = v75;
  v58._object = v74;
  String.append(_:)(v58);
  swift_bridgeObjectRelease(v59);
  v60 = v89[0];
  v61 = v89[1];
  result = sub_10000682C(v94);
  v63 = v86;
  *v86 = v55;
  v63[1] = v57;
  v63[2] = v60;
  v63[3] = v61;
  v63[4] = 0;
  v63[5] = 0xE000000000000000;
  v63[6] = 0;
  *((_BYTE *)v63 + 56) = 0;
  v63[8] = (uint64_t)sub_100053908;
  v63[9] = v41;
  return result;
}

uint64_t sub_10004DA20@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  __int128 v88[2];
  _BYTE v89[40];
  _QWORD v90[9];
  __int128 v91[2];
  __int128 v92[2];
  __int128 v93[2];
  _BYTE v94[40];
  _QWORD v95[6];

  v74 = a8;
  v70 = a6;
  v71 = a7;
  v69 = a5;
  v77 = a4;
  v82 = a3;
  v80 = a2;
  v87 = a9;
  v83 = a15;
  v79 = a14;
  v78 = a13;
  v72 = a12;
  v81 = a16;
  v68 = a17;
  v73 = a10;
  v65 = a11;
  v20 = type metadata accessor for UUID(0);
  v85 = *(_QWORD *)(v20 - 8);
  v86 = v20;
  __chkstk_darwin(v20);
  v84 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100005574(&qword_10048E878);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  __chkstk_darwin(v22);
  v67 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005574(&qword_10048D8E8);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v66 = (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95[3] = a18;
  v95[4] = a19;
  v28 = sub_1000207D4(v95);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 16))(v28, a1, a18);
  sub_1000244B0((uint64_t)v95, (uint64_t)v90);
  v29 = sub_100005574(&qword_100493480);
  v30 = String.init<A>(describing:)(v90, v29);
  v75 = v31;
  v76 = v30;
  sub_100014A7C(v65, (uint64_t)v94, &qword_10048E890);
  sub_1000244B0((uint64_t)v95, (uint64_t)v93);
  sub_100014A7C(v68, (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048D8E8);
  sub_100014A7C(v69, (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10048E878);
  sub_1000244B0(v70, (uint64_t)v92);
  sub_1000244B0(v71, (uint64_t)v91);
  sub_100014A7C(v74, (uint64_t)v90, &qword_10048D950);
  sub_100014A7C(v72, (uint64_t)v89, &qword_10048E888);
  sub_1000244B0(v73, (uint64_t)v88);
  v32 = *(unsigned __int8 *)(v26 + 80);
  v33 = (v32 + 96) & ~v32;
  v34 = *(unsigned __int8 *)(v23 + 80);
  v35 = (v27 + v34 + v33) & ~v34;
  v36 = (v24 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 79) & 0xFFFFFFFFFFFFFFF8;
  v74 = (v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  v72 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v72 + 15) & 0xFFFFFFFFFFFFFFF8;
  v71 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
  v73 = (v71 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject(&unk_1004439E8, v73 + 40, v32 | v34 | 7);
  sub_1000149A8((uint64_t)v94, v42 + 16, &qword_10048E890);
  sub_1000137C8(v93, v42 + 56);
  sub_1000149A8(v66, v42 + v33, &qword_10048D8E8);
  sub_1000149A8(v67, v42 + v35, &qword_10048E878);
  v43 = v77;
  *(_QWORD *)(v42 + v36) = v77;
  sub_1000137C8(v92, v42 + v37);
  sub_1000137C8(v91, v42 + v38);
  sub_1000149A8((uint64_t)v90, v42 + v39, &qword_10048D950);
  sub_1000149A8((uint64_t)v89, v42 + v40, &qword_10048E888);
  v45 = v80;
  v44 = v81;
  *(_QWORD *)(v42 + v74) = v80;
  v47 = v82;
  v46 = v83;
  *(_QWORD *)(v42 + v72) = v82;
  v48 = (_QWORD *)(v42 + v41);
  v49 = v79;
  *v48 = v78;
  v48[1] = v49;
  v50 = (uint64_t *)(v42 + v71);
  v51 = v42 + v73;
  *v50 = v46;
  v50[1] = v44;
  sub_1000137C8(v88, v51);
  v52 = v45;
  v53 = v47;
  swift_bridgeObjectRetain();
  swift_retain(v43);
  sub_1000516E4(v46, v44);
  v54 = v84;
  v55 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v56 = UUID.uuidString.getter(v55);
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v86);
  strcpy((char *)v90, "ActionMenu: ");
  BYTE5(v90[1]) = 0;
  HIWORD(v90[1]) = -5120;
  v60 = v75;
  v59._countAndFlagsBits = v76;
  v59._object = v75;
  String.append(_:)(v59);
  swift_bridgeObjectRelease(v60);
  v61 = v90[0];
  v62 = v90[1];
  result = sub_10000682C(v95);
  v64 = v87;
  *v87 = v56;
  v64[1] = v58;
  v64[2] = v61;
  v64[3] = v62;
  v64[4] = 0;
  v64[5] = 0xE000000000000000;
  v64[6] = 0;
  *((_BYTE *)v64 + 56) = 0;
  v64[8] = (uint64_t)sub_100053908;
  v64[9] = v42;
  return result;
}

uint64_t sub_10004DE80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004DF10, 0, 0);
}

uint64_t sub_10004DF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1004432E0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EB28, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004E05C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004924AC;
  v12 = (char *)&dword_1004924A8 + dword_1004924A8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004E0EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004E17C, 0, 0);
}

uint64_t sub_10004E17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100443420, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EB48, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004E2C8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004924CC;
  v12 = (char *)&dword_1004924C8 + dword_1004924C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004E358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004E3E8, 0, 0);
}

uint64_t sub_10004E3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100443768, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EBD8, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004E534(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10049254C;
  v12 = (char *)&dword_100492548 + dword_100492548;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004E5C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  v8 = swift_allocObject(&unk_1004436C8, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v6;
  v10 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v10;
  v11 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v8 + 56) = v11;
  *(_QWORD *)(v8 + 72) = v7;
  swift_bridgeObjectRetain(v4);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v7);
}

uint64_t sub_10004E67C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10004E6F8, 0, 0);
}

uint64_t sub_10004E6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1004436A0, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100054DC0((_QWORD *)(v0 + 16));
  v8 = sub_1001AD214(v1, (uint64_t)&unk_10048EBB8, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004E7BC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10049252C;
  v13 = (char *)&dword_100492528 + dword_100492528;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000556CC;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10004E84C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  v8 = swift_allocObject(&unk_100443600, 80, 7);
  *a2 = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 24) = v9;
  v11 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v5;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v7;
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v5);
  return swift_bridgeObjectRetain(v7);
}

uint64_t sub_10004E8FC(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10004E978, 0, 0);
}

uint64_t sub_10004E978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_1004435D8, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100054B90((_QWORD *)(v0 + 16));
  v8 = sub_1001AD214(v1, (uint64_t)&unk_10048EB98, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004EA3C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10049250C;
  v13 = (char *)&dword_100492508 + dword_100492508;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000556CC;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10004EACC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  v9 = swift_allocObject(&unk_100442C50, 88, 7);
  *a2 = v9;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v11 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = v11;
  *(_OWORD *)(v9 + 64) = v12;
  *(_QWORD *)(v9 + 80) = v8;
  sub_1000528E4(v4);
  swift_bridgeObjectRetain();
  swift_retain(v11);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_10004EB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  v4 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(v1 + 152) = v4;
  v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v6;
  v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v7;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v8;
  return swift_task_switch(sub_10004EC08, 0, 0);
}

uint64_t sub_10004EC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100442C28, 168, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v0 + 144);
  v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_100052850(v0 + 16);
  v8 = sub_1001AD214(v1, (uint64_t)&unk_10048EA18, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004ECD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  v9 = *(_OWORD *)(a4 + 16);
  v10 = unk_10049240C;
  v13 = (char *)&dword_100492408 + dword_100492408;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 152) = v11;
  *v11 = v4;
  v11[1] = sub_10004ED6C;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10004ED6C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 152));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004EDB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004EE44, 0, 0);
}

uint64_t sub_10004EE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100443510, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EB68, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004EF90(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004924EC;
  v12 = (char *)&dword_1004924E8 + dword_1004924E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004F020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004F0B0, 0, 0);
}

uint64_t sub_10004F0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1004430B0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EAD0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F1FC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10049246C;
  v12 = (char *)&dword_100492468 + dword_100492468;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004F28C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004F31C, 0, 0);
}

uint64_t sub_10004F31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100442E08, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EA60, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F468(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_100492274;
  v12 = (char *)&dword_100492270 + dword_100492270;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004F4F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(char);

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (*)(char))((char *)&dword_100492260 + dword_100492260);
  v2 = (_QWORD *)swift_task_alloc(unk_100492264);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10004F55C;
  return v4(0);
}

uint64_t sub_10004F55C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_BYTE **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_10004F5B8(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10004F634, 0, 0);
}

uint64_t sub_10004F634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100442F20, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000535A4((_QWORD *)(v0 + 16));
  v8 = sub_1001AD214(v1, (uint64_t)&unk_10048EA90, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F6F8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10049242C;
  v13 = (char *)&dword_100492428 + dword_100492428;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_10004F788;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10004F788()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10004F7D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;
  __int128 v13;

  v7 = *a1;
  v8 = a1[7];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 80, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 72) = v8;
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  return swift_retain(v8);
}

uint64_t sub_10004F86C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v4;
  v5 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v5;
  v6 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v6;
  v7 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v7;
  return swift_task_switch(sub_10004F8E8, 0, 0);
}

uint64_t sub_10004F8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = swift_allocObject(&unk_100442FE8, 160, 7);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1000535A4((_QWORD *)(v0 + 16));
  v8 = sub_1001AD214(v1, (uint64_t)&unk_10048EAB0, v3);
  swift_release(v8);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004F9AC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v9 = a4[3];
  v10 = unk_10049244C;
  v13 = (char *)&dword_100492448 + dword_100492448;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  v11 = (_QWORD *)swift_task_alloc(v10);
  *(_QWORD *)(v4 + 144) = v11;
  *v11 = v4;
  v11[1] = sub_1000556CC;
  return ((uint64_t (*)(uint64_t, _QWORD))v13)(a1, 0);
}

uint64_t sub_10004FA3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004FACC, 0, 0);
}

uint64_t sub_10004FACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100443178, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048EAF0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004FC18(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10049248C;
  v12 = (char *)&dword_100492488 + dword_100492488;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004FCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004FD38, 0, 0);
}

uint64_t sub_10004FD38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100442908, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048E990, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10004FE84(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_10049238C;
  v12 = (char *)&dword_100492388 + dword_100492388;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10004FF14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_10004FFA4, 0, 0);
}

uint64_t sub_10004FFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_1004429D0, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048E9B0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000500F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004923AC;
  v12 = (char *)&dword_1004923A8 + dword_1004923A8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_100050180;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_100050180()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000501C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_100050258, 0, 0);
}

uint64_t sub_100050258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100442A98, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048E9D0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000503A4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004923CC;
  v12 = (char *)&dword_1004923C8 + dword_1004923C8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_100050434@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v12;

  v7 = *a1;
  v8 = a1[5];
  a5[3] = a2;
  a5[4] = a3;
  v9 = swift_allocObject(a4, 64, 7);
  *a5 = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v9 + 24) = v10;
  v12 = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v9 + 40) = v12;
  *(_QWORD *)(v9 + 56) = v8;
  swift_retain(v10);
  swift_retain(v12);
  return swift_retain(v8);
}

uint64_t sub_1000504B8(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[3];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 48);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_100050510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 128) = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 72);
  v5 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v5;
  return swift_task_switch(sub_1000505A0, 0, 0);
}

uint64_t sub_1000505A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_BYTE *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 48);
  v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100442B60, 144, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 72) = v7;
  *(_BYTE *)(v11 + 80) = v6;
  *(_QWORD *)(v11 + 88) = v5;
  *(_QWORD *)(v11 + 96) = v4;
  *(_QWORD *)(v11 + 104) = v3;
  *(_QWORD *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 136) = v1;
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v16);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048E9F0, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000506EC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  v8 = a4[3];
  v9 = unk_1004923EC;
  v12 = (char *)&dword_1004923E8 + dword_1004923E8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 128) = v10;
  *v10 = v4;
  v10[1] = sub_1000556C8;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_10005077C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  v6 = swift_allocObject(&unk_100442868, 48, 7);
  *a2 = v6;
  *(_QWORD *)(v6 + 16) = v4;
  v7 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain(v7);
  return swift_retain(v5);
}

uint64_t sub_1000507F4(uint64_t a1)
{
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v1 = *(_BYTE *)(a1 + 32);
  v2 = *(uint64_t (**)(_QWORD))(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v6 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = v6;
  return v2(v8);
}

uint64_t sub_100050844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v1 + 16) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_BYTE *)(v1 + 112) = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 56);
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v5;
  return swift_task_switch(sub_1000508CC, 0, 0);
}

uint64_t sub_1000508CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_BYTE *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v0 + 24);
  v10 = type metadata accessor for TaskPriority(0);
  v14 = *(_OWORD *)(v0 + 32);
  v15 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = swift_allocObject(&unk_100442840, 128, 7);
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_QWORD *)(v11 + 56) = v7;
  *(_BYTE *)(v11 + 64) = v6;
  *(_QWORD *)(v11 + 72) = v5;
  *(_QWORD *)(v11 + 80) = v4;
  *(_QWORD *)(v11 + 88) = v3;
  *(_QWORD *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 120) = v1;
  swift_retain(v14);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v15);
  swift_retain(v1);
  v12 = sub_1001AD214(v8, (uint64_t)&unk_10048E970, v11);
  swift_release(v12);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000509FC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;
  char *v12;

  v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  v8 = a4[1];
  v9 = unk_10049236C;
  v12 = (char *)&dword_100492368 + dword_100492368;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  v10 = (_QWORD *)swift_task_alloc(v9);
  *(_QWORD *)(v4 + 112) = v10;
  *v10 = v4;
  v10[1] = sub_100050A84;
  return ((uint64_t (*)(uint64_t, _QWORD))v12)(a1, 0);
}

uint64_t sub_100050A84()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100050ACC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70[3];
  _QWORD v71[9];
  __int128 v72[2];
  uint64_t (*v73)();
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _DWORD v77[3];

  v67 = a7;
  v68 = a5;
  v60 = a6;
  *(_QWORD *)&v66 = a4;
  v12 = type metadata accessor for UUID(0);
  v63 = *(_QWORD *)(v12 - 8);
  v64 = v12;
  __chkstk_darwin(v12);
  v62 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Album(0);
  v54 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574(&qword_10048D8E8);
  v57 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v58 = v17;
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  *(_QWORD *)&v65 = a1[4];
  v20 = a1[5];
  v21 = sub_10000ABC8(a1, v19);
  __chkstk_darwin(v21);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  v59 = a3;
  sub_1000244B0(a3, (uint64_t)v70);
  sub_100014A7C(v66, (uint64_t)v72, &qword_10048D958);
  sub_100014A7C(v68, (uint64_t)v71, &qword_10048D950);
  sub_100014A7C(v67, (uint64_t)v18, &qword_10048D8E8);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, a2, v70, (uint64_t)v72, (uint64_t)v71, 0, 0, (uint64_t)v18, &v73, v19, v65, v20);
  v65 = v74;
  v66 = v75;
  v55 = v73;
  v25 = v76;
  sub_100052C84((uint64_t)a1, (uint64_t)v71);
  v61 = a2;
  v26 = a2;
  v27 = v56;
  swift_retain(v26);
  v28 = sub_100005574(&qword_10048EA20);
  if ((swift_dynamicCast(v27, v71, v28, v14, 6) & 1) != 0)
  {
    v29 = v73;
    v30 = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v27, v14);
    v31 = ((uint64_t (*)(uint64_t))v29)(v30);
    v33 = v32 != 1;
    sub_10001406C(v31, v32);
  }
  else
  {
    v33 = 1;
  }
  sub_100052C84((uint64_t)a1, (uint64_t)v71);
  v56 = (char *)String.init<A>(describing:)(v71, v28);
  v35 = v34;
  sub_100052C84((uint64_t)a1, (uint64_t)v70);
  sub_1000244B0(v59, (uint64_t)v72);
  sub_100014A7C(v67, (uint64_t)v18, &qword_10048D8E8);
  sub_100014A7C(v60, (uint64_t)v69, &qword_10048E888);
  sub_100014A7C(v68, (uint64_t)v71, &qword_10048D950);
  v36 = *(unsigned __int8 *)(v57 + 80);
  v37 = (v36 + 232) & ~v36;
  v38 = (v58 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 47) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject(&unk_100442CA0, v39 + 72, v36 | 7);
  *(_QWORD *)(v40 + 16) = v55;
  *(_OWORD *)(v40 + 24) = v65;
  *(_OWORD *)(v40 + 40) = v66;
  *(_QWORD *)(v40 + 56) = v25;
  *(_BYTE *)(v40 + 64) = 0;
  *(_DWORD *)(v40 + 65) = v77[0];
  *(_DWORD *)(v40 + 68) = *(_DWORD *)((char *)v77 + 3);
  *(_QWORD *)(v40 + 72) = sub_10000F930;
  *(_QWORD *)(v40 + 80) = 0;
  *(_QWORD *)(v40 + 88) = 0x4014000000000000;
  *(_QWORD *)(v40 + 96) = &unk_10048D938;
  *(_QWORD *)(v40 + 104) = 0;
  *(_QWORD *)(v40 + 112) = &unk_10048D940;
  *(_QWORD *)(v40 + 120) = 0;
  *(_BYTE *)(v40 + 128) = v33;
  sub_100051EA0(v70, (_OWORD *)(v40 + 136));
  sub_1000137C8(v72, v40 + 184);
  v41 = v61;
  *(_QWORD *)(v40 + 224) = v61;
  sub_1000149A8((uint64_t)v18, v40 + v37, &qword_10048D8E8);
  sub_1000149A8((uint64_t)v69, v40 + v38, &qword_10048E888);
  sub_1000149A8((uint64_t)v71, v40 + v39, &qword_10048D950);
  swift_retain(v41);
  v42 = v65;
  swift_retain(v65);
  v43 = v66;
  swift_retain(v66);
  swift_retain(v25);
  v44 = v62;
  v45 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v46 = UUID.uuidString.getter(v45);
  v48 = v47;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  strcpy((char *)v71, "ActionMenu: ");
  BYTE5(v71[1]) = 0;
  HIWORD(v71[1]) = -5120;
  v49._countAndFlagsBits = (uint64_t)v56;
  v49._object = v35;
  String.append(_:)(v49);
  swift_release(v25);
  swift_release(v43);
  swift_release(v42);
  result = swift_bridgeObjectRelease(v35);
  v51 = v71[0];
  v52 = v71[1];
  *(_QWORD *)a8 = v46;
  *(_QWORD *)(a8 + 8) = v48;
  *(_QWORD *)(a8 + 16) = v51;
  *(_QWORD *)(a8 + 24) = v52;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_100052EF8;
  *(_QWORD *)(a8 + 72) = v40;
  return result;
}

uint64_t sub_100050FA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  void *v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  __int128 v51[3];

  v41 = a4;
  v42 = a7;
  v46 = a5;
  v47 = a6;
  v44 = a9;
  v14 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v14 - 8);
  v49 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10048D8E8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0(a1, (uint64_t)v51);
  v21 = sub_100005574(&qword_10048E898);
  v45 = String.init<A>(describing:)(v51, v21);
  v43 = v22;
  sub_1000244B0(a1, (uint64_t)v51);
  sub_100014A7C(a10, (uint64_t)v20, &qword_10048D8E8);
  sub_1000244B0(v41, (uint64_t)v50);
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v23 + 104) & ~v23;
  v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)swift_allocObject(&unk_100443470, v25 + 40, v23 | 7);
  sub_1000137C8(v51, (uint64_t)(v26 + 2));
  v26[7] = a2;
  v26[8] = a3;
  v27 = v47;
  v26[9] = v46;
  v26[10] = v27;
  v28 = (uint64_t)v26 + v24;
  v29 = v42;
  v30 = v44;
  v26[11] = v42;
  v26[12] = v30;
  sub_1000149A8((uint64_t)v20, v28, &qword_10048D8E8);
  sub_1000137C8(v50, (uint64_t)v26 + v25);
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  sub_1000516E4(v29, v30);
  v33 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v34 = UUID.uuidString.getter(v33);
  v36 = v35;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
  strcpy((char *)v51, "ActionMenu: ");
  BYTE13(v51[0]) = 0;
  HIWORD(v51[0]) = -5120;
  v37._countAndFlagsBits = v45;
  v38 = v43;
  v37._object = v43;
  String.append(_:)(v37);
  result = swift_bridgeObjectRelease(v38);
  v40 = v51[0];
  *(_QWORD *)a8 = v34;
  *(_QWORD *)(a8 + 8) = v36;
  *(_OWORD *)(a8 + 16) = v40;
  *(_QWORD *)(a8 + 32) = 0;
  *(_QWORD *)(a8 + 40) = 0xE000000000000000;
  *(_QWORD *)(a8 + 48) = 0;
  *(_BYTE *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = sub_100054860;
  *(_QWORD *)(a8 + 72) = v26;
  return result;
}

uint64_t sub_1000511E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[9];
  _BYTE v47[40];
  __int128 v48[2];
  __int128 v49[3];

  v43 = a8;
  v42 = a7;
  v39 = a6;
  v40 = a2;
  v45 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574(&qword_10048D8E8);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0(a1, (uint64_t)v46);
  v20 = sub_100005574(&qword_10048E8A0);
  v41 = String.init<A>(describing:)(v46, v20);
  v22 = v21;
  sub_1000244B0(a1, (uint64_t)v49);
  sub_1000244B0(a3, (uint64_t)v48);
  sub_100014A7C(a4, (uint64_t)v47, &qword_10048D958);
  sub_100014A7C(a5, (uint64_t)v46, &qword_10048D950);
  sub_100014A7C(v39, (uint64_t)v19, &qword_10048D8E8);
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = (v23 + 216) & ~v23;
  v25 = (v18 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_100442C78, v25 + 16, v23 | 7);
  sub_1000137C8(v49, v26 + 16);
  v27 = v40;
  *(_QWORD *)(v26 + 56) = v40;
  sub_1000137C8(v48, v26 + 64);
  sub_1000149A8((uint64_t)v47, v26 + 104, &qword_10048D958);
  sub_1000149A8((uint64_t)v46, v26 + 144, &qword_10048D950);
  sub_1000149A8((uint64_t)v19, v26 + v24, &qword_10048D8E8);
  v28 = (uint64_t *)(v26 + v25);
  v29 = v42;
  v30 = v43;
  *v28 = v42;
  v28[1] = v30;
  swift_retain(v27);
  sub_10003A434(v29, v30);
  v31 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v32 = UUID.uuidString.getter(v31);
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
  strcpy((char *)v46, "ActionMenu: ");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  v35._countAndFlagsBits = v41;
  v35._object = v22;
  String.append(_:)(v35);
  result = swift_bridgeObjectRelease(v22);
  v37 = v46[0];
  v38 = v46[1];
  *(_QWORD *)a9 = v32;
  *(_QWORD *)(a9 + 8) = v34;
  *(_QWORD *)(a9 + 16) = v37;
  *(_QWORD *)(a9 + 24) = v38;
  *(_QWORD *)(a9 + 32) = 0;
  *(_QWORD *)(a9 + 40) = 0xE000000000000000;
  *(_QWORD *)(a9 + 48) = 0;
  *(_BYTE *)(a9 + 56) = 0;
  *(_QWORD *)(a9 + 64) = sub_100052C28;
  *(_QWORD *)(a9 + 72) = v26;
  return result;
}

uint64_t sub_1000514C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_10000682C((_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 96))
    sub_10000682C((_QWORD *)(v0 + 72));
  v4 = (v2 + 144) & ~v2;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  v5 = *(_QWORD *)(v0 + 136);
  if (v5 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + 128), v5);
  v6 = v0 + v4;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v4, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v14 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  return swift_deallocObject(v0, v4 + v3, v2 | 7);
}

_QWORD *sub_100051690()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8) + 80);
  return sub_100046BC4((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v0 + ((v1 + 144) & ~v1));
}

uint64_t sub_1000516E4(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1000516F8(result, a2);
  return result;
}

uint64_t sub_1000516F8(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10005173C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PresentationSource(a2, a1);
  return a2;
}

uint64_t sub_100051778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000682C((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_10000682C((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_10000682C((_QWORD *)(v0 + 104));
  v5 = v4 + v3;
  swift_unknownObjectWeakDestroy(v0 + 144);
  v6 = *(unsigned __int8 *)(v0 + 192);
  if (v6 != 255)
    sub_1000137A4(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
  v7 = v5 + 7;
  if (*(_QWORD *)(v0 + 200))
    swift_release(*(_QWORD *)(v0 + 208));
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v14 = v12 + v13[6];
      v15 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
  }
  if (*(_QWORD *)(v0 + v8))
    swift_release(*(_QWORD *)(v0 + v8 + 8));
  v17 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 16;
  swift_release(*(_QWORD *)(v0 + v17 + 8));
  return swift_deallocObject(v0, v18, v2 | 7);
}

_QWORD *sub_100051984()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100048DC0((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Playlist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100051D10);
}

uint64_t sub_100051D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Playlist.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for Playlist(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100051D90);
}

uint64_t sub_100051D90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Playlist.Entry(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for Playlist(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_100051E0C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for Playlist.Entry(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

_OWORD *sub_100051EA0(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_100051EB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100051EDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v4 = v1[4];
  v5 = (uint64_t (*)(_QWORD *))v1[5];
  v10 = v1[2];
  v3 = v10;
  v11 = v4;
  v6 = sub_1000207D4(v9);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v6, a1, v3);
  v7 = v5(v9);
  sub_10000682C(v9);
  return v7;
}

uint64_t sub_100051F58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10005077C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100051F64()
{
  uint64_t v0;

  return sub_1000507F4(v0 + 16);
}

uint64_t sub_100051F70()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[8]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100051FB4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048E95C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048E958 + dword_10048E958))(v0 + 16);
}

_QWORD *sub_10005200C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[6];
  v4 = a1[9];
  v5 = a1[11];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100052074()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1000520C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048E96C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048E968 + dword_10048E968))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100052140()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100052170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, (uint64_t)&unk_100442930, a1);
}

uint64_t sub_1000521A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048E97C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048E978 + dword_10048E978))(v0 + 16);
}

uint64_t sub_100052204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048E98C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048E988 + dword_10048E988))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10005228C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, (uint64_t)&unk_1004429F8, a1);
}

uint64_t sub_1000522C0()
{
  uint64_t v0;

  return sub_1000504B8(v0 + 16);
}

uint64_t sub_1000522DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048E99C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048E998 + dword_10048E998))(v0 + 16);
}

uint64_t sub_100052338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048E9AC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048E9A8 + dword_10048E9A8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000523C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, (uint64_t)&unk_100442AC0, a1);
}

uint64_t sub_1000523F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048E9BC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048E9B8 + dword_10048E9B8))(v0 + 16);
}

uint64_t sub_100052454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048E9CC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048E9C8 + dword_10048E9C8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000524DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, (uint64_t)&unk_100442B88, a1);
}

uint64_t sub_100052514()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048E9DC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048E9D8 + dword_10048E9D8))(v0 + 16);
}

uint64_t sub_100052570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048E9EC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048E9E8 + dword_10048E9E8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000525F4(_QWORD *a1, _QWORD *a2)
{
  _s13InsertCommandV8LocationOwtk(a2, a1);
  return a2;
}

id *sub_100052630(id *a1)
{
  sub_100052658(*a1);
  return a1;
}

void sub_100052658(id a1)
{
  if ((unint64_t)a1 >= 4)

}

uint64_t sub_100052668(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100052690(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 128);
  sub_100052658(*(id *)a1);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100052728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004EACC(v1 + 16, a1);
}

uint64_t sub_100052734()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  _OWORD v7[5];
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  v4 = *(uint64_t (**)(_QWORD))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 128);
  v10 = *(_OWORD *)(v0 + 112);
  v11 = v5;
  v12 = *(_QWORD *)(v0 + 144);
  v8 = v4;
  v9 = v3;
  return v4(v7);
}

uint64_t sub_100052794()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[16]);
  swift_release(v0[18]);
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1000527F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EA04);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EA00 + dword_10048EA00))(v0 + 16);
}

uint64_t sub_100052850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 128);
  sub_1000528E4(*(id *)a1);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

id sub_1000528E4(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

uint64_t sub_1000528F4()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_100052960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EA14);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10048EA10 + dword_10048EA10))(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000529E0()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[2];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100052A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 216) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + v3;
  sub_10000682C((_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  sub_10000682C((_QWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 128))
    sub_10000682C((_QWORD *)(v0 + 104));
  v5 = v4 + 7;
  if (*(_QWORD *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + 144);
    v6 = *(unsigned __int8 *)(v0 + 192);
    if (v6 != 255)
      sub_1000137A4(*(id *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), v6);
    if (*(_QWORD *)(v0 + 200))
      swift_release(*(_QWORD *)(v0 + 208));
  }
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v3;
  v9 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
  {
    v10 = *(_QWORD *)(v8 + 8);
    if (v10 >= 0xA)
      swift_bridgeObjectRelease(v10);
    v11 = v8 + v9[5];
    v12 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v12 - 1) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 24));
      v13 = v11 + v12[6];
      v14 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + v12[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8]));
  }
  if (*(_QWORD *)(v0 + v7))
    swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v2 | 7);
}

_QWORD *sub_100052C28()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100048344((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *v3, v3[1]);
}

uint64_t sub_100052C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100052CC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int *v6;
  unint64_t v7;
  char *v8;
  int *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  int v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 232) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  sub_10000682C(v0 + 17);
  sub_10000682C(v0 + 23);
  swift_release(v0[28]);
  v5 = (char *)v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    v7 = *((_QWORD *)v5 + 1);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = &v5[v6[5]];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v8 + 3));
      v10 = &v8[v9[6]];
      v11 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v8[v9[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v5[v6[8]]);
  }
  v12 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)((char *)v0 + v4 + 24))
    sub_10000682C((_QWORD *)((char *)v0 + v4));
  v13 = (char *)v0 + v12;
  if (*(_QWORD *)((char *)v0 + v12 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy((char *)v0 + v12);
    v14 = v13[48];
    if (v14 != 255)
      sub_1000137A4(*((id *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5), v14);
    if (*((_QWORD *)v13 + 7))
      swift_release(*((_QWORD *)v13 + 8));
  }
  return swift_deallocObject(v0, v12 + 72, v2 | 7);
}

uint64_t sub_100052EF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100047330(v0 + 16, *(_BYTE *)(v0 + 128), (_QWORD *)(v0 + 136), (_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 224), v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100052F5C()
{
  return sub_100054F64((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100052F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100052F94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  v3 = swift_allocObject(&unk_100442E80, 153, 7);
  *a1 = v3;
  return sub_100020270(v1 + 16, v3 + 16);
}

uint64_t sub_100052FEC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_10000682C(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  swift_release(v0[21]);
  swift_release(v0[24]);
  swift_release(v0[26]);
  return swift_deallocObject(v0, 216, 7);
}

uint64_t sub_100053058()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_100053080()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EA3C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return sub_100041DCC(v0 + 16);
}

uint64_t sub_1000530D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, (uint64_t)&unk_100442E30, a1);
}

uint64_t sub_100053108()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EA4C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EA48 + dword_10048EA48))(v0 + 16);
}

uint64_t sub_100053164(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EA5C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EA58 + dword_10048EA58))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000531E8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  sub_10000682C(v0 + 14);
  swift_bridgeObjectRelease(v0[20]);
  swift_release(v0[23]);
  swift_release(v0[26]);
  swift_release(v0[28]);
  return swift_deallocObject(v0, 232, 7);
}

uint64_t sub_10005325C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048EA6C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EA68 + dword_10048EA68))(a1);
}

uint64_t sub_1000532DC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  sub_10000682C(v0 + 12);
  swift_bridgeObjectRelease(v0[18]);
  return swift_deallocObject(v0, 153, 7);
}

uint64_t sub_100053330()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100053340@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004F7D0((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, (uint64_t)&unk_100442F48, a1);
}

uint64_t sub_100053370()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100053384()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100053394()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EA7C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10048EA78 + dword_10048EA78))((_OWORD *)(v0 + 16));
}

uint64_t sub_1000533EC()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000533FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EA8C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EA88 + dword_10048EA88))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10005347C()
{
  return sub_100054F64((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10005348C()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10005349C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004F7D0((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, (uint64_t)&unk_100443010, a1);
}

uint64_t sub_1000534CC()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000534DC()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  __int128 v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  v14 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v12 = *(_OWORD *)(v0 + 104);
  v5 = *(_OWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v13 = v5;
  v9 = v3;
  v10 = v4;
  v11 = v6;
  return v4(v8);
}

uint64_t sub_10005353C()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10005354C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EA9C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10048EA98 + dword_10048EA98))((_OWORD *)(v0 + 16));
}

_QWORD *sub_1000535A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_10005362C()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10005363C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EAAC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EAA8 + dword_10048EAA8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000536BC()
{
  return sub_100054F64((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1000536D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, (uint64_t)&unk_1004430D8, a1);
}

uint64_t sub_100053708()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EABC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EAB8 + dword_10048EAB8))(v0 + 16);
}

uint64_t sub_100053764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EACC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EAC8 + dword_10048EAC8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000537EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, (uint64_t)&unk_1004431A0, a1);
}

uint64_t sub_100053824()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EADC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EAD8 + dword_10048EAD8))(v0 + 16);
}

uint64_t sub_100053880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EAEC);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EAE8 + dword_10048EAE8))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10005390C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int *v11;
  unint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 23;
  sub_10000682C((_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 56));
  v10 = v0 + v3;
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v22 = v8 + 23;
    v12 = *(_QWORD *)(v10 + 8);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = v10 + v11[5];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + 24));
      v21 = v13 + v14[6];
      v15 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v15 - 8);
      v20 = v15;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v19 + 48))(v21, 1))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v13 + v14[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v10 + v11[8]));
    v9 = v22;
    v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  }
  v16 = v9 & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000682C((_QWORD *)(v0 + v4));
  swift_release(*(_QWORD *)(v0 + v5));

  sub_10000682C((_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  v17 = *(_QWORD *)(v0 + v16 + 8);
  if (v17 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + v16), v17);
  return swift_deallocObject(v0, v16 + 16, v2 | 7);
}

uint64_t sub_100053B28()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_100045978(v0 + 16, v0 + 56, v0 + v2, (_QWORD *)(v0 + v3), *(void (**)(char *, char *, uint64_t))(v0 + v4), *(_QWORD *)(v0 + v5), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100053BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  unint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = type metadata accessor for PlaylistContext(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 8) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v0 + v4;
  v11 = type metadata accessor for Playlist.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v10 + *(int *)(v1 + 20);
  v13 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v5));
  v14 = v0 + v8;
  v15 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v0 + v8, 1, v15))
  {
    v16 = *(_QWORD *)(v14 + 8);
    if (v16 >= 0xA)
      swift_bridgeObjectRelease(v16);
    v17 = v14 + v15[5];
    v18 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v18 - 1) + 48))(v17, 1, v18))
    {
      v23 = v9;
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + 24));
      v19 = v17 + v18[6];
      v20 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v20);
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v17 + v18[10] + 8));
      v9 = v23;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15[8]));
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

_QWORD *sub_100053E5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistContext(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8) + 80);
  return sub_100045534(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_100053ED0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100053F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000682C((_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 56));
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

_QWORD *sub_10005409C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8) + 80);
  return sub_1000452E0((_QWORD *)(v0 + 16), (_QWORD *)(v0 + 56), v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_1000540D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, (uint64_t)&unk_100443308, a1);
}

uint64_t sub_100054110()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EB14);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EB10 + dword_10048EB10))(v0 + 16);
}

uint64_t sub_10005416C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EB24);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EB20 + dword_10048EB20))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000541F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100054250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Entry(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10005430C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for Playlist.Entry(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc(dword_10048DE9C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_10000F894;
  return sub_1000267F4(v7, v8, v9);
}

uint64_t sub_1000543A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for Playlist.Entry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v3, 1, v10))
  {
    v21 = v8;
    v22 = v4;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v4 = v22;
  }
  v15 = (v3 + v4 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v5);
  return swift_deallocObject(v0, v16, v2 | v7 | 7);
}

uint64_t sub_100054574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, (uint64_t)&unk_100443448, a1);
}

uint64_t sub_1000545AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EB34);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EB30 + dword_10048EB30))(v0 + 16);
}

uint64_t sub_100054608(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EB44);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EB40 + dword_10048EB40))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10005468C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 104) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_10000682C((_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + 88), v5);
  v6 = v0 + v3;
  v7 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v0 + v3, 1, v7))
  {
    v8 = *(_QWORD *)(v6 + 8);
    if (v8 >= 0xA)
      swift_bridgeObjectRelease(v8);
    v9 = v6 + v7[5];
    v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
      v11 = v9 + v10[6];
      v12 = type metadata accessor for URL(0);
      v16 = *(_QWORD *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v12);
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v6 + v7[8]));
  }
  v13 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 40;
  sub_10000682C((_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v14, v2 | 7);
}

_QWORD *sub_100054860()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100046230((_QWORD *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), v0 + v2, v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1000548C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, (uint64_t)&unk_100443538, a1);
}

uint64_t sub_100054900()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EB54);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EB50 + dword_10048EB50))(v0 + 16);
}

uint64_t sub_10005495C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EB64);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EB60 + dword_10048EB60))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_1000549E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[10];
  v7 = a1[13];
  swift_release(a1[15]);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

_QWORD *sub_100054A68(_QWORD *a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1[1];
  v5 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v8 = a1[10];
  v9 = a1[13];
  swift_release(a1[15]);
  swift_release(v9);
  swift_release(v8);
  a2(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

uint64_t sub_100054AF4()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100054B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004E84C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100054B10()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100054B24()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100054B38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EB84);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10048EB80 + dword_10048EB80))((_OWORD *)(v0 + 16));
}

_QWORD *sub_100054B90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100054C18()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100054C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EB94);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EB90 + dword_10048EB90))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100054CAC()
{
  return sub_100054F64((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100054CC0()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100054CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10004E5C4((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100054CDC()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100054CF0()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100054D04(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  swift_release(v2[12]);
  swift_release(v2[15]);
  swift_release(v2[17]);
  return swift_deallocObject(v2, 144, 7);
}

uint64_t sub_100054D68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EBA4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(_OWORD *))((char *)&dword_10048EBA0 + dword_10048EBA0))((_OWORD *)(v0 + 16));
}

_QWORD *sub_100054DC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[7];
  v5 = a1[10];
  v6 = a1[13];
  v7 = a1[15];
  swift_bridgeObjectRetain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100054E48()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100054E5C(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  swift_unknownObjectRelease(v2[2]);
  a1(v2[5]);
  swift_release(v2[7]);
  swift_release(v2[9]);
  a2(v2[11]);
  swift_release(v2[14]);
  swift_release(v2[17]);
  swift_release(v2[19]);
  return swift_deallocObject(v2, 160, 7);
}

uint64_t sub_100054ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EBB4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EBB0 + dword_10048EBB0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100054F50()
{
  return sub_100054F64((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100054F64(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  swift_release(v2[5]);
  swift_release(v2[7]);
  a2(v2[9]);
  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_100054FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_100050434((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, (uint64_t)&unk_100443790, a1);
}

uint64_t sub_100054FEC()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100055038()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048EBC4);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t))((char *)&dword_10048EBC0 + dword_10048EBC0))(v0 + 16);
}

_QWORD *sub_100055090(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[5];
  v4 = a1[8];
  v5 = a1[11];
  v6 = a1[13];
  swift_retain(a1[1]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t sub_100055108()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[17]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_10005515C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EBD4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_10048EBD0 + dword_10048EBD0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1000551E0()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100055218()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  int *v11;
  unint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 96) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(sub_100005574(&qword_10048E878) - 8);
  v35 = *(unsigned __int8 *)(v5 + 80);
  v6 = (v3 + v4 + v35) & ~v35;
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v9 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 79) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*((_QWORD *)v0 + 5))
    sub_10000682C((_QWORD *)v0 + 2);
  sub_10000682C((_QWORD *)v0 + 7);
  v10 = &v0[v3];
  v11 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(v10, 1, v11))
  {
    v31 = v2;
    v12 = *((_QWORD *)v10 + 1);
    if (v12 >= 0xA)
      swift_bridgeObjectRelease(v12);
    v13 = &v10[v11[5]];
    v14 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v14 - 1) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v13 + 3));
      v30 = &v13[v14[6]];
      v15 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v15 - 8);
      v29 = v15;
      if (!(*(unsigned int (**)(char *, uint64_t))(v28 + 48))(v30, 1))
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v13[v14[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v10[v11[8]]);
    v2 = v31;
  }
  v16 = (((v34 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = type metadata accessor for PlaylistContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(&v0[v6], 1, v17))
  {
    v18 = type metadata accessor for Playlist.Entry(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(&v0[v6], v18);
    v19 = &v0[v6 + *(int *)(v17 + 20)];
    v20 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  swift_release(*(_QWORD *)&v0[v7]);
  sub_10000682C(&v0[v8]);
  sub_10000682C(&v0[v9]);
  v21 = &v0[v32];
  if (*(_QWORD *)&v0[v32 + 56] != 1)
  {
    swift_unknownObjectWeakDestroy(&v0[v32]);
    v22 = v21[48];
    if (v22 != 255)
      sub_1000137A4(*((id *)v21 + 1), *((_QWORD *)v21 + 2), *((_QWORD *)v21 + 3), *((_QWORD *)v21 + 4), *((_QWORD *)v21 + 5), v22);
    if (*((_QWORD *)v21 + 7))
      swift_release(*((_QWORD *)v21 + 8));
  }
  v23 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)&v0[v33 + 24])
    sub_10000682C(&v0[v33]);

  swift_bridgeObjectRelease(*(_QWORD *)&v0[v16 + 8]);
  v24 = *(_QWORD *)&v0[v23 + 8];
  if (v24 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)&v0[v23], v24);
  v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = v25 + 40;
  sub_10000682C(&v0[v25]);
  return swift_deallocObject(v0, v26, v2 | v35 | 7);
}

_QWORD *sub_1000555B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048E878) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1000445CC(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v5), *(_QWORD *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void **)(v0 + v12), *(_QWORD *)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1000556D4@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EC68, &qword_10048EF30, (uint64_t (*)(_QWORD))&type metadata accessor for Album, a1);
}

uint64_t sub_1000556F0@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EF20, &qword_10048EF28, (uint64_t (*)(_QWORD))&type metadata accessor for Artist, a1);
}

uint64_t sub_10005570C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v8 = sub_100005574(a1);
  v9 = sub_10005B670(a2, a1);
  dispatch thunk of Collection.startIndex.getter(v8);
  dispatch thunk of Collection.endIndex.getter(v17, v8, v9);
  if (v18 == v17[0])
  {
    v10 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a4, 1, 1, v10);
  }
  else
  {
    v12 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v17, &v18, v8, v9);
    v14 = v13;
    v15 = a3(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a4, v14, v15);
    v12(v17, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a4, 0, 1, v15);
  }
}

uint64_t sub_10005581C@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EF10, &qword_10048EF18, (uint64_t (*)(_QWORD))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_100055838@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EF00, &qword_10048EF08, (uint64_t (*)(_QWORD))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_100055854@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EEF0, &qword_10048EEF8, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist, a1);
}

uint64_t sub_100055870@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EEE0, &qword_10048EEE8, (uint64_t (*)(_QWORD))&type metadata accessor for Song, a1);
}

uint64_t sub_10005588C@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EEC0, &qword_10048EEC8, (uint64_t (*)(_QWORD))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_1000558A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EEB0, &qword_10048EEB8, (uint64_t (*)(_QWORD))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_1000558C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EEA0, &qword_10048EEA8, (uint64_t (*)(_QWORD))&type metadata accessor for TVShow, a1);
}

uint64_t sub_1000558E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EE90, &qword_10048EE98, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_1000558FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EE80, &qword_10048EE88, (uint64_t (*)(_QWORD))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_100055918@<X0>(uint64_t a1@<X8>)
{
  return sub_10005570C(&qword_10048EED0, &qword_10048EED8, (uint64_t (*)(_QWORD))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;

  v47 = a9;
  v48 = a8;
  v40 = a7;
  v42 = a2;
  v43 = a6;
  v45 = a3;
  v46 = a4;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v41 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v44 = (uint64_t)&v39 - v18;
  v19 = *(void (**)(void))(v12 + 16);
  v19();
  ((void (*)(char *, char *, uint64_t))v19)(v17, a1, a5);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 56) & ~v20;
  v39 = v20 | 7;
  v22 = (char *)swift_allocObject(&unk_100443A18, v21 + v13, v20 | 7);
  v23 = v43;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = v23;
  v24 = v48;
  *((_QWORD *)v22 + 4) = a7;
  *((_QWORD *)v22 + 5) = v24;
  *((_QWORD *)v22 + 6) = v42;
  v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v25(&v22[v21], v17, a5);
  v26 = v41;
  v25(v41, a1, a5);
  v27 = (v20 + 48) & ~v20;
  v28 = v23;
  v29 = *(_QWORD *)(v23 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = (v27 + v13 + v30) & ~v30;
  v32 = (char *)swift_allocObject(&unk_100443A40, v31 + *(_QWORD *)(v29 + 64), v39 | v30);
  *((_QWORD *)v32 + 2) = a5;
  *((_QWORD *)v32 + 3) = v28;
  v33 = v28;
  v34 = v40;
  v35 = v48;
  *((_QWORD *)v32 + 4) = v40;
  *((_QWORD *)v32 + 5) = v35;
  v25(&v32[v27], v26, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v32[v31], v45, v33);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v44, (uint64_t)sub_100058A74, (uint64_t)v22, (uint64_t)&unk_10048EC18, (uint64_t)v32, v46, a5, v34, v49);
  v36 = v49[1];
  v37 = v47;
  *v47 = v49[0];
  v37[1] = v36;
  result = *(double *)&v50;
  v37[2] = v50;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 4, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048EC20, (uint64_t)&unk_10048EC28, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __int128 v33;
  _OWORD *v34;
  double result;
  __int128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;

  v41 = a8;
  v42 = a7;
  v39 = a2;
  v40 = a3;
  v37 = a1;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(a1);
  v15 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  v38 = (uint64_t)&v37 - v19;
  v20 = *(void (**)(void))(v12 + 16);
  v20();
  ((void (*)(char *, char *, uint64_t))v20)(v18, a1, a4);
  v21 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v21 + 48) & ~v21;
  v23 = v22 + v13;
  v24 = v21 | 7;
  v25 = (char *)swift_allocObject(&unk_100443A68, v22 + v13, v21 | 7);
  *((_QWORD *)v25 + 2) = a4;
  *((_QWORD *)v25 + 3) = a5;
  v26 = v42;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27(&v25[v22], v18, a4);
  v27(v15, v37, a4);
  v28 = *(_QWORD *)(a5 - 8);
  v29 = *(unsigned __int8 *)(v28 + 80);
  v30 = (v23 + v29) & ~v29;
  v31 = (char *)swift_allocObject(&unk_100443A90, v30 + *(_QWORD *)(v28 + 64), v24 | v29);
  *((_QWORD *)v31 + 2) = a4;
  *((_QWORD *)v31 + 3) = a5;
  v32 = v42;
  *((_QWORD *)v31 + 4) = a6;
  *((_QWORD *)v31 + 5) = v32;
  v27(&v31[v22], v15, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(&v31[v30], v39, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v38, 0, 0, (uint64_t)sub_100059498, (uint64_t)v25, (uint64_t)&unk_10048EC38, (uint64_t)v31, v40, v43, a4, a6);
  v33 = v43[1];
  v34 = v41;
  *v41 = v43[0];
  v34[1] = v33;
  result = *(double *)&v44;
  v36 = v45;
  v34[2] = v44;
  v34[3] = v36;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100057948(a1, 17, (uint64_t)sub_10005B6B0, (uint64_t)&unk_10048EC40, (uint64_t)&unk_10048EC48, a2).n128_u64[0];
  return result;
}

uint64_t sub_100055D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100059B6C(a1, 17, (uint64_t)sub_10005B6B0, (uint64_t)&unk_10048EC40, (uint64_t)&unk_10048EC48, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100443AB8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_1000149A8(a8, v21 + v17, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10048EC58;
  a9[7] = v21;
  return result;
}

uint64_t sub_100055E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100055F40, 0, 0);
}

uint64_t sub_100055F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100014A7C(*(_QWORD *)(v0 + 96), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000F7B4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100056104, v18, v19);
  }
}

uint64_t sub_100056104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 41, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005B6C4, 0, 0);
}

unint64_t sub_1000561D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  v4 = sub_100005574(&qword_10048DA40);
  __chkstk_darwin(v4);
  v60 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicVideo(0);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  __chkstk_darwin(v6);
  v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048DA48);
  __chkstk_darwin(v8);
  v62 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v61 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v56 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DA38);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a2 - 8);
  v17 = __chkstk_darwin(v13);
  v57 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v54 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v54 - v22;
  v24 = type metadata accessor for Track(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v63 = a1;
  v28(v23, a1, a2);
  v29 = swift_dynamicCast(v15, v23, a2, v24, 6);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  if ((v29 & 1) != 0)
  {
    v30(v15, 0, 1, v24);
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v27, v15, v24);
    Track.albumTitle.getter(v31);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    swift_bridgeObjectRelease(v33);
    if (v33)
      return 0;
  }
  else
  {
    v30(v15, 1, 1, v24);
    sub_100008758((uint64_t)v15, &qword_10048DA38);
  }
  v34 = v63;
  v28(v21, v63, a2);
  v35 = (uint64_t)v62;
  v36 = swift_dynamicCast(v62, v21, a2, v10, 6);
  v37 = v61;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if ((v36 & 1) == 0)
  {
    v38(v35, 1, 1, v10);
    sub_100008758(v35, &qword_10048DA48);
    goto LABEL_9;
  }
  v38(v35, 0, 1, v10);
  v39 = v56;
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 32))(v56, v35, v10);
  Song.albumTitle.getter(v40);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v10);
  swift_bridgeObjectRelease(v42);
  if (v42)
    return 0;
LABEL_9:
  v43 = v57;
  v28(v57, v34, a2);
  v45 = v59;
  v44 = (uint64_t)v60;
  v46 = swift_dynamicCast(v60, v43, a2, v59, 6);
  v47 = v58;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v44, 0, 1, v45);
    v49 = v55;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v55, v44, v45);
    MusicVideo.albumTitle.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v44, 1, 1, v45);
    sub_100008758(v44, &qword_10048DA40);
  }
  return 0xD000000000000010;
}

uint64_t sub_10005662C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_100005574(&qword_10048DA40);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DA48);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10048DA38);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000567B0, 0, 0);
}

uint64_t sub_1000567B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 1);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_100056BA8;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_100008758(v20, &qword_10048DA38);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_100056C10;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_100008758(v39, &qword_10048DA48);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 1);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_100056C78;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_100008758(v58, &qword_10048DA40);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100056BA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10005B6D0, 0, 0);
}

uint64_t sub_100056C10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10005B6D4, 0, 0);
}

uint64_t sub_100056C78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10005B6CC, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_10003D824;
}

id sub_100056D1C()
{
  return sub_10005ACE8();
}

uint64_t sub_100056D3C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6C41206F74206F47, 0xEB000000006D7562);
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  if (a1)
    return sub_100056D90() & 1;
  else
    return 1;
}

uint64_t sub_100056D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v25[15];

  v0 = type metadata accessor for MusicPropertySource(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v25[-1] - v6;
  v8 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter(v5);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  if ((v8 & 1) != 0)
  {
    v10 = enum case for MusicPropertySource.library(_:);
    v9(v7, enum case for MusicPropertySource.library(_:), v0);
  }
  else
  {
    v9(v7, enum case for MusicPropertySource.catalog(_:), v0);
    v10 = enum case for MusicPropertySource.library(_:);
  }
  v9(v4, v10, v0);
  v11 = static MusicPropertySource.== infix(_:_:)(v7, v4);
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v7, v0);
  if ((v11 & 1) != 0)
    return 1;
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v14 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100388580);
  v16 = swift_getKeyPath(&unk_1003885A8);
  static Published.subscript.getter(v25, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  v13 = BYTE1(v25[0]);
  v17 = v25[3];
  v18 = v25[4];
  v19 = v25[7];
  v20 = v25[9];
  v21 = (void *)v25[10];
  v22 = v25[12];
  swift_bridgeObjectRelease(v25[14]);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);

  return v13;
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v2 = sub_100005574(&qword_10048EC60);
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048D9F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Album(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = sub_100056D90();
    if ((v10 & 1) == 0)
      return 0;
  }
  MusicVideo.albums.getter(v10);
  v13 = sub_100005574(&qword_10048EC68);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v13) == 1)
  {
    sub_100008758((uint64_t)v4, &qword_10048EC60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_6:
    sub_100008758((uint64_t)v7, &qword_10048D9F8);
    return 0;
  }
  sub_10005570C(&qword_10048EC68, &qword_10048EF30, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    goto LABEL_6;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
  v17 = Album.isSingleMusicVideo.getter(v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (v17 == 2)
    return 0;
  return (v17 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  _BOOL8 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v0 = sub_100005574(&qword_10048EC60);
  __chkstk_darwin(v0);
  v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100005574(&qword_10048D9F8);
  __chkstk_darwin(v2);
  v37 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Album(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicVideo(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Track(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100056D90() & 1) == 0)
    return 0;
  v33 = v7;
  v34 = v5;
  v35 = v4;
  v36 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v12);
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 != enum case for Track.song(_:))
  {
    if (v16 == enum case for Track.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
      v18 = v11;
      v19 = v8;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v11, v15, v8);
      v21 = (uint64_t)v38;
      MusicVideo.albums.getter(v20);
      v22 = sub_100005574(&qword_10048EC68);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
      {
        sub_100008758(v21, &qword_10048EC60);
        v24 = v37;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
      }
      else
      {
        v24 = v37;
        sub_10005570C(&qword_10048EC68, &qword_10048EF30, (uint64_t (*)(_QWORD))&type metadata accessor for Album, v37);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        v27 = v34;
        v26 = v35;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35) != 1)
        {
          v29 = v33;
          v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 32))(v33, v24, v26);
          v31 = Album.isSingleMusicVideo.getter(v30);
          (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
          v28 = v36;
          v17 = v31 != 2 && (v31 & 1) == 0;
          goto LABEL_12;
        }
      }
      sub_100008758(v24, &qword_10048D9F8);
      v17 = 0;
      v28 = v36;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v19);
      return v17;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 1;
}

uint64_t Playlist.supportsContainerNavigation(itemState:)()
{
  return sub_100056D90() & 1;
}

BOOL Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  v0 = sub_100005574(&qword_10048EC60);
  __chkstk_darwin(v0);
  v45 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100005574(&qword_10048D9F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048EC70);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v37 - v17;
  if ((sub_100056D90() & 1) != 0)
  {
    v38 = v8;
    v39 = v6;
    v41 = v5;
    v42 = v12;
    v40 = v4;
    v43 = v10;
    v44 = v9;
    Playlist.Entry.item.getter();
    v19 = type metadata accessor for Playlist.Entry.Item(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      v21 = 0;
LABEL_12:
      sub_100008758((uint64_t)v18, &qword_10048EC70);
      return v21;
    }
    sub_100014A7C((uint64_t)v18, (uint64_t)v16, &qword_10048EC70);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v16, v19);
    if (v22 != enum case for Playlist.Entry.Item.musicVideo(_:))
    {
      v21 = v22 == enum case for Playlist.Entry.Item.song(_:);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v20 + 96))(v16, v19);
    v23 = v42;
    v24 = v43;
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v42, v16, v44);
    v26 = (uint64_t)v45;
    MusicVideo.albums.getter(v25);
    v27 = sub_100005574(&qword_10048EC68);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
    {
      sub_100008758(v26, &qword_10048EC60);
      v29 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v40, 1, 1, v41);
    }
    else
    {
      v29 = (uint64_t)v40;
      sub_10005570C(&qword_10048EC68, &qword_10048EF30, (uint64_t (*)(_QWORD))&type metadata accessor for Album, (uint64_t)v40);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      v30 = v39;
      v31 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v29, 1, v41) != 1)
      {
        v34 = v38;
        v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 32))(v38, v29, v31);
        v36 = Album.isSingleMusicVideo.getter(v35);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v31);
        v32 = v44;
        v21 = v36 != 2 && (v36 & 1) == 0;
        goto LABEL_11;
      }
    }
    sub_100008758(v29, &qword_10048D9F8);
    v21 = 0;
    v32 = v44;
LABEL_11:
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v32);
    goto LABEL_12;
  }
  return 0;
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  unsigned int *v4;

  v2 = dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
  v3 = type metadata accessor for MusicPropertySource(0);
  v4 = (unsigned int *)&enum case for MusicPropertySource.library(_:);
  if ((v2 & 1) == 0)
    v4 = (unsigned int *)&enum case for MusicPropertySource.catalog(_:);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, *v4, v3);
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100057948(a1, 15, (uint64_t)sub_10005B6B0, (uint64_t)&unk_10048EC78, (uint64_t)&unk_10048EC80, a2).n128_u64[0];
  return result;
}

__n128 sub_100057948@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];

  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v19 = *(_OWORD *)(a1 + 32);
  v20 = *(_OWORD *)(a1 + 16);
  v18 = *(__n128 *)(a1 + 48);
  sub_1000149A8(a1, (uint64_t)v21, &qword_10048E9F8);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 56);
  sub_1000595EC((uint64_t)v21);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  *(_QWORD *)a6 = v12;
  *(_QWORD *)(a6 + 8) = v13;
  *(_OWORD *)(a6 + 16) = v20;
  *(_OWORD *)(a6 + 32) = v19;
  result = v18;
  *(__n128 *)(a6 + 48) = v18;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_100057A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100059B6C(a1, 15, (uint64_t)sub_10005B6B0, (uint64_t)&unk_10048EC78, (uint64_t)&unk_10048EC80, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100443AE0, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_1000149A8(a8, v21 + v17, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10048EC90;
  a9[7] = v21;
  return result;
}

uint64_t sub_100057B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100057BFC, 0, 0);
}

uint64_t sub_100057BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100014A7C(*(_QWORD *)(v0 + 96), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000F7B4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100384AA0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100057DC8, v18, v19);
  }
}

uint64_t sub_100057DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005B6C4, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_10003D7D0;
}

id sub_100057ED8()
{
  return sub_10005ACE8();
}

uint64_t sub_100057EFC(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6C50206F74206F47, 0xEE007473696C7961);
}

uint64_t sub_100057F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 16);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000F894;
  return v6();
}

uint64_t sub_100057F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 4, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048EC20, (uint64_t)&unk_10048EC28, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100443B08, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_1000149A8(a6, v21 + v17, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_10048ECA0;
  a9[5] = v21;
  return result;
}

uint64_t sub_100058094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100058140, 0, 0);
}

uint64_t sub_100058140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_1000582F8, v18, v19);
  }
}

uint64_t sub_1000582F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005B6C8, 0, 0);
}

unint64_t sub_1000583C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;

  v87 = a2;
  v5 = sub_100005574(&qword_10048DA40);
  __chkstk_darwin(v5);
  v78 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for MusicVideo(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v73 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048DA48);
  __chkstk_darwin(v8);
  v83 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for Song(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v74 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048DA38);
  v12 = __chkstk_darwin(v11);
  v86 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = a3;
  v84 = *(_QWORD *)(a3 - 8);
  v14 = __chkstk_darwin(v12);
  v75 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v80 = (char *)&v73 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v73 - v18;
  v20 = type metadata accessor for Track(0);
  v85 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v79 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100388580);
  v23 = swift_getKeyPath(&unk_1003885A8);
  v24 = a1;
  static Published.subscript.getter(&v89, a1, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v25 = v90;
  v26 = v91;
  v27 = v92;
  v28 = v93;
  v30 = v94;
  v29 = v95;
  v31 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v30);

  if ((v25 & 1) == 0)
    return 0xD00000000000003CLL;
  v33 = swift_getKeyPath(&unk_100388580);
  v34 = swift_getKeyPath(&unk_1003885A8);
  static Published.subscript.getter(&v89, v24, v33, v34);
  swift_release(v33);
  swift_release(v34);
  v35 = BYTE1(v89);
  v36 = v91;
  v37 = v92;
  v38 = v93;
  v39 = v94;
  v40 = v95;
  v41 = v96;
  swift_bridgeObjectRelease(v97);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v39);

  if (v35 != 1)
    return 0xD000000000000016;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v44 = v87;
  v43 = v88;
  v42(v19, v87, v88);
  v45 = (uint64_t)v86;
  v46 = swift_dynamicCast(v86, v19, v43, v20, 6);
  v47 = v85;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
  if ((v46 & 1) != 0)
  {
    v48(v45, 0, 1, v20);
    v49 = v79;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 32))(v79, v45, v20);
    Track.catalogID.getter(v50);
    v52 = v51;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v20);
    swift_bridgeObjectRelease(v52);
    if (v52)
      return 0;
  }
  else
  {
    v48(v45, 1, 1, v20);
    sub_100008758(v45, &qword_10048DA38);
  }
  v53 = v80;
  v42(v80, v44, v43);
  v54 = (uint64_t)v83;
  v55 = v82;
  v56 = swift_dynamicCast(v83, v53, v43, v82, 6);
  v57 = v81;
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
  if ((v56 & 1) == 0)
  {
    v58(v54, 1, 1, v55);
    sub_100008758(v54, &qword_10048DA48);
    goto LABEL_13;
  }
  v58(v54, 0, 1, v55);
  v59 = v74;
  v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 32))(v74, v54, v55);
  Song.catalogID.getter(v60);
  v62 = v61;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v55);
  swift_bridgeObjectRelease(v62);
  if (v62)
    return 0;
LABEL_13:
  v63 = v75;
  v42(v75, v44, v43);
  v64 = (uint64_t)v78;
  v65 = v77;
  v66 = swift_dynamicCast(v78, v63, v43, v77, 6);
  v67 = v76;
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56);
  if ((v66 & 1) != 0)
  {
    v68(v64, 0, 1, v65);
    v69 = v73;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 32))(v73, v64, v65);
    MusicVideo.catalogID.getter(v70);
    v72 = v71;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v65);
    swift_bridgeObjectRelease(v72);
    if (v72)
      return 0;
  }
  else
  {
    v68(v64, 1, 1, v65);
    sub_100008758(v64, &qword_10048DA40);
  }
  return 0xD000000000000010;
}

uint64_t sub_100058A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_100058A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000583C8(*(_QWORD *)(v0 + 48), v0 + ((v2 + 56) & ~v2), v1);
}

uint64_t sub_100058A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v8 = sub_100005574(&qword_10048DA40);
  v6[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MusicVideo(0);
  v6[8] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[9] = v10;
  v6[10] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NavigationItem(0);
  v6[11] = v11;
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048DA48);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v6[14] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[15] = v14;
  v6[16] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10048DA38);
  v6[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 - 8);
  v6[18] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[19] = swift_task_alloc(v17);
  v6[20] = swift_task_alloc(v17);
  v6[21] = swift_task_alloc(v17);
  v18 = type metadata accessor for Track(0);
  v6[22] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[23] = v19;
  v6[24] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100058C1C, 0, 0);
}

uint64_t sub_100058C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 16);
  v6(v3, *(_QWORD *)(v0 + 16), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 136);
    v14 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 48);
    v8(v12, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v11);
    swift_storeEnumTagMultiPayload(v13, v14, 0);
    v16 = *(int **)(v15 + 8);
    v68 = (int *)((char *)v16 + *v16);
    v17 = (_QWORD *)swift_task_alloc(v16[1]);
    *(_QWORD *)(v0 + 200) = v17;
    v18 = sub_100059014;
LABEL_7:
    *v17 = v0;
    v17[1] = v18;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v68)(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
  v19 = *(_QWORD *)(v0 + 160);
  v20 = *(_QWORD *)(v0 + 136);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 16);
  v8(v20, 1, 1, *(_QWORD *)(v0 + 176));
  sub_100008758(v20, &qword_10048DA38);
  v6(v19, v25, v24);
  v26 = swift_dynamicCast(v23, v19, v24, v21, 6);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
  if ((v26 & 1) != 0)
  {
    v28 = *(_QWORD *)(v0 + 176);
    v29 = *(_QWORD *)(v0 + 184);
    v31 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 112);
    v35 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 48);
    v27(v33, 0, 1, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v30, v33, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v30, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v34, enum case for Track.song(_:), v28);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    v37 = *(int **)(v36 + 8);
    v68 = (int *)((char *)v37 + *v37);
    v17 = (_QWORD *)swift_task_alloc(v37[1]);
    *(_QWORD *)(v0 + 208) = v17;
    v18 = sub_100059140;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 64);
  v41 = *(_QWORD *)(v0 + 72);
  v42 = *(_QWORD *)(v0 + 56);
  v43 = *(_QWORD *)(v0 + 32);
  v44 = *(_QWORD *)(v0 + 16);
  v27(v39, 1, 1, *(_QWORD *)(v0 + 112));
  sub_100008758(v39, &qword_10048DA48);
  v6(v38, v44, v43);
  v45 = swift_dynamicCast(v42, v38, v43, v40, 6);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v45 & 1) != 0)
  {
    v47 = *(_QWORD *)(v0 + 176);
    v48 = *(_QWORD *)(v0 + 184);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v52 = *(_QWORD *)(v0 + 72);
    v51 = *(_QWORD *)(v0 + 80);
    v54 = *(_QWORD *)(v0 + 56);
    v53 = *(_QWORD *)(v0 + 64);
    v55 = *(_QWORD *)(v0 + 48);
    v46(v54, 0, 1, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v54, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v49, v51, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v48 + 104))(v49, enum case for Track.musicVideo(_:), v47);
    swift_storeEnumTagMultiPayload(v49, v50, 0);
    v56 = *(int **)(v55 + 8);
    v68 = (int *)((char *)v56 + *v56);
    v17 = (_QWORD *)swift_task_alloc(v56[1]);
    *(_QWORD *)(v0 + 216) = v17;
    v18 = sub_10005926C;
    goto LABEL_7;
  }
  v58 = *(_QWORD *)(v0 + 56);
  v46(v58, 1, 1, *(_QWORD *)(v0 + 64));
  sub_100008758(v58, &qword_10048DA40);
  v59 = *(_QWORD *)(v0 + 160);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 128);
  v62 = *(_QWORD *)(v0 + 136);
  v65 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 104);
  v66 = *(_QWORD *)(v0 + 80);
  v67 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v60);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100059014()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_10005907C, 0, 0);
}

uint64_t sub_10005907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100059140()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 208));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000591A8, 0, 0);
}

uint64_t sub_1000591A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005926C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 216));
  sub_100006798(v1, type metadata accessor for NavigationItem);
  return swift_task_switch(sub_1000592D4, 0, 0);
}

uint64_t sub_1000592D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005939C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_10048EC14);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000F894;
  return sub_100058A98(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_100059440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return swift_deallocObject(v0, v4, v5);
}

unint64_t sub_100059498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1000561D4(v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_1000594BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = v7 + *(_QWORD *)(v5 + 64);
  v9 = v3 | v6 | 7;
  (*(void (**)(uint64_t))(v2 + 8))(v0 + v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v9);
}

uint64_t sub_100059548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v9 = (uint64_t)v0 + v7;
  v10 = (uint64_t)v0 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v11 = (_QWORD *)swift_task_alloc(dword_10048EC34);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000F894;
  return sub_10005662C(v9, v10, v2, v3, v4, v5);
}

uint64_t sub_1000595EC(uint64_t a1)
{
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_100059618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048EC54);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100055E94(v7, v8, v2, v3);
}

uint64_t sub_1000596B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048EC8C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100057B50(v7, v8, v2, v3);
}

uint64_t sub_100059758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048EC9C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100058094(v7, v8, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x6572432077656956, 0xEC00000073746964);
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100443B30, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100443B58, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10000F228;
}

uint64_t sub_10005989C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000598C0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6572432077656956, 0xEC00000073746964);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*sub_100059A30())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444008, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100444030, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E6F666E69;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10000F88C;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_100057948(a1, 16, (uint64_t)sub_100059AD8, (uint64_t)&unk_10048ECA8, (uint64_t)&unk_10048ECB0, a2).n128_u64[0];
  return result;
}

uint64_t sub_100059AD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100059AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 32);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000EA88;
  return v6();
}

uint64_t sub_100059B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100059B6C(a1, 16, (uint64_t)sub_100059AD8, (uint64_t)&unk_10048ECA8, (uint64_t)&unk_10048ECB0, a2);
}

uint64_t sub_100059B6C@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  v10 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v10;
  v11 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 56) = v8;
  *(_BYTE *)(a6 + 64) = a2;
  *(_QWORD *)(a6 + 72) = a3;
  *(_QWORD *)(a6 + 80) = 0;
  *(_QWORD *)(a6 + 88) = 0x4014000000000000;
  *(_QWORD *)(a6 + 96) = a4;
  *(_QWORD *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = a5;
  *(_QWORD *)(a6 + 120) = 0;
  swift_bridgeObjectRetain(v6);
  swift_retain(v10);
  swift_retain(v11);
  return swift_retain(v8);
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a10 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100443B80, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a10;
  *(_QWORD *)(v21 + 24) = a11;
  sub_1000149A8(a8, v21 + v17, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_10048ECC0;
  a9[7] = v21;
  return result;
}

uint64_t sub_100059D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100059DB0, 0, 0);
}

uint64_t sub_100059DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100014A7C(*(_QWORD *)(v0 + 96), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_10000F7B4(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_1003849A0;
    *(_BYTE *)(inited + 72) = 3;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100059F7C, v18, v19);
  }
}

uint64_t sub_100059F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005A04C, 0, 0);
}

uint64_t sub_10005A04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100006798(*(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005A0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048ECBC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000EA88;
  return sub_100059D04(v7, v8, v2, v3);
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_10005A164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v17[-v12];
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v14 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_10003D788;
}

id sub_10005A2EC()
{
  return sub_10005ACE8();
}

uint64_t sub_10005A308(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x7241206F74206F47, 0xEC00000074736974);
}

uint64_t sub_10005A328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];

  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v19[-v14];
  String.LocalizationValue.init(stringLiteral:)(a3, a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v16 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v17 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  return v17;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 57, (uint64_t)sub_10000F930, (uint64_t)&unk_10048ECC8, (uint64_t)&unk_10048ECD0, a2);
}

uint64_t sub_10005A4B4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t sub_10005A528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 57, (uint64_t)sub_10000F930, (uint64_t)&unk_10048ECC8, (uint64_t)&unk_10048ECD0, a2);
}

uint64_t sub_10005A548@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  __int128 v7;
  __int128 v9;

  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a6 = *(_QWORD *)a1;
  v7 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 8) = v7;
  v9 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 24) = v9;
  *(_QWORD *)(a6 + 40) = v6;
  *(_BYTE *)(a6 + 48) = a2;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = 0;
  *(_QWORD *)(a6 + 72) = 0x4014000000000000;
  *(_QWORD *)(a6 + 80) = a4;
  *(_QWORD *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = a5;
  *(_QWORD *)(a6 + 104) = 0;
  swift_retain(v7);
  swift_retain(v9);
  return swift_retain(v6);
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v15 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = *(_QWORD *)(a7 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v17 + *(_QWORD *)(v15 + 64) + v19) & ~v19;
  v21 = swift_allocObject(&unk_100443BA8, v20 + *(_QWORD *)(v18 + 64), v16 | v19 | 7);
  *(_QWORD *)(v21 + 16) = a7;
  *(_QWORD *)(v21 + 24) = a8;
  sub_1000149A8(a6, v21 + v17, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v20, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_10048ECE0;
  a9[5] = v21;
  return result;
}

uint64_t sub_10005A6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005A768, 0, 0);
}

uint64_t sub_10005A768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10005A920, v18, v19);
  }
}

uint64_t sub_10005A920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005A9F0, 0, 0);
}

uint64_t sub_10005A9F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100006798(*(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005AA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v0 + v4, 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v20 = v12 + v13[6];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v15, v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10005AC0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048ECDC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_10005A6BC(v7, v8, v2, v3);
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_10003D7FC;
}

id sub_10005ACC8()
{
  return sub_10005ACE8();
}

id sub_10005ACE8()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v0);

  return v1;
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003ADA00);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for Playlist(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v14 = type metadata accessor for Track(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = type metadata accessor for Playlist(0);
  }
  else
  {
    if (result > 1)
      return result;
    v4 = type metadata accessor for Track(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100006798(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem(uint64_t a1)
{
  uint64_t result;

  result = qword_10048EE48;
  if (!qword_10048EE48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationItem);
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if ((_DWORD)EnumCaseMultiPayload == 2)
    v7 = type metadata accessor for Playlist(0);
  else
    v7 = type metadata accessor for Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100006798(a1, type metadata accessor for NavigationItem);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if ((_DWORD)EnumCaseMultiPayload == 2)
      v7 = type metadata accessor for Playlist(0);
    else
      v7 = type metadata accessor for Track(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, EnumCaseMultiPayload);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_10005B2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10005B2C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for Track(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = v5[0];
    result = type metadata accessor for Playlist(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[7]);
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  v4 = *(_QWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[7];
  a1[6] = v11;
  a1[7] = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

_QWORD *_s9GoToAlbumO7ContextVwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_release(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  v5 = a1[7];
  a1[7] = v4;
  swift_release(v5);
  return a1;
}

uint64_t _s9GoToAlbumO7ContextVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10005B5E8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t sub_10005B670(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100005600(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.OpenInClassical.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 9;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048EF38;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048EF40;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  unint64_t (**v62)();
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t (**v75)();
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v72 = a2;
  v7 = type metadata accessor for Album(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v73 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v10;
  __chkstk_darwin(v9);
  v70 = (char *)&v64 - v11;
  v66 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10048EF48);
  v67 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v71 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v69 = (uint64_t)&v64 - v19;
  v20 = __chkstk_darwin(v18);
  v68 = (uint64_t)&v64 - v21;
  v76 = v22;
  v23 = __chkstk_darwin(v20);
  v25 = (uint64_t *)((char *)&v64 - v24);
  v77 = a1;
  v26 = Album.catalogID.getter(v23);
  v74 = a3;
  v75 = a4;
  if (v27)
  {
    v28 = v27;
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    swift_bridgeObjectRelease(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(v25, v14, v66);
    v33 = 0;
    v34 = v67;
  }
  else
  {
    v29 = sub_10005BBB4();
    v30 = swift_allocError(&type metadata for ClassicalBridge.Error, v29, 0, 0);
    *(_QWORD *)v31 = 2;
    *(_QWORD *)(v31 + 8) = 0;
    *(_QWORD *)(v31 + 16) = 0;
    *(_QWORD *)(v31 + 24) = 0;
    *(_BYTE *)(v31 + 32) = 2;
    swift_willThrow(v32);
    v34 = v67;
    *v25 = v30;
    v33 = 1;
  }
  swift_storeEnumTagMultiPayload(v25, v15, v33);
  v35 = v70;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v70, v77, v7);
  v36 = v68;
  sub_100014A7C((uint64_t)v25, v68, &qword_10048EF48);
  v37 = *(unsigned __int8 *)(v8 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = v8;
  v40 = v7;
  v41 = *(unsigned __int8 *)(v34 + 80);
  v42 = (v78 + v41 + v38) & ~v41;
  v43 = v76;
  v65 = v41 | 7;
  v66 = v41 | 7 | v37;
  v44 = swift_allocObject(&unk_100444078, v42 + v76, v66);
  v45 = v44 + v38;
  v46 = v44;
  v67 = v44;
  v47 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
  v47(v45, v35, v40);
  sub_1000149A8(v36, v46 + v42, &qword_10048EF48);
  v48 = v69;
  sub_100014A7C((uint64_t)v25, v69, &qword_10048EF48);
  v49 = (v41 + 16) & ~v41;
  v50 = (v43 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = swift_allocObject(&unk_1004440A0, v50 + 72, v65);
  sub_1000149A8(v48, v51 + v49, &qword_10048EF48);
  sub_100014AC0(v72, v51 + v50);
  v52 = v71;
  sub_1000149A8((uint64_t)v25, v71, &qword_10048EF48);
  v53 = v73;
  v47((uint64_t)v73, v77, v40);
  v54 = (uint64_t (*)(uint64_t, char *, uint64_t))v47;
  v55 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 16) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v37 + v58) & ~v37;
  v60 = swift_allocObject(&unk_1004440C8, v59 + v78, v66 | v56);
  sub_1000149A8(v74, v60 + v57, &qword_10048D8E8);
  sub_1000149A8(v52, v60 + v58, &qword_10048EF48);
  result = v54(v60 + v59, v53, v40);
  v62 = v75;
  v63 = v67;
  *v75 = sub_10005BE38;
  v62[1] = (unint64_t (*)())v63;
  v62[2] = (unint64_t (*)())&unk_10048EF58;
  v62[3] = (unint64_t (*)())v51;
  v62[4] = (unint64_t (*)())&unk_10048EF68;
  v62[5] = (unint64_t (*)())v60;
  return result;
}

unint64_t sub_10005BBB4()
{
  unint64_t result;

  result = qword_1004966C0;
  if (!qword_1004966C0)
  {
    result = swift_getWitnessTable(&unk_100391F84, &type metadata for ClassicalBridge.Error);
    atomic_store(result, (unint64_t *)&qword_1004966C0);
  }
  return result;
}

unint64_t sub_10005BBF8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = 0xD000000000000021;
  v4 = sub_100005574(&qword_10048EF48);
  v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((Album.isClassicalExperienceAvailable.getter(v5) & 1) != 0)
  {
    sub_100014A7C(a2, (uint64_t)v7, &qword_10048EF48);
    if (swift_getEnumCaseMultiPayload(v7, v4) == 1)
    {
      v8 = *v7;
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v9._countAndFlagsBits = 0xD000000000000028;
      v9._object = (void *)0x80000001003ADB10;
      String.append(_:)(v9);
      v14 = v8;
      v10 = sub_100005574((uint64_t *)&unk_1004911F0);
      _print_unlocked<A, B>(_:_:)(&v14, v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11._countAndFlagsBits = 41;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      swift_errorRelease(v8);
      return v15[0];
    }
    else
    {
      sub_100008758((uint64_t)v7, &qword_10048EF48);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10005BD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Album(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_100005574(&qword_10048EF48);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (swift_getEnumCaseMultiPayload(v0 + v9, v6) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v9));
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v9, v11);
  }
  return swift_deallocObject(v0, v9 + v10, v3 | v8 | 7);
}

unint64_t sub_10005BE38()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10048EF48) - 8) + 80);
  return sub_10005BBF8(v0 + v2, v0 + ((v3 + v4) & ~v4));
}

uint64_t sub_10005BE9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100005574(&qword_10048EF48);
  v2[4] = v3;
  v2[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[6] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[7] = v5;
  v2[8] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[10] = v7;
  v2[11] = v8;
  return swift_task_switch(sub_10005BF58, v7, v8);
}

uint64_t sub_10005BF58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t Strong;
  _QWORD *v8;
  char *v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  sub_100014A7C(*(_QWORD *)(v0 + 16), v2, &qword_10048EF48);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 1)
  {
    v3 = *(_QWORD *)(v0 + 40);
    swift_release(*(_QWORD *)(v0 + 72));
    sub_100008758(v3, &qword_10048EF48);
    v4 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    Strong = swift_unknownObjectWeakLoadStrong(v6);
    *(_QWORD *)(v0 + 96) = Strong;
    v9 = (char *)&dword_1004966D0 + dword_1004966D0;
    v8 = (_QWORD *)swift_task_alloc(unk_1004966D4);
    *(_QWORD *)(v0 + 104) = v8;
    *v8 = v0;
    v8[1] = sub_10005C05C;
    return ((uint64_t (*)(_QWORD, uint64_t))v9)(*(_QWORD *)(v0 + 64), Strong);
  }
}

uint64_t sub_10005C05C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_10005C12C;
  else
    v5 = sub_10005C0C8;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10005C0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = sub_100005574(&qword_10048EF48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (_QWORD *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 1)
  {
    swift_errorRelease(*v6);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v9 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v9 != 255)
    sub_1000137A4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v5 + 72, v3 | 7);
}

uint64_t sub_10005C260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048EF48) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_10048EF54);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000EA88;
  return sub_10005BE9C(v4, v5);
}

uint64_t sub_10005C2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_100005574(&qword_10048EF48);
  v3[12] = v4;
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048D510);
  v3[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v3[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005C3B4, 0, 0);
}

uint64_t sub_10005C3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 120), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_10000F7B4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
    sub_100014A7C(v10, v9, &qword_10048EF48);
    if (swift_getEnumCaseMultiPayload(v9, v8) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 104), &qword_10048EF48);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      v13 = 1;
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 104);
      v14 = *(_QWORD *)(v0 + 112);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14, v15, v11);
      v13 = 0;
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v12 + 56))(*(_QWORD *)(v0 + 112), v13, 1, v11);
    v16 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v16, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = sub_100031FAC();
    *(_QWORD *)(inited + 40) = v18;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 152) = sub_100033420(inited);
    *(_QWORD *)(v0 + 160) = v19;
    *(_QWORD *)(v0 + 168) = v20;
    *(_WORD *)(v0 + 184) = v21;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v22 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v22);
    v23 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
    return swift_task_switch(sub_10005C5D0, v23, v24);
  }
}

uint64_t sub_10005C5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(uint64_t **)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 176));
  sub_100033830(0xD000000000000014, 0x80000001003ADAC0, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_10000F7F8(v3, v2, v1, v6, SBYTE1(v6));
  return swift_task_switch(sub_10005C68C, 0, 0);
}

uint64_t sub_10005C68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 144);
  sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D510);
  sub_10000F850(v1);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005C704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  unint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_100005574(&qword_10048EF48);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v3 + v4 + v7) & ~v7;
  v28 = *(_QWORD *)(v6 + 64);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v27 = *(_QWORD *)(v10 + 64);
  v12 = v0 + v3;
  v13 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
  {
    v25 = v8;
    v26 = v9;
    v14 = *(_QWORD *)(v12 + 8);
    if (v14 >= 0xA)
      swift_bridgeObjectRelease(v14);
    v15 = v12 + v13[5];
    v16 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v16 - 1) + 48))(v15, 1, v16))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + 24));
      v24 = v15 + v16[6];
      v17 = type metadata accessor for URL(0);
      v22 = *(_QWORD *)(v17 - 8);
      v23 = v17;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v24, 1))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v15 + v16[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v12 + v13[8]));
    v8 = v25;
    v9 = v26;
  }
  if (swift_getEnumCaseMultiPayload(v0 + v8, v5) == 1)
  {
    swift_errorRelease(*(_QWORD *)(v0 + v8));
  }
  else
  {
    v18 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v0 + v8, v18);
  }
  v19 = (v8 + v28 + v11) & ~v11;
  v20 = v19 + v27;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v19, v9);
  return swift_deallocObject(v0, v20, v2 | v7 | v11 | 7);
}

uint64_t sub_10005C944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(sub_100005574(&qword_10048EF48) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Album(0) - 8) + 80);
  v9 = v6 + v7 + v8;
  v10 = v0 + v3;
  v11 = v0 + v6;
  v12 = v0 + (v9 & ~v8);
  v13 = (_QWORD *)swift_task_alloc(dword_10048EF64);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000F894;
  return sub_10005C2E0(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004440F0, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_100444118, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10000F228;
}

uint64_t (*sub_10005CA98())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444218, 32, 7);
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(_BYTE *)(v0 + 31) = -18;
  v1 = swift_allocObject(&unk_100444240, 32, 7);
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(_BYTE *)(v1 + 31) = -18;
  return sub_10000F88C;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001003ADAA0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10005CC90()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t (*v24)();
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id result;
  unint64_t (**v48)();
  unint64_t (*v49)();
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  unint64_t (*v52)();
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t (**v60)();
  uint64_t v61;
  uint64_t v62;
  id v63;

  v57 = a7;
  v58 = a8;
  v54 = a5;
  v55 = a6;
  v56 = a4;
  v51 = a2;
  v60 = a9;
  v62 = a12;
  v63 = a3;
  v59 = a10;
  v13 = *(_QWORD *)(a11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(a1);
  v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v50 = a1;
  v21((char *)&v50 - v19, a1, a11);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = (v22 + 48) & ~v22;
  v61 = v22 | 7;
  v24 = (unint64_t (*)())swift_allocObject(&unk_100444280, v23 + v14, v22 | 7);
  v52 = v24;
  *((_QWORD *)v24 + 2) = a11;
  *((_QWORD *)v24 + 3) = a12;
  v25 = v63;
  *((_QWORD *)v24 + 4) = v51;
  *((_QWORD *)v24 + 5) = v25;
  v51 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v51((char *)v24 + v23, v20, a11);
  v21(v18, a1, a11);
  v26 = (v22 + 32) & ~v22;
  v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(&unk_1004442A8, v30 + 40, v61);
  v32 = v62;
  *(_QWORD *)(v31 + 16) = a11;
  *(_QWORD *)(v31 + 24) = v32;
  v33 = v31 + v26;
  v34 = (void (*)(char *, uint64_t, uint64_t))v51;
  v51((char *)v33, v18, a11);
  *(_QWORD *)(v31 + v27) = v63;
  v35 = (_QWORD *)(v31 + v28);
  v37 = v55;
  v36 = v56;
  *v35 = v54;
  v35[1] = v37;
  v38 = (_QWORD *)(v31 + v29);
  v39 = v58;
  *v38 = v57;
  v38[1] = v39;
  sub_1000149A8(v36, v31 + v30, &qword_10048D958);
  v40 = v53;
  v34(v53, v50, a11);
  v41 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v42 = *(unsigned __int8 *)(v41 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = (*(_QWORD *)(v41 + 64) + v22 + v43) & ~v22;
  v45 = swift_allocObject(&unk_1004442D0, v44 + v14, v61 | v42);
  v46 = v62;
  *(_QWORD *)(v45 + 16) = a11;
  *(_QWORD *)(v45 + 24) = v46;
  sub_1000149A8(v59, v45 + v43, &qword_10048D8E8);
  v34((char *)(v45 + v44), (uint64_t)v40, a11);
  result = v63;
  v48 = v60;
  v49 = v52;
  *v60 = sub_10005E99C;
  v48[1] = v49;
  v48[2] = (unint64_t (*)())&unk_10048EFA8;
  v48[3] = (unint64_t (*)())v31;
  v48[4] = (unint64_t (*)())&unk_10048EFB8;
  v48[5] = (unint64_t (*)())v45;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 5, (uint64_t)sub_10000F930, (uint64_t)&unk_10048EFC0, (uint64_t)&unk_10048EFC8, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  unint64_t (**v67)();
  uint64_t v68;
  void (*v69)(uint64_t, char *, uint64_t);
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t (**v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[32];

  v84 = a8;
  v85 = a9;
  v81 = a6;
  v82 = a7;
  v78 = a4;
  v79 = a5;
  v77 = a2;
  v87 = a1;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v83 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v76 = (char *)&v69 - v16;
  v86 = v17;
  __chkstk_darwin(v15);
  v19 = (char *)&v69 - v18;
  v20 = sub_100005574(&qword_10048EFD0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v23 = __chkstk_darwin(v20);
  v75 = (uint64_t)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v69 - v25;
  __chkstk_darwin(v24);
  v28 = (void (**)(uint64_t, char *, uint64_t))((char *)&v69 - v27);
  v80 = a3;
  v29 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v29, v89, 0, 0);
  v30 = *v29;
  v88 = a11;
  if (v30)
  {
    swift_retain(v30);
    v31 = Player.state<A>(for:)(v87, a10, a11);
    swift_release(v30);
    MusicItemState.playabilityStatus.getter(v28);
    swift_release(v31);
    v32 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v28, 0, 1, v32);
  }
  else
  {
    v33 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 1, 1, v33);
  }
  sub_100014A7C((uint64_t)v28, (uint64_t)v26, &qword_10048EFD0);
  v70 = v28;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v34 = v87;
  v73(v19, v87, a10);
  v35 = *(unsigned __int8 *)(v21 + 80);
  v36 = *(unsigned __int8 *)(v12 + 80);
  v37 = (v35 + 32) & ~v35;
  v38 = (v22 + v36 + v37) & ~v36;
  v39 = v38 + v86;
  v71 = v36 | v35 | 7;
  v72 = v37;
  v40 = swift_allocObject(&unk_1004442F8, v38 + v86, v71);
  v41 = v88;
  *(_QWORD *)(v40 + 16) = a10;
  *(_QWORD *)(v40 + 24) = v41;
  v42 = v40 + v37;
  v43 = v40;
  v74 = v40;
  sub_1000149A8((uint64_t)v26, v42, &qword_10048EFD0);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v69(v43 + v38, v19, a10);
  v44 = v75;
  sub_1000149A8((uint64_t)v70, v75, &qword_10048EFD0);
  v45 = v76;
  v73(v76, v34, a10);
  v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject(&unk_100444320, v49 + 8, v71);
  v51 = v88;
  *(_QWORD *)(v50 + 16) = a10;
  *(_QWORD *)(v50 + 24) = v51;
  sub_1000149A8(v44, v50 + v72, &qword_10048EFD0);
  v52 = v45;
  v53 = (void (*)(char *, uint64_t, uint64_t))v69;
  v69(v50 + v38, v52, a10);
  v54 = v78;
  *(_QWORD *)(v50 + v46) = v77;
  v55 = (_QWORD *)(v50 + v47);
  v56 = v79;
  *v55 = v54;
  v55[1] = v56;
  v57 = (_QWORD *)(v50 + v48);
  v58 = v82;
  v59 = v83;
  *v57 = v81;
  v57[1] = v58;
  *(_QWORD *)(v50 + v49) = v80;
  v53(v59, v87, a10);
  v60 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = (v61 + 32) & ~v61;
  v63 = (*(_QWORD *)(v60 + 64) + v36 + v62) & ~v36;
  v64 = swift_allocObject(&unk_100444348, v63 + v86, v36 | v61 | 7);
  v65 = v88;
  *(_QWORD *)(v64 + 16) = a10;
  *(_QWORD *)(v64 + 24) = v65;
  sub_1000149A8(v84, v64 + v62, &qword_10048D8E8);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v53)(v64 + v63, v59, a10);
  v67 = v85;
  v68 = v74;
  *v85 = sub_10006371C;
  v67[1] = (unint64_t (*)())v68;
  v67[2] = (unint64_t (*)())&unk_10048EFE0;
  v67[3] = (unint64_t (*)())v50;
  v67[4] = (unint64_t (*)())&unk_10048EFF0;
  v67[5] = (unint64_t (*)())v64;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 23, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048EFF8, (uint64_t)&unk_10048F000, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id result;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  id v88;
  id v89;
  char v90[32];

  v80 = a6;
  v81 = a7;
  v82 = a4;
  v88 = a2;
  v13 = a1;
  v78 = a9;
  v79 = a5;
  v15 = *(_QWORD *)(a11 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(a1);
  v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v21 = (char *)&v72 - v20;
  v77 = v22;
  v84 = a10;
  v85 = a8;
  v86 = v18;
  v87 = v23;
  if (v22 == (void *)3
    && (v24 = (uint64_t *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player),
        v19 = swift_beginAccess(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v90, 0, 0),
        (v25 = *v24) != 0))
  {
    v76 = v15;
    KeyPath = swift_getKeyPath(&unk_100388618);
    v27 = swift_getKeyPath(&unk_100388640);
    v28 = swift_retain(v25);
    static Published.subscript.getter(&v89, v28, KeyPath, v27);
    swift_release(v25);
    swift_release(KeyPath);
    v19 = swift_release(v27);
    v29 = v89;
    if (v89)
    {
      v30 = objc_msgSend(v89, "tracklist", v19.n128_f64[0]);

      v31 = objc_msgSend(v30, "insertCommand");
      if (v31)
      {
        v32 = objc_msgSend(v31, "insertAfterLastSection");
        swift_unknownObjectRelease(v31);
        if (v32)
        {
          v33 = objc_msgSend(v32, "section");
          swift_unknownObjectRelease(v32);
          v34 = objc_msgSend(v33, "metadataObject");

          if (v34)
          {
            v35 = objc_msgSend(v34, "flattenedGenericObject");

            v15 = v76;
            if (!v35)
              goto LABEL_20;
            v36 = objc_msgSend(v35, "anyObject");

            if (!v36)
              goto LABEL_20;
            objc_opt_self(MPModelAlbum);
            v37 = swift_dynamicCastObjCClass(v36);
            if (v37)
            {
              v38 = (void *)v37;
              v39 = v36;
              v40 = objc_msgSend(v38, "title");
            }
            else
            {
              objc_opt_self(MPModelPlaylist);
              v66 = swift_dynamicCastObjCClass(v36);
              if (!v66)
              {

                goto LABEL_20;
              }
              v67 = (void *)v66;
              v39 = v36;
              v40 = objc_msgSend(v67, "name");
            }
            v68 = v40;
            if (v68)
            {
              v69 = v68;
              v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
              v72 = v71;
              v73 = v70;

LABEL_21:
              v13 = v86;
              goto LABEL_13;
            }

LABEL_20:
            v72 = 0;
            v73 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    v72 = 0;
    v73 = 0;
    v13 = v86;
    v15 = v76;
  }
  else
  {
    v72 = 0;
    v73 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v21, v13, a11, v19);
  v41 = *(unsigned __int8 *)(v15 + 80);
  v42 = (v41 + 40) & ~v41;
  v74 = v41 | 7;
  v76 = v16 + 7;
  v43 = (v16 + 7 + v42) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject(&unk_100444370, v44 + 8, v41 | 7);
  v45[2] = a11;
  v45[3] = a12;
  v75 = a12;
  v46 = v87;
  v45[4] = v87;
  v47 = (char *)v45 + v42;
  v48 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v48(v47, v21, a11);
  v49 = v77;
  *(_QWORD *)((char *)v45 + v43) = v77;
  v50 = v88;
  *(_QWORD *)((char *)v45 + v44) = v88;
  v51 = (_QWORD *)swift_allocObject(&unk_100444398, 112, 7);
  v52 = v79;
  v51[2] = v50;
  v51[3] = v52;
  v53 = v81;
  v51[4] = v80;
  v51[5] = v53;
  v51[6] = v78;
  v51[7] = v46;
  v51[8] = v49;
  sub_1000149A8(v82, (uint64_t)(v51 + 9), &qword_10048D958);
  v54 = v83;
  v48(v83, (char *)v86, a11);
  v55 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (*(_QWORD *)(v55 + 64) + v41 + v57) & ~v41;
  v59 = (v76 + v58) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_1004443C0, v59 + 8, v74 | v56);
  v61 = v75;
  *(_QWORD *)(v60 + 16) = a11;
  *(_QWORD *)(v60 + 24) = v61;
  sub_1000149A8(v84, v60 + v57, &qword_10048D8E8);
  v48((char *)(v60 + v58), v54, a11);
  *(_QWORD *)(v60 + v59) = v49;
  sub_1000528E4(v49);
  sub_1000528E4(v49);
  sub_1000528E4(v49);
  v62 = v87;
  result = v88;
  v64 = v85;
  v65 = v73;
  *v85 = v49;
  v64[1] = v65;
  v64[2] = v72;
  v64[3] = sub_100063B18;
  v64[4] = v45;
  v64[5] = &unk_10048F010;
  v64[6] = v51;
  v64[7] = &unk_10048F020;
  v64[8] = v60;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[8];
  uint64_t v8;

  sub_10006422C(a1, (uint64_t)v7);
  v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(_QWORD *)(a2 + 128) = v8;
  v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v15 = swift_allocObject(&unk_1004443E8, 32, 7);
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(_QWORD *)(a7 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = (v18 + *(_QWORD *)(v16 + 64) + v20) & ~v20;
  v22 = swift_allocObject(&unk_100444410, v21 + *(_QWORD *)(v19 + 64), v17 | v20 | 7);
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = a8;
  sub_1000149A8(a6, v22 + v18, &qword_10048D8E8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v21, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_10048DAE0;
  a9[3] = v15;
  a9[4] = &unk_10048F030;
  a9[5] = v22;
  return result;
}

uint64_t sub_10005DA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005DB1C, 0, 0);
}

uint64_t sub_10005DB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000648AC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10005DCDC, v18, v19);
  }
}

uint64_t sub_10005DCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005B6C8, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 36, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F038, (uint64_t)&unk_10048F040, a2);
}

uint64_t sub_10005DDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 36, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F038, (uint64_t)&unk_10048F040, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444438, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_100444460, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10000F228;
}

uint64_t (*sub_10005DE78())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004449D0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v0 + 24) = 0xEB00000000656C63;
  v1 = swift_allocObject(&unk_1004449F8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7269632E79616C70;
  *(_QWORD *)(v1 + 24) = 0xEB00000000656C63;
  return sub_10000F88C;
}

uint64_t sub_10005DF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 5, (uint64_t)sub_10000F930, (uint64_t)&unk_10048EFC0, (uint64_t)&unk_10048EFC8, a2);
}

unint64_t sub_10005DF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  Swift::String v32;
  _QWORD v34[11];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[8];

  v40 = a3;
  v7 = type metadata accessor for Artist(0);
  __chkstk_darwin(v7);
  v35 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v34[10] = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v34[9] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Song(0);
  v36 = *(_QWORD *)(v37 - 8);
  v9 = __chkstk_darwin(v37);
  v10 = __chkstk_darwin(v9);
  v34[8] = (char *)v34 - v11;
  v12 = __chkstk_darwin(v10);
  v41 = a4;
  v39 = *(_QWORD *)(a4 - 8);
  v13 = __chkstk_darwin(v12);
  v38 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)v34 - v15;
  type metadata accessor for MusicLibrary(0);
  v17 = static MusicLibrary.shared.getter();
  v18 = static MusicLibrary.== infix(_:_:)(a1, v17);
  swift_release(v17);
  if ((v18 & 1) == 0)
    return 0xD000000000000016;
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v20 = swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v53, 0, 0);
  v21 = *v19;
  if (*v19)
  {
    v22 = v41;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v39 + 16))(v16, v40, v41, v20);
    swift_retain(v21);
    v23 = sub_100005574(&qword_10048E280);
    if ((swift_dynamicCast(v42, v16, v22, v23, 6) & 1) != 0)
    {
      sub_1000137C8(v42, (uint64_t)&v50);
      v24 = v51;
      v25 = v52;
      sub_10000ABC8(&v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      v27 = v26;
      swift_bridgeObjectRelease(v26);
      if (v27)
      {
        v34[7] = v21;
        if (qword_10048C658 != -1)
          swift_once(&qword_10048C658, sub_1000B3BEC);
        v28 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_100388740);
        v30 = swift_getKeyPath(&unk_100388768);
        static Published.subscript.getter(v42, v28, KeyPath, v30);
        swift_release(KeyPath);
        swift_release(v30);
        v34[3] = v43;
        v34[5] = v44;
        v34[6] = v45;
        v34[4] = v46;
        v34[2] = v48;
        v34[1] = v49;
        __asm { BR              X10 }
      }
      sub_10000682C(&v50);
    }
    else
    {
      v43 = 0;
      memset(v42, 0, sizeof(v42));
      sub_100008758((uint64_t)v42, (uint64_t *)&unk_1004940C0);
    }
    swift_release(v21);
    return 0xD00000000000001DLL;
  }
  else
  {
    *(_QWORD *)&v42[0] = 0;
    *((_QWORD *)&v42[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x80000001003ADD20;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, v41);
    return *(_QWORD *)&v42[0];
  }
}

uint64_t sub_10005E928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_10005E99C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_10005DF20(v0[4], v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1);
}

uint64_t sub_10005E9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v5, &v19, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_10048C590 != -1)
      swift_once(&qword_10048C590, sub_100086650);
    v13 = type metadata accessor for Logger(0, v11);
    v14 = sub_1000086B4(v13, (uint64_t)static Logger.actions);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unknown playability status", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v19 = 0;
    v20 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v1, &v19, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v12;
}

uint64_t sub_10005EC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[46] = v10;
  v8[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[48] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v12);
  v8[50] = swift_task_alloc(v12);
  v13 = sub_100005574(&qword_10048F128);
  v8[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v8[52] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v8[53] = v15;
  v8[54] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Notice.Variant(0);
  v8[55] = v16;
  v8[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10048DA48);
  v8[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a8 - 8);
  v8[59] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[60] = swift_task_alloc(v20);
  v8[61] = swift_task_alloc(v20);
  v21 = type metadata accessor for Song(0);
  v8[62] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v8[63] = v22;
  v8[64] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10005EDBC, 0, 0);
}

uint64_t sub_10005EDBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, uint64_t);
  char v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  unint64_t v35;
  NSString v36;
  Class v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString v61;
  uint64_t v62;
  void *v63;
  Class isa;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v3 = *(_QWORD *)(v0 + 488);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = *(_QWORD *)(v0 + 360);
  v6 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
  v6(v3, *(_QWORD *)(v0 + 304), v5);
  v7 = swift_dynamicCast(v4, v3, v5, v1, 6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v7 & 1) == 0)
  {
    v38 = *(_QWORD *)(v0 + 464);
    v8(v38, 1, 1, *(_QWORD *)(v0 + 496));
    sub_100008758(v38, &qword_10048DA48);
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v0 + 504);
  v9 = *(_QWORD *)(v0 + 512);
  v11 = *(_QWORD *)(v0 + 496);
  v12 = *(_QWORD *)(v0 + 464);
  v13 = *(_QWORD *)(v0 + 312);
  v8(v12, 0, 1, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v12, v11);
  v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  v15 = swift_beginAccess(v13 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v0 + 256, 0, 0);
  v16 = *v14;
  if (!*v14)
    goto LABEL_15;
  KeyPath = swift_getKeyPath(&unk_100388618);
  v18 = swift_getKeyPath(&unk_100388640);
  v19 = swift_retain(v16);
  static Published.subscript.getter((_QWORD *)(v0 + 280), v19, KeyPath, v18);
  swift_release(v18);
  swift_release(KeyPath);
  v15 = swift_release(v16);
  v20 = *(void **)(v0 + 280);
  if (!v20)
    goto LABEL_15;
  MPCPlayerResponse.playState(for:)(*(_QWORD *)(v0 + 512), v15);
  v22 = v21;

  if ((v22 & 1) != 0)
    goto LABEL_15;
  v23 = *v14;
  if (!*v14)
    goto LABEL_15;
  v24 = swift_getKeyPath(&unk_100388618);
  v25 = swift_getKeyPath(&unk_100388640);
  v26 = swift_retain(v23);
  static Published.subscript.getter((_QWORD *)(v0 + 288), v26, v24, v25);
  swift_release(v25);
  swift_release(v24);
  v15 = swift_release(v23);
  v27 = *(void **)(v0 + 288);
  if (!v27)
    goto LABEL_15;
  v28 = objc_msgSend(*(id *)(v0 + 288), "tracklist", v15.n128_f64[0]);

  v29 = objc_msgSend(v28, "playingItem");
  if (!v29)
    goto LABEL_15;
  v30 = objc_msgSend(v29, "metadataObject");

  if (!v30)
    goto LABEL_15;
  v31 = objc_msgSend(v30, "innermostModelObject");
  *(_QWORD *)(v0 + 520) = v31;

  objc_opt_self(MPModelSong);
  v32 = swift_dynamicCastObjCClass(v31);
  if (!v32)
  {

LABEL_15:
    (*(void (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496), v15);
    goto LABEL_16;
  }
  v33 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "radioPlaybackIntentFromSong:", v32);
  *(_QWORD *)(v0 + 528) = v33;
  if (!v33)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

LABEL_16:
    v39 = *(_QWORD *)(v0 + 480);
    v40 = *(_QWORD *)(v0 + 360);
    v6(v39, *(_QWORD *)(v0 + 304), v40);
    v41 = sub_100005574(&qword_10048F130);
    if ((swift_dynamicCast(v0 + 56, v39, v40, v41, 6) & 1) != 0)
    {
      sub_1000137C8((__int128 *)(v0 + 56), v0 + 16);
      sub_1000244B0(v0 + 16, v0 + 96);
      MusicPlaybackIntentDescriptor.init(stationSeed:)(v0 + 96);
      v53 = *(_QWORD *)(v0 + 424);
      v52 = *(_QWORD *)(v0 + 432);
      v55 = *(_QWORD *)(v0 + 408);
      v54 = *(_QWORD *)(v0 + 416);
      v57 = *(_QWORD *)(v0 + 336);
      v56 = *(_QWORD *)(v0 + 344);
      v58 = *(_QWORD *)(v0 + 328);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v54);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v55, v54);
      v59 = swift_bridgeObjectRetain();
      v60 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v59);
      v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v58);
      objc_msgSend(v60, "setPlayActivityFeatureName:", v61);

      v62 = sub_1000516E4(v57, v56);
      v63 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v62);
      if (v56 >> 60 == 15)
      {
        isa = 0;
      }
      else
      {
        v65 = *(_QWORD *)(v0 + 336);
        v66 = *(_QWORD *)(v0 + 344);
        sub_1000516F8(v65, v66);
        isa = Data._bridgeToObjectiveC()().super.isa;
        sub_1000067D4(v65, v66);
      }
      v67 = *(_QWORD *)(v0 + 424);
      v68 = *(_QWORD *)(v0 + 416);
      v69 = *(_QWORD *)(v0 + 392);
      v78 = *(_QWORD *)(v0 + 432);
      v80 = *(_QWORD *)(v0 + 400);
      v70 = *(_QWORD *)(v0 + 376);
      v71 = *(int **)(v0 + 384);
      v77 = *(_QWORD *)(v0 + 368);
      v72 = *(_QWORD *)(v0 + 336);
      v73 = *(_QWORD *)(v0 + 344);
      objc_msgSend(v63, "setPlayActivityRecommendationData:", isa);
      sub_1000067D4(v72, v73);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v70, v78, v68);
      swift_storeEnumTagMultiPayload(v70, v77, 1);
      *(_QWORD *)(v0 + 168) = 0;
      *(_OWORD *)(v0 + 136) = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
      v74 = v69 + v71[7];
      *(_QWORD *)(v74 + 32) = 0;
      *(_OWORD *)v74 = 0u;
      *(_OWORD *)(v74 + 16) = 0u;
      *(_BYTE *)(v69 + v71[8]) = 0;
      *(_BYTE *)(v69 + v71[9]) = 0;
      sub_100064820(v70, v69);
      sub_100064864(v0 + 136, v74);
      *(_QWORD *)(v69 + v71[5]) = 2;
      *(_QWORD *)(v69 + v71[6]) = 1;
      sub_100008758(v0 + 136, &qword_100493470);
      sub_100006798(v70, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_1000648AC(v69, v80, type metadata accessor for PlaybackIntentDescriptor);
      v75 = (_QWORD *)swift_task_alloc(dword_100493104);
      *(_QWORD *)(v0 + 584) = v75;
      *v75 = v0;
      v75[1] = sub_10005F880;
      return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 400), 0);
    }
    else
    {
      *(_QWORD *)(v0 + 88) = 0;
      *(_OWORD *)(v0 + 56) = 0u;
      *(_OWORD *)(v0 + 72) = 0u;
      sub_100008758(v0 + 56, &qword_10048F138);
      v42 = *(_QWORD *)(v0 + 480);
      v43 = *(_QWORD *)(v0 + 488);
      v45 = *(_QWORD *)(v0 + 456);
      v44 = *(_QWORD *)(v0 + 464);
      v46 = *(_QWORD *)(v0 + 448);
      v47 = *(_QWORD *)(v0 + 432);
      v49 = *(_QWORD *)(v0 + 400);
      v48 = *(_QWORD *)(v0 + 408);
      v50 = *(_QWORD *)(v0 + 392);
      v79 = *(_QWORD *)(v0 + 376);
      swift_task_dealloc(*(_QWORD *)(v0 + 512));
      swift_task_dealloc(v43);
      swift_task_dealloc(v42);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      swift_task_dealloc(v47);
      swift_task_dealloc(v48);
      swift_task_dealloc(v49);
      swift_task_dealloc(v50);
      swift_task_dealloc(v79);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  v34 = v33;
  v35 = *(_QWORD *)(v0 + 344);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setPlayActivityFeatureName:", v36);

  if (v35 >> 60 == 15)
    v37 = 0;
  else
    v37 = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "setPlayActivityRecommendationData:", v37);

  v76 = (_QWORD *)swift_task_alloc(dword_1004930CC);
  *(_QWORD *)(v0 + 536) = v76;
  *v76 = v0;
  v76[1] = sub_10005F4E8;
  return PlaybackController.insert(_:location:)((uint64_t)v34, 0);
}

uint64_t sub_10005F4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 536);
  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10005FC38;
  else
    v3 = sub_10005F54C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10005F54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_100014A7C(*(_QWORD *)(v0 + 352), v0 + 176, &qword_10048D958);
  v1 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 552) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 208);
    *(_QWORD *)(v0 + 568) = sub_10000ABC8((_QWORD *)(v0 + 176), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_100006798(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 576) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10005F710, v5, v6);
  }
  else
  {
    v8 = *(void **)(v0 + 528);
    v9 = *(void **)(v0 + 520);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 504) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 496));

    sub_100008758(v0 + 176, &qword_10048D958);
    v10 = *(_QWORD *)(v0 + 480);
    v11 = *(_QWORD *)(v0 + 488);
    v13 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 464);
    v14 = *(_QWORD *)(v0 + 448);
    v15 = *(_QWORD *)(v0 + 432);
    v17 = *(_QWORD *)(v0 + 400);
    v16 = *(_QWORD *)(v0 + 408);
    v18 = *(_QWORD *)(v0 + 392);
    v19 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10005F710()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[70];
  v2 = v0[69];
  v3 = v0[57];
  swift_release(v0[72]);
  sub_1000845D0(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_10005F788, 0, 0);
}

uint64_t sub_10005F788()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000682C((_QWORD *)(v0 + 176));
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 488);
  v8 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 464);
  v9 = *(_QWORD *)(v0 + 448);
  v10 = *(_QWORD *)(v0 + 432);
  v12 = *(_QWORD *)(v0 + 400);
  v11 = *(_QWORD *)(v0 + 408);
  v13 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v6);
  swift_task_dealloc(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005F880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 584);
  *(_QWORD *)(*(_QWORD *)v1 + 592) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10005FEA0;
  else
    v3 = sub_10005F8E4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10005F8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_100014A7C(*(_QWORD *)(v0 + 352), v0 + 216, &qword_10048D958);
  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 448);
    v3 = *(_QWORD *)(v0 + 440);
    *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 616) = sub_10000ABC8((_QWORD *)(v0 + 216), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 8);
    static Notice.variant(_:)(v2);
    sub_100006798(v2, type metadata accessor for Notice.Variant);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 624) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10005FABC, v5, v6);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 424);
    v8 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 416);
    sub_100006798(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    sub_10000682C((_QWORD *)(v0 + 16));
    sub_100008758(v0 + 216, &qword_10048D958);
    v11 = *(_QWORD *)(v0 + 480);
    v12 = *(_QWORD *)(v0 + 488);
    v14 = *(_QWORD *)(v0 + 456);
    v13 = *(_QWORD *)(v0 + 464);
    v15 = *(_QWORD *)(v0 + 448);
    v16 = *(_QWORD *)(v0 + 432);
    v18 = *(_QWORD *)(v0 + 400);
    v17 = *(_QWORD *)(v0 + 408);
    v19 = *(_QWORD *)(v0 + 392);
    v20 = *(_QWORD *)(v0 + 376);
    swift_task_dealloc(*(_QWORD *)(v0 + 512));
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10005FABC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[76];
  v2 = v0[75];
  v3 = v0[57];
  swift_release(v0[78]);
  sub_1000845D0(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_10005FB34, 0, 0);
}

uint64_t sub_10005FB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_100006798(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10000682C((_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 216));
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 488);
  v7 = *(_QWORD *)(v0 + 456);
  v6 = *(_QWORD *)(v0 + 464);
  v8 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 432);
  v11 = *(_QWORD *)(v0 + 400);
  v10 = *(_QWORD *)(v0 + 408);
  v12 = *(_QWORD *)(v0 + 392);
  v14 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FC38()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(void **)(v0 + 528);
  v3 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 512);
  v4 = *(_QWORD *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = *(_QWORD *)(v0 + 544);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v7 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v7, (uint64_t)static Logger.actions);
  swift_errorRetain(v6);
  v8 = swift_errorRetain(v6);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v28 = v12;
    *(_DWORD *)v11 = 136446210;
    *(_QWORD *)(v0 + 296) = v6;
    swift_errorRetain(v6);
    v13 = sub_100005574((uint64_t *)&unk_1004911F0);
    v14 = (char *)String.init<A>(describing:)(v0 + 296, v13);
    v16 = v15;
    *(_QWORD *)(v11 + 4) = sub_100019400(v14, v15, &v28);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to Create Station with error=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_errorRelease(v6);

  }
  v17 = *(_QWORD *)(v0 + 480);
  v18 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 456);
  v19 = *(_QWORD *)(v0 + 464);
  v21 = *(_QWORD *)(v0 + 448);
  v22 = *(_QWORD *)(v0 + 432);
  v24 = *(_QWORD *)(v0 + 400);
  v23 = *(_QWORD *)(v0 + 408);
  v25 = *(_QWORD *)(v0 + 392);
  v27 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v18);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10005FEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 416);
  sub_100006798(*(_QWORD *)(v0 + 400), type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10000682C((_QWORD *)(v0 + 16));
  v5 = *(_QWORD *)(v0 + 592);
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v6 = type metadata accessor for Logger(0, v4);
  sub_1000086B4(v6, (uint64_t)static Logger.actions);
  swift_errorRetain(v5);
  v7 = swift_errorRetain(v5);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v27 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 296) = v5;
    swift_errorRetain(v5);
    v12 = sub_100005574((uint64_t *)&unk_1004911F0);
    v13 = (char *)String.init<A>(describing:)(v0 + 296, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v27);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to Create Station with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v5);
  }
  else
  {
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

  }
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 456);
  v18 = *(_QWORD *)(v0 + 464);
  v20 = *(_QWORD *)(v0 + 448);
  v21 = *(_QWORD *)(v0 + 432);
  v23 = *(_QWORD *)(v0 + 400);
  v22 = *(_QWORD *)(v0 + 408);
  v24 = *(_QWORD *)(v0 + 392);
  v26 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc(*(_QWORD *)(v0 + 512));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100060114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5 + 8));
  v8 = *(_QWORD *)(v0 + v6 + 8);
  if (v8 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + v6), v8);
  if (*(_QWORD *)(v0 + v7 + 24))
    sub_10000682C((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v2 | 7);
}

uint64_t sub_1000601D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(v0 + v5);
  v10 = *(_QWORD *)(v0 + v6);
  v11 = *(_QWORD *)(v0 + v6 + 8);
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v7 + 8);
  v14 = v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)swift_task_alloc(dword_10048EFA4);
  *(_QWORD *)(v1 + 16) = v15;
  *v15 = v1;
  v15[1] = sub_10000EA88;
  return sub_10005EC10(v8, v9, v10, v11, v12, v13, v14, v2);
}

uint64_t sub_1000602B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[19] = v8;
  v4[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006035C, 0, 0);
}

uint64_t sub_10006035C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_100014A7C(*(_QWORD *)(v0 + 96), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 136);
    swift_task_dealloc(*(_QWORD *)(v0 + 160));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 112);
    sub_1000648AC(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 176) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0;
    *(_QWORD *)(inited + 64) = 0;
    *(_BYTE *)(inited + 72) = 4;
    *(_QWORD *)(v0 + 184) = sub_100033420(inited);
    *(_QWORD *)(v0 + 192) = v14;
    *(_QWORD *)(v0 + 200) = v15;
    *(_WORD *)(v0 + 216) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 208) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100060528, v18, v19);
  }
}

uint64_t sub_100060528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(uint64_t **)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release(*(_QWORD *)(v0 + 208));
  sub_100033830(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005A04C, 0, 0);
}

uint64_t sub_1000605FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048EFB4);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_1000602B0(v7, v8, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444488, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000001003ADB40;
  v1 = swift_allocObject(&unk_1004444B0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000001003ADB40;
  return sub_10000F88C;
}

uint64_t sub_100060740(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x5320657461657243, 0xEE006E6F69746174);
}

uint64_t (*sub_100060764())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444980, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 24) = 0x80000001003ADB40;
  v1 = swift_allocObject(&unk_1004449A8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD00000000000001BLL;
  *(_QWORD *)(v1 + 24) = 0x80000001003ADB40;
  return sub_10000F88C;
}

uint64_t sub_1000607E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 23, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048EFF8, (uint64_t)&unk_10048F000, a2);
}

uint64_t sub_100060808(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_100060828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = *(int **)(a2 + 40);
  v6 = (uint64_t (*)(void))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000F894;
  return v6();
}

uint64_t sub_10006087C(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(a1 + 56);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5();
}

__n128 sub_1000608D0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  _OWORD v9[8];
  uint64_t v10;
  _OWORD v11[4];
  uint64_t v12;

  v3 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  v12 = *(_QWORD *)(a1 + 64);
  v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_10006422C((uint64_t *)v11, (uint64_t)v9);
  v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v10;
  v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_100060954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  Swift::String v28;
  void *object;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  int v40;
  char *v41;
  Swift::String v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  char *v50;
  Swift::String v51;
  void *v52;
  void (*v53)(char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;

  v61 = a4;
  v62 = a2;
  v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  v7 = __chkstk_darwin(v6);
  v56 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v58 = (char *)&v55 - v10;
  v11 = __chkstk_darwin(v9);
  v57 = (char *)&v55 - v12;
  v13 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v11);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574(&qword_10048EFD0);
  __chkstk_darwin(v16);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v55 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v55 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v55 - v26;
  sub_100014A7C(a1, (uint64_t)v18, &qword_10048EFD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100008758((uint64_t)v18, &qword_10048EFD0);
    v63 = 0;
    v64 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease(v64);
    v63 = 0xD000000000000022;
    v64 = 0x80000001003ADC90;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v62, a3);
    v28._countAndFlagsBits = String.init<A>(describing:)(v15, a3);
    object = v28._object;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(object);
    return v63;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_100060ED8(v62, a3) & 1) == 0)
  {
    v30 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v30;
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v32 = v25;
  v31(v25, v27, v19);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    v35 = v59;
    v36 = v60;
    v37 = v57;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v57, v25, v60);
    v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
    v39 = v58;
    v38(v58, v37, v36);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v39, v36);
    if (v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v40 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      v63 = 0;
      v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease(v64);
      v63 = 0xD000000000000018;
      v64 = 0x80000001003ADCE0;
      v41 = v56;
      v38(v56, v37, v36);
      v42._countAndFlagsBits = String.init<A>(describing:)(v41, v36);
      v43 = v42._object;
      String.append(_:)(v42);
      swift_bridgeObjectRelease(v43);
      v30 = v63;
      v44 = *(void (**)(char *, uint64_t))(v35 + 8);
      v44(v37, v36);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      v44(v39, v36);
      return v30;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v33 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    goto LABEL_16;
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v45 = type metadata accessor for Logger(0, v34);
  v46 = sub_1000086B4(v45, (uint64_t)static Logger.actions);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Unknown playability status", v49, 2u);
    swift_slowDealloc(v49, -1, -1);
  }

  v63 = 0;
  v64 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(v64);
  v63 = 0xD000000000000010;
  v64 = 0x80000001003ADCC0;
  v50 = v55;
  v31(v55, v27, v19);
  v51._countAndFlagsBits = String.init<A>(describing:)(v50, v19);
  v52 = v51._object;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v52);
  v30 = v63;
  v53 = *(void (**)(char *, uint64_t))(v20 + 8);
  v53(v27, v19);
  v53(v32, v19);
  return v30;
}

uint64_t sub_100060ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v24 = type metadata accessor for Station(0);
  v22 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v23 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Playlist(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v11);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast(v13, v16, a2, v9, 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast(v8, v16, a2, v5, 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v18 = v23;
    v17 = v24;
    if (!swift_dynamicCast(v23, v16, a2, v24, 0))
    {
      v19 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v17);
  }
  v19 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v19;
}

uint64_t sub_1000610BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v8[21] = v17;
  v8[22] = v18;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[23] = v9;
  v8[24] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[25] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[26] = swift_task_alloc(v11);
  v8[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v8[28] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[29] = v13;
  v8[30] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F118);
  v8[31] = v14;
  v8[32] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048EFD0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[33] = swift_task_alloc(v15);
  v8[34] = swift_task_alloc(v15);
  return swift_task_switch(sub_1000611E4, 0, 0);
}

uint64_t sub_1000611E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  void *v35;
  NSString v36;
  Class isa;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  v7 = v3 + *(int *)(v2 + 48);
  sub_100014A7C(v6, v3, &qword_10048EFD0);
  sub_100014A7C(v1, v7, &qword_10048EFD0);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) != 1)
  {
    v10 = *(_QWORD *)(v0 + 224);
    sub_100014A7C(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264), &qword_10048EFD0);
    v11 = v8(v7, 1, v10);
    v12 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 272);
    if (v11 != 1)
    {
      v27 = *(_QWORD *)(v0 + 256);
      v29 = *(_QWORD *)(v0 + 232);
      v28 = *(_QWORD *)(v0 + 240);
      v30 = *(_QWORD *)(v0 + 224);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v7, v30);
      v31 = sub_100006924(&qword_10048F120, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&protocol conformance descriptor for MusicPlayer.PlayabilityStatus);
      v32 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v28, v30, v31);
      v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v33(v28, v30);
      sub_100008758(v13, &qword_10048EFD0);
      v33(v12, v30);
      sub_100008758(v27, &qword_10048EFD0);
      if ((v32 & 1) != 0)
        goto LABEL_9;
LABEL_7:
      v17 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 112);
      *(_QWORD *)(v0 + 40) = v17;
      *(_QWORD *)(v0 + 48) = *(_QWORD *)(v16 + 8);
      v19 = sub_1000207D4((_QWORD *)(v0 + 16));
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v19, v18, v17);
      *(_BYTE *)(v0 + 56) = 0;
      _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 16);
      sub_100014974(v0 + 16);
      v20 = *(_QWORD *)(v0 + 264);
      v21 = *(_QWORD *)(v0 + 256);
      v22 = *(_QWORD *)(v0 + 240);
      v24 = *(_QWORD *)(v0 + 208);
      v23 = *(_QWORD *)(v0 + 216);
      v25 = *(_QWORD *)(v0 + 192);
      swift_task_dealloc(*(_QWORD *)(v0 + 272));
      swift_task_dealloc(v20);
      swift_task_dealloc(v21);
      swift_task_dealloc(v22);
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      swift_task_dealloc(v25);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v14 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 232);
    sub_100008758(*(_QWORD *)(v0 + 272), &qword_10048EFD0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_100008758(*(_QWORD *)(v0 + 256), &qword_10048F118);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(v0 + 224);
  sub_100008758(*(_QWORD *)(v0 + 272), &qword_10048EFD0);
  if (v8(v7, 1, v9) != 1)
    goto LABEL_6;
  sub_100008758(*(_QWORD *)(v0 + 256), &qword_10048EFD0);
LABEL_9:
  v34 = *(_QWORD *)(v0 + 152);
  v35 = *(void **)(v0 + 120);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setPlayActivityFeatureName:", v36);

  if (v34 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD **)(v0 + 192);
  v39 = *(int **)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  v41 = *(_QWORD *)(v0 + 184);
  v43 = *(_QWORD *)(v0 + 168);
  v44 = *(void **)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 112);
  v50 = *(_QWORD *)(v0 + 216);
  objc_msgSend(v44, "setPlayActivityRecommendationData:", isa);

  *v40 = v44;
  swift_storeEnumTagMultiPayload(v40, v41, 0);
  *(_QWORD *)(v0 + 88) = v43;
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v42 + 8);
  v45 = sub_1000207D4((_QWORD *)(v0 + 64));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v45, v49, v43);
  v46 = v38 + v39[7];
  *(_QWORD *)(v46 + 32) = 0;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)(v46 + 16) = 0u;
  *(_BYTE *)(v38 + v39[8]) = 0;
  *(_BYTE *)(v38 + v39[9]) = 0;
  sub_100064820((uint64_t)v40, v38);
  v47 = v44;
  sub_100064864(v0 + 64, v46);
  *(_QWORD *)(v38 + v39[5]) = 2;
  *(_QWORD *)(v38 + v39[6]) = 0;
  sub_100008758(v0 + 64, &qword_100493470);
  sub_100006798((uint64_t)v40, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_1000648AC(v38, v50, type metadata accessor for PlaybackIntentDescriptor);
  v48 = (_QWORD *)swift_task_alloc(dword_100493104);
  *(_QWORD *)(v0 + 280) = v48;
  *v48 = v0;
  v48[1] = sub_100061624;
  return PlaybackController.add(_:route:)(*(_QWORD *)(v0 + 216), 0);
}

uint64_t sub_100061624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 280));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_10006529C;
  }
  else
  {
    v2 = sub_100061690;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100061690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100006798(*(_QWORD *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100061724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000617D0, 0, 0);
}

uint64_t sub_1000617D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000648AC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_100061994, v18, v19);
  }
}

uint64_t sub_100061994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005A9F0, 0, 0);
}

uint64_t sub_100061A64(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t DynamicType;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unint64_t v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  _BYTE v40[24];

  v12 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v16, v40, 0, 0);
  v17 = *v16;
  if (!v17)
  {
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v29._countAndFlagsBits = 0xD000000000000025;
    v29._object = (void *)0x80000001003ADC30;
    String.append(_:)(v29);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(a2, a5);
    return (uint64_t)v36;
  }
  v33 = a6;
  v34 = a5;
  v38 = &type metadata for Player.InsertCommand;
  v39 = &protocol witness table for Player.InsertCommand;
  v36 = a4;
  v37 = (unint64_t)a3;
  v18 = sub_10000ABC8(&v36, (uint64_t)&type metadata for Player.InsertCommand);
  DynamicType = swift_getDynamicType(v18, &type metadata for Player.InsertCommand, 1);
  v20 = (uint64_t)v39;
  v21 = a4;
  sub_1000528E4(a3);
  v22 = v21;
  sub_1000528E4(a3);
  v23 = v22;
  sub_1000528E4(a3);
  swift_retain(v17);
  v24 = sub_100178360(DynamicType, v20);
  if (!v24)
  {
    sub_10000682C(&v36);

    sub_100052658(a3);
    goto LABEL_7;
  }
  v25 = (void *)v24;
  v26 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v36);

  sub_10000682C(&v36);
  sub_100052658(a3);
  if (!v26)
  {
LABEL_7:
    v36 = 0;
    v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v30._object = (void *)0x80000001003ADC60;
    v30._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v30);
    v35 = a3;
    _print_unlocked<A, B>(_:_:)(&v35, &v36, &type metadata for Player.InsertCommand.Location, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);

    sub_100052658(a3);
    swift_release(v17);
    return (uint64_t)v36;
  }
  v27 = Player.state<A>(for:)(a2, v34, v33);
  MusicItemState.playabilityStatus.getter(v15);
  swift_release(v27);
  v28 = sub_10005E9BC();

  swift_release(v17);
  sub_100052658(a3);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  return v28;
}

uint64_t sub_100061D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100061D78, 0, 0);
}

uint64_t sub_100061D78()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  NSString v3;
  Class isa;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(void **)(v0 + 64);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setPlayActivityFeatureName:", v3);

  if (v1 >> 60 == 15)
    isa = 0;
  else
    isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(*(id *)(v0 + 64), "setPlayActivityRecommendationData:", isa);

  v5 = (_QWORD *)swift_task_alloc(dword_1004930CC);
  *(_QWORD *)(v0 + 136) = v5;
  *v5 = v0;
  v5[1] = sub_100061E38;
  return PlaybackController.insert(_:location:)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100061E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100062038;
  else
    v3 = sub_100061E9C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100061E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100014A7C(*(_QWORD *)(v0 + 120), v0 + 16, &qword_10048D958);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 168) = sub_10000ABC8((_QWORD *)(v0 + 16), v1);
    Player.InsertCommand.Location.notice.getter(v2);
    v3 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 176) = static MainActor.shared.getter(v3);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
    return swift_task_switch(sub_100061F8C, v4, v5);
  }
  else
  {
    sub_100008758(v0 + 16, &qword_10048D958);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100061F8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[19];
  v1 = v0[20];
  v3 = v0[16];
  swift_release(v0[22]);
  sub_1000845D0(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice);
  return swift_task_switch(sub_100061FFC, 0, 0);
}

uint64_t sub_100061FFC()
{
  uint64_t v0;

  sub_10000682C((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100062038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v17;

  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v3 = *(_QWORD *)(v2 + 144);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)static Logger.actions);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 144);
  if (v8)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v17 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v2 + 56) = v9;
    swift_errorRetain(v9);
    v12 = sub_100005574((uint64_t *)&unk_1004911F0);
    v13 = (char *)String.init<A>(describing:)(v2 + 56, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v17);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v9);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v2 + 144));
    swift_errorRelease(v9);
    swift_errorRelease(v9);

  }
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Player.InsertCommand.Location.notice.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) >= 3)
    v6 = 3;
  else
    v6 = (a1 + 3);
  swift_storeEnumTagMultiPayload(v5, v3, v6);
  static Notice.variant(_:)((uint64_t)v5);
  return sub_100006798((uint64_t)v5, type metadata accessor for Notice.Variant);
}

uint64_t sub_1000622A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = sub_100005574(&qword_10048D510);
  v5[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D8E8);
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  v5[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[17] = v9;
  v5[18] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100062358, 0, 0);
}

uint64_t sub_100062358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 120), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 144));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 88);
    sub_1000648AC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
    *(_QWORD *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(_QWORD *)(v0 + 160) = v9;
    if (v8 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003ADC10, "MusicCore/Actions+Playback.swift", 32, 2, 443, 0);
    }
    else
    {
      *(_BYTE *)(v0 + 202) = 0x19041A1Bu >> (8 * v8);
      v10 = *(_QWORD *)(v0 + 112);
      v11 = *(_QWORD *)(v0 + 96);
      v12 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
      v13 = sub_100005574(&qword_10048D930);
      inited = swift_initStackObject(v13, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100384A80;
      *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v11);
      *(_QWORD *)(inited + 40) = v15;
      *(_BYTE *)(inited + 48) = 0;
      *(_QWORD *)(v0 + 168) = sub_100033420(inited);
      *(_QWORD *)(v0 + 176) = v16;
      *(_QWORD *)(v0 + 184) = v17;
      *(_WORD *)(v0 + 200) = v18;
      swift_setDeallocating(inited);
      swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      return swift_task_switch(sub_1000625A4, v20, v21);
    }
  }
}

uint64_t sub_1000625A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v6 = *(uint64_t **)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(unsigned __int8 *)(v0 + 202);
  v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 192));
  sub_100033830(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  sub_10000F7F8(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10006267C, 0, 0);
}

uint64_t sub_10006267C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100006798(*(_QWORD *)(v0 + 144), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return sub_10005A164(2036427856, 0xE400000000000000);
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004444D8, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100444500, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F88C;
}

uint64_t sub_10006275C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 2036427856, 0xE400000000000000);
}

uint64_t (*sub_10006276C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444930, 32, 7);
  *(_QWORD *)(v0 + 16) = 2036427888;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100444958, 32, 7);
  *(_QWORD *)(v1 + 16) = 2036427888;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F88C;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  uint64_t *v0;

  return sub_100063EEC(*v0);
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_1000525F4(v0, &v6);
  sub_1000525F4(&v6, &v7);
  if (v7)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (v7)
    v2 = 0x80000001003ADB60;
  else
    v2 = 0x80000001003ADB90;
  v3 = swift_allocObject(&unk_100444528, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100444550, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_10000F88C;
}

uint64_t (*sub_1000628EC())()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*v0)
    v1 = 0xD000000000000028;
  else
    v1 = 0xD000000000000029;
  if (*v0)
    v2 = 0x80000001003ADB60;
  else
    v2 = 0x80000001003ADB90;
  v3 = swift_allocObject(&unk_1004448E0, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = swift_allocObject(&unk_100444908, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain(v2);
  return sub_10000F88C;
}

uint64_t sub_1000629B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100388618);
  v5 = swift_getKeyPath(&unk_100388640);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100062A2C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100388618);
  v5 = swift_getKeyPath(&unk_100388640);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

double sub_100062AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_100062C90();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100062AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v12);
    v13 = type metadata accessor for Song(0);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    KeyPath = swift_getKeyPath(&unk_1003887E0);
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v13;
    *(&v16 - 1) = (uint64_t)&protocol witness table for Song;
    v15 = swift_getKeyPath(&unk_100388818);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    swift_retain(v11);
    static Published.subscript.setter(v7, v11, KeyPath, v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return swift_release(v11);
  }
  return result;
}

uint64_t sub_100062C90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t (**v27)(char *, char *, uint64_t, __n128);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _QWORD *v83;
  char *v85;
  __n128 v86;
  uint64_t (**v87)(char *, char *, uint64_t, __n128);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, _QWORD, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t (**v111)(char *, char *, uint64_t, __n128);
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  _QWORD *v117;
  id v118[3];

  v113 = type metadata accessor for Song(0);
  v111 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v113 - 8);
  __chkstk_darwin(v113);
  v110 = (char *)&v107 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v107 - v7;
  v9 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v114 = (char *)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v115 = (char *)&v107 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v107 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v107 - v18;
  v117 = v0;
  v20 = v0[2];
  v21 = swift_retain(v20);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v21);
  v22 = swift_release(v20);
  v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v116 = v19;
  v112 = v23;
  ((void (*)(char *, char *, uint64_t, __n128))v23)(v17, v19, v9, v22);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v17, v9);
  v25 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
  if ((_DWORD)v24 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v17, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v17, v2);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
    v26 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v6);
    v27 = *(uint64_t (***)(char *, char *, uint64_t, __n128))(v3 + 8);
    ((void (*)(char *, uint64_t))v27)(v6, v2);
    v28 = v10;
    v29 = v8;
    v111 = v27;
    if ((v26 & 1) != 0)
    {
      v30 = v117[3];
      KeyPath = swift_getKeyPath(&unk_100388838);
      v32 = swift_getKeyPath(&unk_100388860);
      v33 = swift_retain(v30);
      static Published.subscript.getter(v118, v33, KeyPath, v32);
      swift_release(v30);
      swift_release(KeyPath);
      swift_release(v32);
      v34 = v118[0];

      if (v34)
      {
        v35 = v115;
        v36 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v28 + 104))(v115, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v9);
        __chkstk_darwin(v36);
        v37 = v113;
        *(&v107 - 2) = v113;
        *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
        v38 = swift_getKeyPath(&unk_100388788);
        __chkstk_darwin(v38);
        *(&v107 - 2) = v37;
        *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
        v39 = swift_getKeyPath(&unk_1003887C0);
        v40 = v114;
        v112(v114, v35, v9);
        v41 = v117;
        swift_retain(v117);
        static Published.subscript.setter(v40, v41, v38, v39);
        v42 = *(void (**)(char *, uint64_t))(v28 + 8);
        v42(v35, v9);
        ((void (*)(char *, uint64_t))v111)(v8, v2);
        v43 = v116;
        return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
      }
    }
    v65 = v115;
    v17 = v116;
    v66 = v112;
    v67 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v115, v116, v9);
    __chkstk_darwin(v67);
    v108 = v2;
    v68 = v66;
    v69 = v113;
    *(&v107 - 2) = v113;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v70 = swift_getKeyPath(&unk_100388788);
    v110 = v29;
    v71 = v28;
    __chkstk_darwin(v70);
    *(&v107 - 2) = v69;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v72 = swift_getKeyPath(&unk_1003887C0);
    v73 = v114;
    v68(v114, v65, v9);
    v74 = v117;
    swift_retain(v117);
    static Published.subscript.setter(v73, v74, v70, v72);
    v42 = *(void (**)(char *, uint64_t))(v71 + 8);
    v42(v65, v9);
    ((void (*)(char *, uint64_t))v111)(v110, v108);
LABEL_12:
    v43 = v17;
    return ((uint64_t (*)(char *, uint64_t))v42)(v43, v9);
  }
  v44 = v24;
  v109 = v10;
  if ((_DWORD)v24 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    v75 = v112;
    v77 = v115;
    v76 = v116;
    v78 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v115, v116, v9);
    __chkstk_darwin(v78);
    v79 = v113;
    *(&v107 - 2) = v113;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v80 = swift_getKeyPath(&unk_100388788);
    __chkstk_darwin(v80);
    *(&v107 - 2) = v79;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v81 = swift_getKeyPath(&unk_1003887C0);
    v82 = v114;
    v75(v114, v77, v9);
    v83 = v117;
    swift_retain(v117);
    static Published.subscript.setter(v82, v83, v80, v81);
    v42 = *(void (**)(char *, uint64_t))(v109 + 8);
    v42(v77, v9);
    v42(v76, v9);
    goto LABEL_12;
  }
  v108 = v2;
  v45 = v117;
  v46 = v117[3];
  v47 = swift_getKeyPath(&unk_100388838);
  v48 = swift_getKeyPath(&unk_100388860);
  v49 = swift_retain(v46);
  static Published.subscript.getter(v118, v49, v47, v48);
  swift_release(v46);
  swift_release(v47);
  swift_release(v48);
  v50 = v118[0];

  if (!v50)
    goto LABEL_9;
  v51 = v45[3];
  v52 = swift_getKeyPath(&unk_100388880);
  v53 = swift_getKeyPath(&unk_1003888A8);
  v54 = swift_retain(v51);
  static Published.subscript.getter(v118, v54, v52, v53);
  swift_release(v51);
  swift_release(v52);
  swift_release(v53);
  if (((uint64_t)v118[0] & 1) != 0
    || (v55 = v45[3],
        swift_retain(v55),
        v56 = Player.supportsDelegation.getter(),
        swift_release(v55),
        (v56 & 1) != 0))
  {
LABEL_9:
    v58 = v115;
    v57 = v116;
    v59 = v112;
    v60 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v115, v116, v9);
    __chkstk_darwin(v60);
    v61 = v113;
    *(&v107 - 2) = v113;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v62 = swift_getKeyPath(&unk_100388788);
    __chkstk_darwin(v62);
    *(&v107 - 2) = v61;
    *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
    v63 = swift_getKeyPath(&unk_1003887C0);
    v64 = v114;
    v59(v114, v58, v9);
    swift_retain(v45);
    static Published.subscript.setter(v64, v45, v62, v63);
    v42 = *(void (**)(char *, uint64_t))(v109 + 8);
    v42(v58, v9);
    v43 = v57;
  }
  else
  {
    v85 = (char *)v45 + *(_QWORD *)(*v45 + 120);
    v86 = swift_beginAccess(v85, v118, 0, 0);
    v88 = v110;
    v87 = v111;
    v89 = v113;
    v90 = v111[2](v110, v85, v113, v86);
    Song.catalogID.getter(v90);
    v92 = v91;
    ((void (*)(char *, uint64_t))v87[1])(v88, v89);
    if (v92)
    {
      swift_bridgeObjectRelease(v92);
      v93 = v109;
      v94 = v115;
      v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 104))(v115, v44, v9);
      __chkstk_darwin(v95);
      *(&v107 - 2) = v89;
      *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
      v96 = swift_getKeyPath(&unk_100388788);
      __chkstk_darwin(v96);
      *(&v107 - 2) = v89;
      *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
      v97 = swift_getKeyPath(&unk_1003887C0);
      v98 = v114;
      v112(v114, v94, v9);
      swift_retain(v45);
      static Published.subscript.setter(v98, v45, v96, v97);
      v42 = *(void (**)(char *, uint64_t))(v93 + 8);
      v42(v94, v9);
    }
    else
    {
      v99 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
      v100 = v89;
      v101 = v115;
      v99(v115, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v108);
      v102 = v109;
      v103 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v109 + 104))(v101, v25, v9);
      __chkstk_darwin(v103);
      *(&v107 - 2) = v100;
      *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
      v104 = swift_getKeyPath(&unk_100388788);
      __chkstk_darwin(v104);
      *(&v107 - 2) = v100;
      *(&v107 - 1) = (uint64_t)&protocol witness table for Song;
      v105 = swift_getKeyPath(&unk_1003887C0);
      v106 = v114;
      v112(v114, v101, v9);
      swift_retain(v45);
      static Published.subscript.setter(v106, v45, v104, v105);
      v42 = *(void (**)(char *, uint64_t))(v102 + 8);
      v42(v101, v9);
    }
    v43 = v116;
  }
  return ((uint64_t (*)(_QWORD, _QWORD))v42)(v43, v9);
}

uint64_t sub_100063634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048EFD0) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v13 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v4, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v4, v8);
  v10 = (v4 + v13 + v6) & ~v6;
  v11 = v10 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v1);
  return swift_deallocObject(v0, v11, v3 | v6 | 7);
}

unint64_t sub_10006371C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_100005574(&qword_10048EFD0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_100060954(v0 + v4, v0 + ((v4 + *(_QWORD *)(v3 + 64) + v5) & ~v5), v1, v2);
}

uint64_t sub_100063784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048EFD0) - 8);
  v17 = v1;
  v18 = *(unsigned __int8 *)(v2 + 80);
  v3 = (v18 + 32) & ~v18;
  v4 = *(_QWORD *)(v1 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v3 + *(_QWORD *)(v2 + 64) + v5) & ~v5;
  v7 = (*(_QWORD *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = v0 + v3;
  v11 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v17);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8 + 8));
  v13 = *(_QWORD *)(v0 + v9 + 8);
  if (v13 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + v9), v13);
  v14 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;

  return swift_deallocObject(v0, v15, v18 | v5 | 7);
}

uint64_t sub_1000638C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(sub_100005574(&qword_10048EFD0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = v0 + v4;
  v11 = v0 + v6;
  v12 = *(_QWORD *)(v0 + v7);
  v13 = *(_QWORD *)(v0 + v8);
  v14 = *(_QWORD *)(v0 + v8 + 8);
  v15 = *(_QWORD *)(v0 + v9);
  v16 = *(_QWORD *)(v0 + v9 + 8);
  v17 = *(_QWORD *)(v0 + ((v9 + 23) & 0xFFFFFFFFFFFFF8));
  v18 = (_QWORD *)swift_task_alloc(dword_10048EFDC);
  *(_QWORD *)(v1 + 16) = v18;
  *v18 = v1;
  v18[1] = sub_10000F894;
  return sub_1000610BC(v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_1000639DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048EFEC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100061724(v7, v8, v2, v3);
}

uint64_t sub_100063A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v6 = *(void **)(v0 + v5);
  if ((unint64_t)v6 >= 4)

  v7 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;

  return swift_deallocObject(v0, v8, v3 | 7);
}

uint64_t sub_100063B18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100061A64(v0[4], (uint64_t)v0 + v3, *(void **)((char *)v0 + v4), *(void **)((char *)v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8)), v1, v0[3]);
}

uint64_t sub_100063B58()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + 40), v1);

  v2 = *(void **)(v0 + 64);
  if ((unint64_t)v2 >= 4)

  if (*(_QWORD *)(v0 + 96))
    sub_10000682C((_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100063BC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = v0[8];
  v9 = (_QWORD *)swift_task_alloc(dword_10048F00C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_100061D14(v2, v3, v4, v5, v6, v7, v8, (uint64_t)(v0 + 9));
}

uint64_t sub_100063C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  unint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + *(_QWORD *)(v2 + 64) + v6) & ~v6;
  v8 = (*(_QWORD *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v0 + v4;
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10))
  {
    v21 = v1;
    v11 = *(_QWORD *)(v9 + 8);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = v9 + v10[5];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v20 = v12;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v12 + 24));
      v14 = v12 + v13[6];
      v15 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v15 - 8);
      v19 = v15;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v18 + 48))(v14, 1))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v19);
      swift_bridgeObjectRelease(*(_QWORD *)(v20 + v13[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v20 + v13[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v20 + v13[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v9 + v10[8]));
    v1 = v21;
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v1);
  v16 = *(void **)(v0 + v8);
  if ((unint64_t)v16 >= 4)

  return swift_deallocObject(v0, v8 + 8, v3 | v6 | 7);
}

uint64_t sub_100063E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v5;
  v9 = v0 + v7;
  v10 = *(_QWORD *)(v0 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_10048F01C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000F894;
  return sub_1000622A8(v8, v9, v10, v2, v3);
}

uint64_t sub_100063EEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v17[-v10];
  if (a1 == 3)
  {
    v12 = 0x7466412079616C50;
    v13 = 0xEA00000000007265;
  }
  else if (a1 == 2)
  {
    v12 = 0x51206F7420646441;
    v13 = 0xEC00000065756575;
  }
  else
  {
    if (a1)
      v12 = 0x73614C2079616C50;
    else
      v12 = 0x78654E2079616C50;
    v13 = 0xE900000000000074;
  }
  String.LocalizationValue.init(stringLiteral:)(v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v14 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v15 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t _s9MusicCore7ActionsO7PreviewO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003ADBC0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_10006422C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[16];
  uint64_t v17;
  unint64_t v18;

  v4 = *a1;
  v5 = (uint64_t)(a1 + 1);
  v6 = a1[1];
  v7 = a1[2];
  v14 = *(_OWORD *)(a1 + 5);
  v15 = *(_OWORD *)(a1 + 3);
  v13 = *(_OWORD *)(a1 + 7);
  sub_1000525F4(a1, &v17);
  sub_1000525F4(&v17, &v18);
  if (v18 >= 4)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003ADC10, "MusicCore/Actions+Playback.swift", 32, 2, 218, 0);
    __break(1u);
  }
  else
  {
    v8 = 0x22232021u >> (8 * v18);
    sub_1000149A8(v5, (uint64_t)v16, &qword_10048E9F8);
    v9 = a1[4];
    v10 = a1[6];
    v11 = a1[8];
    sub_1000595EC((uint64_t)v16);
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v7;
    *(_OWORD *)(a2 + 24) = v15;
    *(_OWORD *)(a2 + 40) = v14;
    *(_OWORD *)(a2 + 56) = v13;
    *(_BYTE *)(a2 + 72) = v8;
    *(_QWORD *)(a2 + 80) = sub_100060808;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0x4014000000000000;
    *(_QWORD *)(a2 + 104) = &unk_10048F108;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 120) = &unk_10048F110;
    *(_QWORD *)(a2 + 128) = 0;
    swift_retain(v9);
    swift_retain(v10);
    return swift_retain(v11);
  }
  return result;
}

uint64_t sub_10006439C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000643C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048F02C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_10005DA70(v7, v8, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.Preview()
{
  return &type metadata for Actions.Preview;
}

ValueMetadata *type metadata accessor for Actions.Preview.Context()
{
  return &type metadata for Actions.Preview.Context;
}

ValueMetadata *type metadata accessor for Actions.CreateStation()
{
  return &type metadata for Actions.CreateStation;
}

ValueMetadata *type metadata accessor for Actions.CreateStation.Context()
{
  return &type metadata for Actions.CreateStation.Context;
}

ValueMetadata *type metadata accessor for Actions.Play()
{
  return &type metadata for Actions.Play;
}

ValueMetadata *type metadata accessor for Actions.Play.Context()
{
  return &type metadata for Actions.Play.Context;
}

ValueMetadata *type metadata accessor for Actions.Queue()
{
  return &type metadata for Actions.Queue;
}

uint64_t _s5QueueO7ContextVwxx(uint64_t a1)
{
  if (*(_QWORD *)a1 >= 4uLL)

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  return swift_release(*(_QWORD *)(a1 + 64));
}

uint64_t _s5QueueO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 >= 4uLL)
    v5 = v4;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v10;
  v8 = *(_QWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRetain(v7);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v8);
  return a1;
}

uint64_t _s5QueueO7ContextVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(_QWORD *)a1 = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(_QWORD *)a1 = v5;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;
LABEL_8:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  v15 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v14;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

__n128 _s5QueueO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5QueueO7ContextVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(_QWORD *)a1 = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)a1 = v5;
LABEL_6:
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(*(_QWORD *)(a1 + 32));
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v6;
  swift_release(v7);
  return a1;
}

uint64_t _s5QueueO7ContextVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5QueueO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Queue.Context()
{
  return &type metadata for Actions.Queue.Context;
}

uint64_t sub_1000647FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100064820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100493470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000648AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_QWORD *sub_1000648F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  __n128 v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  id v133[4];

  v4 = v3;
  v118 = a3;
  v127 = a2;
  v128 = a1;
  v5 = sub_100005574(&qword_10048F148);
  v120 = *(_QWORD *)(v5 - 8);
  v121 = v5;
  __chkstk_darwin(v5);
  v119 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574((uint64_t *)&unk_100494240);
  v123 = *(_QWORD *)(v7 - 8);
  v124 = v7;
  __chkstk_darwin(v7);
  v122 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v9);
  v125 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100005574(&qword_10048F150);
  v126 = *(_QWORD **)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10048F158);
  v13 = *(_QWORD *)(v12 - 8);
  v115 = v12;
  v116 = v13;
  __chkstk_darwin(v12);
  v113 = (char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100005574((uint64_t *)&unk_1004938C0);
  v110 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v109 = (char *)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v16 = *(_QWORD *)(v108 - 8);
  v17 = __chkstk_darwin(v108);
  v107 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v105 - v19;
  v106 = sub_100005574((uint64_t *)&unk_1004938B0);
  v21 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v23 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v105 - v29;
  v4[4] = _swiftEmptyArrayStorage;
  v111 = v4 + 4;
  v31 = (char *)v4 + *(_QWORD *)(*v4 + 128);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))((char *)&v105 - v29, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  Published.init(initialValue:)(v28, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v31, v23, v106);
  v32 = (char *)v4 + *(_QWORD *)(*v4 + 136);
  v33 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v34 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v20, v33, v34);
  v35 = v108;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v108);
  v36 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v37 = v16;
  v38 = v107;
  v36(v107, v20, v35);
  v39 = v109;
  Published.init(initialValue:)(v38, v35);
  v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v20, v35);
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v32, v39, v117);
  v41 = (char *)v4 + *(_QWORD *)(*v4 + 120);
  v42 = type metadata accessor for Song(0);
  v117 = *(_QWORD *)(v42 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v41, v128, v42);
  v43 = v118;
  v44 = v127;
  v4[2] = v127;
  v4[3] = v43;
  swift_retain(v43);
  swift_retain(v44);
  v45 = sub_100062C90();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v45);
  v131 = v42;
  v132 = &protocol witness table for Song;
  KeyPath = swift_getKeyPath(&unk_1003887E0);
  v118 = v42;
  v129 = v42;
  v130 = &protocol witness table for Song;
  v47 = swift_getKeyPath(&unk_100388818);
  v36(v38, v20, v35);
  swift_retain(v4);
  static Published.subscript.setter(v38, v4, KeyPath, v47);
  v48 = ((uint64_t (*)(char *, uint64_t))v40)(v20, v35);
  v49 = v112;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v48);
  v50 = sub_1000651F0();
  v133[0] = (id)static OS_dispatch_queue.main.getter(v50, v51, v52, v53, v54, v55, v56, v57, v105, v106, v107, v108, v109, v110, v111);
  v58 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
  v60 = v125;
  v59(v125, 1, 1, v58);
  v61 = sub_10002FFB8((unint64_t *)&unk_100494250, &qword_10048F150, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  sub_100006924((unint64_t *)&qword_100493850, (uint64_t (*)(uint64_t))sub_1000651F0, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v62 = v113;
  v63 = v60;
  v64 = (uint64_t)v60;
  v65 = v114;
  Publisher.receive<A>(on:options:)(v133, v63, v114, v50, v61);
  sub_100008758(v64, (uint64_t *)&unk_1004962D0);

  ((void (*)(char *, uint64_t))v126[1])(v49, v65);
  v66 = swift_allocObject(&unk_100444A20, 24, 7);
  v126 = v4;
  swift_weakInit(v66 + 16, v4);
  v67 = sub_10002FFB8(&qword_10048F160, &qword_10048F158, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v68 = v115;
  v69 = v62;
  v70 = Publisher<>.sink(receiveValue:)(sub_100065250, v66, v115, v67);
  v71 = swift_release(v66);
  v72 = v111;
  (*(void (**)(char *, uint64_t, __n128))(v116 + 8))(v69, v68, v71);
  swift_beginAccess(v72, v133, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v73);
  v75 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v74 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v75 >= v74 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1);
  v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, v70);
  specialized Array._endMutation()(v76);
  v77 = swift_endAccess(v133);
  v78 = v72;
  v79 = v119;
  v80 = v127;
  v81 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v77);
  v133[0] = (id)static OS_dispatch_queue.main.getter(v81, v82, v83, v84, v85, v86, v87, v88, v105, v106, v107, v108, v109, v110, v111);
  v89 = (uint64_t)v125;
  v59(v125, 1, 1, v58);
  v90 = sub_10002FFB8(qword_100494260, &qword_10048F148, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v91 = v121;
  v92 = v122;
  Publisher.receive<A>(on:options:)(v133, v89, v121, v50, v90);
  sub_100008758(v89, (uint64_t *)&unk_1004962D0);

  (*(void (**)(char *, uint64_t))(v120 + 8))(v79, v91);
  v93 = swift_allocObject(&unk_100444A20, 24, 7);
  v94 = v126;
  swift_weakInit(v93 + 16, v126);
  v95 = swift_allocObject(&unk_100444A48, 32, 7);
  *(_QWORD *)(v95 + 16) = v93;
  *(_QWORD *)(v95 + 24) = v80;
  v96 = sub_10002FFB8(&qword_10048F168, (uint64_t *)&unk_100494240, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v80);
  v97 = v124;
  v98 = Publisher<>.sink(receiveValue:)(sub_100065284, v95, v124, v96);
  v99 = swift_release(v95);
  (*(void (**)(char *, uint64_t, __n128))(v123 + 8))(v92, v97, v99);
  swift_beginAccess(v78, v133, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v100);
  v102 = *(_QWORD *)((v94[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v101 = *(_QWORD *)((v94[4] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v102 >= v101 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v101 > 1, v102 + 1, 1);
  v103 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v102, v98);
  specialized Array._endMutation()(v103);
  swift_endAccess(v133);
  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v128, v118);
  return v126;
}

uint64_t sub_1000651B8()
{
  return 16;
}

__n128 sub_1000651C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000651D8()
{
  return 16;
}

__n128 sub_1000651E4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t sub_1000651F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100490BC0;
  if (!qword_100490BC0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100490BC0);
  }
  return result;
}

uint64_t sub_10006522C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100065250(uint64_t a1)
{
  uint64_t v1;

  return sub_100062AA0(a1, v1);
}

uint64_t sub_100065258()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100065284(uint64_t a1)
{
  uint64_t v1;

  return sub_100062AF4(a1, *(_QWORD *)(v1 + 16));
}

double Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  __int128 v6;
  double result;
  __int128 v8;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;

  sub_100077E3C(a1, a2, a3, a4, v9);
  v6 = v9[1];
  *a5 = v9[0];
  a5[1] = v6;
  result = *(double *)&v10;
  v8 = v11;
  a5[2] = v10;
  a5[3] = v8;
  return result;
}

__n128 static Actions.Share.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *a1;
  v5 = a1[5];
  v7 = a1[7];
  v10 = *(_OWORD *)(a1 + 1);
  v11 = *((_OWORD *)a1 + 3);
  v6 = v11;
  swift_retain(v10);
  v9 = *(__n128 *)(a1 + 3);
  swift_retain(a1[3]);
  swift_retain(v5);
  sub_1000595EC((uint64_t)&v11);
  *(_QWORD *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v10;
  result = v9;
  *(__n128 *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_10000F930;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10048F188;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10048F190;
  *(_QWORD *)(a2 + 120) = 0;
  return result;
}

uint64_t Actions.Share.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t Actions.Share.Context.menuItemTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

CFRange (__swiftcall *Actions.Share.Context.menuItemTitle.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t sub_100065450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v5 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v5;
  v7 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v2;
  *(_QWORD *)(a2 + 56) = v4;
  *(_BYTE *)(a2 + 64) = 42;
  *(_QWORD *)(a2 + 72) = sub_10000F930;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0x4014000000000000;
  *(_QWORD *)(a2 + 96) = &unk_10048F188;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = &unk_10048F190;
  *(_QWORD *)(a2 + 120) = 0;
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v3);
  return swift_bridgeObjectRetain();
}

uint64_t (*Actions.Share.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100444AB0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001003ADDD0;
  v1 = swift_allocObject(&unk_100444AD8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x80000001003ADDD0;
  return sub_10000F228;
}

uint64_t (*sub_100065574())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004452C8, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000013;
  *(_QWORD *)(v0 + 24) = 0x80000001003ADDD0;
  v1 = swift_allocObject(&unk_1004452F0, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x80000001003ADDD0;
  return sub_10000F88C;
}

uint64_t sub_1000655F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[5] = v4;
  v2[6] = v5;
  return swift_task_switch(sub_100065664, v4, v5);
}

uint64_t sub_100065664()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  sub_10000ABC8(v1, v2);
  v4 = *(int **)(v3 + 8);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[7] = v5;
  *v5 = v0;
  v5[1] = sub_1000656E4;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[3], v2, v3);
}

uint64_t sub_1000656E4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return swift_task_switch(sub_100065730, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100065730()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t (**a6)()@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  unint64_t (*v26)();
  unint64_t (*v27)();
  uint64_t result;
  uint64_t v29;
  __int128 v30[2];

  v12 = sub_100005574(&qword_10048D8E8);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000244B0((uint64_t)a1, (uint64_t)v30);
  v16 = swift_allocObject(&unk_100444B00, 64, 7);
  *(_QWORD *)(v16 + 16) = a2;
  sub_1000137C8(v30, v16 + 24);
  v17 = (unint64_t (*)())swift_allocObject(&unk_100444B28, 48, 7);
  *((_QWORD *)v17 + 2) = sub_1000780E4;
  *((_QWORD *)v17 + 3) = v16;
  *((_QWORD *)v17 + 4) = a3;
  *((_QWORD *)v17 + 5) = a4;
  sub_100014A7C(a5, (uint64_t)v15, &qword_10048D8E8);
  sub_1000244B0((uint64_t)a1, (uint64_t)v30);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_100444B50, v20 + 40, v18 | 7);
  sub_10000F3EC((uint64_t)v15, v21 + v19);
  sub_1000137C8(v30, v21 + v20);
  v22 = a1[3];
  v23 = a1[4];
  sub_10000ABC8(a1, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 32);
  swift_retain(v16);
  v25 = v24(v22, v23);
  v27 = v26;
  sub_100008758(a5, &qword_10048D8E8);
  result = sub_10000682C(a1);
  *a6 = sub_1000780E4;
  a6[1] = (unint64_t (*)())v16;
  a6[2] = (unint64_t (*)())&unk_10048F1A0;
  a6[3] = v17;
  a6[4] = (unint64_t (*)())&unk_10048F1B0;
  a6[5] = (unint64_t (*)())v21;
  a6[6] = (unint64_t (*)())v25;
  a6[7] = v27;
  return result;
}

unint64_t sub_10006592C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[16];

  v4 = sub_100005574(&qword_100491260);
  __chkstk_darwin(v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Playlist(0);
  v45 = *(_QWORD *)(v46 - 8);
  v7 = __chkstk_darwin(v46);
  v43 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v44 = (char *)&v42 - v9;
  v10 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1003888D0);
  v14 = swift_getKeyPath(&unk_1003888F8);
  static Published.subscript.getter(v51, a1, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v15 = BYTE1(v51[0]);
  v16 = v51[3];
  v17 = v51[4];
  v18 = v51[7];
  v19 = v51[9];
  v20 = (void *)v51[10];
  v21 = v51[12];
  swift_bridgeObjectRelease(v51[14]);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v19);

  if (v15 != 1)
    return 0xD000000000000016;
  v22 = a2[3];
  v23 = a2[4];
  sub_10000ABC8(a2, v22);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  v24 = type metadata accessor for URL(0);
  LODWORD(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24);
  sub_100008758((uint64_t)v12, &qword_10048D510);
  sub_1000244B0((uint64_t)a2, (uint64_t)v51);
  if ((_DWORD)v22 != 1)
  {
    sub_10000682C(v51);
    return 0;
  }
  sub_1000244B0((uint64_t)v51, (uint64_t)v47);
  v25 = sub_100005574(&qword_10048EB70);
  v26 = sub_100005574(&qword_10048E280);
  if (swift_dynamicCast(&v48, v47, v25, v26, 6))
  {
    v27 = *((_QWORD *)&v49 + 1);
    v28 = v50;
    sub_10000ABC8(&v48, *((uint64_t *)&v49 + 1));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    v30 = v29;
    sub_10000682C(v51);
    sub_10000682C(&v48);
    if (v30)
    {
      swift_bridgeObjectRelease(v30);
      return 0;
    }
  }
  else
  {
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    sub_10000682C(v51);
    sub_100008758((uint64_t)&v48, (uint64_t *)&unk_1004940C0);
  }
  sub_1000244B0((uint64_t)a2, (uint64_t)&v48);
  v32 = v46;
  v33 = swift_dynamicCast(v6, &v48, v25, v46, 6);
  v34 = v45;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  if ((v33 & 1) == 0)
  {
    v35(v6, 1, 1, v32);
    sub_100008758((uint64_t)v6, &qword_100491260);
    return 0xD000000000000023;
  }
  v35(v6, 0, 1, v32);
  v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v44, v6, v32);
  v37 = Playlist.isShareable.getter();
  v38 = v43;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v43, v36, v32);
  if ((v37 & 1) != 0)
  {
    v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v38, v32);
    v39(v36, v32);
    return 0;
  }
  v40 = Playlist.canMakeShareable.getter();
  v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  v41(v38, v32);
  if ((v40 & 1) != 0)
  {
    v41(v36, v32);
    return 0;
  }
  v41(v36, v32);
  return 0xD000000000000021;
}

uint64_t Playlist.isShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  unsigned int v39;
  _BYTE *v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  _QWORD *v45;
  _BYTE *v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_BYTE *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[4];
  int v72;
  _QWORD *v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  void (*v75)(_BYTE *, _QWORD, uint64_t);
  void (*v76)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  _BYTE *v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v89;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v78 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = sub_100005574(&qword_10048E050);
  v5 = __chkstk_darwin(v86);
  v82 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v8 = &v71[-v7];
  v9 = sub_100005574(&qword_10048DEF0);
  v10 = __chkstk_darwin(v9);
  v84 = &v71[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v10);
  v85 = &v71[-v13];
  v14 = __chkstk_darwin(v12);
  v83 = &v71[-v15];
  v16 = __chkstk_darwin(v14);
  v80 = &v71[-v17];
  v18 = __chkstk_darwin(v16);
  v20 = &v71[-v19];
  __chkstk_darwin(v18);
  v22 = &v71[-v21];
  v23 = type metadata accessor for Playlist(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v87 = &v71[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __chkstk_darwin(v25);
  v89 = &v71[-v28];
  v29 = __chkstk_darwin(v27);
  v31 = &v71[-v30];
  v32 = Playlist.isPublic.getter(v29);
  v88 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 16);
  v33 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v31, v1, v23);
  if ((v32 & 1) != 0)
  {
    v38 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
    v38(v31, v23);
    goto LABEL_6;
  }
  v77 = v24;
  v79 = v23;
  v81 = v1;
  Playlist.variant.getter(v33);
  v75 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v75(v20, enum case for Playlist.Variant.subscribed(_:), v2);
  v76 = (void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v3[7];
  v76(v20, 0, 1, v2);
  v34 = (uint64_t)&v8[*(int *)(v86 + 48)];
  sub_100014A7C((uint64_t)v22, (uint64_t)v8, &qword_10048DEF0);
  sub_100014A7C((uint64_t)v20, v34, &qword_10048DEF0);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  v36 = v35((uint64_t)v8, 1, v2);
  v37 = (uint64_t)v8;
  v73 = v3;
  if (v36 == 1)
  {
    sub_100008758((uint64_t)v20, &qword_10048DEF0);
    sub_100008758((uint64_t)v22, &qword_10048DEF0);
    v38 = *(void (**)(_BYTE *, uint64_t))(v77 + 8);
    v38(v31, v79);
    v39 = v35(v34, 1, v2);
    v40 = v85;
    if (v39 == 1)
    {
      sub_100008758(v37, &qword_10048DEF0);
      v1 = v81;
      v23 = v79;
LABEL_6:
      v41 = v88;
      v42 = v89;
      v88(v89, v1, v23);
LABEL_7:
      v38(v42, v23);
LABEL_8:
      v43 = v87;
      v41(v87, v1, v23);
LABEL_9:
      v38(v43, v23);
      return 1;
    }
    v74 = v35;
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v49 = v79;
    goto LABEL_15;
  }
  v45 = v3;
  v46 = v80;
  sub_100014A7C((uint64_t)v8, (uint64_t)v80, &qword_10048DEF0);
  v47 = v35(v34, 1, v2);
  v48 = v77;
  v74 = v35;
  if (v47 == 1)
  {
    sub_100008758((uint64_t)v20, &qword_10048DEF0);
    sub_100008758((uint64_t)v22, &qword_10048DEF0);
    v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
    v49 = v79;
    v38(v31, v79);
    ((void (*)(_BYTE *, uint64_t))v45[1])(v46, v2);
    v50 = v81;
    v41 = v88;
    v42 = v89;
    v51 = (uint64_t)v83;
    v40 = v85;
LABEL_15:
    sub_100008758(v37, &qword_10048E050);
    v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v42, v50, v49);
    v23 = v49;
    goto LABEL_16;
  }
  v57 = v46;
  v58 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v45[4])(v78, v34, v2);
  v59 = sub_100006924((unint64_t *)&qword_100490B90, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v72 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v58, v2, v59);
  v60 = (void (*)(_BYTE *, uint64_t))v45[1];
  v60(v58, v2);
  sub_100008758((uint64_t)v20, &qword_10048DEF0);
  sub_100008758((uint64_t)v22, &qword_10048DEF0);
  v38 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
  v61 = v31;
  v62 = v79;
  v38(v61, v79);
  v60(v57, v2);
  v63 = v37;
  v23 = v62;
  sub_100008758(v63, &qword_10048DEF0);
  v41 = v88;
  v42 = v89;
  v1 = v81;
  v52 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v88)(v89, v81, v62);
  v51 = (uint64_t)v83;
  v40 = v85;
  if ((v72 & 1) != 0)
    goto LABEL_7;
LABEL_16:
  Playlist.variant.getter(v52);
  v75(v40, enum case for Playlist.Variant.admin(_:), v2);
  v76(v40, 0, 1, v2);
  v53 = v82;
  v54 = (uint64_t)&v82[*(int *)(v86 + 48)];
  sub_100014A7C(v51, (uint64_t)v82, &qword_10048DEF0);
  sub_100014A7C((uint64_t)v40, v54, &qword_10048DEF0);
  v55 = v74;
  if (v74((uint64_t)v53, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v40, &qword_10048DEF0);
    sub_100008758(v51, &qword_10048DEF0);
    v38(v42, v23);
    if (v55(v54, 1, v2) == 1)
    {
      sub_100008758((uint64_t)v53, &qword_10048DEF0);
      v1 = v81;
      goto LABEL_8;
    }
    goto LABEL_21;
  }
  sub_100014A7C((uint64_t)v53, (uint64_t)v84, &qword_10048DEF0);
  if (v55(v54, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v40, &qword_10048DEF0);
    sub_100008758(v51, &qword_10048DEF0);
    v38(v42, v23);
    ((void (*)(_BYTE *, uint64_t))v73[1])(v84, v2);
LABEL_21:
    sub_100008758((uint64_t)v53, &qword_10048E050);
    v43 = v87;
    v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
    goto LABEL_25;
  }
  v64 = v73;
  v65 = v78;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v73[4])(v78, v54, v2);
  v66 = sub_100006924((unint64_t *)&qword_100490B90, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  LODWORD(v88) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v65, v2, v66);
  v67 = v51;
  v68 = (void (*)(_BYTE *, uint64_t))v64[1];
  v68(v65, v2);
  sub_100008758((uint64_t)v85, &qword_10048DEF0);
  sub_100008758(v67, &qword_10048DEF0);
  v38(v89, v23);
  v68(v84, v2);
  sub_100008758((uint64_t)v53, &qword_10048DEF0);
  v43 = v87;
  v56 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v41)(v87, v81, v23);
  if ((v88 & 1) != 0)
    goto LABEL_9;
LABEL_25:
  Playlist.catalogID.getter(v56);
  v70 = v69;
  v38(v43, v23);
  if (!v70)
    return 0;
  swift_bridgeObjectRelease(v70);
  return 1;
}

uint64_t Playlist.canMakeShareable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;

  v65 = type metadata accessor for Playlist.Variant(0);
  v63 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v59 = (char *)&v59 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100005574(&qword_10048E050);
  __chkstk_darwin(v62);
  v64 = (uint64_t)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100005574(&qword_10048DEF0);
  v3 = __chkstk_darwin(v2);
  v60 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v69 = (char *)&v59 - v6;
  __chkstk_darwin(v5);
  v70 = (char *)&v59 - v7;
  v8 = type metadata accessor for Playlist.EditableComponents(0);
  v67 = *(_QWORD *)(v8 - 8);
  v68 = v8;
  __chkstk_darwin(v8);
  v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574((uint64_t *)&unk_100491640);
  __chkstk_darwin(v10);
  v66 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v71 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v59 - v16;
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v18 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_1003888D0);
  v20 = swift_getKeyPath(&unk_1003888F8);
  static Published.subscript.getter(&v73, v18, KeyPath, v20);
  swift_release(KeyPath);
  swift_release(v20);
  v21 = v74;
  v22 = v75;
  v23 = v76;
  v24 = v77;
  v26 = v78;
  v25 = v79;
  v27 = v80;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v26);

  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v29 = v28(v17, v72, v12);
  v30 = v12;
  v31 = v17;
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
LABEL_15:
    v44 = 0;
    return v44 & 1;
  }
  v72 = v13;
  v32 = (uint64_t)v66;
  Playlist.editableComponents.getter(v29);
  v34 = v67;
  v33 = v68;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v32, 1, v68) == 1)
  {
    sub_100008758(v32, (uint64_t *)&unk_100491640);
    v35 = v71;
    v36 = v28(v71, (uint64_t)v31, v30);
    v38 = (uint64_t)v69;
    v37 = (uint64_t)v70;
    goto LABEL_9;
  }
  v39 = v61;
  static Playlist.EditableComponents.tracklist.getter();
  v40 = sub_100006924((unint64_t *)&qword_10048DEE8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents, (uint64_t)&protocol conformance descriptor for Playlist.EditableComponents);
  v41 = dispatch thunk of SetAlgebra.isSuperset(of:)(v39, v33, v40);
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v39, v33);
  v42((char *)v32, v33);
  v35 = v71;
  v36 = v28(v71, (uint64_t)v31, v30);
  v38 = (uint64_t)v69;
  v37 = (uint64_t)v70;
  if ((v41 & 1) == 0)
  {
LABEL_9:
    v70 = v31;
    Playlist.variant.getter(v36);
    v45 = v63;
    v46 = v65;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v38, enum case for Playlist.Variant.favoriteSongs(_:), v65);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v38, 0, 1, v46);
    v47 = v64;
    v48 = v64 + *(int *)(v62 + 48);
    sub_100014A7C(v37, v64, &qword_10048DEF0);
    sub_100014A7C(v38, v48, &qword_10048DEF0);
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v49(v47, 1, v46) == 1)
    {
      sub_100008758(v38, &qword_10048DEF0);
      sub_100008758(v37, &qword_10048DEF0);
      v50 = *(void (**)(char *, uint64_t))(v72 + 8);
      v50(v35, v30);
      v50(v70, v30);
      if (v49(v48, 1, v46) == 1)
      {
        sub_100008758(v47, &qword_10048DEF0);
        v44 = 1;
        return v44 & 1;
      }
    }
    else
    {
      v51 = v60;
      sub_100014A7C(v47, v60, &qword_10048DEF0);
      if (v49(v48, 1, v46) != 1)
      {
        v54 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v59, v48, v46);
        v55 = sub_100006924((unint64_t *)&qword_100490B90, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v56 = v51;
        v44 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v54, v46, v55);
        v57 = *(void (**)(char *, uint64_t))(v45 + 8);
        v57(v54, v46);
        sub_100008758(v38, &qword_10048DEF0);
        sub_100008758(v37, &qword_10048DEF0);
        v58 = *(void (**)(char *, uint64_t))(v72 + 8);
        v58(v71, v30);
        v58(v70, v30);
        v57((char *)v56, v46);
        sub_100008758(v47, &qword_10048DEF0);
        return v44 & 1;
      }
      sub_100008758(v38, &qword_10048DEF0);
      sub_100008758(v37, &qword_10048DEF0);
      v52 = *(void (**)(char *, uint64_t))(v72 + 8);
      v52(v71, v30);
      v52(v70, v30);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v46);
    }
    sub_100008758(v47, &qword_10048E050);
    goto LABEL_15;
  }
  v43 = *(void (**)(char *, uint64_t))(v72 + 8);
  v43(v35, v30);
  v43(v31, v30);
  v44 = 1;
  return v44 & 1;
}

uint64_t sub_100066BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v6;
  v4[8] = v7;
  return swift_task_switch(sub_100066C4C, v6, v7);
}

uint64_t sub_100066C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  __n128 v10;
  uint64_t (*v12)(void);

  v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2 == 1)
  {
    v3 = *(int **)(v0 + 32);
    v12 = (uint64_t (*)(void))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_100066D0C;
    v5 = v12;
  }
  else
  {
    v6 = v1;
    v7 = v2;
    swift_release(*(_QWORD *)(v0 + 48));
    v8 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v8, 0, 0);
    *v9 = v6;
    v9[1] = v7;
    swift_willThrow(v10);
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_100066D0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100066DA0;
  else
    v4 = sub_100066D6C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100066D6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100066DA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100066DD4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100005574(&qword_10048D510);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10048D8E8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100066E7C, 0, 0);
}

uint64_t sub_100066E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 96), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_10000F7B4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    sub_10000ABC8(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    v14 = v8[3];
    sub_10000ABC8(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_100033420(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_100067060, v20, v21);
  }
}

uint64_t sub_100067060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 168));
  sub_100033830(v5, v4, 5, 35, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_1000789D0, 0, 0);
}

uint64_t static Actions.ShareLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v5;

  v2 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v2;
  *(_BYTE *)(a2 + 48) = 43;
  *(_QWORD *)(a2 + 56) = sub_10000F930;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0x4014000000000000;
  *(_QWORD *)(a2 + 80) = &unk_10048F1B8;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = &unk_10048F1C0;
  *(_QWORD *)(a2 + 104) = 0;
  swift_retain(v3);
  swift_retain(v5);
  return swift_retain(v2);
}

uint64_t Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;

  v14 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (*(_QWORD *)(v14 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_100444B78, v17 + 40, v15 | 7);
  sub_10000F3EC(a6, v18 + v16);
  result = sub_1000137C8(a1, v18 + v17);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = &unk_10048F1D0;
  a7[5] = v18;
  return result;
}

uint64_t sub_100067284(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100005574(&qword_10048D510);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10048D8E8);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Actions.MetricsReportingContext(0);
  v2[13] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006732C, 0, 0);
}

uint64_t sub_10006732C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 96), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD **)(v0 + 80);
    sub_10000F7B4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v9 = v8[3];
    sub_10000ABC8(v8, v9);
    *(_QWORD *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 136) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    v14 = v8[3];
    sub_10000ABC8(v8, v14);
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v14);
    *(_QWORD *)(inited + 40) = v15;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 144) = sub_100033420(inited);
    *(_QWORD *)(v0 + 152) = v16;
    *(_QWORD *)(v0 + 160) = v17;
    *(_WORD *)(v0 + 176) = v18;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v19 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v19);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
    return swift_task_switch(sub_100067510, v20, v21);
  }
}

uint64_t sub_100067510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t **)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 168));
  sub_100033830(v5, v4, 5, 37, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10001A894, 0, 0);
}

uint64_t Actions.ShareLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x794C206572616853, 0xAFA680E273636972);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.ShareLyrics.Context.menuItemImage.getter())()
{
  return sub_10003D7AC;
}

id sub_100067770()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  return v1;
}

uint64_t ShareableMusicItem.actionTitle.getter(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_1000677F0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001003ADDF0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t ShareableMusicItem.failureMessage.getter(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0xD00000000000001ALL, 0x80000001003ADDF0);
}

uint64_t ShareableMusicItem.shareURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_100067994, 0, 0);
}

uint64_t sub_100067994()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 16))(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000679CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = sub_100005574(&qword_10048D510);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067A28, 0, 0);
}

uint64_t sub_100067A28()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  NSURL *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = **(void ***)(v0 + 16);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v7 = 0;
  if (v5 != 1)
  {
    v8 = *(_QWORD *)(v0 + 24);
    URL._bridgeToObjectiveC()(v6);
    v7 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  v10 = *(_QWORD *)(v0 + 24);
  objc_msgSend(v2, "setOriginalURL:", v7);

  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067AF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067B50, 0, 0);
}

uint64_t sub_100067B50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Curator.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067C10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067C6C, 0, 0);
}

uint64_t sub_100067C6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  EditorialItem.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067D2C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067D88, 0, 0);
}

uint64_t sub_100067D88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  Genre.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067E48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067EA4, 0, 0);
}

uint64_t sub_100067EA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RadioShow.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100067F64(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100067FC0, 0, 0);
}

uint64_t sub_100067FC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  RecordLabel.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100068080(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000680DC, 0, 0);
}

uint64_t sub_1000680DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = **(void ***)(v0 + 16);
  SocialProfile.url.getter();
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    v7 = *(_QWORD *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = *(_QWORD *)(v0 + 32);
  objc_msgSend(v2, "setOriginalURL:", v6);

  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ShareableMusicItem.augmentMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000681FC, 0, 0);
}

uint64_t sub_1000681FC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 56) = **(_QWORD **)(v0 + 16);
  v2 = *(int **)(v1 + 24);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_10006826C;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_10006826C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_1000682C0, 0, 0);
}

uint64_t sub_1000682C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 48);
  }
  objc_msgSend(*(id *)(v0 + 56), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Album.actionTitle.getter()
{
  return sub_10005A164(0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t Album.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001BLL, 0x80000001003ADE10);
}

uint64_t Album.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EC68);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048D9F8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F1F0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F1F8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000684A8, 0, 0);
}

uint64_t sub_1000684A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  Album.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = Album.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388918);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Album(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048DA78, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Album, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_100068680;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100068680()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100068864;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1000686EC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000686EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000556D4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048D9F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100068864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Album.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for MusicOffer.Kind(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicOffer(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D510);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048EC68);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D9F8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v10);
  v2[17] = swift_task_alloc(v10);
  v2[18] = swift_task_alloc(v10);
  v11 = sub_100005574(&qword_10048F1F0);
  v2[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[20] = v12;
  v2[21] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10048F1F8);
  v2[22] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[23] = v14;
  v2[24] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100068CA8, 0, 0);
}

uint64_t sub_100068CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = Album.catalogID.getter(a1);
  *(_QWORD *)(v1 + 200) = v2;
  *(_QWORD *)(v1 + 208) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 216) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaAlbumMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 224) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 176);
        KeyPath = swift_getKeyPath(&unk_100388918);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Album(0);
        *(_QWORD *)(v1 + 232) = v11;
        v12 = sub_100006924(&qword_10048DA78, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Album, v12);
        v13 = sub_100005574((uint64_t *)&unk_100491910);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_100384730;
        sub_100005574(&qword_10048DA70);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 240) = v16;
        *v16 = v1;
        v16[1] = sub_100068EEC;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
      }
      swift_bridgeObjectRelease(v5);

    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
  v18 = *(_QWORD *)(v1 + 168);
  v20 = *(_QWORD *)(v1 + 136);
  v19 = *(_QWORD *)(v1 + 144);
  v22 = *(_QWORD *)(v1 + 120);
  v21 = *(_QWORD *)(v1 + 128);
  v24 = *(_QWORD *)(v1 + 88);
  v23 = *(_QWORD *)(v1 + 96);
  v25 = *(_QWORD *)(v1 + 64);
  swift_task_dealloc(*(_QWORD *)(v1 + 192));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100068EEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100069380;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 208));
    v4 = sub_100068F58;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100068F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSURL *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Class v60;
  uint64_t (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_1000556D4(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_100014A7C(v2, v3, &qword_10048D9F8);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v1) == 1)
  {
    v11 = *(_QWORD *)(v0 + 96);
    sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D9F8);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 96);
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      v20 = *(_QWORD *)(v0 + 96);
      URL._bridgeToObjectiveC()(v19);
      v13 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  v22 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 128);
  objc_msgSend(v8, "setOriginalURL:", v13);

  sub_100014A7C(v23, v24, &qword_10048D9F8);
  if (v10(v24, 1, v22) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D9F8);
    isa = 0;
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 232);
    v27 = *(_QWORD *)(v0 + 128);
    isa = (Class)Album.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (isa)
    {
      v28 = *((_QWORD *)isa + 2);
      if (v28)
      {
        v29 = *(_QWORD *)(v0 + 80);
        v63 = *(_QWORD *)(v0 + 56);
        sub_10007736C(0, v28, 0);
        v30 = (char *)isa
            + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
        v62 = *(_QWORD *)(v29 + 72);
        v64 = v29;
        v60 = isa;
        v61 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 16);
        do
        {
          v31 = *(_QWORD *)(v0 + 88);
          v33 = *(_QWORD *)(v0 + 64);
          v32 = *(_QWORD *)(v0 + 72);
          v34 = *(_QWORD *)(v0 + 48);
          v35 = v61(v31, v30, v32);
          v36 = MusicOffer.kind.getter(v35);
          v37 = MusicOffer.Kind.rawValue.getter(v36);
          v39 = v38;
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v33, v34);
          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v31, v32);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_10007736C(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v41 = _swiftEmptyArrayStorage[2];
          v40 = _swiftEmptyArrayStorage[3];
          if (v41 >= v40 >> 1)
            sub_10007736C((char *)(v40 > 1), v41 + 1, 1);
          _swiftEmptyArrayStorage[2] = v41 + 1;
          v42 = &_swiftEmptyArrayStorage[2 * v41];
          v42[4] = v37;
          v42[5] = v39;
          v30 += v62;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease(v60);
      }
      else
      {
        swift_bridgeObjectRelease(isa);
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
  }
  v43 = *(void **)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 184);
  v44 = *(_QWORD *)(v0 + 192);
  v47 = *(_QWORD *)(v0 + 168);
  v46 = *(_QWORD *)(v0 + 176);
  v48 = *(_QWORD *)(v0 + 152);
  v49 = *(_QWORD *)(v0 + 160);
  v50 = *(_QWORD *)(v0 + 144);
  objc_msgSend(*(id *)(v0 + 224), "setOffers:", isa);

  sub_100008758(v50, &qword_10048D9F8);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
  v51 = *(_QWORD *)(v0 + 168);
  v53 = *(_QWORD *)(v0 + 136);
  v52 = *(_QWORD *)(v0 + 144);
  v55 = *(_QWORD *)(v0 + 120);
  v54 = *(_QWORD *)(v0 + 128);
  v57 = *(_QWORD *)(v0 + 88);
  v56 = *(_QWORD *)(v0 + 96);
  v58 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100069380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 248);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 248);
  v10 = *(_QWORD *)(v2 + 208);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 200);
    v32 = *(void **)(v2 + 216);
    v33 = *(_QWORD *)(v2 + 184);
    v34 = *(_QWORD *)(v2 + 176);
    v35 = *(_QWORD *)(v2 + 192);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v36 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v36);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 184);
    v20 = *(_QWORD *)(v2 + 192);
    v22 = *(_QWORD *)(v2 + 176);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  v23 = *(_QWORD *)(v2 + 168);
  v25 = *(_QWORD *)(v2 + 136);
  v24 = *(_QWORD *)(v2 + 144);
  v27 = *(_QWORD *)(v2 + 120);
  v26 = *(_QWORD *)(v2 + 128);
  v29 = *(_QWORD *)(v2 + 88);
  v28 = *(_QWORD *)(v2 + 96);
  v30 = *(_QWORD *)(v2 + 64);
  swift_task_dealloc(*(_QWORD *)(v2 + 192));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100069674(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F1EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Album.shareURL.getter(a1);
}

uint64_t sub_1000696C4(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6C41206572616853, 0xAE00A680E26D7562);
}

uint64_t sub_1000696E8()
{
  return Album.failureMessage.getter();
}

uint64_t sub_1000696FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F204);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Album.augmentMetadata(_:)(a1);
}

uint64_t Artist.actionTitle.getter()
{
  return sub_10005A164(0x7241206572616853, 0xAFA680E274736974);
}

uint64_t Artist.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001CLL, 0x80000001003ADE30);
}

uint64_t Artist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EF20);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F210);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F218);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F220);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100069890, 0, 0);
}

uint64_t sub_100069890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  Artist.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = Artist.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388940);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Artist(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F228, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Artist, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_100069A68;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100069A68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100069C4C;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_100069AD4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100069AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000556F0(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F210);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Artist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100069C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for artist catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100069F24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F20C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Artist.shareURL.getter(a1);
}

uint64_t sub_100069F74(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x7241206572616853, 0xAFA680E274736974);
}

uint64_t sub_100069F98()
{
  return Artist.failureMessage.getter();
}

uint64_t sub_100069FAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006A008, 0, 0);
}

uint64_t sub_10006A008()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F20C);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return Artist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_10006A060()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_1000789CC, 0, 0);
}

uint64_t Composer.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t Composer.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000011, 0x80000001003ADE50);
}

uint64_t Composer.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001ELL, 0x80000001003ADE70);
}

uint64_t sub_10006A12C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10006A144, 0, 0);
}

uint64_t sub_10006A144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006A194()
{
  return Composer.actionTitle.getter();
}

uint64_t sub_10006A1A8()
{
  return Composer.failureMessage.getter();
}

uint64_t sub_10006A1BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F610 + dword_10048F610);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F614);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t Curator.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000010, 0x80000001003ADE90);
}

uint64_t Curator.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001DLL, 0x80000001003ADEB0);
}

uint64_t sub_10006A25C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006A274, 0, 0);
}

uint64_t sub_10006A274()
{
  uint64_t v0;

  Curator.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006A2A4()
{
  return Curator.actionTitle.getter();
}

uint64_t sub_10006A2B8()
{
  return Curator.failureMessage.getter();
}

uint64_t sub_10006A2CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F608 + dword_10048F608);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F60C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t EditorialItem.actionTitle.getter()
{
  return sub_10005A164(0xA680E26572616853, 0xA800000000000000);
}

uint64_t sub_10006A34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006A364, 0, 0);
}

uint64_t sub_10006A364()
{
  uint64_t v0;

  EditorialItem.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006A394()
{
  return sub_1000677F0();
}

uint64_t sub_10006A3A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F600 + dword_10048F600);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F604);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t Genre.actionTitle.getter()
{
  return sub_10005A164(0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t Genre.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001BLL, 0x80000001003ADED0);
}

uint64_t sub_10006A450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006A468, 0, 0);
}

uint64_t sub_10006A468()
{
  uint64_t v0;

  Genre.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006A498(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6547206572616853, 0xAE00A680E265726ELL);
}

uint64_t sub_10006A4BC()
{
  return Genre.failureMessage.getter();
}

uint64_t sub_10006A4D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F5F8 + dword_10048F5F8);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F5FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t MusicMovie.actionTitle.getter()
{
  return sub_10005A164(0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t MusicMovie.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001BLL, 0x80000001003ADEF0);
}

uint64_t MusicMovie.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EF10);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F238);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F240);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F248);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006A678, 0, 0);
}

uint64_t sub_10006A678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  MusicMovie.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = MusicMovie.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388968);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for MusicMovie(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      v12 = sub_100006924(&qword_10048F258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_10006A878;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006A878()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006AA5C;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_10006A8E4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006A8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_10005581C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F238);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    MusicMovie.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006AA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for music movie catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006AD34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F234);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return MusicMovie.shareURL.getter(a1);
}

uint64_t sub_10006AD84(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6F4D206572616853, 0xAE00A680E2656976);
}

uint64_t sub_10006ADA8()
{
  return MusicMovie.failureMessage.getter();
}

uint64_t sub_10006ADBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006AE18, 0, 0);
}

uint64_t sub_10006AE18()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F234);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t MusicVideo.actionTitle.getter()
{
  return sub_10005A164(0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t MusicVideo.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001BLL, 0x80000001003ADF10);
}

uint64_t MusicVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EF00);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048DA40);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F268);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F270);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006AFB8, 0, 0);
}

uint64_t sub_10006AFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  MusicVideo.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = MusicVideo.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388990);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for MusicVideo(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F278, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for MusicVideo, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_10006B190;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006B190()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006B374;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_10006B1FC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006B1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_100055838(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048DA40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    MusicVideo.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006B374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for music video catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006B648@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_10006B658(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F264);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return MusicVideo.shareURL.getter(a1);
}

uint64_t sub_10006B6A8(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6956206572616853, 0xAE00A680E26F6564);
}

uint64_t sub_10006B6CC()
{
  return MusicVideo.failureMessage.getter();
}

uint64_t sub_10006B6E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006B73C, 0, 0);
}

uint64_t sub_10006B73C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F264);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Playlist.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000011, 0x80000001003ADF30);
}

uint64_t Playlist.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001ELL, 0x80000001003ADF50);
}

uint64_t Playlist.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EEF0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_100491260) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[9] = swift_task_alloc(v5);
  v2[10] = swift_task_alloc(v5);
  v6 = sub_100005574(&qword_10048F288);
  v2[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[12] = v7;
  v2[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F290);
  v2[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[15] = v9;
  v2[16] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006B8E4, 0, 0);
}

uint64_t sub_10006B8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  char v15;
  BOOL v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 136);
  Playlist.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 144) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 152) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 136), &qword_10048D510);
    v5 = Playlist.catalogID.getter(v4);
    *(_QWORD *)(v0 + 160) = v5;
    *(_QWORD *)(v0 + 168) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_1003889B8);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Playlist(0);
      *(_QWORD *)(v0 + 176) = v10;
      v11 = sub_100006924(&qword_10048F2A0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Playlist, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 184) = v12;
      *v12 = v0;
      v12[1] = sub_10006BB40;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    }
    v15 = Playlist.isPublic.getter(v5);
    v16 = v15 != 2 && (v15 & 1) == 0;
    if (v16 && (Playlist.isShareable.getter() & 1) == 0 && (Playlist.canMakeShareable.getter() & 1) != 0)
    {
      v17 = (_QWORD *)swift_task_alloc(dword_10048F29C);
      *(_QWORD *)(v0 + 200) = v17;
      *v17 = v0;
      v17[1] = sub_10006BD30;
      return Playlist.publish()(*(_QWORD *)(v0 + 72));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 136), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v18 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v22 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006BB40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006BE74;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 168));
    v4 = sub_10006BBAC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006BBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 88));
  sub_100055854(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_100491260);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 112);
    v19 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 96);
    v21 = *(_QWORD *)(v0 + 80);
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 72);
  v24 = *(_QWORD *)(v0 + 80);
  v26 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006BD30()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  return swift_task_switch(sub_10006BD84, 0, 0);
}

uint64_t sub_10006BD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 32);
    sub_100008758(v1, &qword_100491260);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  }
  else
  {
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  v7 = *(_QWORD *)(v0 + 128);
  v8 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006BE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 192);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 192);
  v10 = *(_QWORD *)(v2 + 168);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 160);
    v29 = *(_QWORD *)(v2 + 120);
    v30 = *(_QWORD *)(v2 + 112);
    v31 = *(_QWORD *)(v2 + 128);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v32 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v32);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for playlist catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 120);
    v20 = *(_QWORD *)(v2 + 128);
    v22 = *(_QWORD *)(v2 + 112);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 152) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 144));
  v23 = *(_QWORD *)(v2 + 128);
  v24 = *(_QWORD *)(v2 + 104);
  v26 = *(_QWORD *)(v2 + 72);
  v25 = *(_QWORD *)(v2 + 80);
  v27 = *(_QWORD *)(v2 + 64);
  swift_task_dealloc(*(_QWORD *)(v2 + 136));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t Playlist.publish()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for Playlist(0);
  v2[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[6] = v4;
  v2[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicLibraryPlaylistResponse(0);
  v2[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[9] = v6;
  v2[10] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy(0);
  v2[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10048F2A8);
  v2[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibraryPlaylistRequest(0);
  v2[15] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[16] = v11;
  v2[17] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006C250, 0, 0);
}

uint64_t sub_10006C250()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[11];
  v4 = v0[12];
  v5 = v0[4];
  v6 = type metadata accessor for Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)(v5, 0, 0, 0, 0, 0, 1, 2, v1);
  sub_100008758(v1, &qword_10048F2A8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, enum case for MusicLibraryPlaylistRequest.CompletionPolicy.afterCloudLibraryChanges(_:), v3);
  MusicLibraryPlaylistRequest.completionPolicy.setter(v2);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryPlaylistRequest.response()[1]);
  v0[18] = v7;
  *v7 = v0;
  v7[1] = sub_10006C350;
  return MusicLibraryPlaylistRequest.response()(v0[10]);
}

uint64_t sub_10006C350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10006C488;
  else
    v3 = sub_10006C3B4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10006C3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 24);
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006C488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 152);
  v5 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v2 + 56);
  v7 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v8 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v8, (uint64_t)qword_10048F170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  swift_errorRetain(v3);
  v9 = swift_errorRetain(v3);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v2 + 152);
  v15 = *(_QWORD *)(v2 + 128);
  v14 = *(_QWORD *)(v2 + 136);
  v16 = *(_QWORD *)(v2 + 120);
  v17 = *(_QWORD *)(v2 + 48);
  v18 = *(_QWORD *)(v2 + 56);
  v19 = *(_QWORD *)(v2 + 40);
  if (v12)
  {
    v37 = *(_QWORD *)(v2 + 120);
    v20 = swift_slowAlloc(22, -1);
    v36 = v15;
    v21 = swift_slowAlloc(64, -1);
    v38 = v21;
    *(_DWORD *)v20 = 136446466;
    v22 = sub_100006924(&qword_10048F2B0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v23 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v19, v22);
    v35 = v14;
    v25 = v24;
    *(_QWORD *)(v20 + 4) = sub_100019400(v23, v24, &v38);
    swift_bridgeObjectRelease(v25);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    *(_WORD *)(v20 + 12) = 2082;
    *(_QWORD *)(v2 + 16) = v13;
    swift_errorRetain(v13);
    v26 = sub_100005574((uint64_t *)&unk_1004911F0);
    v27 = (char *)String.init<A>(describing:)(v2 + 16, v26);
    v29 = v28;
    *(_QWORD *)(v20 + 14) = sub_100019400(v27, v28, &v38);
    swift_bridgeObjectRelease(v29);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to make playlist=%{public}s public with error=%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    swift_errorRelease(v13);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  }
  else
  {

    swift_errorRelease(v13);
    swift_errorRelease(v13);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    swift_errorRelease(v13);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 48) + 56))(*(_QWORD *)(v2 + 24), 1, 1, *(_QWORD *)(v2 + 40));
  v30 = *(_QWORD *)(v2 + 104);
  v31 = *(_QWORD *)(v2 + 112);
  v32 = *(_QWORD *)(v2 + 80);
  v33 = *(_QWORD *)(v2 + 56);
  swift_task_dealloc(*(_QWORD *)(v2 + 136));
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006C768(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F284);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Playlist.shareURL.getter(a1);
}

uint64_t sub_10006C7B8()
{
  return Playlist.actionTitle.getter();
}

uint64_t sub_10006C7CC()
{
  return Playlist.failureMessage.getter();
}

uint64_t sub_10006C7E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006C83C, 0, 0);
}

uint64_t sub_10006C83C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F284);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return Playlist.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t RadioShow.actionTitle.getter()
{
  return sub_10005A164(0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t RadioShow.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001ALL, 0x80000001003ADF70);
}

uint64_t sub_10006C8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006C8F8, 0, 0);
}

uint64_t sub_10006C8F8()
{
  uint64_t v0;

  RadioShow.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006C928(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6853206572616853, 0xAD0000A680E2776FLL);
}

uint64_t sub_10006C94C()
{
  return RadioShow.failureMessage.getter();
}

uint64_t sub_10006C960(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F5F0 + dword_10048F5F0);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F5F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t RecordLabel.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000015, 0x80000001003ADF90);
}

uint64_t RecordLabel.failureMessage.getter()
{
  return sub_10005A164(0xD000000000000022, 0x80000001003ADFB0);
}

uint64_t sub_10006CA00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006CA18, 0, 0);
}

uint64_t sub_10006CA18()
{
  uint64_t v0;

  RecordLabel.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006CA48()
{
  return RecordLabel.actionTitle.getter();
}

uint64_t sub_10006CA5C()
{
  return RecordLabel.failureMessage.getter();
}

uint64_t sub_10006CA70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F5E8 + dword_10048F5E8);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F5EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t SocialProfile.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000010, 0x80000001003ADFE0);
}

uint64_t SocialProfile.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001DLL, 0x80000001003AE000);
}

uint64_t sub_10006CB10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch(sub_10006CB28, 0, 0);
}

uint64_t sub_10006CB28()
{
  uint64_t v0;

  SocialProfile.url.getter();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006CB58()
{
  return SocialProfile.actionTitle.getter();
}

uint64_t sub_10006CB6C()
{
  return SocialProfile.failureMessage.getter();
}

uint64_t sub_10006CB80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_10048F5E0 + dword_10048F5E0);
  v3 = (_QWORD *)swift_task_alloc(unk_10048F5E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

uint64_t Song.actionTitle.getter()
{
  return sub_10005A164(0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t Song.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001ALL, 0x80000001003AE020);
}

uint64_t Song.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EEE0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048DA48);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F2C0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F2C8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006CD28, 0, 0);
}

uint64_t sub_10006CD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  Song.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = Song.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_1003889E0);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for Song(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F2D0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, &protocol witness table for Song, v11);
      v12 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v12;
      *v12 = v0;
      v12[1] = sub_10006CF00;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v14, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
  }
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 64);
  v17 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006CF00()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006D0E4;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_10006CF6C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006CF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_100055870(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048DA48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for song catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006D3B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_10006D3C4@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = a1[3];
  v6 = a1[4];
  sub_10000ABC8(a1, v5);
  result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t Song.augmentMetadata(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048F2E0);
  v2[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MusicOffer.Kind(0);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[8] = v5;
  v2[9] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicOffer(0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D510) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  v9 = sub_100005574(&qword_10048EEE0);
  v2[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[16] = v10;
  v2[17] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048DA48) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[18] = swift_task_alloc(v11);
  v2[19] = swift_task_alloc(v11);
  v2[20] = swift_task_alloc(v11);
  v2[21] = swift_task_alloc(v11);
  v12 = sub_100005574(&qword_10048F2C0);
  v2[22] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v2[23] = v13;
  v2[24] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F2C8);
  v2[25] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v2[26] = v15;
  v2[27] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006D5C4, 0, 0);
}

uint64_t sub_10006D5C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = Song.catalogID.getter(a1);
  *(_QWORD *)(v1 + 224) = v2;
  *(_QWORD *)(v1 + 232) = v3;
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = objc_msgSend(**(id **)(v1 + 32), "specialization");
    *(_QWORD *)(v1 + 240) = v6;
    if (v6)
    {
      v7 = v6;
      objc_opt_self(LPiTunesMediaSongMetadata);
      v8 = swift_dynamicCastObjCClass(v7);
      *(_QWORD *)(v1 + 248) = v8;
      if (v8)
      {
        v9 = *(_QWORD *)(v1 + 200);
        KeyPath = swift_getKeyPath(&unk_1003889E0);
        *(_QWORD *)(v1 + 16) = v4;
        *(_QWORD *)(v1 + 24) = v5;
        v11 = type metadata accessor for Song(0);
        *(_QWORD *)(v1 + 256) = v11;
        v12 = sub_100006924(&qword_10048F2D0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v1 + 16, v11, &protocol witness table for Song, v12);
        v13 = sub_100005574((uint64_t *)&unk_100491910);
        v14 = swift_allocObject(v13, 40, 7);
        *(_OWORD *)(v14 + 16) = xmmword_100384730;
        sub_100005574(&qword_10048F2E8);
        v15 = static PartialMusicProperty<A>.offers.getter();
        *(_QWORD *)(v14 + 32) = v15;
        specialized Array._endMutation()(v15);
        MusicCatalogResourceRequest.properties.setter(v14, v9);
        v16 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
        *(_QWORD *)(v1 + 264) = v16;
        *v16 = v1;
        v16[1] = sub_10006D830;
        return MusicCatalogResourceRequest.response()(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
      }
      swift_bridgeObjectRelease(v5);

    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
  v18 = *(_QWORD *)(v1 + 192);
  v20 = *(_QWORD *)(v1 + 160);
  v19 = *(_QWORD *)(v1 + 168);
  v22 = *(_QWORD *)(v1 + 144);
  v21 = *(_QWORD *)(v1 + 152);
  v23 = *(_QWORD *)(v1 + 136);
  v25 = *(_QWORD *)(v1 + 104);
  v24 = *(_QWORD *)(v1 + 112);
  v26 = *(_QWORD *)(v1 + 96);
  v27 = *(_QWORD *)(v1 + 72);
  v28 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 216));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10006D830()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_QWORD *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006DEB0;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 232));
    v4 = sub_10006D89C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006D89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSURL *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSURL *v81;
  uint64_t v82;
  void *v83;
  Class v84;
  uint64_t v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v87)(uint64_t, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 176));
  sub_100055870(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v8 = *v7;
  sub_100014A7C(v2, v3, &qword_10048DA48);
  v9 = *(_QWORD *)(v1 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v1) == 1)
  {
    v11 = *(_QWORD *)(v0 + 112);
    sub_100008758(*(_QWORD *)(v0 + 160), &qword_10048DA48);
    v12 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v13 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 256);
    v15 = *(_QWORD *)(v0 + 160);
    v16 = *(_QWORD *)(v0 + 112);
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    v17 = type metadata accessor for URL(0);
    v18 = *(_QWORD *)(v17 - 8);
    v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      v20 = *(_QWORD *)(v0 + 112);
      URL._bridgeToObjectiveC()(v19);
      v13 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  v22 = *(_QWORD *)(v0 + 256);
  v23 = *(_QWORD *)(v0 + 168);
  v24 = *(_QWORD *)(v0 + 152);
  objc_msgSend(v8, "setOriginalURL:", v13);

  sub_100014A7C(v23, v24, &qword_10048DA48);
  v86 = v10;
  if (v10(v24, 1, v22) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 152), &qword_10048DA48);
    isa = 0;
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(_QWORD *)(v0 + 152);
    isa = (Class)Song.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (isa)
    {
      v28 = *((_QWORD *)isa + 2);
      if (v28)
      {
        v85 = v9;
        v29 = *(_QWORD *)(v0 + 88);
        v89 = *(_QWORD *)(v0 + 64);
        sub_10007736C(0, v28, 0);
        v84 = isa;
        v30 = (char *)isa
            + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
        v91 = v29;
        v87 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 16);
        v88 = *(_QWORD *)(v29 + 72);
        do
        {
          v31 = *(_QWORD *)(v0 + 96);
          v33 = *(_QWORD *)(v0 + 72);
          v32 = *(_QWORD *)(v0 + 80);
          v34 = *(_QWORD *)(v0 + 56);
          v35 = v87(v31, v30, v32);
          v36 = MusicOffer.kind.getter(v35);
          v37 = MusicOffer.Kind.rawValue.getter(v36);
          v39 = v38;
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v33, v34);
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v31, v32);
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            sub_10007736C(0, _swiftEmptyArrayStorage[2] + 1, 1);
          v41 = _swiftEmptyArrayStorage[2];
          v40 = _swiftEmptyArrayStorage[3];
          if (v41 >= v40 >> 1)
            sub_10007736C((char *)(v40 > 1), v41 + 1, 1);
          _swiftEmptyArrayStorage[2] = v41 + 1;
          v42 = &_swiftEmptyArrayStorage[2 * v41];
          v42[4] = v37;
          v42[5] = v39;
          v30 += v88;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease(v84);
        v9 = v85;
      }
      else
      {
        swift_bridgeObjectRelease(isa);
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    }
  }
  v44 = (uint64_t *)(v0 + 144);
  v43 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 256);
  v46 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setOffers:", isa);

  v47 = &qword_10048DA48;
  sub_100014A7C(v46, v43, &qword_10048DA48);
  if (v86(v43, 1, v45) == 1)
    goto LABEL_25;
  v48 = *(_QWORD *)(v0 + 256);
  v49 = *(_QWORD *)(v0 + 144);
  v50 = Song.previewAssets.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v49, v48);
  if (!v50)
  {
LABEL_26:
    v56 = *(_QWORD *)(v0 + 104);
    v57 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 1, 1, v57);
    v58 = 0;
    goto LABEL_27;
  }
  v51 = *(_QWORD *)(v50 + 16);
  v52 = type metadata accessor for PreviewAsset(0);
  v53 = *(_QWORD *)(v52 - 8);
  if (v51)
  {
    (*(void (**)(_QWORD, unint64_t, uint64_t))(v53 + 16))(*(_QWORD *)(v0 + 48), v50 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v52);
    v54 = 0;
  }
  else
  {
    v54 = 1;
  }
  v44 = (uint64_t *)(v0 + 48);
  v55 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v55, v54, 1, v52);
  swift_bridgeObjectRelease(v50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v55, 1, v52) == 1)
  {
    v47 = (uint64_t *)&unk_10048F2E0;
LABEL_25:
    sub_100008758(*v44, v47);
    goto LABEL_26;
  }
  v77 = *(_QWORD *)(v0 + 104);
  v78 = *(_QWORD *)(v0 + 48);
  PreviewAsset.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v78, v52);
  v79 = type metadata accessor for URL(0);
  v80 = *(_QWORD *)(v79 - 8);
  v58 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v77, 1, v79) != 1)
  {
    v82 = *(_QWORD *)(v0 + 104);
    URL._bridgeToObjectiveC()(v81);
    v58 = v83;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v79);
  }
LABEL_27:
  v59 = *(void **)(v0 + 240);
  v61 = *(_QWORD *)(v0 + 208);
  v60 = *(_QWORD *)(v0 + 216);
  v63 = *(_QWORD *)(v0 + 192);
  v62 = *(_QWORD *)(v0 + 200);
  v64 = *(_QWORD *)(v0 + 176);
  v65 = *(_QWORD *)(v0 + 184);
  v66 = *(_QWORD *)(v0 + 168);
  objc_msgSend(*(id *)(v0 + 248), "setPreviewURL:", v58);

  sub_100008758(v66, &qword_10048DA48);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  v67 = *(_QWORD *)(v0 + 192);
  v69 = *(_QWORD *)(v0 + 160);
  v68 = *(_QWORD *)(v0 + 168);
  v71 = *(_QWORD *)(v0 + 144);
  v70 = *(_QWORD *)(v0 + 152);
  v72 = *(_QWORD *)(v0 + 136);
  v74 = *(_QWORD *)(v0 + 104);
  v73 = *(_QWORD *)(v0 + 112);
  v75 = *(_QWORD *)(v0 + 96);
  v90 = *(_QWORD *)(v0 + 72);
  v92 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006DEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 272);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 272);
  v10 = *(_QWORD *)(v2 + 232);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 224);
    v33 = *(void **)(v2 + 240);
    v34 = *(_QWORD *)(v2 + 208);
    v35 = *(_QWORD *)(v2 + 200);
    v37 = *(_QWORD *)(v2 + 216);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v39 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v39);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v35);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 208);
    v20 = *(_QWORD *)(v2 + 216);
    v22 = *(_QWORD *)(v2 + 200);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  v23 = *(_QWORD *)(v2 + 192);
  v25 = *(_QWORD *)(v2 + 160);
  v24 = *(_QWORD *)(v2 + 168);
  v27 = *(_QWORD *)(v2 + 144);
  v26 = *(_QWORD *)(v2 + 152);
  v28 = *(_QWORD *)(v2 + 136);
  v30 = *(_QWORD *)(v2 + 104);
  v29 = *(_QWORD *)(v2 + 112);
  v31 = *(_QWORD *)(v2 + 96);
  v36 = *(_QWORD *)(v2 + 72);
  v38 = *(_QWORD *)(v2 + 48);
  swift_task_dealloc(*(_QWORD *)(v2 + 216));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006E1CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F2BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Song.shareURL.getter(a1);
}

uint64_t sub_10006E21C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6F53206572616853, 0xAD0000A680E2676ELL);
}

uint64_t sub_10006E240()
{
  return Song.failureMessage.getter();
}

uint64_t sub_10006E254(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F2DC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Song.augmentMetadata(_:)(a1);
}

uint64_t Station.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000010, 0x80000001003AE040);
}

uint64_t Station.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001DLL, 0x80000001003AE060);
}

uint64_t Station.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EED0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F2F8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F300);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F308);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006E3E0, 0, 0);
}

uint64_t sub_10006E3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 128);
  Station.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = Station.id.getter(v4);
    v7 = v6;
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    KeyPath = swift_getKeyPath(&unk_100388A08);
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 24) = v7;
    v9 = type metadata accessor for Station(0);
    *(_QWORD *)(v0 + 168) = v9;
    v10 = sub_100006924(&qword_10048F310, (uint64_t (*)(uint64_t))&type metadata accessor for Station, (uint64_t)&protocol conformance descriptor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v9, &protocol witness table for Station, v10);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v0 + 176) = v11;
    *v11 = v0;
    v11[1] = sub_10006E59C;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v13, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10006E59C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006E780;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_10006E608;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_100055918(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F2F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    Station.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006E780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for station catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10006EA58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F2F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Station.shareURL.getter(a1);
}

uint64_t sub_10006EAA8()
{
  return Station.actionTitle.getter();
}

uint64_t sub_10006EABC()
{
  return Station.failureMessage.getter();
}

uint64_t sub_10006EAD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006EB2C, 0, 0);
}

uint64_t sub_10006EB2C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F2F4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return Station.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t Track.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;

  v0 = type metadata accessor for Song(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v39 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin(v13);
  v41 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v42, v15);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v18, v0);
    String.LocalizationValue.init(stringLiteral:)(0x6F53206572616853, 0xAD0000A680E2676ELL);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v20 = v6;
    v21 = v1;
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v22 = qword_1004A1DA0;
    v23 = (id)qword_1004A1DA0;
    v24 = v43;
    static Locale.current.getter(v23);
    v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v24, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v20);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v0);
  }
  else if (v19 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v27 = v39;
    v26 = v40;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v18, v40);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    v28 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v29 = qword_1004A1DA0;
    v30 = (id)qword_1004A1DA0;
    v31 = v43;
    static Locale.current.getter(v30);
    v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v29, v31, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v28);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v41, v26);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    v32 = v10;
    v33 = v10;
    v34 = v6;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v12, v6);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v35 = qword_1004A1DA0;
    v36 = (id)qword_1004A1DA0;
    v37 = v43;
    static Locale.current.getter(v36);
    v25 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, v35, v37, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v34);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v25;
}

uint64_t Track.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v1 = type metadata accessor for Song(0);
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v32 - v11;
  v13 = type metadata accessor for MusicVideo(0);
  v33 = *(_QWORD *)(v13 - 8);
  v34 = v13;
  __chkstk_darwin(v13);
  v37 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v0, v15);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v20 = v35;
    v21 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v3, v18, v36);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001003AE020);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v22 = qword_1004A1DA0;
    v23 = (id)qword_1004A1DA0;
    v24 = v38;
    static Locale.current.getter(v23);
    v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v24, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
  }
  else if (v19 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    v27 = v33;
    v26 = v34;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v37, v18, v34);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001003ADF10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v28 = qword_1004A1DA0;
    v29 = (id)qword_1004A1DA0;
    v30 = v38;
    static Locale.current.getter(v29);
    v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v28, v30, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v37, v26);
  }
  else
  {
    v25 = Track.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v25;
}

uint64_t Track.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for Song(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MusicVideo(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Track(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006F470, 0, 0);
}

uint64_t sub_10006F470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v5, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    v9 = (_QWORD *)swift_task_alloc(dword_10048F2BC);
    *(_QWORD *)(v0 + 112) = v9;
    *v9 = v0;
    v9[1] = sub_10006F6DC;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for Track.musicVideo(_:))
  {
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 96))(v11, *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v11, v13);
    v15 = (_QWORD *)swift_task_alloc(dword_10048F264);
    *(_QWORD *)(v0 + 104) = v15;
    *v15 = v0;
    v15[1] = sub_10006F628;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 16);
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v18, *(_QWORD *)(v0 + 80));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10006F628()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_task_switch(sub_10006F67C, 0, 0);
}

uint64_t sub_10006F67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(v1, *(_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F6DC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_task_switch(sub_10006F730, 0, 0);
}

uint64_t sub_10006F730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(v1, *(_QWORD *)(v0 + 32));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006F798(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F31C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return Track.shareURL.getter(a1);
}

uint64_t sub_10006F7F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006F84C, 0, 0);
}

uint64_t sub_10006F84C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F31C);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return Track.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVEpisode.actionTitle.getter()
{
  return sub_10005A164(0x1000000000000010, 0x80000001003AE080);
}

uint64_t TVEpisode.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001DLL, 0x80000001003AE0A0);
}

uint64_t TVEpisode.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EEC0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F328);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F330);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F338);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10006F9E4, 0, 0);
}

uint64_t sub_10006F9E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVEpisode.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = TVEpisode.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388A30);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVEpisode(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F340, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      v12 = sub_100006924(&qword_10048F348, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_10006FBE4;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006FBE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10006FDC8;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_10006FC50;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10006FC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_10005588C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F328);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVEpisode.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10006FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for TVEpisode catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000700A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F324);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return TVEpisode.shareURL.getter(a1);
}

uint64_t sub_1000700F0()
{
  return TVEpisode.actionTitle.getter();
}

uint64_t sub_100070104()
{
  return TVEpisode.failureMessage.getter();
}

uint64_t sub_100070118(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100070174, 0, 0);
}

uint64_t sub_100070174()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F324);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVSeason.actionTitle.getter()
{
  return sub_10005A164(0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t TVSeason.failureMessage.getter()
{
  return sub_10005A164(0xD00000000000001CLL, 0x80000001003AE0C0);
}

uint64_t TVSeason.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EEB0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F358);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F360);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F368);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100070314, 0, 0);
}

uint64_t sub_100070314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVSeason.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = TVSeason.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388A58);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVSeason(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F370, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      v12 = sub_100006924(&qword_10048F378, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_100070514;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070514()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1000706F8;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_100070580;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100070580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000558A8(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F358);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVSeason.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000706F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for TVSeason catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000709D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F354);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return TVSeason.shareURL.getter(a1);
}

uint64_t sub_100070A20(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6553206572616853, 0xAFA680E26E6F7361);
}

uint64_t sub_100070A44()
{
  return TVSeason.failureMessage.getter();
}

uint64_t sub_100070A58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100070AB4, 0, 0);
}

uint64_t sub_100070AB4()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F354);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t TVShow.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EEA0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F388);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F390);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F398);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100070C14, 0, 0);
}

uint64_t sub_100070C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  TVShow.url.getter();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = TVShow.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388A80);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for TVShow(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F3A0, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      v12 = sub_100006924(&qword_10048F3A8, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_100070E14;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070E14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100070FF8;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_100070E80;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100070E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000558C4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F388);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    TVShow.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100070FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for TVShow catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1000712D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F384);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return TVShow.shareURL.getter(a1);
}

uint64_t sub_100071320(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007137C, 0, 0);
}

uint64_t sub_10007137C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F384);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return TVShow.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedAudio.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EE90);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F3B8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F3C0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F3C8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000714DC, 0, 0);
}

uint64_t sub_1000714DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = UploadedAudio.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388AA8);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for UploadedAudio(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F3D0, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      v12 = sub_100006924(&qword_10048F3D8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_1000716DC;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000716DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1000718C0;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_100071748;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100071748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000558E0(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F3B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000718C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for uploaded audio catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100071B98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F3B4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return UploadedAudio.shareURL.getter(a1);
}

uint64_t sub_100071BE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100071C44, 0, 0);
}

uint64_t sub_100071C44()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F3B4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t UploadedVideo.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[4] = a1;
  v2[5] = v1;
  v3 = sub_100005574(&qword_10048EE80);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F3E8);
  v2[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F3F0);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[11] = v7;
  v2[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048F3F8);
  v2[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[14] = v9;
  v2[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10048D510);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100071DA4, 0, 0);
}

uint64_t sub_100071DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 128);
  _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
  v2 = type metadata accessor for URL(0);
  *(_QWORD *)(v0 + 136) = v2;
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D510);
    v5 = UploadedVideo.catalogID.getter(v4);
    *(_QWORD *)(v0 + 152) = v5;
    *(_QWORD *)(v0 + 160) = v6;
    if (v6)
    {
      v7 = v5;
      v8 = v6;
      KeyPath = swift_getKeyPath(&unk_100388AD0);
      *(_QWORD *)(v0 + 16) = v7;
      *(_QWORD *)(v0 + 24) = v8;
      v10 = type metadata accessor for UploadedVideo(0);
      *(_QWORD *)(v0 + 168) = v10;
      v11 = sub_100006924(&qword_10048F400, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      v12 = sub_100006924(&qword_10048F408, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v0 + 16, v10, v11, v12);
      v13 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
      *(_QWORD *)(v0 + 176) = v13;
      *v13 = v0;
      v13[1] = sub_100071FA4;
      return MusicCatalogResourceRequest.response()(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 32), 1, 1, v2);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v15, *(_QWORD *)(v0 + 128), v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  }
  v16 = *(_QWORD *)(v0 + 120);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 64);
  v18 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100071FA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100072188;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_100072010;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100072010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 80));
  sub_1000558FC(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v6 = *(_QWORD *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 120);
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_100008758(v12, &qword_10048F3E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 72);
    _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100072188(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C588 != -1)
    swift_once(&qword_10048C588, sub_10007720C);
  v3 = *(_QWORD *)(v2 + 184);
  v4 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v4, (uint64_t)qword_10048F170);
  swift_errorRetain(v3);
  swift_bridgeObjectRetain();
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v2 + 184);
  v10 = *(_QWORD *)(v2 + 160);
  if (v8)
  {
    v11 = *(_QWORD *)(v2 + 152);
    v28 = *(_QWORD *)(v2 + 112);
    v29 = *(_QWORD *)(v2 + 104);
    v30 = *(_QWORD *)(v2 + 120);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v31 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    v15 = (char *)MusicItemID.description.getter(v11, v10);
    v17 = v16;
    swift_bridgeObjectRelease(v10);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v17, &v31);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain(v9);
    v18 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 14) = v18;
    *v13 = v18;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to get share URL for uploaded video catalogID: %{public}s: %{public}@", (uint8_t *)v12, 0x16u);
    v19 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v19);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    v21 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v22 = *(_QWORD *)(v2 + 104);

    swift_errorRelease(v9);
    swift_errorRelease(v9);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v9);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 144) + 56))(*(_QWORD *)(v2 + 32), 1, 1, *(_QWORD *)(v2 + 136));
  v23 = *(_QWORD *)(v2 + 120);
  v24 = *(_QWORD *)(v2 + 96);
  v26 = *(_QWORD *)(v2 + 64);
  v25 = *(_QWORD *)(v2 + 72);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100072460(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F3E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return UploadedVideo.shareURL.getter(a1);
}

uint64_t sub_1000724B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007250C, 0, 0);
}

uint64_t sub_10007250C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F3E4);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_10006A060;
  return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t GenericMusicItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v114 = a1;
  v68 = type metadata accessor for UploadedVideo(0);
  v67 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v66 = (char *)&v66 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for UploadedAudio(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for TVShow(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for TVSeason(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for TVEpisode(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for Station(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for Song(0);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v84 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for SocialProfile(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for RecordLabel(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v90 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RadioShow(0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  __chkstk_darwin(v10);
  v93 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Playlist(0);
  v97 = *(_QWORD *)(v12 - 8);
  v98 = v12;
  __chkstk_darwin(v12);
  v96 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicVideo(0);
  v100 = *(_QWORD *)(v14 - 8);
  v101 = v14;
  __chkstk_darwin(v14);
  v99 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MusicMovie(0);
  v103 = *(_QWORD *)(v16 - 8);
  v104 = v16;
  __chkstk_darwin(v16);
  v102 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Genre(0);
  v106 = *(_QWORD *)(v18 - 8);
  v107 = v18;
  __chkstk_darwin(v18);
  v105 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for EditorialItem(0);
  v109 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  __chkstk_darwin(v20);
  v108 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Curator(0);
  v111 = *(_QWORD *)(v22 - 8);
  v112 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Artist(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for Album(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for GenericMusicItem(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v113, v33);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v33);
  if (v37 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v30 + 32))(v32, v36, v29);
    Album.url.getter(v38);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  v40 = v114;
  if (v37 != enum case for GenericMusicItem.artist(_:))
  {
    if (v37 == enum case for GenericMusicItem.composer(_:) || v37 == enum case for GenericMusicItem.creditArtist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
      goto LABEL_9;
    }
    if (v37 == enum case for GenericMusicItem.curator(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v44 = v111;
      v43 = v112;
      v45 = (*(uint64_t (**)(char *, char *, uint64_t))(v111 + 32))(v24, v36, v112);
      Curator.url.getter(v45);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v24, v43);
    }
    if (v37 == enum case for GenericMusicItem.editorialItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v47 = v108;
      v46 = v109;
      v48 = v110;
      v49 = (*(uint64_t (**)(char *, char *, uint64_t))(v109 + 32))(v108, v36, v110);
      EditorialItem.url.getter(v49);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    }
    if (v37 == enum case for GenericMusicItem.genre(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v105;
      v51 = v106;
      v52 = v107;
      v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v105, v36, v107);
      Genre.url.getter(v53);
    }
    else if (v37 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v102;
      v51 = v103;
      v52 = v104;
      v54 = (*(uint64_t (**)(char *, char *, uint64_t))(v103 + 32))(v102, v36, v104);
      MusicMovie.url.getter(v54);
    }
    else if (v37 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v99;
      v51 = v100;
      v52 = v101;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v100 + 32))(v99, v36, v101);
      MusicVideo.url.getter(v55);
    }
    else if (v37 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v50 = v96;
      v51 = v97;
      v52 = v98;
      v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v97 + 32))(v96, v36, v98);
      Playlist.url.getter(v56);
    }
    else if (v37 == enum case for GenericMusicItem.radioShow(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v94;
      v50 = v93;
      v52 = v95;
      v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v94 + 32))(v93, v36, v95);
      RadioShow.url.getter(v57);
    }
    else if (v37 == enum case for GenericMusicItem.recordLabel(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v91;
      v50 = v90;
      v52 = v92;
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v91 + 32))(v90, v36, v92);
      RecordLabel.url.getter(v58);
    }
    else if (v37 == enum case for GenericMusicItem.socialProfile(_:))
    {
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v88;
      v50 = v87;
      v52 = v89;
      v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v36, v89);
      SocialProfile.url.getter(v59);
    }
    else
    {
      if (v37 != enum case for GenericMusicItem.song(_:))
      {
        if (v37 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v82;
          v47 = v81;
          v48 = v83;
          v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v81, v36, v83);
          Station.url.getter(v61);
        }
        else if (v37 == enum case for GenericMusicItem.tvEpisode(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v79;
          v47 = v78;
          v48 = v80;
          v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v79 + 32))(v78, v36, v80);
          TVEpisode.url.getter(v62);
        }
        else if (v37 == enum case for GenericMusicItem.tvSeason(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v76;
          v47 = v75;
          v48 = v77;
          v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v76 + 32))(v75, v36, v77);
          TVSeason.url.getter(v63);
        }
        else if (v37 == enum case for GenericMusicItem.tvShow(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v73;
          v47 = v72;
          v48 = v74;
          v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v73 + 32))(v72, v36, v74);
          TVShow.url.getter(v64);
        }
        else if (v37 == enum case for GenericMusicItem.uploadedAudio(_:))
        {
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v70;
          v47 = v69;
          v48 = v71;
          (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v36, v71);
          _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0();
        }
        else
        {
          if (v37 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v37 != enum case for GenericMusicItem.other(_:))
            {
              v65 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v40, 1, 1, v65);
              return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v33);
            }
            (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
            swift_bridgeObjectRelease(*((_QWORD *)v36 + 1));
LABEL_9:
            v42 = type metadata accessor for URL(0);
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v40, 1, 1, v42);
          }
          (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
          v46 = v67;
          v47 = v66;
          v48 = v68;
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v36, v68);
          _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
      }
      (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
      v51 = v85;
      v50 = v84;
      v52 = v86;
      v60 = (*(uint64_t (**)(char *, char *, uint64_t))(v85 + 32))(v84, v36, v86);
      Song.url.getter(v60);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v50, v52);
  }
  (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
  v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 32))(v28, v36, v25);
  Artist.url.getter(v41);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

uint64_t GenericMusicItem.shareURL.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for UploadedVideo(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UploadedAudio(0);
  v2[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v2[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TVSeason(0);
  v2[13] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[14] = v10;
  v2[15] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v2[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[17] = v12;
  v2[18] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Song(0);
  v2[19] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[20] = v14;
  v2[21] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v2[22] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v2[23] = v16;
  v2[24] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MusicVideo(0);
  v2[25] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[26] = v18;
  v2[27] = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicMovie(0);
  v2[28] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v2[29] = v20;
  v2[30] = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Artist(0);
  v2[31] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v2[32] = v22;
  v2[33] = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Album(0);
  v2[34] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[35] = v24;
  v2[36] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for GenericMusicItem(0);
  v2[37] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[38] = v26;
  v2[39] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000733EC, 0, 0);
}

uint64_t sub_1000733EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 24), v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for GenericMusicItem.album(_:))
  {
    v5 = *(_QWORD *)(v0 + 312);
    v6 = *(_QWORD *)(v0 + 288);
    v7 = *(_QWORD *)(v0 + 272);
    v8 = *(_QWORD *)(v0 + 280);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v5, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    v9 = (_QWORD *)swift_task_alloc(dword_10048F1EC);
    *(_QWORD *)(v0 + 320) = v9;
    *v9 = v0;
    v9[1] = sub_100073C58;
    return Album.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.artist(_:))
  {
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 256);
    v12 = *(_QWORD *)(v0 + 264);
    v14 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v11, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v11, v14);
    v15 = (_QWORD *)swift_task_alloc(dword_10048F20C);
    *(_QWORD *)(v0 + 328) = v15;
    *v15 = v0;
    v15[1] = sub_100073D94;
    return Artist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.composer(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.creditArtist(_:))
  {
LABEL_7:
    v16 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    v17 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
LABEL_17:
    v21 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 240);
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 96);
    v78 = *(_QWORD *)(v0 + 72);
    v79 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 312));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v18 = v4 == enum case for GenericMusicItem.curator(_:) || v4 == enum case for GenericMusicItem.editorialItem(_:);
  if (v18 || v4 == enum case for GenericMusicItem.genre(_:))
    goto LABEL_16;
  if (v4 == enum case for GenericMusicItem.musicMovie(_:))
  {
    v30 = *(_QWORD *)(v0 + 312);
    v32 = *(_QWORD *)(v0 + 232);
    v31 = *(_QWORD *)(v0 + 240);
    v33 = *(_QWORD *)(v0 + 224);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v30, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    v34 = (_QWORD *)swift_task_alloc(dword_10048F234);
    *(_QWORD *)(v0 + 336) = v34;
    *v34 = v0;
    v34[1] = sub_100073ED0;
    return MusicMovie.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v35 = *(_QWORD *)(v0 + 312);
    v37 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 216);
    v38 = *(_QWORD *)(v0 + 200);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v35, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v35, v38);
    v39 = (_QWORD *)swift_task_alloc(dword_10048F264);
    *(_QWORD *)(v0 + 344) = v39;
    *v39 = v0;
    v39[1] = sub_10007400C;
    return MusicVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.playlist(_:))
  {
    v40 = *(_QWORD *)(v0 + 312);
    v42 = *(_QWORD *)(v0 + 184);
    v41 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v40, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v40, v43);
    v44 = (_QWORD *)swift_task_alloc(dword_10048F284);
    *(_QWORD *)(v0 + 352) = v44;
    *v44 = v0;
    v44[1] = sub_100074148;
    return Playlist.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.radioShow(_:)
    || v4 == enum case for GenericMusicItem.recordLabel(_:)
    || v4 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_16;
  }
  if (v4 == enum case for GenericMusicItem.song(_:))
  {
    v45 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v45, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v46, v45, v48);
    v49 = (_QWORD *)swift_task_alloc(dword_10048F2BC);
    *(_QWORD *)(v0 + 360) = v49;
    *v49 = v0;
    v49[1] = sub_100074284;
    return Song.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  if (v4 == enum case for GenericMusicItem.station(_:))
  {
LABEL_16:
    v20 = *(_QWORD *)(v0 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    GenericMusicItem.url.getter(v20);
    goto LABEL_17;
  }
  if (v4 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    v50 = *(_QWORD *)(v0 + 312);
    v52 = *(_QWORD *)(v0 + 136);
    v51 = *(_QWORD *)(v0 + 144);
    v53 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v50, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v50, v53);
    v54 = (_QWORD *)swift_task_alloc(dword_10048F324);
    *(_QWORD *)(v0 + 368) = v54;
    *v54 = v0;
    v54[1] = sub_1000743C0;
    return TVEpisode.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvSeason(_:))
  {
    v55 = *(_QWORD *)(v0 + 312);
    v57 = *(_QWORD *)(v0 + 112);
    v56 = *(_QWORD *)(v0 + 120);
    v58 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v55, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v55, v58);
    v59 = (_QWORD *)swift_task_alloc(dword_10048F354);
    *(_QWORD *)(v0 + 376) = v59;
    *v59 = v0;
    v59[1] = sub_1000744FC;
    return TVSeason.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.tvShow(_:))
  {
    v60 = *(_QWORD *)(v0 + 312);
    v62 = *(_QWORD *)(v0 + 88);
    v61 = *(_QWORD *)(v0 + 96);
    v63 = *(_QWORD *)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v60, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v60, v63);
    v64 = (_QWORD *)swift_task_alloc(dword_10048F384);
    *(_QWORD *)(v0 + 384) = v64;
    *v64 = v0;
    v64[1] = sub_100074638;
    return TVShow.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else if (v4 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    v65 = *(_QWORD *)(v0 + 312);
    v67 = *(_QWORD *)(v0 + 64);
    v66 = *(_QWORD *)(v0 + 72);
    v68 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v65, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v66, v65, v68);
    v69 = (_QWORD *)swift_task_alloc(dword_10048F3B4);
    *(_QWORD *)(v0 + 392) = v69;
    *v69 = v0;
    v69[1] = sub_100074774;
    return UploadedAudio.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
  else
  {
    if (v4 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      if (v4 != enum case for GenericMusicItem.other(_:))
      {
        v76 = *(_QWORD *)(v0 + 304);
        v75 = *(_QWORD *)(v0 + 312);
        v77 = *(_QWORD *)(v0 + 296);
        GenericMusicItem.url.getter(*(_QWORD *)(v0 + 16));
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
        goto LABEL_17;
      }
      goto LABEL_7;
    }
    v70 = *(_QWORD *)(v0 + 312);
    v72 = *(_QWORD *)(v0 + 40);
    v71 = *(_QWORD *)(v0 + 48);
    v73 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 304) + 96))(v70, *(_QWORD *)(v0 + 296));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v71, v70, v73);
    v74 = (_QWORD *)swift_task_alloc(dword_10048F3E4);
    *(_QWORD *)(v0 + 400) = v74;
    *v74 = v0;
    v74[1] = sub_1000748B0;
    return UploadedVideo.shareURL.getter(*(_QWORD *)(v0 + 16));
  }
}

uint64_t sub_100073C58()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 320));
  return swift_task_switch(sub_100073CAC, 0, 0);
}

uint64_t sub_100073CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100073D94()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_100073DE8, 0, 0);
}

uint64_t sub_100073DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100073ED0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 336));
  return swift_task_switch(sub_100073F24, 0, 0);
}

uint64_t sub_100073F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007400C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  return swift_task_switch(sub_100074060, 0, 0);
}

uint64_t sub_100074060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074148()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 352));
  return swift_task_switch(sub_10007419C, 0, 0);
}

uint64_t sub_10007419C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074284()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_1000742D8, 0, 0);
}

uint64_t sub_1000742D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000743C0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_100074414, 0, 0);
}

uint64_t sub_100074414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000744FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 376));
  return swift_task_switch(sub_100074550, 0, 0);
}

uint64_t sub_100074550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074638()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 384));
  return swift_task_switch(sub_10007468C, 0, 0);
}

uint64_t sub_10007468C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100074774()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_1000747C8, 0, 0);
}

uint64_t sub_1000747C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000748B0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 400));
  return swift_task_switch(sub_100074904, 0, 0);
}

uint64_t sub_100074904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GenericMusicItem.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  id v55;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  unsigned int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int16 v68;
  unint64_t v69;
  char *v70;
  char *v71;
  const char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  id v77;
  char *v78;
  uint64_t v79;
  id v80;
  char *v81;
  uint64_t v82;
  id v83;
  char *v84;
  uint64_t v85;
  id v86;
  char *v87;
  uint64_t v88;
  id v89;
  char *v90;
  uint64_t v91;
  id v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;

  v97 = type metadata accessor for UploadedVideo(0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)&v94 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for UploadedAudio(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)&v94 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TVShow(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for TVSeason(0);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v107 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for TVEpisode(0);
  v105 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v104 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for Station(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for Song(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v113 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for SocialProfile(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for RecordLabel(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for RadioShow(0);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v122 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for Playlist(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for MusicVideo(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v132 = *(_QWORD *)(v12 - 8);
  v133 = v12;
  __chkstk_darwin(v12);
  v131 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v135 = *(_QWORD *)(v14 - 8);
  v136 = v14;
  __chkstk_darwin(v14);
  v134 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v138 = *(_QWORD *)(v16 - 8);
  v139 = v16;
  __chkstk_darwin(v16);
  v137 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v141 = *(_QWORD *)(v18 - 8);
  v142 = v18;
  __chkstk_darwin(v18);
  v140 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v144 = *(_QWORD *)(v20 - 8);
  v145 = v20;
  __chkstk_darwin(v20);
  v143 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v147 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v94 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v94 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v146, v35);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v35);
  if (v39 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v38, v31);
    String.LocalizationValue.init(stringLiteral:)(0x6C41206572616853, 0xAE00A680E26D7562);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v40 = qword_1004A1DA0;
    v41 = (id)qword_1004A1DA0;
    v42 = v147;
    static Locale.current.getter(v41);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v40, v42, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v43;
  }
  if (v39 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v143;
    v44 = v144;
    v46 = v145;
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v143, v38, v145);
    v47 = 0x7241206572616853;
    v48 = 0xAFA680E274736974;
LABEL_7:
    String.LocalizationValue.init(stringLiteral:)(v47, v48);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v49 = qword_1004A1DA0;
    v50 = (id)qword_1004A1DA0;
    v51 = v147;
    static Locale.current.getter(v50);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v49, v51, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_18:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    return v43;
  }
  if (v39 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v140;
    v44 = v141;
    v46 = v142;
    (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v140, v38, v142);
    v52 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000011, 0x80000001003ADE50);
    v53 = v28;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v54 = qword_1004A1DA0;
    v55 = (id)qword_1004A1DA0;
    v56 = v147;
    static Locale.current.getter(v55);
    v43 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v54, v56, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v52, v24);
    goto LABEL_18;
  }
  if (v39 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v137;
    v44 = v138;
    v46 = v139;
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v137, v38, v139);
    v57 = v30;
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000010, 0x80000001003ADE90);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v58 = qword_1004A1DA0;
    v59 = (id)qword_1004A1DA0;
    v60 = v147;
    static Locale.current.getter(v59);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v58, v60, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v57, v24);
    goto LABEL_18;
  }
  if (v39 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v134;
    v44 = v135;
    v46 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v134, v38, v136);
    v48 = 0xAE00A680E265726ELL;
    v47 = 0x6547206572616853;
    goto LABEL_7;
  }
  if (v39 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v131;
    v44 = v132;
    v46 = v133;
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v131, v38, v133);
    v47 = 0x6F4D206572616853;
    v62 = -496670346;
LABEL_26:
    v48 = v62 | 0xAE00A68000000000;
    goto LABEL_7;
  }
  if (v39 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v129;
    v45 = v128;
    v46 = v130;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v38, v130);
    v47 = 0x6956206572616853;
    v62 = -496016028;
    goto LABEL_26;
  }
  if (v39 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v126;
    v45 = v125;
    v46 = v127;
    (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v125, v38, v127);
    v47 = 0x1000000000000011;
    v48 = 0x80000001003ADF30;
    goto LABEL_7;
  }
  if (v39 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v123;
    v64 = v122;
    v65 = v38;
    v66 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v65, v124);
    v67 = 0x6853206572616853;
    v68 = 30575;
LABEL_31:
    v69 = v68 | 0xAD0000A680E20000;
LABEL_43:
    String.LocalizationValue.init(stringLiteral:)(v67, v69);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v76 = qword_1004A1DA0;
    v77 = (id)qword_1004A1DA0;
    v78 = v147;
    static Locale.current.getter(v77);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v76, v78, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v66);
    return v43;
  }
  if (v39 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v120;
    v64 = v119;
    v70 = v38;
    v66 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v70, v121);
    v67 = 0x1000000000000015;
    v69 = 0x80000001003ADF90;
    goto LABEL_43;
  }
  if (v39 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v117;
    v64 = v116;
    v71 = v38;
    v66 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v71, v118);
    v72 = "Share Profile…";
LABEL_42:
    v69 = (unint64_t)(v72 - 32) | 0x8000000000000000;
    v67 = 0x1000000000000010;
    goto LABEL_43;
  }
  if (v39 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v114;
    v64 = v113;
    v73 = v38;
    v66 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v73, v115);
    v67 = 0x6F53206572616853;
    v68 = 26478;
    goto LABEL_31;
  }
  if (v39 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v111;
    v64 = v110;
    v74 = v38;
    v66 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v74, v112);
    v72 = "Share Station…";
    goto LABEL_42;
  }
  if (v39 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v63 = v105;
    v64 = v104;
    v75 = v38;
    v66 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v75, v106);
    v72 = "Share Episode…";
    goto LABEL_42;
  }
  if (v39 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v38, v109);
    String.LocalizationValue.init(stringLiteral:)(0x6553206572616853, 0xAFA680E26E6F7361);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v79 = qword_1004A1DA0;
    v80 = (id)qword_1004A1DA0;
    v81 = v147;
    static Locale.current.getter(v80);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v79, v81, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v107, v109);
  }
  else if (v39 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v38, v103);
    String.LocalizationValue.init(stringLiteral:)(0x6853206572616853, 0xAD0000A680E2776FLL);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v82 = qword_1004A1DA0;
    v83 = (id)qword_1004A1DA0;
    v84 = v147;
    static Locale.current.getter(v83);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v82, v84, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v103);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v38, v100);
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v85 = qword_1004A1DA0;
    v86 = (id)qword_1004A1DA0;
    v87 = v147;
    static Locale.current.getter(v86);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v85, v87, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v38, v97);
    String.LocalizationValue.init(stringLiteral:)(0x6956206572616853, 0xAE00A680E26F6564);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v88 = qword_1004A1DA0;
    v89 = (id)qword_1004A1DA0;
    v90 = v147;
    static Locale.current.getter(v89);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v88, v90, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v91 = qword_1004A1DA0;
    v92 = (id)qword_1004A1DA0;
    v93 = v147;
    static Locale.current.getter(v92);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v91, v93, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  return v43;
}

uint64_t GenericMusicItem.failureMessage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  const char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  id v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  const char *v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  id v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;

  v75 = type metadata accessor for UploadedVideo(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v72 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for UploadedAudio(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for TVShow(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v79 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for TVSeason(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for TVEpisode(0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for Station(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v88 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for Song(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for SocialProfile(0);
  v95 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v94 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for RecordLabel(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v97 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for RadioShow(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Playlist(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for MusicVideo(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicMovie(0);
  v110 = *(_QWORD *)(v12 - 8);
  v111 = v12;
  __chkstk_darwin(v12);
  v109 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Genre(0);
  v113 = *(_QWORD *)(v14 - 8);
  v114 = v14;
  __chkstk_darwin(v14);
  v112 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Curator(0);
  v116 = *(_QWORD *)(v16 - 8);
  v117 = v16;
  __chkstk_darwin(v16);
  v115 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Composer(0);
  v119 = *(_QWORD *)(v18 - 8);
  v120 = v18;
  __chkstk_darwin(v18);
  v118 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Artist(0);
  v122 = *(_QWORD *)(v20 - 8);
  v123 = v20;
  __chkstk_darwin(v20);
  v121 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v124 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v72 - v29;
  v31 = type metadata accessor for Album(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char *)&v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for GenericMusicItem(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v38 = (char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v125, v35);
  v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v35);
  if (v39 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v38, v31);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001003ADE10);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v40 = qword_1004A1DA0;
    v41 = (id)qword_1004A1DA0;
    v42 = v124;
    static Locale.current.getter(v41);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v40, v42, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v43;
  }
  if (v39 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v121;
    v44 = v122;
    v46 = v123;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v121, v38, v123);
    v47 = 0xD00000000000001CLL;
    v48 = "Unable to share this artist.";
LABEL_13:
    v54 = (unint64_t)(v48 - 32) | 0x8000000000000000;
LABEL_14:
    String.LocalizationValue.init(stringLiteral:)(v47, v54);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v55 = qword_1004A1DA0;
    v56 = (id)qword_1004A1DA0;
    v57 = v124;
    static Locale.current.getter(v56);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v55, v57, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
LABEL_17:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    return v43;
  }
  if (v39 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v118;
    v44 = v119;
    v46 = v120;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v38, v120);
    v49 = v30;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001003ADE70);
    v50 = v28;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v51 = qword_1004A1DA0;
    v52 = (id)qword_1004A1DA0;
    v53 = v124;
    static Locale.current.getter(v52);
    v43 = String.init(localized:table:bundle:locale:comment:)(v50, 0, 0, v51, v53, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v49, v24);
    goto LABEL_17;
  }
  if (v39 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v115;
    v44 = v116;
    v46 = v117;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v38, v117);
    v47 = 0xD00000000000001DLL;
    v48 = "Unable to share this curator.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v112;
    v44 = v113;
    v46 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v38, v114);
    v59 = "Unable to share this genre.";
LABEL_25:
    v54 = (unint64_t)(v59 - 32) | 0x8000000000000000;
    v47 = 0xD00000000000001BLL;
    goto LABEL_14;
  }
  if (v39 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v45 = v109;
    v44 = v110;
    v46 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v38, v111);
    v59 = "Unable to share this movie.";
    goto LABEL_25;
  }
  if (v39 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v107;
    v45 = v106;
    v46 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v38, v108);
    v59 = "Unable to share this video.";
    goto LABEL_25;
  }
  if (v39 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v104;
    v45 = v103;
    v46 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v38, v105);
    v47 = 0xD00000000000001ELL;
    v48 = "Unable to share this playlist.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v101;
    v45 = v100;
    v46 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v38, v102);
    v47 = 0xD00000000000001ALL;
    v48 = "Unable to share this show.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v98;
    v45 = v97;
    v46 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v38, v99);
    v47 = 0xD000000000000022;
    v48 = "Unable to share this record label.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v95;
    v45 = v94;
    v46 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v38, v96);
    v47 = 0xD00000000000001DLL;
    v48 = "Unable to share this profile.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v92;
    v45 = v91;
    v46 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v38, v93);
    v47 = 0xD00000000000001ALL;
    v48 = "Unable to share this song.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v89;
    v45 = v88;
    v46 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v38, v90);
    v47 = 0xD00000000000001DLL;
    v48 = "Unable to share this station.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    v44 = v83;
    v45 = v82;
    v46 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v38, v84);
    v47 = 0xD00000000000001DLL;
    v48 = "Unable to share this episode.";
    goto LABEL_13;
  }
  if (v39 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v38, v87);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001CLL, 0x80000001003AE0C0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v60 = qword_1004A1DA0;
    v61 = (id)qword_1004A1DA0;
    v62 = v124;
    static Locale.current.getter(v61);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v60, v62, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  }
  else if (v39 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v38, v81);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001003ADF70);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v63 = qword_1004A1DA0;
    v64 = (id)qword_1004A1DA0;
    v65 = v124;
    static Locale.current.getter(v64);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v63, v65, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v38, v78);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001003ADDF0);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v66 = qword_1004A1DA0;
    v67 = (id)qword_1004A1DA0;
    v68 = v124;
    static Locale.current.getter(v67);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v66, v68, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v38, v75);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001003ADF10);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v69 = qword_1004A1DA0;
    v70 = (id)qword_1004A1DA0;
    v71 = v124;
    static Locale.current.getter(v70);
    v43 = String.init(localized:table:bundle:locale:comment:)(v28, 0, 0, v69, v71, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
  }
  else
  {
    v43 = GenericMusicItem.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  return v43;
}

uint64_t sub_100077008(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10048F414);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000EA88;
  return GenericMusicItem.shareURL.getter(a1);
}

uint64_t sub_100077060(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1000770BC, 0, 0);
}

uint64_t sub_1000770BC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = **(_QWORD **)(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc(dword_10048F414);
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_100077114;
  return GenericMusicItem.shareURL.getter(*(_QWORD *)(v0 + 32));
}

uint64_t sub_100077114()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  return swift_task_switch(sub_100077168, 0, 0);
}

uint64_t sub_100077168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    v1 = *(_QWORD *)(v0 + 32);
  }
  objc_msgSend(*(id *)(v0 + 40), "setOriginalURL:", v5);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007720C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_10048F170);
  sub_1000086B4(v2, (uint64_t)qword_10048F170);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x676E6972616853, 0xE700000000000000);
}

uint64_t sub_100077280(uint64_t (*a1)(void))
{
  uint64_t v1;

  v1 = a1();
  return _swift_stdlib_bridgeErrorToNSError(v1);
}

void sub_1000772A0(_QWORD **a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  _QWORD *v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1;
  *v7 = v6;
  *a1 = v7 + 1;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

size_t sub_1000772FC(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_1000773F8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

char *sub_100077318(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_100077574(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_100077334(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_100077668(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_100077350(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_100077784(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_10007736C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_1000778B8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_100077388(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_1000779B8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1000773A4(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_100077AD8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_1000773C0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_100077BD0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_1000773DC(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_100077CC8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

size_t sub_1000773F8(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100005574(&qword_10048D518);
  v11 = *(_QWORD *)(sub_100005574(&qword_10048D510) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = sub_100005574(&qword_10048D510);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }
  swift_release(a4);
  return (size_t)v15;
}

char *sub_100077574(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E798);
    v11 = (char *)swift_allocObject(v10, 2 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = v13 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[2 * v8])
      memmove(v14, v15, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 2 * v8);
  }
  swift_release(a4);
  return v11;
}

char *sub_100077668(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_100493240);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13, v14, v8, &type metadata for Alert.Action);
  }
  swift_release(a4);
  return v11;
}

_QWORD *sub_100077784(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574((uint64_t *)&unk_1004940F0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    v14 = sub_100005574(&qword_100493120);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v14);
  }
  swift_release(a4);
  return v11;
}

char *sub_1000778B8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574((uint64_t *)&unk_100491700);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
  }
  swift_release(a4);
  return v11;
}

_QWORD *sub_1000779B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E828);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    v15 = sub_100005574(&qword_10048E158);
    swift_arrayInitWithCopy(v11 + 4, a4 + 4, v8, v15);
  }
  swift_release(a4);
  return v11;
}

char *sub_100077AD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E790);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v8);
  }
  swift_release(a4);
  return v11;
}

char *sub_100077BD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_10048E7E0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_release(a4);
  return v11;
}

size_t sub_100077CC8(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100005574(&qword_10048E788);
  v11 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20, v21, v8, v17);
  }
  swift_release(a4);
  return (size_t)v15;
}

uint64_t sub_100077E3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34[2];
  __int128 v35[2];
  __int128 v36[2];
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v32 = a4;
  v33 = a3;
  v10 = sub_100005574(&qword_10048D8E8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v31 - v15;
  sub_1000244B0((uint64_t)a1, (uint64_t)v37);
  sub_1000244B0((uint64_t)a3, (uint64_t)v36);
  sub_1000244B0((uint64_t)a1, (uint64_t)v35);
  v17 = swift_allocObject(&unk_100445318, 96, 7);
  sub_1000137C8(v36, v17 + 16);
  sub_1000137C8(v35, v17 + 56);
  sub_100014A7C(a4, (uint64_t)v16, &qword_10048D8E8);
  sub_1000244B0((uint64_t)v37, (uint64_t)v34);
  v18 = swift_allocObject(&unk_100445340, 64, 7);
  *(_QWORD *)(v18 + 16) = a2;
  sub_1000137C8(v34, v18 + 24);
  v19 = (_QWORD *)swift_allocObject(&unk_100445368, 48, 7);
  v19[2] = sub_1000789D4;
  v19[3] = v18;
  v19[4] = &unk_10048F620;
  v19[5] = v17;
  sub_100014A7C((uint64_t)v16, (uint64_t)v14, &qword_10048D8E8);
  sub_1000244B0((uint64_t)v37, (uint64_t)v34);
  v20 = *(unsigned __int8 *)(v11 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_100445390, v22 + 40, v20 | 7);
  sub_10000F3EC((uint64_t)v14, v23 + v21);
  sub_1000137C8(v34, v23 + v22);
  v24 = v38;
  v25 = v39;
  sub_10000ABC8(v37, v38);
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 32);
  swift_retain(v18);
  v27 = v26(v24, v25);
  v29 = v28;
  sub_100008758((uint64_t)v16, &qword_10048D8E8);
  sub_10000682C(v37);
  sub_100008758(v32, &qword_10048D8E8);
  sub_10000682C(v33);
  result = sub_10000682C(a1);
  *a5 = sub_1000789D4;
  a5[1] = v18;
  a5[2] = &unk_10048F628;
  a5[3] = v19;
  a5[4] = &unk_10048F630;
  a5[5] = v23;
  a5[6] = v27;
  a5[7] = v29;
  return result;
}

uint64_t sub_1000780BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000780E4()
{
  uint64_t v0;

  return sub_10006592C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1000780F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_10048F19C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  return sub_100066BDC(v2, v3, v5, v4);
}

uint64_t sub_10007815C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_10048F1AC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  return sub_100066DD4(v4, v5);
}

uint64_t sub_1000781E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)swift_task_alloc(dword_10048F1CC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000EA88;
  return sub_100067284(v4, v5);
}

uint64_t sub_100078268@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_100078274@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

uint64_t sub_100078280@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_10007828C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_100078298@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

uint64_t sub_1000782A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_1000782B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1000782BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_1000782C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_1000782D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_1000782E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_1000782EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006D3C4(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t sub_1000782F8(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048F4A8, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100078334(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EBE0, (uint64_t (*)(uint64_t))&type metadata accessor for EditorialItem, (uint64_t)&protocol conformance descriptor for EditorialItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100078370(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EBE8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie, (uint64_t)&protocol conformance descriptor for MusicMovie);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000783AC(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048F540, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000783E8(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EBF0, (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode, (uint64_t)&protocol conformance descriptor for TVEpisode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100078424(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EBF8, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100078460(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EC00, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10007849C(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048F5B8, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio, (uint64_t)&protocol conformance descriptor for UploadedAudio);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000784D8(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10048EC08, (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo, (uint64_t)&protocol conformance descriptor for UploadedVideo);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100078514(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924((unint64_t *)&unk_100493290, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Actions.Share()
{
  return &type metadata for Actions.Share;
}

uint64_t _s5ShareO7ContextVwxx(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t _s5ShareO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v8;
  v5 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v4;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain(v3);
  swift_retain(v8);
  swift_retain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *_s5ShareO7ContextVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t _s5ShareO7ContextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Share.Context()
{
  return &type metadata for Actions.Share.Context;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics()
{
  return &type metadata for Actions.ShareLyrics;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics.Context()
{
  return &type metadata for Actions.ShareLyrics.Context;
}

uint64_t sub_100078740()
{
  uint64_t v0;

  sub_10000682C((_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10007876C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10048F61C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return sub_1000655F8(v0 + 16, v0 + 56);
}

uint64_t sub_1000787C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10000682C((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000787F4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100078824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = v0 + v3;
  v6 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7 >= 0xA)
      swift_bridgeObjectRelease(v7);
    v8 = v5 + v6[5];
    v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + 24));
      v10 = v8 + v9[6];
      v11 = type metadata accessor for URL(0);
      v15 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v11);
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[7]));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[8] + 8));
      swift_bridgeObjectRelease(*(_QWORD *)(v8 + v9[10] + 8));
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[6] + 8));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[7]));
    swift_bridgeObjectRelease(*(_QWORD *)(v5 + v6[8]));
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 40;
  sub_10000682C((_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v13, v2 | 7);
}

uint64_t Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)();
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t (**v44)();
  uint64_t (*v45)();
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)();
  uint64_t v61;

  v57 = a7;
  v58 = a8;
  v59 = a6;
  v60 = a9;
  v54 = a5;
  v55 = a3;
  v52 = a4;
  v61 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v53 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v47 = (char *)&v46 - v16;
  v18 = v17;
  v51 = v17;
  __chkstk_darwin(v15);
  v20 = (char *)&v46 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v48 = a1;
  v21((char *)&v46 - v19, a1, a10);
  v50 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v50 + 40) & ~v50;
  v23 = v22 + v18;
  v24 = v50 | 7;
  v25 = (uint64_t (*)())swift_allocObject(&unk_1004453E0, v23, v50 | 7);
  v56 = v25;
  *((_QWORD *)v25 + 2) = a10;
  *((_QWORD *)v25 + 3) = a11;
  v49 = a11;
  v26 = v61;
  *((_QWORD *)v25 + 4) = v61;
  v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46((char *)v25 + v22, v20, a10);
  v27 = v47;
  v21(v47, a1, a10);
  v28 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  v31 = (uint64_t (*)())swift_allocObject(&unk_100445408, v30 + 40, v24);
  *((_QWORD *)v31 + 2) = a10;
  *((_QWORD *)v31 + 3) = a11;
  *((_QWORD *)v31 + 4) = v26;
  v32 = (char *)v31 + v22;
  v33 = (void (*)(char *, uint64_t, uint64_t))v46;
  v46(v32, v27, a10);
  sub_1000149A8(v52, (uint64_t)v31 + v28, &qword_10048D958);
  sub_1000149A8(v54, (uint64_t)v31 + v29, &qword_10048D950);
  sub_1000137C8(v55, (uint64_t)v31 + v30);
  v34 = v53;
  v33(v53, v48, a10);
  v35 = (void (*)(char *, char *, uint64_t))v33;
  v36 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = (v37 + 48) & ~v37;
  v39 = (*(_QWORD *)(v36 + 64) + v50 + v38) & ~v50;
  v40 = (uint64_t (*)())swift_allocObject(&unk_100445430, v39 + v51, v24 | v37);
  v41 = v49;
  *((_QWORD *)v40 + 2) = a10;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v58;
  *((_QWORD *)v40 + 4) = v57;
  *((_QWORD *)v40 + 5) = v42;
  sub_1000149A8(v59, (uint64_t)v40 + v38, &qword_10048D8E8);
  v35((char *)v40 + v39, v34, a10);
  result = swift_retain(v61);
  v44 = v60;
  v45 = v56;
  *v60 = sub_100079590;
  v44[1] = v45;
  v44[2] = (uint64_t (*)())&unk_10048F640;
  v44[3] = v31;
  v44[4] = (uint64_t (*)())&unk_10048F650;
  v44[5] = v40;
  return result;
}

uint64_t static Actions.Favorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 10, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F658, (uint64_t)&unk_10048F660, a2);
}

uint64_t Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t (*v31)();
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t (**v44)();
  uint64_t (*v45)();
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 *v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (**v60)();
  uint64_t v61;

  v57 = a7;
  v58 = a8;
  v59 = a6;
  v60 = a9;
  v54 = a5;
  v55 = a3;
  v52 = a4;
  v61 = a2;
  v12 = *(_QWORD *)(a10 - 8);
  v13 = __chkstk_darwin(a1);
  v53 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v47 = (char *)&v46 - v16;
  v18 = v17;
  v51 = v17;
  __chkstk_darwin(v15);
  v20 = (char *)&v46 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v48 = a1;
  v21((char *)&v46 - v19, a1, a10);
  v50 = *(unsigned __int8 *)(v12 + 80);
  v22 = (v50 + 40) & ~v50;
  v23 = v22 + v18;
  v24 = v50 | 7;
  v25 = (uint64_t (*)())swift_allocObject(&unk_100445458, v23, v50 | 7);
  v56 = v25;
  *((_QWORD *)v25 + 2) = a10;
  *((_QWORD *)v25 + 3) = a11;
  v49 = a11;
  v26 = v61;
  *((_QWORD *)v25 + 4) = v61;
  v46 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v46((char *)v25 + v22, v20, a10);
  v27 = v47;
  v21(v47, a1, a10);
  v28 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 79) & 0xFFFFFFFFFFFFFFF8;
  v31 = (uint64_t (*)())swift_allocObject(&unk_100445480, v30 + 40, v24);
  *((_QWORD *)v31 + 2) = a10;
  *((_QWORD *)v31 + 3) = a11;
  *((_QWORD *)v31 + 4) = v26;
  v32 = (char *)v31 + v22;
  v33 = (void (*)(char *, uint64_t, uint64_t))v46;
  v46(v32, v27, a10);
  sub_1000149A8(v52, (uint64_t)v31 + v28, &qword_10048D958);
  sub_1000149A8(v54, (uint64_t)v31 + v29, &qword_10048D950);
  sub_1000137C8(v55, (uint64_t)v31 + v30);
  v34 = v53;
  v33(v53, v48, a10);
  v35 = (void (*)(char *, char *, uint64_t))v33;
  v36 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = (v37 + 48) & ~v37;
  v39 = (*(_QWORD *)(v36 + 64) + v50 + v38) & ~v50;
  v40 = (uint64_t (*)())swift_allocObject(&unk_1004454A8, v39 + v51, v24 | v37);
  v41 = v49;
  *((_QWORD *)v40 + 2) = a10;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v58;
  *((_QWORD *)v40 + 4) = v57;
  *((_QWORD *)v40 + 5) = v42;
  sub_1000149A8(v59, (uint64_t)v40 + v38, &qword_10048D8E8);
  v35((char *)v40 + v39, v34, a10);
  result = swift_retain(v61);
  v44 = v60;
  v45 = v56;
  *v60 = sub_10007AF68;
  v44[1] = v45;
  v44[2] = (uint64_t (*)())&unk_10048F670;
  v44[3] = v31;
  v44[4] = (uint64_t (*)())&unk_10048F680;
  v44[5] = v40;
  return result;
}

uint64_t static Actions.UndoFavorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 55, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F688, (uint64_t)&unk_10048F690, a2);
}

uint64_t Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t (*v26)();
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t (**v37)();
  uint64_t (*v38)();
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t (*v42)();
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v47;
  uint64_t v48;

  v44 = a3;
  v45 = a4;
  v47 = a1;
  v48 = a2;
  v46 = a7;
  v9 = *(_QWORD *)(a5 - 8);
  v10 = __chkstk_darwin(a1);
  v43 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v40 = (char *)&v39 - v13;
  v41 = v14;
  v15 = v14;
  __chkstk_darwin(v12);
  v17 = (char *)&v39 - v16;
  v18 = *(void (**)(char *))(v9 + 16);
  v18((char *)&v39 - v16);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = (v19 + 40) & ~v19;
  v21 = v20 + v15;
  v22 = (uint64_t (*)())swift_allocObject(&unk_1004454D0, v21, v19 | 7);
  v42 = v22;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = a6;
  v23 = v48;
  *((_QWORD *)v22 + 4) = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v39((char *)v22 + v20, v17, a5);
  v24 = v40;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v40, v47, a5);
  v25 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (uint64_t (*)())swift_allocObject(&unk_1004454F8, v25 + 40, v19 | 7);
  *((_QWORD *)v26 + 2) = a5;
  *((_QWORD *)v26 + 3) = a6;
  *((_QWORD *)v26 + 4) = v23;
  v27 = (char *)v26 + v20;
  v28 = (void (*)(char *, uint64_t, uint64_t))v39;
  v39(v27, v24, a5);
  sub_1000149A8(v44, (uint64_t)v26 + v25, &qword_10048D958);
  v29 = v43;
  v28(v43, v47, a5);
  v30 = (void (*)(uint64_t, char *, uint64_t))v28;
  v31 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = (*(_QWORD *)(v31 + 64) + v19 + v33) & ~v19;
  v35 = swift_allocObject(&unk_100445520, v34 + v41, v19 | 7 | v32);
  *(_QWORD *)(v35 + 16) = a5;
  *(_QWORD *)(v35 + 24) = a6;
  sub_1000149A8(v45, v35 + v33, &qword_10048D8E8);
  v30(v35 + v34, v29, a5);
  result = swift_retain(v48);
  v37 = v46;
  v38 = v42;
  *v46 = sub_10007CC20;
  v37[1] = v38;
  v37[2] = (uint64_t (*)())&unk_10048F6A0;
  v37[3] = v26;
  v37[4] = (uint64_t (*)())&unk_10048F6B0;
  v37[5] = (uint64_t (*)())v35;
  return result;
}

uint64_t static Actions.SuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 54, (uint64_t)sub_10000F930, (uint64_t)&unk_10048F6B8, (uint64_t)&unk_10048F6C0, a2);
}

uint64_t Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t (**a6)()@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t (*v28)();
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t (**v36)();
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t (*v43)();
  char *v44;
  uint64_t v45;
  uint64_t (**v46)();
  uint64_t v47;

  v45 = a3;
  v46 = a6;
  v47 = a2;
  v40 = a1;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = __chkstk_darwin(a1);
  v44 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - v13;
  v16 = v15;
  v42 = v15;
  __chkstk_darwin(v12);
  v18 = (char *)&v38 - v17;
  sub_100008758(v19, &qword_10048D958);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v41(v18, (uint64_t)a1, a4);
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + 40) & ~v20;
  v22 = v21 + v16;
  v39 = v21 + v16;
  v23 = v20 | 7;
  v24 = (uint64_t (*)())swift_allocObject(&unk_100445548, v22, v20 | 7);
  v43 = v24;
  *((_QWORD *)v24 + 2) = a4;
  *((_QWORD *)v24 + 3) = a5;
  v25 = v47;
  *((_QWORD *)v24 + 4) = v47;
  v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v26((char *)v24 + v21, v18, a4);
  v27 = v40;
  v41(v14, (uint64_t)v40, a4);
  v28 = (uint64_t (*)())swift_allocObject(&unk_100445570, v39, v20 | 7);
  *((_QWORD *)v28 + 2) = a4;
  *((_QWORD *)v28 + 3) = a5;
  *((_QWORD *)v28 + 4) = v25;
  v26((char *)v28 + v21, v14, a4);
  v29 = v44;
  v26(v44, v27, a4);
  v30 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (*(_QWORD *)(v30 + 64) + v20 + v32) & ~v20;
  v34 = swift_allocObject(&unk_100445598, v33 + v42, v23 | v31);
  *(_QWORD *)(v34 + 16) = a4;
  *(_QWORD *)(v34 + 24) = a5;
  sub_1000149A8(v45, v34 + v32, &qword_10048D8E8);
  v26((char *)(v34 + v33), v29, a4);
  result = swift_retain(v47);
  v36 = v46;
  v37 = v43;
  *v46 = sub_10007D954;
  v36[1] = v37;
  v36[2] = (uint64_t (*)())&unk_10048F6D0;
  v36[3] = v28;
  v36[4] = (uint64_t (*)())&unk_10048F6E0;
  v36[5] = (uint64_t (*)())v34;
  return result;
}

uint64_t static Actions.UndoSuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A4B4(a1, 56, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F6E8, (uint64_t)&unk_10048F6F0, a2);
}

uint64_t sub_100079424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 10, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F658, (uint64_t)&unk_10048F660, a2);
}

uint64_t sub_100079444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 55, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F688, (uint64_t)&unk_10048F690, a2);
}

uint64_t sub_100079464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F7D0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.favorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_10007959C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_100079590()
{
  return sub_10007D960((uint64_t (*)(_QWORD, uint64_t))sub_100079464);
}

uint64_t sub_10007959C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  char *v22;
  unint64_t v23;
  Swift::String v24;
  void *object;
  char *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  Swift::String v40;
  void *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v43 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v43 - v9;
  v11 = sub_100005574(&qword_10048F7D0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v43 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v43 - v16, v1, v11);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v19 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v19 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v44 = 0;
      v45 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease(v45);
      v44 = 0xD000000000000019;
      v45 = 0x80000001003AE160;
      v18(v15, v1, v11);
      v24._countAndFlagsBits = String.init<A>(describing:)(v15, v11);
      object = v24._object;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(object);
      v23 = v44;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return v23;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v17, v2);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v8, v10, v2);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
LABEL_3:
    v22 = v10;
    v23 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v22, v2);
    return v23;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000011;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001DLL;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    v27 = v10;
    if (qword_10048C658 != -1)
      swift_once(&qword_10048C658, sub_1000B3BEC);
    v28 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_100388F48);
    v30 = swift_getKeyPath(&unk_100388F70);
    static Published.subscript.getter(&v44, v28, KeyPath, v30);
    swift_release(KeyPath);
    swift_release(v30);
    v31 = v45;
    v32 = v46;
    v33 = v47;
    v34 = v48;
    v35 = v49;
    v36 = v50;
    v37 = v51;
    swift_bridgeObjectRelease(v52);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v35);

    if ((v31 & 0x100) != 0)
      v23 = 0;
    else
      v23 = 0xD000000000000016;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v2);
    return v23;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6C20646572616853;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD00000000000001CLL;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000013;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000014;
  }
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.networkRequired(_:))
    goto LABEL_3;
  if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000025;
  }
  else
  {
    v38 = v10;
    if (v21 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
      v23 = 0x206E776F6E6B6E55;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v38, v2);
    }
    else
    {
      v44 = 0;
      v45 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease(v45);
      v44 = 0x206E776F6E6B6E55;
      v45 = 0xEF206E6F73616572;
      v39 = v43;
      v20(v43, v38, v2);
      v40._countAndFlagsBits = String.init<A>(describing:)(v39, v2);
      v41 = v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(v41);
      v23 = v44;
      v42 = *(void (**)(char *, uint64_t))(v3 + 8);
      v42(v38, v2);
      v42(v8, v2);
    }
  }
  return v23;
}

uint64_t sub_100079C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.FavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F7D0);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_100079D5C, 0, 0);
}

uint64_t sub_100079D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 424);
  v50 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.favorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.FavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v50, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v50, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_100014A7C(*(_QWORD *)(v1 + 336), v1 + 88, &qword_10048D950);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_100014AC0(v1 + 88, v1 + 16);
        v35 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 568) = v35;
        *(_QWORD *)(v1 + 576) = static MainActor.shared.getter(v35);
        v36 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
        v31 = v37;
        *(_QWORD *)(v1 + 584) = v36;
        *(_QWORD *)(v1 + 592) = v37;
        v23 = sub_10007A540;
        v30 = v36;
        return swift_task_switch(v23, v30, v31);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_100008758(v1 + 88, &qword_10048D950);
      v18 = v17[3];
      *(_QWORD *)(v1 + 528) = v18;
      *(_QWORD *)(v1 + 536) = v17[4];
      *(_QWORD *)(v1 + 544) = sub_10000ABC8(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 552) = static MainActor.shared.getter(v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v22 = v21;
      v23 = sub_10007A45C;
LABEL_9:
      v30 = v20;
      v31 = v22;
      return swift_task_switch(v23, v30, v31);
    }
    if (v16 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v26 = *(_QWORD **)(v1 + 344);
      v27 = v26[3];
      *(_QWORD *)(v1 + 624) = v27;
      *(_QWORD *)(v1 + 632) = v26[4];
      *(_QWORD *)(v1 + 640) = sub_10000ABC8(v26, v27);
      v28 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 648) = static MainActor.shared.getter(v28);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v28, &protocol witness table for MainActor);
      v22 = v29;
      v23 = sub_10007A760;
      goto LABEL_9;
    }
    v38 = *(_QWORD *)(v1 + 464);
    v39 = *(_QWORD *)(v1 + 440);
    v40 = *(_QWORD *)(v1 + 448);
    v41 = *(_QWORD *)(v1 + 384);
    v42 = *(_QWORD *)(v1 + 368);
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v43(*(_QWORD *)(v1 + 392), v42);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    v43(v41, v42);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v24 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.favorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v24;
      *v24 = v1;
      v24[1] = sub_10007A128;
      return MusicLibrary.favorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v32 = *(_QWORD *)(v1 + 456);
    v33 = *(_QWORD *)(v1 + 440);
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v34(*(_QWORD *)(v1 + 464), v33);
    v34(v32, v33);
  }
  v44 = *(_QWORD *)(v1 + 456);
  v45 = *(_QWORD *)(v1 + 432);
  v46 = *(_QWORD *)(v1 + 408);
  v48 = *(_QWORD *)(v1 + 384);
  v47 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10007A128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10007A8E4;
  else
    v3 = sub_10007A18C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10007A18C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);

  sub_100014A7C(v0[41], (uint64_t)(v0 + 34), &qword_10048D958);
  v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v3 = v0[50];
    v2 = v0[51];
    v0[62] = v0[38];
    v0[63] = sub_10000ABC8(v0 + 34, v1);
    swift_storeEnumTagMultiPayload(v2, v3, 9);
    v4 = type metadata accessor for MainActor(0);
    v0[64] = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007A2A8, v5, v6);
  }
  else
  {
    sub_100008758((uint64_t)(v0 + 34), &qword_10048D958);
    v9 = (uint64_t (*)(uint64_t))((char *)&dword_100496630 + dword_100496630);
    v8 = (_QWORD *)swift_task_alloc(unk_100496634);
    v0[65] = v8;
    *v8 = v0;
    v8[1] = sub_10007A380;
    return v9(v0[42]);
  }
}

uint64_t sub_10007A2A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release(v0[64]);
  sub_100084534(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_10007A318, 0, 0);
}

uint64_t sub_10007A318()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t);

  sub_10000682C(v0 + 34);
  v3 = (uint64_t (*)(uint64_t))((char *)&dword_100496630 + dword_100496630);
  v1 = (_QWORD *)swift_task_alloc(unk_100496634);
  v0[65] = v1;
  *v1 = v0;
  v1[1] = sub_10007A380;
  return v3(v0[42]);
}

uint64_t sub_10007A380()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 520));
  return swift_task_switch(sub_10007A3D4, 0, 0);
}

uint64_t sub_10007A3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A45C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[67];
  swift_release(v0[69]);
  sub_1000DD89C(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[70] = v3;
  *v3 = v0;
  v3[1] = sub_10007A4E0;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[66], v0[67]);
}

uint64_t sub_10007A4E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 560));
  sub_1000149EC(v1);
  return swift_task_switch(sub_10007E594, 0, 0);
}

uint64_t sub_10007A540(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[75] = v2;
  v3 = swift_task_alloc(48);
  v1[76] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[77] = v4;
  *v4 = v1;
  v4[1] = sub_10007A604;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 83, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003AD1D0, sub_10007E59C, v3, &type metadata for Bool);
}

uint64_t sub_10007A604()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 608);
  v3 = *(_QWORD *)(*v0 + 600);
  swift_task_dealloc(*(_QWORD *)(*v0 + 616));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10007A674, *(_QWORD *)(v1 + 584), *(_QWORD *)(v1 + 592));
}

uint64_t sub_10007A674()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 576));
  return swift_task_switch(sub_10007A6B0, 0, 0);
}

uint64_t sub_10007A6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 376);
  sub_100014B08(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v7 = *(_QWORD *)(v0 + 456);
  v8 = *(_QWORD *)(v0 + 432);
  v9 = *(_QWORD *)(v0 + 408);
  v11 = *(_QWORD *)(v0 + 384);
  v10 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A760()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[79];
  swift_release(v0[81]);
  sub_1000DDA90(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[82] = v3;
  *v3 = v0;
  v3[1] = sub_10007A7E4;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[78], v0[79]);
}

uint64_t sub_10007A7E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 656));
  sub_1000149EC(v1);
  return swift_task_switch(sub_10007A844, 0, 0);
}

uint64_t sub_10007A844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 464);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 448);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 376) + 8))(*(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 368));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(_QWORD *)(v0 + 456);
  v5 = *(_QWORD *)(v0 + 432);
  v6 = *(_QWORD *)(v0 + 408);
  v8 = *(_QWORD *)(v0 + 384);
  v7 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 384);
  v5 = *(_QWORD *)(v0 + 392);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(v2, *(_QWORD *)(v0 + 440));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007A974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_10048F63C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000F894;
  return sub_100079C58(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_10007AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = sub_100005574(&qword_10048D510);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048D8E8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007AAE4, 0, 0);
}

uint64_t sub_10007AAE4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(10);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_100014A7C(*(_QWORD *)(v0 + 88), v4, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D8E8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_10000F7B4(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_100033420(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007ACB8, v19, v20);
  }
}

uint64_t sub_10007ACB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100033830(v5, v4, 5, 17, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10007E598, 0, 0);
}

uint64_t sub_10007AD8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_10048F64C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000F894;
  return sub_10007AA34(v7, v8, v9, v10, v2, v3);
}

uint64_t sub_10007AE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F7C8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoFavorite.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_10007AF74();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_10007AF68()
{
  return sub_10007D960((uint64_t (*)(_QWORD, uint64_t))sub_10007AE3C);
}

uint64_t sub_10007AF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void (*v20)(char *, char *, uint64_t);
  int v21;
  unint64_t v22;
  Swift::String v23;
  void *object;
  char *v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  Swift::String v39;
  void *v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v42 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v42 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v42 - v9;
  v11 = sub_100005574(&qword_10048F7C8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v42 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18((char *)&v42 - v16, v1, v11);
  v19 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v17, v11);
  if (v19 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v19 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v43 = 0;
      v44 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease(v44);
      v43 = 0xD000000000000019;
      v44 = 0x80000001003AE160;
      v18(v15, v1, v11);
      v23._countAndFlagsBits = String.init<A>(describing:)(v15, v11);
      object = v23._object;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(object);
      v22 = v43;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      return v22;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))(v17, v11);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v17, v2);
  v20 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v20(v8, v10, v2);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v8, v2);
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
    v22 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return v22;
  }
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0x6F76614620746F4ELL;
  }
  if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0xD000000000000018;
  }
  if (v21 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    if (v21 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0x6C20646572616853;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD00000000000001CLL;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000013;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000014;
      }
      else if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        return 0xD000000000000025;
      }
      else
      {
        v22 = 0x206E776F6E6B6E55;
        if (v21 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
        {
          (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
        }
        else
        {
          v43 = 0;
          v44 = 0xE000000000000000;
          v37 = v10;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease(v44);
          v43 = 0x206E776F6E6B6E55;
          v44 = 0xEF206E6F73616572;
          v38 = v42;
          v20(v42, v37, v2);
          v39._countAndFlagsBits = String.init<A>(describing:)(v38, v2);
          v40 = v39._object;
          String.append(_:)(v39);
          swift_bridgeObjectRelease(v40);
          v22 = v43;
          v41 = *(void (**)(char *, uint64_t))(v3 + 8);
          v41(v37, v2);
          v41(v8, v2);
        }
      }
      return v22;
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    return 0;
  }
  v26 = v10;
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v27 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100388F48);
  v29 = swift_getKeyPath(&unk_100388F70);
  static Published.subscript.getter(&v43, v27, KeyPath, v29);
  swift_release(KeyPath);
  swift_release(v29);
  v30 = v44;
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v34 = v48;
  v35 = v49;
  v36 = v50;
  swift_bridgeObjectRelease(v51);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v34);

  if ((v30 & 0x100) != 0)
    v22 = 0;
  else
    v22 = 0xD000000000000016;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
  return v22;
}

uint64_t sub_10007B5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  v8 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason(0);
  v7[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[48] = swift_task_alloc(v10);
  v7[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for Notice.Variant(0);
  v7[50] = v11;
  v7[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MusicLibrary.UndoFavoriteAction(0);
  v7[52] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[53] = v13;
  v7[54] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F7C8);
  v7[55] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[56] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[57] = swift_task_alloc(v16);
  v7[58] = swift_task_alloc(v16);
  return swift_task_switch(sub_10007B6B8, 0, 0);
}

uint64_t sub_10007B6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = *(_QWORD *)(v1 + 464);
  v3 = *(_QWORD *)(v1 + 440);
  v4 = *(_QWORD *)(v1 + 448);
  v5 = *(_QWORD *)(v1 + 432);
  v49 = *(_QWORD *)(v1 + 424);
  v50 = *(_QWORD *)(v1 + 456);
  v6 = *(_QWORD *)(v1 + 416);
  v8 = *(_QWORD *)(v1 + 352);
  v7 = *(_QWORD *)(v1 + 360);
  v9 = *(_QWORD *)(v1 + 320);
  static MusicLibraryAction<>.undoFavorite.getter(a1);
  MusicLibrary.supportedStatus<A, B>(for:action:)(v9, v5, v8, v6, *(_QWORD *)(v7 + 8), &protocol witness table for MusicLibrary.UndoFavoriteAction);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v50, v2, v3);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v50, v3);
  if (v10 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    v11 = *(_QWORD *)(v1 + 456);
    v13 = *(_QWORD *)(v1 + 384);
    v12 = *(_QWORD *)(v1 + 392);
    v14 = *(_QWORD *)(v1 + 368);
    v15 = *(_QWORD *)(v1 + 376);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 448) + 96))(v11, *(_QWORD *)(v1 + 440));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v12, v14);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v13, v14);
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_100014A7C(*(_QWORD *)(v1 + 336), v1 + 88, &qword_10048D950);
      if (*(_QWORD *)(v1 + 144) != 1)
      {
        sub_100014AC0(v1 + 88, v1 + 16);
        v35 = type metadata accessor for MainActor(0);
        *(_QWORD *)(v1 + 560) = v35;
        *(_QWORD *)(v1 + 568) = static MainActor.shared.getter(v35);
        v36 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
        v31 = v37;
        *(_QWORD *)(v1 + 576) = v36;
        *(_QWORD *)(v1 + 584) = v37;
        v23 = sub_10007BE10;
        v30 = v36;
        return swift_task_switch(v23, v30, v31);
      }
      v17 = *(_QWORD **)(v1 + 344);
      sub_100008758(v1 + 88, &qword_10048D950);
      v18 = v17[3];
      *(_QWORD *)(v1 + 520) = v18;
      *(_QWORD *)(v1 + 528) = v17[4];
      *(_QWORD *)(v1 + 536) = sub_10000ABC8(v17, v18);
      v19 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 544) = static MainActor.shared.getter(v19);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
      v22 = v21;
      v23 = sub_10007BD2C;
LABEL_9:
      v30 = v20;
      v31 = v22;
      return swift_task_switch(v23, v30, v31);
    }
    if (v16 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      v26 = *(_QWORD **)(v1 + 344);
      v27 = v26[3];
      *(_QWORD *)(v1 + 616) = v27;
      *(_QWORD *)(v1 + 624) = v26[4];
      *(_QWORD *)(v1 + 632) = sub_10000ABC8(v26, v27);
      v28 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 640) = static MainActor.shared.getter(v28);
      v20 = dispatch thunk of Actor.unownedExecutor.getter(v28, &protocol witness table for MainActor);
      v22 = v29;
      v23 = sub_10007BF80;
      goto LABEL_9;
    }
    v38 = *(_QWORD *)(v1 + 464);
    v39 = *(_QWORD *)(v1 + 440);
    v40 = *(_QWORD *)(v1 + 448);
    v41 = *(_QWORD *)(v1 + 384);
    v42 = *(_QWORD *)(v1 + 368);
    v43 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 376) + 8);
    v43(*(_QWORD *)(v1 + 392), v42);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    v43(v41, v42);
  }
  else
  {
    if (v10 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      v24 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.undoFavorite<A>(_:)[1]);
      *(_QWORD *)(v1 + 472) = v24;
      *v24 = v1;
      v24[1] = sub_10007BA84;
      return MusicLibrary.undoFavorite<A>(_:)(*(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
    }
    v32 = *(_QWORD *)(v1 + 456);
    v33 = *(_QWORD *)(v1 + 440);
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 448) + 8);
    v34(*(_QWORD *)(v1 + 464), v33);
    v34(v32, v33);
  }
  v44 = *(_QWORD *)(v1 + 456);
  v45 = *(_QWORD *)(v1 + 432);
  v46 = *(_QWORD *)(v1 + 408);
  v48 = *(_QWORD *)(v1 + 384);
  v47 = *(_QWORD *)(v1 + 392);
  swift_task_dealloc(*(_QWORD *)(v1 + 464));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10007BA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 472);
  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10007A8E4;
  else
    v3 = sub_10007BAE8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10007BAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_100014A7C(*(_QWORD *)(v0 + 328), v0 + 272, &qword_10048D958);
  v1 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 488) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 400);
    v2 = *(_QWORD *)(v0 + 408);
    *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 504) = sub_10000ABC8((_QWORD *)(v0 + 272), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 10);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007BC28, v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
    sub_100008758(v0 + 272, &qword_10048D958);
    v8 = *(_QWORD *)(v0 + 456);
    v9 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 408);
    v12 = *(_QWORD *)(v0 + 384);
    v11 = *(_QWORD *)(v0 + 392);
    swift_task_dealloc(*(_QWORD *)(v0 + 464));
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10007BC28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[61];
  v1 = v0[62];
  v3 = v0[51];
  swift_release(v0[64]);
  sub_100084534(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_10007BC98, 0, 0);
}

uint64_t sub_10007BC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 440));
  sub_10000682C((_QWORD *)(v0 + 272));
  v1 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  swift_task_dealloc(*(_QWORD *)(v0 + 464));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007BD2C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[66];
  swift_release(v0[68]);
  sub_1000DD89C(5, (uint64_t)(v0 + 27));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[69] = v3;
  *v3 = v0;
  v3[1] = sub_10007BDB0;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 27, v0[65], v0[66]);
}

uint64_t sub_10007BDB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 552));
  sub_1000149EC(v1);
  return swift_task_switch(sub_10007E594, 0, 0);
}

uint64_t sub_10007BE10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[74] = v2;
  v3 = swift_task_alloc(48);
  v1[75] = v3;
  *(_BYTE *)(v3 + 16) = 5;
  *(_QWORD *)(v3 + 24) = v1 + 2;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[76] = v4;
  *v4 = v1;
  v4[1] = sub_10007BED4;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 82, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003AD1D0, sub_100014AFC, v3, &type metadata for Bool);
}

uint64_t sub_10007BED4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 600);
  v3 = *(_QWORD *)(*v0 + 592);
  swift_task_dealloc(*(_QWORD *)(*v0 + 608));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10007BF44, *(_QWORD *)(v1 + 576), *(_QWORD *)(v1 + 584));
}

uint64_t sub_10007BF44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 568));
  return swift_task_switch(sub_10007A6B0, 0, 0);
}

uint64_t sub_10007BF80()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  int *v5;

  v1 = v0[78];
  swift_release(v0[80]);
  sub_1000DDA90(0, (uint64_t)(v0 + 20));
  v2 = *(int **)(v1 + 8);
  v5 = (int *)((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  v0[81] = v3;
  *v3 = v0;
  v3[1] = sub_10007C004;
  return ((uint64_t (*)(_QWORD *, _QWORD, _QWORD))v5)(v0 + 20, v0[77], v0[78]);
}

uint64_t sub_10007C004()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 648));
  sub_1000149EC(v1);
  return swift_task_switch(sub_10007A844, 0, 0);
}

uint64_t sub_10007C068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  if (*(_QWORD *)(v0 + v5 + 24))
    sub_10000682C((_QWORD *)(v0 + v5));
  v8 = v0 + v6;
  if (*(_QWORD *)(v0 + v6 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy(v0 + v6);
    v9 = *(unsigned __int8 *)(v8 + 48);
    if (v9 != 255)
      sub_1000137A4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
    if (*(_QWORD *)(v8 + 56))
      swift_release(*(_QWORD *)(v8 + 64));
  }
  v10 = (v6 + 79) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 40;
  sub_10000682C((_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11, v3 | 7);
}

uint64_t sub_10007C154()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0[4];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + v6;
  v11 = (uint64_t)v0 + v7;
  v12 = (uint64_t)v0 + ((v7 + 79) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_10048F66C);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000F894;
  return sub_10007B5B4(v8, v9, v10, v11, v12, v2, v3);
}

uint64_t sub_10007C214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  v7 = sub_100005574(&qword_10048D510);
  v6[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048D8E8);
  v6[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Actions.MetricsReportingContext(0);
  v6[17] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007C2C4, 0, 0);
}

uint64_t sub_10007C2C4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1)
    v1(55);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 128);
  sub_100014A7C(*(_QWORD *)(v0 + 88), v4, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 128), &qword_10048D8E8);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 104);
    sub_10000F7B4(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v9);
    *(_QWORD *)(v0 + 168) = v10;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v12, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v9);
    *(_QWORD *)(inited + 40) = v14;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 176) = sub_100033420(inited);
    *(_QWORD *)(v0 + 184) = v15;
    *(_QWORD *)(v0 + 192) = v16;
    *(_WORD *)(v0 + 208) = v17;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v18 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 200) = static MainActor.shared.getter(v18);
    v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007C498, v19, v20);
  }
}

uint64_t sub_10007C498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v6 = *(uint64_t **)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 120);
  v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release(*(_QWORD *)(v0 + 200));
  sub_100033830(v5, v4, 5, 18, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10007C568, 0, 0);
}

uint64_t sub_10007C568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_100006798(*(_QWORD *)(v0 + 152), type metadata accessor for Actions.MetricsReportingContext);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007C5C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  unint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  if (*((_QWORD *)v0 + 4))
    swift_release(*((_QWORD *)v0 + 5));
  v9 = &v0[v4];
  v10 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(&v0[v4], 1, v10))
  {
    v21 = v8;
    v22 = v5;
    v11 = *((_QWORD *)v9 + 1);
    if (v11 >= 0xA)
      swift_bridgeObjectRelease(v11);
    v12 = &v9[v10[5]];
    v13 = (int *)type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease(*((_QWORD *)v12 + 1));
      swift_bridgeObjectRelease(*((_QWORD *)v12 + 3));
      v20 = &v12[v13[6]];
      v14 = type metadata accessor for URL(0);
      v18 = *(_QWORD *)(v14 - 8);
      v19 = v14;
      if (!(*(unsigned int (**)(char *, uint64_t))(v18 + 48))(v20, 1))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v19);
      swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[7]]);
      swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[8] + 8]);
      swift_bridgeObjectRelease(*(_QWORD *)&v12[v13[10] + 8]);
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[6] + 8]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[7]]);
    swift_bridgeObjectRelease(*(_QWORD *)&v9[v10[8]]);
    v8 = v21;
    v5 = v22;
  }
  v15 = (v4 + v5 + v7) & ~v7;
  v16 = v15 + v8;
  (*(void (**)(char *, uint64_t))(v6 + 8))(&v0[v15], v1);
  return swift_deallocObject(v0, v16, v3 | v7 | 7);
}

uint64_t sub_10007C794()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0[4];
  v8 = v0[5];
  v9 = (uint64_t)v0 + v5;
  v10 = (uint64_t)v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v11 = (_QWORD *)swift_task_alloc(dword_10048F67C);
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_10000F894;
  return sub_10007C214(v7, v8, v9, v10, v2, v3);
}

uint64_t Actions.Favorite.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x657469726F766146, 0xE800000000000000);
}

uint64_t (*Actions.Favorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004455C0, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_1004455E8, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F228;
}

uint64_t sub_10007C8D4(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x657469726F766146, 0xE800000000000000);
}

uint64_t (*sub_10007C8EC())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445B50, 32, 7);
  *(_QWORD *)(v0 + 16) = 1918989427;
  *(_QWORD *)(v0 + 24) = 0xE400000000000000;
  v1 = swift_allocObject(&unk_100445B78, 32, 7);
  *(_QWORD *)(v1 + 16) = 1918989427;
  *(_QWORD *)(v1 + 24) = 0xE400000000000000;
  return sub_10000F88C;
}

uint64_t Actions.UndoFavorite.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*Actions.UndoFavorite.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445610, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_100445638, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_10000F88C;
}

uint64_t sub_10007CA0C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x766146206F646E55, 0xED0000657469726FLL);
}

uint64_t (*sub_10007CA30())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445B00, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v0 + 24) = 0xEA00000000006873;
  v1 = swift_allocObject(&unk_100445B28, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x616C732E72617473;
  *(_QWORD *)(v1 + 24) = 0xEA00000000006873;
  return sub_10000F88C;
}

uint64_t sub_10007CAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 54, (uint64_t)sub_10000F930, (uint64_t)&unk_10048F6B8, (uint64_t)&unk_10048F6C0, a2);
}

uint64_t sub_10007CAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005A548(a1, 56, (uint64_t)sub_10005B6C0, (uint64_t)&unk_10048F6E8, (uint64_t)&unk_10048F6F0, a2);
}

uint64_t sub_10007CAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.DislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F7C0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.dislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.DislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_10007CC2C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_10007CC20()
{
  return sub_10007D960((uint64_t (*)(_QWORD, uint64_t))sub_10007CAF4);
}

uint64_t sub_10007CC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  unint64_t v19;
  unint64_t v20;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F7C0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v19 - v11, v1, v6);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v14 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    v15 = sub_10007D5B4((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v14 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v19 = 0;
    v20 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease(v20);
    v19 = 0xD000000000000019;
    v20 = 0x80000001003AE160;
    v13(v10, v1, v6);
    v16._countAndFlagsBits = String.init<A>(describing:)(v10, v6);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
    v15 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v15;
}

uint64_t sub_10007CE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  _QWORD *v10;

  v5[7] = a3;
  v9 = type metadata accessor for Notice.Variant(0);
  v5[8] = v9;
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_dislike<A>(_:)[1]);
  v5[10] = v10;
  *v10 = v5;
  v10[1] = sub_10007CEB4;
  return MusicLibrary.new_dislike<A>(_:)(a2, a4, a5);
}

uint64_t sub_10007CEB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (!v0)
    return swift_task_switch(sub_10007CF24, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v2 + 72));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_10007CF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_100014A7C(*(_QWORD *)(v0 + 56), v0 + 16, &qword_10048D958);
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 88) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 104) = sub_10000ABC8((_QWORD *)(v0 + 16), v1);
    swift_storeEnumTagMultiPayload(v2, v3, 11);
    v4 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 112) = static MainActor.shared.getter(v4);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007D014, v5, v6);
  }
  else
  {
    sub_100008758(v0 + 16, &qword_10048D958);
    swift_task_dealloc(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10007D014()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[9];
  swift_release(v0[14]);
  sub_100084534(v3, 0, v2, v1);
  sub_100006798(v3, type metadata accessor for Notice.Variant);
  return swift_task_switch(sub_10007D084, 0, 0);
}

uint64_t sub_10007D084()
{
  uint64_t v0;

  sub_10000682C((_QWORD *)(v0 + 16));
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007D0C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v6);
  if (*(_QWORD *)(v0 + v5 + 24))
    sub_10000682C((_QWORD *)(v0 + v5));
  return swift_deallocObject(v0, v5 + 40, v3 | 7);
}

uint64_t sub_10007D140()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0[4];
  v7 = (uint64_t)v0 + v5;
  v8 = (uint64_t)v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)swift_task_alloc(dword_10048F69C);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000EA88;
  return sub_10007CE1C(v6, v7, v8, v2, v3);
}

uint64_t sub_10007D1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007D284, 0, 0);
}

uint64_t sub_10007D284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007D444, v18, v19);
  }
}

uint64_t sub_10007D444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 19, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005A9F0, 0, 0);
}

uint64_t sub_10007D518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048F6AC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_10007D1D8(v7, v8, v2, v3);
}

uint64_t sub_10007D5B4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  Swift::String v13;
  void *object;
  uint64_t v15;
  unint64_t v16;

  v2 = 0xD000000000000010;
  v3 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v15 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v15 - v8, a1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.unsupportedType(_:)
    && v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.alreadyDisliked(_:))
  {
    if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenFavorited(_:))
    {
      return 0xD00000000000001DLL;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenLiked(_:))
    {
      return 0xD000000000000019;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      return 0xD000000000000015;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.networkRequired(_:))
    {
      if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        return 0x6C20646572616853;
      }
      else
      {
        v15 = 0;
        v16 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease(v16);
        v15 = 0x206E776F6E6B6E55;
        v16 = 0xEF206E6F73616572;
        v10(v7, a1, v3);
        v13._countAndFlagsBits = String.init<A>(describing:)(v7, v3);
        object = v13._object;
        String.append(_:)(v13);
        swift_bridgeObjectRelease(object);
        v2 = v15;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
  return v2;
}

uint64_t sub_10007D828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = type metadata accessor for MusicLibrary.UndoDislikeAction(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F7B8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoDislike.getter(v13);
  MusicLibrary.supportedStatus<A, B>(for:action:)(a2, v10, a3, v7, *(_QWORD *)(a4 + 8), &protocol witness table for MusicLibrary.UndoDislikeAction);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = sub_10007D984();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v16;
}

uint64_t sub_10007D954()
{
  return sub_10007D960((uint64_t (*)(_QWORD, uint64_t))sub_10007D828);
}

uint64_t sub_10007D960(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 32), v1 + ((v2 + 40) & ~v2));
}

uint64_t sub_10007D984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  Swift::String v19;
  void *object;
  unint64_t v22;
  unint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v22 - v7;
  v9 = sub_100005574(&qword_10048F7B8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v22 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v22 - v14, v1, v9);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v15, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v18 = String.init<A>(describing:)(v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else if (v17 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    v22 = 0;
    v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease(v23);
    v22 = 0xD000000000000019;
    v23 = 0x80000001003AE160;
    v16(v13, v1, v9);
    v19._countAndFlagsBits = String.init<A>(describing:)(v13, v9);
    object = v19._object;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(object);
    v18 = v22;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  return v18;
}

uint64_t sub_10007DBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_10000F894;
  return MusicLibrary.new_undoDislike<A>(_:)(a2, a3, a4);
}

uint64_t sub_10007DC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007DC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v5 = v0 + ((v4 + 40) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_10048F6CC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.new_undoDislike<A>(_:)[1]);
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_10000F894;
  return MusicLibrary.new_undoDislike<A>(_:)(v5, v2, v3);
}

uint64_t sub_10007DD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_100005574(&qword_10048D510);
  v4[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D8E8);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Actions.MetricsReportingContext(0);
  v4[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10007DDD8, 0, 0);
}

uint64_t sub_10007DDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100014A7C(*(_QWORD *)(v0 + 72), v3, &qword_10048D8E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(*(_QWORD *)(v0 + 112), &qword_10048D8E8);
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 136));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 88);
    sub_10000F7B4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    *(_QWORD *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(_QWORD *)(v0 + 152) = v9;
    v10 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v11 = sub_100005574(&qword_10048D930);
    inited = swift_initStackObject(v11, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = MusicItem.metricsContentType.getter(v8);
    *(_QWORD *)(inited + 40) = v13;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(v0 + 160) = sub_100033420(inited);
    *(_QWORD *)(v0 + 168) = v14;
    *(_QWORD *)(v0 + 176) = v15;
    *(_WORD *)(v0 + 192) = v16;
    swift_setDeallocating(inited);
    swift_arrayDestroy(inited + 32, *(_QWORD *)(inited + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
    v17 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 184) = static MainActor.shared.getter(v17);
    v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    return swift_task_switch(sub_10007DF98, v18, v19);
  }
}

uint64_t sub_10007DF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(void **)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(uint64_t **)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 104);
  v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 184));
  sub_100033830(v5, v4, 5, 20, v7, v3, v2, v1, v8, v6);
  sub_10000F7F8(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease(v4);
  sub_100008758(v7, &qword_10048D510);
  return swift_task_switch(sub_10005B6C8, 0, 0);
}

uint64_t sub_10007E06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v7 = v0 + v5;
  v8 = v0 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6);
  v9 = (_QWORD *)swift_task_alloc(dword_10048F6DC);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_10000F894;
  return sub_10007DD2C(v7, v8, v2, v3);
}

uint64_t Actions.SuggestLess.Context.menuItemTitle.getter()
{
  return sub_10005A164(0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*Actions.SuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445660, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_100445688, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10000F88C;
}

uint64_t sub_10007E1B4(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x2074736567677553, 0xEC0000007373654CLL);
}

uint64_t (*sub_10007E1D4())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445AB0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_100445AD8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10000F88C;
}

uint64_t (*Actions.UndoSuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_1004456B0, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_1004456D8, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10000F88C;
}

uint64_t (*sub_10007E2F0())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445A60, 32, 7);
  *(_QWORD *)(v0 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v0 + 24) = 0xEF6E776F6473626DLL;
  v1 = swift_allocObject(&unk_100445A88, 32, 7);
  *(_QWORD *)(v1 + 16) = 0x7568742E646E6168;
  *(_QWORD *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_10000F88C;
}

uint64_t _s9MusicCore7ActionsO15UndoSuggestLessO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001003AE140);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

ValueMetadata *type metadata accessor for Actions.Favorite()
{
  return &type metadata for Actions.Favorite;
}

ValueMetadata *type metadata accessor for Actions.Favorite.Context()
{
  return &type metadata for Actions.Favorite.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite()
{
  return &type metadata for Actions.UndoFavorite;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite.Context()
{
  return &type metadata for Actions.UndoFavorite.Context;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess()
{
  return &type metadata for Actions.SuggestLess;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess.Context()
{
  return &type metadata for Actions.SuggestLess.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess()
{
  return &type metadata for Actions.UndoSuggestLess;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess.Context()
{
  return &type metadata for Actions.UndoSuggestLess.Context;
}

uint64_t sub_10007E568()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t (*Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a8;
  v37 = a3;
  v32 = a1;
  v33 = a7;
  v38 = a4;
  v39 = a5;
  v35 = a2;
  v11 = *(_QWORD *)(a6 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(a1);
  v34 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v32 - v14;
  (*(void (**)(char *))(v11 + 16))((char *)&v32 - v14);
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = (v16 + 48) & ~v16;
  v18 = v16 | 7;
  v19 = (_QWORD *)swift_allocObject(&unk_100445BC0, v17 + v12, v16 | 7);
  v19[2] = a6;
  v19[3] = a7;
  v20 = v36;
  v19[4] = v36;
  v19[5] = a2;
  v21 = (char *)v19 + v17;
  v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v22(v21, v15, a6);
  v23 = v34;
  v22(v34, v32, a6);
  v24 = (v16 + 56) & ~v16;
  v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject(&unk_100445BE8, v26 + 72, v18);
  v28 = v33;
  *((_QWORD *)v27 + 2) = a6;
  *((_QWORD *)v27 + 3) = v28;
  v29 = v37;
  *((_QWORD *)v27 + 4) = v20;
  *((_QWORD *)v27 + 5) = v29;
  *((_QWORD *)v27 + 6) = v38;
  v22(&v27[v24], v23, a6);
  v30 = v35;
  *(_QWORD *)&v27[v25] = v35;
  sub_100014AC0(v39, (uint64_t)&v27[v26]);
  swift_retain(v30);
  return sub_10007EDE0;
}

uint64_t static Actions.RateSong.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 32) = 38;
  *(_QWORD *)(a5 + 40) = sub_10000F930;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = 0x4014000000000000;
  *(_QWORD *)(a5 + 64) = &unk_10048F7E8;
  *(_QWORD *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = &unk_10048F7F0;
  *(_QWORD *)(a5 + 88) = 0;
  swift_retain(a2);
  return swift_retain(a4);
}

uint64_t sub_10007E7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 32) = 38;
  *(_QWORD *)(a2 + 40) = sub_10000F930;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0x4014000000000000;
  *(_QWORD *)(a2 + 64) = &unk_10048F7E8;
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = &unk_10048F7F0;
  *(_QWORD *)(a2 + 88) = 0;
  swift_retain(v3);
  return swift_retain(v2);
}

uint64_t Actions.RateSong.Context.menuItemTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x6E6F532065746152, 0xAC000000A680E267);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t (*Actions.RateSong.Context.menuItemImage.getter())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445C10, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x80000001003AE2E0;
  v1 = swift_allocObject(&unk_100445C38, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x80000001003AE2E0;
  return sub_10000F228;
}

uint64_t (*sub_10007EA4C())()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_100445D30, 32, 7);
  *(_QWORD *)(v0 + 16) = 0xD000000000000017;
  *(_QWORD *)(v0 + 24) = 0x80000001003AE2E0;
  v1 = swift_allocObject(&unk_100445D58, 32, 7);
  *(_QWORD *)(v1 + 16) = 0xD000000000000017;
  *(_QWORD *)(v1 + 24) = 0x80000001003AE2E0;
  return sub_10000F88C;
}

unint64_t sub_10007EAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a2;
  v36 = a3;
  v5 = type metadata accessor for MusicLibrary.AddAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10048D988);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary(0);
  v13 = static MusicLibrary.shared.getter();
  v14 = static MusicLibrary.== infix(_:_:)(a1, v13);
  swift_release(v13);
  if ((v14 & 1) == 0)
    return 0xD00000000000001DLL;
  v30 = v6;
  v31 = v5;
  v16 = v35;
  v15 = v36;
  v32 = v10;
  v33 = a1;
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "BOOLForKey:", v18);

  if (!v19)
    return 0xD000000000000018;
  static MusicLibraryAction<>.add.getter(v20);
  v21 = v31;
  MusicLibrary.supportedStatus<A, B>(for:action:)(v16, v8, v15, v31, v34, &protocol witness table for MusicLibrary.AddAction);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v21);
  v22 = v32;
  v23 = 0xD000000000000011;
  if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v12, v9) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v22 + 96))(v12, v9);
    v24 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v12, v24);
    v27 = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
    if (v26 == v27)
      return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  }
  return v23;
}

uint64_t sub_10007ED74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

unint64_t sub_10007EDE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_10007EAD0(v0[5], (uint64_t)v0 + ((v2 + 48) & ~v2), v1, v0[3]);
}

id NSUserDefaults.showStarRatings.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

uint64_t sub_10007EE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  v9 = *(_QWORD *)(a6 - 8);
  v8[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v8[17] = v10;
  v8[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  v8[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v8[20] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[21] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[22] = swift_task_alloc(v14);
  v8[23] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v8[24] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_10007EF50, v16, v17);
}

uint64_t sub_10007EF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  __int128 v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 192));
  String.LocalizationValue.init(stringLiteral:)(0x7461522072617453, 0xEB00000000676E69);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v5 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v10, v9, 0, 0, 256);
  v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v13, 0, 1);

  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v15 = *(_QWORD *)(v0 + 80);
  v16 = *(uint64_t (**)(uint64_t))(v0 + 64);
  v17 = qword_1004A2C90;
  swift_bridgeObjectRetain();
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v39 = (id)objc_opt_self(UIAlertAction);
  v19 = objc_msgSend(v39, "actionWithTitle:style:handler:", v18, 1, 0);

  v44 = v19;
  objc_msgSend(v14, "addAction:", v19);
  v20 = (void *)v16(v15);
  v38 = v21;
  v40 = v14;
  if (qword_10048CE48 != -1)
    swift_once(&qword_10048CE48, sub_1001ECBAC);
  v41 = *(_QWORD *)(v0 + 184);
  v42 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 144);
  v43 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 88);
  v27 = qword_1004A2C80;
  v37 = *(_OWORD *)(v0 + 104);
  v28 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 16))(v22, *(_QWORD *)(v0 + 80), v28);
  v29 = *(unsigned __int8 *)(v23 + 80);
  v30 = (v29 + 64) & ~v29;
  v31 = swift_allocObject(&unk_100445D80, v30 + v24, v29 | 7);
  *(_OWORD *)(v31 + 16) = v37;
  *(_QWORD *)(v31 + 32) = v25;
  *(_QWORD *)(v31 + 40) = v20;
  *(_QWORD *)(v31 + 48) = v38;
  *(_QWORD *)(v31 + 56) = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v31 + v30, v22, v28);
  swift_bridgeObjectRetain();
  v32 = v20;
  swift_retain(v26);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)(v0 + 48) = sub_10007FBBC;
  *(_QWORD *)(v0 + 56) = v31;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_100093320;
  *(_QWORD *)(v0 + 40) = &unk_100445D98;
  v34 = _Block_copy((const void *)(v0 + 16));
  v35 = objc_msgSend(v39, "actionWithTitle:style:handler:", v33, 0, v34, swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  _Block_release(v34);

  objc_msgSend(v40, "addAction:", v35);
  objc_msgSend(v40, "setPreferredAction:", v35);
  objc_msgSend(v40, "setContentViewController:", v32);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v40, 1, (id)0xF, (void **)1, 0, 0);

  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007F380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v5));
  v8 = v0 + v6;
  swift_unknownObjectWeakDestroy(v0 + v6);
  v9 = *(unsigned __int8 *)(v0 + v6 + 48);
  if (v9 != 255)
    sub_1000137A4(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v6 + 72, v3 | 7);
}

uint64_t sub_10007F440()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v2 = v0[2];
  v3 = v0[3];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0[4];
  v8 = v0[5];
  v9 = v0[6];
  v10 = (uint64_t)v0 + v5;
  v11 = *(_QWORD *)((char *)v0 + v6);
  v12 = (uint64_t)v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)swift_task_alloc(dword_10048F7DC);
  *(_QWORD *)(v1 + 16) = v13;
  *v13 = v1;
  v13[1] = sub_10000EA88;
  return sub_10007EE60(v8, v9, v10, v11, v12, v2, v3, v7);
}

ValueMetadata *type metadata accessor for Actions.RateSong()
{
  return &type metadata for Actions.RateSong;
}

ValueMetadata *type metadata accessor for Actions.RateSong.Context()
{
  return &type metadata for Actions.RateSong.Context;
}

uint64_t sub_10007F51C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10007F540(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;

  v29 = a7;
  v30 = a8;
  v13 = *(_QWORD *)(a6 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(a1);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, a6);
  type metadata accessor for MainActor(0);
  v20 = a2;
  v21 = swift_retain(a4);
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = (v23 + 80) & ~v23;
  v25 = (char *)swift_allocObject(&unk_100445DD0, v24 + v14, v23 | 7);
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = &protocol witness table for MainActor;
  v26 = v29;
  *((_QWORD *)v25 + 4) = a6;
  *((_QWORD *)v25 + 5) = v26;
  *((_QWORD *)v25 + 6) = v30;
  *((_QWORD *)v25 + 7) = v20;
  *((_QWORD *)v25 + 8) = a3;
  *((_QWORD *)v25 + 9) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v25[v24], v15, a6);
  v27 = sub_1000C66A8((uint64_t)v18, (uint64_t)&unk_10048F830, (uint64_t)v25);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_10007F6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v8[8] = v15;
  v8[9] = v16;
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  v9 = *(_QWORD *)(a8 - 8);
  v8[10] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[11] = swift_task_alloc(v10);
  v8[12] = swift_task_alloc(v10);
  v11 = type metadata accessor for MainActor(0);
  v8[13] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v8[14] = v12;
  v8[15] = v13;
  return swift_task_switch(sub_10007F778, v12, v13);
}

uint64_t sub_10007F778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  double v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[8];
  v2 = v0[4];
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  v0[16] = v4;
  v5 = (double)v4 / 5.0;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.setUserRating<A>(_:for:)[1]);
  v0[17] = v6;
  v7 = *(_QWORD *)(v1 + 8);
  *v6 = v0;
  v6[1] = sub_10007F80C;
  return MusicLibrary.setUserRating<A>(_:for:)(v0[6], v0[7], v7, v0[9], v5);
}

uint64_t sub_10007F80C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10007F8AC;
  else
    v4 = sub_10007F86C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_10007F86C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007F8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  swift_release(*(_QWORD *)(v0 + 104));
  if (qword_10048C590 != -1)
    swift_once(&qword_10048C590, sub_100086650);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v7, (uint64_t)static Logger.actions);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v3, v6, v5);
  swift_errorRetain(v2);
  v9 = swift_errorRetain(v2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.error.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 144);
  if (v12)
  {
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = (double)*(uint64_t *)(v0 + 128) / 5.0;
    v18 = swift_slowAlloc(32, -1);
    v19 = swift_slowAlloc(64, -1);
    v33 = v19;
    *(_DWORD *)v18 = 134349570;
    *(double *)(v18 + 4) = v17;
    *(_WORD *)(v18 + 12) = 2082;
    v8(v15, v14, v16);
    v20 = (char *)String.init<A>(describing:)(v15, v16);
    v22 = v21;
    *(_QWORD *)(v18 + 14) = sub_100019400(v20, v21, &v33);
    swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v14, v16);
    *(_WORD *)(v18 + 22) = 2082;
    *(_QWORD *)(v0 + 16) = v13;
    swift_errorRetain(v13);
    v23 = sub_100005574((uint64_t *)&unk_1004911F0);
    v24 = (char *)String.init<A>(describing:)(v0 + 16, v23);
    v26 = v25;
    *(_QWORD *)(v18 + 24) = sub_100019400(v24, v25, &v33);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to set userRating=%{public}f for item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v13);
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 80);
    v27 = *(_QWORD *)(v0 + 88);
    v29 = *(_QWORD *)(v0 + 56);
    swift_errorRelease(*(_QWORD *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  v30 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10007FB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10007FBBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_10007F540(a1, *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3), v2, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10007FBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10007FBF0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10007FBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007FC74(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = v1[4];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = (uint64_t)v1 + ((v4 + 80) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10048F82C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000EA88;
  return sub_10007F6CC(a1, v5, v6, v7, v8, v9, v10, v3);
}

void static Notice.variant(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  char *v18;
  _QWORD v19[14];

  v2 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v2);
  v3 = sub_100005574(&qword_1004916E0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = sub_100005574(&qword_10048F838);
  v6 = __chkstk_darwin(v5);
  v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  v19[10] = (char *)v19 - v8;
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v19[7] = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0);
  v19[8] = *(_QWORD *)(v11 - 8);
  v19[9] = v11;
  v12 = __chkstk_darwin(v11);
  v19[6] = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(a1, (uint64_t)v16, v17);
  v18 = (char *)sub_10007FF5C + 4 * word_100388FF8[swift_getEnumCaseMultiPayload(v16, v14)];
  __asm { BR              X10 }
}

uint64_t sub_10007FF5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void (*v18)(_QWORD *, uint64_t, uint64_t, uint64_t);
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v8 - 112) = *v4;
  *(_QWORD *)(v8 - 152) = v4[1];
  v9 = sub_100005574(&qword_10048F850);
  v10 = *(_QWORD *)((char *)v4 + *(int *)(v9 + 64));
  sub_100081F38((uint64_t)v4 + *(int *)(v9 + 48), v5);
  Notice.Variant.id.getter();
  *(_QWORD *)(v8 - 168) = v12;
  *(_QWORD *)(v8 - 160) = v11;
  sub_100014A7C(v5, v2, &qword_1004916E0);
  v13 = type metadata accessor for Artwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v2, 1, v13) == 1)
  {
    sub_100008758(v2, &qword_1004916E0);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 1, 1, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v1, v2, v13);
    v15 = type metadata accessor for Notice.Thumbnail(0);
    swift_storeEnumTagMultiPayload(v1, v15, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v1, 0, 1, v15);
  }
  type metadata accessor for Notice.Thumbnail(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v1, 1, v15);
  *(_QWORD *)(v8 - 176) = v15;
  if (v17 == 1)
  {
    *v6 = Image.init(_internalSystemName:)(0x6461622E74786574, 0xEF73756C702E6567);
    swift_storeEnumTagMultiPayload(v6, v15, 0);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
    sub_100008758(v1, &qword_10048F838);
  }
  else
  {
    sub_100081F80(v1, (uint64_t)v6);
    v18 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v18(v6, 0, 1, v15);
  }
  ((void (*)(uint64_t, uint64_t))String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:))(14, 1);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  *(_QWORD *)(v8 - 96) = v10;
  ((void (*)(uint64_t, uint64_t, unint64_t, void *, void *))String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:))(v8 - 96, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v20._countAndFlagsBits = 0x297328676E6F7320;
  v20._object = (void *)0xEE00646564646120;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  ((void (*)(uint64_t))String.LocalizationValue.init(stringInterpolation:))(v7);
  v22 = *(_QWORD *)(v8 - 128);
  v21 = *(_QWORD *)(v8 - 120);
  v23 = *(_QWORD *)(v8 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v3, v21);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v24 = qword_1004A1DA0;
  v25 = (id)qword_1004A1DA0;
  v26 = *(_QWORD *)(v8 - 136);
  static Locale.current.getter(v25);
  v27 = String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v24, v26, 0, 0, 256);
  *(_QWORD *)(v8 - 144) = v28;
  *(_QWORD *)(v8 - 136) = v27;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v3, v21);
  v29 = (int *)type metadata accessor for Notice(0);
  v30 = (uint64_t)v0 + v29[5];
  v18((_QWORD *)v30, 1, 1, *(_QWORD *)(v8 - 176));
  v31 = (_QWORD *)((char *)v0 + v29[7]);
  *v31 = 0;
  v31[1] = 0;
  v32 = (_QWORD *)((char *)v0 + v29[8]);
  *v32 = 0;
  v32[1] = 0;
  v33 = (char *)v0 + v29[9];
  *(_QWORD *)v33 = 0;
  v33[8] = 1;
  v34 = v29[10];
  *((_BYTE *)v0 + v34) = 1;
  v35 = *(_QWORD *)(v8 - 168);
  *v0 = *(_QWORD *)(v8 - 160);
  v0[1] = v35;
  sub_100081E80((uint64_t)v6, v30);
  v36 = (_QWORD *)((char *)v0 + v29[6]);
  v37 = *(_QWORD *)(v8 - 152);
  *v36 = *(_QWORD *)(v8 - 112);
  v36[1] = v37;
  swift_bridgeObjectRelease(v31[1]);
  v38 = *(_QWORD *)(v8 - 144);
  *v31 = *(_QWORD *)(v8 - 136);
  v31[1] = v38;
  sub_10003A5C8(*v32, v32[1]);
  *v32 = 0;
  v32[1] = 0;
  *(_QWORD *)v33 = 0;
  v33[8] = 0;
  *((_BYTE *)v0 + v34) = 1;
  return sub_100008758(v5, &qword_1004916E0);
}

uint64_t Notice.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Notice(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 20), a1, &qword_10048F838);
}

uint64_t Notice.thumbnail.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Notice(0) + 20);
  return sub_100081E80(a1, v3);
}

CFRange (__swiftcall *Notice.thumbnail.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.message.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Notice.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Notice.message.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.headnote.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Notice.headnote.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Notice(0) + 28));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Notice.headnote.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.link.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Notice(0) + 32));
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t Notice.link.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t result;

  v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for Notice(0) + 32));
  result = sub_10003A5C8(*v5, v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Notice.link.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.hapticFeedback.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Notice(0) + 36));
}

uint64_t Notice.hapticFeedback.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Notice(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

CFRange (__swiftcall *Notice.hapticFeedback.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.isDismissable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Notice(0) + 40));
}

uint64_t Notice.isDismissable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Notice(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

CFRange (__swiftcall *Notice.isDismissable.modify())(__C::_NSRange)
{
  type metadata accessor for Notice(0);
  return CFRange.init(_:);
}

uint64_t Notice.init(id:image:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = a8;
  v35 = a5;
  v36 = a6;
  v33 = a2;
  v34 = a4;
  v40 = a12;
  v38 = a7;
  v39 = a11;
  v37 = a10;
  v15 = sub_100005574(&qword_10048F838);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a3;
  v18 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  v19 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 0, 1, v18);
  v20 = (int *)type metadata accessor for Notice(0);
  v21 = (uint64_t)a9 + v20[5];
  v19((_QWORD *)v21, 1, 1, v18);
  v22 = (_QWORD *)((char *)a9 + v20[7]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (_QWORD *)((char *)a9 + v20[8]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (char *)a9 + v20[9];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = v20[10];
  *((_BYTE *)a9 + v25) = 1;
  v26 = v33;
  *a9 = a1;
  a9[1] = v26;
  sub_100081E80((uint64_t)v17, v21);
  v27 = (_QWORD *)((char *)a9 + v20[6]);
  v28 = v35;
  *v27 = v34;
  v27[1] = v28;
  swift_bridgeObjectRelease(v22[1]);
  v29 = v38;
  *v22 = v36;
  v22[1] = v29;
  result = sub_10003A5C8(*v23, v23[1]);
  v31 = v37;
  *v23 = v41;
  v23[1] = v31;
  *(_QWORD *)v24 = v39;
  v24[8] = v40 & 1;
  *((_BYTE *)a9 + v25) = 1;
  return result;
}

uint64_t Notice.init(id:thumbnail:message:headnote:link:hapticFeedback:isDismissable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;

  v16 = (int *)type metadata accessor for Notice(0);
  v17 = (uint64_t)a9 + v16[5];
  v18 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)((char *)a9 + v16[7]);
  *v19 = 0;
  v19[1] = 0;
  v20 = (_QWORD *)((char *)a9 + v16[8]);
  *v20 = 0;
  v20[1] = 0;
  v21 = (char *)a9 + v16[9];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = v16[10];
  *((_BYTE *)a9 + v22) = 1;
  *a9 = a1;
  a9[1] = a2;
  sub_100081E80(a3, v17);
  v23 = (_QWORD *)((char *)a9 + v16[6]);
  *v23 = a4;
  v23[1] = a5;
  swift_bridgeObjectRelease(v19[1]);
  *v19 = a6;
  v19[1] = a7;
  result = sub_10003A5C8(*v20, v20[1]);
  *v20 = a8;
  v20[1] = a10;
  *(_QWORD *)v21 = a11;
  v21[8] = a12 & 1;
  *((_BYTE *)a9 + v22) = a13;
  return result;
}

uint64_t Notice.init(id:symbol:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v35 = a5;
  v36 = a6;
  v34 = a2;
  v42 = a13;
  v40 = a12;
  v41 = a8;
  v38 = a11;
  v39 = a7;
  v37 = a10;
  sub_100005574(&qword_10048F838);
  __chkstk_darwin();
  v18 = (uint64_t *)((char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v18 = Image.init(_internalSystemName:)(a3, a4);
  v19 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v18, 0, 1, v19);
  v21 = (int *)type metadata accessor for Notice(0);
  v22 = (uint64_t)a9 + v21[5];
  v20((_QWORD *)v22, 1, 1, v19);
  v23 = (_QWORD *)((char *)a9 + v21[7]);
  *v23 = 0;
  v23[1] = 0;
  v24 = (_QWORD *)((char *)a9 + v21[8]);
  *v24 = 0;
  v24[1] = 0;
  v25 = (char *)a9 + v21[9];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v26 = v21[10];
  *((_BYTE *)a9 + v26) = 1;
  v27 = v34;
  *a9 = a1;
  a9[1] = v27;
  sub_100081E80((uint64_t)v18, v22);
  v28 = (_QWORD *)((char *)a9 + v21[6]);
  v29 = v36;
  *v28 = v35;
  v28[1] = v29;
  swift_bridgeObjectRelease();
  v30 = v41;
  *v23 = v39;
  v23[1] = v30;
  result = sub_10003A5C8(*v24, v24[1]);
  v32 = v38;
  *v24 = v37;
  v24[1] = v32;
  *(_QWORD *)v25 = v40;
  v25[8] = v42 & 1;
  *((_BYTE *)a9 + v26) = 1;
  return result;
}

uint64_t Notice.withLink(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  sub_100082248(v3, a3, type metadata accessor for Notice);
  v7 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Notice(0) + 32));
  v8 = *v7;
  v9 = v7[1];
  swift_retain(a2);
  result = sub_10003A5C8(v8, v9);
  *v7 = a1;
  v7[1] = a2;
  return result;
}

void Notice.Variant.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v1, (uint64_t)v4, v5);
  v6 = (char *)sub_1000819C8 + 4 * byte_100389012[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1000819C8()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 8));
  v1 = sub_100005574(&qword_10048F850);
  sub_100008758(v0 + *(int *)(v1 + 48), &qword_1004916E0);
  return 0x506F546465646461;
}

uint64_t type metadata accessor for Notice.Variant(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10048FA20, (uint64_t)&nominal type descriptor for Notice.Variant);
}

uint64_t sub_100081B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  id v17;
  NSURL *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  Class isa;
  uint64_t v29;
  char *v30;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048D510);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v29 - v11;
  if (a2)
  {
    v13 = a2;
  }
  else
  {
    a1 = 0xD000000000000010;
    v13 = 0x80000001003AE480;
  }
  swift_bridgeObjectRetain();
  v14 = sub_100098FC4((uint64_t)_swiftEmptyArrayStorage);
  sub_1000F71A4(a1, v13, 0xD000000000000032, 0x80000001003AE4A0, (uint64_t)_swiftEmptyArrayStorage, v14, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  sub_100014A7C((uint64_t)v12, (uint64_t)v10, &qword_10048D510);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_100008758((uint64_t)v12, &qword_10048D510);
  }
  else
  {
    v15 = v30;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v10, v4);
    v16 = (void *)objc_opt_self(UIApplication);
    v17 = objc_msgSend(v16, "sharedApplication");
    URL._bridgeToObjectiveC()(v18);
    v20 = v19;
    v21 = objc_msgSend(v17, "canOpenURL:", v19);

    if (v21)
    {
      v22 = objc_msgSend(v16, "sharedApplication");
      URL._bridgeToObjectiveC()(v23);
      v25 = v24;
      v26 = sub_100098E90((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1000844E4();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v26);
      objc_msgSend(v22, "openURL:options:completionHandler:", v25, isa, 0);

    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
    v10 = v12;
  }
  return sub_100008758((uint64_t)v10, &qword_10048D510);
}

uint64_t type metadata accessor for Notice.Thumbnail(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10048F978, (uint64_t)&nominal type descriptor for Notice.Thumbnail);
}

uint64_t type metadata accessor for Notice(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10048F8B0, (uint64_t)&nominal type descriptor for Notice);
}

uint64_t sub_100081E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048F838);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081EC8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100081EEC()
{
  uint64_t v0;

  return sub_100081B94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_100081EF4()
{
  unint64_t result;

  result = qword_10048F848;
  if (!qword_10048F848)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10048F848);
  }
  return result;
}

uint64_t sub_100081F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004916E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int EnumCaseMultiPayload;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice.Thumbnail(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (uint64_t *)((char *)&v26 - v11);
  v13 = sub_100005574(&qword_10048FA68);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v16[*(int *)(v14 + 48)];
  sub_100082248(a1, (uint64_t)v16, type metadata accessor for Notice.Thumbnail);
  sub_100082248(a2, (uint64_t)v17, type metadata accessor for Notice.Thumbnail);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v7);
  if (!EnumCaseMultiPayload)
  {
    sub_100082248((uint64_t)v16, (uint64_t)v12, type metadata accessor for Notice.Thumbnail);
    v23 = *v12;
    if (!swift_getEnumCaseMultiPayload(v17, v7))
    {
      v24 = *(_QWORD *)v17;
      v21 = static Image.== infix(_:_:)(v23, *(_QWORD *)v17);
      swift_release(v23);
      swift_release(v24);
      goto LABEL_12;
    }
    swift_release(v23);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100082248((uint64_t)v16, (uint64_t)v10, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(v17, v7) == 1)
    {
      v19 = v17;
      v20 = v27;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v19, v27);
      v21 = static Artwork.== infix(_:_:)(v10, v6);
      v22 = *(void (**)(char *, uint64_t))(v4 + 8);
      v22(v6, v20);
      v22(v10, v20);
LABEL_12:
      sub_100006798((uint64_t)v16, type metadata accessor for Notice.Thumbnail);
      return v21 & 1;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v27);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload(v17, v7) != 2)
  {
LABEL_10:
    sub_100008758((uint64_t)v16, &qword_10048FA68);
    v21 = 0;
    return v21 & 1;
  }
  sub_100006798((uint64_t)v16, type metadata accessor for Notice.Thumbnail);
  v21 = 1;
  return v21 & 1;
}

uint64_t sub_100082248(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s9MusicCore6NoticeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;

  v4 = type metadata accessor for Notice.Thumbnail(0);
  v75 = *(_QWORD *)(v4 - 8);
  v76 = v4;
  __chkstk_darwin(v4);
  v73 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F838);
  __chkstk_darwin(v6);
  v74 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048FA60);
  __chkstk_darwin(v8);
  v10 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v82 = (uint64_t)&v73 - v16;
  v17 = __chkstk_darwin(v15);
  v79 = (char *)&v73 - v18;
  v19 = __chkstk_darwin(v17);
  v80 = (char *)&v73 - v20;
  v21 = __chkstk_darwin(v19);
  v78 = (uint64_t)&v73 - v22;
  v23 = __chkstk_darwin(v21);
  v77 = (uint64_t)&v73 - v24;
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v73 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v73 - v28;
  v30 = *a1;
  v31 = a1[1];
  v32 = *a2;
  v33 = a2[1];
  v34 = *a1 == *a2;
  v81 = a2;
  if (v34 && v31 == v33)
  {
    sub_100082248((uint64_t)a1, (uint64_t)&v73 - v28, type metadata accessor for Notice);
    sub_100082248((uint64_t)a2, (uint64_t)v27, type metadata accessor for Notice);
  }
  else
  {
    v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v32, v33, 0);
    sub_100082248((uint64_t)a1, (uint64_t)v29, type metadata accessor for Notice);
    sub_100082248((uint64_t)a2, (uint64_t)v27, type metadata accessor for Notice);
    if ((v35 & 1) == 0)
    {
      sub_100006798((uint64_t)v27, type metadata accessor for Notice);
      sub_100006798((uint64_t)v29, type metadata accessor for Notice);
      goto LABEL_13;
    }
  }
  v36 = v11[5];
  v37 = (uint64_t)&v27[v36];
  v38 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100014A7C((uint64_t)&v29[v36], (uint64_t)v10, &qword_10048F838);
  sub_100014A7C(v37, v38, &qword_10048F838);
  v39 = v76;
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (v40((uint64_t)v10, 1, v76) != 1)
  {
    v46 = v74;
    sub_100014A7C((uint64_t)v10, v74, &qword_10048F838);
    if (v40(v38, 1, v39) != 1)
    {
      v49 = v38;
      v50 = v73;
      sub_100081F80(v49, v73);
      v51 = _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(v46, v50);
      sub_100006798(v50, type metadata accessor for Notice.Thumbnail);
      sub_100006798((uint64_t)v27, type metadata accessor for Notice);
      sub_100006798((uint64_t)v29, type metadata accessor for Notice);
      sub_100006798(v46, type metadata accessor for Notice.Thumbnail);
      sub_100008758((uint64_t)v10, &qword_10048F838);
      v41 = v77;
      sub_100082248((uint64_t)a1, v77, type metadata accessor for Notice);
      v42 = (uint64_t)v81;
      v43 = v78;
      sub_100082248((uint64_t)v81, v78, type metadata accessor for Notice);
      v45 = (uint64_t)v79;
      v44 = (uint64_t)v80;
      if ((v51 & 1) != 0)
        goto LABEL_20;
LABEL_14:
      sub_100006798(v41, type metadata accessor for Notice);
      sub_100006798(v43, type metadata accessor for Notice);
      sub_100082248((uint64_t)a1, v44, type metadata accessor for Notice);
      sub_100082248(v42, v45, type metadata accessor for Notice);
      goto LABEL_15;
    }
    sub_100006798((uint64_t)v27, type metadata accessor for Notice);
    sub_100006798((uint64_t)v29, type metadata accessor for Notice);
    sub_100006798(v46, type metadata accessor for Notice.Thumbnail);
    goto LABEL_11;
  }
  sub_100006798((uint64_t)v27, type metadata accessor for Notice);
  sub_100006798((uint64_t)v29, type metadata accessor for Notice);
  if (v40(v38, 1, v39) != 1)
  {
LABEL_11:
    sub_100008758((uint64_t)v10, &qword_10048FA60);
LABEL_13:
    v44 = (uint64_t)v80;
    v42 = (uint64_t)v81;
    v43 = v78;
    v45 = (uint64_t)v79;
    v41 = v77;
    sub_100082248((uint64_t)a1, v77, type metadata accessor for Notice);
    sub_100082248(v42, v43, type metadata accessor for Notice);
    goto LABEL_14;
  }
  sub_100008758((uint64_t)v10, &qword_10048F838);
  v41 = v77;
  sub_100082248((uint64_t)a1, v77, type metadata accessor for Notice);
  v42 = (uint64_t)v81;
  v43 = v78;
  sub_100082248((uint64_t)v81, v78, type metadata accessor for Notice);
  v45 = (uint64_t)v79;
  v44 = (uint64_t)v80;
LABEL_20:
  v52 = v11[6];
  v53 = *(_QWORD *)(v41 + v52);
  v54 = *(_QWORD *)(v41 + v52 + 8);
  v55 = (_QWORD *)(v43 + v52);
  v56 = v55[1];
  if (v53 == *v55 && v54 == v56)
  {
    sub_100006798(v41, type metadata accessor for Notice);
    sub_100006798(v43, type metadata accessor for Notice);
    sub_100082248((uint64_t)a1, v44, type metadata accessor for Notice);
    sub_100082248(v42, v45, type metadata accessor for Notice);
    goto LABEL_24;
  }
  v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, *v55, v56, 0);
  sub_100006798(v41, type metadata accessor for Notice);
  sub_100006798(v43, type metadata accessor for Notice);
  sub_100082248((uint64_t)a1, v44, type metadata accessor for Notice);
  sub_100082248(v42, v45, type metadata accessor for Notice);
  if ((v57 & 1) == 0)
  {
LABEL_15:
    sub_100006798(v45, type metadata accessor for Notice);
    sub_100006798(v44, type metadata accessor for Notice);
LABEL_16:
    sub_100082248((uint64_t)a1, v82, type metadata accessor for Notice);
    sub_100082248(v42, (uint64_t)v14, type metadata accessor for Notice);
    goto LABEL_17;
  }
LABEL_24:
  v58 = (uint64_t)v14;
  v59 = v11;
  v60 = v11[7];
  v61 = (_QWORD *)(v44 + v60);
  v62 = *(_QWORD *)(v44 + v60 + 8);
  v63 = (_QWORD *)(v45 + v60);
  v64 = v63[1];
  if (!v62)
  {
    swift_bridgeObjectRetain();
    sub_100006798(v45, type metadata accessor for Notice);
    sub_100006798(v44, type metadata accessor for Notice);
    if (!v64)
      goto LABEL_31;
    v65 = v64;
    goto LABEL_33;
  }
  if (!v64)
  {
    swift_bridgeObjectRetain();
    sub_100006798(v45, type metadata accessor for Notice);
    sub_100006798(v44, type metadata accessor for Notice);
    v65 = v62;
LABEL_33:
    swift_bridgeObjectRelease(v65);
    v14 = (char *)v58;
    goto LABEL_16;
  }
  if (*v61 == *v63 && v62 == v64)
  {
    swift_bridgeObjectRetain();
    sub_100006798(v45, type metadata accessor for Notice);
    sub_100006798(v44, type metadata accessor for Notice);
    swift_bridgeObjectRelease(v62);
LABEL_31:
    sub_100082248((uint64_t)a1, v82, type metadata accessor for Notice);
    v14 = (char *)v58;
    sub_100082248(v42, v58, type metadata accessor for Notice);
    goto LABEL_35;
  }
  v66 = _stringCompareWithSmolCheck(_:_:expecting:)(*v61, v62, *v63, v63[1], 0);
  swift_bridgeObjectRetain();
  sub_100006798(v45, type metadata accessor for Notice);
  sub_100006798(v44, type metadata accessor for Notice);
  swift_bridgeObjectRelease(v62);
  sub_100082248((uint64_t)a1, v82, type metadata accessor for Notice);
  v14 = (char *)v58;
  sub_100082248(v42, v58, type metadata accessor for Notice);
  if ((v66 & 1) == 0)
  {
LABEL_17:
    sub_100006798((uint64_t)v14, type metadata accessor for Notice);
    sub_100006798(v82, type metadata accessor for Notice);
    return 0;
  }
LABEL_35:
  v67 = (uint64_t *)(v82 + v59[9]);
  v68 = (uint64_t)v14;
  v69 = *v67;
  v70 = *((_BYTE *)v67 + 8);
  sub_100006798(v82, type metadata accessor for Notice);
  v71 = v68 + v59[9];
  v72 = *(_QWORD *)v71;
  v47 = *(unsigned __int8 *)(v71 + 8);
  sub_100006798(v68, type metadata accessor for Notice);
  if ((v70 & 1) == 0)
    return (v69 == v72) & ~(_DWORD)v47;
  return v47;
}

_QWORD *initializeBufferWithCopyOfBuffer for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Notice.Thumbnail(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = sub_100005574(&qword_10048F838);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(v12 + 64));
      }
      else
      {
        v17 = *v10;
        *v9 = *v10;
        swift_retain(v17);
        swift_storeEnumTagMultiPayload(v9, v11, 0);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v19 = a3[6];
    v20 = a3[7];
    v21 = (_QWORD *)((char *)v4 + v19);
    v22 = (_QWORD *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (_QWORD *)((char *)v4 + v20);
    v25 = (_QWORD *)((char *)a2 + v20);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = a3[8];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 1);
      *v28 = v30;
      v28[1] = v31;
      swift_retain(v31);
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v32 = a3[9];
    v33 = a3[10];
    v34 = (char *)v4 + v32;
    v35 = (char *)a2 + v32;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *((_BYTE *)v4 + v33) = *((_BYTE *)a2 + v33);
  }
  return v4;
}

double destroy for Notice(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  double result;
  _QWORD *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v4);
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  v7 = (_QWORD *)(a1 + a2[8]);
  if (*v7)
    *(_QWORD *)&result = swift_release(v7[1]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = sub_100005574(&qword_10048F838);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, v9, v16);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      swift_retain(v15);
      swift_storeEnumTagMultiPayload(v8, v10, 0);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v17 = a3[6];
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v17);
  v20 = (_QWORD *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)((char *)a1 + v18);
  v23 = (_QWORD *)((char *)a2 + v18);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    *v26 = v28;
    v26[1] = v29;
    swift_retain(v29);
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = a3[9];
  v31 = a3[10];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  return a1;
}

_QWORD *assignWithCopy for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v42 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v8, v9, v42);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v19 = *v9;
        *v8 = *v9;
        swift_retain(v19);
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v17 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v17);
      goto LABEL_17;
    }
    sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048F838) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    v16 = *v9;
    *v8 = *v9;
    swift_retain(v16);
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v21 = a3[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v24 = v22[1];
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v24);
  v25 = a3[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  *v26 = *v27;
  v28 = v26[1];
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v28);
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      v36 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v36;
      swift_retain(v36);
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_24;
  }
  if (!v33)
  {
    swift_release(v30[1]);
    goto LABEL_23;
  }
  v34 = *((_QWORD *)v31 + 1);
  v35 = v30[1];
  *v30 = v33;
  v30[1] = v34;
  swift_retain(v34);
  swift_release(v35);
LABEL_24:
  v37 = a3[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *(_QWORD *)v38 = v40;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_OWORD *initializeWithTake for Notice(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Notice.Thumbnail(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_10048F838);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v12 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(v10 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = a3[9];
  v20 = a3[10];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

_QWORD *assignWithTake for Notice(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048F838) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = a3[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease(v24);
  v25 = a3[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  v30 = v26[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease(v30);
  v31 = a3[8];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)((char *)a1 + v31);
  v35 = *(_QWORD *)((char *)a2 + v31);
  if (!v34)
  {
    if (v35)
    {
      v38 = *((_QWORD *)v33 + 1);
      *v32 = v35;
      v32[1] = v38;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    goto LABEL_21;
  }
  if (!v35)
  {
    swift_release(v32[1]);
    goto LABEL_20;
  }
  v36 = *((_QWORD *)v33 + 1);
  v37 = v32[1];
  *v32 = v35;
  v32[1] = v36;
  swift_release(v37);
LABEL_21:
  v39 = a3[9];
  v40 = a3[10];
  v41 = (char *)a1 + v39;
  v42 = (char *)a2 + v39;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  *((_BYTE *)a1 + v40) = *((_BYTE *)a2 + v40);
  return a1;
}

uint64_t getEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083600);
}

uint64_t sub_100083600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10048F838);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Notice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008368C);
}

uint64_t sub_10008368C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10048F838);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100083704(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_1003890C0;
  sub_100084498(319, (unint64_t *)&unk_10048F8C0, type metadata accessor for Notice.Thumbnail);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_1003890C0;
    v4[3] = &unk_1003890D8;
    v4[4] = &unk_1003890D8;
    v4[5] = &unk_1003890F0;
    v4[6] = &unk_100389108;
    swift_initStructMetadata(a1, 256, 7, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t destroy for Notice.Thumbnail(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for Artwork(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!(_DWORD)result)
  {
    return swift_release(*a1);
  }
  return result;
}

uint64_t *initializeWithCopy for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    swift_retain(v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

uint64_t *assignWithCopy for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      swift_retain(v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *initializeWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for Artwork(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for Artwork(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100083B88(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Variant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v17);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = a2[2];
      v22 = a2[3];
      a1[2] = v21;
      a1[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      v10 = sub_100005574(&qword_10048F850);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = sub_100005574(&qword_1004916E0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t destroy for Notice.Variant(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((_DWORD)result)
  {
    case 2:
      v7 = *(_QWORD *)(a1 + 8);
      return swift_bridgeObjectRelease(v7);
    case 1:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v7 = *(_QWORD *)(a1 + 24);
      return swift_bridgeObjectRelease(v7);
    case 0:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v4 = a1 + *(int *)(sub_100005574(&qword_10048F850) + 48);
      v5 = type metadata accessor for Artwork(0);
      v6 = *(_QWORD *)(v5 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      break;
  }
  return result;
}

_QWORD *initializeWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 2;
LABEL_11:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      return a1;
    case 1:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = a2[2];
      v21 = a2[3];
      a1[2] = v20;
      a1[3] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = a1;
      v17 = a3;
      v18 = 1;
      goto LABEL_11;
    case 0:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      v8 = sub_100005574(&qword_10048F850);
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Artwork(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = sub_100005574(&qword_1004916E0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 64));
      v16 = a1;
      v17 = a3;
      v18 = 0;
      goto LABEL_11;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for Notice.Variant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 == a2)
    return a1;
  sub_100006798((uint64_t)a1, type metadata accessor for Notice.Variant);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 2;
LABEL_12:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_12;
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v7 = sub_100005574(&qword_10048F850);
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100005574(&qword_1004916E0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = sub_100005574(&qword_10048F850);
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Artwork(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100005574(&qword_1004916E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

_OWORD *assignWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for Notice.Variant);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = sub_100005574(&qword_10048F850);
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Artwork(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100005574(&qword_1004916E0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 64)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 64));
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1000843F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  sub_100084498(319, (unint64_t *)&unk_10048FA30, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, &unk_1003890C0, *(_QWORD *)(v2 - 8) + 64, (char *)&value witness table for Builtin.Int64 + 64);
    v5[0] = v4;
    v5[1] = " ";
    v5[2] = &unk_1003890D8;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
  }
}

void sub_100084498(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1000844E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004932E0;
  if (!qword_1004932E0)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_100386F78, v1);
    atomic_store(result, (unint64_t *)&qword_1004932E0);
  }
  return result;
}

uint64_t sub_100084534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = type metadata accessor for Notice(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a2, a3, a4);
  return sub_100084990((uint64_t)v10);
}

uint64_t sub_1000845D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t PresentedViewState<A>.present(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  *(_OWORD *)(v2 + 72) = v3;
  *(_BYTE *)(v2 + 113) = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v2 + 88) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 96) = v4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 104) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100084660, v6, v7);
}

{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574(&qword_1004991A0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[9] = v7;
  v2[10] = v8;
  return swift_task_switch(sub_10029C09C, v7, v8);
}

