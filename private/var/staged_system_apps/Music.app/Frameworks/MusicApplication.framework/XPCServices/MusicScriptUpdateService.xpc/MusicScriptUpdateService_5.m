uint64_t sub_10027F6A4(_QWORD *a1, uint64_t a2, double a3, double a4)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[40];
  _BYTE v34[24];
  _BYTE v35[24];
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;

  v7 = a3 + a4;
  v9 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v9);
  if ((*(double (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess(a2 + 80, v35, 0, 0);
    v10 = *(_QWORD *)(a2 + 80);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      sub_1000244B0(v10 + 40 * v11 - 8, (uint64_t)v36);
      v13 = v37;
      v12 = v38;
      sub_10000ABC8(v36, v37);
      v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 16))(v13);
      swift_beginAccess(a2 + 24, v34, 0, 0);
      v15 = v14 - *(double *)(a2 + 48);
      sub_1000244B0((uint64_t)a1, (uint64_t)v28);
      v16 = sub_100005574(&qword_100499EA0);
      if ((swift_dynamicCast(v33, v28, v16, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0)
      {
        sub_1000244B0((uint64_t)v36, (uint64_t)v28);
        if (!swift_dynamicCast(v33, v28, v16, &type metadata for Lyrics.InstrumentalLine, 6)
          && *(_QWORD *)(*(_QWORD *)(a2 + 80) + 16) < *(_QWORD *)(a2 + 56))
        {
          v17 = a1[3];
          v18 = a1[4];
          sub_10000ABC8(a1, v17);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
          v20 = v37;
          v21 = v38;
          sub_10000ABC8(v36, v37);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) < v19)
          {
            v23 = a1[3];
            v22 = a1[4];
            sub_10000ABC8(a1, v23);
            if ((*(double (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 8))(v23) < a3)
            {
              sub_10000682C(v36);
              return 2;
            }
          }
        }
      }
      if (v15 < a3)
        goto LABEL_12;
      sub_1000244B0((uint64_t)v36, (uint64_t)v33);
      if ((swift_dynamicCast(v28, v33, v16, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
      {
        v25 = v29;
        v26 = v30;
        v27 = v31;
        swift_release(v32);
        swift_release(v27);
        swift_release(v26);
        swift_bridgeObjectRelease();
        if (v25 - *(double *)(a2 + 48) < a3)
        {
LABEL_12:
          sub_10000682C(v36);
          return 1;
        }
      }
      sub_10000682C(v36);
    }
  }
  return 0;
}

void sub_10027F930(_QWORD *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v22[24];
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v5 = v4;
  v10 = sub_100005574(&qword_100499E98);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100384A80;
  sub_1000244B0((uint64_t)a1, v11 + 32);
  swift_beginAccess(v5 + 10, v25, 1, 0);
  v5[10] = v11;
  swift_bridgeObjectRelease();
  v12 = v5[2];
  v13 = a1[3];
  v14 = a1[4];
  sub_10000ABC8(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)(v12 + 40);
  if (v16 < *(_QWORD *)(v17 + 16))
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      sub_1000244B0(v17 + 40 * v16 + 32, (uint64_t)v23);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_6:
  swift_beginAccess(v5 + 14, v22, 33, 0);
  sub_100280370((uint64_t)v23, (uint64_t)(v5 + 14));
  swift_endAccess(v22);
  sub_1002801C8((uint64_t)v23);
  swift_beginAccess(v5 + 8, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 8);
  if (Strong)
  {
    v19 = Strong;
    v20 = v5[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, double))(v20 + 8))(v5, a1, a2, a3 & 1, ObjectType, v20, a4);
    swift_unknownObjectRelease(v19);
  }
}

void sub_10027FADC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  _BYTE v24[24];
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v2 = v1;
  sub_1000244B0((uint64_t)a1, (uint64_t)&v26);
  v4 = v1 + 10;
  swift_beginAccess(v4, v25, 1, 0);
  v5 = (_QWORD *)v2[10];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_100258608(0, v5[2] + 1, 1, v5);
    *v4 = (uint64_t)v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
    *v4 = (uint64_t)sub_100258608((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
  v9 = *((_QWORD *)&v27 + 1);
  v10 = v28;
  sub_10016D740((uint64_t)&v26, *((uint64_t *)&v27 + 1));
  __chkstk_darwin();
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v13 + 16))(v12);
  sub_100280048(v8, (uint64_t)v12, v4, v9, v10);
  sub_10000682C(&v26);
  v14 = v2[2];
  v15 = a1[3];
  v16 = a1[4];
  sub_10000ABC8(a1, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  v18 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = *(_QWORD *)(v14 + 40);
  if (v18 < *(_QWORD *)(v19 + 16))
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      sub_1000244B0(v19 + 40 * v18 + 32, (uint64_t)&v26);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return;
  }
  v28 = 0;
  v26 = 0u;
  v27 = 0u;
LABEL_10:
  swift_beginAccess(v2 + 14, v24, 33, 0);
  sub_100280370((uint64_t)&v26, (uint64_t)(v2 + 14));
  swift_endAccess(v24);
  sub_1002801C8((uint64_t)&v26);
  swift_beginAccess(v2 + 8, &v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 8);
  if (Strong)
  {
    v21 = Strong;
    v22 = v2[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v22 + 32))(v2, a1, ObjectType, v22);
    swift_unknownObjectRelease(v21);
  }
}

void sub_10027FD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v1 = v0;
  v2 = v0 + 112;
  swift_beginAccess(v0 + 112, v31, 0, 0);
  sub_100280180(v0 + 112, (uint64_t)&v32);
  v3 = *((_QWORD *)&v33 + 1);
  sub_1002801C8((uint64_t)&v32);
  if (!v3)
  {
    swift_beginAccess(v1 + 96, v30, 0, 0);
    v4 = *(double (**)(__n128))(v1 + 96);
    if (v4)
    {
      v5 = *(_QWORD *)(v1 + 104);
      v6 = swift_retain(v5);
      v7 = v4(v6);
      swift_beginAccess(v1 + 88, v29, 0, 0);
      v8 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v8 = v9;
      }
      sub_10003A5C8((uint64_t)v4, v5);
      v10 = *(_QWORD *)(v1 + 16);
      v11 = *(_QWORD *)(v10 + 40);
      if (!*(_QWORD *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      v12 = v7 - v8;
      sub_1000244B0(v11 + 32, (uint64_t)&v32);
      v14 = *((_QWORD *)&v33 + 1);
      v13 = v34;
      sub_10000ABC8(&v32, *((uint64_t *)&v33 + 1));
      v15 = (*(double (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 8))(v14);
      sub_10000682C(&v32);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v26, v12);
        if (!*((_QWORD *)&v27 + 1))
        {
          sub_1002801C8((uint64_t)&v26);
          return;
        }
        sub_1000137C8(&v26, (uint64_t)&v32);
        v17 = *((_QWORD *)&v33 + 1);
        v16 = v34;
        sub_10000ABC8(&v32, *((uint64_t *)&v33 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17))
        {
          v18 = &v32;
LABEL_20:
          sub_1000244B0((uint64_t)v18, (uint64_t)&v26);
LABEL_22:
          swift_beginAccess(v2, v25, 33, 0);
          sub_100280370((uint64_t)&v26, v2);
          swift_endAccess(v25);
          sub_1002801C8((uint64_t)&v26);
          sub_10000682C(&v32);
          return;
        }
        v20 = *((_QWORD *)&v33 + 1);
        v21 = v34;
        sub_10000ABC8(&v32, *((uint64_t *)&v33 + 1));
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        v23 = v22 + 1;
        if (!__OFADD__(v22, 1))
        {
          v24 = *(_QWORD *)(v10 + 40);
          if (v23 >= *(_QWORD *)(v24 + 16))
          {
            v28 = 0;
            v26 = 0u;
            v27 = 0u;
            goto LABEL_22;
          }
          if ((v23 & 0x8000000000000000) == 0)
          {
            v18 = (__int128 *)(v24 + 40 * v23 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      v19 = *(_QWORD *)(v10 + 40);
      if (*(_QWORD *)(v19 + 16))
      {
        sub_1000244B0(v19 + 32, (uint64_t)&v32);
      }
      else
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
      }
      swift_beginAccess(v2, &v26, 33, 0);
      sub_100280370((uint64_t)&v32, v2);
      swift_endAccess(&v26);
      sub_1002801C8((uint64_t)&v32);
    }
  }
}

_QWORD *SyncedLyricsManager.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  sub_1000FF204((uint64_t)(v0 + 8));
  swift_bridgeObjectRelease();
  sub_10003A5C8(v0[12], v0[13]);
  sub_1002801C8((uint64_t)(v0 + 14));
  return v0;
}

uint64_t SyncedLyricsManager.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  sub_1000FF204((uint64_t)(v0 + 8));
  swift_bridgeObjectRelease();
  sub_10003A5C8(v0[12], v0[13]);
  sub_1002801C8((uint64_t)(v0 + 14));
  return swift_deallocClassInstance(v0, 152, 7);
}

uint64_t sub_100280048(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_1000207D4(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1000137C8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1002800C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _BYTE v17[24];

  v13 = a5 + 64;
  *(_QWORD *)(a5 + 72) = 0;
  v14 = swift_unknownObjectWeakInit(a5 + 64, 0);
  *(_QWORD *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  *(_QWORD *)(a5 + 16) = a1;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v15;
  *(_QWORD *)(a5 + 56) = *(_QWORD *)(a2 + 32);
  swift_beginAccess(v14, v17, 1, 0);
  *(_QWORD *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign(v13, a3);
  *(_BYTE *)(a5 + 88) = a4;
  return a5;
}

uint64_t sub_100280180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049AF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002801C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10049AF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100280208()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100280218@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 80, v5, 0, 0);
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return objc_opt_self(_TtC11MusicCoreUI19SyncedLyricsManager);
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for SyncedLyricsManager.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t sub_100280370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049AF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v5[544];

  sub_100281C24(a1, a2, v5);
  return memcpy(a3, v5, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
  sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  char v3;
  double v4;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  char v10;
  CGRect v11;
  char v12;
  _QWORD v13[4];
  char v14;
  CGRect v15;

  sub_100282A6C(a1, (uint64_t)v13);
  v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    v4 = *(double *)v13;
    sub_100282A6C(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0)
      return v4 == v11.origin.x;
    return 0;
  }
  v14 &= ~0x80u;
  v6 = *(double *)v13;
  v7 = *(double *)&v13[1];
  v8 = *(double *)&v13[2];
  v9 = *(double *)&v13[3];
  sub_100282A6C(a2, (uint64_t)&v11);
  v10 = v12;
  if ((v12 & 0x80) == 0)
    return 0;
  v12 &= ~0x80u;
  if ((v3 & 1) != 0)
  {
    if ((v10 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v10 & 1) != 0)
      return 0;
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11))
      return 0;
  }
  return 1;
}

uint64_t sub_100280654(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 0x80) != 0)
    {
      if ((v2 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 32) & 1) != 0)
          return 1;
      }
      else if ((*(_BYTE *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(_BYTE *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 8);
  v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(__int128 *a1)
{
  uint64_t v1;

  return sub_100282A6C(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineDelay.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 152) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.isSelected.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.font.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = result;
  *(_BYTE *)(v2 + 184) = a2 & 1;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.fontLeading.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.writtenByFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.hiddenTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.animationHeadstart.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 376) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 392) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.touchDownTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 456) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 464) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewMargin.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 480) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 488) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 504) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.syllableLift.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 520) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 528) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 536) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, void *a2@<X8>)
{
  const void *v2;
  _BYTE v6[544];

  memcpy(v6, v2, 0x219uLL);
  sub_10026EC3C((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *sub_100280EB4()
{
  _BYTE v1[544];

  sub_100281C24(0, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (qword_100498A50 != -1)
    swift_once(&qword_100498A50, sub_100280EB4);
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100281574(&qword_100498A50, (uint64_t)&static SyncedLyricsViewController.Specs.default, (uint64_t)sub_100280EB4, a1);
}

void *sub_100280F54()
{
  _BYTE v1[544];

  sub_100281C24((void (*)(_BYTE *))sub_100280F9C, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void sub_100280F9C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_QWORD *)(a1 + 8) = 0x4034000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_1003953A0;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 48.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 32.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_QWORD *)(a1 + 176) = 0x404A000000000000;
  *(_BYTE *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (qword_100498A58 != -1)
    swift_once(&qword_100498A58, sub_100280F54);
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100281574(&qword_100498A58, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, (uint64_t)sub_100280F54, a1);
}

void *sub_1002810D0()
{
  _BYTE v1[544];

  sub_100281C24((void (*)(_BYTE *))sub_100281118, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void sub_100281118(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  _QWORD v20[5];
  uint64_t v21;

  *(_QWORD *)(a1 + 8) = 0x4042000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_1003953A0;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 56.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 34.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 176) = 0x404C000000000000;
  *(_BYTE *)(a1 + 184) = 0;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.175);

  *(_QWORD *)(a1 + 384) = v7;
  v8 = objc_msgSend(v5, "whiteColor");

  *(_QWORD *)(a1 + 376) = v8;
  v9 = objc_msgSend(v5, "whiteColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.35);

  v11 = objc_msgSend(v5, "labelColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.55);

  v13 = objc_allocWithZone((Class)UIColor);
  v14 = swift_allocObject(&unk_10045EA70, 32, 7);
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v10;
  v20[4] = sub_100283564;
  v21 = v14;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_100234A18;
  v20[3] = &unk_10045EA88;
  v15 = _Block_copy(v20);
  v16 = v21;
  v17 = v12;
  v18 = v10;
  v19 = objc_msgSend(v13, "initWithDynamicProvider:", v15, swift_release(v16).n128_f64[0]);

  _Block_release(v15);
  *(_QWORD *)(a1 + 240) = v19;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (qword_100498A60 != -1)
    swift_once(&qword_100498A60, sub_1002810D0);
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100281574(&qword_100498A60, (uint64_t)&static SyncedLyricsViewController.Specs.vision, (uint64_t)sub_1002810D0, a1);
}

void *sub_100281414()
{
  _BYTE v1[544];

  sub_100281C24((void (*)(_BYTE *))sub_10028145C, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void sub_10028145C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_BYTE *)(a1 + 40) = -127;
  *(_QWORD *)(a1 + 160) = 1;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 28.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 24.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (qword_100498A68 != -1)
    swift_once(&qword_100498A68, sub_100281414);
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100281574(&qword_100498A68, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, (uint64_t)sub_100281414, a1);
}

uint64_t sub_100281574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_100282A84(a2, a4);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return sub_100282AB8(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
}

id sub_1002816AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002816E4(void *__src, const void *a2)
{
  _BYTE v4[544];
  _BYTE __dst[544];

  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

id sub_100281738(void *a1, void *a2, void *a3)
{
  id v4;
  BOOL v5;
  void *v6;

  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)-1)
  {
    v6 = a3;
  }
  else
  {
    v5 = v4 == (id)1;
    v6 = a3;
    if (v5)
      v6 = a2;
  }
  return v6;
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  double v5;
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  _OWORD v20[3];
  _OWORD v21[3];
  _OWORD v22[3];
  _OWORD v23[3];
  _OWORD v24[3];
  __int128 v25[2];
  __int128 v26[2];
  _QWORD v27[4];
  char v28;
  CGRect v29;
  char v30;
  CGRect v31;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_33;
  sub_100282A6C((__int128 *)(a1 + 8), (uint64_t)v26);
  sub_100282A6C((__int128 *)(a2 + 8), (uint64_t)v25);
  sub_100282A6C(v26, (uint64_t)v27);
  v4 = v28;
  if (v28 < 0)
  {
    v28 &= ~0x80u;
    v7 = *(double *)v27;
    v8 = *(double *)&v27[1];
    v9 = *(double *)&v27[2];
    v10 = *(double *)&v27[3];
    sub_100282A6C(v25, (uint64_t)&v29);
    v11 = v30;
    if ((v30 & 0x80) == 0)
      goto LABEL_33;
    v30 &= ~0x80u;
    if ((v4 & 1) != 0)
    {
      if ((v11 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      if ((v11 & 1) != 0)
        goto LABEL_33;
      v31.origin.x = v7;
      v31.origin.y = v8;
      v31.size.width = v9;
      v31.size.height = v10;
      if (!CGRectEqualToRect(v31, v29))
        goto LABEL_33;
    }
  }
  else
  {
    v5 = *(double *)v27;
    sub_100282A6C(v25, (uint64_t)&v29);
    v6 = 0;
    if (v30 < 0 || v5 != v29.origin.x)
      return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
    goto LABEL_33;
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88))
    goto LABEL_33;
  v12 = *(_OWORD *)(a1 + 112);
  v24[0] = *(_OWORD *)(a1 + 96);
  v24[1] = v12;
  v24[2] = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a2 + 112);
  v23[0] = *(_OWORD *)(a2 + 96);
  v23[1] = v13;
  v23[2] = *(_OWORD *)(a2 + 128);
  if ((static CGAffineTransform.== infix(_:_:)(v24, v23) & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160)
    || (sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 168), *(_QWORD *)(a2 + 168)) & 1) == 0))
  {
LABEL_33:
    v6 = 0;
    return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 184);
  if ((*(_BYTE *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v6 = 1;
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 192), *(_QWORD *)(a2 + 192)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 200)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 208), *(_QWORD *)(a2 + 208)) & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 232), *(_QWORD *)(a2 + 232)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 240), *(_QWORD *)(a2 + 240)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 248), *(_QWORD *)(a2 + 248)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 256), *(_QWORD *)(a2 + 256)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 264), *(_QWORD *)(a2 + 264)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 272), *(_QWORD *)(a2 + 272)) & 1) != 0)
      {
        v15 = *(_OWORD *)(a1 + 296);
        v22[0] = *(_OWORD *)(a1 + 280);
        v22[1] = v15;
        v22[2] = *(_OWORD *)(a1 + 312);
        v16 = *(_OWORD *)(a2 + 296);
        v21[0] = *(_OWORD *)(a2 + 280);
        v21[1] = v16;
        v21[2] = *(_OWORD *)(a2 + 312);
        if ((static CGAffineTransform.== infix(_:_:)(v22, v21) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 328), *(_QWORD *)(a2 + 328)) & 1) != 0
          && *(double *)(a1 + 336) == *(double *)(a2 + 336)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 344), *(_QWORD *)(a2 + 344)) & 1) != 0
          && *(double *)(a1 + 352) == *(double *)(a2 + 352)
          && *(double *)(a1 + 360) == *(double *)(a2 + 360)
          && *(double *)(a1 + 368) == *(double *)(a2 + 368)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 376), *(_QWORD *)(a2 + 376)) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 384), *(_QWORD *)(a2 + 384)) & 1) != 0
          && *(double *)(a1 + 392) == *(double *)(a2 + 392))
        {
          v17 = *(_OWORD *)(a1 + 416);
          v20[0] = *(_OWORD *)(a1 + 400);
          v20[1] = v17;
          v20[2] = *(_OWORD *)(a1 + 432);
          v18 = *(_OWORD *)(a2 + 416);
          v19[0] = *(_OWORD *)(a2 + 400);
          v19[1] = v18;
          v19[2] = *(_OWORD *)(a2 + 432);
          if ((static CGAffineTransform.== infix(_:_:)(v20, v19) & 1) != 0
            && *(double *)(a1 + 448) == *(double *)(a2 + 448)
            && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 456), *(_QWORD *)(a2 + 456)) & 1) != 0
            && *(double *)(a1 + 464) == *(double *)(a2 + 464)
            && *(double *)(a1 + 472) == *(double *)(a2 + 472)
            && *(double *)(a1 + 480) == *(double *)(a2 + 480)
            && *(_QWORD *)(a1 + 488) == *(_QWORD *)(a2 + 488)
            && *(double *)(a1 + 496) == *(double *)(a2 + 496)
            && *(double *)(a1 + 504) == *(double *)(a2 + 504)
            && *(double *)(a1 + 512) == *(double *)(a2 + 512)
            && *(double *)(a1 + 520) == *(double *)(a2 + 520)
            && *(double *)(a1 + 528) == *(double *)(a2 + 528))
          {
            v6 = ((*(_BYTE *)(a1 + 536) & 1) == 0) ^ *(_BYTE *)(a2 + 536);
            return v6 & 1;
          }
        }
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(_BYTE *)(a2 + 184))
    goto LABEL_38;
  return v6 & 1;
}

void *sub_100281C24@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  CGFloat v8;
  void *v9;
  CGFloat ty;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CGFloat v19;
  void *v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  CGFloat v30;
  void *v31;
  CGFloat v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  CGFloat v41;
  void *v42;
  CGFloat v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  CGFloat v52;
  void *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  CGFloat v63;
  void *v64;
  CGFloat v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CGFloat v72;
  void *v73;
  CGFloat v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  CGFloat v83;
  void *v84;
  CGFloat v85;
  id v86;
  id v87;
  id v88;
  CGAffineTransform aBlock;
  _BYTE __src[537];

  *(_QWORD *)__src = 0x404E000000000000;
  *(_QWORD *)&__src[8] = 0x4028000000000000;
  *(_QWORD *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(_QWORD *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_1003953B0;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_1003953C0;
  *(_QWORD *)&__src[160] = 2;
  sub_1000087DC(0, (unint64_t *)&qword_100498E28, UIFont_ptr);
  *(_QWORD *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleLargeTitle, UIFontWeightBold);
  *(_QWORD *)&__src[176] = 0;
  __src[184] = 1;
  *(_QWORD *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(UIFontTextStyleTitle2);
  v3 = (void *)objc_opt_self(UIFont);
  *(_QWORD *)&__src[200] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
  *(_QWORD *)&__src[208] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
  *(_OWORD *)&__src[216] = xmmword_1003953D0;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v4, "labelColor");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = COERCE_DOUBLE(swift_allocObject(&unk_10045EB10, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v8 + 16) = v6;
  *(_QWORD *)(*(_QWORD *)&v8 + 24) = v5;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v8;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045EB28;
  v9 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v11 = v6;
  v12 = v5;
  v13 = objc_msgSend(v7, "initWithDynamicProvider:", v9, swift_release(*(_QWORD *)&ty).n128_f64[0]);

  _Block_release(v9);
  *(_QWORD *)&__src[232] = v13;
  v14 = objc_msgSend(v4, "whiteColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.35);

  v16 = objc_msgSend(v4, "labelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.85);

  v18 = objc_allocWithZone((Class)UIColor);
  v19 = COERCE_DOUBLE(swift_allocObject(&unk_10045EB60, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v19 + 16) = v17;
  *(_QWORD *)(*(_QWORD *)&v19 + 24) = v15;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v19;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045EB78;
  v20 = _Block_copy(&aBlock);
  v21 = aBlock.ty;
  v22 = v17;
  v23 = v15;
  v24 = objc_msgSend(v18, "initWithDynamicProvider:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);

  _Block_release(v20);
  *(_QWORD *)&__src[240] = v24;
  v25 = objc_msgSend(v4, "whiteColor");
  v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.175);

  v27 = objc_msgSend(v4, "labelColor");
  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.4);

  v29 = objc_allocWithZone((Class)UIColor);
  v30 = COERCE_DOUBLE(swift_allocObject(&unk_10045EBB0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v30 + 16) = v28;
  *(_QWORD *)(*(_QWORD *)&v30 + 24) = v26;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v30;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045EBC8;
  v31 = _Block_copy(&aBlock);
  v32 = aBlock.ty;
  v33 = v28;
  v34 = v26;
  v35 = objc_msgSend(v29, "initWithDynamicProvider:", v31, swift_release(*(_QWORD *)&v32).n128_f64[0]);

  _Block_release(v31);
  *(_QWORD *)&__src[248] = v35;
  v36 = objc_msgSend(v4, "whiteColor");
  v37 = objc_msgSend(v36, "colorWithAlphaComponent:", 0.35);

  v38 = objc_msgSend(v4, "labelColor");
  v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.85);

  v40 = objc_allocWithZone((Class)UIColor);
  v41 = COERCE_DOUBLE(swift_allocObject(&unk_10045EC00, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v41 + 16) = v39;
  *(_QWORD *)(*(_QWORD *)&v41 + 24) = v37;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v41;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045EC18;
  v42 = _Block_copy(&aBlock);
  v43 = aBlock.ty;
  v44 = v39;
  v45 = v37;
  v46 = objc_msgSend(v40, "initWithDynamicProvider:", v42, swift_release(*(_QWORD *)&v43).n128_f64[0]);

  _Block_release(v42);
  *(_QWORD *)&__src[256] = v46;
  v47 = objc_msgSend(v4, "whiteColor");
  v48 = objc_msgSend(v47, "colorWithAlphaComponent:", 0.175);

  v49 = objc_msgSend(v4, "labelColor");
  v50 = objc_msgSend(v49, "colorWithAlphaComponent:", 0.65);

  v51 = objc_allocWithZone((Class)UIColor);
  v52 = COERCE_DOUBLE(swift_allocObject(&unk_10045EC50, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v52 + 16) = v50;
  *(_QWORD *)(*(_QWORD *)&v52 + 24) = v48;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v52;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045EC68;
  v53 = _Block_copy(&aBlock);
  v54 = aBlock.ty;
  v55 = v50;
  v56 = v48;
  v57 = objc_msgSend(v51, "initWithDynamicProvider:", v53, swift_release(*(_QWORD *)&v54).n128_f64[0]);

  _Block_release(v53);
  *(_QWORD *)&__src[264] = v57;
  v58 = objc_msgSend(v4, "whiteColor");
  v59 = objc_msgSend(v58, "colorWithAlphaComponent:", 0.4);

  v60 = objc_msgSend(v4, "labelColor");
  v61 = objc_msgSend(v60, "colorWithAlphaComponent:", 0.4);

  v62 = objc_allocWithZone((Class)UIColor);
  v63 = COERCE_DOUBLE(swift_allocObject(&unk_10045ECA0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v63 + 16) = v61;
  *(_QWORD *)(*(_QWORD *)&v63 + 24) = v59;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v63;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045ECB8;
  v64 = _Block_copy(&aBlock);
  v65 = aBlock.ty;
  v66 = v61;
  v67 = v59;
  v68 = objc_msgSend(v62, "initWithDynamicProvider:", v64, swift_release(*(_QWORD *)&v65).n128_f64[0]);

  _Block_release(v64);
  *(_QWORD *)&__src[272] = v68;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(_QWORD *)&__src[328] = objc_msgSend(v4, "clearColor");
  *(_QWORD *)&__src[336] = 0x3FB999999999999ALL;
  *(_QWORD *)&__src[344] = objc_msgSend(v4, "whiteColor");
  *(_OWORD *)&__src[352] = xmmword_1003953E0;
  *(_QWORD *)&__src[368] = 0x3FD999999999999ALL;
  v69 = objc_msgSend(v4, "whiteColor");
  v70 = objc_msgSend(v4, "tintColor");
  v71 = objc_allocWithZone((Class)UIColor);
  v72 = COERCE_DOUBLE(swift_allocObject(&unk_10045ECF0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v72 + 16) = v70;
  *(_QWORD *)(*(_QWORD *)&v72 + 24) = v69;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v72;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045ED08;
  v73 = _Block_copy(&aBlock);
  v74 = aBlock.ty;
  v75 = v70;
  v76 = v69;
  v77 = objc_msgSend(v71, "initWithDynamicProvider:", v73, swift_release(*(_QWORD *)&v74).n128_f64[0]);

  _Block_release(v73);
  *(_QWORD *)&__src[376] = v77;
  v78 = objc_msgSend(v4, "whiteColor");
  v79 = objc_msgSend(v78, "colorWithAlphaComponent:", 0.175);

  v80 = objc_msgSend(v4, "tintColor");
  v81 = objc_msgSend(v80, "colorWithAlphaComponent:", 0.175);

  v82 = objc_allocWithZone((Class)UIColor);
  v83 = COERCE_DOUBLE(swift_allocObject(&unk_10045ED40, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v83 + 16) = v81;
  *(_QWORD *)(*(_QWORD *)&v83 + 24) = v79;
  *(_QWORD *)&aBlock.tx = sub_100283564;
  aBlock.ty = v83;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_100234A18;
  *(_QWORD *)&aBlock.d = &unk_10045ED58;
  v84 = _Block_copy(&aBlock);
  v85 = aBlock.ty;
  v86 = v81;
  v87 = v79;
  v88 = objc_msgSend(v82, "initWithDynamicProvider:", v84, swift_release(*(_QWORD *)&v85).n128_f64[0]);

  _Block_release(v84);
  *(_QWORD *)&__src[384] = v88;
  *(_QWORD *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(_QWORD *)&__src[448] = 0x3FEB333333333333;
  *(_QWORD *)&__src[456] = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.08);
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(_QWORD *)&__src[480] = 0x401C000000000000;
  *(_QWORD *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_1003953F0;
  *(_OWORD *)&__src[512] = xmmword_100395400;
  *(_QWORD *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    swift_retain(a2);
    a1(__src);
    sub_10003A5C8((uint64_t)a1, a2);
    sub_10003A5C8((uint64_t)a1, a2);
  }
  return memcpy(a3, __src, 0x219uLL);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  objc_class *v18;
  char *v19;
  double *v20;
  double *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  uint64_t v36;
  void **aBlock;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v8 = a1 & 1;
  if ((a1 & 1) != 0)
    v9 = 24.0;
  else
    v9 = 50.0;
  if ((a1 & 1) != 0)
    v10 = 322.0;
  else
    v10 = 300.0;
  v11 = 1.0;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = 2.0;
  v13 = 0.0;
  v14 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v12, v10, v9, 0.0, 0.0);
  if (v8)
  {
    v15 = 0.55;
    v16 = 0.2;
    v17 = 0.0;
  }
  else
  {
    v15 = 0.25;
    v13 = 0.1;
    v16 = 0.3;
    v11 = 0.1;
    v17 = 0.25;
  }
  v18 = (objc_class *)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  *v20 = v17;
  v20[1] = v13;
  v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *v21 = v15;
  v21[1] = v11;
  v44.receiver = v19;
  v44.super_class = v18;
  v22 = objc_msgSendSuper2(&v44, "init");
  v23 = (void *)objc_opt_self(UIView);
  v42 = a2;
  v43 = a3;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_1000BED80;
  v41 = &unk_10045EAB0;
  v24 = _Block_copy(&aBlock);
  v25 = v43;
  v26 = v22;
  swift_retain(a3);
  swift_release(v25);
  objc_msgSend(v23, "_animateWithDuration:delay:options:factory:animations:completion:", 0, v26, v24, 0, v16, v13);
  _Block_release(v24);

  objc_msgSend(v14, "settlingDuration");
  v28 = v27;
  objc_msgSend(v14, "mass");
  v30 = v29;
  objc_msgSend(v14, "stiffness");
  v32 = v31;
  objc_msgSend(v14, "damping");
  v34 = v33;
  v42 = a4;
  v43 = a5;
  aBlock = _NSConcreteStackBlock;
  v39 = 1107296256;
  v40 = sub_1000BED80;
  v41 = &unk_10045EAD8;
  v35 = _Block_copy(&aBlock);
  v36 = v43;
  swift_retain(a5);
  swift_release(v36);
  objc_msgSend(v23, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v35, 0, v28, v13, v30, v32, v34, 0.0);

  _Block_release(v35);
}

uint64_t sub_100282A6C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100282A84(uint64_t a1, uint64_t a2)
{
  _s5SpecsVwcp(a2, a1);
  return a2;
}

id sub_100282AB8(uint64_t a1, char a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  if ((a2 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v2 = (*(double *)&a1 + -0.2) / 0.55;
  if (*(double *)&a1 > 0.75)
    v2 = 1.0;
  v3 = 0.0;
  if (*(double *)&a1 >= 0.2)
    v3 = v2;
  v4 = (1.0 - v3) * 0.12 + 0.78;
  v5 = v3 * 0.27 + 0.48;
  sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
}

void _s5SpecsVwxx(id *a1)
{

}

uint64_t _s5SpecsVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v5 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v7 = *(void **)(a2 + 192);
  v6 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 200) = v6;
  v8 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v9 = *(void **)(a2 + 232);
  v10 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  v40 = *(void **)(a2 + 248);
  v41 = *(void **)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v40;
  *(_QWORD *)(a1 + 256) = v41;
  v42 = *(void **)(a2 + 264);
  v43 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v42;
  *(_QWORD *)(a1 + 272) = v43;
  v11 = *(_OWORD *)(a2 + 280);
  v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  v13 = *(_QWORD *)(a2 + 336);
  v39 = *(void **)(a2 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  *(_QWORD *)(a1 + 336) = v13;
  v15 = *(void **)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v15;
  *(_QWORD *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  v16 = *(void **)(a2 + 376);
  v17 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v16;
  *(_QWORD *)(a1 + 384) = v17;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v18 = *(_OWORD *)(a2 + 400);
  v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  v20 = *(void **)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  v23 = v5;
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v39;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  v37 = v20;
  return a1;
}

uint64_t _s5SpecsVwca(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(void **)(a2 + 168);
  v9 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(void **)(a2 + 192);
  v13 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 200);
  v16 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 208);
  v19 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v21 = *(void **)(a2 + 232);
  v22 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = v21;
  v23 = v21;

  v24 = *(void **)(a2 + 240);
  v25 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v24;
  v26 = v24;

  v27 = *(void **)(a2 + 248);
  v28 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 256);
  v31 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v30;
  v32 = v30;

  v33 = *(void **)(a2 + 264);
  v34 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v33;
  v35 = v33;

  v36 = *(void **)(a2 + 272);
  v37 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v36;
  v38 = v36;

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v39 = *(void **)(a2 + 328);
  v40 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  v41 = v39;

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v42 = *(void **)(a2 + 344);
  v43 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v42;
  v44 = v42;

  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v45 = *(void **)(a2 + 376);
  v46 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = v45;
  v47 = v45;

  v48 = *(void **)(a2 + 384);
  v49 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v48;
  v50 = v48;

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v51 = *(void **)(a2 + 456);
  v52 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = v51;
  v53 = v51;

  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

void *_s5SpecsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t _s5SpecsVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __int128 v22;
  void *v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 168);
  v7 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v8 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v9 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);

  v10 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v11 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v12 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  v13 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);

  v14 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);

  v15 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v16 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v18 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v19 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v20 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);

  v21 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v23 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

uint64_t _s5SpecsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 537))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5SpecsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 537) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 168) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 537) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t _s5SpecsV20SelectedLinePositionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5SpecsV20SelectedLinePositionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1002834D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_1002834E4(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_1002834F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t _s5SpecsV27CustomCurveAnimationFactoryCMa()
{
  return objc_opt_self(_TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory);
}

uint64_t sub_100283538()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100283568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100283578(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_100283580(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (id)1)
    v5 = v2;
  else
    v5 = v3;
  if (v4 == (id)-1)
    v6 = v3;
  else
    v6 = v5;
  return v6;
}

_QWORD *sub_100283628(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

BOOL sub_1002836D4(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100283734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for SyncedLyricsLineView();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1002838A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_QWORD *)(a2 + 40 + 8 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

uint64_t sub_10028390C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  unint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;

  v3 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v5 = *(id *)(a2 + 32);
    }
    v6 = v5;
    type metadata accessor for SyncedLyricsLineView();
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      v8 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if (v8 == v4)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if (v8 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v10 = *(id *)(a2 + 32 + 8 * v8);
      }
      v11 = v10;
      v12 = static NSObject.== infix(_:_:)(v10, v3);

      if ((v12 & 1) != 0)
        return v8;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v13 = a2;
    else
      v13 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v13);
    result = swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100283A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100008758(a1, &qword_10049AEC0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_10045F710, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_10049B138, v17);
}

uint64_t sub_100283BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100283C18(a1, a2, a3, (uint64_t)&unk_10045F3A0, &qword_10049B0C0, (uint64_t)&unk_10049B0B8);
}

uint64_t sub_100283BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100283C18(a1, a2, a3, (uint64_t)&unk_10045EFB8, &qword_10049B070, (uint64_t)&unk_10049B068);
}

uint64_t sub_100283C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_100008758(a1, &qword_10049AEC0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = sub_100005574(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6, v23);
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100283D80(v1, a1);
}

uint64_t sub_100283D80(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Lyrics.TextLine(a2, a1);
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100283DC4(a1, v1);
}

uint64_t sub_100283DC4(uint64_t a1, uint64_t a2)
{
  assignWithTake for Lyrics.TextLine(a2, a1);
  return a2;
}

id SyncedLyricsSharingTransitionInfo.initialView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.initialView.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.frame.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_retain(*(_QWORD *)(v0 + 216));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 216));
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_retain(*(_QWORD *)(v0 + 232));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 232));
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v6, 1, 0);
  *v3 = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v4)
  {
    swift_beginAccess(v4 + 88, &v5, 1, 0);
    *(_BYTE *)(v4 + 88) = a1 & 1;
  }
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100284098;
}

void sub_100284098(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      v6 = *(_BYTE *)(v4 + v3[4]);
      swift_beginAccess(v5 + 88, v3, 1, 0);
      *(_BYTE *)(v5 + 88) = v6;
    }
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, a1, 33, 0);
  return j__swift_endAccess;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  _BYTE v4[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_100288B08();
}

void (*SyncedLyricsViewController.containerHeight.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1002843BC;
}

void sub_1002843BC(uint64_t a1)
{
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v1 = *(void **)a1;
  v2 = *(double *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5)
    sub_100288B08();
  free(v1);
}

id sub_100284400(uint64_t a1)
{
  char *v1;
  char *v2;
  id result;
  unsigned __int8 *v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *i;
  char *v12;
  char *v13;
  void **v14;
  void (*v15)(__int128 *, char);
  void **v16;
  void *v17;
  _QWORD *v18;
  uint64_t ObjectType;
  uint64_t v20;
  char *v21;
  void (*v22)(_BYTE *, uint64_t, _QWORD *);
  id v23;
  void *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE v29[32];
  _BYTE v30[544];
  _BYTE v31[544];
  char v32[24];
  char v33[24];
  _BYTE v34[544];
  _BYTE __dst[552];

  v2 = v1;
  result = objc_msgSend(v2, "isViewLoaded");
  if ((_DWORD)result)
  {
    v5 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v33, 0, 0);
    memcpy(__dst, v5, 0x219uLL);
    sub_10026EC3C((uint64_t)__dst);
    v6 = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)__dst, a1);
    result = (id)sub_10026ED0C((uint64_t)__dst);
    if ((v6 & 1) == 0)
    {
      sub_100288B08();
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "setShowsVerticalScrollIndicator:", v5[536]);
      v7 = (uint64_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v32, 0, 0);
      v8 = *v7;
      if ((unint64_t)*v7 >> 62)
      {
        if (v8 < 0)
          v25 = *v7;
        else
          v25 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        result = (id)_CocoaArrayWrapper.endIndex.getter(v25);
        v9 = (uint64_t)result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain();
        if (v9)
        {
LABEL_5:
          v28 = v9 - 1;
          if (v9 < 1)
          {
            __break(1u);
            return result;
          }
          v10 = 0;
          v26 = v5;
          v27 = v8 & 0xC000000000000001;
          if ((v8 & 0xC000000000000001) == 0)
            goto LABEL_8;
LABEL_7:
          for (i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
                ;
                i = (char *)*(id *)(v8 + 8 * v10 + 32))
          {
            v12 = i;
            memcpy(v30, v5, 0x219uLL);
            v13 = &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v31, &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v5, 0x219uLL);
            sub_10026EC3C((uint64_t)v30);
            sub_10026EC3C((uint64_t)v30);
            sub_10026ED0C((uint64_t)v31);
            v15 = sub_10027BC60((uint64_t)v29);
            if (*v14)
            {
              v16 = v14;
              memcpy(v34, v13, 0x219uLL);
              v17 = *v16;
              v18 = v16[1];
              ObjectType = swift_getObjectType();
              v20 = v8;
              v21 = v2;
              v22 = (void (*)(_BYTE *, uint64_t, _QWORD *))v18[2];
              sub_10026EC3C((uint64_t)v34);
              v23 = v17;
              v22(v34, ObjectType, v18);
              v2 = v21;
              v8 = v20;
              v24 = *v16;
              *v16 = v17;
              v16[1] = v18;

            }
            v15((__int128 *)v29, 0);
            sub_10026ED0C((uint64_t)v30);
            sub_100289DC8(v12);

            if (v28 == v10)
              break;
            ++v10;
            v5 = v26;
            if (v27)
              goto LABEL_7;
LABEL_8:
            ;
          }
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];

  v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v3, v5, 0, 0);
  memcpy(__dst, v3, 0x219uLL);
  sub_10026EC3C((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];
  _BYTE v7[544];

  v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v5, 1, 0);
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v7, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_10026EC3C((uint64_t)__dst);
  sub_10026EC3C((uint64_t)a1);
  sub_10026ED0C((uint64_t)v7);
  sub_100284400((uint64_t)__dst);
  sub_10026ED0C((uint64_t)a1);
  return sub_10026ED0C((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  const void *v5;

  v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v5 = (const void *)(v1 + v4);
  swift_beginAccess(v5, v3 + 476, 1, 0);
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  sub_10026EC3C((uint64_t)v3);
  return sub_100284858;
}

void sub_100284858(uint64_t a1, char a2)
{
  _QWORD *v2;
  const void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD **)a1;
  v3 = (const void *)(*(_QWORD *)a1 + 1632);
  v4 = (void *)(*(_QWORD *)a1 + 2176);
  v5 = (void *)(*(_QWORD *)a1 + 2720);
  if ((a2 & 1) != 0)
  {
    v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    sub_10026EC3C((uint64_t)(v2 + 408));
    sub_10026EC3C((uint64_t)(v2 + 408));
    sub_10026EC3C((uint64_t)(v2 + 68));
    sub_10026ED0C((uint64_t)v5);
    sub_100284400((uint64_t)(v2 + 68));
    sub_10026ED0C((uint64_t)(v2 + 408));
    sub_10026ED0C((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    v7 = (uint64_t)v4;
  }
  else
  {
    v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(_QWORD *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    sub_10026EC3C((uint64_t)(v2 + 136));
    sub_10026EC3C((uint64_t)v4);
    sub_10026ED0C((uint64_t)v5);
    sub_100284400((uint64_t)(v2 + 136));
    sub_10026ED0C((uint64_t)v4);
    v7 = (uint64_t)(v2 + 136);
  }
  sub_10026ED0C(v7);
  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*SyncedLyricsViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100284AEC;
}

void sub_100284AEC(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v3, 0, 0);
  return *v1;
}

void sub_100284BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v4, v35, 0, 0);
  if (*v4)
  {
    if (a1 && *v4 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v34, 1, 0);
  *v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10024BB10((uint64_t)_swiftEmptyArrayStorage);
    v6 = v28;
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews, v33, 1, 0);
  *v7 = v6;
  swift_bridgeObjectRelease();
  v8 = *v4;
  if (*v4)
  {
    v9 = swift_allocObject(&unk_10045EDA8, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v32, 0, 0);
    v11 = v10[66];
    v12 = v10[19];
    v13 = v10[20];
    v14 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v31, 0, 0);
    v15 = *v14;
    v16 = type metadata accessor for SyncedLyricsManager();
    v17 = swift_allocObject(v16, 152, 7);
    *(_QWORD *)(v17 + 72) = 0;
    v18 = swift_unknownObjectWeakInit(v17 + 64);
    *(_QWORD *)(v17 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v17 + 96) = 0u;
    *(_OWORD *)(v17 + 112) = 0u;
    *(_OWORD *)(v17 + 128) = 0u;
    *(_QWORD *)(v17 + 144) = 0;
    *(_QWORD *)(v17 + 16) = v8;
    *(_QWORD *)(v17 + 24) = sub_1002940E4;
    *(_QWORD *)(v17 + 32) = v9;
    *(_QWORD *)(v17 + 40) = v11;
    *(_QWORD *)(v17 + 48) = v12;
    *(_QWORD *)(v17 + 56) = v13;
    swift_beginAccess(v18, v30, 1, 0);
    *(_QWORD *)(v17 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign(v17 + 64, v2);
    *(_BYTE *)(v17 + 88) = v15;
    v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v17;
    swift_retain_n(v8, 2);
    swift_retain(v9);
    swift_release(v20);
    sub_10028FFA4();
    sub_100289FD4(v8);
    v21 = *(_QWORD *)(v2 + v19);
    if (v21)
    {
      v22 = swift_allocObject(&unk_10045EDA8, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      swift_beginAccess(v21 + 96, v29, 1, 0);
      v23 = *(_QWORD *)(v21 + 96);
      v24 = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v21 + 96) = sub_100294054;
      *(_QWORD *)(v21 + 104) = v22;
      swift_retain(v21);
      swift_retain_n(v22, 2);
      sub_10003A5C8(v23, v24);
      sub_10027EA0C();
      swift_release_n(v22, 2);
      swift_release(v21);
    }
    v25 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v26, "setPaused:", sub_10028AF70() & 1);
      swift_release(v8);

    }
    else
    {
      swift_release(v8);
    }
  }
  else
  {
    v27 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v27)
      objc_msgSend(v27, "setPaused:", 1);
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  swift_release(v9);
}

double sub_100284F10(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0.0;
  v5 = (void *)Strong;
  v6 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, &v15, 0, 0);
  if (*(_QWORD *)v6 && *(_BYTE *)(*(_QWORD *)v6 + 56) == 2)
  {
    v7 = (a2 + -0.2) / 0.55;
    if (a2 > 0.75)
      v7 = 1.0;
    if (a2 < 0.2)
      v7 = 0.0;
    v8 = (1.0 - v7) * 0.12 + 0.78;
    v9 = v7 * 0.27 + 0.48;
    sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
    v10 = UISpringTimingParameters.init(dampingRatio:response:)(v8, v9);
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  v11 = v10;

  objc_msgSend(v11, "settlingDuration");
  v13 = v12;

  return v13;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v3, 0, 0);
  return swift_retain(*v1);
}

double SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  sub_100284BA4(v4);
  swift_release(a1);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.lyrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  swift_retain(v6);
  return sub_1002851C0;
}

void sub_1002851C0(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v4 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(_QWORD *)(v6 + v5);
  *(_QWORD *)(v6 + v5) = *v4;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_100284BA4(v7);
    swift_release(v7);
    swift_release(v3);
    v7 = *v4;
  }
  else
  {
    swift_retain(v3);
    sub_100284BA4(v7);
    swift_release(v3);
  }
  swift_release(v7);
  free(v2);
}

void sub_100285254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  double v16;
  _BYTE *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v33, 0, 0);
  sub_100288EB4(v4, (uint64_t)&v30);
  if (v31)
  {
    sub_1000137C8(&v30, (uint64_t)v34);
    sub_100288EB4(a1, (uint64_t)&v30);
    v5 = v31;
    if (v31)
    {
      v6 = v32;
      sub_10000ABC8(&v30, v31);
      v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v9 = v8;
      v10 = v7();
      swift_release(v9);
      sub_10000682C(&v30);
      v11 = v35;
      v12 = v36;
      sub_10000ABC8(v34, v35);
      v13 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
      v15 = v14;
      v16 = v13();
      swift_release(v15);
      if (vabdd_f64(v10, v16) <= 0.5)
      {
        v17 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, &v29, 0, 0);
        if (*v17 != 2)
        {
          v18 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v18)
          {
            v19 = v18;
            objc_msgSend(v19, "setPaused:", sub_10028AF70() & 1);

          }
          sub_10000682C(v34);
          return;
        }
      }
    }
    else
    {
      sub_100008758((uint64_t)&v30, &qword_10049AEB0);
    }
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v23)
    {
      v24 = swift_allocObject(&unk_10045EDA8, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      swift_beginAccess(v23 + 96, &v30, 1, 0);
      v25 = *(_QWORD *)(v23 + 96);
      v26 = *(_QWORD *)(v23 + 104);
      *(_QWORD *)(v23 + 96) = sub_100294054;
      *(_QWORD *)(v23 + 104) = v24;
      swift_retain(v23);
      swift_retain_n(v24, 2);
      sub_10003A5C8(v25, v26);
      sub_10027EA0C();
      swift_release_n(v24, 2);
      swift_release(v23);
    }
    sub_10000682C(v34);
  }
  else
  {
    sub_100008758((uint64_t)&v30, &qword_10049AEB0);
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v20)
    {
      swift_beginAccess(v20 + 96, v34, 1, 0);
      v21 = *(_QWORD *)(v20 + 96);
      v22 = *(_QWORD *)(v20 + 104);
      *(_QWORD *)(v20 + 96) = 0;
      *(_QWORD *)(v20 + 104) = 0;
      swift_retain(v20);
      sub_10003A5C8(v21, v22);
      sub_10027EA0C();
      swift_release(v20);
    }
  }
  v27 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v28, "setPaused:", sub_10028AF70() & 1);

  }
}

double sub_100285520(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = 0.0;
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v17, 0, 0);
    sub_100288EB4(v5, (uint64_t)v18);

    v6 = v19;
    if (v19)
    {
      v7 = v20;
      sub_10000ABC8(v18, v19);
      v8 = *(_QWORD *)(v6 - 8);
      __chkstk_darwin();
      v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *))(v8 + 16))(v10);
      sub_100008758((uint64_t)v18, &qword_10049AEB0);
      v11 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      v13 = v12;
      v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v6);
      v3 = v11(v14);
      swift_release(v13);
    }
    else
    {
      sub_100008758((uint64_t)v18, &qword_10049AEB0);
    }
  }
  return v3;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100288EB4(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  _BYTE v6[24];
  _BYTE v7[40];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v6, 0, 0);
  sub_100288EB4(v3, (uint64_t)v7);
  swift_beginAccess(v3, v5, 33, 0);
  sub_100288EFC(a1, v3);
  swift_endAccess(v5);
  sub_100285254((uint64_t)v7);
  sub_100008758(a1, &qword_10049AEB0);
  return sub_100008758((uint64_t)v7, &qword_10049AEB0);
}

void (*SyncedLyricsViewController.timingProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3 + 18, 0, 0);
  sub_100288EB4(v5, (uint64_t)v3);
  return sub_1002857E0;
}

void sub_1002857E0(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_100288EB4(*a1, v3);
    sub_100288EB4(v5, v4);
    swift_beginAccess(v5, v2 + 15, 33, 0);
    sub_100288EFC(v3, v5);
    swift_endAccess(v2 + 15);
    sub_100285254(v4);
    sub_100008758(v3, &qword_10049AEB0);
    sub_100008758(v4, &qword_10049AEB0);
    v6 = (uint64_t)v2;
  }
  else
  {
    v7 = v2[21] + v2[22];
    sub_100288EB4(v7, v3);
    swift_beginAccess(v7, v4, 33, 0);
    sub_100288EFC((uint64_t)v2, v7);
    swift_endAccess(v4);
    sub_100285254(v3);
    sub_100008758((uint64_t)v2, &qword_10049AEB0);
    v6 = v3;
  }
  sub_100008758(v6, &qword_10049AEB0);
  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, v4, 0, 0);
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A5C8(v6, v7);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  char v49[24];
  objc_super v50;

  v1 = v0;
  ObjectType = swift_getObjectType();
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v4 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v50.receiver = v0;
  v50.super_class = v5;
  objc_msgSendSuper2(&v50, "viewDidLoad");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  objc_msgSend(v6, "setPreservesSuperviewLayoutMargins:", 1);

  objc_msgSend(v1, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v11, v13, v15, v17);
  v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v18;

  objc_msgSend(*(id *)&v1[v19], "setClipsToBounds:", 0);
  objc_msgSend(*(id *)&v1[v19], "setIndicatorStyle:", 2);
  objc_msgSend(*(id *)&v1[v19], "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v1[v19], "setDelegate:", v1);
  objc_msgSend(*(id *)&v1[v19], "setMultipleTouchEnabled:", 0);
  objc_msgSend(*(id *)&v1[v19], "setShowsVerticalScrollIndicator:", v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs + 536], swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v49, 0, 0).n128_f64[0]);
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v1[v19]);

  v23 = (void *)objc_opt_self(NSNotificationCenter);
  v24 = objc_msgSend(v23, "defaultCenter");
  v25 = NSNotificationCenter.notifications(named:object:)(UISceneDidEnterBackgroundNotification, 0);

  v26 = objc_msgSend(v23, "defaultCenter");
  v48 = NSNotificationCenter.notifications(named:object:)(UISceneWillEnterForegroundNotification, 0);

  v27 = sub_100005574(&qword_10049AED0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100384A80;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_100290CC4, 0, ObjectType);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v29);
  v30 = type metadata accessor for TaskPriority(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v4, 1, 1, v30);
  v32 = (uint64_t)v4;
  v33 = swift_allocObject(&unk_10045EDA8, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  type metadata accessor for MainActor(0);
  swift_retain(v25);
  swift_retain(v33);
  v35 = static MainActor.shared.getter(v34);
  v36 = (_QWORD *)swift_allocObject(&unk_10045EDD0, 48, 7);
  v36[2] = v35;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v25;
  v36[5] = v33;
  swift_release(v33);
  v37 = sub_100283A94(v32, (uint64_t)&unk_10049AEE0, (uint64_t)v36);
  v38 = swift_release(v37);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v31)(v32, 1, 1, v30, v38);
  v39 = v48;
  v40 = swift_allocObject(&unk_10045EDA8, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16);
  swift_retain(v39);
  swift_retain(v40);
  v42 = static MainActor.shared.getter(v41);
  v43 = (_QWORD *)swift_allocObject(&unk_10045EDF8, 48, 7);
  v43[2] = v42;
  v43[3] = &protocol witness table for MainActor;
  v43[4] = v39;
  v43[5] = v40;
  swift_release(v40);
  v44 = sub_100283A94(v32, (uint64_t)&unk_10049AEF0, (uint64_t)v43);
  swift_release(v44);
  v45 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v45, "setDelegate:", v1);
  objc_msgSend(v45, "addTarget:action:", v1, "bottomTapHandler");
  v46 = objc_msgSend(v1, "view");
  if (v46)
  {
    v47 = v46;
    objc_msgSend(v46, "addGestureRecognizer:", v45);

    swift_release(v39);
    swift_release(v25);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100285F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049B0D0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049B0D8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v16;
  v5[33] = v17;
  return swift_task_switch(sub_100286058, v16, v17);
}

uint64_t sub_100286058()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v1 = v0[26];
  v16 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[15];
  v17 = v0[16] + 16;
  v0[11] = v4;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_1000087DC(0, &qword_10049B0E8, UIWindowScene_ptr);
  v0[34] = v6;
  v7 = sub_100006924(&qword_10049B0F0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v8 = swift_retain(v4);
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_10049B140, 0, v5, v6, v7, v8);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v9 = AsyncCompactMapSequence.transform.getter(v3);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v9, v11, v5, v6, v7);
  swift_beginAccess(v17, v0 + 8, 0, 0);
  v13 = static MainActor.shared.getter(v12);
  v0[35] = v13;
  v18 = (char *)&dword_10049B0F8 + dword_10049B0F8;
  v14 = (_QWORD *)swift_task_alloc(unk_10049B0FC);
  v0[36] = v14;
  *v14 = v0;
  v14[1] = sub_10028621C;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v18)(v13, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_10028621C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 280);
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_10028627C, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_10028627C()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v34 = *(_QWORD *)(v0 + 248);
    v35 = *(_QWORD *)(v0 + 232);
    v36 = *(_QWORD *)(v0 + 208);
    v38 = *(_QWORD *)(v0 + 176);
    v37 = *(_QWORD *)(v0 + 184);
    v39 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v35, *(_QWORD *)(v0 + 216));
    swift_release(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_11;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        if (qword_100498A10 != -1)
          swift_once(&qword_100498A10, sub_100257E30);
        v10 = type metadata accessor for Logger(0, v9);
        v11 = sub_1000086B4(v10, (uint64_t)static Logger.lyrics);
        v12 = Logger.logObject.getter(v11);
        v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v14 = 0;
          swift_slowDealloc(v14, -1, -1);
        }
        v15 = *(_QWORD *)(v0 + 176);
        v16 = *(_QWORD *)(v0 + 152);
        v43 = *(_QWORD *)(v0 + 168);
        v44 = *(_QWORD *)(v0 + 160);
        v17 = *(_QWORD *)(v0 + 136);
        v42 = *(_QWORD *)(v0 + 144);
        v18 = *(_QWORD *)(v0 + 128);

        v19 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
        v27 = (void *)static OS_dispatch_queue.main.getter(v19, v20, v21, v22, v23, v24, v25, v26);
        *(_QWORD *)(v0 + 48) = sub_1002940DC;
        *(_QWORD *)(v0 + 56) = v18;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_1000BED80;
        *(_QWORD *)(v0 + 40) = &unk_10045F728;
        v28 = _Block_copy((const void *)(v0 + 16));
        v29 = swift_retain(v18);
        static DispatchQoS.unspecified.getter(v29);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v30 = sub_100006924((unint64_t *)&unk_10049B100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v31 = sub_100005574(&qword_100499718);
        v32 = sub_1000C27F8((unint64_t *)&qword_10049B110, &qword_100499718);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v31, v32, v17, v30);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v16, v28);
        _Block_release(v28);

        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v16, v17);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v15, v44);
        swift_release(*(_QWORD *)(v0 + 56));
      }
      else
      {

      }
      goto LABEL_14;
    }
LABEL_11:

LABEL_14:
    v40 = static MainActor.shared.getter(v33);
    *(_QWORD *)(v0 + 280) = v40;
    v45 = (void (*)(uint64_t, uint64_t))((char *)&dword_10049B0F8 + dword_10049B0F8);
    v41 = (_QWORD *)swift_task_alloc(unk_10049B0FC);
    *(_QWORD *)(v0 + 288) = v41;
    *v41 = v0;
    v41[1] = sub_10028621C;
    v45(v40, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_100286660(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_100286678, 0, 0);
}

uint64_t sub_100286678()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  Notification.object.getter();
  v1 = *(_QWORD **)(v0 + 48);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_1000087DC(0, &qword_10049B0E8, UIWindowScene_ptr);
    if ((swift_dynamicCast(v1, v0 + 16, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
      **(_QWORD **)(v0 + 48) = 0;
  }
  else
  {
    sub_100008758(v0 + 16, &qword_10049B130);
    *v1 = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100286714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v6 = sub_100005574(&qword_10049B0D8);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v3[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049B120);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notification(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v3[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v3[17] = v12;
  v3[18] = v14;
  return swift_task_switch(sub_100286804, v12, v14);
}

uint64_t sub_100286804()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[10]);
  type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  sub_100006924(&qword_10049B128, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v1 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_1002868A8;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[13], v0[7], v0[8]);
}

uint64_t sub_1002868A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100286A6C;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 152))(v2 + 16, 0);
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_100286918;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_100286918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100008758(v3, &qword_10049B120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 128), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)AsyncCompactMapSequence.Iterator.transform.getter(v9);
    *(_QWORD *)(v0 + 168) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_100286AD0;
    return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + 48, *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_100286A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v0 + 152))(v0 + 16, 1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100286AD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 168);
  v4 = *(_QWORD *)(*v0 + 120);
  v3 = *(_QWORD *)(*v0 + 128);
  v5 = *(_QWORD *)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  v6 = swift_release(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
  return swift_task_switch(sub_100286B4C, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_100286B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    *(_QWORD *)(v0 + 152) = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 16, *(_QWORD *)(v0 + 80));
    type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
    sub_100006924(&qword_10049B128, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v5 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_1002868A8;
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

void sub_100286C38(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;

  }
  swift_beginAccess(v1, &v7, 0, 0);
  v3 = swift_unknownObjectWeakLoadStrong(v1);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v6 = v5;

    if (v5)
    {
      objc_msgSend(v6, "setPaused:", 1);

    }
  }
}

uint64_t sub_100286CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049B0D0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049B0D8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v16;
  v5[33] = v17;
  return swift_task_switch(sub_100286E28, v16, v17);
}

uint64_t sub_100286E28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v1 = v0[26];
  v16 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[15];
  v17 = v0[16] + 16;
  v0[11] = v4;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_1000087DC(0, &qword_10049B0E8, UIWindowScene_ptr);
  v0[34] = v6;
  v7 = sub_100006924(&qword_10049B0F0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v8 = swift_retain(v4);
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_10049B0E0, 0, v5, v6, v7, v8);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v5, v7);
  v9 = AsyncCompactMapSequence.transform.getter(v3);
  v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v9, v11, v5, v6, v7);
  swift_beginAccess(v17, v0 + 8, 0, 0);
  v13 = static MainActor.shared.getter(v12);
  v0[35] = v13;
  v18 = (char *)&dword_10049B0F8 + dword_10049B0F8;
  v14 = (_QWORD *)swift_task_alloc(unk_10049B0FC);
  v0[36] = v14;
  *v14 = v0;
  v14[1] = sub_100286FEC;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v18)(v13, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_100286FEC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 280);
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release(v4);
  return swift_task_switch(sub_10028704C, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_10028704C()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v28 = *(_QWORD *)(v0 + 248);
    v29 = *(_QWORD *)(v0 + 232);
    v30 = *(_QWORD *)(v0 + 208);
    v32 = *(_QWORD *)(v0 + 176);
    v31 = *(_QWORD *)(v0 + 184);
    v33 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v29, *(_QWORD *)(v0 + 216));
    swift_release(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD *)(v0 + 176);
        v10 = *(_QWORD *)(v0 + 152);
        v37 = *(_QWORD *)(v0 + 168);
        v38 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 136);
        v36 = *(_QWORD *)(v0 + 144);
        v12 = *(_QWORD *)(v0 + 128);
        v13 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
        v21 = (void *)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
        *(_QWORD *)(v0 + 48) = sub_10029404C;
        *(_QWORD *)(v0 + 56) = v12;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_1000BED80;
        *(_QWORD *)(v0 + 40) = &unk_10045F6D8;
        v22 = _Block_copy((const void *)(v0 + 16));
        v23 = swift_retain(v12);
        static DispatchQoS.unspecified.getter(v23);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v24 = sub_100006924((unint64_t *)&unk_10049B100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v25 = sub_100005574(&qword_100499718);
        v26 = sub_1000C27F8((unint64_t *)&qword_10049B110, &qword_100499718);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v25, v26, v11, v24);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v10, v22);
        _Block_release(v22);

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v38);
        swift_release(*(_QWORD *)(v0 + 56));
      }
      else
      {

      }
      goto LABEL_10;
    }
LABEL_7:

LABEL_10:
    v34 = static MainActor.shared.getter(v27);
    *(_QWORD *)(v0 + 280) = v34;
    v39 = (void (*)(uint64_t, uint64_t))((char *)&dword_10049B0F8 + dword_10049B0F8);
    v35 = (_QWORD *)swift_task_alloc(unk_10049B0FC);
    *(_QWORD *)(v0 + 288) = v35;
    *v35 = v0;
    v35[1] = sub_100286FEC;
    v39(v34, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_100287380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_1002940F0, 0, 0);
}

void sub_100287398(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  char v31;
  _BYTE v32[24];
  _BYTE v33[24];
  uint64_t v34[3];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain(v5);

    if (v5)
    {
      v6 = swift_allocObject(&unk_10045EDA8, 24, 7);
      swift_beginAccess(v2, v37, 0, 0);
      v7 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      swift_unknownObjectWeakInit(v6 + 16);

      swift_beginAccess(v5 + 96, v36, 1, 0);
      v8 = *(_QWORD *)(v5 + 96);
      v9 = *(_QWORD *)(v5 + 104);
      *(_QWORD *)(v5 + 96) = sub_100294054;
      *(_QWORD *)(v5 + 104) = v6;
      swift_retain_n(v6, 2);
      sub_10003A5C8(v8, v9);
      sub_10027EA0C();
      swift_release_n(v6, 2);
      swift_release(v5);
    }
  }
  swift_beginAccess(v2, v35, 0, 0);
  v10 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v10[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;

  }
  if (qword_100498A10 != -1)
    swift_once(&qword_100498A10, sub_100257E30);
  v12 = type metadata accessor for Logger(0, v11);
  sub_1000086B4(v12, (uint64_t)static Logger.lyrics);
  v13 = swift_retain_n(a1, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v34[0] = v17;
    *(_DWORD *)v16 = 136315138;
    swift_beginAccess(v2, v32, 0, 0);
    v18 = swift_unknownObjectWeakLoadStrong(v2);
    if (v18)
    {
      v19 = (void *)v18;
      v20 = sub_10028AF70();

      v21 = v20 & 1;
    }
    else
    {
      v21 = 2;
    }
    v33[0] = v21;
    v22 = sub_100005574(&qword_10049B118);
    v23 = (char *)String.init<A>(describing:)(v33, v22);
    *(_QWORD *)(v16 + 4) = sub_100249A1C(v23, v24, v34);
    swift_bridgeObjectRelease();
    swift_release_n(a1, 2);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    swift_release_n(a1, 2);
  }

  swift_beginAccess(v2, v34, 0, 0);
  v25 = swift_unknownObjectWeakLoadStrong(v2);
  if (v25)
  {
    v26 = (void *)v25;
    v27 = *(void **)(v25 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v28 = v27;

    if (v27)
    {
      swift_beginAccess(v2, v33, 0, 0);
      v29 = swift_unknownObjectWeakLoadStrong(v2);
      if (v29)
      {
        v30 = (void *)v29;
        v31 = sub_10028AF70();

      }
      else
      {
        v31 = 1;
      }
      objc_msgSend(v28, "setPaused:", v31 & 1);

    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "screen");

      v5 = objc_msgSend(v6, "displayLinkWithTarget:selector:", v1, "displayLinkFired:");
    }
    v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    v9 = *(void **)&v1[v7];
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, "setPaused:", sub_10028AF70() & 1);

      v11 = *(void **)&v1[v7];
      if (v11)
      {
        v12 = (void *)objc_opt_self(NSRunLoop);
        v13 = v11;
        v14 = objc_msgSend(v12, "mainRunLoop");
        objc_msgSend(v13, "addToRunLoop:forMode:", v14, NSRunLoopCommonModes);

        v15 = *(void **)&v1[v7];
        if (v15)
          objc_msgSend(v15, "setPreferredFramesPerSecond:", 30);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink], "invalidate");
  v4 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = 0;

}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  char *v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[2];
  _QWORD v48[4];
  objc_super v49;
  CGRect v50;
  CGRect v51;

  v1 = v0;
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v49, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v3 = v2;
  _s3__C6CGRectVMa_1(0);
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v48[0] = v5;
  v48[1] = v7;
  v48[2] = v9;
  v48[3] = v11;
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds + 16];
  v47[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v47[1] = v13;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) == 0)
    return;
  v14 = objc_msgSend(v1, "view");
  if (!v14)
    goto LABEL_14;
  v15 = v14;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v50.origin.x = v17;
  v50.origin.y = v19;
  v50.size.width = v21;
  v50.size.height = v23;
  v48[0] = CGRectGetWidth(v50);
  *(_QWORD *)&v47[0] = CGRectGetWidth(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) != 0)
    sub_100288F64();
  v24 = objc_msgSend(v1, "view");
  if (!v24)
    goto LABEL_15;
  v25 = v24;
  objc_msgSend(v24, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v51.origin.x = v27;
  v51.origin.y = v29;
  v51.size.width = v31;
  v51.size.height = v33;
  v48[0] = CGRectGetHeight(v51);
  *(_QWORD *)&v47[0] = CGRectGetHeight(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v48, v47) & 1) != 0)
  {
    sub_10028BBB8(0);
    v34 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v48, 0, 0);
    *(_QWORD *)&v47[0] = *(_QWORD *)v34;
    v46 = 0;
    v35 = sub_100290E38();
    if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(v47, &v46, &type metadata for CGFloat, &protocol witness table for CGFloat, v35) & 1) != 0)sub_100288B08();
  }
  v36 = objc_msgSend(v1, "view");
  if (!v36)
    goto LABEL_16;
  v37 = v36;
  objc_msgSend(v36, "bounds");
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;

  *(_QWORD *)v12 = v39;
  *((_QWORD *)v12 + 1) = v41;
  *((_QWORD *)v12 + 2) = v43;
  *((_QWORD *)v12 + 3) = v45;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v1, "viewLayoutMarginsDidChange");
  sub_100288F64();
}

void sub_100287DF8(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v5 = _s19SBS_TextContentViewCMa();
    v6 = swift_dynamicCastClass(v3, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v7)
      {
        v8 = v6;
        swift_beginAccess(v7 + 96, v23, 0, 0);
        v9 = *(double (**)(uint64_t))(v7 + 96);
        if (v9)
        {
          v10 = *(_QWORD *)(v7 + 104);
          v11 = v3;
          swift_retain(v7);
          v12 = sub_10003A434((uint64_t)v9, v10);
          v13 = v9(v12);
          swift_beginAccess(v7 + 88, &v22, 0, 0);
          v14 = 0.0;
          if (*(_BYTE *)(v7 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            v14 = v15;
          }
          sub_10003A5C8((uint64_t)v9, v10);
          swift_release(v7);
          v16 = v13 - v14;
          if (v16 != *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v16;
            v17 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v17)
            {
              __break(1u);
              return;
            }
            v18 = v17;
            v19 = a2 & 1;
            sub_10026CF5C(v19, v16);

            v20 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v20)
            {
              v21 = v20;
              sub_10026CF5C(v19, v16);

              v11 = v21;
            }
          }

        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[24];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v56[24];
  _QWORD v57[3];
  uint64_t *v58;
  uint64_t v59;
  char v60[24];

  v5 = v0;
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(v6, v60, 0, 0);
  v7 = *v6;
  if ((unint64_t)v7 >> 62)
    goto LABEL_18;
  v8 = *(char **)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_22;
LABEL_3:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if (((unint64_t)v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v10 = (char *)*(id *)(v7 + 8 * (_QWORD)v9 + 32);
LABEL_8:
    v8 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease();
  if (v4 >= v28)
  {
LABEL_44:
    sub_1000244B0(v1, (uint64_t)v57);
    if ((swift_dynamicCast(&v53, v57, v2, &type metadata for Lyrics.SongwritersLine, 6) & 1) == 0)
      goto LABEL_52;
    swift_bridgeObjectRelease();
    sub_1000244B0(v1, (uint64_t)v57);
    v29 = (uint64_t)v58;
    v30 = v59;
    sub_10000ABC8(v57, (uint64_t)v58);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    sub_10000682C(v57);
    if (v31 < 1)
      goto LABEL_52;
    sub_1000244B0(v1, (uint64_t)v57);
    v1 = (uint64_t)v58;
    v32 = v59;
    sub_10000ABC8(v57, (uint64_t)v58);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v1, v32);
    v7 = v33 - 1;
    if (!__OFSUB__(v33, 1))
    {
      sub_10000682C(v57);
      v34 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v57, 0, 0);
      v1 = *v34;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_54:
        swift_bridgeObjectRetain();
        v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);

        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_50:
          v35 = (char *)*(id *)(v1 + 8 * v7 + 32);

LABEL_51:
          v8 = v35;
LABEL_52:
          objc_msgSend(v8, "setHighlighted:", 1);
          v36 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
          v44 = (void *)static OS_dispatch_queue.main.getter(v36, v37, v38, v39, v40, v41, v42, v43);
          v45 = swift_allocObject(&unk_10045EE20, 32, 7);
          *(_QWORD *)(v45 + 16) = v5;
          *(_QWORD *)(v45 + 24) = v8;
          v46 = v5;
          v47 = v8;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100290EA8, v45, 0.3);

          swift_release(v45);
          return;
        }
LABEL_59:
        __break(1u);
LABEL_60:
        swift_bridgeObjectRetain();
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  while (1)
  {
    sub_1000244B0(v1, (uint64_t)v57);
    v1 = (uint64_t)v58;
    v2 = v59;
    sub_10000ABC8(v57, (uint64_t)v58);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    sub_10000682C(v57);
    v1 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
      goto LABEL_54;
    if (v7 < 0)
      goto LABEL_56;
    if ((unint64_t)v7 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_50;
    __break(1u);
LABEL_18:
    if (v7 < 0)
      v14 = v7;
    else
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v14);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15)
      return;
    swift_beginAccess(v15 + 96, v51, 0, 0);
    v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16)
      return;
    v17 = *(_QWORD *)(v15 + 104);
    swift_retain(v15);
    v18 = sub_10003A434((uint64_t)v16, v17);
    v19 = v16(v18);
    swift_beginAccess(v15 + 88, v50, 0, 0);
    v20 = 0.0;
    if (*(_BYTE *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v20 = v21;
    }
    sub_10003A5C8((uint64_t)v16, v17);
    swift_release(v15);
    v22 = &v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v49, 0, 0);
    v23 = *(_QWORD *)v22;
    if (!v23)
    {
      v55 = 0;
      v53 = 0u;
      v54 = 0u;
LABEL_34:
      sub_100008758((uint64_t)&v53, &qword_10049AF20);
      return;
    }
    swift_retain(v23);
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v53, v19 - v20);
    swift_release(v23);
    if (!*((_QWORD *)&v54 + 1))
      goto LABEL_34;
    sub_1000137C8(&v53, (uint64_t)v57);
    v24 = (uint64_t)v58;
    v25 = v59;
    sub_10000ABC8(v57, (uint64_t)v58);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    v26 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v1 = *v26;
    if ((*v26 & 0xC000000000000001) != 0)
      goto LABEL_60;
    if (v7 < 0)
      break;
    if ((unint64_t)v7 >= *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_62;
    v8 = (char *)*(id *)(v1 + 8 * v7 + 32);
LABEL_32:
    sub_10000682C(v57);
LABEL_9:
    v1 = (uint64_t)&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v56, 0, 0);
    sub_1000244B0(v1, (uint64_t)v57);
    v2 = sub_100005574(&qword_100499EA0);
    if (!swift_dynamicCast(&v53, v57, v2, &type metadata for Lyrics.InstrumentalLine, 6))
      goto LABEL_44;
    sub_1000244B0(v1, (uint64_t)v57);
    v3 = v58;
    v11 = v59;
    v7 = (uint64_t)sub_10000ABC8(v57, (uint64_t)v58);
    v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 16))(v3, v11);
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    sub_10000682C(v57);
    v3 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v52, 0, 0);
    v7 = *v3;
    if ((unint64_t)*v3 >> 62)
      goto LABEL_40;
    if (v4 >= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_100288688(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(__int128 *);
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  char v46[24];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  char v62[24];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v2 = v1;
  v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v62, 0, 0);
  sub_1000244B0(v4, (uint64_t)&v47);
  v5 = sub_100005574(&qword_100499EA0);
  result = swift_dynamicCast(&v63, &v47, v5, &type metadata for Lyrics.TextLine, 6);
  if ((result & 1) != 0)
  {
    v7 = v65;
    v8 = v69;
    v9 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v44 = v68;
    v45 = v67;
    if (!v9)
      goto LABEL_10;
    v10 = v63;
    v11 = v64;
    v12 = BYTE8(v64);
    v13 = BYTE9(v64);
    v14 = BYTE10(v64);
    v15 = *((_QWORD *)&v65 + 1);
    v16 = v66;
    v17 = objc_msgSend(v9, "copy");
    _bridgeAnyObjectToAny(_:)(v17);
    swift_unknownObjectRelease(v17);
    v18 = sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
    if ((swift_dynamicCast(&v47, &v63, (char *)&type metadata for Any + 8, v18, 6) & 1) != 0)
    {
      v42 = v14;
      v43 = (void *)v47;
      objc_msgSend(a1, "cancelTrackingWithEvent:", 0);
      result = (uint64_t)objc_msgSend(v2, "view");
      if (!result)
      {
        __break(1u);
        return result;
      }
      v19 = (void *)result;
      if (v13)
        v20 = 2;
      else
        v20 = 0;
      objc_msgSend((id)result, "convertRect:fromCoordinateSpace:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], UIView.untransformedFrame.getter());
      v40 = v22;
      v41 = v21;
      v24 = v23;
      v26 = v25;

      v27 = objc_msgSend(a1, "isSelected");
      objc_msgSend(a1, "transform");
      v28 = v63;
      v29 = v64;
      v30 = v65;
      v31 = swift_allocObject(&unk_10045F350, 24, 7);
      *(_QWORD *)(v31 + 16) = a1;
      v32 = swift_allocObject(&unk_10045F378, 24, 7);
      *(_QWORD *)(v32 + 16) = a1;
      v47 = v10;
      *(_QWORD *)&v48 = v11;
      BYTE8(v48) = v12;
      BYTE9(v48) = v13;
      BYTE10(v48) = v42;
      *(_QWORD *)&v49 = v7;
      *((_QWORD *)&v49 + 1) = v15;
      v50 = v16;
      v51 = v45;
      v52 = v44;
      *(_QWORD *)&v53 = v8;
      *((_QWORD *)&v53 + 1) = v43;
      *(_QWORD *)&v54 = v20;
      *((_QWORD *)&v54 + 1) = v41;
      *(_QWORD *)&v55 = v40;
      *((_QWORD *)&v55 + 1) = v24;
      *(_QWORD *)&v56 = v26;
      BYTE8(v56) = v27;
      v57 = v28;
      v58 = v29;
      v59 = v30;
      *(_QWORD *)&v60 = sub_100293E30;
      *((_QWORD *)&v60 + 1) = v31;
      *(_QWORD *)&v61 = sub_100293E44;
      *((_QWORD *)&v61 + 1) = v32;
      v71 = v55;
      v72 = v56;
      v63 = v10;
      v64 = v48;
      v69 = v53;
      v70 = v54;
      v67 = v45;
      v68 = v44;
      v65 = v49;
      v66 = v16;
      v76 = v60;
      v77 = v61;
      v74 = v29;
      v75 = v30;
      v33 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      v73 = v28;
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler], v46, 0, 0);
      v34 = *(void (**)(__int128 *))v33;
      if (!*(_QWORD *)v33)
      {
        v39 = a1;
        return (uint64_t)sub_100293E84(&v47);
      }
      v35 = *((_QWORD *)v33 + 1);
      v36 = a1;
      swift_bridgeObjectRetain();
      swift_retain(v45);
      swift_retain(v44);
      swift_retain(v8);
      v37 = v43;
      sub_10003A434((uint64_t)v34, v35);
      v34(&v63);

      sub_10003A5C8((uint64_t)v34, v35);
      sub_100293E84(&v47);
      swift_release(v8);
      swift_release(v44);
      v38 = v45;
    }
    else
    {
LABEL_10:
      swift_release(v8);
      swift_release(v44);
      v38 = v45;
    }
    swift_release(v38);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setPaused:", sub_10028AF70() & 1);

  }
}

void sub_100288B08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  CGFloat *v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  id v45;
  id v46;
  char v47[24];
  char v48[24];
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  CGRect v54;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v53, 0, 0).n128_u64[0];
  if (*(char *)(v2 + 40) < 0)
  {
    v22 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v23 = *v22;
    if ((unint64_t)*v22 >> 62)
    {
      if (v23 < 0)
        v42 = *v22;
      else
        v42 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter(v42))
      {
LABEL_9:
        if ((v23 & 0xC000000000000001) != 0)
        {
          v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
        }
        else
        {
          if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_25;
          }
          v25 = (char *)*(id *)(v23 + 32);
        }
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = (uint64_t)&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
        swift_beginAccess(&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v47, 0, 0);
        sub_1000244B0(v27, (uint64_t)v49);

        sub_1000137C8(v49, (uint64_t)v50);
        v28 = v51;
        v29 = v52;
        sub_10000ABC8(v50, v51);
        v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        v23 = v30;
        v2 = *v22;
        if ((*v22 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v31 = *(id *)(v2 + 8 * v30 + 32);
LABEL_16:
            v32 = v31;
            v33 = UIView.untransformedFrame.getter();
            v35 = v34;
            v37 = v36;
            v39 = v38;

            sub_10028B6A4(v33, v35, v37, v39);
            v41 = v40;

            v21 = fabs(v41);
            sub_10000682C(v50);
            goto LABEL_22;
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v2);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v24)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v2 + 168), "_bodyLeading");
    v21 = v43;
    goto LABEL_22;
  }
  v4 = *(double *)(v2 + 8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v3);
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;

  v13 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v50, 0, 0).n128_u64[0];
  v15 = *v13;
  if (*v13 > 0.0)
  {
LABEL_6:
    v54.origin.x = v6;
    v54.origin.y = v8;
    v54.size.width = v12;
    v54.size.height = v15;
    v19 = v4 * (CGRectGetHeight(v54) / 100.0);
    objc_msgSend(*(id *)(v2 + 168), "ascender");
    v21 = v19 - v20;
LABEL_22:
    sub_10028FFA4();
    v44 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v45 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    objc_msgSend(v45, "contentInset");
    objc_msgSend(v45, "setContentInset:", v21);

    v46 = *(id *)&v1[v44];
    objc_msgSend(v46, "contentOffset");
    objc_msgSend(v46, "setContentOffset:");

    return;
  }
  v16 = objc_msgSend(v1, "view", v14);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "frame");
    v15 = v18;

    goto LABEL_6;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_100288EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049AEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100288EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049AEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26SyncedLyricsViewController);
}

void sub_100288F64()
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  char v20[24];
  void **aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)();
  uint64_t v26;

  v1 = swift_allocObject(&unk_10045F580, 24, 7);
  *(_QWORD *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(_BYTE *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    v2 = (uint64_t *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v20, 0, 0);
    v3 = *v2;
    if (!((unint64_t)v3 >> 62))
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4)
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease();
      swift_release(v1);
      return;
    }
  }
  else
  {
    v12 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_10045F5A8, 24, 7);
    *(_QWORD *)(v3 + 16) = isEscapingClosureAtFileLocation;
    v13 = swift_allocObject(&unk_10045F5D0, 32, 7);
    *(_QWORD *)(v13 + 16) = sub_100294024;
    *(_QWORD *)(v13 + 24) = v3;
    v25 = sub_1000B0290;
    v26 = v13;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100009BD0;
    v24 = &unk_10045F5E8;
    v14 = _Block_copy(&aBlock);
    v15 = v26;
    v16 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v13);
    objc_msgSend(v12, "performWithoutAnimation:", v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 136, 383, 44, 1, v17);
    swift_release(v13);
    swift_release(v3);
    swift_release(v1);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  if (v3 < 0)
    v18 = v3;
  else
    v18 = v3 & 0xFFFFFFFFFFFFFF8;
  v19 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = swift_allocObject(&unk_10045F620, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_10029401C;
    *(_QWORD *)(v9 + 24) = v1;
    v25 = sub_100009BB0;
    v26 = v9;
    aBlock = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100204BB4;
    v24 = &unk_10045F638;
    v10 = _Block_copy(&aBlock);
    v11 = v26;
    swift_retain(v1);
    objc_msgSend(v8, "addCompletion:", v10, swift_release(v11).n128_f64[0]);
    swift_release(v1);
    _Block_release(v10);

    return;
  }
  __break(1u);
}

void sub_10028924C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  __n128 v8;
  _QWORD v9[5];
  uint64_t v10;

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_10045F670, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_10045F698, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1002941AC;
  *(_QWORD *)(v4 + 24) = v3;
  v9[4] = sub_1000B04E0;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10045F6B0;
  v5 = _Block_copy(v9);
  v6 = v10;
  v7 = a1;
  swift_retain(v4);
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 136, 383, 44, 1, v8);
  swift_release(v4);
  swift_release(v3);
  if ((v2 & 1) != 0)
    __break(1u);
}

void sub_100289384(uint64_t a1)
{
  uint64_t *v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  char v43[24];
  CGRect v44;
  CGRect v45;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v43, 0, 0);
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0)
      v1 = (uint64_t *)*v7;
    else
      v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v2 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v11;
  v2 = UIView.untransformedFrame.getter();
  v3 = v12;
  v4 = v13;
  v5 = v14;

LABEL_12:
  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v42, 0, 0);
  v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0)
      v8 = *v1;
    else
      v8 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v16)
      goto LABEL_24;
  }
  else
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_24;
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
    else
      v18 = (char *)*(id *)(v15 + 8 * i + 32);
    v19 = v18;
    sub_100289DC8(v18);

  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9)
    return;
  v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v20 = *(char **)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_27;
LABEL_44:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  if (v8 < 0)
    v37 = v8;
  else
    v37 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = (char *)_CocoaArrayWrapper.endIndex.getter(v37);
  if (!v20)
    goto LABEL_44;
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v21 = (char *)*(id *)(v8 + 32);
  }
  v20 = v21;
  swift_bridgeObjectRelease();
  objc_msgSend(v20, "frame");
  v45.origin.x = v2;
  v45.origin.y = v3;
  v45.size.width = v4;
  v45.size.height = v5;
  if (CGRectEqualToRect(v44, v45))
  {
LABEL_36:

    return;
  }
  v22 = (uint64_t)&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v38, 0, 0);
  sub_1000244B0(v22, (uint64_t)v39);
  v23 = v40;
  v24 = v41;
  sub_10000ABC8(v39, v40);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  v9 = v25;
  v8 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
    goto LABEL_48;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v26 = *(id *)(v8 + 8 * v25 + 32);
LABEL_35:
    v27 = v26;
    v28 = UIView.untransformedFrame.getter();
    v30 = v29;
    v32 = v31;
    v34 = v33;

    sub_10028B6A4(v28, v30, v32, v34);
    v36 = v35;

    sub_10000682C(v39);
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", 0.0, v36);
    goto LABEL_36;
  }
  __break(1u);
}

void sub_10028974C(char *a1, unsigned __int8 a2, uint64_t a3)
{
  char *v3;
  char *v4;
  double Width;
  id v9;
  void *v10;
  int v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  CGFloat height;
  uint64_t v34;
  uint64_t v35;
  CGFloat v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  id v48;
  double v49;
  id v50;
  double v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  double MaxY;
  char **v59;
  double *v60;
  _BYTE *v61;
  CGFloat x;
  CGFloat y;
  CGFloat v64;
  CGFloat v65;
  double v66;
  id v67;
  void *v68;
  uint64_t v69;
  char v70[24];
  char v71[24];
  char v72[24];
  _BYTE v73[32];
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[24];
  CGRect v81;
  uint64_t v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v4 = v3;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "frame");
  Width = CGRectGetWidth(v83);
  v9 = objc_msgSend(v4, "view");
  if (!v9)
    goto LABEL_42;
  v10 = v9;
  v11 = a2;
  objc_msgSend(v9, "layoutMargins");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v20 = Width - UIEdgeInsets.horizontal.getter(v13, v15, v17, v19);
  v21 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v80, 0, 0);
  sub_1000244B0(v21, (uint64_t)&v81);
  v22 = sub_100005574(&qword_100499EA0);
  if (swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.TextLine, 0))
  {
    v23 = v77;
    v24 = v78;
    swift_release(v79);
    swift_release(v24);
    swift_release(v23);
    swift_bridgeObjectRelease();
    v25 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v70, 0, 0);
    if (*(_QWORD *)v25 && !*(_BYTE *)(*(_QWORD *)v25 + 96))
    {
      v27 = 1.0;
    }
    else
    {
      v26 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], &v69, 0, 0);
      v27 = v26[64];
    }
  }
  else
  {
    v27 = 1.0;
    if ((swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.InstrumentalLine, 0) & 1) == 0
      && swift_dynamicCast(v74, &v81, v22, &type metadata for Lyrics.SongwritersLine, 0))
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_10000682C(&v81);
  if (v11 == 2)
  {
    objc_msgSend(a1, "sizeThatFits:", v20 * v27, INFINITY);
  }
  else
  {
    v28 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v28)
    {
      v29 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      ObjectType = swift_getObjectType();
      v74[0] = v28;
      (*(void (**)(_QWORD, uint64_t, uint64_t, double, double))(v29 + 96))(v11 & 1, ObjectType, v29, v20 * v27, INFINITY);
    }
  }
  sub_1000244B0(v21, (uint64_t)v74);
  if (swift_dynamicCast(v73, v74, v22, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v31 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v31)
    {
      v32 = v31 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess(v31 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v72, 0, 0);
      sub_1000244B0(v32, (uint64_t)&v81);
      height = v81.size.height;
      v34 = v82;
      sub_10000ABC8(&v81, *(uint64_t *)&v81.size.height);
      v35 = (*(uint64_t (**)(CGFloat, uint64_t))(v34 + 16))(COERCE_CGFLOAT(*(_QWORD *)&height), v34);
      sub_10000682C(&v81);
    }
    else
    {
      v35 = 0;
    }
    sub_1000244B0(v21, (uint64_t)&v81);
    v36 = v81.size.height;
    v37 = v82;
    sub_10000ABC8(&v81, *(uint64_t *)&v81.size.height);
    v38 = (*(uint64_t (**)(CGFloat, uint64_t))(v37 + 16))(COERCE_CGFLOAT(*(_QWORD *)&v36), v37);
    if (v31)
    {
      v39 = v38;
      sub_10000682C(&v81);
      if (v35 == v39)
        swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v71, 0, 0);
    }
    else
    {
      sub_10000682C(&v81);
    }
  }
  sub_10000682C(v74);
  sub_1000244B0(v21, (uint64_t)v74);
  v40 = v75;
  v41 = v76;
  sub_10000ABC8(v74, v75);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
  sub_10000682C(v74);
  if (!v42)
  {
    *(_QWORD *)&MaxY = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v74, 0, 0).n128_u64[0];
    v59 = &selRef_isEnabled;
    goto LABEL_36;
  }
  sub_100293DE8(a3, (uint64_t)&v81);
  if ((v82 & 1) != 0)
  {
    sub_1000244B0(v21, (uint64_t)v74);
    v43 = v75;
    v44 = v76;
    sub_10000ABC8(v74, v75);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
    v46 = v45 - 1;
    if (__OFSUB__(v45, 1))
    {
      __break(1u);
    }
    else
    {
      sub_10000682C(v74);
      v47 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v74, 0, 0);
      v43 = *v47;
      if ((v43 & 0xC000000000000001) == 0)
      {
        if ((v46 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v46 < *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v48 = *(id *)(v43 + 8 * v46 + 32);
LABEL_30:
          objc_msgSend(v48, "frame");
          v49 = CGRectGetHeight(v84);
          v50 = v48;
          v51 = UIView.untransformedFrame.getter();
          v53 = v52;
          v55 = v54;
          v57 = v56;

          v85.origin.x = v51;
          v85.origin.y = v53;
          v85.size.width = v55;
          v85.size.height = v57;
          CGRectGetMaxY(v85);

          v59 = &selRef_isEnabled;
          if (v49 <= 0.0)
            goto LABEL_36;
          v60 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          v61 = v73;
          goto LABEL_35;
        }
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v43);
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  x = v81.origin.x;
  y = v81.origin.y;
  v64 = v81.size.width;
  v65 = v81.size.height;
  v66 = CGRectGetHeight(v81);
  v86.origin.x = x;
  v86.origin.y = y;
  v86.size.width = v64;
  v86.size.height = v65;
  MaxY = CGRectGetMaxY(v86);
  v59 = &selRef_isEnabled;
  if (v66 <= 0.0)
    goto LABEL_36;
  v60 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v61 = v74;
LABEL_35:
  swift_beginAccess(v60, v61, 0, 0);
  MaxY = v60[10];
LABEL_36:
  v67 = objc_msgSend(v4, v59[474], MaxY);
  if (v67)
  {
    v68 = v67;
    objc_msgSend(v67, "layoutMargins");

    return;
  }
LABEL_43:
  __break(1u);
}

void sub_100289DC8(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double Width;
  double Height;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = v1;
  memset(v32, 0, sizeof(v32));
  v33 = 1;
  sub_10028974C(a1, 2u, (uint64_t)v32);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v28, 0, 0);
  sub_1000244B0(v8, (uint64_t)v29);
  v9 = v30;
  v10 = v31;
  sub_10000ABC8(v29, v30);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v13 = *v12;
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 - 1;
    if (!__OFSUB__(v14, 1))
      goto LABEL_3;
LABEL_13:
    __break(1u);
    return;
  }
  if (v13 < 0)
    v25 = v13;
  else
    v25 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  v15 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_13;
LABEL_3:
  sub_10000682C(v29);
  if (v11 == v15)
  {
    v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    objc_msgSend(v17, "frame");
    Width = CGRectGetWidth(v34);
    v35.origin.x = UIView.untransformedFrame.getter();
    objc_msgSend(v17, "setContentSize:", Width, CGRectGetMaxY(v35));

    objc_msgSend(*(id *)(v2 + v16), "frame");
    Height = CGRectGetHeight(v36);
    objc_msgSend(*(id *)(v2 + v16), "contentInset");
    v21 = v20;
    v37.origin.x = UIView.untransformedFrame.getter();
    v22 = Height - (v21 + CGRectGetHeight(v37));
    v23 = *(id *)(v2 + v16);
    v24 = v23;
    if (v22 <= 0.0)
      objc_msgSend(v23, "contentInset");
    objc_msgSend(v24, "contentInset");
    objc_msgSend(v24, "setContentInset:");

  }
}

void sub_100289FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, __n128);
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *, char);
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, __n128);
  __n128 v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *__src;
  uint64_t *v78;
  uint64_t *v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[24];
  _BYTE __dst[552];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v91, 0, 0);
  v5 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_61;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v7 = *(_QWORD *)(a1 + 40);
  a1 = *(_QWORD *)(v7 + 16);
  if (a1 >= v6)
    goto LABEL_8;
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v5 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5 >= a1)
      goto LABEL_6;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return;
  }
  if (v8 < 0)
    v74 = *v4;
  else
    v74 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v74);
  swift_bridgeObjectRelease();
  if (v5 < a1)
    goto LABEL_69;
LABEL_6:
  if (a1 != v5)
  {
    if (a1 < (unint64_t)v5)
    {
      v70 = a1;
      while (1)
      {
        v71 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v70, v71);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v70 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v70 >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_60:
            __break(1u);
LABEL_61:
            if (v5 < 0)
              v73 = v5;
            else
              v73 = v5 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v6 = _CocoaArrayWrapper.endIndex.getter(v73);
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          v72 = *(id *)(v71 + 8 * v70 + 32);
        }
        ++v70;
        objc_msgSend(v72, "removeFromSuperview");

        if (v5 == v70)
          goto LABEL_7;
      }
    }
    goto LABEL_70;
  }
LABEL_7:
  swift_beginAccess(v4, __dst, 33, 0);
  sub_100245650(a1, v5);
  swift_endAccess(__dst);
LABEL_8:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
    v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    v76 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v13 = v7 + 32;
    swift_bridgeObjectRetain();
    v78 = v11;
    swift_beginAccess(v11, v90, 0, 0);
    __src = v12;
    swift_beginAccess(v12, v89, 0, 0);
    v75 = v2;
    v79 = v4;
    while (1)
    {
      sub_1000244B0(v13, (uint64_t)v86);
      v15 = v87;
      v16 = v88;
      sub_10000ABC8(v86, v87);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v18 = v17;
      v19 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v19 < 0)
          v49 = *v4;
        else
          v49 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v50 = _CocoaArrayWrapper.endIndex.getter(v49);
        swift_bridgeObjectRelease();
        if (v18 >= v50)
        {
LABEL_34:
          sub_1000244B0((uint64_t)v86, (uint64_t)&v83);
          v51 = *v78;
          if (*v78)
          {
            if (*(_BYTE *)(v51 + 96))
            {
              v52 = v87;
              v53 = v88;
              sub_10000ABC8(v86, v87);
              v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
            }
            else
            {
              v54 = __src[6];
              v55 = *((_BYTE *)__src + 56);
              sub_1000244B0((uint64_t)v86, (uint64_t)v80);
              if ((v55 & 1) != 0)
              {
                v56 = v81;
                v57 = v82;
                sub_10000ABC8(v80, v81);
                v58 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v57 + 24);
                v59 = swift_retain(v51);
                v54 = v58(v56, v57, v59);
              }
              else
              {
                swift_retain(v51);
              }
              v2 = v75;
              sub_10000682C(v80);
              swift_release(v51);
            }
          }
          else
          {
            v54 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          v60 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          sub_10026EC3C((uint64_t)__dst);
          v61 = sub_10027DF28(&v83, v54, __dst);
          sub_10026ED0C((uint64_t)__dst);
          sub_1000087DC(0, &qword_10049B098, UIAction_ptr);
          v62 = swift_allocObject(&unk_10045EDA8, 24, 7);
          swift_unknownObjectWeakInit(v62 + 16);
          v63 = swift_allocObject(&unk_10045F2D8, 24, 7);
          swift_unknownObjectWeakInit(v63 + 16);
          v64 = swift_allocObject(&unk_10045F300, 32, 7);
          *(_QWORD *)(v64 + 16) = v62;
          *(_QWORD *)(v64 + 24) = v63;
          v65 = v61;
          v66 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100293DB4, v64);
          objc_msgSend(v65, "addAction:forControlEvents:", v66, 64);

          objc_msgSend(*(id *)(v2 + v76), "addSubview:", v65);
          swift_beginAccess(v4, &v83, 33, 0);
          v25 = v65;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v68 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v67 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v68 >= v67 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v67 > 1, v68 + 1, 1);
          v69 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v68, v25);
          specialized Array._endMutation()(v69);
          swift_endAccess(&v83);
          v14 = (char *)objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
          objc_msgSend(v14, "setCancelsTouchesInView:", 0);
          objc_msgSend(v14, "addTarget:action:", v2, "shareGestureHandler:");
          objc_msgSend(v25, "addGestureRecognizer:", v14);
          sub_100289DC8(v25);

          goto LABEL_11;
        }
      }
      else if (v17 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_34;
      }
      v20 = v87;
      v21 = v88;
      sub_10000ABC8(v86, v87);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      a1 = v22;
      v5 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v22 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_58;
        v23 = (char *)*(id *)(v5 + 8 * v22 + 32);
      }
      sub_1000244B0((uint64_t)v86, (uint64_t)&v83);
      v24 = &v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v80, 33, 0);
      v25 = v23;
      sub_100020AF8(v24, &v83);
      swift_endAccess(v80);
      sub_10027CEE4();
      sub_10000682C(&v83);
      v26 = *v78;
      if (*v78)
      {
        if (*(_BYTE *)(v26 + 96))
        {
          v27 = v87;
          v28 = v88;
          sub_10000ABC8(v86, v87);
          v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        }
        else
        {
          v29 = __src[6];
          v30 = *((_BYTE *)__src + 56);
          sub_1000244B0((uint64_t)v86, (uint64_t)&v83);
          if ((v30 & 1) != 0)
          {
            v31 = v84;
            v32 = v85;
            sub_10000ABC8(&v83, v84);
            v33 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v32 + 24);
            v34 = swift_retain(v26);
            v29 = v33(v31, v32, v34);
          }
          else
          {
            swift_retain(v26);
          }
          sub_10000682C(&v83);
          swift_release(v26);
        }
      }
      else
      {
        v29 = 4;
      }
      *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v29;
      sub_10027CEE4();
      v35 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v35)
      {
        v36 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v83 = v35;
        (*(void (**)(uint64_t, uint64_t))(v36 + 80))(ObjectType, v36);
      }
      v38 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v40 = sub_10027BC60((uint64_t)&v83);
      v41 = *(void **)v39;
      if (*(_QWORD *)v39)
      {
        v42 = v39;
        v43 = v25[v38];
        v44 = *(_QWORD *)(v39 + 8);
        v45 = swift_getObjectType();
        v80[0] = v41;
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40);
        v47 = v41;
        v46(v43, v45, v44);
        v2 = v75;
        v48 = *(void **)v42;
        *(_QWORD *)v42 = v80[0];
        *(_QWORD *)(v42 + 8) = v44;

      }
      v40(&v83, 0);
      sub_10027C668(0, 0);
      sub_100289DC8(v25);
      v14 = v25;
LABEL_11:

      sub_10000682C(v86);
      v13 += 40;
      --v10;
      v4 = v79;
      if (!v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_10028BBB8(0);
  sub_100288B08();
}

void sub_10028A850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  double v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  double v51;
  id v52;
  char *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double (*v60)(uint64_t, uint64_t);
  id v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t ObjectType;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t __dst[68];
  char v81[24];
  char v82[24];
  _BYTE v83[40];
  char v84[24];
  char v85[32];
  CGRect v86;
  CGRect v87;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v85, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v84, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (!v8)
    {
      v53 = v6;
LABEL_37:

      return;
    }
    v9 = (char *)v8;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator], "selectionChanged");
    v10 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v10)
      objc_msgSend(v10, "setPaused:", 1);
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer], "invalidate");
    v12 = *(void **)&v6[v11];
    *(_QWORD *)&v6[v11] = 0;

    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    v13 = (uint64_t)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v82, 0, 0);
    sub_1000244B0(v13, (uint64_t)v83);
    v14 = sub_100005574(&qword_100499EA0);
    if ((swift_dynamicCast(__dst, v83, v14, &type metadata for Lyrics.TextLine, 6) & 1) == 0)
    {
LABEL_31:
      v56 = objc_msgSend(objc_allocWithZone((Class)MSVLyricsLine), "init");
      sub_1000244B0(v13, (uint64_t)__dst);
      v58 = __dst[3];
      v57 = __dst[4];
      sub_10000ABC8(__dst, __dst[3]);
      v59 = *(_QWORD *)(v57 + 8);
      v60 = *(double (**)(uint64_t, uint64_t))(v59 + 8);
      v61 = v56;
      v62 = v60(v58, v59);
      v63 = *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      v64 = 0.0;
      if (v63)
      {
        swift_beginAccess(v63 + 88, v83, 0, 0);
        if (*(_BYTE *)(v63 + 88) == 1)
        {
          swift_retain(v63);
          Lyrics.spatialOffset.getter();
          v64 = v65;
          swift_release(v63);
        }
      }
      sub_10000682C(__dst);
      objc_msgSend(v61, "setStartTime:", v62 + v64);

      sub_1000244B0(v13, (uint64_t)__dst);
      v67 = __dst[3];
      v66 = __dst[4];
      sub_10000ABC8(__dst, __dst[3]);
      v68 = *(_QWORD *)(v66 + 8);
      v69 = *(void (**)(uint64_t, uint64_t))(v68 + 16);
      v53 = (char *)v61;
      v69(v67, v68);
      objc_msgSend(v53, "setEndTime:");

      sub_10000682C(__dst);
      v70 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], __dst, 0, 0);
      v71 = swift_unknownObjectWeakLoadStrong(v70);
      if (v71)
      {
        v72 = v71;
        v73 = *((_QWORD *)v70 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v73 + 8))(v6, v53, ObjectType, v73);

        swift_unknownObjectRelease(v72);
      }
      else
      {

      }
      goto LABEL_37;
    }
    v15 = __dst[8];
    v16 = __dst[10];
    v17 = __dst[12];
    v18 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v18)
      goto LABEL_23;
    v19 = _s19SBS_TextContentViewCMa();
    v20 = swift_dynamicCastClass(v18, v19);
    if (!v20)
      goto LABEL_23;
    v21 = *(_QWORD *)(v20 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v21)
      goto LABEL_40;
    v22 = *(_QWORD *)(v21
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v22)
    {
LABEL_23:
      swift_release(v17);
      swift_release(v16);
      swift_release(v15);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v78 = v17;
    v79 = v9;
    v23 = *(_QWORD *)(v22 + 24);
    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v54 = *(_QWORD *)(v22 + 24);
      else
        v54 = v23 & 0xFFFFFFFFFFFFFF8;
      v55 = v18;
      swift_retain(v22);
      swift_bridgeObjectRetain();
      v24 = _CocoaArrayWrapper.endIndex.getter(v54);
      if (v24)
        goto LABEL_12;
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v18;
      swift_retain(v22);
      swift_bridgeObjectRetain();
      if (v24)
      {
LABEL_12:
        v75 = v22;
        v76 = v16;
        v77 = v18;
        sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
        v26 = v24 - 1;
        if (v24 >= 1)
        {
          v27 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v81, 0, 0);
          v28 = 0;
          if ((v23 & 0xC000000000000001) == 0)
            goto LABEL_15;
LABEL_14:
          for (i = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v23); ; swift_retain(i))
          {
            memcpy(__dst, v27, 0x219uLL);
            *(_BYTE *)(i + 80) = 1;
            v30 = sub_10026EC3C((uint64_t)__dst);
            v38 = (void *)static OS_dispatch_queue.main.getter(v30, v31, v32, v33, v34, v35, v36, v37);
            v39 = *(double *)&__dst[65];
            v40 = swift_allocObject(&unk_10045F328, 24, 7);
            swift_weakInit(v40 + 16, i);
            swift_retain(v40);
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100293DE0, v40, v39);

            swift_release_n(v40, 2);
            v41 = *(_QWORD *)(i + 72);
            if (v41)
            {
              v42 = *(void **)(v41 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v42)
              {
                v43 = (void *)__dst[21];
                v44 = v42;
                objc_msgSend(v43, "lineHeight");
                v46 = v45 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                v47 = *(double *)(i + 40);
                v48 = *(double *)(i + 48);
                v49 = *(double *)(i + 56);
                v50 = *(double *)(i + 64);
                v86.origin.x = v47;
                v86.origin.y = v48;
                v86.size.width = v49;
                v86.size.height = v50;
                v51 = (v46 - CGRectGetHeight(v86)) * 0.5;
                v52 = v44;
                v87.origin.x = v47;
                v87.origin.y = v48;
                v87.size.width = v49;
                v87.size.height = v50;
                objc_msgSend(v52, "setFrame:", -v51, -v51, v51, CGRectGetHeight(v87) + v51 + v51);

              }
            }
            sub_10026ED0C((uint64_t)__dst);
            swift_release(i);
            if (v26 == v28)
              break;
            ++v28;
            if ((v23 & 0xC000000000000001) != 0)
              goto LABEL_14;
LABEL_15:
            i = *(_QWORD *)(v23 + 8 * v28 + 32);
          }
          swift_release(v78);
          swift_release(v76);
          swift_release(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 = v77;
          v22 = v75;
          goto LABEL_30;
        }
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
    }
    swift_release(v78);
    swift_release(v16);
    swift_release(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:

    swift_release(v22);
    v9 = v79;
    goto LABEL_31;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 != 2)
  {
    sub_10028CDC4();
    *v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 == 2)
  {
    sub_10028BBB8(0);
    *v1 = 0;
  }
}

uint64_t sub_10028AF70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v2, v15, 0, 0);
  if (!*v2 || (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0)
    return 1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, &v9, 0, 0);
  sub_100288EB4(v4, (uint64_t)&v10);
  if (v11)
  {
    sub_1000137C8(&v10, (uint64_t)v12);
    v5 = v13;
    v6 = v14;
    sub_10000ABC8(v12, v13);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) != 0)
    {
      v3 = 1;
    }
    else
    {
      v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v7, &v10, 0, 0);
      v3 = *v7 == 2;
    }
    sub_10000682C(v12);
  }
  else
  {
    sub_100008758((uint64_t)&v10, &qword_10049AEB0);
    return 1;
  }
  return v3;
}

_QWORD *sub_10028B09C()
{
  char *v0;
  _QWORD *result;
  void *v2;
  double *v3;
  double v4;
  void *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];
  _BYTE v11[24];

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "frame");

    v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v11, 0, 0).n128_u64[0];
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v10, 0, 0);
      __chkstk_darwin();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_100290ECC(v6, (uint64_t (*)(void))sub_100293D50);
      swift_bridgeObjectRelease();
      v8 = sub_1002929DC((uint64_t)v7);
      swift_bridgeObjectRelease();
      v9 = sub_100283628(v8);
      swift_bridgeObjectRelease();
      return v9;
    }
    result = objc_msgSend(v0, "view", v4);
    if (result)
    {
      v5 = result;
      objc_msgSend(result, "frame");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10028B25C(_QWORD *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  BOOL v16;
  uint64_t i;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  _BYTE v44[24];
  unint64_t v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v6 = v5;
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000ABC8(a1, v11);
  v43 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  v13 = v43(v11, v12);
  v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v14, v44, 0, 0);
  v15 = 0;
  v16 = v13 == 0;
  if (v13 <= 0)
    goto LABEL_3;
LABEL_2:
  for (i = v13 - 1; ; i = 0)
  {
    v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    objc_msgSend(v20, "frame");
    v48.origin.x = a2;
    v48.origin.y = a3;
    v48.size.width = a4;
    v48.size.height = a5;
    if (!CGRectIntersectsRect(v46, v48))
      break;
    v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v22 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);

    v13 = i;
    v16 = i == 0;
    if (i > 0)
      goto LABEL_2;
LABEL_3:
    v18 = !v16;
    if (((v18 | v15) & 1) != 0)
      goto LABEL_18;
    v15 = 1;
  }

LABEL_18:
  result = v43(v11, v12);
  v13 = result + 1;
  if (__OFADD__(result, 1))
    goto LABEL_43;
  v11 = *v14;
  if ((unint64_t)*v14 >> 62)
    goto LABEL_44;
  v26 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_49;
  while (2)
  {
    v28 = 0;
    v29 = v13 == v27;
    if (v13 < v27)
    {
LABEL_22:
      v30 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      v31 = !v29;
      if (((v31 | v28) & 1) != 0)
        goto LABEL_39;
      v28 = 1;
      v30 = v27;
LABEL_28:
      v11 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0)
        break;
      if ((unint64_t)v13 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_42;
      v32 = *(id *)(v11 + 8 * v13 + 32);
LABEL_32:
      objc_msgSend(v32, "frame");
      v49.origin.x = a2;
      v49.origin.y = a3;
      v49.size.width = a4;
      v49.size.height = a5;
      if (!CGRectIntersectsRect(v47, v49))
      {

LABEL_39:
        KeyPath = swift_getKeyPath(&unk_100398D10);
        v38 = sub_100005574(&qword_10049B088);
        v39 = sub_1000C27F8(&qword_10049B090, &qword_10049B088);
        v40 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_1000F50F8, 0, v38, v39, (uint64_t)&protocol witness table for Int);
        swift_release(KeyPath);
        swift_bridgeObjectRelease();
        return v40;
      }
      v33 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
      specialized Array._endMutation()(v36);

      v13 = v30;
      v29 = v30 == v27;
      if (v30 < v27)
        goto LABEL_22;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    if (v11 < 0)
      v41 = v11;
    else
      v41 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v42 = _CocoaArrayWrapper.endIndex.getter(v41);
    result = swift_bridgeObjectRelease();
    v27 = v42 - 1;
    if (!__OFSUB__(v42, 1))
      continue;
    break;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_10028B630(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  _QWORD v6[5];

  sub_1000244B0(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess(v3, v5, 33, 0);
  sub_100020AF8(v3, v6);
  swift_endAccess(v5);
  sub_10027CEE4();
  return sub_10000682C(v6);
}

double sub_10028B6A4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  double v10;
  int v11;
  CGFloat v12;
  CGFloat v13;
  char v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  _BYTE v22[24];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  *(_QWORD *)&v10 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v22, 0, 0).n128_u64[0];
  v11 = *(char *)(v9 + 40);
  if (v11 < 0)
  {
    v12 = *(double *)(v9 + 8);
    v13 = *(double *)(v9 + 16);
    v14 = *(_BYTE *)(v9 + 40);
    v16 = *(double *)(v9 + 24);
    v15 = *(double *)(v9 + 32);
    if ((v11 & 1) != 0)
    {
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "frame", v10);
    }
    else
    {
      v17 = v12;
      v18 = v13;
      v19 = v16;
      v20 = v15;
    }
    CGRectGetHeight(*(CGRect *)&v17);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMinY(v25);
    if ((v14 & 1) == 0)
    {
      v26.origin.x = v12;
      v26.origin.y = v13;
      v26.size.width = v16;
      v26.size.height = v15;
      CGRectGetMinY(v26);
    }
  }
  else
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentInset");
  }
  return 0.0;
}

void sub_10028B800(_QWORD *a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  double (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[32];

  v5 = v4;
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v43, 0, 0);
  v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0)
        goto LABEL_24;
LABEL_5:
      v37 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v39, 1, 0);
      a4 = *a3;
      v38 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        v14 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v14)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v14 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v14; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a4);
            else
              v16 = *(id *)(a4 + 8 * i + 32);
            v17 = v16;
            if ((static NSObject.== infix(_:_:)(v16, v12) & 1) == 0)
              sub_10027C668(0, a2);

          }
        }
LABEL_23:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        v5 = v38;
        LOBYTE(a4) = v37;
        goto LABEL_24;
      }
LABEL_19:
      if (a4 < 0)
        v18 = a4;
      else
        v18 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v14)
        goto LABEL_7;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_24:
  sub_10027C668(1, a2);
  sub_100287DF8((uint64_t)v12, a2 != 0);
  v19 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v19)
  {
    v20 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v19, v20))
    {
      v21 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      v22 = v19;
      v23 = v12;

      if ((a4 & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        v25 = 0.0;
        if (v24)
        {
          swift_beginAccess(v24 + 96, v41, 0, 0);
          v26 = *(double (**)(uint64_t))(v24 + 96);
          if (v26)
          {
            v27 = *(_QWORD *)(v24 + 104);
            swift_retain(v24);
            v28 = sub_10003A434((uint64_t)v26, v27);
            v29 = v26(v28);
            swift_beginAccess(v24 + 88, v40, 0, 0);
            v30 = 0.0;
            if (*(_BYTE *)(v24 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              v30 = v31;
            }
            sub_10003A5C8((uint64_t)v26, v27);
            swift_release(v24);
            v25 = v29 - v30;
          }
        }
        sub_100278848(v25);
      }

    }
  }
  sub_10028CCAC(v12, 1, 0.0);
  v32 = (_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v42, 33, 0);
  v33 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
  specialized Array._endMutation()(v36);
  swift_endAccess(v42);

}

void sub_10028BBB8(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  id v45;
  double v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  double v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  double v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  id v94;
  void *v95;
  double v96;
  CGFloat v97;
  double *v98;
  double v99;
  CGFloat v100;
  id v101;
  void *v102;
  double v103;
  uint64_t v104;
  double v105;
  double v106;
  CGFloat v107;
  double v108;
  CGFloat v109;
  char **v110;
  id v111;
  void *v112;
  double v113;
  CGFloat v114;
  double *v115;
  double v116;
  CGFloat v117;
  id v118;
  void *v119;
  double v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  double v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  id v140;
  void *v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  uint64_t **v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t ObjectType;
  uint64_t *v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  id v153;
  void *v154;
  void (*v155)(__int128 *, char);
  unsigned __int8 *v156;
  unsigned __int8 *v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  char *v172;
  void (*v173)(__int128 *, char);
  char v174[24];
  char v175[24];
  Swift::Int v176;
  char v177[24];
  _QWORD v178[3];
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  char v184[24];
  char v185[24];
  uint64_t v186;
  _BYTE v187[24];
  char v188[24];
  uint64_t v189;
  _QWORD v190[3];
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;

  v4 = v1;
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = objc_msgSend(v6, "accessibilityContrast");

  v172 = v4;
  if (v7 != (id)1)
  {
    v19 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v190, 0, 0);
    if (*v19 == 1)
      return;
    if (a1)
    {
      v189 = a1;
      v3 = a1;
      goto LABEL_10;
    }
    v88 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v88 || (swift_beginAccess(v88 + 80, v188, 0, 0), v89 = *(_QWORD *)(v88 + 80), !*(_QWORD *)(v89 + 16)))
    {
      v104 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      *(_QWORD *)&v105 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v187, 0, 0).n128_u64[0];
      v8 = *(_QWORD *)v104;
      if (*(_QWORD *)v104 >> 62)
        goto LABEL_165;
      if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
        return;
      goto LABEL_90;
    }
    sub_1000244B0(v89 + 32, (uint64_t)&v191);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
    v91 = v90;
    v93 = v92;
    v94 = objc_msgSend(v4, "view");
    if (!v94)
      goto LABEL_189;
    v95 = v94;
    objc_msgSend(v94, "frame");
    v97 = v96;

    v98 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v99 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v187, 0, 0).n128_u64[0];
    v100 = *v98;
    if (*v98 <= 0.0)
    {
      v101 = objc_msgSend(v4, "view", v99);
      if (!v101)
        goto LABEL_191;
      v102 = v101;
      objc_msgSend(v101, "frame");
      v100 = v103;

    }
    v3 = sub_10028B25C(&v191, v91, v93, v97, v100);
    sub_10000682C(&v191);
    v189 = v3;
    while (1)
    {
LABEL_10:
      v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v185, 0, 0);
      v17 = *(_QWORD *)v8;
      v186 = *(_QWORD *)v8;
      if ((unint64_t)v3 >> 62)
      {
LABEL_106:
        if (v3 < 0)
          v126 = v3;
        else
          v126 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = _CocoaArrayWrapper.endIndex.getter(v126);
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_12:
          if (v20 >= 1)
          {
            v21 = 0;
            v22 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            v169 = v20;
            v170 = v3 & 0xC000000000000001;
            v168 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            while (1)
            {
              if (v170)
                v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v3);
              else
                v25 = *(id *)(v3 + 8 * v21 + 32);
              v17 = (uint64_t)v25;
              v26 = *(_QWORD *)&v4[v22];
              if (!v26)
                goto LABEL_33;
              swift_beginAccess(v26 + 80, v184, 0, 0);
              v27 = *(_QWORD *)(v26 + 80);
              if (!*(_QWORD *)(v27 + 16))
                goto LABEL_33;
              sub_1000244B0(v27 + 32, (uint64_t)&v191);
              v28 = *(_QWORD *)(v27 + 16);
              if (!v28)
              {
                sub_10000682C(&v191);
LABEL_33:
                v48 = v21 + 3;
                if (__OFADD__(v21, 3))
                {
                  __break(1u);
                  goto LABEL_104;
                }
                v49 = objc_msgSend(v4, "traitCollection");
                v50 = objc_msgSend(v49, "accessibilityContrast");

                if (v50 != (id)1 || v48 <= 0)
                {
                  v52 = (double)v48;
                  if ((double)v48 > 4.0)
                    v52 = 4.0;
                  sub_10027CAA0(1, v52);
                  swift_beginAccess(v8, &v191, 33, 0);
                  if (v21 == -3)
                  {
                    v54 = (void *)sub_1002FCDDC((void *)v17);
                    swift_endAccess(&v191);

                  }
                  else
                  {
                    sub_1002FAFCC((Swift::Int *)&v181, (id)v17);
                    v53 = (void *)v181;
                    swift_endAccess(&v191);

                  }
                }
                goto LABEL_16;
              }
              v29 = v3;
              sub_1000244B0(v27 + 32 + 40 * v28 - 40, (uint64_t)&v181);
              v30 = v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
              swift_beginAccess(v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v177, 0, 0);
              sub_1000244B0(v30, (uint64_t)v178);
              v31 = v179;
              v32 = v180;
              sub_10000ABC8(v178, v179);
              v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              v35 = v182;
              v34 = v183;
              sub_10000ABC8(&v181, v182);
              v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
              sub_10000682C(v178);
              if (v36 >= v33)
              {
                sub_1000244B0(v30, (uint64_t)v178);
                v55 = v179;
                v56 = v180;
                sub_10000ABC8(v178, v179);
                v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
                v58 = v194;
                v59 = v195;
                sub_10000ABC8(&v191, v194);
                v60 = (*(uint64_t (**)(uint64_t, unint64_t))(v59 + 16))(v58, v59);
                sub_10000682C(v178);
                v4 = v172;
                v61 = objc_msgSend(v172, "traitCollection");
                v62 = objc_msgSend(v61, "accessibilityContrast");

                if (v57 >= v60)
                {
                  sub_10027CAA0(1, 0.0);
                  swift_beginAccess(v8, v178, 33, 0);
                  v23 = (void *)sub_1002FCDDC((void *)v17);
                  swift_endAccess(v178);

                  v3 = v29;
                  v22 = v168;
                  v20 = v169;
                }
                else
                {
                  v3 = v29;
                  v22 = v168;
                  v20 = v169;
                  if (v62 != (id)1)
                  {
                    sub_10027CAA0(1, 3.0);
LABEL_47:
                    swift_beginAccess(v8, v178, 33, 0);
                    sub_1002FAFCC(&v176, (id)v17);
                    v63 = (void *)v176;
                    swift_endAccess(v178);

                  }
                }
              }
              else
              {
                sub_1000244B0(v30, (uint64_t)v178);
                v37 = v179;
                v38 = v180;
                sub_10000ABC8(v178, v179);
                v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
                v3 = v182;
                v40 = v183;
                sub_10000ABC8(&v181, v182);
                v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v3, v40);
                v42 = v39 - v41;
                v4 = v172;
                if (__OFSUB__(v39, v41))
                  goto LABEL_105;
                sub_10000682C(v178);
                v43 = (double)v42 + 1.0;
                v44 = objc_msgSend(v172, "traitCollection");
                v45 = objc_msgSend(v44, "accessibilityContrast");

                v3 = v29;
                v22 = v168;
                v20 = v169;
                if (v45 == (id)1 && v43 > 0.0)
                  goto LABEL_15;
                if (v43 <= 4.0)
                  v46 = (double)v42 + 1.0;
                else
                  v46 = 4.0;
                sub_10027CAA0(1, v46);
                if (v43 != 0.0)
                  goto LABEL_47;
                swift_beginAccess(v8, v178, 33, 0);
                v47 = (void *)sub_1002FCDDC((void *)v17);
                swift_endAccess(v178);

              }
LABEL_15:
              sub_10000682C(&v181);
              sub_10000682C(&v191);
LABEL_16:
              ++v21;
              v24 = (void *)sub_1002FCDDC((void *)v17);

              if (v20 == v21)
              {
                v79 = (_QWORD *)swift_bridgeObjectRelease();
                v17 = v186;
                if ((v186 & 0xC000000000000001) == 0)
                  goto LABEL_111;
LABEL_76:
                if (v17 < 0)
                  v80 = v17;
                else
                  v80 = v17 & 0xFFFFFFFFFFFFFF8;
                v81 = __CocoaSet.makeIterator()(v80);
                v82 = type metadata accessor for SyncedLyricsLineView();
                v83 = sub_100006924(&qword_10049B0C8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
                v79 = Set.Iterator.init(_cocoa:)(&v191, v81, v82, v83);
                v17 = v191;
                v84 = v192;
                v85 = v193;
                v86 = v194;
                v87 = v195;
                goto LABEL_115;
              }
            }
          }
          goto LABEL_157;
        }
      }
      else
      {
        v20 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_12;
      }
      v79 = (_QWORD *)swift_bridgeObjectRelease();
      if ((v17 & 0xC000000000000001) != 0)
        goto LABEL_76;
LABEL_111:
      v86 = 0;
      v127 = -1 << *(_BYTE *)(v17 + 32);
      v84 = v17 + 56;
      v85 = ~v127;
      v128 = -v127;
      if (v128 < 64)
        v129 = ~(-1 << v128);
      else
        v129 = -1;
      v87 = v129 & *(_QWORD *)(v17 + 56);
LABEL_115:
      v3 = (unint64_t)(v85 + 64) >> 6;
      if (v17 < 0)
      {
        while (1)
        {
          v132 = __CocoaSet.Iterator.next()(v79);
          if (!v132)
            break;
          v133 = v132;
          v178[0] = v132;
          v134 = type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain(v133);
          swift_dynamicCast(&v181, v178, (char *)&type metadata for Swift.AnyObject + 8, v134, 7);
          v135 = (id)v181;
          *(_QWORD *)&v136 = swift_unknownObjectRelease(v133).n128_u64[0];
          v131 = v86;
          v4 = (char *)v87;
          if (!v135)
            break;
LABEL_136:
          v140 = objc_msgSend(v172, "traitCollection", v136);
          objc_msgSend(v140, "accessibilityContrast");

          sub_10027CAA0(0, 0.0);
          swift_beginAccess(v8, &v181, 33, 0);
          v141 = (void *)sub_1002FCDDC(v135);
          swift_endAccess(&v181);

          v86 = v131;
          v87 = (unint64_t)v4;
          if ((v17 & 0x8000000000000000) == 0)
            goto LABEL_116;
        }
      }
      else
      {
LABEL_116:
        if (v87)
        {
          v4 = (char *)((v87 - 1) & v87);
          v130 = __clz(__rbit64(v87)) | (v86 << 6);
          v131 = v86;
          goto LABEL_135;
        }
        v137 = v86 + 1;
        if (__OFADD__(v86, 1))
        {
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (v137 < v3)
        {
          v138 = *(_QWORD *)(v84 + 8 * v137);
          v131 = v86 + 1;
          if (!v138)
          {
            v131 = v86 + 2;
            if (v86 + 2 >= v3)
              goto LABEL_138;
            v138 = *(_QWORD *)(v84 + 8 * v131);
            if (!v138)
            {
              v131 = v86 + 3;
              if (v86 + 3 >= v3)
                goto LABEL_138;
              v138 = *(_QWORD *)(v84 + 8 * v131);
              if (!v138)
              {
                v131 = v86 + 4;
                if (v86 + 4 >= v3)
                  goto LABEL_138;
                v138 = *(_QWORD *)(v84 + 8 * v131);
                if (!v138)
                {
                  v139 = v86 + 5;
                  do
                  {
                    if (v3 == v139)
                      goto LABEL_138;
                    v138 = *(_QWORD *)(v84 + 8 * v139++);
                  }
                  while (!v138);
                  v131 = v139 - 1;
                }
              }
            }
          }
          v4 = (char *)((v138 - 1) & v138);
          v130 = __clz(__rbit64(v138)) + (v131 << 6);
LABEL_135:
          v135 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v130);
          if (!v135)
            goto LABEL_138;
          goto LABEL_136;
        }
      }
LABEL_138:
      sub_1000F38AC(v17);
      v104 = *(_QWORD *)v8;
      if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
      {
        if (v104 < 0)
          v142 = *(_QWORD *)v8;
        else
          v142 = v104 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v144 = __CocoaSet.count.getter(v142, v143);
        swift_bridgeObjectRelease();
      }
      else
      {
        v144 = *(_QWORD *)(v104 + 16);
      }
      if (v144 < 1)
        return;
      v145 = (uint64_t **)&v172[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v172[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v178, 0, 0);
      v8 = (uint64_t)*v145;
      if (!((unint64_t)*v145 >> 62))
      {
        v2 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v2)
          goto LABEL_162;
        goto LABEL_147;
      }
LABEL_158:
      if (v8 < 0)
        v104 = v8;
      else
        v104 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v104);
      if (!v2)
        goto LABEL_162;
LABEL_147:
      if (v2 >= 1)
      {
        v146 = 0;
        v171 = v8 & 0xC000000000000001;
        do
        {
          if (v171)
            v156 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v146, v8);
          else
            v156 = (unsigned __int8 *)*(id *)(v8 + 8 * v146 + 32);
          v157 = v156;
          v158 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
          v156[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
          v155 = sub_10027BC60((uint64_t)&v181);
          v160 = *(void **)v159;
          if (*(_QWORD *)v159)
          {
            v147 = v159;
            v148 = v157[v158];
            v149 = *(_QWORD *)(v159 + 8);
            v173 = v155;
            ObjectType = swift_getObjectType();
            v176 = (Swift::Int)v160;
            v151 = (uint64_t *)v8;
            v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(v149 + 40);
            v153 = v160;
            v152(v148, ObjectType, v149);
            v8 = (uint64_t)v151;
            v154 = *(void **)v147;
            *(_QWORD *)v147 = v176;
            *(_QWORD *)(v147 + 8) = v149;

            v155 = v173;
          }
          v155(&v181, 0);
          ++v146;

        }
        while (v2 != v146);
LABEL_162:
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
LABEL_165:
      if (v8 < 0)
        v161 = v8;
      else
        v161 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v162 = _CocoaArrayWrapper.endIndex.getter(v161);
      swift_bridgeObjectRelease();
      if (v162 < 1)
        return;
LABEL_90:
      objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v105);
      v107 = v106;
      v109 = v108;
      v110 = &selRef_isEnabled;
      v111 = objc_msgSend(v4, "view");
      if (!v111)
        goto LABEL_190;
      v112 = v111;
      objc_msgSend(v111, "frame");
      v114 = v113;

      v115 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
      *(_QWORD *)&v116 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v175, 0, 0).n128_u64[0];
      v117 = *v115;
      if (*v115 <= 0.0)
      {
        v118 = objc_msgSend(v4, "view", v116);
        if (!v118)
          goto LABEL_192;
        v119 = v118;
        objc_msgSend(v118, "frame");
        v117 = v120;

      }
      v121 = *(_QWORD *)v104;
      if ((*(_QWORD *)v104 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v122 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v121);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)((v121 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_172;
        }
        v122 = (char *)*(id *)(v121 + 32);
      }
      v123 = (uint64_t)&v122[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v122[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v174, 0, 0);
      sub_1000244B0(v123, (uint64_t)&v191);

      v3 = sub_10028B25C(&v191, v107, v109, v114, v117);
      sub_10000682C(&v191);
      v189 = v3;
      v110 = (char **)((unint64_t)v3 >> 62);
      if ((unint64_t)v3 >> 62)
      {
LABEL_172:
        if (v3 < 0)
          v163 = v3;
        else
          v163 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v164 = _CocoaArrayWrapper.endIndex.getter(v163);
        v2 = v3;
        swift_bridgeObjectRelease();
        if (v164 < 1)
          goto LABEL_187;
        swift_bridgeObjectRetain();
        v165 = _CocoaArrayWrapper.endIndex.getter(v163);
        swift_bridgeObjectRelease();
        if (!v165)
          goto LABEL_193;
        swift_bridgeObjectRetain();
        v166 = _CocoaArrayWrapper.endIndex.getter(v163);
        swift_bridgeObjectRelease();
        v4 = v172;
        if (v166)
        {
LABEL_99:
          if ((v3 & 0xC000000000000001) != 0)
            goto LABEL_179;
          if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v124 = *(id *)(v3 + 32);
            if (!v110)
              goto LABEL_102;
            goto LABEL_180;
          }
          __break(1u);
LABEL_187:
          v4 = v172;
          v3 = v2;
        }
        else
        {
          __break(1u);
LABEL_179:
          v124 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
          if (!v110)
          {
LABEL_102:
            v125 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_184;
          }
LABEL_180:
          if (v3 < 0)
            v167 = v3;
          else
            v167 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v125 = _CocoaArrayWrapper.endIndex.getter(v167);
          swift_bridgeObjectRelease();
LABEL_184:
          if (!v125)
          {
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
            return;
          }
          sub_100245650(0, 1);

          v3 = v189;
        }
      }
      else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_99;
      }
    }
  }
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], &v181, 0, 0);
  v9 = *(_QWORD *)v8;
  if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = *(_QWORD *)v8;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = type metadata accessor for SyncedLyricsLineView();
    v13 = sub_100006924(&qword_10049B0C8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v14 = Set.Iterator.init(_cocoa:)(&v191, v11, v12, v13);
    v9 = v191;
    v15 = v192;
    v16 = v193;
    v17 = v194;
    v18 = v195;
  }
  else
  {
    v64 = -1 << *(_BYTE *)(v9 + 32);
    v15 = v9 + 56;
    v16 = ~v64;
    v65 = -v64;
    if (v65 < 64)
      v66 = ~(-1 << v65);
    else
      v66 = -1;
    v18 = v66 & *(_QWORD *)(v9 + 56);
    v14 = (_QWORD *)swift_bridgeObjectRetain();
    v17 = 0;
  }
  v67 = (unint64_t)(v16 + 64) >> 6;
  if (v9 < 0)
    goto LABEL_55;
  while (1)
  {
    if (v18)
    {
      v4 = (char *)((v18 - 1) & v18);
      v68 = __clz(__rbit64(v18)) | (v17 << 6);
      v3 = v17;
      goto LABEL_72;
    }
    v74 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (v74 >= v67)
      goto LABEL_80;
    v75 = *(_QWORD *)(v15 + 8 * v74);
    v3 = v17 + 1;
    if (!v75)
    {
      v3 = v17 + 2;
      if (v17 + 2 >= v67)
        goto LABEL_80;
      v75 = *(_QWORD *)(v15 + 8 * v3);
      if (!v75)
      {
        v3 = v17 + 3;
        if (v17 + 3 >= v67)
          goto LABEL_80;
        v75 = *(_QWORD *)(v15 + 8 * v3);
        if (!v75)
        {
          v3 = v17 + 4;
          if (v17 + 4 >= v67)
            goto LABEL_80;
          v75 = *(_QWORD *)(v15 + 8 * v3);
          if (!v75)
            break;
        }
      }
    }
LABEL_71:
    v4 = (char *)((v75 - 1) & v75);
    v68 = __clz(__rbit64(v75)) + (v3 << 6);
LABEL_72:
    v72 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v68);
    if (!v72)
      goto LABEL_80;
    while (1)
    {
      v77 = objc_msgSend(v172, "traitCollection", v73);
      objc_msgSend(v77, "accessibilityContrast");

      sub_10027CAA0(0, 0.0);
      swift_beginAccess(v8, v178, 33, 0);
      v78 = (void *)sub_1002FCDDC(v72);
      swift_endAccess(v178);

      v17 = v3;
      v18 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0)
        break;
LABEL_55:
      v69 = __CocoaSet.Iterator.next()(v14);
      if (v69)
      {
        v70 = v69;
        v190[0] = v69;
        v71 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v70);
        swift_dynamicCast(v178, v190, (char *)&type metadata for Swift.AnyObject + 8, v71, 7);
        v72 = (id)v178[0];
        *(_QWORD *)&v73 = swift_unknownObjectRelease(v70).n128_u64[0];
        v3 = v17;
        v4 = (char *)v18;
        if (v72)
          continue;
      }
      goto LABEL_80;
    }
  }
  v76 = v17 + 5;
  while (v67 != v76)
  {
    v75 = *(_QWORD *)(v15 + 8 * v76++);
    if (v75)
    {
      v3 = v76 - 1;
      goto LABEL_71;
    }
  }
LABEL_80:
  sub_1000F38AC(v9);
}

void sub_10028CCAC(void *a1, char a2, double a3)
{
  char *v3;
  char *v4;
  id v8;
  id v9;
  double v10;
  void *v11;
  _BYTE v12[24];
  Swift::Int v13;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = objc_msgSend(v8, "accessibilityContrast");

  if (v9 != (id)1 || a3 <= 0.0)
  {
    v10 = 4.0;
    if (a3 <= 4.0)
      v10 = a3;
    sub_10027CAA0(a2 & 1, v10);
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v12, 33, 0);
    if (a3 == 0.0)
    {
      v11 = (void *)sub_1002FCDDC(a1);
    }
    else
    {
      sub_1002FAFCC(&v13, a1);
      v11 = (void *)v13;
    }
    swift_endAccess(v12);

  }
}

uint64_t sub_10028CDC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t **v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(__int128 *, char);
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(__int128 *, char);
  _QWORD v52[4];
  _QWORD v53[3];
  char v54[24];
  _QWORD v55[6];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v54, 0, 0);
  v3 = *(_QWORD *)v2;
  if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for SyncedLyricsLineView();
    v7 = sub_100006924(&qword_10049B0C8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v55, v5, v6, v7);
    v3 = v55[0];
    v50 = v55[1];
    v9 = v55[2];
    v10 = v55[3];
    v11 = v55[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v50 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v10 = 0;
  }
  v47 = v9;
  v48 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v23 >= v48)
      goto LABEL_33;
    v24 = *(_QWORD *)(v50 + 8 * v23);
    v17 = v10 + 1;
    if (!v24)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v48)
        goto LABEL_33;
      v24 = *(_QWORD *)(v50 + 8 * v17);
      if (!v24)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v48)
          goto LABEL_33;
        v24 = *(_QWORD *)(v50 + 8 * v17);
        if (!v24)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v48)
            goto LABEL_33;
          v24 = *(_QWORD *)(v50 + 8 * v17);
          if (!v24)
            break;
        }
      }
    }
LABEL_29:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_33;
    while (1)
    {
      v26 = objc_msgSend(v1, "traitCollection", v22, v47);
      objc_msgSend(v26, "accessibilityContrast");

      sub_10027CAA0(1, 0.0);
      swift_beginAccess(v2, v52, 33, 0);
      v27 = (void *)sub_1002FCDDC(v21);
      swift_endAccess(v52);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v53[0] = v18;
        v20 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v52, v53, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = (id)v52[0];
        *(_QWORD *)&v22 = swift_unknownObjectRelease(v19).n128_u64[0];
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_33;
    }
  }
  v25 = v10 + 5;
  while (v48 != v25)
  {
    v24 = *(_QWORD *)(v50 + 8 * v25++);
    if (v24)
    {
      v17 = v25 - 1;
      goto LABEL_29;
    }
  }
LABEL_33:
  sub_1000F38AC(v3);
  v28 = (uint64_t **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(v28, v53, 0, 0);
  v2 = (uint64_t)*v28;
  if (!((unint64_t)*v28 >> 62))
  {
    v29 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_35;
    return swift_bridgeObjectRelease();
  }
LABEL_45:
  if (v2 < 0)
    v46 = v2;
  else
    v46 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v46);
  v29 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_35:
  if (v29 >= 1)
  {
    v31 = 0;
    v49 = v2 & 0xC000000000000001;
    do
    {
      if (v49)
        v32 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v2);
      else
        v32 = (unsigned __int8 *)*(id *)(v2 + 8 * v31 + 32);
      v33 = v32;
      v34 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v32[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v36 = sub_10027BC60((uint64_t)v52);
      v37 = *(void **)v35;
      if (*(_QWORD *)v35)
      {
        v38 = v35;
        v39 = v33[v34];
        v40 = *(_QWORD *)(v35 + 8);
        v51 = v36;
        ObjectType = swift_getObjectType();
        v42 = (uint64_t *)v2;
        v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40);
        v44 = v37;
        v43(v39, ObjectType, v40);
        v2 = (uint64_t)v42;
        v45 = *(void **)v38;
        *(_QWORD *)v38 = v37;
        *(_QWORD *)(v38 + 8) = v40;

        v51((__int128 *)v52, 0);
      }
      else
      {
        v36((__int128 *)v52, 0);
      }
      ++v31;

    }
    while (v29 != v31);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10028D244(uint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  char *v8;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  char **v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  CGFloat *v30;
  double v31;
  CGFloat v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t *v65;
  uint64_t (*v66)(void *, uint64_t);
  id v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  BOOL v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  id v79;
  void *v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  double *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  __int128 v95;
  char v96;
  uint64_t v97;
  __int128 v98;
  char *v99;
  char *v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  char **v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t);
  void *v113;
  uint64_t v114;
  void *v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  char *v126;
  id v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  id v135;
  CGFloat v136;
  CGFloat v137;
  double v138;
  double v139;
  unint64_t v140;
  uint64_t v141;
  CGFloat *v142;
  id v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t Strong;
  uint64_t v152;
  uint64_t v153;
  uint64_t ObjectType;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  char *v163;
  unsigned int v164;
  uint64_t v165;
  unint64_t v167;
  unint64_t v168;
  double *v169;
  char **v170;
  _QWORD *v171;
  id v172;
  char *v173;
  __int128 v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  char v179[24];
  char v180[24];
  char v181[24];
  _QWORD aBlock[3];
  void *v183;
  void (*v184)(uint64_t);
  uint64_t v185;
  __int128 v186[2];
  char v187[24];
  char v188[24];
  char v189[24];
  char v190[24];
  char v191[24];
  char v192[24];
  char v193[24];
  char v194[24];
  char v195[24];
  _OWORD v196[2];
  char v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;

  v16 = swift_allocObject(&unk_10045F210, 32, 7);
  *(double *)(v16 + 16) = a6;
  *(double *)(v16 + 24) = a7;
  v17 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v19 = v18;
  v20 = v8;
  objc_msgSend(*(id *)&v8[v17], "contentOffset");
  v22 = v21;
  v24 = v23;
  v25 = &selRef_isEnabled;
  v26 = objc_msgSend(v8, "view");
  if (!v26)
    goto LABEL_133;
  v27 = v26;
  objc_msgSend(v26, "frame");
  v29 = v28;

  v30 = (CGFloat *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v31 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v195, 0, 0).n128_u64[0];
  v32 = *v30;
  if (*v30 <= 0.0)
  {
    v33 = objc_msgSend(v20, "view", v31);
    if (!v33)
      goto LABEL_134;
    v34 = v33;
    objc_msgSend(v33, "frame");
    v32 = v35;

  }
  v159 = a4 & 1;
  v36 = a7 - v19;
  v198.origin.x = v22;
  v198.origin.y = v24;
  v198.size.width = v29;
  v198.size.height = v32;
  v202 = CGRectOffset(v198, 0.0, v36);
  v199.origin.x = v22;
  v199.origin.y = v24;
  v199.size.width = v29;
  v199.size.height = v32;
  v200 = CGRectUnion(v199, v202);
  v168 = sub_10028B25C((_QWORD *)a1, v200.origin.x, v200.origin.y, v200.size.width, v200.size.height);
  v37 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(a1 + 32);
  sub_10000ABC8((_QWORD *)a1, v37);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  v40 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v194, 0, 0);
  v41 = *(_QWORD *)v40;
  if ((v41 & 0xC000000000000001) == 0)
  {
    if ((v39 & 0x8000000000000000) != 0)
    {
LABEL_109:
      __break(1u);
    }
    else if (v39 < *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v172 = *(id *)(v41 + 8 * v39 + 32);
      if (v159)
        goto LABEL_17;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_111;
  }
  swift_bridgeObjectRetain();
  v172 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, v41);
  swift_bridgeObjectRelease();
  if (v159)
    goto LABEL_17;
LABEL_9:
  v42 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v179, 0, 0);
  if (!*(_QWORD *)v42 || *(_BYTE *)(*(_QWORD *)v42 + 56) != 2)
  {
LABEL_17:
    if ((a2 & 1) != 0)
    {
      v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
    }
    else
    {
      v48 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v193, 0, 0);
      if (*(_QWORD *)v48 && *(_BYTE *)(*(_QWORD *)v48 + 56) == 2)
        v47 = sub_100282AB8(a3, v159);
      else
        v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    }
    goto LABEL_23;
  }
  v43 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75)
    v43 = 1.0;
  v44 = 0.0;
  if (*(double *)&a3 >= 0.2)
    v44 = v43;
  v45 = (1.0 - v44) * 0.12 + 0.78;
  v46 = v44 * 0.27 + 0.48;
  sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
  v47 = UISpringTimingParameters.init(dampingRatio:response:)(v45, v46);
LABEL_23:
  v49 = v47;
  v50 = *(_QWORD *)(a1 + 24);
  v51 = *(_QWORD *)(a1 + 32);
  sub_10000ABC8((_QWORD *)a1, v50);
  v52 = (*(double (**)(uint64_t))(*(_QWORD *)(v51 + 8) + 16))(v50);
  v169 = (double *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v53 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v192, 0, 0).n128_u64[0];
  v165 = (uint64_t)v49;
  v156 = a3;
  if ((a2 & 1) != 0 || (v54 = v52 - v169[19], objc_msgSend(v49, "settlingDuration"), v53 = v55 + a8, v54 >= v53))
  {
    objc_msgSend(v49, "settlingDuration", v53);
    v22 = v56;
  }
  else
  {
    v22 = v54 - a8;
    objc_msgSend(v49, "setImplicitDuration:", 0);
  }
  v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v57 = *(char **)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v173 = v20;
  v170 = (char **)a1;
  v155 = a2;
  if (v57
    && (v58 = *(void **)&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (v59 = _s23InstrumentalContentViewCMa(), (v60 = swift_dynamicCastClass(v58, v59)) != 0))
  {
    v61 = v60;
    v62 = v16;
    v63 = (uint64_t)&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v57[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v180, 0, 0);
    sub_1000244B0(v63, (uint64_t)aBlock);
    v64 = v183;
    v16 = (uint64_t)v184;
    v65 = sub_10000ABC8(aBlock, (uint64_t)v183);
    v66 = *(uint64_t (**)(void *, uint64_t))(v16 + 16);
    v38 = v57;
    v67 = v58;
    v68 = v65;
    v69 = v66(v64, v16);
    a1 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    sub_10000682C(aBlock);
    v70 = (uint64_t)v170[3];
    v71 = v170[4];
    sub_10000ABC8(v170, v70);
    v72 = (*((uint64_t (**)(uint64_t, char *))v71 + 2))(v70, v71);
    v73 = a1 == v72;
    v16 = v62;
    v20 = v173;
    if (a1 == v72)
    {
      v74 = *(char **)((char *)v25 + (_QWORD)v173);
      *(char **)((char *)v25 + (_QWORD)v173) = 0;

      objc_msgSend((id)v38, "frame");
      *(double *)(v16 + 24) = *(double *)(v16 + 24) - (CGRectGetHeight(v201) + v169[10]);
      sub_100278500();
    }

    a1 = (uint64_t)v170;
  }
  else
  {
    v73 = 0;
  }
  sub_1000244B0(a1, (uint64_t)aBlock);
  v75 = sub_100005574(&qword_100499EA0);
  v25 = (char **)v165;
  if ((swift_dynamicCast(v186, aBlock, v75, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
  {
    v76 = (_QWORD *)a1;
    a1 = v168;
    sub_10028E500(v76, v168, v165, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36, a8);
    goto LABEL_123;
  }
  if (v73)
  {
    v77 = (_QWORD *)a1;
    a1 = v168;
    sub_10028EFE8(v77, v168, v165, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36);
    goto LABEL_123;
  }
  a1 = v168;
  v20 = (char *)(v168 >> 62);
  if (!(v168 >> 62))
  {
    v61 = *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_41;
  }
LABEL_111:
  if (a1 < 0)
    v145 = a1;
  else
    v145 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v145);
  swift_bridgeObjectRelease();
LABEL_41:
  v78 = _swiftEmptyArrayStorage;
  if (v61)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v68 = aBlock;
    sub_100259330(0, v61 & ~(v61 >> 63), 0);
    if ((v61 & 0x8000000000000000) == 0)
    {
      v38 = 0;
      v78 = (_QWORD *)aBlock[0];
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, a1);
        else
          v79 = *(id *)(a1 + 8 * v38 + 32);
        v80 = v79;
        v81 = UIView.untransformedFrame.getter();
        v83 = v82;
        v85 = v84;
        v87 = v86;

        aBlock[0] = v78;
        v89 = v78[2];
        v88 = v78[3];
        if (v89 >= v88 >> 1)
        {
          sub_100259330((char *)(v88 > 1), v89 + 1, 1);
          v78 = (_QWORD *)aBlock[0];
        }
        ++v38;
        v78[2] = v89 + 1;
        v90 = (double *)&v78[4 * v89];
        v90[4] = v81;
        *((_QWORD *)v90 + 5) = v83;
        *((_QWORD *)v90 + 6) = v85;
        *((_QWORD *)v90 + 7) = v87;
      }
      while (v61 != v38);
      v25 = (char **)v165;
      goto LABEL_51;
    }
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
LABEL_51:
  v158 = v16;
  if (v20)
  {
    if (a1 < 0)
      v92 = a1;
    else
      v92 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v91 = _CocoaArrayWrapper.endIndex.getter(v92);
    v20 = v173;
    if (!v91)
    {
LABEL_87:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v132 = sub_10028390C((uint64_t)v172, a1);
      v16 = v158;
      v25 = v170;
      if ((v133 & 1) != 0)
        goto LABEL_121;
      v61 = v132;
      v68 = (uint64_t *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators], v187, 0, 0);
      v38 = *v68;
      if (!((unint64_t)*v68 >> 62))
      {
        if (v61 < *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_90;
        goto LABEL_121;
      }
LABEL_117:
      if (v38 < 0)
        v146 = v38;
      else
        v146 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v147 = v146;
      v20 = v173;
      v148 = _CocoaArrayWrapper.endIndex.getter(v147);
      swift_bridgeObjectRelease();
      if (v61 < v148)
      {
LABEL_90:
        v134 = *v68;
        if ((v134 & 0xC000000000000001) == 0)
        {
          if (v61 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v61 < *(_QWORD *)((v134 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v135 = *(id *)(v134 + 8 * v61 + 32);
LABEL_94:
            sub_10028B800(v25, v135, (uint64_t *)1, 1);

LABEL_122:
            v25 = (char **)v165;
LABEL_123:
            v149 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
            swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], aBlock, 1, 0);
            if (*v149 == 1)
            {
              *v149 = 0;
              v150 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
              swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], v186, 0, 0);
              Strong = swift_unknownObjectWeakLoadStrong(v150);
              if (Strong)
              {
                v152 = Strong;
                v153 = *((_QWORD *)v150 + 1);
                ObjectType = swift_getObjectType();
                (*(void (**)(char *, uint64_t, uint64_t))(v153 + 24))(v20, ObjectType, v153);
                swift_unknownObjectRelease(v152);
              }
            }
            sub_10028BBB8(a1);
            swift_bridgeObjectRelease();

LABEL_127:
            swift_release(v16);

            return;
          }
          __break(1u);
          goto LABEL_131;
        }
        swift_bridgeObjectRetain();
        v135 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v134);
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_121:
      sub_10028B800(v25, 0, (uint64_t *)1, 1);
      goto LABEL_122;
    }
  }
  else
  {
    v91 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v20 = v173;
    if (!v91)
      goto LABEL_87;
  }
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  v93 = 0;
  v164 = 0;
  v163 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v167 = a1 & 0xC000000000000001;
  v157 = a1 + 32;
  v160 = v61 - 1;
  v94 = __OFSUB__(v61, 1);
  v162 = v94;
  v95 = 0uLL;
  v96 = 1;
  v97 = 56;
  v98 = 0uLL;
  v161 = v91;
  v171 = v78;
  while (1)
  {
    v196[0] = v95;
    v196[1] = v98;
    v197 = v96 & 1;
    if (v167)
      v99 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v93, a1);
    else
      v99 = (char *)*(id *)(v157 + 8 * v93);
    v100 = v99;
    if (__OFADD__(v93, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v176 = v93 + 1;
    v16 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, v22);
    v38 = swift_allocObject(&unk_10045F238, 48, 7);
    v101 = static NSObject.== infix(_:_:)(v100, v172);
    sub_10028974C(v100, v101 & 1, (uint64_t)v196);
    *(_QWORD *)(v38 + 16) = v102;
    *(_QWORD *)(v38 + 24) = v103;
    *(_QWORD *)(v38 + 32) = v104;
    *(_QWORD *)(v38 + 40) = v105;
    v177 = v97;
    v178 = (void *)v16;
    if (v93)
    {
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    else
    {
      swift_beginAccess(v38 + 16, v181, 1, 0);
      *(double *)(v38 + 24) = *(double *)(v38 + 24) - v36;
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    if ((unint64_t)v93 >= v171[2])
      goto LABEL_108;
    v106 = *(double *)((char *)v171 + v97);
    swift_beginAccess(v38 + 16, v191, 1, 0);
    if (v106 == *(double *)(v38 + 40))
    {
      v16 = v164;
      v107 = v170;
    }
    else
    {
      v107 = v170;
      v109 = (uint64_t)v170[3];
      v108 = v170[4];
      sub_10000ABC8(v170, v109);
      v110 = (*((uint64_t (**)(uint64_t, char *))v108 + 2))(v109, v108);
      v111 = (uint64_t)&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v190, 0, 0);
      sub_1000244B0(v111, (uint64_t)aBlock);
      v113 = v183;
      v112 = v184;
      sub_10000ABC8(aBlock, (uint64_t)v183);
      LODWORD(v110) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v112 + 2))(v113, v112) < v110;
      sub_10000682C(aBlock);
      v16 = v110 | v164;
    }
    v114 = (uint64_t)&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v100[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v189, 0, 0);
    sub_1000244B0(v114, (uint64_t)aBlock);
    v115 = v183;
    v116 = v184;
    sub_10000ABC8(aBlock, (uint64_t)v183);
    v117 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v116 + 2))(v115, v116);
    v119 = (uint64_t)v107[3];
    v118 = v107[4];
    sub_10000ABC8(v107, v119);
    v120 = (*((uint64_t (**)(uint64_t, char *))v118 + 2))(v119, v118);
    sub_10000682C(aBlock);
    v164 = (v117 != v120) & v16;
    if (v117 != v120)
    {
      v20 = v173;
      a1 = v168;
      v25 = (char **)v165;
      goto LABEL_78;
    }
    v20 = v173;
    a1 = v168;
    v25 = (char **)v165;
    if ((v16 & 1) != 0)
      break;
LABEL_78:
    swift_beginAccess(v38 + 16, v188, 0, 0);
    v174 = *(_OWORD *)(v38 + 32);
    v175 = *(_OWORD *)(v38 + 16);
    v121 = swift_allocObject(&unk_10045F260, 32, 7);
    *(_QWORD *)(v121 + 16) = v100;
    *(_QWORD *)(v121 + 24) = v38;
    v122 = v100;
    swift_retain(v38);
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)sub_100293C0C, v121);
    swift_release(v121);
    if (v162)
      goto LABEL_107;
    if (v160 == v93)
    {
      sub_1000244B0((uint64_t)v170, (uint64_t)v186);
      v123 = swift_allocObject(&unk_10045F288, 88, 7);
      *(_QWORD *)(v123 + 16) = a1;
      *(double *)(v123 + 24) = v36;
      *(_QWORD *)(v123 + 32) = v20;
      *(_QWORD *)(v123 + 40) = v158;
      sub_1000137C8(v186, v123 + 48);
      v184 = sub_100293C50;
      v185 = v123;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100204BB4;
      v183 = &unk_10045F2A0;
      v124 = _Block_copy(aBlock);
      v125 = v185;
      swift_bridgeObjectRetain();
      v126 = v173;
      v20 = v173;
      swift_retain(v158);
      objc_msgSend(v178, "addCompletion:", v124, swift_release(v125).n128_f64[0]);
      _Block_release(v124);
    }
    swift_beginAccess(v163, aBlock, 33, 0);
    v127 = v178;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v127);
    v129 = *(_QWORD *)((*(_QWORD *)v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v128 = *(_QWORD *)((*(_QWORD *)v163 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v16 = v161;
    if (v129 >= v128 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v128 > 1, v129 + 1, 1);
    v130 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v129, v127);
    specialized Array._endMutation()(v130);
    swift_endAccess(aBlock);
    if (v93 <= 1)
      v131 = 1;
    else
      v131 = v93;
    objc_msgSend(v127, "startAnimationAfterDelay:", v169[18] * (double)(v131 - 1));
    swift_release(v38);

    v96 = 0;
    ++v93;
    v97 = v177 + 32;
    v98 = v174;
    v95 = v175;
    if (v176 == v161)
      goto LABEL_87;
  }
  swift_bridgeObjectRelease();
  sub_10028FFA4();
  v136 = *(double *)(v38 + 16);
  v137 = v36 + *(double *)(v38 + 24);
  *(CGFloat *)(v38 + 24) = v137;
  sub_10028B6A4(v136, v137, *(CGFloat *)(v38 + 32), *(CGFloat *)(v38 + 40));
  v139 = v138;
  if (!v93)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10028D244(v170, v155 & 1, v156, v159, 1, 0.0, v139, a8);

    swift_release(v38);
    v16 = v158;
    goto LABEL_127;
  }
  if (v167)
  {
    v140 = v93 - 1;
  }
  else
  {
    v140 = v93 - 1;
    if ((unint64_t)(v93 - 1) >= *(_QWORD *)((v168 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_132;
  }
  if (v140 < v171[2])
  {
    v141 = 0;
    v142 = (CGFloat *)(v171 + 7);
    do
    {
      if (v167)
        v143 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v141, v168);
      else
        v143 = *(id *)(v168 + 8 * v141 + 32);
      v144 = v143;
      ++v141;
      UIView.untransformedFrame.setter(*(v142 - 3), *(v142 - 2), *(v142 - 1), *v142);

      v142 += 4;
    }
    while (v93 != v141);
    goto LABEL_105;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
}

id sub_10028E254(uint64_t a1, CGFloat *a2)
{
  _BYTE v4[24];

  swift_beginAccess(a2 + 2, v4, 0, 0);
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void sub_10028E29C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t *v32;
  id v33;
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v12)
      goto LABEL_10;
  }
  else
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a5);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    do
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13++, a3);
      v15 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v15, v16 + a1, v17, v18);
      swift_unknownObjectRelease(v14);
    }
    while (v12 != v13);
  }
  else
  {
    v19 = 0;
    do
    {
      v20 = *(void **)(a3 + 8 * v19++ + 32);
      v21 = v20;
      v22 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v22, v23 + a1, v24, v25);

    }
    while (v12 != v19);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess(a5 + 16, v36, 0, 0);
  objc_msgSend(v26, "setContentOffset:", *(double *)(a5 + 16), *(double *)(a5 + 24));
  *(_BYTE *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  v27 = (_QWORD *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v35, 1, 0);
  *v27 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v28 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v28)
    return;
  v29 = a6[3];
  v30 = a6[4];
  sub_10000ABC8(a6, v29);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 16);
  a6 = v28;
  v6 = v31(v29, v30);
  v32 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v34, 0, 0);
  a5 = *v32;
  if ((a5 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v6 >= *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v33 = *(id *)(a5 + 8 * v6 + 32);
LABEL_15:
  sub_10028F7E8((uint64_t)a6, (uint64_t)v33);

}

uint64_t sub_10028E500(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t (**v29)(void *, void *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  id v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  char *v65;
  uint64_t v66;
  char v68[24];
  void **aBlock;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t (**v73)(void *, void *);
  uint64_t v74;
  __int128 v75[2];
  char v76[32];

  v11 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v16 = v14;
    v66 = v14;
    if (v14)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (a2 < 0)
    v59 = a2;
  else
    v59 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v66 = _CocoaArrayWrapper.endIndex.getter(v59);
  if (!v66)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v16 = _CocoaArrayWrapper.endIndex.getter(v59);
  result = swift_bridgeObjectRelease();
LABEL_3:
  v63 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v66 < 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v17 = &v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v60 = v11 & 0xC000000000000001;
  v61 = (double *)&v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v76, 0, 0);
  v18 = 0;
  v62 = v11;
  do
  {
    if (v60)
      v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v11);
    else
      v19 = *(id *)(v11 + 8 * v18 + 32);
    v20 = v19;
    v21 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_1000244B0((uint64_t)a1, (uint64_t)v75);
    v22 = swift_allocObject(&unk_10045F0D0, 80, 7);
    *(_QWORD *)(v22 + 16) = v20;
    sub_1000137C8(v75, v22 + 24);
    *(_QWORD *)(v22 + 64) = v65;
    *(double *)(v22 + 72) = a7;
    v73 = (uint64_t (**)(void *, void *))sub_100293AD4;
    v74 = v22;
    aBlock = _NSConcreteStackBlock;
    v70 = 1107296256;
    v71 = sub_1000BED80;
    v72 = &unk_10045F0E8;
    v23 = _Block_copy(&aBlock);
    v24 = v74;
    v25 = v20;
    v26 = v65;
    objc_msgSend(v21, "addAnimations:", v23, swift_release(v24).n128_f64[0]);
    _Block_release(v23);
    v27 = (uint64_t)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v68, 0, 0);
    sub_1000244B0(v27, (uint64_t)&aBlock);
    v28 = v72;
    v29 = v73;
    sub_10000ABC8(&aBlock, (uint64_t)v72);
    v30 = v29[2](v28, v29);
    v32 = a1[3];
    v31 = a1[4];
    sub_10000ABC8(a1, v32);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v32, v31);
    sub_10000682C(&aBlock);
    if (v30 == v33)
    {
      v34 = v21;
      sub_10028B800(a1, v21, (uint64_t *)1, 0);

      v35 = *(void **)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v35)
      {
        v36 = _s23InstrumentalContentViewCMa();
        v37 = swift_dynamicCastClass(v35, v36);
        if (v37)
        {
          v38 = v37;
          v39 = swift_allocObject(&unk_10045F170, 40, 7);
          *(_QWORD *)(v39 + 16) = v26;
          *(_QWORD *)(v39 + 24) = v25;
          *(double *)(v39 + 32) = a7;
          v73 = (uint64_t (**)(void *, void *))sub_100293B68;
          v74 = v39;
          aBlock = _NSConcreteStackBlock;
          v70 = 1107296256;
          v71 = sub_1000BED80;
          v72 = &unk_10045F188;
          v40 = _Block_copy(&aBlock);
          v41 = v74;
          v42 = v25;
          v43 = v26;
          v44 = v35;
          objc_msgSend(v34, "addAnimations:", v40, swift_release(v41).n128_f64[0]);
          _Block_release(v40);
          v45 = swift_allocObject(&unk_10045F1C0, 32, 7);
          *(_QWORD *)(v45 + 16) = v38;
          *(double *)(v45 + 24) = a8;
          v73 = (uint64_t (**)(void *, void *))sub_100293B98;
          v74 = v45;
          aBlock = _NSConcreteStackBlock;
          v70 = 1107296256;
          v71 = sub_100204BB4;
          v72 = &unk_10045F1D8;
          v46 = _Block_copy(&aBlock);
          v47 = v74;
          v48 = v44;
          objc_msgSend(v34, "addCompletion:", v46, swift_release(v47).n128_f64[0]);
          _Block_release(v46);

        }
      }
    }
    v11 = v62;
    if (v63 == v18)
    {
      sub_1000244B0((uint64_t)a1, (uint64_t)v75);
      v49 = swift_allocObject(&unk_10045F120, 104, 7);
      *(_QWORD *)(v49 + 16) = v62;
      *(double *)(v49 + 24) = a7;
      *(_QWORD *)(v49 + 32) = v25;
      *(_QWORD *)(v49 + 40) = v26;
      *(double *)(v49 + 48) = a4;
      *(double *)(v49 + 56) = a5;
      sub_1000137C8(v75, v49 + 64);
      v73 = (uint64_t (**)(void *, void *))sub_100293B24;
      v74 = v49;
      aBlock = _NSConcreteStackBlock;
      v70 = 1107296256;
      v71 = sub_100204BB4;
      v72 = &unk_10045F138;
      v50 = _Block_copy(&aBlock);
      v51 = v74;
      swift_bridgeObjectRetain();
      v52 = v25;
      v53 = v26;
      objc_msgSend(v21, "addCompletion:", v50, swift_release(v51).n128_f64[0]);
      _Block_release(v50);
    }
    swift_beginAccess(v17, &aBlock, 33, 0);
    v54 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
    v56 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v55 = *(_QWORD *)((*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v56 >= v55 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1);
    v57 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
    specialized Array._endMutation()(v57);
    swift_endAccess(&aBlock);
    if (v18 <= 1)
      v58 = 1;
    else
      v58 = v18;
    ++v18;
    objc_msgSend(v54, "startAnimationAfterDelay:", v61[18] * (double)(v58 - 1), v60);

  }
  while (v66 != v18);
  return swift_bridgeObjectRelease();
}

id sub_10028EAF8(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_1000244B0(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_10000ABC8(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_10000ABC8(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_10000682C(v15);
  if (v12 < v9)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

id sub_10028EC44(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_100289DC8(a2);
  v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v8, 0, 0);
  sub_1000244B0(v3, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  sub_10000ABC8(v9, v10);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  result = (id)sub_10000682C(v9);
  if (!v6)
  {
    objc_msgSend(a2, "frame");
    return objc_msgSend(a2, "setFrame:");
  }
  return result;
}

void sub_10028ED10(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v16 = a5;
    else
      v16 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
    goto LABEL_32;
  v13 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a5);
    else
      v14 = *(id *)(a5 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    objc_msgSend(v14, "frame");
    objc_msgSend(v15, "setFrame:");

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v17, v28, 0, 0);
  sub_1000244B0(v17, (uint64_t)v29);
  v18 = v30;
  v19 = v31;
  sub_10000ABC8(v29, v30);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v22 = *v21;
  if ((unint64_t)*v21 >> 62)
    goto LABEL_27;
  v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v23 >= v20)
  {
    sub_10000682C(v29);
    if (v20 == v23)
    {
LABEL_16:
      objc_msgSend(*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a2, a3);
      *(_BYTE *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v24 = (_QWORD *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v24, v29, 1, 0);
      *v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v20 >= v23)
      goto LABEL_33;
    while (1)
    {
      v22 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v20 < 0)
        break;
      if ((unint64_t)v20 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_26;
      v25 = (char *)*(id *)(v22 + 8 * v20 + 32);
LABEL_22:
      ++v20;
      sub_100289DC8(v25);

      if (v23 == v20)
        goto LABEL_16;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (v22 < 0)
      v26 = v22;
    else
      v26 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_10028EFE8(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t (**v28)(void *, void *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  double *v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  char v51[24];
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t (**v56)(void *, void *);
  uint64_t v57;
  __int128 v58[2];
  char v59[32];

  v9 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v15 = v13;
    v50 = v13;
    if (v13)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  if (a2 < 0)
    v43 = a2;
  else
    v43 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v50 = _CocoaArrayWrapper.endIndex.getter(v43);
  if (!v50)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v15 = _CocoaArrayWrapper.endIndex.getter(v43);
  result = swift_bridgeObjectRelease();
LABEL_3:
  v47 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v50 < 1)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  v16 = &v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v44 = v9 & 0xC000000000000001;
  v45 = (double *)&v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v49[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v59, 0, 0);
  v17 = 0;
  v46 = v9;
  do
  {
    if (v44)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v9);
    else
      v18 = *(id *)(v9 + 8 * v17 + 32);
    v19 = v18;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_1000244B0((uint64_t)a1, (uint64_t)v58);
    v21 = swift_allocObject(&unk_10045F030, 80, 7);
    *(_QWORD *)(v21 + 16) = v19;
    sub_1000137C8(v58, v21 + 24);
    *(double *)(v21 + 64) = a7;
    *(_QWORD *)(v21 + 72) = v49;
    v56 = (uint64_t (**)(void *, void *))sub_100293A48;
    v57 = v21;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_1000BED80;
    v55 = &unk_10045F048;
    v22 = _Block_copy(&aBlock);
    v23 = v57;
    v24 = v19;
    v25 = v49;
    objc_msgSend(v20, "addAnimations:", v22, swift_release(v23).n128_f64[0]);
    _Block_release(v22);
    v26 = (uint64_t)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v51, 0, 0);
    sub_1000244B0(v26, (uint64_t)&aBlock);
    v27 = v55;
    v28 = v56;
    sub_10000ABC8(&aBlock, (uint64_t)v55);
    v29 = v28[2](v27, v28);
    v31 = a1[3];
    v30 = a1[4];
    sub_10000ABC8(a1, v31);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
    sub_10000682C(&aBlock);
    if (v29 == v32)
    {
      v33 = v20;
      sub_10028B800(a1, v20, (uint64_t *)1, 1);

    }
    v9 = v46;
    if (v47 == v17)
    {
      sub_1000244B0((uint64_t)a1, (uint64_t)v58);
      v34 = swift_allocObject(&unk_10045F080, 88, 7);
      *(_QWORD *)(v34 + 16) = v46;
      *(_QWORD *)(v34 + 24) = v25;
      *(double *)(v34 + 32) = a4;
      *(double *)(v34 + 40) = a5;
      sub_1000137C8(v58, v34 + 48);
      v56 = (uint64_t (**)(void *, void *))sub_100293A90;
      v57 = v34;
      aBlock = _NSConcreteStackBlock;
      v53 = 1107296256;
      v54 = sub_100204BB4;
      v55 = &unk_10045F098;
      v35 = _Block_copy(&aBlock);
      v36 = v57;
      swift_bridgeObjectRetain();
      v37 = v25;
      objc_msgSend(v20, "addCompletion:", v35, swift_release(v36).n128_f64[0]);
      _Block_release(v35);
    }
    swift_beginAccess(v16, &aBlock, 33, 0);
    v38 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
    v40 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v39 = *(_QWORD *)((*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v40 >= v39 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
    v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
    specialized Array._endMutation()(v41);
    swift_endAccess(&aBlock);
    if (v17 <= 1)
      v42 = 1;
    else
      v42 = v17;
    ++v17;
    objc_msgSend(v38, "startAnimationAfterDelay:", v45[18] * (double)(v42 - 1));

  }
  while (v50 != v17);
  return swift_bridgeObjectRelease();
}

id sub_10028F480(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_1000244B0(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  sub_10000ABC8(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  sub_10000ABC8(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  sub_10000682C(v15);
  if (v9 < v12)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

void sub_10028F5B4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if ((a4 & 0xC000000000000001) != 0)
    goto LABEL_18;
  if (*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    if (v5 < 0)
      v20 = v5;
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    if (v16 < v6)
      goto LABEL_24;
LABEL_6:
    sub_10000682C(v23);
    if (v6 == v16)
    {
LABEL_7:
      objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a1, a2);
      *(_BYTE *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v17 = (_QWORD *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v17, v23, 1, 0);
      *v17 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v6 >= v16)
      goto LABEL_25;
    while (1)
    {
      v18 = *v7;
      if ((*v7 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v18);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v6 < 0)
        break;
      if ((unint64_t)v6 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_17;
      v19 = (char *)*(id *)(v18 + 8 * v6 + 32);
LABEL_13:
      ++v6;
      sub_100289DC8(v19);

      if (v16 == v6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
LABEL_4:
    v12 = v11;
    v13 = (uint64_t)&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v22, 0, 0);
    sub_1000244B0(v13, (uint64_t)v23);

    v14 = v24;
    v15 = v25;
    sub_10000ABC8(v23, v24);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    v7 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v21, 0, 0);
    v5 = *v7;
  }
  while ((unint64_t)*v7 >> 62);
  v16 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v6)
    goto LABEL_6;
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_10028F7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double *v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)();
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)();
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  void *v42;
  char v43;
  id v44;
  Class isa;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  objc_class *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  char v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD aBlock[3];
  void *v81;
  void (*v82)();
  uint64_t v83;
  char v84[24];
  char v85[24];
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[32];

  v3 = v2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentOffset");
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)v3, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_73;
  }
  v12 = v11;
  objc_msgSend(v11, "frame");
  v14 = v13;

  v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v91, 0, 0).n128_u64[0];
  v17 = *v15;
  if (*v15 > 0.0)
    goto LABEL_5;
  v18 = objc_msgSend((id)v3, "view", v16);
  if (!v18)
  {
LABEL_73:
    __break(1u);
    return;
  }
  v19 = v18;
  objc_msgSend(v18, "frame");
  v17 = v20;

LABEL_5:
  v21 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v90, 0, 0);
  sub_1000244B0(v21, (uint64_t)aBlock);
  v22 = sub_10028B25C(aBlock, v8, v10, v14, v17);
  sub_10000682C(aBlock);
  v23 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v23, v89, 0, 0);
  sub_1000244B0(v23, (uint64_t)aBlock);
  v24 = v81;
  v25 = v82;
  sub_10000ABC8(aBlock, (uint64_t)v81);
  v76 = (*((uint64_t (**)(void *, void (*)()))v25 + 2))(v24, v25);
  sub_1000244B0(v21, (uint64_t)v86);
  v26 = v87;
  v27 = v88;
  sub_10000ABC8(v86, v87);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  sub_10000682C(v86);
  sub_10000682C(aBlock);
  sub_1000244B0(v23, (uint64_t)aBlock);
  v28 = v81;
  v29 = v82;
  sub_10000ABC8(aBlock, (uint64_t)v81);
  v30 = (*((uint64_t (**)(void *, void (*)()))v29 + 2))(v28, v29);
  v31 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v86, 0, 0);
  v79 = v31;
  v32 = *v31;
  v70 = v6;
  if ((unint64_t)*v31 >> 62)
    goto LABEL_63;
  v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v33 >= v30)
    goto LABEL_7;
LABEL_67:
  __break(1u);
LABEL_68:
  if (v22 < 0)
    v69 = v22;
  else
    v69 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v36 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease();
  while (1)
  {
    v72 = (_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    v32 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v85, 0, 0);
    v71 = v32;
    swift_beginAccess(v32, v84, 0, 0);
    v74 = 0;
    if (v30 <= v33)
      v37 = v33;
    else
      v37 = v30;
    v77 = v22 & 0xC000000000000001;
    v78 = v37;
    v73 = v3;
    while (1)
    {
      if (v30 == v78)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v32 = *v79;
      if ((*v79 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v32);
        swift_bridgeObjectRelease();
        if (!v36)
          goto LABEL_18;
      }
      else
      {
        if (v30 < 0)
          goto LABEL_58;
        if ((unint64_t)v30 >= *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v38 = *(id *)(v32 + 8 * v30 + 32);
        if (!v36)
          goto LABEL_18;
      }
      v39 = v33;
      if (v77)
      {
        swift_bridgeObjectRetain();
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
      }
      else
      {
        v40 = *(void **)(v22 + 32);
        swift_bridgeObjectRetain();
        v41 = v40;
      }
      v42 = v41;
      v32 = type metadata accessor for SyncedLyricsLineView();
      v43 = static NSObject.== infix(_:_:)(v42, v38);

      if ((v43 & 1) == 0)
        break;
      swift_bridgeObjectRelease();
LABEL_29:
      v33 = v39;
LABEL_30:
      if (v75 >= v76)
        goto LABEL_18;
      v44 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      sub_1000087DC(0, (unint64_t *)&qword_10049B080, UIViewPropertyAnimator_ptr);
      isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v44).super.isa;
      v46 = swift_allocObject(&unk_10045EFE0, 32, 7);
      *(_QWORD *)(v46 + 16) = v3;
      *(_QWORD *)(v46 + 24) = v38;
      v82 = sub_1002939D8;
      v83 = v46;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BED80;
      v81 = &unk_10045EFF8;
      v47 = _Block_copy(aBlock);
      v48 = v83;
      v49 = (id)v3;
      v50 = v38;
      -[objc_class addAnimations:](isa, "addAnimations:", v47, swift_release(v48).n128_f64[0]);
      _Block_release(v47);
      swift_beginAccess(v72, aBlock, 33, 0);
      v51 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      v53 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v52 = *(_QWORD *)((*v72 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v53 >= v52 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
      v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
      specialized Array._endMutation()(v54);
      swift_endAccess(aBlock);
      -[objc_class startAnimationAfterDelay:](v51, "startAnimationAfterDelay:", *(double *)(v71 + 144) * (double)v74);

      v55 = __OFADD__(v74, 1);
      v32 = ++v74;
      if (v55)
        goto LABEL_62;
LABEL_19:
      if (++v30 == v33)
        goto LABEL_8;
    }
    v33 = v39;
    if (v36 == 1)
      goto LABEL_17;
    if (v77)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
      v57 = static NSObject.== infix(_:_:)(v56, v38);
      swift_unknownObjectRelease(v56);
      if ((v57 & 1) == 0)
      {
        if (v36 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          v32 = v3;
          sub_100289DC8((char *)v38);

          goto LABEL_19;
        }
        v58 = 2;
        while (1)
        {
          v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v22);
          v60 = v58 + 1;
          if (__OFADD__(v58, 1))
            break;
          v61 = v59;
          v62 = static NSObject.== infix(_:_:)(v59, v38);
          swift_unknownObjectRelease(v61);
          if ((v62 & 1) != 0)
            goto LABEL_53;
          ++v58;
          v3 = v73;
          if (v60 == v36)
          {
            swift_bridgeObjectRelease();
            v33 = v39;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v63 = *(id *)(v22 + 40);
    v64 = static NSObject.== infix(_:_:)(v63, v38);

    if ((v64 & 1) != 0)
      goto LABEL_46;
    if (v36 == 2)
      goto LABEL_17;
    v3 = 6;
    while (1)
    {
      v65 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v66 = *(id *)(v22 + 8 * v3);
      v67 = static NSObject.== infix(_:_:)(v66, v38);

      if ((v67 & 1) != 0)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        v3 = v73;
        goto LABEL_29;
      }
      ++v3;
      if (v65 == v36)
      {
        swift_bridgeObjectRelease();
        v3 = v73;
        v33 = v39;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    if (v32 < 0)
      v68 = v32;
    else
      v68 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v33 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease();
    if (v33 < v30)
      goto LABEL_67;
LABEL_7:
    sub_10000682C(aBlock);
    if (v30 == v33)
      break;
    if ((unint64_t)v22 >> 62)
      goto LABEL_68;
    v36 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v75 >= v76)
  {
    v34 = *(void **)(v3 + v70);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, aBlock, 0, 0);
    v35 = v34;
    objc_msgSend(v35, "contentOffset");
    objc_msgSend(v35, "setContentOffset:");

  }
}

uint64_t sub_10028FFA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      if (objc_msgSend(v6, "state") == (id)1)
      {
        objc_msgSend(v7, "stopAnimation:", 0);
        objc_msgSend(v7, "finishAnimationAtPosition:", 0);
      }

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

id Card.ViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  double v7;
  char *v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  NSString v16;
  id v17;
  objc_super v19;
  _BYTE __src[544];

  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v9 = v3;
  sub_100281C24(0, 0, __src);
  memcpy(v8, __src, 0x219uLL);
  v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v15 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v15 = 0u;
  v15[1] = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v16, a3);

  return v17;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  double v4;
  char *v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  objc_super v15;
  _BYTE __src[544];

  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v6 = v1;
  sub_100281C24(0, 0, __src);
  memcpy(v5, __src, 0x219uLL);
  v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v9 = 0;
  v9[1] = 0;
  v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v12 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v12 = 0u;
  v12[1] = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, _QWORD *a3, uint64_t a4, char a5)
{
  sub_100291284(a3, a4, a5 & 1, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3, int a4)
{
  sub_100291898(a3, a4, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3)
{
  sub_1002923D8(a3, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, _QWORD *a2)
{
  sub_1002927D0(a2);
}

uint64_t sub_1002907D4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char v25;

  result = (uint64_t)sub_10028B09C();
  v1 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v2 = result;
    if (!result)
      return swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
      return swift_bridgeObjectRelease();
  }
  if (v2 >= 1)
  {
    v23 = 0u;
    v24 = 0u;
    v25 = 1;
    if ((v1 & 0xC000000000000001) != 0)
      v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    else
      v3 = (char *)*(id *)(v1 + 32);
    v4 = v3;
    sub_10028974C(v3, 2u, (uint64_t)&v23);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = v4;
    UIView.untransformedFrame.setter(v6, v8, v10, v12);

    v14 = v2 - 1;
    if (v2 != 1)
    {
      v15 = 0;
      do
      {
        *(CGFloat *)&v23 = v6;
        *((CGFloat *)&v23 + 1) = v8;
        *(CGFloat *)&v24 = v10;
        *((CGFloat *)&v24 + 1) = v12;
        v25 = 0;
        if ((v1 & 0xC000000000000001) != 0)
          v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, v1);
        else
          v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
        v17 = v16;
        sub_10028974C(v16, 2u, (uint64_t)&v23);
        v6 = v18;
        v8 = v19;
        v10 = v20;
        v12 = v21;
        v22 = v17;
        UIView.untransformedFrame.setter(v6, v8, v10, v12);

        ++v15;
      }
      while (v14 != v15);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100290974(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v7, 0, 0);
  v4 = *v3;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v5 > 0;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
  sub_100292504(a2);
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return sub_100292EE4(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_10028CDC4();
  sub_10028FFA4();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer), "invalidate");
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;

}

void sub_100290B54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  }
}

uint64_t sub_100290C60(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1002940F4;
  return v6(a1);
}

void sub_100290CC4()
{
  sub_10028BBB8(0);
}

uint64_t sub_100290CE8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100290D10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10049AEDC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000EA88;
  return sub_100285F20(a1, v4, v5, v7, v6);
}

uint64_t sub_100290D8C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100290DC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10049AEEC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_100286CF0(a1, v4, v5, v7, v6);
}

unint64_t sub_100290E38()
{
  unint64_t result;

  result = qword_10049AF08;
  if (!qword_10049AF08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10049AF08);
  }
  return result;
}

uint64_t sub_100290E7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100290EA8()
{
  uint64_t v0;

  return sub_100288688(*(char **)(v0 + 24));
}

_QWORD *sub_100290ECC(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = sub_10025934C(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v16 = v2 & 0xC000000000000001;
    v6 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = a2();
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_10025934C((_QWORD *)(v12 > 1), v13 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((_BYTE *)v14 + 40) = v11 & 1;
      v2 = v6;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100291044(uint64_t a1, char *a2)
{
  uint64_t v4;
  CGFloat *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  uint64_t result;
  void *v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  void *v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  unint64_t v33;
  CGRect v34;
  CGRect v35;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_17:
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v33 = a1 & 0xC000000000000001;
  v31 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v32, 0, 0);
  v6 = 4;
  while (1)
  {
    if (v33)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    objc_msgSend(v7, "frame");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(*(id *)&a2[v31], "contentOffset");
    v19 = v18;
    v21 = v20;
    result = (uint64_t)objc_msgSend(a2, "view");
    if (!result)
      break;
    v23 = (void *)result;
    objc_msgSend((id)result, "frame");
    v25 = v24;

    v26 = *v5;
    if (*v5 <= 0.0)
    {
      result = (uint64_t)objc_msgSend(a2, "view");
      if (!result)
        goto LABEL_23;
      v27 = (void *)result;
      objc_msgSend((id)result, "frame");
      v26 = v28;

    }
    v34.origin.x = v11;
    v34.origin.y = v13;
    v34.size.width = v15;
    v34.size.height = v17;
    v35.origin.x = v19;
    v35.origin.y = v21;
    v35.size.width = v25;
    v35.size.height = v26;
    v29 = CGRectIntersectsRect(v34, v35);

    if (v29)
    {
      swift_bridgeObjectRelease(a1);
      return 1;
    }
    ++v6;
    if (v9 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_100291284(_QWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char v5;
  char *v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  CGFloat *v33;
  double v34;
  CGFloat v35;
  id v36;
  void *v37;
  double v38;
  int v39;
  char *v40;
  uint64_t v41;
  int v42;
  char *v43;
  double v44;
  void *v45;
  uint64_t (*v46)();
  unint64_t v47;
  id v48;
  id v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  char *v60;
  objc_class *v61;
  UISpringTimingParameters v62;
  Class isa;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  BOOL v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  double v73;
  void **aBlock;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t (*v78)();
  uint64_t v79;
  _BYTE v80[24];
  char v81[32];
  char v82[24];
  char v83[24];
  char v84[32];
  CGRect v85;
  CGRect v86;

  v6 = v4;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000ABC8(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v84, 0, 0);
  v15 = *(_QWORD *)v14;
  v73 = a4;
  if ((*(_QWORD *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  objc_msgSend((id)v13, "frame", *(_QWORD *)&a4);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(v6, "view");
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v30 = v29;
  objc_msgSend(v29, "frame");
  v32 = v31;

  v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v34 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v83, 0, 0).n128_u64[0];
  v35 = *v33;
  if (*v33 <= 0.0)
  {
    v36 = objc_msgSend(v6, "view", v34);
    if (!v36)
    {
LABEL_32:
      __break(1u);
      return;
    }
    v37 = v36;
    objc_msgSend(v36, "frame");
    v35 = v38;

  }
  v5 = a3 & 1;
  v85.origin.x = v17;
  v85.origin.y = v19;
  v85.size.width = v21;
  v85.size.height = v23;
  v86.origin.x = v26;
  v86.origin.y = v28;
  v86.size.width = v32;
  v86.size.height = v35;
  if (CGRectIntersectsRect(v85, v86))
  {
    v39 = 0;
  }
  else
  {
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v82, 0, 0);
    v40 = v6;
    v41 = swift_bridgeObjectRetain();
    v42 = sub_100291044(v41, v40);

    swift_bridgeObjectRelease();
    v39 = v42 ^ 1;
  }
  v43 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v44 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v81, 0, 0).n128_u64[0];
  if (*v43 != 2
    && ((objc_msgSend(*(id *)&v6[v24], "isDragging", v44) | v39) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v80, 0, 0);
    sub_1000244B0(a3, (uint64_t)&aBlock);
    v45 = v77;
    v46 = v78;
    sub_10000ABC8(&aBlock, (uint64_t)v77);
    v47 = (*((uint64_t (**)(void *, uint64_t (*)()))v46 + 2))(v45, v46);
    v10 = (_QWORD *)v47;
    v15 = *(_QWORD *)v14;
    if ((*(_QWORD *)v14 & 0xC000000000000001) == 0)
    {
      if ((v47 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v47 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v48 = *(id *)(v15 + 8 * v47 + 32);
LABEL_20:
        v49 = v48;
        v50 = UIView.untransformedFrame.getter();
        v52 = v51;
        v54 = v53;
        v56 = v55;

        sub_10028B6A4(v50, v52, v54, v56);
        v58 = v57;

        sub_10000682C(&aBlock);
        sub_1000244B0(a3, (uint64_t)&aBlock);
        v59 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        sub_10028D244((uint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v58, v73);

        sub_10000682C(&aBlock);
        v6[v59] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v60 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v80, 0, 0);
  if (*(_QWORD *)v60 && *(_BYTE *)(*(_QWORD *)v60 + 56) == 2)
    v61 = (objc_class *)sub_100282AB8(a2, v5);
  else
    v61 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v62.super.isa = v61;
  sub_1000087DC(0, (unint64_t *)&qword_10049B080, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)(v62).super.isa;
  sub_10028B800(v10, isa, (uint64_t *)1, 1);
  v64 = swift_allocObject(&unk_10045F4E0, 24, 7);
  *(_QWORD *)(v64 + 16) = v6;
  v78 = sub_100294198;
  v79 = v64;
  aBlock = _NSConcreteStackBlock;
  v75 = 1107296256;
  v76 = sub_1000BED80;
  v77 = &unk_10045F4F8;
  v65 = _Block_copy(&aBlock);
  v66 = v79;
  v67 = v6;
  -[objc_class addAnimations:](isa, "addAnimations:", v65, swift_release(v66).n128_f64[0]);
  _Block_release(v65);
  v68 = -[objc_class state](isa, "state") == (id)3;
  v67[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v68;
  v69 = swift_allocObject(&unk_10045F530, 24, 7);
  *(_QWORD *)(v69 + 16) = v67;
  v78 = sub_1002940EC;
  v79 = v69;
  aBlock = _NSConcreteStackBlock;
  v75 = 1107296256;
  v76 = sub_100204BB4;
  v77 = &unk_10045F548;
  v70 = _Block_copy(&aBlock);
  v71 = v79;
  v72 = v67;
  -[objc_class addCompletion:](isa, "addCompletion:", v70, swift_release(v71).n128_f64[0]);
  _Block_release(v70);
  -[objc_class startAnimation](isa, "startAnimation");

}

void sub_100291898(_QWORD *a1, int a2, double a3)
{
  char *v3;
  char *v4;
  char v5;
  double v6;
  char *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id (*v17)();
  unint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  double v31;
  double *v32;
  id v33;
  void *v34;
  double *v35;
  char *v36;
  id v37;
  id v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  id v43;
  void *v44;
  double v45;
  CGFloat v46;
  CGFloat *v47;
  double v48;
  CGFloat v49;
  id v50;
  void *v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  CGFloat v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  double v67;
  double v68;
  void *v69;
  id (*v70)();
  uint64_t v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  id v76;
  void *v77;
  double v78;
  CGFloat v79;
  CGFloat v80;
  id v81;
  void *v82;
  double v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unsigned int v87;
  CGFloat *v88;
  uint64_t v89;
  _QWORD aBlock[3];
  void *v91;
  id (*v92)();
  double *v93;
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  _BYTE v99[64];
  CGRect v100;
  CGRect v101;

  v7 = v3;
  LODWORD(v9) = a2;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  sub_10000ABC8(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v98, 0, 0);
  v15 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
    goto LABEL_56;
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v15);
  swift_bridgeObjectRelease();
LABEL_9:
  v20 = v19;
  v21 = UIView.untransformedFrame.getter();
  v23 = v22;
  v25 = v24;
  v27 = v26;

  sub_10028B6A4(v21, v23, v25, v27);
  v6 = v28;

  sub_10000682C(aBlock);
  v29 = (uint64_t *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v96, 0, 0);
  v30 = *v29;
  swift_bridgeObjectRetain();
  v5 = sub_100283734(v13, v30);
  swift_bridgeObjectRelease();
  v4 = &v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v31 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v95, 0, 0).n128_u64[0];
  if (*v4 == 2 && (v5 & 1) == 0)
  {
    sub_10028FFA4();
    v32 = (double *)swift_allocObject(&unk_10045F490, 48, 7);
    *((_QWORD *)v32 + 2) = v7;
    v32[3] = 0.0;
    v32[4] = v6;
    *((_QWORD *)v32 + 5) = v13;
    v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v92 = sub_100293FFC;
    v93 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BED80;
    v91 = &unk_10045F4A8;
    v34 = _Block_copy(aBlock);
    v35 = v93;
    v36 = v7;
    v37 = (id)v13;
    swift_release(v35);
    v13 = (unint64_t)objc_msgSend(v33, "initWithDuration:curve:animations:", 3, v34, 0.25);
    _Block_release(v34);
    if ((v9 & 1) != 0)
    {
      sub_1000244B0(v12, (uint64_t)aBlock);
      v38 = (id)v13;
      sub_10028B800(aBlock, (void *)v13, (uint64_t *)1, 1);

      sub_10000682C(aBlock);
    }
    objc_msgSend((id)v13, "startAnimation");

    goto LABEL_45;
  }
  v89 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v31);
  v40 = v39;
  v42 = v41;
  v43 = objc_msgSend(v7, "view");
  if (!v43)
    goto LABEL_71;
  v44 = v43;
  objc_msgSend(v43, "frame");
  v46 = v45;

  v47 = (CGFloat *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v48 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v94, 0, 0).n128_u64[0];
  v88 = v47;
  v49 = *v47;
  if (*v47 <= 0.0)
  {
    v50 = objc_msgSend(v7, "view", v48);
    if (!v50)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v51 = v50;
    objc_msgSend(v50, "frame");
    v49 = v52;

  }
  objc_msgSend((id)v13, "frame");
  v101.origin.x = v53;
  v101.origin.y = v54;
  v101.size.width = v55;
  v101.size.height = v56;
  v100.origin.x = v40;
  v100.origin.y = v42;
  v100.size.width = v46;
  v100.size.height = v49;
  if (CGRectIntersectsRect(v100, v101))
  {
    sub_1000244B0((uint64_t)v10, (uint64_t)aBlock);
    v57 = sub_100005574(&qword_100499EA0);
    if ((swift_dynamicCast(v99, aBlock, v57, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0
      && (v9 & 1) != 0)
    {
      sub_10028FFA4();
      sub_100291284(v10, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  sub_1000244B0((uint64_t)v10, (uint64_t)aBlock);
  v58 = sub_100005574(&qword_100499EA0);
  if (swift_dynamicCast(v99, aBlock, v58, &type metadata for Lyrics.InstrumentalLine, 6))
  {
    v87 = v9;
    v59 = v10[3];
    v9 = v10[4];
    sub_10000ABC8(v10, v59);
    v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v59, v9);
    v10 = (_QWORD *)v60;
    v15 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
      goto LABEL_62;
    if ((v60 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v9 = v87;
      if (v60 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v61 = (char *)*(id *)(v15 + 8 * v60 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    if (v15 < 0)
      v86 = v15;
    else
      v86 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease();
    if ((uint64_t)v10 >= v9)
      goto LABEL_38;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_33:
  if (!(v5 & 1 | ((v9 & 1) == 0)))
  {
    sub_1000244B0(v12, (uint64_t)aBlock);
    sub_10028B800(aBlock, 0, (uint64_t *)1, 0);
    sub_10000682C(aBlock);
  }
LABEL_35:
  v13 = (unint64_t)(id)v13;
  UIView.untransformedFrame.getter();
  a3 = v67;

  memset(v99, 0, 32);
  v99[32] = 1;
  sub_10028974C((char *)v13, 2u, (uint64_t)v99);
  if (v68 != a3)
  {
    sub_1000244B0(v12, (uint64_t)aBlock);
    v69 = v91;
    v70 = v92;
    sub_10000ABC8(aBlock, (uint64_t)v91);
    v71 = (*((uint64_t (**)(void *, id (*)()))v70 + 2))(v69, v70);
    v9 = v71;
    v15 = *v14;
    if ((unint64_t)*v14 >> 62)
      goto LABEL_65;
    v10 = *(_QWORD **)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v10 < v71)
      goto LABEL_69;
LABEL_38:
    sub_10000682C(aBlock);
    if ((_QWORD *)v9 != v10)
    {
      if (v9 >= (uint64_t)v10)
        goto LABEL_70;
      do
      {
        v15 = *v14;
        if ((*v14 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v15);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v9 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
            swift_bridgeObjectRelease();
LABEL_5:
            v12 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v97, 0, 0);
            sub_1000244B0(v12, (uint64_t)aBlock);
            v16 = v91;
            v17 = v92;
            sub_10000ABC8(aBlock, (uint64_t)v91);
            v18 = (*((uint64_t (**)(void *, id (*)()))v17 + 2))(v16, v17);
            v4 = (char *)v18;
            v15 = *v14;
            if ((*v14 & 0xC000000000000001) != 0)
              goto LABEL_59;
            if ((v18 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v18 < *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v19 = *(id *)(v15 + 8 * v18 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            v61 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
            swift_bridgeObjectRelease();
            LOBYTE(v9) = v87;
LABEL_27:
            v62 = *(void **)&v61[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            v63 = v62;

            if (v62)
            {
              v64 = _s23InstrumentalContentViewCMa();
              if (swift_dynamicCastClass(v63, v64))
              {
                v65 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(_QWORD *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v13;
                v66 = (id)v13;

                if ((v5 & 1) != 0)
                {
                  sub_100278F00(a3);

                  goto LABEL_35;
                }
                sub_100278848(a3);
                LOBYTE(v9) = v87;
              }

            }
            goto LABEL_33;
          }
          if ((unint64_t)v9 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_55;
          v85 = (char *)*(id *)(v15 + 8 * v9 + 32);
        }
        ++v9;
        sub_100289DC8(v85);

      }
      while (v10 != (_QWORD *)v9);
    }
  }
  sub_10028FFA4();
  objc_msgSend(*(id *)&v7[v89], "setContentOffset:", 0.0, v6);
  if (*v4)
    goto LABEL_45;
  objc_msgSend(*(id *)&v7[v89], "contentOffset");
  v73 = v72;
  v75 = v74;
  v76 = objc_msgSend(v7, "view");
  if (!v76)
    goto LABEL_73;
  v77 = v76;
  objc_msgSend(v76, "frame");
  v79 = v78;

  v80 = *v88;
  if (*v88 > 0.0)
  {
LABEL_44:
    sub_1000244B0(v12, (uint64_t)aBlock);
    v84 = sub_10028B25C(aBlock, v73, v75, v79, v80);
    sub_10000682C(aBlock);
    sub_10028BBB8(v84);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v81 = objc_msgSend(v7, "view");
  if (v81)
  {
    v82 = v81;
    objc_msgSend(v81, "frame");
    v80 = v83;

    goto LABEL_44;
  }
LABEL_74:
  __break(1u);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06syncedE14DesectAllLinesyyAA0dE7ManagerCF_0()
{
  char *v0;
  char *v1;
  char *v2;
  double v3;
  id v4;
  UIViewPropertyAnimator v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  objc_class *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  _BYTE v19[24];
  Swift::Int v20;
  char v21[24];
  char v22[24];
  char v23[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v23, 0, 0).n128_u64[0];
  if (!*v2
    && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "isDragging", v3) & 1) == 0)
  {
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v22, 0, 0);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    sub_1000087DC(0, (unint64_t *)&qword_10049B080, UIViewPropertyAnimator_ptr);
    v5.super.isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
    v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v21, 1, 0);
    v18 = v6;
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6 >> 62)
    {
      if (v7 < 0)
        v17 = *(_QWORD *)v6;
      else
        v17 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v8)
        goto LABEL_5;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v9 = 0;
        v10 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          else
            v11 = *(id *)(v7 + 8 * v9 + 32);
          v12 = v11;
          v13 = v5.super.isa;
          sub_10027C668(0, v5.super.isa);

          v14 = objc_msgSend(v1, "traitCollection");
          v15 = objc_msgSend(v14, "accessibilityContrast");

          if (v15 != (id)1)
          {
            sub_10027CAA0(1, 3.0);
            swift_beginAccess(v10, v19, 33, 0);
            v16 = v12;
            sub_1002FAFCC(&v20, v16);
            v12 = (void *)v20;
            swift_endAccess(v19);

          }
          ++v9;
        }
        while (v8 != v9);
      }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)v18 = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
}

void sub_1002923D8(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v4 = a1[3];
  v5 = a1[4];
  sub_10000ABC8(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v8);
  swift_bridgeObjectRelease();
LABEL_5:
  v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  v11 = v10;

  if (v10)
  {
    v12 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v11, v12))
    {
      v13 = v11;
      sub_100278F00(a2);

    }
  }
}

void sub_100292504(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];
  _BYTE v29[40];
  _QWORD __dst[69];

  sub_1000244B0(a1, (uint64_t)v29);
  v2 = sub_100005574(&qword_100499EA0);
  if ((swift_dynamicCast(__dst, v29, v2, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v3 = __dst[2];
    v4 = BYTE1(__dst[3]);
    v5 = __dst[8];
    v6 = __dst[10];
    v7 = __dst[12];
    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v29, 0, 0);
    v9 = *v8;
    v10 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, v9, v10, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    v11 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release(v7);
      swift_release(v6);
      swift_release(v5);
      swift_bridgeObjectRelease();
      return;
    }
    v12 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v12)
      goto LABEL_15;
    v13 = _s19SBS_TextContentViewCMa();
    v14 = swift_dynamicCastClass(v12, v13);
    if (!v14)
      goto LABEL_15;
    v15 = *(_QWORD *)(v14 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v15)
      goto LABEL_24;
    v16 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v16)
    {
LABEL_15:
      swift_release(v7);
      swift_release(v6);
      swift_release(v5);
      swift_bridgeObjectRelease();

      return;
    }
    v26 = v6;
    v27 = v5;
    v17 = *(_QWORD *)(v16 + 24);
    v25 = *(_QWORD *)(v15
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if ((unint64_t)v17 >> 62)
    {
      if (v17 < 0)
        v23 = *(_QWORD *)(v16 + 24);
      else
        v23 = v17 & 0xFFFFFFFFFFFFFF8;
      v24 = v12;
      swift_retain(v16);
      swift_bridgeObjectRetain();
      v18 = _CocoaArrayWrapper.endIndex.getter(v23);
      if (v18)
        goto LABEL_9;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v12;
      swift_retain(v16);
      swift_bridgeObjectRetain();
      if (v18)
      {
LABEL_9:
        if (v18 >= 1)
        {
          v20 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v28, 0, 0);
          v21 = 0;
          do
          {
            if ((v17 & 0xC000000000000001) != 0)
            {
              v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v17);
            }
            else
            {
              v22 = *(_QWORD *)(v17 + 8 * v21 + 32);
              swift_retain(v22);
            }
            ++v21;
            memcpy(__dst, v20, 0x219uLL);
            sub_10026EC3C((uint64_t)__dst);
            sub_1002723B0((uint64_t)__dst, v4);
            sub_10026ED0C((uint64_t)__dst);
            swift_release(v22);
          }
          while (v18 != v21);
          goto LABEL_21;
        }
        __break(1u);
LABEL_24:
        __break(1u);
        return;
      }
    }
LABEL_21:
    swift_release(v25);
    swift_bridgeObjectRelease();
    swift_release(v7);
    swift_release(v26);
    swift_release(v27);
    swift_bridgeObjectRelease();

  }
}

void sub_1002927D0(_QWORD *a1)
{
  char *v1;
  id v3;
  Class isa;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void **aBlock;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20[24];

  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v20, 0, 0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  sub_1000087DC(0, (unint64_t *)&qword_10049B080, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  sub_10028B800(a1, isa, 0, 1);
  v5 = swift_allocObject(&unk_10045F3F0, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v18 = sub_100293FA0;
  v19 = v5;
  aBlock = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_1000BED80;
  v17 = &unk_10045F408;
  v6 = _Block_copy(&aBlock);
  v7 = v19;
  v8 = v1;
  -[objc_class addAnimations:](isa, "addAnimations:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  v9 = -[objc_class state](isa, "state") == (id)3;
  v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v9;
  v10 = swift_allocObject(&unk_10045F440, 24, 7);
  *(_QWORD *)(v10 + 16) = v8;
  v18 = sub_100293FB8;
  v19 = v10;
  aBlock = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100204BB4;
  v17 = &unk_10045F458;
  v11 = _Block_copy(&aBlock);
  v12 = v19;
  v13 = v8;
  -[objc_class addCompletion:](isa, "addCompletion:", v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);
  -[objc_class startAnimation](isa, "startAnimation");

}

uint64_t sub_1002929DC(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 40;
LABEL_2:
  if (v1 <= v2)
    v4 = v2;
  else
    v4 = v1;
  v5 = v4 + 1;
  v6 = (unsigned __int8 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v5 == ++v1)
      break;
    v7 = v6 + 16;
    v8 = *v6;
    v6 += 16;
    if (v8 == 1)
    {
      v9 = *((id *)v7 - 3);
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = (uint64_t)sub_10025934C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        result = (uint64_t)sub_10025934C((_QWORD *)(v10 > 1), v11 + 1, 1);
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      *((_BYTE *)v12 + 40) = 1;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_100292AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void **p_vtable;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  char v52[24];
  char v53[24];

  v1 = v0;
  v2 = (uint64_t)sub_10028B09C();
  if ((unint64_t)v2 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  p_vtable = &OBJC_METACLASS___MusicLyricsLoader.vtable;
  while (v3)
  {
    v50 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v5 = v2 & 0xC000000000000001;
    v6 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v7 = 4;
    v46 = v1;
    v47 = v3;
    v49 = v2;
    while (1)
    {
      v8 = v5
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(void **)&v8[*v6];
      if (v11)
      {
        v12 = _s19SBS_TextContentViewCMa();
        v13 = swift_dynamicCastClass(v11, v12);
        if (v13)
        {
          v14 = v6;
          v15 = *(_QWORD *)(v1 + v50);
          if (v15)
          {
            v16 = v13;
            v17 = v5;
            swift_beginAccess(v15 + 96, v52, 0, 0);
            v18 = *(double (**)(uint64_t))(v15 + 96);
            if (v18)
            {
              v19 = *(_QWORD *)(v15 + 104);
              v48 = v11;
              swift_retain(v15);
              v20 = sub_10003A434((uint64_t)v18, v19);
              v21 = v18(v20);
              swift_beginAccess(v15 + 88, v51, 0, 0);
              v22 = 0.0;
              if (*(_BYTE *)(v15 + 88) == 1)
              {
                Lyrics.spatialOffset.getter();
                v22 = v23;
              }
              sub_10003A5C8((uint64_t)v18, v19);
              swift_release(v15);
              v24 = v21 - v22;
              if (v24 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
              {
                v5 = v17;
                v1 = v46;
                v3 = v47;
                v6 = v14;
                v25 = v48;
                v2 = v49;
              }
              else
              {
                *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v24;
                v26 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                v1 = v46;
                if (!v26)
                  goto LABEL_56;
                v5 = v17;
                v6 = v14;
                v27 = v26;
                sub_10026CF5C(1, v24);

                v28 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                v3 = v47;
                v2 = v49;
                if (v28)
                {
                  v25 = v28;
                  sub_10026CF5C(1, v24);

                  v9 = v48;
                }
                else
                {
                  v25 = v48;
                }
              }

              v9 = v25;
              goto LABEL_6;
            }
            v5 = v17;
            v3 = v47;
          }
          v6 = v14;
          v2 = v49;
        }
      }
LABEL_6:

      ++v7;
      if (v10 == v3)
      {
        swift_bridgeObjectRelease();
        p_vtable = (void **)(&OBJC_METACLASS___MusicLyricsLoader + 24);
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_26:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v29);
    p_vtable = &OBJC_METACLASS___MusicLyricsLoader.vtable;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
    return;
  v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v31)
    goto LABEL_49;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v53, 0, 0);
  v33 = *v32;
  if (!((unint64_t)*v32 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    v35 = v31;
    swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_35;
LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:

LABEL_49:
    v44 = (char *)p_vtable[461];
    v45 = *(_QWORD *)&v44[v1];
    if (v45)
    {
      swift_retain(*(_QWORD *)&v44[v1]);
      SyncedLyricsManager.update()();
      swift_release(v45);
    }
    return;
  }
  if (v33 < 0)
    v42 = *v32;
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  v43 = v31;
  swift_bridgeObjectRetain();
  v34 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v34)
    goto LABEL_47;
LABEL_35:
  v36 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_53:
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v33);
    goto LABEL_40;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v37 = *(id *)(v33 + 8 * v36 + 32);
LABEL_40:
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = *v32;
    swift_bridgeObjectRetain();
    v40 = sub_100283734((uint64_t)v31, v39);
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      v41 = *(void **)(v1 + v30);
      *(_QWORD *)(v1 + v30) = 0;

      sub_10028F7E8((uint64_t)v31, (uint64_t)v38);
      sub_10027C56C();
    }

    goto LABEL_48;
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

id sub_100292EE4(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  id result;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char v19[24];
  char v20[24];
  char v21[24];
  CGRect v22;

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen], v21, 0, 0);
  if (*v3 != 1)
    return 0;
  v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v20, 0, 0);
  if (*v4)
    return 0;
  v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight], v19, 0, 0);
  if (*v5 <= 0.0)
    return 0;
  v6 = objc_msgSend(v1, "view", *v5);
  objc_msgSend(a1, "locationInView:", v6);
  v8 = v7;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v22.origin.x = v12;
    v22.origin.y = v14;
    v22.size.width = v16;
    v22.size.height = v18;
    return (id)(CGRectGetHeight(v22) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF14DidEndDragging_14willDecelerateySo08UIScrollF0C_SbtF_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;

  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_10045EDA8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_100293F74;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100093320;
  v6[3] = &unk_10045F3B8;
  v3 = _Block_copy(v6);
  swift_release(v7);
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 3.0);
  _Block_release(v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;

}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollF0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];
  _BYTE v21[24];
  _BYTE v22[24];

  v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      v10 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v22, 1, 0);
      if (*v10 == 1)
      {
        *v10 = 0;
        v11 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v20, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v11);
        if (Strong)
        {
          v13 = Strong;
          v14 = *(_QWORD *)(v11 + 8);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v3, ObjectType, v14);
          swift_unknownObjectRelease(v13);
        }
      }
      v16 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
      v17 = swift_unknownObjectWeakLoadStrong(v16);
      if (v17)
      {
        v7 = v17;
        v18 = *(_QWORD *)(v16 + 8);
        v19 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v3, v19, v18);
        goto LABEL_11;
      }
    }
  }
  else
  {
    v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v22, 1, 0);
    if (*v4 != 1)
    {
      *v4 = 1;
      v5 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v5);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)(v5 + 8);
        v9 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, v9, v8);
LABEL_11:
        swift_unknownObjectRelease(v7);
      }
    }
  }
}

unint64_t sub_1002932C8()
{
  unint64_t result;

  result = qword_10049AF70;
  if (!qword_10049AF70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SyncedLyricsViewController.Mode, &type metadata for SyncedLyricsViewController.Mode);
    atomic_store(result, (unint64_t *)&qword_10049AF70);
  }
  return result;
}

void sub_10029330C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_10029335C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

double destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));

  swift_release(*(_QWORD *)(a1 + 216));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 232)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v3;
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v6 = *(_QWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 232) = v6;
  swift_bridgeObjectRetain();
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v3);
  v7 = v4;
  swift_retain(v9);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(void **)(a2 + 104);
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v14 = *(_QWORD *)(a2 + 216);
  v15 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_retain(v14);
  swift_release(v15);
  v17 = *(_QWORD *)(a2 + 224);
  v16 = *(_QWORD *)(a2 + 232);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v17;
  *(_QWORD *)(a1 + 232) = v16;
  swift_retain(v16);
  swift_release(v18);
  return a1;
}

__n128 initializeWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 240))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 240) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002938C4 + 4 * byte_100398BD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002938F8 + 4 * asc_100398BD0[v4]))();
}

uint64_t sub_1002938F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100293900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100293908);
  return result;
}

uint64_t sub_100293914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10029391CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100293920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100293928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t sub_100293944()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100293968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049B064);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10049B060 + dword_10049B060))(a1, v4);
}

void sub_1002939D8()
{
  uint64_t v0;

  sub_100289DC8(*(char **)(v0 + 24));
}

uint64_t sub_1002939FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100293A0C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100293A14()
{
  uint64_t v0;

  sub_10000682C((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_100293A48()
{
  uint64_t v0;

  return sub_10028F480(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72));
}

uint64_t sub_100293A5C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_10000682C((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_100293A90(uint64_t a1)
{
  uint64_t v1;

  sub_10028F5B4(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100293AA0()
{
  uint64_t v0;

  sub_10000682C((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_100293AD4()
{
  uint64_t v0;

  return sub_10028EAF8(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64));
}

uint64_t sub_100293AE8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_10000682C((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100293B24(uint64_t a1)
{
  uint64_t v1;

  sub_10028ED10(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100293B3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100293B68()
{
  uint64_t v0;

  return sub_10028EC44(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100293B74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100293B98()
{
  uint64_t v0;

  sub_100278848(*(double *)(v0 + 24));
}

uint64_t sub_100293BC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100293BD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100293BE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100293C0C()
{
  uint64_t v0;

  return sub_10028E254(*(_QWORD *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_100293C14()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release(*(_QWORD *)(v0 + 40));
  sub_10000682C((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_100293C50(uint64_t a1)
{
  uint64_t v1;

  sub_10028E29C(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48));
}

uint64_t sub_100293C64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1000244B0(v3, a2);
}

uint64_t sub_100293CC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000ABC8(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL sub_100293D08(void *a1)
{
  double *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGRect v7;
  CGRect v8;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  objc_msgSend(a1, "frame");
  v8.origin.x = v2;
  v8.origin.y = v3;
  v8.size.width = v4;
  v8.size.height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id sub_100293D50(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = a1;
  v2();
  return v3;
}

uint64_t sub_100293D88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100293DB4(uint64_t a1)
{
  uint64_t v1;

  sub_10028A850(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100293DBC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100293DE0()
{
  uint64_t v0;

  return sub_1002723AC(v0);
}

uint64_t sub_100293DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_10049B0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100293E30()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setHidden:", 1);
}

id sub_100293E44()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setHighlighted:", 0);
}

_QWORD *sub_100293E84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[12];
  v6 = (void *)a1[13];
  v7 = a1[27];
  swift_release(a1[29]);
  swift_release(v7);

  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_100293F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049B0B4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10049B0B0 + dword_10049B0B0))(a1, v4);
}

void sub_100293F74(uint64_t a1)
{
  uint64_t v1;

  sub_100290B54(a1, v1);
}

uint64_t sub_100293F7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100293FA0()
{
  return sub_1002907D4();
}

void sub_100293FB8(uint64_t a1)
{
  uint64_t v1;

  sub_100290974(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100293FD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_100293FFC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_10029401C()
{
  uint64_t v0;

  sub_10028924C(*(void **)(v0 + 16));
}

void sub_100294024()
{
  uint64_t v0;

  sub_100289384(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10029402C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029403C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10029404C()
{
  uint64_t v0;

  sub_100287398(v0);
}

double sub_100294054()
{
  uint64_t v0;

  return sub_100285520(v0);
}

uint64_t sub_10029406C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049B07C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10049B078 + dword_10049B078))(a1, v4);
}

void sub_1002940DC()
{
  uint64_t v0;

  sub_100286C38(v0);
}

double sub_1002940E4(double a1)
{
  uint64_t v1;

  return sub_100284F10(v1, a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  char v14;
  id v15;

  v14 = a2 & 1;
  v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  objc_super v22;

  v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v17 = v7;
  *(_QWORD *)&v7[v14] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a4, a5, a6, a7);
  objc_msgSend(v20, "setClipsToBounds:", 1);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]);
  sub_100294540();
  sub_100294780();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return objc_opt_self(_TtCC11MusicCoreUI24LineProgressGradientViewP33_CAA5E92EB35A39E050897B33043EE84412GradientView);
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return objc_opt_self(_TtC11MusicCoreUI24LineProgressGradientView);
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  sub_100294638();
}

void sub_100294540()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (v1)
    v6 = 1.0;
  else
    v6 = 0.0;
  if (v1)
    v7 = 0.0;
  else
    v7 = 1.0;
  objc_msgSend(v5, "setStartPoint:", v6);

  v8 = objc_msgSend(*(id *)(v0 + v2), "layer");
  v9 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v8, v9, 0, 0, 0), "setEndPoint:", v7, 0.0);

  sub_100294638();
}

void sub_100294638()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double Width;
  id v6;
  double v7;
  double v8;
  id v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  if ((v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] & 1) != 0)
  {
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = 0.0;
    v4 = v2;
  }
  else
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v10);
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = Width - v4;
    if (Width - v4 <= 0.0)
      v2 = Width - v4;
    else
      v2 = 0.0;
  }
  v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v3, 0.0, v4, CGRectGetHeight(v11));

  v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetWidth(v12) - *(double *)&v0[v1];
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v9, "setFrame:", v2, 0.0, v8, CGRectGetHeight(v13));

}

id sub_100294780()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v2 = objc_opt_self(CAGradientLayer);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
  v4 = sub_100005574(&qword_1004999B0);
  v5 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100384A60;
  v6 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _s3__C7CGColorCMa_0(0);
  v9 = v8;
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 32) = v7;
  v10 = objc_msgSend(*(id *)(v0 + v6), "colorWithAlphaComponent:", 0.0);
  v11 = objc_msgSend(v10, "CGColor");

  *(_QWORD *)(v5 + 88) = v9;
  *(_QWORD *)(v5 + 64) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v3, "setColors:", isa);

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView), "setBackgroundColor:", *(_QWORD *)(v0 + v6));
}

id sub_1002949CC()
{
  return sub_100005360(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LineProgressGradientView", 36, "init(frame:)", 12, 0);
  __break(1u);
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return sub_100005360(a1, type metadata accessor for LineProgressGradientView);
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, "metadataObject");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (v4 && (v5 = objc_msgSend(v4, "lyrics")) != 0)
    {
      v6 = v5;
      v2 = objc_msgSend(v5, "hasStoreLyrics");

    }
    else
    {
      v2 = 0;
    }

  }
  return v2;
}

uint64_t MPCPlayerResponseItem.supportsLyrics.getter()
{
  void *v0;
  uint64_t result;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = (uint64_t)objc_msgSend(v0, "metadataObject");
  if (result)
  {
    v2 = (void *)result;
    v3 = objc_msgSend((id)result, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (!v4)
      goto LABEL_11;
    v5 = v4;
    if ((_s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(v4) & 1) == 0)
      goto LABEL_11;
    v6 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v7 = objc_msgSend(v6, "isRemoteServerLikelyReachable");

    if (v7)
    {

      return 1;
    }
    v8 = objc_msgSend(v5, "lyrics");
    if (v8 && (v9 = v8, v10 = objc_msgSend(v8, "text"), v9, v10))
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      swift_bridgeObjectRelease();
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v11 & 0xFFFFFFFFFFFFLL;
      return v14 != 0;
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t sub_100294C98()
{
  unint64_t result;

  result = qword_10049B178;
  if (!qword_10049B178)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LineProgressGradientView.Direction, &type metadata for LineProgressGradientView.Direction);
    atomic_store(result, (unint64_t *)&qword_10049B178);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LineProgressGradientView.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100294D28 + 4 * byte_100398D55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100294D5C + 4 * byte_100398D50[v4]))();
}

uint64_t sub_100294D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100294D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100294D6CLL);
  return result;
}

uint64_t sub_100294D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100294D80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100294D84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100294D8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t sub_100294DA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B1D0;
  if (!qword_10049B1D0)
  {
    v1 = objc_opt_self(CAGradientLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049B1D0);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  objc_super v30;
  _QWORD v31[11];

  v30.receiver = v4;
  v30.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x80000001003B95A0);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  v12 = qword_100498860;
  v13 = (char *)v9;
  if (v12 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v14 = (void *)qword_1004A2F90;
  v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess(&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition], v29, 1, 0);
  sub_1002950F8((uint64_t)v15, (uint64_t)v31);
  v27 = v15[1];
  v28 = *v15;
  v16 = v15[4];
  v25 = v15[3];
  v26 = (void *)v15[2];
  v17 = v15[5];
  v18 = v15[6];
  v20 = v15[7];
  v19 = v15[8];
  v21 = v15[9];
  *(_OWORD *)v15 = xmmword_100395410;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  v22 = v14;
  sub_1002951B0(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
  swift_bridgeObjectRetain();
  v23 = v22;
  swift_bridgeObjectRetain();
  sub_100295178(v28, v27, v26, v25, v16, v17, v18, v20, v19, v21);
  sub_10036CEF4((uint64_t)v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1002951B0(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t sub_1002950F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049B1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100295140(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    v4 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100295178(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);

    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

_QWORD *sub_1002951B0(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return objc_opt_self(MusicVocalsAttenuationSlider);
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  double Width;
  double Height;
  CGRect v14;

  if ((a7 & 1) == 0)
    return *(double *)&a1;
  Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  Height = CGRectGetHeight(v14);
  if (Height >= Width)
    Height = Width;
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  Swift::UInt64 v6;

  if ((a4 & 1) != 0)
  {
    String.hash(into:)(a1, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(a1, 0x737569646172, 0xE600000000000000);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a2;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v6;

  v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4)
    v6 = 0;
  if (a2 != a5)
    v6 = 0;
  if ((a3 & 1) != 0)
    return a6 & 1;
  else
    return v6;
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  if ((a3 & 1) != 0)
  {
    String.hash(into:)(v8, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(v8, 0x737569646172, 0xE600000000000000);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a1;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1002953DC()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100295434(uint64_t a1)
{
  uint64_t v1;

  Corner.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

Swift::Int sub_100295440()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100295494(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a1 + 16);
  result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = (*(double *)a1 == *(double *)a2) & ~(_DWORD)result;
    if (v5 == *(_QWORD *)(a2 + 8))
      return v6;
    else
      return 0;
  }
  return result;
}

void Border.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, double a4)
{
  Swift::UInt64 v8;

  swift_retain(a2);
  Color.hash(into:)(a1, a2);
  swift_release(a2);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a4;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(a3);
}

uint64_t static Border.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, double a5, double a6)
{
  int v7;
  unsigned int v8;

  v7 = a2;
  v8 = static Color.== infix(_:_:)(a1, a3) & (a5 == a6);
  if (v7 == a4)
    return v8;
  else
    return 0;
}

Swift::Int Border.hashValue.getter(uint64_t a1, unsigned __int8 a2, double a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  swift_retain(a1);
  Color.hash(into:)(v8, a1);
  swift_release(a1);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)&a3;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_100295610()
{
  uint64_t v0;

  return Border.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 16), *(double *)(v0 + 8));
}

void sub_100295620(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt v5;
  Swift::UInt64 v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned __int8 *)v1 + 16);
  swift_retain(*v1);
  Color.hash(into:)(a1, v3);
  swift_release(v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v5);
}

Swift::Int sub_100295688()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v6);
  swift_retain(v1);
  Color.hash(into:)(v6, v1);
  swift_release(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_100295700(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  double v4;
  int v5;
  char v6;
  _BOOL8 result;

  v2 = *(double *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(double *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = static Color.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t View.corner(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[2];
  char v7;

  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return View.modifier<A>(_:)(v6, a4, &type metadata for CornerRadiusModifier, a5);
}

uint64_t sub_10029579C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_100005574(&qword_10049B238);
  __chkstk_darwin();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v10 = sub_100005574(&qword_10049B240);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  sub_100296FD0((uint64_t)v6, a2);
  v11 = a2 + *(int *)(sub_100005574(&qword_10049B248) + 36);
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v8;
  *(_BYTE *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return sub_100008758((uint64_t)v6, &qword_10049B238);
}

uint64_t View.border(_:corner:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v9[0] = a1;
  *(double *)&v9[1] = a8;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5 & 1;
  return View.modifier<A>(_:)(v9, a6, &type metadata for BorderViewModifier, a7);
}

uint64_t sub_1002958C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v28 = a1;
  v29 = a2;
  v3 = sub_100005574(&qword_10049B250);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v2;
  v7 = *((double *)v2 + 1);
  if (!*((_BYTE *)v2 + 16))
  {
    v9 = 0.5;
    goto LABEL_5;
  }
  v8 = 0.0;
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v9 = -0.5;
LABEL_5:
    v8 = v7 * v9;
  }
  v10 = v2[3];
  v27 = v2[4];
  v11 = *((_BYTE *)v2 + 40);
  swift_retain(*(_QWORD *)&v6);
  v12 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v30, 0, 0, _swiftEmptyArrayStorage, v7, 10.0, 0.0);
  v13 = v30[0];
  v14 = v30[2];
  v15 = v30[3];
  v16 = v30[4];
  v17 = static Alignment.center.getter(v12);
  v19 = v18;
  v20 = static Alignment.center.getter(v17);
  v22 = v21;
  v23 = sub_100005574(&qword_10049B258);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v28, v23);
  v24 = &v5[*(int *)(v3 + 36)];
  v25 = v27;
  *(_QWORD *)v24 = v10;
  *((_QWORD *)v24 + 1) = v25;
  v24[16] = v11;
  *((double *)v24 + 3) = v8;
  *((_QWORD *)v24 + 4) = v13;
  *((_QWORD *)v24 + 5) = v30[1];
  *((_QWORD *)v24 + 6) = v14;
  *((_QWORD *)v24 + 7) = v15;
  *((_QWORD *)v24 + 8) = v16;
  *((double *)v24 + 9) = v6;
  *((_WORD *)v24 + 40) = 256;
  *((_QWORD *)v24 + 11) = v17;
  *((_QWORD *)v24 + 12) = v19;
  *((_QWORD *)v24 + 13) = v20;
  *((_QWORD *)v24 + 14) = v22;
  return sub_100297018((uint64_t)v5, v29);
}

uint64_t sub_100295A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002958C8(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9, uint64_t a10)
{
  double v10;
  _QWORD v12[2];
  char v13;
  double v14;
  uint64_t v15;
  char v16;
  char v17;

  if (((a4 | a3) & 1) != 0)
    v10 = *(double *)&a1;
  else
    v10 = *(double *)&a1 - a9;
  *(double *)v12 = v10;
  v12[1] = a2;
  v13 = a3 & 1;
  v14 = a9;
  v15 = a5;
  v16 = a6 & 1;
  v17 = a7;
  return View.modifier<A>(_:)(v12, a8, &type metadata for HoverViewModifier, a10);
}

uint64_t sub_100295AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v25[12];
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v29 = a2;
  v28 = type metadata accessor for HighlightHoverEffect(0);
  v30 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for ContentShapeKinds(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100005574(&qword_10049B260);
  v10 = __chkstk_darwin();
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *v2;
  v14 = v2[1];
  v15 = *((_BYTE *)v2 + 16);
  v16 = *((double *)v2 + 3);
  v26 = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter(v10);
  v17 = &v12[*(int *)(v9 + 36)];
  v18 = sub_100005574(&qword_10049B268);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(&v17[*(int *)(v18 + 40)], v8, v5);
  *(_QWORD *)v17 = v13;
  *((_QWORD *)v17 + 1) = v14;
  v17[16] = v15;
  *((double *)v17 + 3) = -v16;
  v17[32] = 0;
  v19 = sub_100005574(&qword_10049B270);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v27, v19);
  v20 = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  static CustomHoverEffect<>.highlight.getter(v20);
  v21 = sub_100297060();
  v22 = sub_1002970FC();
  v23 = v28;
  View.hoverEffect<A>(_:isEnabled:)(v4, v26, v9, v28, v21, v22);
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v4, v23);
  return sub_100008758((uint64_t)v12, &qword_10049B260);
}

void sub_100295CE0(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  CGRect v48;
  CGRect v49;

  v41 = a1;
  v42 = a2;
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RoundedRectangle._Inset(0);
  __chkstk_darwin();
  v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v36 = *(void (**)(char *, _QWORD, uint64_t))(v17 + 104);
    v36(v21, enum case for RoundedCornerStyle.continuous(_:), v16);
    v36(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    LOBYTE(v36) = static RoundedCornerStyle.== infix(_:_:)(v21, v19);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v37 = sub_100006798((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)(&v43, v37, a5, a6, a7, a8, COERCE_DOUBLE(*(_QWORD *)&a9 & 0xFFFFFFFFFFFFFFFELL | ((v36 & 1) == 0)));
    v31 = v43;
    v32 = v44;
    v33 = v45;
    v34 = v46;
    v35 = v47;
  }
  else
  {
    v28 = v42;
    if (v42 == -1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(&v24[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16);
      v38 = v41;
      *(double *)v24 = v41;
      *((double *)v24 + 1) = v38;
      sub_1002974D0((uint64_t)v24, (uint64_t)v27);
      *(CGFloat *)&v27[*(int *)(v25 + 20)] = a9;
      v39 = sub_100006798((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)(&v43, v39, a5, a6, a7, a8);
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;
      sub_100006798((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      v29 = v41;
      v48.origin.x = a5;
      v48.origin.y = a6;
      v48.size.width = a7;
      v48.size.height = a8;
      v49 = CGRectInset(v48, a9, a9);
      v30 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v28, v49.origin.x, v49.origin.y, v49.size.width, v49.size.height, v29, v29);
      Path.init(_:)(&v43, objc_msgSend(v30, "CGPath"));
      v31 = v43;
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;

    }
  }
  *(_QWORD *)a4 = v31;
  *(_QWORD *)(a4 + 8) = v32;
  *(_QWORD *)(a4 + 16) = v33;
  *(_QWORD *)(a4 + 24) = v34;
  *(_BYTE *)(a4 + 32) = v35;
}

double sub_100296014@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  char v3;
  double result;

  v3 = *(_BYTE *)(v2 + 16);
  result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_100296034@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_100295CE0(*(double *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_10029608C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100297444();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002960DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100297444();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10029612C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100297444();
  return Shape.body.getter(a1, v2);
}

void sub_100296164()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10049B208 = v1 == (id)6;
}

uint64_t sub_1002961C4()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100498A70 != -1)
    result = swift_once(&qword_100498A70, sub_100296164);
  v0 = 0x4008000000000000;
  if (byte_10049B208)
    v0 = 0x4018000000000000;
  static Corner.extraSmall = v0;
  *(_QWORD *)algn_1004A3CE8 = -1;
  byte_1004A3CF0 = 0;
  return result;
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (qword_100498A78 != -1)
    swift_once(&qword_100498A78, sub_1002961C4);
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (qword_100498A78 != -1)
    swift_once(&qword_100498A78, sub_1002961C4);
  return static Corner.extraSmall;
}

uint64_t sub_1002962B0()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100498A70 != -1)
    result = swift_once(&qword_100498A70, sub_100296164);
  v0 = 0x4014000000000000;
  if (byte_10049B208)
    v0 = 0x4020000000000000;
  static Corner.small = v0;
  unk_1004A3D00 = -1;
  byte_1004A3D08 = 0;
  return result;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (qword_100498A80 != -1)
    swift_once(&qword_100498A80, sub_1002962B0);
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (qword_100498A80 != -1)
    swift_once(&qword_100498A80, sub_1002962B0);
  return static Corner.small;
}

uint64_t sub_10029639C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100498A70 != -1)
    result = swift_once(&qword_100498A70, sub_100296164);
  v0 = 0x4020000000000000;
  if (byte_10049B208)
    v0 = 0x4024000000000000;
  static Corner.medium = v0;
  *(_QWORD *)algn_1004A3D18 = -1;
  byte_1004A3D20 = 0;
  return result;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (qword_100498A88 != -1)
    swift_once(&qword_100498A88, sub_10029639C);
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (qword_100498A88 != -1)
    swift_once(&qword_100498A88, sub_10029639C);
  return static Corner.medium;
}

uint64_t sub_100296488()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100498A70 != -1)
    result = swift_once(&qword_100498A70, sub_100296164);
  v0 = 0x4024000000000000;
  if (byte_10049B208)
    v0 = 0x4030000000000000;
  static Corner.large = v0;
  unk_1004A3D30 = -1;
  byte_1004A3D38 = 0;
  return result;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (qword_100498A90 != -1)
    swift_once(&qword_100498A90, sub_100296488);
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (qword_100498A90 != -1)
    swift_once(&qword_100498A90, sub_100296488);
  return static Corner.large;
}

uint64_t sub_100296574()
{
  uint64_t v0;
  uint64_t result;

  if (qword_100498A70 != -1)
    result = swift_once(&qword_100498A70, sub_100296164);
  v0 = 0x402C000000000000;
  if (byte_10049B208)
    v0 = 0x4038000000000000;
  static Corner.extraLarge = v0;
  *(_QWORD *)algn_1004A3D48 = -1;
  byte_1004A3D50 = 0;
  return result;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (qword_100498A98 != -1)
    swift_once(&qword_100498A98, sub_100296574);
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (qword_100498A98 != -1)
    swift_once(&qword_100498A98, sub_100296574);
  return static Corner.extraLarge;
}

uint64_t sub_100296660()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  _QWORD v4[5];
  uint64_t v5;

  v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_100296718;
  v5 = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100234A18;
  v4[3] = &unk_10045FB88;
  v1 = _Block_copy(v4);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v5);
  result = Color.init(uiColor:)(v2);
  static Border.artwork = result;
  qword_1004A3D60 = 0x3FE0000000000000;
  byte_1004A3D68 = 0;
  return result;
}

id sub_100296718(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (id)1)
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  else
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);
  }
  v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  double v0;

  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  v0 = *(double *)&qword_1004A3D60;
  swift_retain(static Border.artwork);
  return v0;
}

unint64_t sub_100296868()
{
  unint64_t result;

  result = qword_10049B210;
  if (!qword_10049B210)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Corner, &type metadata for Corner);
    atomic_store(result, (unint64_t *)&qword_10049B210);
  }
  return result;
}

unint64_t sub_1002968B0()
{
  unint64_t result;

  result = qword_10049B218;
  if (!qword_10049B218)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border.StrokeStyle, &type metadata for Border.StrokeStyle);
    atomic_store(result, (unint64_t *)&qword_10049B218);
  }
  return result;
}

unint64_t sub_1002968F8()
{
  unint64_t result;

  result = qword_10049B220;
  if (!qword_10049B220)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border, &type metadata for Border);
    atomic_store(result, (unint64_t *)&qword_10049B220);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Corner(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Corner(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_10029698C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1002969A8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t sub_1002969DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t *assignWithTake for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

uint64_t storeEnumTagSinglePayload for Border.StrokeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100296B04 + 4 * byte_100398E45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100296B38 + 4 * asc_100398E40[v4]))();
}

uint64_t sub_100296B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100296B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100296B48);
  return result;
}

uint64_t sub_100296B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100296B5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100296B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100296B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_100296B84(_QWORD *a1)
{
  return sub_100296C48(a1, (uint64_t)&type metadata for CornerRadiusModifier, (void (*)(void))sub_100296B98);
}

unint64_t sub_100296B98()
{
  unint64_t result;

  result = qword_10049E820;
  if (!qword_10049E820)
  {
    result = swift_getWitnessTable(&unk_1003990A8, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_10049E820);
  }
  return result;
}

uint64_t sub_100296BDC(_QWORD *a1)
{
  return sub_100296C48(a1, (uint64_t)&type metadata for BorderViewModifier, (void (*)(void))sub_100296BF0);
}

unint64_t sub_100296BF0()
{
  unint64_t result;

  result = qword_10049B228;
  if (!qword_10049B228)
  {
    result = swift_getWitnessTable(&unk_100399058, &type metadata for BorderViewModifier);
    atomic_store(result, (unint64_t *)&qword_10049B228);
  }
  return result;
}

uint64_t sub_100296C34(_QWORD *a1)
{
  return sub_100296C48(a1, (uint64_t)&type metadata for HoverViewModifier, (void (*)(void))sub_100296CA4);
}

uint64_t sub_100296C48(_QWORD *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  v4 = type metadata accessor for ModifiedContent(255, *a1, a2);
  a3();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
}

unint64_t sub_100296CA4()
{
  unint64_t result;

  result = qword_10049B230;
  if (!qword_10049B230)
  {
    result = swift_getWitnessTable(&unk_100399008, &type metadata for HoverViewModifier);
    atomic_store(result, (unint64_t *)&qword_10049B230);
  }
  return result;
}

__n128 initializeWithCopy for HoverViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverViewModifier()
{
  return &type metadata for HoverViewModifier;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 3) = v6;
  return a1;
}

__n128 initializeWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_100296FA0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E2408, 1);
}

uint64_t sub_100296FB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E23E0, 1);
}

uint64_t sub_100296FC0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E23B8, 1);
}

uint64_t sub_100296FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049B238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100297018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049B250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100297060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B278;
  if (!qword_10049B278)
  {
    v1 = sub_100005600(&qword_10049B260);
    sub_10002FFB8(&qword_10049B280, &qword_10049B270, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10002FFB8(&qword_10049B288, &qword_10049B268, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B278);
  }
  return result;
}

unint64_t sub_1002970FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B290;
  if (!qword_10049B290)
  {
    v1 = type metadata accessor for HighlightHoverEffect(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for HighlightHoverEffect, v1);
    atomic_store(result, (unint64_t *)&qword_10049B290);
  }
  return result;
}

uint64_t sub_100297144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100297154(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CornerShape()
{
  return &type metadata for CornerShape;
}

unint64_t sub_100297170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B298;
  if (!qword_10049B298)
  {
    v1 = sub_100005600(&qword_10049B248);
    sub_1002971F4();
    sub_10002FFB8(&qword_10049B2B0, &qword_10049B2B8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B298);
  }
  return result;
}

unint64_t sub_1002971F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B2A0;
  if (!qword_10049B2A0)
  {
    v1 = sub_100005600(&qword_10049B238);
    sub_10002FFB8(&qword_10049B2A8, &qword_10049B240, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B2A0);
  }
  return result;
}

unint64_t sub_10029727C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B2C0;
  if (!qword_10049B2C0)
  {
    v1 = sub_100005600(&qword_10049B250);
    sub_10002FFB8(&qword_10049B2C8, &qword_10049B258, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10002FFB8(&qword_10049B2D0, &qword_10049B2D8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B2C0);
  }
  return result;
}

uint64_t sub_100297318()
{
  _QWORD v1[4];

  v1[0] = sub_100005600(&qword_10049B260);
  v1[1] = type metadata accessor for HighlightHoverEffect(255);
  v1[2] = sub_100297060();
  v1[3] = sub_1002970FC();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_100297384()
{
  return sub_10002FFB8(&qword_10049B2E0, &qword_10049B2E8, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
}

unint64_t sub_1002973B4()
{
  unint64_t result;

  result = qword_10049B2F0;
  if (!qword_10049B2F0)
  {
    result = swift_getWitnessTable(&unk_100399154, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10049B2F0);
  }
  return result;
}

unint64_t sub_1002973FC()
{
  unint64_t result;

  result = qword_10049B2F8;
  if (!qword_10049B2F8)
  {
    result = swift_getWitnessTable(&unk_100399104, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10049B2F8);
  }
  return result;
}

unint64_t sub_100297444()
{
  unint64_t result;

  result = qword_10049B300;
  if (!qword_10049B300)
  {
    result = swift_getWitnessTable(&unk_1003991A4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10049B300);
  }
  return result;
}

unint64_t sub_10029748C()
{
  unint64_t result;

  result = qword_10049B308;
  if (!qword_10049B308)
  {
    result = swift_getWitnessTable(&unk_1003991F4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_10049B308);
  }
  return result;
}

uint64_t sub_1002974D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  NoticePresenter.init()();
  return v1;
}

uint64_t NoticePresenter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat bottom;
  CGFloat trailing;
  uint64_t v16;
  _QWORD *v17;
  __int128 v19;
  _BYTE v20[16];
  uint64_t v21;
  __int128 v22;
  CGFloat v23;
  CGFloat v24;

  v1 = sub_100005574(&qword_10049B318);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v9 = &v20[-v8 - 8];
  v10 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v11 = type metadata accessor for Notice(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_100014A7C((uint64_t)v9, (uint64_t)v7, &qword_10049B320);
  Published.init(initialValue:)(v7, v5);
  sub_100008758((uint64_t)v9, &qword_10049B320);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v10, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  if (qword_100498AA8 != -1)
    swift_once(&qword_100498AA8, sub_100298208);
  v13 = static NoticePresenter.defaultEdgePadding;
  v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v16 = swift_unknownObjectWeakInit(v20);
  v20[8] = 2;
  v21 = v13;
  v22 = v19;
  v23 = bottom;
  v24 = trailing;
  sub_10029B4E8(v16, v0 + v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v17 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = 0;
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v4, &qword_10049B320);
  Published.init(initialValue:)(v4, v2);
  return sub_100008758(a1, &qword_10049B320);
}

double sub_1002977F4@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100399250);
  v5 = swift_getKeyPath(&unk_100399278);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_10029785C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_100014A7C(a1, (uint64_t)&v12 - v6, &qword_10049B320);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100399250);
  v10 = swift_getKeyPath(&unk_100399278);
  sub_100014A7C((uint64_t)v7, (uint64_t)v5, &qword_10049B320);
  swift_retain(v8);
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_100008758((uint64_t)v7, &qword_10049B320);
}

double NoticePresenter.notice.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_100399250);
  v4 = swift_getKeyPath(&unk_100399278);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_1002979B8(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_100005574(&qword_10049B318);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_100297A1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  void (*v10)(_BYTE *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v4 = sub_100005574(&qword_10049B5C8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v9 = &v15[-v8 - 8];
  v10 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v10(&v15[-v8 - 8], a1, v4);
  v11 = *a2;
  v10(v7, (uint64_t)v9, v4);
  swift_beginAccess(v11 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v15, 33, 0);
  v12 = sub_100005574(&qword_10049B318);
  Published.projectedValue.setter(v7, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
}

uint64_t NoticePresenter.$notice.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = sub_100005574(&qword_10049B318);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  double v23;
  uint64_t v24;

  v2 = v1;
  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100399250);
  v7 = swift_getKeyPath(&unk_100399278);
  static Published.subscript.getter(v5, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v7);
  v8 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
  v9 = sub_100008758((uint64_t)v5, &qword_10049B320);
  if ((_DWORD)KeyPath != 1)
  {
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v11)
    {
      dispatch thunk of DispatchWorkItem.cancel()(v9);
      v10 = swift_release(v11);
    }
    if (a1)
      v12 = static Animation.default.getter(v9, v10);
    else
      v12 = 0;
    withAnimation<A>(_:_:)(v12, sub_100298310, v2, (char *)&type metadata for () + 8);
    swift_release(v12);
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v13)
    {
      *(_BYTE *)(v13
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      v14 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      if (a1)
        v23 = 2.0;
      else
        v23 = 0.0;
      swift_retain(v2);
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100298328, v2, v23);

      swift_release(v2);
    }
  }
}

uint64_t sub_100297D5C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[2];

  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)v10 - v4;
  v6 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  KeyPath = swift_getKeyPath(&unk_100399250);
  v8 = swift_getKeyPath(&unk_100399278);
  sub_100014A7C((uint64_t)v5, (uint64_t)v3, &qword_10049B320);
  swift_retain(a1);
  static Published.subscript.setter(v3, a1, KeyPath, v8);
  return sub_100008758((uint64_t)v5, &qword_10049B320);
}

void sub_100297E70(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100399250);
  v5 = swift_getKeyPath(&unk_100399278);
  static Published.subscript.getter(v3, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_100008758((uint64_t)v3, &qword_10049B320);
  if ((_DWORD)KeyPath == 1)
    sub_100298690(0);
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, a2);
  return sub_100006798((uint64_t)v5, type metadata accessor for Notice);
}

void sub_100297FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v24 - v6;
  sub_100082248(a2, (uint64_t)&v24 - v6, type metadata accessor for Notice);
  v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  KeyPath = swift_getKeyPath(&unk_100399250);
  v10 = swift_getKeyPath(&unk_100399278);
  sub_100014A7C((uint64_t)v7, (uint64_t)v5, &qword_10049B320);
  swift_retain(a1);
  static Published.subscript.setter(v5, a1, KeyPath, v10);
  sub_100008758((uint64_t)v7, &qword_10049B320);
  v11 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  v12 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v12)
  {
    v13 = objc_msgSend(v12, "rootViewController");
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for NoticePresenter.UIRootViewController();
      v16 = (void *)swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        v17 = objc_msgSend(v16, "view");

        if (!v17)
        {
          __break(1u);
          goto LABEL_15;
        }
        objc_msgSend(v17, "setNeedsLayout");
        v14 = v17;
      }

    }
    v18 = *(void **)(a1 + v11);
    if (v18)
    {
      v19 = objc_msgSend(v18, "rootViewController");
      if (v19)
      {
        v20 = v19;
        v21 = type metadata accessor for NoticePresenter.UIRootViewController();
        v22 = (void *)swift_dynamicCastClass(v20, v21);
        if (!v22)
        {
LABEL_12:

          return;
        }
        v23 = objc_msgSend(v22, "view");

        if (v23)
        {
          objc_msgSend(v23, "layoutIfNeeded");
          v20 = v23;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

void sub_100298208()
{
  static NoticePresenter.defaultEdgePadding = 0x4024000000000000;
}

uint64_t *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor()
{
  if (qword_100498AA8 != -1)
    swift_once(&qword_100498AA8, sub_100298208);
  return &static NoticePresenter.defaultEdgePadding;
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (qword_100498AA8 != -1)
    swift_once(&qword_100498AA8, sub_100298208);
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

void *NoticePresenter.defaultEdge.unsafeMutableAddressor()
{
  return &static NoticePresenter.defaultEdge;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  uint64_t result;

  result = swift_unknownObjectWeakInit(a2, 0);
  *(_BYTE *)(result + 8) = a1;
  *(double *)(result + 16) = a3;
  *(double *)(result + 24) = a4;
  *(double *)(result + 32) = a5;
  *(double *)(result + 40) = a6;
  *(double *)(result + 48) = a7;
  return result;
}

uint64_t sub_100298310()
{
  uint64_t v0;

  return sub_100297D5C(v0);
}

void sub_100298328()
{
  uint64_t v0;

  sub_100297E70(v0);
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10029B4E8(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.uiKitConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v10[56];
  _BYTE v11[24];
  _BYTE v12[56];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v11, 0, 0);
  sub_10029B4E8(v3, (uint64_t)v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v3, v10, 33, 0);
  sub_10029B538(a1, v3);
  swift_endAccess(v10);
  sub_10029B4E8(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v4 = _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v10);
  sub_1000FF204((uint64_t)v10);
  if ((v4 & 1) == 0)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v5)
    {
      v6 = objc_msgSend(v5, "rootViewController");
      if (v6)
      {
        v7 = v6;
        v8 = type metadata accessor for NoticePresenter.UIRootViewController();
        if (swift_dynamicCastClass(v7, v8))
        {
          sub_10029B4E8(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
          sub_100299E74((uint64_t)v10);
        }

      }
    }
  }
  sub_1000FF204(a1);
  return sub_1000FF204((uint64_t)v12);
}

void (*NoticePresenter.uiKitConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[17] = v1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3 + 14, 0, 0);
  sub_10029B4E8(v4, (uint64_t)v3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  return sub_100298530;
}

void sub_100298530(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_10029B4E8(*a1, (uint64_t)v2 + 56, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v2 + 56);
    sub_1000FF204((uint64_t)v2);
  }
  else
  {
    NoticePresenter.uiKitConfiguration.setter(*a1);
  }
  free(v2);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v4, 0, 0);
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t NoticePresenter.willPresentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A5C8(v6, v7);
}

uint64_t (*NoticePresenter.willPresentHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100298690(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  v4 = a1;
  if (v3)
  {
    v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          v5 = v3,
          v6 = v8,
          v7 = static NSObject.== infix(_:_:)(v5, v6),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      objc_msgSend(v3, "resignKeyWindow");
    }

    v4 = v8;
  }

}

uint64_t NoticePresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_100005574(&qword_10049B318);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem));
  sub_1000FF204(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_10003A5C8(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return v0;
}

uint64_t NoticePresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = sub_100005574(&qword_10049B318);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem));
  sub_1000FF204(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_10003A5C8(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100298854@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NoticePresenter(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

void sub_100298890(uint64_t a1, char a2)
{
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t WitnessTable;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  char v26;
  double v27;

  v21 = a5;
  v22 = a1;
  v10 = type metadata accessor for ModifiedContent(0, a3, &type metadata for NoticePresentingModifier);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v21 - v12;
  v14 = type metadata accessor for NoticePresenter(0);
  v15 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v16 = EnvironmentObject.init()(v14, v15);
  v25[0] = v16;
  v25[1] = v17;
  v26 = a2;
  v27 = a6;
  View.modifier<A>(_:)(v25, a3, &type metadata for NoticePresentingModifier, a4);
  swift_release(v16);
  v18 = sub_10029B5F4();
  v23 = a4;
  v24 = v18;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  View.environmentObject<A>(_:)(v21, v22, v10, v14, WitnessTable, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for NoticePresenter(0);
  v3 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  EnvironmentObject.init()(v2, v3);
  return a1;
}

void NoticePresentingModifier.controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    swift_retain(a1);
  }
  else
  {
    v3 = type metadata accessor for NoticePresenter(0);
    v4 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    EnvironmentObject.error()(0, a2, v3, v4);
    __break(1u);
  }
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NoticePresenter(0);
  v5 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

void NoticePresentingModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_100298B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = ((uint64_t (*)(void))static Alignment.top.getter)();
  v8 = v7;
  if (v2)
  {
    swift_retain(v2);
    v9 = Edge.Set.init(_:)(v4);
    v10 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v9, v5);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = type metadata accessor for NoticePresenter(0);
    v18 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v19 = ObservedObject.init(wrappedValue:)(v2, v17, v18);
    v21 = v20;
    v22 = sub_100005574(&qword_10049B350);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v0, v1, v22);
    result = sub_100005574(&qword_10049B358);
    v24 = (uint64_t *)(v0 + *(int *)(result + 36));
    *v24 = v19;
    v24[1] = v21;
    *((double *)v24 + 2) = v10;
    v24[3] = v12;
    v24[4] = v14;
    v24[5] = v16;
    v24[6] = v6;
    v24[7] = v8;
  }
  else
  {
    v25 = type metadata accessor for NoticePresenter(0);
    v26 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v3, v25, v26);
    __break(1u);
  }
  return result;
}

void sub_100298CB4()
{
  __asm { BR              X9 }
}

uint64_t sub_100298D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = ((uint64_t (*)(void))static Alignment.top.getter)();
  v8 = v7;
  if (v1)
  {
    swift_retain(v1);
    v9 = Edge.Set.init(_:)(v3);
    v10 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v9, v5);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = type metadata accessor for NoticePresenter(0);
    v18 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v19 = ObservedObject.init(wrappedValue:)(v1, v17, v18);
    v21 = v20;
    v22 = sub_100005574(&qword_10049B350);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v0, v4, v22);
    result = sub_100005574(&qword_10049B358);
    v24 = (uint64_t *)(v0 + *(int *)(result + 36));
    *v24 = v19;
    v24[1] = v21;
    *((double *)v24 + 2) = v10;
    v24[3] = v12;
    v24[4] = v14;
    v24[5] = v16;
    v24[6] = v6;
    v24[7] = v8;
  }
  else
  {
    v25 = type metadata accessor for NoticePresenter(0);
    v26 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v2, v25, v26);
    __break(1u);
  }
  return result;
}

uint64_t sub_100298E38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  uint64_t v152;
  unsigned __int8 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;

  v148 = a2;
  v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_100005574(&qword_10049B590);
  __chkstk_darwin();
  v129 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100005574(&qword_10049B598);
  __chkstk_darwin();
  v130 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100005574(&qword_10049B5A0);
  __chkstk_darwin();
  v133 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100005574(&qword_10049B5A8);
  __chkstk_darwin();
  v135 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100005574(&qword_10049B5B0);
  v146 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v134 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Notice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v136 = (uint64_t)&v125 - v17;
  sub_100005574(&qword_10049B5B8);
  __chkstk_darwin();
  v147 = (uint64_t)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin();
  v137 = (uint64_t)&v125 - v20;
  v21 = *(_QWORD *)(a1 + 16);
  v22 = *(double *)(a1 + 24);
  v144 = *(_QWORD *)(a1 + 32);
  v23 = *(double *)(a1 + 40);
  v24 = static Alignment.center.getter(v19);
  _FrameLayout.init(width:height:alignment:)(&v150, 0, 1, v21, 0, v24, v25);
  v143 = v150;
  v142 = v151;
  v141 = v152;
  v140 = v153;
  v139 = v154;
  v138 = v155;
  v26 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100399250);
  v28 = swift_getKeyPath(&unk_100399278);
  swift_retain(v26);
  v131 = v26;
  static Published.subscript.getter(v12, v29, KeyPath);
  swift_release(KeyPath);
  swift_release(v28);
  sub_10029BCD4(a1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100008758((uint64_t)v12, &qword_10049B320);
    v30 = 1;
    v31 = v145;
    v32 = v137;
  }
  else
  {
    v33 = v136;
    sub_10029BCFC((uint64_t)v12, v136);
    sub_100082248(v33, (uint64_t)v16, type metadata accessor for Notice);
    v34 = &v5[v3[5]];
    *(_QWORD *)v34 = swift_getKeyPath(&unk_1003994A8);
    *((_QWORD *)v34 + 1) = 0;
    *((_WORD *)v34 + 8) = 0;
    v35 = &v5[v3[6]];
    v149 = 0x3FF0000000000000;
    State.init(wrappedValue:)(&v156, &v149, &type metadata for Double);
    v36 = v157;
    *(_QWORD *)v35 = v156;
    *((_QWORD *)v35 + 1) = v36;
    v37 = &v5[v3[7]];
    LOBYTE(v149) = 0;
    GestureState.init(wrappedValue:)(&v156, &v149, &type metadata for Bool);
    v38 = v157;
    v39 = v158;
    *v37 = v156;
    *((_QWORD *)v37 + 1) = v38;
    *((_OWORD *)v37 + 1) = v39;
    v40 = &v5[v3[8]];
    LOBYTE(v149) = 0;
    State.init(wrappedValue:)(&v156, &v149, &type metadata for Bool);
    v41 = v157;
    *v40 = v156;
    *((_QWORD *)v40 + 1) = v41;
    v42 = sub_10029BCFC((uint64_t)v16, (uint64_t)v5);
    v43 = static Edge.Set.leading.getter(v42);
    v44 = EdgeInsets.init(_all:)(v22);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = v129;
    sub_100082248((uint64_t)v5, v129, type metadata accessor for NoticeView);
    v52 = v51 + *(int *)(v126 + 36);
    *(_BYTE *)v52 = v43;
    *(double *)(v52 + 8) = v44;
    *(_QWORD *)(v52 + 16) = v46;
    *(_QWORD *)(v52 + 24) = v48;
    *(_QWORD *)(v52 + 32) = v50;
    *(_BYTE *)(v52 + 40) = 0;
    v53 = sub_100006798((uint64_t)v5, type metadata accessor for NoticeView);
    v54 = static Edge.Set.trailing.getter(v53);
    v55 = EdgeInsets.init(_all:)(v23);
    v57 = v56;
    v59 = v58;
    v61 = v60;
    v62 = v130;
    sub_100014A7C(v51, v130, &qword_10049B590);
    v63 = v62 + *(int *)(v127 + 36);
    *(_BYTE *)v63 = v54;
    *(double *)(v63 + 8) = v55;
    *(_QWORD *)(v63 + 16) = v57;
    *(_QWORD *)(v63 + 24) = v59;
    *(_QWORD *)(v63 + 32) = v61;
    *(_BYTE *)(v63 + 40) = 0;
    v64 = sub_100008758(v51, &qword_10049B590);
    v65 = static Edge.Set.vertical.getter(v64);
    v66 = EdgeInsets.init(_all:)(0.0);
    v68 = v67;
    v70 = v69;
    v72 = v71;
    v73 = v133;
    sub_100014A7C(v62, v133, &qword_10049B598);
    v74 = v73 + *(int *)(v128 + 36);
    *(_BYTE *)v74 = v65;
    *(double *)(v74 + 8) = v66;
    *(_QWORD *)(v74 + 16) = v68;
    *(_QWORD *)(v74 + 24) = v70;
    *(_QWORD *)(v74 + 32) = v72;
    *(_BYTE *)(v74 + 40) = 0;
    v75 = sub_100008758(v62, &qword_10049B598);
    v76 = static AnyTransition.opacity.getter(v75);
    v77 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 300.0, 40.0, 1.0);
    v78 = AnyTransition.animation(_:)(v77, v76);
    swift_release(v76);
    v79 = swift_release(v77);
    v80 = static UnitPoint.center.getter(v79);
    v82 = static AnyTransition.scale(scale:anchor:)(0.85, v80, v81);
    v83 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 550.0, 26.0, 1.0);
    v84 = AnyTransition.animation(_:)(v83, v82);
    swift_release(v82);
    v85 = swift_release(v83);
    v86 = static UnitPoint.center.getter(v85);
    v88 = static AnyTransition.scale(scale:anchor:)(0.9, v86, v87);
    v89 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 620.0, 50.0, 1.0);
    v90 = AnyTransition.animation(_:)(v89, v88);
    swift_release(v88);
    v91 = swift_release(v89);
    v92 = static AnyTransition.asymmetric(insertion:removal:)(v84, v90, v91);
    swift_release(v84);
    v93 = swift_release(v90);
    v94 = AnyTransition.combined(with:)(v92, v78, v93);
    swift_release(v78);
    swift_release(v92);
    v95 = v135;
    sub_100014A7C(v73, v135, &qword_10049B5A0);
    *(_QWORD *)(v95 + *(int *)(v132 + 36)) = v94;
    sub_100008758(v73, &qword_10049B5A0);
    v96 = swift_getKeyPath(&unk_1003994A8);
    type metadata accessor for MainActor(0);
    v97 = v131;
    swift_retain(v131);
    v99 = static MainActor.shared.getter(v98);
    v100 = swift_allocObject(&unk_10045FF40, 80, 7);
    *(_QWORD *)(v100 + 16) = v99;
    *(_QWORD *)(v100 + 24) = &protocol witness table for MainActor;
    v101 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v100 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v100 + 48) = v101;
    *(_OWORD *)(v100 + 64) = *(_OWORD *)(a1 + 32);
    swift_retain(v97);
    v103 = static MainActor.shared.getter(v102);
    v104 = swift_allocObject(&unk_10045FF68, 80, 7);
    *(_QWORD *)(v104 + 16) = v103;
    *(_QWORD *)(v104 + 24) = &protocol witness table for MainActor;
    v105 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v104 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v104 + 48) = v105;
    *(_OWORD *)(v104 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)(&v156, sub_10029BD4C, v100, sub_10029BD88, v104, &type metadata for Bool);
    v106 = v156;
    v107 = v157;
    LOBYTE(v100) = v158;
    v108 = v134;
    sub_100014A7C(v95, v134, &qword_10049B5A8);
    v109 = v145;
    v110 = v108 + *(int *)(v145 + 36);
    *(_QWORD *)v110 = v96;
    *(_QWORD *)(v110 + 8) = v106;
    *(_QWORD *)(v110 + 16) = v107;
    *(_BYTE *)(v110 + 24) = v100;
    sub_100008758(v95, &qword_10049B5A8);
    sub_100006798(v136, type metadata accessor for Notice);
    v32 = v137;
    sub_1000149A8(v108, v137, &qword_10049B5B0);
    v30 = 0;
    v31 = v109;
  }
  v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56))(v32, v30, 1, v31);
  v112 = static Alignment.center.getter(v111);
  _FrameLayout.init(width:height:alignment:)(&v156, 0, 1, v144, 0, v112, v113);
  v146 = v156;
  v114 = v157;
  v115 = v158;
  v116 = BYTE8(v158);
  v117 = v159;
  v118 = v160;
  v119 = v147;
  sub_100014A7C(v32, v147, &qword_10049B5B8);
  v120 = v148;
  *v148 = 0;
  *((_BYTE *)v120 + 8) = 1;
  v120[2] = v143;
  *((_BYTE *)v120 + 24) = v142;
  v120[4] = v141;
  *((_BYTE *)v120 + 40) = v140;
  v121 = v138;
  v120[6] = v139;
  v120[7] = v121;
  v122 = sub_100005574(&qword_10049B5C0);
  sub_100014A7C(v119, (uint64_t)v120 + *(int *)(v122 + 48), &qword_10049B5B8);
  v123 = (char *)v120 + *(int *)(v122 + 64);
  *(_QWORD *)v123 = 0;
  v123[8] = 1;
  *((_QWORD *)v123 + 2) = v146;
  v123[24] = v114;
  *((_QWORD *)v123 + 4) = v115;
  v123[40] = v116;
  *((_QWORD *)v123 + 6) = v117;
  *((_QWORD *)v123 + 7) = v118;
  sub_100008758(v32, &qword_10049B5B8);
  return sub_100008758(v119, &qword_10049B5B8);
}

uint64_t sub_100299898@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_100005574(&qword_10049B320);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100399250);
  v8 = swift_getKeyPath(&unk_100399278);
  swift_retain(v6);
  static Published.subscript.getter(v5, v9, KeyPath);
  swift_release(KeyPath);
  swift_release(v8);
  sub_10029BCD4(a1);
  v10 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) != 1;
  result = sub_100008758((uint64_t)v5, &qword_10049B320);
  *a2 = a1;
  return result;
}

_BYTE *sub_10029999C(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain(*(_QWORD *)(a4 + 8));
    NoticePresenter.dismiss(_:)(1);
    return (_BYTE *)sub_10029BCD4(a4);
  }
  return result;
}

uint64_t sub_1002999E4@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[3];

  sub_100005574((uint64_t *)&unk_10049F740);
  v3 = __chkstk_darwin();
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1[1];
  v12[0] = *v1;
  v12[1] = v6;
  v12[2] = v1[2];
  *(_QWORD *)v5 = static HorizontalAlignment.center.getter(v3);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v7 = sub_100005574(&qword_10049B588);
  v8 = sub_100298E38((uint64_t)v12, &v5[*(int *)(v7 + 44)]);
  v9 = static Alignment.center.getter(v8);
  sub_100315478(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10);
  return sub_100008758((uint64_t)v5, (uint64_t *)&unk_10049F740);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id sub_100299B34(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id result;
  void *v13;
  unsigned __int8 v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  v8 = v7;
  if (*((_BYTE *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7)
    return v8;
  v9 = v7;
  v10 = objc_msgSend(v3, "rootViewController");
  if (!v10)
  {

    goto LABEL_8;
  }
  v11 = v10;
  result = objc_msgSend(v10, "view");
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(v9, "isDescendantOfView:", result);

    if ((v14 & 1) != 0)
      return v8;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100299E68()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id sub_100299E74(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  unsigned int v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  double *v14;
  id result;
  void *v16;
  void *v17;
  _BYTE v18[32];

  v2 = v1;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v18, 33, 0);
  sub_10029B538(a1, v4);
  swift_endAccess(v18);
  if (!objc_msgSend(v1, "isViewLoaded"))
    return (id)sub_1000FF204(a1);
  v5 = Edge.Set.init(_:)(*(unsigned __int8 *)(v4 + 8));
  v6 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v5, *(double *)(v4 + 16));
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v18);
  v14[2] = v6;
  *((_QWORD *)v14 + 3) = v8;
  *((_QWORD *)v14 + 4) = v10;
  *((_QWORD *)v14 + 5) = v12;
  v13(v18, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v16 = result;
    objc_msgSend(result, "setNeedsLayout");

    result = objc_msgSend(v2, "view");
    if (result)
    {
      v17 = result;
      objc_msgSend(result, "layoutIfNeeded");

      return (id)sub_1000FF204(a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10029A0D8()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double *v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  double *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE v23[32];
  char v24[24];
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v25, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v24, 0, 0);
  v7 = Edge.Set.init(_:)(*((unsigned __int8 *)v6 + 8));
  v8 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v7, v6[2]);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v23);
  v16[2] = v8;
  *((_QWORD *)v16 + 3) = v10;
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = v14;
  v15(v23, 0);
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v18 = v17;
  v19 = objc_msgSend(v2, "view");
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = v19;
  objc_msgSend(v18, "addSubview:", v19);

  v21 = objc_msgSend(v2, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "layoutIfNeeded");

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10029A2C8()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  char *v22;
  __n128 v23;
  char isEscapingClosureAtFileLocation;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  char v31[24];
  _QWORD aBlock[3];
  double v33;
  uint64_t (*v34)();
  double v35;
  double v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v37, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

    v3 = (uint64_t)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
    swift_beginAccess(&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v31, 0, 0);
    sub_10029B4E8(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v4 = v33;
    v5 = *(double *)&v34;
    v6 = v35;
    v7 = v36;
    v8 = objc_msgSend(v0, "view");
    if (!v8)
    {
LABEL_7:
      __break(1u);
      JUMPOUT(0x10029A6C4);
    }
    v9 = v8;
    sub_1000FF204((uint64_t)aBlock);
    objc_msgSend(v9, "effectiveUserInterfaceLayoutDirection");

    v10 = CGRect.inset(by:for:)(v4, v5, v6, v7);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = (void *)objc_opt_self(UIView);
    v18 = swift_allocObject(&unk_10045FF90, 24, 7);
    *(_QWORD *)(v18 + 16) = v0;
    *(double *)&v19 = COERCE_DOUBLE(swift_allocObject(&unk_10045FFB8, 32, 7));
    *(_QWORD *)(v19 + 16) = sub_10029BDB8;
    *(_QWORD *)(v19 + 24) = v18;
    *(double *)&v34 = COERCE_DOUBLE(sub_1000B0290);
    v35 = *(double *)&v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009BD0;
    v33 = COERCE_DOUBLE(&unk_10045FFD0);
    v20 = _Block_copy(aBlock);
    v21 = v35;
    v22 = v0;
    swift_retain(v19);
    objc_msgSend(v17, "performWithoutAnimation:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);
    _Block_release(v20);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v19, "", 129, 462, 44, 1, v23);
    swift_release(v19);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      v25 = dispatch thunk of UIHostingController.sizeThatFits(in:)(v14, v16);
      v27 = v26;
      v28 = objc_msgSend(v22, "traitCollection");
      objc_msgSend(v28, "displayScale");
      v30 = v29;

      CGRect.centeringAlong(axes:bounds:scale:)(3, v10, v12, v14, v16, v30, 0.0, 0.0, v25, v27);
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_10029A6D8(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10029A7D4()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.UIRootViewController);
}

id sub_10029A7E0(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_10029A860()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_10049B310 = result;
  return result;
}

char *UIWindowScene.noticePresenter.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _OWORD v12[2];

  v1 = v0;
  if (qword_100498AB0 != -1)
    swift_once(&qword_100498AB0, sub_10029A860);
  v2 = objc_getAssociatedObject(v0, (const void *)qword_10049B310);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_1000149A8((uint64_t)v12, (uint64_t)v10, &qword_10049B130);
  if (!v11)
  {
    sub_100008758((uint64_t)v10, &qword_10049B130);
    goto LABEL_10;
  }
  v4 = type metadata accessor for NoticePresenter(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
  {
LABEL_10:
    v6 = type metadata accessor for NoticePresenter(0);
    v5 = (char *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    NoticePresenter.init()();
    objc_setAssociatedObject(v1, (const void *)qword_10049B310, v5, (void *)1);
    v7 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration], v12, 0, 0);
    sub_10029B4E8(v7, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    swift_unknownObjectWeakAssign(v10, v1);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v10);
    return v5;
  }
  return (char *)v9;
}

char *UIView.noticePresenter.getter()
{
  void *v0;
  char *v1;
  char *v2;
  id v3;

  v1 = (char *)objc_msgSend(v0, "window");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "windowScene");

    if (v3)
    {
      v2 = UIWindowScene.noticePresenter.getter();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *UIViewController.noticePresenter.getter()
{
  void *v0;
  char *result;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;

  if (!objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = (char *)objc_msgSend(v0, "parentViewController");
    if (v4)
    {
      v6 = UIViewController.noticePresenter.getter();

      return (char *)v6;
    }
    return v4;
  }
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (char *)objc_msgSend(result, "window");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "windowScene");

      if (v5)
      {
        v4 = UIWindowScene.noticePresenter.getter();

      }
      else
      {

        return 0;
      }
    }
    else
    {

    }
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(a2);
  v6 = v5;
  if (Strong)
  {
    if (v5)
    {
      sub_1000087DC(0, &qword_10049B0E8, UIWindowScene_ptr);
      v7 = Strong;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_7;
    }
    else
    {

    }
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (v5)
  {

    goto LABEL_11;
  }
LABEL_7:
  v9 = *(unsigned __int8 *)(a2 + 8);
  v10 = Edge.rawValue.getter(*(unsigned __int8 *)(a1 + 8));
  if (v10 != Edge.rawValue.getter(v9) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_11;
  v11 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL)));
  return v11 & 1;
}

char *sub_10029AC6C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  double *v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_class *v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[6];
  char v30[24];

  type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin();
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  v7 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  sub_10029B4E8(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v7, v30, 0, 0);
  v8 = *((unsigned __int8 *)v7 + 8);
  swift_retain_n(a1, 2);
  v9 = v2;
  v10 = Edge.Set.init(_:)(v8);
  v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v7[2]);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = type metadata accessor for NoticePresenter(0);
  v19 = sub_100006924(&qword_100498E30, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v29[0] = ObservedObject.init(wrappedValue:)(a1, v18, v19);
  v29[1] = v20;
  *(double *)&v29[2] = v11;
  v29[3] = v13;
  v29[4] = v15;
  v29[5] = v17;
  v21 = objc_allocWithZone((Class)sub_100005574(&qword_10049B5D0));
  *(_QWORD *)&v9[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)(v29);

  v22 = (objc_class *)type metadata accessor for NoticePresenter.UIRootViewController();
  v28.receiver = v9;
  v28.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v28, "initWithNibName:bundle:", 0, 0);
  v24 = *(void **)&v23[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v25 = v23;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v6);
  objc_msgSend(v25, "addChildViewController:", v24);
  objc_msgSend(v24, "didMoveToParentViewController:", v25);

  sub_1000FF204(a2);
  return v25;
}

void _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void ***, __n128);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  id v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  char v72[24];
  char v73[24];
  void **aBlock;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  void *v77;
  void *v78;
  uint64_t v79;
  char v80[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchTime(0);
  v70 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v69 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v65 - v8;
  v67 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v68 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1)
  {
    v65 = v9;
    v66 = v6;
    v15 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v80, 0, 0);
    v16 = *(void (**)(void ***, __n128))v15;
    if (*(_QWORD *)v15)
    {
      v17 = *(_QWORD *)(v15 + 8);
      v18 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v73, 0, 0);
      sub_10029B4E8(v18, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      v19 = swift_retain(v17);
      v16(&aBlock, v19);
      sub_10003A5C8((uint64_t)v16, v17);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v72, 0, 0);
    sub_10029B4E8(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    sub_1000FF204((uint64_t)&aBlock);
    if (v21)
    {
      if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()), "initWithWindowScene:", v21);
        objc_msgSend(v22, "setWindowLevel:", UIWindowLevelStatusBar);
        sub_10029B4E8(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        v23 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        v24 = v22;
        swift_retain(v3);
        v26 = sub_10029AC6C(v25, (uint64_t)&aBlock);
        objc_msgSend(v24, "setRootViewController:", v26, swift_release(v3).n128_f64[0]);

        objc_msgSend(v24, "makeKeyAndVisible");
        objc_msgSend(v24, "resignKeyWindow");
        v27 = v24;
        sub_100298690(v24);

        v21 = v27;
      }

    }
    v28 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v28)
    {
      v28[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      objc_msgSend(v28, "makeKeyAndVisible");
    }
    v29 = objc_opt_self(UIView);
    sub_100082248(a1, (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    v30 = *(unsigned __int8 *)(v12 + 80);
    v31 = (v30 + 24) & ~v30;
    v32 = swift_allocObject(&unk_100460008, v31 + v13, v30 | 7);
    *(_QWORD *)(v32 + 16) = v3;
    sub_10029BCFC((uint64_t)v14, v32 + v31);
    v33 = swift_allocObject(&unk_100460030, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_10029BF04;
    *(_QWORD *)(v33 + 24) = v32;
    v78 = sub_1000B04E0;
    v79 = v33;
    aBlock = _NSConcreteStackBlock;
    v75 = 1107296256;
    v76 = sub_100009BD0;
    v77 = &unk_100460048;
    v34 = _Block_copy(&aBlock);
    v35 = v79;
    swift_retain(v3);
    swift_retain(v33);
    objc_msgSend((id)v29, "performWithoutAnimation:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v33, "", 129, 163, 40, 1, v36);
    swift_release(v33);
    if ((v29 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v37 = a1 + v11[9];
      if ((*(_BYTE *)(v37 + 8) & 1) == 0)
      {
        v38 = *(_QWORD *)v37;
        v39 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v39, "notificationOccurred:", v38);

      }
      if (*(_BYTE *)(a1 + v11[10]) == 1)
      {
        v78 = sub_10029BF44;
        v79 = v3;
        aBlock = _NSConcreteStackBlock;
        v75 = 1107296256;
        v76 = sub_1000BED80;
        v77 = &unk_100460070;
        v40 = _Block_copy(&aBlock);
        v71 = _swiftEmptyArrayStorage;
        v41 = sub_100006924((unint64_t *)&unk_10049B100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        swift_retain(v3);
        v42 = sub_100005574(&qword_100499718);
        v43 = sub_10002FFB8((unint64_t *)&qword_10049B110, &qword_100499718, (uint64_t)&protocol conformance descriptor for [A]);
        v44 = v68;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v71, v42, v43, v67, v41);
        v45 = type metadata accessor for DispatchWorkItem(0);
        swift_allocObject(v45, *(unsigned int *)(v45 + 48), *(unsigned __int16 *)(v45 + 52));
        v46 = DispatchWorkItem.init(flags:block:)(v44, v40);
        swift_release(v79);
        if (*(_QWORD *)(a1 + v11[8]))
          v47 = 3.0;
        else
          v47 = 1.5;
        v48 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
        v56 = (void *)static OS_dispatch_queue.main.getter(v48, v49, v50, v51, v52, v53, v54, v55);
        v57 = v69;
        static DispatchTime.now()(v56);
        v58 = v65;
        + infix(_:_:)(v57, v47);
        v59 = *(void (**)(char *, uint64_t))(v70 + 8);
        v60 = v57;
        v61 = v66;
        v59(v60, v66);
        OS_dispatch_queue.asyncAfter(deadline:execute:)(v58, v46);

        v59(v58, v61);
        v62 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v46;
        v63 = swift_retain_n(v46, 2);
        if (v62)
        {
          dispatch thunk of DispatchWorkItem.cancel()(v63);
          swift_release(v32);
          v64 = v62;
        }
        else
        {
          v64 = v32;
        }
        swift_release(v64);
        swift_release_n(v46, 2);
      }
      else
      {
        swift_release(v32);
      }
    }
  }
}

uint64_t sub_10029B4E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  __int128 v5;

  a3(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

uint64_t sub_10029B538(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  return a2;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController);
}

uint64_t type metadata accessor for NoticePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_10049B388;
  if (!qword_10049B388)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NoticePresenter);
  return result;
}

unint64_t sub_10029B5F4()
{
  unint64_t result;

  result = qword_10049B348;
  if (!qword_10049B348)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NoticePresentingModifier, &type metadata for NoticePresentingModifier);
    atomic_store(result, (unint64_t *)&qword_10049B348);
  }
  return result;
}

uint64_t sub_10029B638(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticePresentingModifier.body(content:)>>, 1);
}

uint64_t sub_10029B650()
{
  return type metadata accessor for NoticePresenter(0);
}

void sub_10029B658(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_10029B6E4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_100399390;
    v4[3] = &unk_1003993A8;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_10029B6E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049B398)
  {
    v2 = sub_100005600(&qword_10049B320);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049B398);
  }
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticePresentingModifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresentingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10029B948(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(a2 + 40);
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_10029B948(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_10029B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  double result;

  v3 = swift_unknownObjectWeakTakeAssign();
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = v4;
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow);
}

uint64_t sub_10029BA84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for NoticePresentingModifier);
  v2 = sub_100005600(&qword_10049B558);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_10029B5F4();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_10002FFB8(&qword_10049B560, &qword_10049B558, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_10029BB3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B568;
  if (!qword_10049B568)
  {
    v1 = sub_100005600(&qword_10049B358);
    sub_10002FFB8(&qword_10049B570, &qword_10049B350, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10002FFB8(&qword_10049B578, &qword_10049B580, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B568);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for NoticePresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentationView()
{
  return &type metadata for NoticePresentationView;
}

uint64_t sub_10029BCC4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E26B8, 1);
}

uint64_t sub_10029BCD4(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_10029BCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029BD4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_100299898(v1 + 32, a1);
}

uint64_t sub_10029BD5C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

_BYTE *sub_10029BD88(_BYTE *a1)
{
  uint64_t v1;

  return sub_10029999C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_10029BD94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10029BDB8()
{
  uint64_t v0;

  sub_10029A6D8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10029BDC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029BDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10029BDE0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10029BDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int EnumCaseMultiPayload;
  uint64_t v11;

  v1 = type metadata accessor for Notice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v6);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  if (*v8)
    swift_release(v8[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_10029BF04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notice(0) - 8) + 80);
  sub_100297FF8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10029BF34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10029BF44()
{
  NoticePresenter.dismiss(_:)(1);
}

unint64_t sub_10029BF50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B5D8;
  if (!qword_10049B5D8)
  {
    v1 = sub_100005600(&qword_10049B5E0);
    sub_10002FFB8(&qword_10049B5E8, (uint64_t *)&unk_10049F740, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B5D8);
  }
  return result;
}

uint64_t sub_10029C09C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  sub_10000ABC8(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_10029C11C;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[4], v2, v3);
}

uint64_t sub_10029C11C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_10029C168, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_10029C168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_release(*(_QWORD *)(v0 + 64));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_100236720(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 32), v7);
    PresentedViewState.present(_:animated:)(v5, 1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029C21C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10049B5F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000EA88;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_10029C26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47[24];

  v37 = a2;
  v40 = a1;
  v43 = a4;
  v5 = sub_100005574(&qword_10049B618);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100005574(&qword_10049B620);
  __chkstk_darwin();
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049B628);
  v39 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 96);
  swift_beginAccess(v18, v47, 0, 0);
  sub_10029C7C8(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100236720((uint64_t)v13);
    v19 = v38;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v20(v7, v40, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload(v9, v41, 1);
    v21 = sub_10002FFB8(&qword_10049B630, &qword_10049B618, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v44 = v5;
    v45 = v21;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v42, v5, OpaqueTypeConformance2, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v24 = sub_100005574(&qword_10049B5F8);
    v25 = sub_10002FFB8(&qword_10049B600, &qword_10049B5F8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v26 = ObservedObject.projectedValue.getter(v37, a3, v24, v25);
    KeyPath = swift_getKeyPath(&unk_100399568);
    ObservedObject.Wrapper.subscript.getter(&v44, KeyPath, v26, v25);
    swift_release(KeyPath);
    swift_release(v26);
    v28 = v44;
    v29 = v45;
    v30 = v46;
    v31 = sub_10002FFB8(&qword_10049B630, &qword_10049B618, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.sharingPicker(isPresented:item:subject:message:)(v28, v29, v30, v17, 0, 0, 0, 0, 0, 0, 0, 0, v5, v31);
    swift_release(v29);
    v32 = swift_release(v28);
    v33 = v39;
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t, __n128))(v39 + 16))(v9, v11, v42, v32);
    swift_storeEnumTagMultiPayload(v9, v41, 0);
    v44 = v5;
    v45 = v31;
    v35 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v34, v5, v35, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10029C654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10029C26C(a1, *v2, v2[1], a2);
}

double View.shareSheetPresenting(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _QWORD v12[2];

  swift_retain(a1);
  v6 = sub_100005574(&qword_10049B5F8);
  v7 = sub_10002FFB8(&qword_10049B600, &qword_10049B5F8, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v8 = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  v10 = v9;
  v12[0] = v8;
  v12[1] = v9;
  View.modifier<A>(_:)(v12, a2, &type metadata for ShareSheetModifier, a3);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_10029C710(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for ShareSheetModifier);
  sub_10029C764();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_10029C764()
{
  unint64_t result;

  result = qword_10049B610;
  if (!qword_10049B610)
  {
    result = swift_getWitnessTable(&unk_100399514, &type metadata for ShareSheetModifier);
    atomic_store(result, (unint64_t *)&qword_10049B610);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetModifier()
{
  return &type metadata for ShareSheetModifier;
}

uint64_t sub_10029C7B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E2758, 1);
}

uint64_t sub_10029C7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004991A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029C810@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10029C83C(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

unint64_t sub_10029C864()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049B638;
  if (!qword_10049B638)
  {
    v1 = sub_100005600(&qword_10049B640);
    v2[0] = sub_100005600(&qword_10049B618);
    v2[1] = sub_10002FFB8(&qword_10049B630, &qword_10049B618, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B638);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for Font.TextStyle.body(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_10029C958@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t sub_10029C96C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated conformance descriptor for MusicUIContentConfiguration.MusicUIContentConfiguration.View: MusicUIContentView);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v7, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2);
  a3[3] = AssociatedTypeWitness;
  a3[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentView, &associated conformance descriptor for MusicUIContentView.MusicUIContentView.Configuration: MusicUIContentConfiguration)+ 16);
  sub_1000207D4(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  __chkstk_darwin();
  v8 = &v12[-v7 - 8];
  sub_1000244B0((uint64_t)a1, (uint64_t)v12);
  v9 = sub_100005574(&qword_100499710);
  swift_dynamicCast(v8, v12, v9, AssociatedTypeWitness, 7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 48))(v8, a2, a3);
  return sub_10000682C(a1);
}

void (*MusicUIContentView.configuration.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return sub_10029CC60;
}

void sub_10029CC60(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[11];
    v4 = v2[10];
    sub_1000244B0(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter(v2 + 5, v4, v3);
    sub_10000682C(v2);
  }
  else
  {
    MusicUIContentView.configuration.setter((_QWORD *)*a1, v2[10], v2[11]);
  }
  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v17[2];

  v8 = type metadata accessor for ArtistRazzmatazzView(0);
  v9 = (_QWORD *)(a4 + *(int *)(v8 + 24));
  v16 = _swiftEmptyArrayStorage;
  v10 = sub_100005574(&qword_100499E80);
  State.init(wrappedValue:)(v17, &v16, v10);
  v11 = v17[1];
  *v9 = v17[0];
  v9[1] = v11;
  v17[0] = 0x4052C00000000000;
  v12 = sub_10029CE4C();
  ScaledMetric.init(wrappedValue:)(v17, &type metadata for CGFloat, v12);
  v13 = type metadata accessor for Artist(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, a1, v13);
  v15 = (_QWORD *)(a4 + *(int *)(v8 + 20));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049B6F0, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = sub_100005574(&qword_100499E80);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight(double a1)
{
  unint64_t v1;
  double v3;

  v3 = a1;
  v1 = sub_10029CE4C();
  return ScaledMetric.init(wrappedValue:)(&v3, &type metadata for CGFloat, v1);
}

unint64_t sub_10029CE4C()
{
  unint64_t result;

  result = qword_10049B658;
  if (!qword_10049B658)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10049B658);
  }
  return result;
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v42 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v39 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v36 = v3;
  v37 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049B660);
  __chkstk_darwin();
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for GridItem.Size(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100005574(&qword_10049B668);
  v11 = *(_QWORD *)(type metadata accessor for GridItem(0) - 8);
  v12 = swift_allocObject(v10, ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ 2 * *(_QWORD *)(v11 + 72), *(unsigned __int8 *)(v11 + 80) | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100384A60;
  v38 = v1;
  v13 = sub_100005574(&qword_10049B670);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v14 = enum case for GridItem.Size.fixed(_:);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 104);
  v15(v9, enum case for GridItem.Size.fixed(_:), v6);
  GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  ScaledMetric.wrappedValue.getter(&v43, v13);
  *v9 = v43;
  v15(v9, v14, v6);
  v16 = GridItem.init(_:spacing:alignment:)(v9, 0, 1, 0, 0, 1);
  v17 = static HorizontalAlignment.leading.getter(v16);
  if (qword_100498AC0 != -1)
    swift_once(&qword_100498AC0, sub_10029F788);
  v18 = qword_10049B650;
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v18;
  v5[16] = 0;
  v19 = sub_100005574(&qword_10049B678);
  v20 = v38;
  sub_10029D218(v12, v38, (uint64_t)&v5[*(int *)(v19 + 44)]);
  swift_bridgeObjectRelease();
  v21 = v37;
  sub_100082248(v20, v37, type metadata accessor for ArtistRazzmatazzView);
  v22 = *(unsigned __int8 *)(v35 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_100460280, v23 + v36, v22 | 7);
  v25 = sub_1000648AC(v21, v24 + v23, type metadata accessor for ArtistRazzmatazzView);
  v26 = v39;
  static TaskPriority.userInitiated.getter(v25);
  v27 = sub_100005574(&qword_10049B690);
  v28 = v41;
  v29 = (char *)(v41 + *(int *)(v27 + 36));
  v30 = type metadata accessor for _TaskModifier(0);
  v31 = v40;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v29[*(int *)(v30 + 20)], v26, v42);
  *(_QWORD *)v29 = &unk_10049B688;
  *((_QWORD *)v29 + 1) = v24;
  sub_100014A7C((uint64_t)v5, v28, &qword_10049B660);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v32);
  return sub_100008758((uint64_t)v5, &qword_10049B660);
}

uint64_t sub_10029D218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  double v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  char v91[16];
  uint64_t v92;
  uint64_t v93;
  _OWORD v94[5];
  uint64_t v95;
  char v96;

  *(_QWORD *)&v89 = a1;
  *(_QWORD *)&v79 = type metadata accessor for ScrollIndicatorVisibility(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100005574(&qword_10049B900);
  v75 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin();
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v84 = sub_100005574(&qword_10049B908);
  *(_QWORD *)&v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  *(_QWORD *)&v80 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100005574(&qword_10049B910);
  __chkstk_darwin();
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100005574(&qword_10049B918);
  __chkstk_darwin();
  v90 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v82 = (uint64_t)&v72 - v13;
  v14 = __chkstk_darwin();
  v88 = (uint64_t)&v72 - v15;
  v16 = static Font.title2.getter(v14);
  v17 = Text.font(_:)(v16, 0x6174616D7A7A6152, 0xEA00000000007A7ALL, 0, _swiftEmptyArrayStorage);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = swift_release(v16);
  v25 = static Font.Weight.semibold.getter(v24);
  v86 = Text.fontWeight(_:)(*(_QWORD *)&v25, 0, v17, v19, v21 & 1, v23);
  v85 = v26;
  v73 = v27;
  v87 = v28;
  sub_10003B4D0(v17, v19, v21 & 1);
  v29 = swift_bridgeObjectRelease();
  v74 = static Edge.Set.horizontal.getter(v29);
  v30 = static Axis.Set.horizontal.getter();
  v92 = v89;
  v93 = a2;
  *(_QWORD *)&v89 = a2;
  v31 = sub_100005574(&qword_10049B920);
  v32 = sub_100100628(&qword_10049B928, &qword_10049B920, (void (*)(void))sub_1002A0E10);
  v33 = ScrollView.init(_:showsIndicators:content:)(v30, 1, sub_1002A0E08, v91, v31, v32);
  v34 = static ScrollIndicatorVisibility.hidden.getter(v33);
  v35 = static Axis.Set.vertical.getter(v34);
  v36 = static Axis.Set.horizontal.getter();
  v37 = Axis.Set.init(rawValue:)(0);
  v38 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v38 & v35) != v35)
    v37 = Axis.Set.init(rawValue:)(v37 | v35);
  v39 = Axis.Set.init(rawValue:)(v37);
  if (Axis.Set.init(rawValue:)(v39 & v36) != v36)
    v37 = Axis.Set.init(rawValue:)(v37 | v36);
  v40 = v80;
  v41 = sub_10002FFB8(&qword_10049B950, &qword_10049B900, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v42 = v76;
  View.scrollIndicators(_:axes:)(v6, v37, v76, v41);
  (*(void (**)(char *, _QWORD))(v78 + 8))(v6, v79);
  v43 = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v8, v42);
  v44 = static Edge.Set.bottom.getter(v43);
  if (qword_100498AB8 != -1)
    swift_once(&qword_100498AB8, sub_10029F778);
  v45 = v73 & 1;
  v46 = EdgeInsets.init(_all:)(*(double *)&qword_10049B648);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v83;
  v54 = v84;
  (*(void (**)(char *, uint64_t, _QWORD))(v83 + 16))(v11, v40, v84);
  v55 = &v11[*(int *)(v77 + 36)];
  *v55 = v44;
  *((double *)v55 + 1) = v46;
  *((_QWORD *)v55 + 2) = v48;
  *((_QWORD *)v55 + 3) = v50;
  *((_QWORD *)v55 + 4) = v52;
  v55[40] = 0;
  v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v40, v54);
  v57 = static Alignment.center.getter(v56);
  v59 = v58;
  sub_10029DDE0(v89, (uint64_t)v94);
  v89 = v94[0];
  v84 = v94[1];
  v83 = v94[2];
  v80 = v94[3];
  v79 = v94[4];
  v60 = v95;
  v61 = v96;
  v62 = v82;
  sub_100014A7C((uint64_t)v11, v82, &qword_10049B910);
  v63 = v62 + *(int *)(v81 + 36);
  v64 = v84;
  *(_OWORD *)v63 = v89;
  *(_OWORD *)(v63 + 16) = v64;
  v65 = v80;
  *(_OWORD *)(v63 + 32) = v83;
  *(_OWORD *)(v63 + 48) = v65;
  *(_OWORD *)(v63 + 64) = v79;
  *(_QWORD *)(v63 + 80) = v60;
  *(_BYTE *)(v63 + 88) = v61;
  *(_QWORD *)(v63 + 96) = v57;
  *(_QWORD *)(v63 + 104) = v59;
  sub_100008758((uint64_t)v11, &qword_10049B910);
  v66 = v88;
  sub_1000149A8(v62, v88, &qword_10049B918);
  v67 = v90;
  sub_100014A7C(v66, v90, &qword_10049B918);
  v68 = v86;
  v69 = v85;
  *(_QWORD *)a3 = v86;
  *(_QWORD *)(a3 + 8) = v69;
  *(_BYTE *)(a3 + 16) = v45;
  *(_QWORD *)(a3 + 24) = v87;
  *(_BYTE *)(a3 + 32) = v74;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_BYTE *)(a3 + 72) = 1;
  v70 = sub_100005574(&qword_10049B958);
  sub_100014A7C(v67, a3 + *(int *)(v70 + 48), &qword_10049B918);
  sub_10003B4C0(v68, v69, v45);
  swift_bridgeObjectRetain();
  sub_100008758(v66, &qword_10049B918);
  sub_100008758(v67, &qword_10049B918);
  sub_10003B4D0(v68, v69, v45);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10029D89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];

  v33 = a2;
  v35 = a3;
  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100005574(&qword_10049B948);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100005574(&qword_10049B938);
  __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_bridgeObjectRetain();
  v12 = static VerticalAlignment.center.getter(v11);
  if (qword_100498AB8 != -1)
    swift_once(&qword_100498AB8, sub_10029F778);
  v13 = qword_10049B648;
  __chkstk_darwin();
  LODWORD(v36[0]) = 0;
  v14 = sub_100006924(&qword_10049B960, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v36, v4, v14);
  v15 = sub_100005574(&qword_10049B968);
  v16 = sub_1002A0EA4();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)(a1, v12, v13, 0, v6, sub_1002A0E9C, &v30 - 4, v15, v16);
  type metadata accessor for ArtistRazzmatazzView(0);
  v17 = sub_100005574(&qword_10049B670);
  v18 = ScaledMetric.wrappedValue.getter(v36, v17);
  v19 = (*(double *)v36 + *(double *)&qword_10049B648) * (double)*(uint64_t *)(a1 + 16);
  v20 = static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(v36, 0, 1, *(_QWORD *)&v19, 0, v20, v21);
  v22 = v32;
  v23 = v34;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v10, v8, v34);
  v24 = &v10[*(int *)(v31 + 36)];
  v25 = v36[1];
  *(_OWORD *)v24 = v36[0];
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v36[2];
  v26 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  LOBYTE(v23) = static Edge.Set.horizontal.getter(v26);
  v27 = v35;
  sub_100014A7C((uint64_t)v10, v35, &qword_10049B938);
  v28 = v27 + *(int *)(sub_100005574(&qword_10049B920) + 36);
  *(_BYTE *)v28 = v23;
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_BYTE *)(v28 + 40) = 1;
  return sub_100008758((uint64_t)v10, &qword_10049B938);
}

uint64_t sub_10029DB90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[3];

  v2 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = (uint64_t *)(a1 + *(int *)(__chkstk_darwin() + 24));
  v6 = *v4;
  v5 = v4[1];
  v19[1] = v6;
  v19[2] = v5;
  v7 = sub_100005574(&qword_10049B8F8);
  State.wrappedValue.getter(v19, v7);
  KeyPath = swift_getKeyPath(&unk_1003998B8);
  sub_100082248(a1, (uint64_t)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  v9 = *(unsigned __int8 *)(v2 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_1004602D0, v10 + v3, v9 | 7);
  sub_1000648AC((uint64_t)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for ArtistRazzmatazzView);
  v12 = sub_100005574(&qword_100499E80);
  v13 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v14 = sub_10002FFB8(&qword_10049B980, &qword_100499E80, (uint64_t)&protocol conformance descriptor for [A]);
  v15 = sub_100006924(&qword_10049B988, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v16 = sub_100006924(&qword_10049B978, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_100399720);
  return ForEach<>.init(_:id:content:)(v19, KeyPath, sub_1002A0FF0, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_10029DD38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  sub_100082248(a1, a3, type metadata accessor for Razzmatazz);
  v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  swift_retain(v6);
  v8 = sub_100005574(&qword_10049B670);
  ScaledMetric.wrappedValue.getter(&v12, v8);
  v9 = v12;
  result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v11 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v11 = v7;
  v11[1] = v6;
  *(_QWORD *)(a3 + *(int *)(result + 24)) = v9;
  return result;
}

uint64_t sub_10029DDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int64x2_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v25 = v5;
  v26 = v4;
  v6 = sub_100005574(&qword_10049B8F8);
  State.wrappedValue.getter(&v27, v6);
  v7 = *(_QWORD *)(v27 + 16);
  result = swift_bridgeObjectRelease();
  v9 = 0uLL;
  if (v7)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    v17 = swift_bridgeObjectRelease();
    HIDWORD(v25) = -805306368;
    v26 = 0x80000001003B9900;
    v18._countAndFlagsBits = Artist.name.getter(v17);
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 46;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    LODWORD(v25) = static HierarchicalShapeStyle.secondary.getter();
    v10 = Text.foregroundStyle<A>(_:)(&v25, 0xD000000000000016, 0x80000001003B9900, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v11 = v20;
    v22 = v21;
    v13 = v23;
    swift_bridgeObjectRelease();
    v12 = v22 & 1;
    KeyPath = swift_getKeyPath(&unk_100399880);
    result = static Edge.Set.horizontal.getter(KeyPath);
    v9 = 0uLL;
    v14 = result;
    v15 = 1;
    v16 = vdupq_n_s64(1uLL);
    v16.i64[0] = KeyPath;
  }
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(int64x2_t *)(a2 + 32) = v16;
  *(_QWORD *)(a2 + 48) = v14;
  *(_OWORD *)(a2 + 56) = v9;
  *(_OWORD *)(a2 + 72) = v9;
  *(_BYTE *)(a2 + 88) = v15;
  return result;
}

uint64_t sub_10029DF78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1[6] = a1;
  v3 = type metadata accessor for MainActor(0);
  v1[7] = v3;
  v1[8] = static MainActor.shared.getter(v3);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_10049BEB8 + dword_10049BEB8);
  v4 = (_QWORD *)swift_task_alloc(unk_10049BEBC);
  v1[9] = v4;
  *v4 = v1;
  v4[1] = sub_10029DFF8;
  return v6(a1);
}

uint64_t sub_10029DFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10029E070, v4, v5);
}

uint64_t sub_10029E070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 32) = v1;
  KeyPath = swift_getKeyPath(&unk_100399860);
  v4 = sub_100005574(&qword_100499E80);
  v5 = sub_10002FFB8((unint64_t *)&qword_10049B8E8, &qword_100499E80, (uint64_t)&protocol conformance descriptor for [A]);
  v6 = sub_100006924(&qword_10049B8F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_1002AB1F8, 0, v4, v5, v6);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v8 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v9;
  *(_QWORD *)(v0 + 40) = v7;
  v11 = sub_100005574(&qword_10049B8F8);
  State.wrappedValue.setter(v0 + 40, v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029E190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  id v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[3];

  v2 = v1;
  v45 = a1;
  sub_100005574(&qword_10049B7E8);
  __chkstk_darwin();
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049B7F0);
  __chkstk_darwin();
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049B7F8);
  __chkstk_darwin();
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049B800);
  v12 = __chkstk_darwin();
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498AB8 != -1)
    v12 = swift_once(&qword_100498AB8, sub_10029F778);
  v15 = qword_10049B648;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_100005574(&qword_10049B808);
  sub_10029E518(v2, (uint64_t)&v4[*(int *)(v16 + 44)]);
  if (qword_100498AC0 != -1)
    swift_once(&qword_100498AC0, sub_10029F788);
  v17 = *(double *)&qword_10049B650;
  v18 = static Edge.Set.all.getter();
  v19 = EdgeInsets.init(_all:)(v17);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_100014A7C((uint64_t)v4, (uint64_t)v7, &qword_10049B7E8);
  v26 = &v7[*(int *)(v5 + 36)];
  *v26 = v18;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  sub_100008758((uint64_t)v4, &qword_10049B7E8);
  v27 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v28 = *(double *)(v2 + *(int *)(v27 + 24)) * 4.0;
  v29 = *(_QWORD *)(v2 + *(int *)(v27 + 24));
  v30 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v46, *(_QWORD *)&v28, 0, v29, 0, v30, v31);
  sub_100014A7C((uint64_t)v7, (uint64_t)v10, &qword_10049B7F0);
  v32 = &v10[*(int *)(v8 + 36)];
  v33 = v46[1];
  *(_OWORD *)v32 = v46[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v46[2];
  sub_100008758((uint64_t)v7, &qword_10049B7F0);
  v34 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v35 = Color.init(_:)(v34);
  v36 = static Edge.Set.all.getter();
  sub_100014A7C((uint64_t)v10, (uint64_t)v14, &qword_10049B7F8);
  v37 = &v14[*(int *)(v11 + 36)];
  *(_QWORD *)v37 = v35;
  v37[8] = v36;
  sub_100008758((uint64_t)v10, &qword_10049B7F8);
  if (qword_100498A90 != -1)
    swift_once(&qword_100498A90, sub_100296488);
  v38 = static Corner.large;
  v39 = unk_1004A3D30;
  v40 = byte_1004A3D38;
  v41 = v45;
  sub_100014A7C((uint64_t)v14, v45, &qword_10049B800);
  v42 = v41 + *(int *)(sub_100005574(&qword_10049B810) + 36);
  *(_QWORD *)v42 = v38;
  *(_QWORD *)(v42 + 8) = v39;
  *(_BYTE *)(v42 + 16) = v40;
  return sub_100008758((uint64_t)v14, &qword_10049B800);
}

uint64_t sub_10029E518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[3];

  v70 = a2;
  v3 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v60 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v61 = v4;
  v63 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049B818);
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  __chkstk_darwin();
  v66 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100005574(&qword_10049B820);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v69 = (uint64_t)&v60 - v9;
  sub_100005574(&qword_10049B828);
  __chkstk_darwin();
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049B830);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10049B838);
  __chkstk_darwin();
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10049B840);
  __chkstk_darwin();
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin();
  v62 = (uint64_t)&v60 - v22;
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v21);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v23 = sub_100005574(&qword_10049B848);
  v24 = sub_10029EAE0(a1, (uint64_t)&v11[*(int *)(v23 + 44)]);
  v25 = *(int *)(v3 + 24);
  v64 = a1;
  v26 = *(double *)(a1 + v25);
  if (qword_100498AC0 != -1)
    v24 = swift_once(&qword_100498AC0, sub_10029F788);
  v27 = v26 - (*(double *)&qword_10049B650 + *(double *)&qword_10049B650);
  v28 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v71, *(_QWORD *)&v27, 0, *(_QWORD *)&v27, 0, v28, v29);
  sub_100014A7C((uint64_t)v11, (uint64_t)v14, &qword_10049B828);
  v30 = &v14[*(int *)(v12 + 36)];
  v31 = v71[1];
  *(_OWORD *)v30 = v71[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v71[2];
  sub_100008758((uint64_t)v11, &qword_10049B828);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v33 = Color.init(_:)(v32);
  v34 = static Edge.Set.all.getter();
  sub_100014A7C((uint64_t)v14, (uint64_t)v17, &qword_10049B830);
  v35 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v35 = v33;
  v35[8] = v34;
  sub_100008758((uint64_t)v14, &qword_10049B830);
  if (qword_100498A88 != -1)
    swift_once(&qword_100498A88, sub_10029639C);
  v36 = static Corner.medium;
  v37 = *(_QWORD *)algn_1004A3D18;
  v38 = byte_1004A3D20;
  sub_100014A7C((uint64_t)v17, (uint64_t)v20, &qword_10049B838);
  v39 = &v20[*(int *)(v18 + 36)];
  *(_QWORD *)v39 = v36;
  *((_QWORD *)v39 + 1) = v37;
  v39[16] = v38;
  sub_100008758((uint64_t)v17, &qword_10049B838);
  v40 = v62;
  sub_1000149A8((uint64_t)v20, v62, &qword_10049B840);
  v41 = v63;
  v42 = v64;
  sub_100082248(v64, v63, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  v43 = *(unsigned __int8 *)(v60 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_1004602A8, v44 + v61, v43 | 7);
  sub_1000648AC(v41, v45 + v44, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v60 - 2) = v42;
  v46 = sub_100005574(&qword_10049B850);
  v47 = sub_1002A0C3C();
  v48 = v66;
  Button.init(action:label:)(sub_1002A0BEC, v45, sub_1002A0C34, &v60 - 4, v46, v47);
  v50 = static Color.primary.getter(v49);
  KeyPath = swift_getKeyPath(&unk_100399770);
  v53 = v67;
  v52 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v8, v48, v68);
  v54 = (uint64_t *)&v8[*(int *)(v65 + 36)];
  *v54 = KeyPath;
  v54[1] = v50;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v48, v52);
  v55 = v69;
  sub_1000149A8((uint64_t)v8, v69, &qword_10049B820);
  sub_100014A7C(v40, (uint64_t)v20, &qword_10049B840);
  sub_100014A7C(v55, (uint64_t)v8, &qword_10049B820);
  v56 = v70;
  sub_100014A7C((uint64_t)v20, v70, &qword_10049B840);
  v57 = sub_100005574(&qword_10049B880);
  sub_100014A7C((uint64_t)v8, v56 + *(int *)(v57 + 48), &qword_10049B820);
  v58 = v56 + *(int *)(v57 + 64);
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  sub_100008758(v55, &qword_10049B820);
  sub_100008758(v40, &qword_10049B840);
  sub_100008758((uint64_t)v8, &qword_10049B820);
  return sub_100008758((uint64_t)v20, &qword_10049B840);
}

uint64_t sub_10029EAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  __n128 v51;
  double v52;
  unint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *);
  uint64_t (*v108)(char *);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v119 = a2;
  v3 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v117 = *(_QWORD *)(v3 - 8);
  v118 = v3;
  __chkstk_darwin();
  v116 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100005574(&qword_10049B888);
  __chkstk_darwin();
  v113 = (uint64_t *)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v104 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Date.FormatStyle.Symbol.Month(0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for TimeZone(0);
  v9 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin();
  v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Date.FormatStyle(0);
  v101 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v120 = (char *)&v94 - v14;
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100005574(&qword_10049B898);
  __chkstk_darwin();
  v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_100005574(&qword_10049B8A0);
  __chkstk_darwin();
  v97 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100005574(&qword_10049B8A8);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin();
  v99 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100005574(&qword_10049B8B0);
  __chkstk_darwin();
  v122 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v110 = (uint64_t)&v94 - v24;
  v25 = type metadata accessor for Razzmatazz(0);
  v26 = a1 + *(int *)(v25 + 24);
  v108 = *(uint64_t (**)(char *))(v16 + 16);
  v109 = v26;
  v95 = v15;
  v27 = v108(v18);
  static ParseableFormatStyle<>.dateTime.getter(v27);
  v28 = a1 + *(int *)(v25 + 32);
  v106 = v28 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v107 = *(void (**)(char *))(v9 + 16);
  v105 = v11;
  v107(v11);
  v29 = Date.FormatStyle.timeZone.setter(v11);
  static Date.FormatStyle.Symbol.Month.abbreviated.getter(v29);
  v30 = v120;
  Date.FormatStyle.month(_:)(v8);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v8, v103);
  v31 = *(void (**)(char *, uint64_t))(v101 + 8);
  v32 = v121;
  v31(v13, v121);
  v98 = v31;
  v103 = sub_100006924(&qword_10049B8B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  v94 = v18;
  Date.formatted<A>(_:)(&v126, v30, v32, v103);
  v31(v30, v32);
  v102 = *(_QWORD *)(v16 + 8);
  ((void (*)(char *, uint64_t))v102)(v18, v15);
  v124 = v126;
  v125 = v127;
  v101 = sub_10024AF7C();
  v33 = Text.init<A>(_:)(&v124, &type metadata for String, v101);
  v35 = v34;
  v37 = v36;
  LOBYTE(v15) = v38 & 1;
  v39 = enum case for Text.Case.uppercase(_:);
  v40 = type metadata accessor for Text.Case(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 104))(v104, v39, v40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
  KeyPath = swift_getKeyPath(&unk_1003997D0);
  v44 = v113;
  sub_100014A7C(v42, (uint64_t)v113 + *(int *)(v115 + 28), &qword_10049B890);
  *v44 = KeyPath;
  sub_100014A7C((uint64_t)v44, (uint64_t)&v20[*(int *)(v96 + 36)], &qword_10049B888);
  *(_QWORD *)v20 = v33;
  *((_QWORD *)v20 + 1) = v35;
  v20[16] = v15;
  *((_QWORD *)v20 + 3) = v37;
  sub_10003B4C0(v33, v35, v15);
  swift_bridgeObjectRetain();
  sub_100008758((uint64_t)v44, &qword_10049B888);
  sub_100008758(v42, &qword_10049B890);
  sub_10003B4D0(v33, v35, v15);
  v45 = swift_bridgeObjectRelease();
  v46 = static Font.caption.getter(v45);
  v47 = swift_getKeyPath(&unk_100399800);
  v48 = v97;
  sub_100014A7C((uint64_t)v20, v97, &qword_10049B898);
  v49 = v100;
  v50 = (uint64_t *)(v48 + *(int *)(v100 + 36));
  *v50 = v47;
  v50[1] = v46;
  sub_100008758((uint64_t)v20, &qword_10049B898);
  v52 = static Font.Weight.semibold.getter(v51);
  v53 = sub_1002A0CF8();
  v54 = v99;
  View.fontWeight(_:)(*(_QWORD *)&v52, 0, v49, v53);
  sub_100008758(v48, &qword_10049B8A0);
  v55 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v56 = Color.init(_:)(v55);
  v57 = swift_getKeyPath(&unk_100399830);
  v58 = v112;
  v59 = v122;
  v60 = v54;
  v61 = v54;
  v62 = v114;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v122, v60, v114);
  v63 = (uint64_t *)(v59 + *(int *)(v111 + 36));
  *v63 = v57;
  v63[1] = v56;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v62);
  v64 = v59;
  v65 = v110;
  sub_1000149A8(v64, v110, &qword_10049B8B0);
  v66 = v94;
  v67 = v95;
  v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v108)(v94, v109, v95);
  static ParseableFormatStyle<>.dateTime.getter(v68);
  v69 = v105;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v105, v106, v123);
  v70 = Date.FormatStyle.timeZone.setter(v69);
  v71 = v116;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v70);
  v72 = v120;
  Date.FormatStyle.day(_:)(v71);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v71, v118);
  v73 = v13;
  v74 = v121;
  v75 = v98;
  v98(v73, v121);
  Date.formatted<A>(_:)(&v126, v72, v74, v103);
  v75(v72, v74);
  ((void (*)(char *, uint64_t))v102)(v66, v67);
  v124 = v126;
  v125 = v127;
  v76 = Text.init<A>(_:)(&v124, &type metadata for String, v101);
  v78 = v77;
  v80 = v79;
  v82 = v81 & 1;
  v83 = static Font.title3.getter();
  v84 = Text.font(_:)(v83, v76, v78, v82, v80);
  v86 = v85;
  LOBYTE(v39) = v87;
  v89 = v88;
  swift_release(v83);
  sub_10003B4D0(v76, v78, v82);
  swift_bridgeObjectRelease();
  v90 = v122;
  sub_100014A7C(v65, v122, &qword_10049B8B0);
  v91 = v119;
  sub_100014A7C(v90, v119, &qword_10049B8B0);
  v92 = v91 + *(int *)(sub_100005574(&qword_10049B8E0) + 48);
  *(_QWORD *)v92 = v84;
  *(_QWORD *)(v92 + 8) = v86;
  *(_BYTE *)(v92 + 16) = v39 & 1;
  *(_QWORD *)(v92 + 24) = v89;
  sub_10003B4C0(v84, v86, v39 & 1);
  swift_bridgeObjectRetain();
  sub_100008758(v65, &qword_10049B8B0);
  sub_10003B4D0(v84, v86, v39 & 1);
  swift_bridgeObjectRelease();
  return sub_100008758(v90, &qword_10049B8B0);
}

__n128 sub_10029F3C8@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t KeyPath;
  __n128 result;
  __n128 v13;
  _QWORD v14[2];
  unsigned __int8 v15;
  __n128 v16;
  unint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_10029F478(a1, (uint64_t)v14);
  v5 = v14[0];
  v6 = v14[1];
  v7 = v15;
  v13 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  KeyPath = swift_getKeyPath(&unk_1003997A0);
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

uint64_t sub_10029F478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;

  v57 = Razzmatazz.shortName.getter();
  v58 = v3;
  v4 = sub_10024AF7C();
  v5 = Text.init<A>(_:)(&v57, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v13 = static Font.Weight.semibold.getter(v12);
  v14 = Text.fontWeight(_:)(*(_QWORD *)&v13, 0, v5, v7, v11, v9);
  v53 = v15;
  v54 = v14;
  v17 = v16;
  v55 = v18;
  sub_10003B4D0(v5, v7, v11);
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  v21 = v19[6];
  v20 = v19[7];
  v22 = v19[9];
  if (!v22)
    goto LABEL_5;
  v23 = v19[8];
  swift_bridgeObjectRetain();
  if (String.count.getter(v23, v22) != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v24 = sub_100005574(&qword_100499F90);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100384A60;
  *(_QWORD *)(v25 + 32) = v21;
  *(_QWORD *)(v25 + 40) = v20;
  *(_QWORD *)(v25 + 48) = v23;
  *(_QWORD *)(v25 + 56) = v22;
  v57 = v25;
  swift_bridgeObjectRetain();
  v26 = sub_100005574(&qword_10049AC08);
  v27 = sub_10002FFB8((unint64_t *)&qword_10049AC10, &qword_10049AC08, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v26, v27);
  v20 = v28;
  swift_bridgeObjectRelease();
LABEL_6:
  v29 = v17 & 1;
  v57 = v21;
  v58 = v20;
  v30 = Text.init<A>(_:)(&v57, &type metadata for String, v4);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  LODWORD(v57) = static HierarchicalShapeStyle.secondary.getter();
  v37 = Text.foregroundStyle<A>(_:)(&v57, v30, v32, v36, v34, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  sub_10003B4D0(v30, v32, v36);
  v44 = swift_bridgeObjectRelease();
  v45 = static Font.subheadline.getter(v44);
  v46 = Text.font(_:)(v45, v37, v39, v43, v41);
  v48 = v47;
  LOBYTE(v36) = v49;
  v51 = v50;
  swift_release(v45);
  sub_10003B4D0(v37, v39, v43);
  swift_bridgeObjectRelease();
  LOBYTE(v57) = v29;
  *(_QWORD *)a2 = v54;
  *(_QWORD *)(a2 + 8) = v53;
  *(_BYTE *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v55;
  *(_QWORD *)(a2 + 32) = v46;
  *(_QWORD *)(a2 + 40) = v48;
  *(_BYTE *)(a2 + 48) = v36 & 1;
  *(_QWORD *)(a2 + 56) = v51;
  sub_10003B4C0(v54, v53, v29);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v46, v48, v36 & 1);
  swift_bridgeObjectRetain();
  sub_10003B4D0(v46, v48, v36 & 1);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v54, v53, v57);
  return swift_bridgeObjectRelease();
}

void sub_10029F778()
{
  qword_10049B648 = 0x4020000000000000;
}

void sub_10029F788()
{
  qword_10049B650 = 0x4028000000000000;
}

uint64_t sub_10029F79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_10049B684);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  return sub_10029DF78(v3);
}

uint64_t sub_10029F800(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtistRazzmatazzView.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v20);
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_retain(v12);
    swift_bridgeObjectRetain();
    swift_retain(v15);
    v19 = sub_100005574(&qword_10049B670);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  v5 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v5 + 8));
  v6 = a1 + a2[7];
  v7 = sub_100005574(&qword_10049B670);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_retain(v11);
  swift_bridgeObjectRetain();
  swift_retain(v14);
  v18 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 8) = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_release(v12);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029FCA0);
}

uint64_t sub_10029FCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_100005574(&qword_10049B670);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029FD58);
}

uint64_t sub_10029FD58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_100005574(&qword_10049B670);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_10029FE00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_1003996F8;
    sub_10029FE9C(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_10029FE9C(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049B700)
  {
    v2 = sub_10029CE4C();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049B700);
  }
}

unint64_t sub_10029FEF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B738;
  if (!qword_10049B738)
  {
    v1 = sub_100005600(&qword_10049B690);
    sub_10002FFB8(&qword_10049B740, &qword_10049B660, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100006924(&qword_10049B748, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B738);
  }
  return result;
}

uint64_t *sub_10029FF94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v37;
  char *v38;
  void *v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v37 = &v20[v27];
    v38 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v39;
    v29(v38, v37, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = (uint64_t *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
  }
  swift_retain(v35);
  return v4;
}

double sub_1002A0170(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_1002A0274(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_retain(v34);
  return a1;
}

_QWORD *sub_1002A0428(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  v29 = v26[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  swift_release(v29);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1002A0648(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  return a1;
}

_QWORD *sub_1002A0760(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31 + 8);
  *(_OWORD *)((char *)a1 + v31) = *(_OWORD *)((char *)a2 + v31);
  swift_release(v32);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1002A08F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A08FC);
}

uint64_t sub_1002A08FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1002A0978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A0984);
}

uint64_t sub_1002A0984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049B7A8, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView.RazzmatazzCell);
}

uint64_t sub_1002A0A10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002A0A94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E291C, 1);
}

uint64_t sub_1002A0AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v7 + v8[6];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[7];
  v12 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v7 + v8[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = v13 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002A0BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

double sub_1002A0C34@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_10029F3C8(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1002A0C3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B858;
  if (!qword_10049B858)
  {
    v1 = sub_100005600(&qword_10049B850);
    sub_10002FFB8(&qword_10049B860, &qword_10049B868, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10002FFB8((unint64_t *)&qword_10049B870, &qword_10049B878, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B858);
  }
  return result;
}

unint64_t sub_1002A0CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B8C0;
  if (!qword_10049B8C0)
  {
    v1 = sub_100005600(&qword_10049B8A0);
    sub_1002A0D7C();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B8C0);
  }
  return result;
}

unint64_t sub_1002A0D7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B8C8;
  if (!qword_10049B8C8)
  {
    v1 = sub_100005600(&qword_10049B898);
    sub_10002FFB8(&qword_10049B8D0, &qword_10049B888, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B8C8);
  }
  return result;
}

uint64_t sub_1002A0E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10029D89C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1002A0E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B930;
  if (!qword_10049B930)
  {
    v1 = sub_100005600(&qword_10049B938);
    sub_10002FFB8(&qword_10049B940, &qword_10049B948, (uint64_t)&protocol conformance descriptor for LazyHGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B930);
  }
  return result;
}

uint64_t sub_1002A0E9C()
{
  uint64_t v0;

  return sub_10029DB90(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1002A0EA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B970;
  if (!qword_10049B970)
  {
    v1 = sub_100005600(&qword_10049B968);
    sub_100006924(&qword_10049B978, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_100399720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B970);
  }
  return result;
}

uint64_t sub_1002A0F24()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for ArtistRazzmatazzView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release(*(_QWORD *)(v7 + v1[5] + 8));
  v9 = v7 + v1[6];
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v9 + 8));
  v10 = v7 + v1[7];
  v11 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002A0FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  return sub_10029DD38(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1002A1040()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B990;
  if (!qword_10049B990)
  {
    v1 = sub_100005600(&qword_10049B810);
    sub_1002A10AC();
    sub_100296B98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B990);
  }
  return result;
}

unint64_t sub_1002A10AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B998;
  if (!qword_10049B998)
  {
    v1 = sub_100005600(&qword_10049B800);
    sub_100100628(&qword_10049B9A0, &qword_10049B7F8, (void (*)(void))sub_1002A1150);
    sub_10002FFB8((unint64_t *)&unk_10049F510, &qword_10049ECE0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B998);
  }
  return result;
}

unint64_t sub_1002A1150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B9A8;
  if (!qword_10049B9A8)
  {
    v1 = sub_100005600(&qword_10049B7F0);
    sub_10002FFB8(&qword_10049B9B0, &qword_10049B7E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B9A8);
  }
  return result;
}

id sub_1002A11D4()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CitySearchController(0)), "init");
}

uint64_t sub_1002A11F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  char v30[16];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;

  v28 = a1;
  v29 = type metadata accessor for SearchFieldPlacement(0);
  v2 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049BAB8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v1;
  v9 = sub_100005574(&qword_10049BAC0);
  v10 = sub_100005600(&qword_10049BAC8);
  v11 = sub_1002A3414();
  v12 = sub_10024AF7C();
  v32 = v10;
  v33 = &type metadata for String;
  v34 = v11;
  v35 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  NavigationStack.init<>(root:)(sub_1002A340C, v30, v9, OpaqueTypeConformance2);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(unsigned __int8 *)(v1 + 32);
  v17 = type metadata accessor for CitySearchController(0);
  v18 = sub_100006924(&qword_10049BAF8, type metadata accessor for CitySearchController, (uint64_t)&unk_100399948);
  v19 = (void *)StateObject.projectedValue.getter(v14, v15, v16, v17, v18);
  KeyPath = swift_getKeyPath(&unk_1003999D0);
  ObservedObject.Wrapper.subscript.getter(&v32, KeyPath, v19, v18);
  swift_release(KeyPath);

  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  static SearchFieldPlacement.navigationBarDrawer.getter();
  v25 = sub_10002FFB8(&qword_10049BB00, &qword_10049BAB8, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.searchable(text:placement:prompt:)(v21, v22, v23, v24, v4, 2037672259, 0xE400000000000000, 0, _swiftEmptyArrayStorage, v5, v25);
  swift_bridgeObjectRelease();
  swift_release(v22);
  v26 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v29, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002A1448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v33[2];
  char v34[16];
  _QWORD *v35;
  uint64_t v36;
  uint64_t (*v37)@<X0>(void **@<X0>, uint64_t@<X8>);
  uint64_t v38;
  _QWORD v39[2];

  v33[1] = a2;
  v3 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049BAC8);
  __chkstk_darwin();
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  v12 = type metadata accessor for CitySearchController(0);
  v13 = sub_100006924(&qword_10049BAF8, type metadata accessor for CitySearchController, (uint64_t)&unk_100399948);
  v14 = (void *)StateObject.wrappedValue.getter(v9, v10, v11, v12, v13);
  KeyPath = swift_getKeyPath(&unk_100399A18);
  v16 = swift_getKeyPath(&unk_100399A40);
  static Published.subscript.getter(v39, v14, KeyPath);

  swift_release(KeyPath);
  swift_release(v16);
  v17 = v39[0];
  v18 = swift_getKeyPath(&unk_100399A68);
  sub_1002A34F8(a1, (uint64_t)v5);
  v19 = *(unsigned __int8 *)(v3 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100460360, v20 + v4, v19 | 7);
  sub_1002A35F8((uint64_t)v5, v21 + v20);
  v38 = v21;
  v39[0] = v17;
  v35 = v39;
  v36 = v18;
  v37 = sub_1002A363C;
  v22 = sub_100005574(&qword_10049BB08);
  v23 = sub_1002A397C();
  List<>.init(content:)(sub_1002A3970, v34, v22, v23);
  swift_release(v18);
  swift_release(v21);
  v24 = swift_bridgeObjectRelease();
  v25 = static Alignment.center.getter(v24);
  v27 = v26;
  v28 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_1002A2004(a1, v28);
  v29 = (uint64_t *)(v28 + *(int *)(sub_100005574(&qword_10049BAF0) + 36));
  *v29 = v25;
  v29[1] = v27;
  v39[0] = 0x686372616553;
  v39[1] = 0xE600000000000000;
  v30 = sub_1002A3414();
  v31 = sub_10024AF7C();
  View.navigationTitle<A>(_:)(v39, v6, &type metadata for String, v30, v31);
  return sub_100008758((uint64_t)v8, &qword_10049BAC8);
}

uint64_t sub_1002A16D0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100399A18);
  v2 = swift_getKeyPath(&unk_100399A40);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1002A1740@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;

  v5 = *a1;
  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = sub_100005574(&qword_10049BB48);
  return sub_1002A1798(v5, a2, (_QWORD *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_1002A1798@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _OWORD v117[3];

  v96 = a3;
  v100 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v5 = *(_QWORD *)(v100 + 64);
  __chkstk_darwin();
  v101 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100005574((uint64_t *)&unk_10049DB50);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v103 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_100005574(&qword_10049BB50);
  __chkstk_darwin();
  v107 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v106 = (uint64_t)&v93 - v8;
  v9 = objc_msgSend(a1, "title");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  *(_QWORD *)&v117[0] = v10;
  *((_QWORD *)&v117[0] + 1) = v12;
  v13 = sub_10024AF7C();
  v14 = Text.init<A>(_:)(v117, &type metadata for String, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  LODWORD(v117[0]) = static HierarchicalShapeStyle.primary.getter(v14);
  v112 = Text.foregroundStyle<A>(_:)(v117, v14, v16, v20, v18, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v115 = v21;
  v116 = v22;
  v24 = v23;
  sub_10003B4D0(v14, v16, v20);
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, "subtitle");
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  swift_bridgeObjectRelease();
  v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v29 = v26 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    v30 = objc_msgSend(a1, "subtitle");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    *(_QWORD *)&v117[0] = v31;
    *((_QWORD *)&v117[0] + 1) = v33;
    v34 = Text.init<A>(_:)(v117, &type metadata for String, v13);
    v36 = v35;
    v38 = v37;
    v40 = v39 & 1;
    LODWORD(v117[0]) = static HierarchicalShapeStyle.secondary.getter();
    v41 = Text.foregroundStyle<A>(_:)(v117, v34, v36, v40, v38, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v93 = a1;
    v42 = v41;
    v43 = v13;
    v45 = v44;
    v95 = v5;
    v94 = a2;
    v47 = v46;
    v48 = v24;
    v50 = v49 & 1;
    sub_10003B4D0(v34, v36, v40);
    v51 = swift_bridgeObjectRelease();
    v52 = static Font.subheadline.getter(v51);
    v111 = Text.font(_:)(v52, v42, v45, v50, v47);
    v114 = v53;
    LOBYTE(v36) = v54;
    v99 = v55;
    swift_release(v52);
    v98 = v36 & 1;
    v56 = v45;
    v13 = v43;
    v57 = v50;
    v24 = v48;
    sub_10003B4D0(v42, v56, v57);
    a2 = v94;
    v5 = v95;
    v58 = swift_bridgeObjectRelease();
    LOBYTE(v42) = static Edge.Set.top.getter(v58);
    v59 = EdgeInsets.init(_all:)(2.0);
    v109 = v60;
    v110 = v59;
    v108 = v61;
    v97 = v62;
    v113 = v42;
    a1 = v93;
  }
  else
  {
    v111 = 0;
    v114 = 0;
    v98 = 0;
    v99 = 0;
    v113 = 0;
    v109 = 0;
    v110 = 0.0;
    v108 = 0;
    v97 = 0;
  }
  v63 = v24 & 1;
  *(_QWORD *)&v117[0] = 0;
  *((_QWORD *)&v117[0] + 1) = 0xE000000000000000;
  v64 = v101;
  sub_1002A34F8(a2, v101);
  v65 = *(unsigned __int8 *)(v100 + 80);
  v66 = (v65 + 16) & ~v65;
  v67 = (v5 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  v68 = swift_allocObject(&unk_1004603B0, v67 + 8, v65 | 7);
  sub_1002A35F8(v64, v68 + v66);
  *(_QWORD *)(v68 + v67) = a1;
  v69 = a1;
  v70 = v103;
  v71 = Button<>.init<A>(_:action:)(v117, sub_1002A3B64, v68, &type metadata for String, v13);
  v72 = static Alignment.center.getter(v71);
  _FrameLayout.init(width:height:alignment:)(v117, 0, 1, 0, 0, v72, v73);
  v74 = v104;
  v75 = (uint64_t)v107;
  v76 = v105;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v107, v70, v105);
  v77 = (_OWORD *)(v75 + *(int *)(v102 + 36));
  v78 = v117[1];
  *v77 = v117[0];
  v77[1] = v78;
  v77[2] = v117[2];
  (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v76);
  v79 = v106;
  sub_1002A3BA4(v75, v106);
  sub_1002A3BEC(v79, v75);
  v80 = v112;
  v81 = v96;
  v82 = v115;
  *v96 = v112;
  v81[1] = v82;
  LODWORD(v95) = v24 & 1;
  *((_BYTE *)v81 + 16) = v24 & 1;
  v83 = v111;
  v81[3] = v116;
  v81[4] = v83;
  v84 = v113;
  v85 = v114;
  v86 = v98;
  v81[5] = v114;
  v81[6] = v86;
  v87 = v99;
  v81[7] = v99;
  v81[8] = v84;
  v113 = v84;
  v88 = v109;
  *((double *)v81 + 9) = v110;
  v81[10] = v88;
  v89 = v97;
  v81[11] = v108;
  v81[12] = v89;
  *((_BYTE *)v81 + 104) = 0;
  v90 = sub_100005574(&qword_10049BB58);
  sub_1002A3BEC(v75, (uint64_t)v81 + *(int *)(v90 + 64));
  sub_10003B4C0(v80, v115, v63);
  swift_bridgeObjectRetain();
  v91 = v111;
  sub_1002A3C34(v111, v85, v86, v87);
  sub_100008758(v79, &qword_10049BB50);
  sub_100008758(v75, &qword_10049BB50);
  sub_1002A3C64(v91, v114, v86, v87);
  sub_10003B4D0(v112, v115, v95);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002A1DF0(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v25[1] = a1;
  v4 = type metadata accessor for DismissAction(0);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  __chkstk_darwin();
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = objc_msgSend(a2, "title", swift_retain(v7).n128_f64[0]);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a2, "subtitle");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  objc_msgSend(a2, "coordinate");
  v17 = v16;
  objc_msgSend(a2, "coordinate");
  v19 = v18;
  KeyPath = swift_getKeyPath(&unk_100399A80);
  v21 = swift_getKeyPath(&unk_100399AA8);
  static Published.subscript.getter(&v28, v7, KeyPath);
  swift_release(KeyPath);
  swift_release(v21);
  v31 = v28;
  v32 = v29;
  v33 = v30;
  v22 = swift_getKeyPath(&unk_100399A80);
  v23 = swift_getKeyPath(&unk_100399AA8);
  *(_QWORD *)&v28 = v9;
  *((_QWORD *)&v28 + 1) = v11;
  *(_QWORD *)&v29 = v13;
  *((_QWORD *)&v29 + 1) = v15;
  *(_QWORD *)&v30 = v17;
  *((_QWORD *)&v30 + 1) = v19;
  swift_retain(v7);
  static Published.subscript.setter(&v28, v7, v22, v23);
  sub_1002A7638((uint64_t)&v31);
  v34 = v31;
  sub_100052668((uint64_t)&v34);
  v28 = v32;
  sub_100052668((uint64_t)&v28);
  swift_release(v7);
  type metadata accessor for CitySelectionView(0);
  sub_1002BDE04((uint64_t)v6);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v6, v27);
}

uint64_t sub_1002A2004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for CitySearchController(0);
  v7 = sub_100006924(&qword_10049BAF8, type metadata accessor for CitySearchController, (uint64_t)&unk_100399948);
  v8 = (void *)StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_100399A18);
  v10 = swift_getKeyPath(&unk_100399A40);
  static Published.subscript.getter(&v17, v8, KeyPath);

  swift_release(KeyPath);
  swift_release(v10);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v16 = v17;
    else
      v16 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = swift_bridgeObjectRelease();
  if (v11)
  {
    v13 = sub_100005574(&qword_10049BB28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    static ContentUnavailableView<>.search.getter(v12);
    v15 = sub_100005574(&qword_10049BB28);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 0, 1, v15);
  }
}

uint64_t sub_1002A216C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003999D0);
  v2 = swift_getKeyPath(&unk_1003999F8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1002A21DC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003999D0);
  v5 = swift_getKeyPath(&unk_1003999F8);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

void sub_1002A2258(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_1003999D0);
  v6 = swift_getKeyPath(&unk_1003999F8);
  v13 = a1;
  v14 = a2;
  v7 = v2;
  static Published.subscript.setter(&v13, v7, KeyPath, v6);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v9 = swift_getKeyPath(&unk_1003999D0);
  v10 = swift_getKeyPath(&unk_1003999F8);
  static Published.subscript.getter(&v13, v7, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v14;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v8, "setQuery:", v12, v13);

}

void sub_1002A235C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100399A18);
  v5 = swift_getKeyPath(&unk_100399A40);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1002A23D8(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100399A18);
  v5 = swift_getKeyPath(&unk_100399A40);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

char *sub_1002A244C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  void **aBlock;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  objc_super v30;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_100005574(&qword_10049BB60);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049BB68);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  aBlock = 0;
  v25 = 0xE000000000000000;
  v12 = v1;
  Published.init(initialValue:)(&aBlock, &type metadata for String);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  aBlock = (void **)_swiftEmptyArrayStorage;
  v14 = sub_100005574(&qword_10049BA18);
  Published.init(initialValue:)(&aBlock, v14);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v15 = objc_msgSend(objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v15;

  v30.receiver = v12;
  v30.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v30, "init");
  v17 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v18 = swift_allocObject(&unk_1004603D8, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v28 = sub_1002A3CC0;
  v29 = v18;
  aBlock = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1002A2A40;
  v27 = &unk_1004603F0;
  v19 = _Block_copy(&aBlock);
  v20 = v29;
  v21 = v16;
  v22 = v17;
  objc_msgSend(v22, "setDidUpdateResults:", v19, swift_release(v20).n128_f64[0]);

  _Block_release(v19);
  return v21;
}

void sub_1002A2688(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _QWORD v28[4];
  _QWORD *v29;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v18 = _swiftEmptyArrayStorage;
LABEL_18:
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    v21 = a2;
    v22 = static MainActor.shared.getter(v21);
    v23 = (_QWORD *)swift_allocObject(&unk_100460428, 56, 7);
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v21;
    v23[5] = v18;
    v23[6] = a1;
    v24 = sub_100283A94((uint64_t)v5, (uint64_t)&unk_10049BB78, (uint64_t)v23);
    swift_release(v24);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v6)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v26 = a2;
    v27 = v5;
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v10 = *(id *)(a1 + 8 * i + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, "subtitle");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v28[2] = v13;
      v28[3] = v15;
      v28[0] = 44;
      v28[1] = 0xE100000000000000;
      v16 = sub_10024AF7C();
      LOBYTE(v12) = StringProtocol.contains<A>(_:)(v28, &type metadata for String, &type metadata for String, v16, v16);
      v17 = swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v8 = v29[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
        specialized ContiguousArray._endMutation()(v9);
      }
    }
    swift_bridgeObjectRelease();
    v18 = v29;
    a2 = v26;
    v5 = v27;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1002A28EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002A295C, v8, v9);
}

uint64_t sub_1002A295C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  if (v1 >> 62)
  {
    v9 = *(_QWORD *)(v0 + 32);
    if (v9 < 0)
      v10 = *(_QWORD *)(v0 + 32);
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = (uint64_t *)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  if (v2)
    v3 = (uint64_t *)(v0 + 32);
  v5 = *v3;
  swift_bridgeObjectRetain();
  KeyPath = swift_getKeyPath(&unk_100399A18);
  v7 = swift_getKeyPath(&unk_100399A40);
  *(_QWORD *)(v0 + 16) = v5;
  static Published.subscript.setter(v0 + 16, v4, KeyPath, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A2A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  unint64_t v5;
  uint64_t v6;
  __n128 v7;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1002A3A50();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v4(v6, v7);
  swift_release(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002A2B3C()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049B9F8, (uint64_t)&nominal type descriptor for CitySearchController);
}

void sub_1002A2B58(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_1002A2BEC();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002A2C40(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_1002A2BEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10049BA08)
  {
    v0 = type metadata accessor for Published(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10049BA08);
  }
}

void sub_1002A2C40(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049BA10)
  {
    v2 = sub_100005600(&qword_10049BA18);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049BA10);
  }
}

uint64_t sub_1002A2C98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v19);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = (void *)a2[3];
    v10 = *((_BYTE *)a2 + 32);
    swift_retain(v7);
    sub_1002A2DA4(v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      v20 = *v13;
      *v12 = *v13;
      swift_retain(v20);
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

id sub_1002A2DA4(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain(a2);
}

double sub_1002A2DB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  sub_1002A2E38(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

double sub_1002A2E38(uint64_t a1, void *a2, char a3)
{
  double result;

  if ((a3 & 1) != 0)

  else
    *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_1002A2E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_retain(v6);
  sub_1002A2DA4(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  return a1;
}

uint64_t sub_1002A2F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_1002A2DA4(v8, v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(void **)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_1002A2E38(v11, v12, v13);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    sub_100008758(a1 + v14, &qword_10049F780);
    v17 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  return a1;
}

uint64_t sub_1002A3030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1002A30E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1002A2E38(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_100008758(a1 + v12, &qword_10049F780);
    v15 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002A31CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A31D8);
}

uint64_t sub_1002A31D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049DF50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1002A3258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A3264);
}

uint64_t sub_1002A3264(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10049DF50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049BA78, (uint64_t)&nominal type descriptor for CitySelectionView);
}

void sub_1002A32F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100399918;
  v4[1] = &unk_100399930;
  sub_1002A336C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_1002A336C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049DFD0)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049DFD0);
  }
}

uint64_t sub_1002A33C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t ObjectType;
  uint64_t result;

  ObjectType = swift_getObjectType();
  result = ObservableObject<>.objectWillChange.getter(ObjectType);
  *a1 = result;
  return result;
}

uint64_t sub_1002A33FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E29AC, 1);
}

uint64_t sub_1002A340C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002A1448(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002A3414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049BAD0;
  if (!qword_10049BAD0)
  {
    v1 = sub_100005600(&qword_10049BAC8);
    sub_10002FFB8(&qword_10049BAD8, &qword_10049BAE0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_10002FFB8(&qword_10049BAE8, &qword_10049BAF0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049BAD0);
  }
  return result;
}

void sub_1002A34B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1002A2258(v1, v2);
}

uint64_t sub_1002A34F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A353C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  sub_1002A2E38(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002A35F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A363C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8) + 80);
  return sub_1002A1740(a1, v2 + ((v5 + 16) & ~v5), a2);
}

double sub_1002A3688@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100399A80);
  v5 = swift_getKeyPath(&unk_100399AA8);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v10;
  v7 = v11;
  v8 = v12;
  v9 = v13;
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  return result;
}

uint64_t sub_1002A3714(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100399A80);
  v10 = swift_getKeyPath(&unk_100399AA8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter(&v14, v8, KeyPath);
  swift_release(KeyPath);
  swift_release(v10);
  v17 = v14;
  v18 = v15;
  v19 = v16;
  v11 = swift_getKeyPath(&unk_100399A80);
  v12 = swift_getKeyPath(&unk_100399AA8);
  *(_QWORD *)&v14 = v3;
  *((_QWORD *)&v14 + 1) = v2;
  *(_QWORD *)&v15 = v5;
  *((_QWORD *)&v15 + 1) = v4;
  *(_QWORD *)&v16 = v6;
  *((_QWORD *)&v16 + 1) = v7;
  swift_retain(v8);
  static Published.subscript.setter(&v14, v8, v11, v12);
  sub_1002A7638((uint64_t)&v17);
  v20 = v17;
  sub_100052668((uint64_t)&v20);
  v14 = v18;
  return sub_100052668((uint64_t)&v14);
}

uint64_t sub_1002A3840(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = *a1;
  v7 = swift_allocObject(&unk_100460388, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain(a2);
  swift_retain(a4);
  v8 = sub_100005574(&qword_10049BA18);
  v9 = sub_100005574(&qword_10049BB20);
  v10 = sub_10002FFB8(&qword_10049BB30, &qword_10049BA18, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_100006924(&qword_10049BB38, (uint64_t (*)(uint64_t))sub_1002A3A50, (uint64_t)&protocol conformance descriptor for NSObject);
  v12 = sub_10002FFB8(&qword_10049BB18, &qword_10049BB20, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return ForEach<>.init(_:id:content:)(&v14, a2, sub_1002A3A1C, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1002A3970()
{
  uint64_t v0;

  return sub_1002A3840(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1002A397C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049BB10;
  if (!qword_10049BB10)
  {
    v1 = sub_100005600(&qword_10049BB08);
    sub_10002FFB8(&qword_10049BB18, &qword_10049BB20, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10049BB10);
  }
  return result;
}

uint64_t sub_1002A39F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002A3A1C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

unint64_t sub_1002A3A50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049BB40;
  if (!qword_10049BB40)
  {
    v1 = objc_opt_self(MusicMapKitLocalSearchCompletionWrapper);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049BB40);
  }
  return result;
}

uint64_t sub_1002A3A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  sub_1002A2E38(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;

  return swift_deallocObject(v0, v10, v3 | 7);
}

uint64_t sub_1002A3B64()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1002A1DF0(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1002A3BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049BB50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A3BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049BB50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A3C34(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10003B4C0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1002A3C64(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10003B4D0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002A3C9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1002A3CC0(uint64_t a1)
{
  uint64_t v1;

  sub_1002A2688(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002A3CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1002A3CD8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1002A3CE0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002A3D1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_10049BB74);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000EA88;
  return sub_1002A28EC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002A3D9C()
{
  _QWORD v1[2];

  v1[0] = sub_100005600(&qword_10049BAB8);
  v1[1] = sub_10002FFB8(&qword_10049BB00, &qword_10049BAB8, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v20;
  char v21[16];
  __n128 *v22;
  __n128 v23;
  unint64_t v24;
  unint64_t v25;

  v1 = v0;
  type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v23.n128_u64[0] = 64;
  v23.n128_u64[1] = 0xE100000000000000;
  v22 = &v23;
  swift_bridgeObjectRetain_n(v9, 2);
  v10 = sub_1002A4F5C(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001E70DC, (uint64_t)v21, v8, v9);
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v10 + 2);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_1002A54C4(v1, (uint64_t)v3);
LABEL_5:
    v16 = *((_QWORD *)v3 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v12 = (__n128 *)&v10[32 * v11];
  v20 = *v12;
  v14 = v12[1].n128_u64[0];
  v13 = v12[1].n128_u64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v20;
  v24 = v14;
  v25 = v13;
  static CharacterSet.whitespaces.getter(v20);
  v15 = sub_1002A5480();
  v16 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for Substring, v15);
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1002A54C4(v1, (uint64_t)v3);
  if (!v18)
    goto LABEL_5;
LABEL_6:
  sub_1002A5508((uint64_t)v3);
  return v16;
}

uint64_t sub_1002A3FBC(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;

  if (!a1)
  {
    sub_1002A6A1C((uint64_t)v1, (uint64_t)&v62);
    sub_1002A6A1C((uint64_t)&v62, (uint64_t)v53);
    v9 = v1[3];
    v54 = v1[2];
    v55 = v9;
    sub_1002A6A1C((uint64_t)(v1 + 4), (uint64_t)&v61);
    sub_1002A6A1C((uint64_t)&v61, (uint64_t)&v56);
    v10 = v1[7];
    v58 = v1[6];
    v59 = v10;
    v12 = v53[0];
    v11 = v53[1];
    sub_1000595EC((uint64_t)&v62);
    swift_bridgeObjectRetain();
    sub_1000595EC((uint64_t)&v61);
    if (v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_100258074(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v13 + 2);
      v14 = *((_QWORD *)v13 + 3);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        v49 = sub_100258074((char *)(v14 > 1), v15 + 1, 1, v13);
        v16 = v15 + 1;
        v13 = v49;
      }
      *((_QWORD *)v13 + 2) = v16;
      v17 = &v13[16 * v15];
      *((_QWORD *)v17 + 4) = v12;
      *((_QWORD *)v17 + 5) = v11;
      v18 = v55;
      if (!v55)
        goto LABEL_21;
    }
    else
    {
      swift_bridgeObjectRetain();
      v13 = (char *)_swiftEmptyArrayStorage;
      v18 = v55;
      if (!v55)
      {
LABEL_21:
        v30 = v57;
        if (v57)
        {
          v31 = v56;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_100258074(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v33 = *((_QWORD *)v13 + 2);
          v32 = *((_QWORD *)v13 + 3);
          v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            v51 = sub_100258074((char *)(v32 > 1), v33 + 1, 1, v13);
            v34 = v33 + 1;
            v13 = v51;
          }
          *((_QWORD *)v13 + 2) = v34;
          v35 = &v13[16 * v33];
          *((_QWORD *)v35 + 4) = v31;
          *((_QWORD *)v35 + 5) = v30;
        }
        v36 = v59;
        if (v59)
        {
          v37 = v58;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_100258074(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v39 = *((_QWORD *)v13 + 2);
          v38 = *((_QWORD *)v13 + 3);
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v52 = sub_100258074((char *)(v38 > 1), v39 + 1, 1, v13);
            v40 = v39 + 1;
            v13 = v52;
          }
          *((_QWORD *)v13 + 2) = v40;
          v41 = &v13[16 * v39];
          *((_QWORD *)v41 + 4) = v37;
          *((_QWORD *)v41 + 5) = v36;
        }
        v42 = sub_100005574(&qword_1004A10E0);
        swift_arrayDestroy(v53, 4, v42);
        v60 = v13;
        goto LABEL_38;
      }
    }
    v25 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_100258074(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v27 = *((_QWORD *)v13 + 2);
    v26 = *((_QWORD *)v13 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      v50 = sub_100258074((char *)(v26 > 1), v27 + 1, 1, v13);
      v28 = v27 + 1;
      v13 = v50;
    }
    *((_QWORD *)v13 + 2) = v28;
    v29 = &v13[16 * v27];
    *((_QWORD *)v29 + 4) = v25;
    *((_QWORD *)v29 + 5) = v18;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    v19 = v1[5];
    if (v19)
    {
      v20 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter(v20, v19) == 2)
      {
        v21 = sub_100005574(&qword_100499F90);
        v22 = swift_allocObject(v21, 80, 7);
        v23 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v22 + 16) = xmmword_100384A40;
        *(_OWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 48) = v20;
        *(_QWORD *)(v22 + 56) = v19;
        v61 = *((_OWORD *)v1 + 3);
        v62 = v23;
        *(_OWORD *)(v22 + 64) = v61;
        v60 = (_OWORD *)v22;
        sub_1000595EC((uint64_t)&v62);
        sub_1000595EC((uint64_t)&v61);
        v7 = sub_100005574(&qword_10049AC08);
        v8 = sub_10027E304();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    v43 = sub_100005574(&qword_100499F90);
    v44 = (_OWORD *)swift_allocObject(v43, 64, 7);
    v45 = *((_OWORD *)v1 + 1);
    v44[1] = xmmword_100384A60;
    v44[2] = v45;
    v61 = *((_OWORD *)v1 + 3);
    v62 = v45;
    v44[3] = v61;
    v60 = v44;
    sub_1000595EC((uint64_t)&v62);
    sub_1000595EC((uint64_t)&v61);
LABEL_38:
    v46 = sub_100005574(&qword_10049AC08);
    v47 = sub_10027E304();
    v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v46, v47);
    goto LABEL_39;
  }
  v2 = v1[5];
  if (v2)
  {
    v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter(v3, v2) == 2)
    {
      v4 = sub_100005574(&qword_100499F90);
      v5 = swift_allocObject(v4, 64, 7);
      v62 = *((_OWORD *)v1 + 1);
      v6 = v62;
      *(_OWORD *)(v5 + 16) = xmmword_100384A60;
      *(_OWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 48) = v3;
      *(_QWORD *)(v5 + 56) = v2;
      *(_QWORD *)&v61 = v5;
      sub_1000595EC((uint64_t)&v62);
      v7 = sub_100005574(&qword_10049AC08);
      v8 = sub_10027E304();
LABEL_14:
      v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v7, v8);
LABEL_39:
      swift_bridgeObjectRelease();
      return v24;
    }
    swift_bridgeObjectRelease();
  }
  v24 = v1[2];
  swift_bridgeObjectRetain();
  return v24;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  v4 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049BC00, (uint64_t)&nominal type descriptor for Razzmatazz);
}

uint64_t sub_1002A4534(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = v2[1];
  if (v4)
  {
    v5 = *v2;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[5];
  if (v8)
  {
    v9 = v2[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v11 = v2[6];
  v10 = v2[7];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v11, v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1002A4620()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002A4650 + 4 * byte_100399AC8[*v0]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_1002A4650()
{
  return 2037672291;
}

uint64_t sub_1002A4660()
{
  return 0x6E6F69676572;
}

uint64_t sub_1002A4674()
{
  return 0x7972746E756F63;
}

uint64_t sub_1002A4688@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002A6B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002A46AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A6FA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A46D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002A6FA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1002A46FC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_1002A5544((uint64_t)v13);
  sub_1002A4534((uint64_t)v12);
  sub_1002A5598(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  type metadata accessor for Razzmatazz.Venue(0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_100006924(&qword_10049BB98, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

double sub_1002A4814@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1002A6CCC(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int sub_1002A4854()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_1002A4534((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1002A4894()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_1002A4534((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_1002A48CC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1002A5600((uint64_t *)v7, v8) & 1;
}

uint64_t sub_1002A4918(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *((_OWORD *)v2 + 3);
  v14[0] = *((_OWORD *)v2 + 2);
  v14[1] = v8;
  v9 = *((_OWORD *)v2 + 5);
  v14[2] = *((_OWORD *)v2 + 4);
  v14[3] = v9;
  sub_1002A5544((uint64_t)v14);
  sub_1002A4534(a1);
  sub_1002A5598(v14);
  v10 = (id)v2[12];
  NSObject.hash(into:)(a1);

  v11 = type metadata accessor for TimeZone(0);
  v12 = sub_100006924(&qword_10049BB98, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
}

Swift::Int sub_1002A4A24()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_1002A5544((uint64_t)v13);
  sub_1002A4534((uint64_t)v12);
  sub_1002A5598(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_100006924(&qword_10049BB98, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for Razzmatazz(0);
  v9 = type metadata accessor for Date(0);
  v10 = sub_100006924(&qword_10049BB88, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v9, v10);
  v11 = type metadata accessor for Artist(0);
  v12 = sub_100006924(&qword_10049BB90, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = (char *)v2 + *(int *)(v8 + 32);
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease();
  v18 = *((_OWORD *)v13 + 3);
  v24[0] = *((_OWORD *)v13 + 2);
  v24[1] = v18;
  v19 = *((_OWORD *)v13 + 5);
  v24[2] = *((_OWORD *)v13 + 4);
  v24[3] = v19;
  sub_1002A5544((uint64_t)v24);
  sub_1002A4534(a1);
  sub_1002A5598(v24);
  v20 = *((id *)v13 + 12);
  NSObject.hash(into:)(a1);

  type metadata accessor for Razzmatazz.Venue(0);
  v21 = type metadata accessor for TimeZone(0);
  v22 = sub_100006924(&qword_10049BB98, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v21, v22);
}

Swift::Int Razzmatazz.hashValue.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[9];
  _OWORD v23[4];

  v1 = v0;
  Hasher.init(_seed:)(v22);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v4, v5);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = type metadata accessor for Date(0);
  v8 = sub_100006924(&qword_10049BB88, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v22, v7, v8);
  v9 = type metadata accessor for Artist(0);
  v10 = sub_100006924(&qword_10049BB90, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(v22, v9, v10);
  v11 = (char *)v1 + *(int *)(v6 + 32);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v12, v13);
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)v11 + 2);
  v15 = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_OWORD *)v11 + 3);
  v23[0] = *((_OWORD *)v11 + 2);
  v23[1] = v16;
  v17 = *((_OWORD *)v11 + 5);
  v23[2] = *((_OWORD *)v11 + 4);
  v23[3] = v17;
  sub_1002A5544((uint64_t)v23);
  sub_1002A4534((uint64_t)v22);
  sub_1002A5598(v23);
  v18 = *((id *)v11 + 12);
  NSObject.hash(into:)(v22);

  type metadata accessor for Razzmatazz.Venue(0);
  v19 = type metadata accessor for TimeZone(0);
  v20 = sub_100006924(&qword_10049BB98, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v22, v19, v20);
  return Hasher._finalize()();
}

Swift::Int sub_1002A4F24()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Razzmatazz.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

char *sub_1002A4F5C(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_1004604B0, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v47 = swift_allocObject(&unk_1004604D8, 24, 7);
  *(_QWORD *)(v47 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v31 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v31 = 11;
    sub_1002A5374(v31 | (v15 << 16), v47, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease();
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release(v14);
    v32 = v47;
    goto LABEL_40;
  }
  v42 = a1;
  v43 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v41 = v17 | (v16 << 16);
  v48 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v50[0] = String.subscript.getter(v9, v11, a6);
    v50[1] = v19;
    v20 = a3(v50);
    if (v7)
    {
      swift_release(v43);
      swift_release(v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v6 = v20;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v48 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v47 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v21 = String.subscript.getter(v8, v9, v11, a6);
  v44 = v22;
  v45 = v21;
  v24 = v23;
  v26 = v25;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_100258870(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v28 = *((_QWORD *)v10 + 2);
  v27 = *((_QWORD *)v10 + 3);
  v6 = v28 + 1;
  if (v28 >= v27 >> 1)
    v10 = sub_100258870((char *)(v27 > 1), v28 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v29 = &v10[32 * v28];
  *((_QWORD *)v29 + 4) = v45;
  *((_QWORD *)v29 + 5) = v24;
  *((_QWORD *)v29 + 6) = v26;
  *((_QWORD *)v29 + 7) = v44;
  *(_QWORD *)(v43 + 16) = v10;
  v30 = String.index(after:)(v9, v11, a6);
  v9 = v30;
  *(_QWORD *)(v47 + 16) = v30;
  if (*((_QWORD *)v10 + 2) != v42)
  {
    v8 = v30;
    v18 = v30;
    goto LABEL_11;
  }
  v18 = v30;
  v8 = v30;
LABEL_31:
  if (v48 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v33 = v43;
    goto LABEL_39;
  }
  if (v48 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v41, v11, a6);
    v8 = v34;
    v9 = v35;
    v11 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_100258870(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v38 = *((_QWORD *)v10 + 2);
  v37 = *((_QWORD *)v10 + 3);
  if (v38 >= v37 >> 1)
    v10 = sub_100258870((char *)(v37 > 1), v38 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v38 + 1;
  v39 = &v10[32 * v38];
  *((_QWORD *)v39 + 4) = v6;
  *((_QWORD *)v39 + 5) = v8;
  *((_QWORD *)v39 + 6) = v9;
  *((_QWORD *)v39 + 7) = v11;
  v33 = v43;
  *(_QWORD *)(v43 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release(v33);
  v32 = v47;
LABEL_40:
  swift_release(v32);
  return v10;
}

uint64_t sub_1002A5374(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_100258870(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_100258870((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

unint64_t sub_1002A5480()
{
  unint64_t result;

  result = qword_10049BB80;
  if (!qword_10049BB80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_10049BB80);
  }
  return result;
}

uint64_t sub_1002A54C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A5508(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002A5544(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1002A5598(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049BCA0, (uint64_t)&nominal type descriptor for Razzmatazz.Venue);
}

uint64_t sub_1002A5600(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *a1 == *a2 && v4 == v5;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, *a2, v5, 0), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    if (v10 != v12 || v11 != v13)
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
    v16 = a1[5];
    v17 = a2[5];
    if (v16)
    {
      if (v17)
      {
        v18 = a1[4];
        v19 = a2[4];
        if (v18 != v19 || v16 != v17)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0);
          result = 0;
          if ((v20 & 1) == 0)
            return result;
        }
LABEL_24:
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
    else if (!v17)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1002A5700(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[4];
  _OWORD v20[4];

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0) & 1) == 0)
    return 0;
  v8 = a1[2];
  v9 = a1[3];
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = v8 == v10 && v9 == v11;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) == 0)
    return 0;
  v13 = *((_OWORD *)a1 + 3);
  v19[0] = *((_OWORD *)a1 + 2);
  v19[1] = v13;
  v14 = *((_OWORD *)a1 + 5);
  v19[2] = *((_OWORD *)a1 + 4);
  v19[3] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v20[0] = *(_OWORD *)(a2 + 32);
  v20[1] = v15;
  v16 = *(_OWORD *)(a2 + 80);
  v20[2] = *(_OWORD *)(a2 + 64);
  v20[3] = v16;
  if ((sub_1002A5600((uint64_t *)v19, v20) & 1) == 0)
    return 0;
  sub_1002A6A64();
  if ((static NSObject.== infix(_:_:)(a1[12], *(_QWORD *)(a2 + 96)) & 1) == 0)
    return 0;
  v17 = type metadata accessor for Razzmatazz.Venue(0);
  return static TimeZone.== infix(_:_:)((char *)a1 + *(int *)(v17 + 32), a2 + *(int *)(v17 + 32));
}

uint64_t _s11MusicCoreUI10RazzmatazzV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int *v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if ((v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0) & 1) != 0)
    && ((v8 = a1[2], v9 = a1[3], v10 = a2[2], v11 = a2[3], v8 == v10) ? (v12 = v9 == v11) : (v12 = 0),
        (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) != 0)
     && (v13 = (int *)type metadata accessor for Razzmatazz(0),
         (static Date.== infix(_:_:)((char *)a1 + v13[6], (char *)a2 + v13[6]) & 1) != 0)
     && (static Artist.== infix(_:_:)((char *)a1 + v13[7], (char *)a2 + v13[7]) & 1) != 0))
  {
    return sub_1002A5700((uint64_t *)((char *)a1 + v13[8]), (uint64_t)a2 + v13[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1002A58AC()
{
  return sub_100006924(&qword_10049BBA0, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  char *v35;
  void *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v33);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *(uint64_t *)((char *)a2 + v18);
    v22 = v20[1];
    *v19 = v21;
    v19[1] = v22;
    v23 = v20[3];
    v19[2] = v20[2];
    v19[3] = v23;
    v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    v25 = v20[7];
    v19[6] = v20[6];
    v19[7] = v25;
    v26 = v20[9];
    v19[8] = v20[8];
    v19[9] = v26;
    v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    v36 = (void *)v20[12];
    v19[12] = v36;
    v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v35 = (char *)v19 + v28;
    v29 = (char *)v20 + v28;
    v30 = type metadata accessor for TimeZone(0);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v36;
    v31(v35, v29, v30);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v10 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char *v33;
  void *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 16);
  v22 = v19[3];
  v18[2] = v21;
  v18[3] = v22;
  v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  v24 = v19[7];
  v18[6] = v19[6];
  v18[7] = v24;
  v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  v34 = (void *)v19[12];
  v18[12] = v34;
  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v33 = (char *)v18 + v27;
  v28 = (char *)v19 + v27;
  v29 = type metadata accessor for TimeZone(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v34;
  v30(v33, v28, v29);
  return a1;
}

_QWORD *assignWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *(_QWORD *)((char *)a2 + v14);
  v15[1] = *(_QWORD *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (void *)v16[12];
  v18 = (void *)v15[12];
  v15[12] = v17;
  v19 = v17;

  v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  v23 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_QWORD *assignWithTake for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  v21 = v18[5];
  v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  v25 = (void *)v17[12];
  v17[12] = v18[12];

  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v27 = (char *)v17 + v26;
  v28 = (char *)v18 + v26;
  v29 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A6144);
}

uint64_t sub_1002A6144(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A6214);
}

uint64_t sub_1002A6214(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1002A62D4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_100399B60;
  v6[1] = &unk_100399B60;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Artist(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Razzmatazz.Venue(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1002A6380(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v18;
  char *v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v16);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = (void *)a2[12];
    v12 = *(int *)(a3 + 32);
    v18 = (char *)a2 + v12;
    v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    v13 = type metadata accessor for TimeZone(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    v14(v19, v18, v13);
  }
  return v3;
}

uint64_t sub_1002A6490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1002A6508(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  char *v16;
  char *v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = (void *)a2[12];
  v11 = *(int *)(a3 + 32);
  v16 = (char *)a2 + v11;
  v17 = (char *)a1 + v11;
  a1[12] = v10;
  v12 = type metadata accessor for TimeZone(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v10;
  v13(v17, v16, v12);
  return a1;
}

_QWORD *sub_1002A65EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[6] = a2[6];
  v9 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  a1[8] = a2[8];
  v10 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  a1[10] = a2[10];
  v11 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = (void *)a2[12];
  v13 = (void *)a1[12];
  a1[12] = v12;
  v14 = v12;

  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_1002A671C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

_QWORD *sub_1002A6790(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  a1[12] = a2[12];

  v19 = *(int *)(a3 + 32);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_1002A685C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A6868);
}

uint64_t sub_1002A6868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1002A68E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A68F0);
}

uint64_t sub_1002A68F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002A6964(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100399B60;
  v4[1] = &unk_100399B60;
  v4[2] = "@";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002A69F0()
{
  return sub_100006924(&qword_10049BCE8, type metadata accessor for Razzmatazz.Venue, (uint64_t)&unk_100399B98);
}

uint64_t sub_1002A6A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004A10E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002A6A64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049A0D0;
  if (!qword_10049A0D0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049A0D0);
  }
  return result;
}

uint64_t sub_1002A6AA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002A6AC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t sub_1002A6AE8()
{
  unint64_t result;

  result = qword_10049BCF0;
  if (!qword_10049BCF0)
  {
    result = swift_getWitnessTable(&unk_100399C40, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_10049BCF0);
  }
  return result;
}

uint64_t sub_1002A6B2C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736572646461, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 2037672291 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2037672291, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69676572, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972746E756F63, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1002A6CCC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_100005574(&qword_10049BCF8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002A6FA4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Razzmatazz.Venue.Address.CodingKeys, &type metadata for Razzmatazz.Venue.Address.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v35 = 0;
  v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v35, v5);
  v14 = v13;
  v30 = v12;
  v34 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
  v31 = v16;
  v29 = v15;
  v33 = 2;
  swift_bridgeObjectRetain();
  v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v33, v5);
  v28 = v17;
  v32 = 3;
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  v23 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000682C(a1);
  swift_bridgeObjectRelease();
  v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v14;
  a2[2] = v29;
  a2[3] = v23;
  a2[4] = v27;
  a2[5] = v24;
  a2[6] = v22;
  a2[7] = v20;
  return result;
}

unint64_t sub_1002A6FA4()
{
  unint64_t result;

  result = qword_10049BD00;
  if (!qword_10049BD00)
  {
    result = swift_getWitnessTable(&unk_100399D94, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049BD00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002A7034 + 4 * byte_100399AD1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002A7068 + 4 * byte_100399ACC[v4]))();
}

uint64_t sub_1002A7068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A7070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002A7078);
  return result;
}

uint64_t sub_1002A7084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002A708CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002A7090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A7098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &type metadata for Razzmatazz.Venue.Address.CodingKeys;
}

unint64_t sub_1002A70B8()
{
  unint64_t result;

  result = qword_10049BD08;
  if (!qword_10049BD08)
  {
    result = swift_getWitnessTable(&unk_100399D6C, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049BD08);
  }
  return result;
}

unint64_t sub_1002A7100()
{
  unint64_t result;

  result = qword_10049BD10;
  if (!qword_10049BD10)
  {
    result = swift_getWitnessTable(&unk_100399CDC, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049BD10);
  }
  return result;
}

unint64_t sub_1002A7148()
{
  unint64_t result;

  result = qword_10049BD18;
  if (!qword_10049BD18)
  {
    result = swift_getWitnessTable(&unk_100399D04, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049BD18);
  }
  return result;
}

uint64_t sub_1002A718C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t);
  uint64_t v50;

  v49 = a1;
  sub_100005574(&qword_10049BEE0);
  __chkstk_darwin();
  v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v45 = v7;
  __chkstk_darwin();
  v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (uint64_t)&v38 - v9;
  v47 = sub_100005574(&qword_10049BEE8);
  __chkstk_darwin();
  v46 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v38 - v11);
  v13 = *(_QWORD *)(a3 + 64);
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v50 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v41 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    v24 = *(_QWORD *)(v50 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v20);
    v26 = *v25;
    v27 = v25[1];
    v28 = type metadata accessor for ShazamEvent(0);
    sub_100082248(v24 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v20, (uint64_t)v12 + *(int *)(v47 + 48), type metadata accessor for ShazamEvent);
    *v12 = v26;
    v12[1] = v27;
    v29 = v46;
    sub_1000149A8((uint64_t)v12, v46, &qword_10049BEE8);
    swift_bridgeObjectRetain();
    v30 = (uint64_t)v48;
    v49(v29);
    if (v3)
    {
      sub_100008758(v29, &qword_10049BEE8);
      v37 = v41;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release(v50);
      return (uint64_t)v37;
    }
    sub_100008758(v29, &qword_10049BEE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44) == 1)
    {
      result = sub_100008758(v30, &qword_10049BEE0);
    }
    else
    {
      v31 = v30;
      v32 = v39;
      sub_1000648AC(v31, v39, type metadata accessor for Razzmatazz);
      sub_1000648AC(v32, v40, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
        v41 = (_QWORD *)sub_10025885C(0, v41[2] + 1, 1, v41);
      v34 = v41[2];
      v33 = v41[3];
      if (v34 >= v33 >> 1)
        v41 = (_QWORD *)sub_10025885C(v33 > 1, v34 + 1, 1, v41);
      v35 = v40;
      v36 = v41;
      v41[2] = v34 + 1;
      result = sub_1000648AC(v35, (uint64_t)v36+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34, type metadata accessor for Razzmatazz);
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v43)
  {
LABEL_32:
    v37 = v41;
    goto LABEL_33;
  }
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1002A75C8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100399FA8);
  v2 = swift_getKeyPath(&unk_100399FD0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1002A7638(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  KeyPath = swift_getKeyPath(&unk_100399F40);
  v4 = swift_getKeyPath(&unk_100399F68);
  static Published.subscript.getter(&v15, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v4);
  v6 = v17;
  v5 = v18;
  v7 = v19;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = v15 == *(_QWORD *)a1 && v16 == v8;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *(_QWORD *)a1, v8, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  if (v6 != v10 || v5 != v11)
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v5, v10, v11, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v13 = swift_getKeyPath(&unk_100399F40);
    v14 = swift_getKeyPath(&unk_100399F68);
    static Published.subscript.getter(&v15, v1, v13);
    swift_release(v13);
    swift_release(v14);
    sub_1002ACBC4((uint64_t)&v15);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(double *)&v7 != *(double *)(a1 + 32) || *((double *)&v7 + 1) != *(double *)(a1 + 40))
    goto LABEL_14;
}

double sub_1002A77C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  KeyPath = swift_getKeyPath(&unk_100399F40);
  v4 = swift_getKeyPath(&unk_100399F68);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)&v9;
  v6 = v10;
  v7 = v11;
  v8 = v12;
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_1002A784C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[48];
  _OWORD v16[3];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v1 = sub_100005574(&qword_10049BE28);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(_QWORD *)&v20 = _swiftEmptyArrayStorage;
  v6 = sub_100005574(&qword_100499E80);
  Published.init(initialValue:)(&v20, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location, &v17, 33, 0);
  strcpy((char *)&v20, "Cupertino, CA");
  HIWORD(v20) = -4864;
  strcpy((char *)&v21, "United States");
  HIWORD(v21) = -4864;
  v22 = xmmword_100395420;
  Published.init(initialValue:)(&v20, &type metadata for RazzmatazzController.Location);
  swift_endAccess(&v17);
  sub_1002ACF78((uint64_t)v15);
  sub_1000149A8((uint64_t)v15, (uint64_t)v16, &qword_10049BE00);
  if (*((_QWORD *)&v16[0] + 1))
  {
    v17 = v16[0];
    v18 = v16[1];
    v19 = v16[2];
    KeyPath = swift_getKeyPath(&unk_100399F40);
    v8 = swift_getKeyPath(&unk_100399F68);
    static Published.subscript.getter(&v12, v0, KeyPath);
    swift_release(KeyPath);
    swift_release(v8);
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v9 = swift_getKeyPath(&unk_100399F40);
    v10 = swift_getKeyPath(&unk_100399F68);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    swift_retain(v0);
    static Published.subscript.setter(&v12, v0, v9, v10);
    sub_1002A7638((uint64_t)&v20);
    v23 = v20;
    sub_100052668((uint64_t)&v23);
    v12 = v21;
    sub_100052668((uint64_t)&v12);
  }
  return v0;
}

uint64_t sub_1002A7A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[4] = a4;
  v7 = type metadata accessor for MainActor(0);
  v5[5] = v7;
  v5[6] = static MainActor.shared.getter(v7);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_10049BE40 + dword_10049BE40);
  v8 = (_QWORD *)swift_task_alloc(unk_10049BE44);
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_1002A7B14;
  return v10(a5);
}

uint64_t sub_1002A7B14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002A7B8C, v4, v5);
}

uint64_t sub_1002A7B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  *(_QWORD *)(v0 + 16) = v1;
  KeyPath = swift_getKeyPath(&unk_100399F88);
  v4 = sub_100005574(&qword_100499E80);
  v5 = sub_1002AD9B4();
  v6 = sub_100006924(&qword_10049B8F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_1002AB1F8, 0, v4, v5, v6);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v8 = swift_getKeyPath(&unk_100399FA8);
  v9 = swift_getKeyPath(&unk_100399FD0);
  *(_QWORD *)(v0 + 24) = v7;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 24, v2, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002A7C98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v2[4];
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
}

uint64_t sub_1002A7D28(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_100005574(&qword_10049BE20);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002AD970();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((_QWORD *)v3 + 1);
  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)&v12, v13, &v23, v5);
  if (!v2)
  {
    v14 = *((_QWORD *)v3 + 2);
    v15 = *((_QWORD *)v3 + 3);
    v22 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v22, v5);
    v16 = v3[4];
    v21 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v16);
    v17 = v3[5];
    v20 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v20, v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002A7E8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002A7EB8 + 4 * byte_100399DF0[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1002A7EB8()
{
  return 0x656C746974627573;
}

uint64_t sub_1002A7ED0()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1002A7EE8()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1002A7F04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002AD570(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002A7F28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AD970();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A7F50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AD970();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1002A7F78()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_1002A7C98((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1002A7FB8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_1002A7C98((uint64_t)v1);
  return Hasher._finalize()();
}

double sub_1002A7FF0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1002AD72C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1002A8030(_QWORD *a1)
{
  return sub_1002A7D28(a1);
}

BOOL sub_1002A8044(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1002ABCE0((double *)v7, (uint64_t)v8);
}

uint64_t sub_1002A8088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  v2 = sub_100005574(&qword_10049BE28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  v4 = sub_100005574(&qword_10049BE30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002A8108()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049BD58, (uint64_t)&nominal type descriptor for RazzmatazzController);
}

void sub_1002A8124(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_1002A81AC(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002A8204();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_1002A81AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049BD68)
  {
    v2 = sub_100005600(&qword_100499E80);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049BD68);
  }
}

void sub_1002A8204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10049BD70)
  {
    v0 = type metadata accessor for Published(0, &type metadata for RazzmatazzController.Location);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10049BD70);
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzController.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t sub_1002A837C()
{
  unint64_t result;

  result = qword_10049BDF8;
  if (!qword_10049BDF8)
  {
    result = swift_getWitnessTable(&unk_100399E50, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10049BDF8);
  }
  return result;
}

uint64_t sub_1002A83C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049BEE8);
  v14 = *(int *)(__chkstk_darwin() + 48);
  v15 = (uint64_t *)((char *)&v29 + v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100082248(a1 + v14, (uint64_t)v15, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  sub_1002A86AC(v15, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (qword_100498AC8 != -1)
      swift_once(&qword_100498AC8, sub_1002AB0A4);
    v17 = type metadata accessor for Logger(0, v16);
    sub_1000086B4(v17, (uint64_t)qword_1004A3D88);
    swift_errorRetain(v4);
    v18 = swift_errorRetain(v4);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v31 = v22;
      *(_DWORD *)v21 = 136315138;
      v30 = v4;
      swift_errorRetain(v4);
      v23 = sub_100005574(&qword_100499F80);
      v24 = (char *)String.init<A>(describing:)(&v30, v23);
      *(_QWORD *)(v21 + 4) = sub_100249A1C(v24, v25, &v31);
      swift_bridgeObjectRelease();
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
    v28 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a4, 1, 1, v28);
  }
  else
  {
    v26 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a4, 0, 1, v26);
  }
}

uint64_t sub_1002A86AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  _QWORD v58[2];
  int *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v5 = v4;
  v82 = a3;
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v80 = *(_QWORD *)(v13 - 8);
  v81 = v13;
  __chkstk_darwin();
  v15 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShazamEvent(0);
  v17 = *(_QWORD **)((char *)a1 + *(int *)(v16 + 24) + 8);
  if (v17[2] && *(_QWORD *)(a2 + 16))
  {
    v18 = v16;
    v79 = a4;
    v19 = v17[4];
    v20 = v17[5];
    swift_bridgeObjectRetain();
    v21 = sub_10009ABAC(v19, v20);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 104 * v21);
      v24 = *v23;
      v75 = v12;
      v25 = v23[2];
      v74 = v23[1];
      v70 = v25;
      v71 = v24;
      v77 = v10;
      v26 = v23[4];
      v76 = v23[3];
      v63 = v5;
      v27 = v23[5];
      v68 = v23[6];
      v69 = v26;
      v58[0] = v23[7];
      v29 = v23[8];
      v28 = v23[9];
      v66 = v23[10];
      v67 = v29;
      v78 = v9;
      v30 = (void *)v23[12];
      v61 = v23[11];
      v62 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v58[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = *a1;
      v33 = a1[1];
      v34 = (char *)a1 + *(int *)(v18 + 20);
      v35 = *((_QWORD *)v34 + 1);
      v72 = *(_QWORD *)v34;
      v73 = v32;
      v64 = v35;
      v65 = v33;
      v36 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v15, &v34[*(int *)(v36 + 20)], v81);
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v75, &v34[*(int *)(v36 + 24)], v78);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v15;
      v38 = v62;
      swift_bridgeObjectRetain();
      v39 = v61;
      swift_bridgeObjectRetain();
      v40 = v59;
      sub_100006798((uint64_t)a1, type metadata accessor for ShazamEvent);
      v59 = (int *)type metadata accessor for Razzmatazz(0);
      v41 = v79;
      v42 = &v79[v59[8]];
      *(_QWORD *)v42 = v71;
      *((_QWORD *)v42 + 1) = v37;
      v43 = v76;
      *((_QWORD *)v42 + 2) = v70;
      *((_QWORD *)v42 + 3) = v43;
      *((_QWORD *)v42 + 4) = v69;
      *((_QWORD *)v42 + 5) = v27;
      *((_QWORD *)v42 + 6) = v68;
      *((_QWORD *)v42 + 7) = v31;
      *((_QWORD *)v42 + 8) = v67;
      *((_QWORD *)v42 + 9) = v38;
      *((_QWORD *)v42 + 10) = v66;
      *((_QWORD *)v42 + 11) = v39;
      *((_QWORD *)v42 + 12) = v40;
      v44 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v42[*(int *)(v44 + 32)], v75, v78);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v65;
      *(_QWORD *)v41 = v73;
      *((_QWORD *)v41 + 1) = v45;
      v46 = v64;
      *((_QWORD *)v41 + 2) = v72;
      *((_QWORD *)v41 + 3) = v46;
      v47 = v59;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v41[v59[6]], v60, v81);
      v48 = &v41[v47[7]];
      v49 = type metadata accessor for Artist(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v48, v82, v49);
    }
    swift_bridgeObjectRelease();
  }
  v51 = type metadata accessor for RazzmatazzAPI.CustomError(0);
  v52 = sub_100006924(&qword_10049BEF0, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10039A1B4);
  swift_allocError(v51, v52, 0, 0);
  v54 = v53;
  v55 = *(int *)(sub_100005574(&qword_10049BEF8) + 48);
  sub_100082248((uint64_t)a1, v54, type metadata accessor for ShazamEvent);
  *(_QWORD *)(v54 + v55) = a2;
  swift_storeEnumTagMultiPayload(v54, v51, 1);
  swift_willThrow(v56);
  v57 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v82, v57);
  return sub_100006798((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t sub_1002A8B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_10049BEB8 + dword_10049BEB8);
  v4 = (_QWORD *)swift_task_alloc(unk_10049BEBC);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1002A8B74;
  return v6(a2);
}

uint64_t sub_1002A8B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002A8BD0, 0, 0);
}

uint64_t sub_1002A8BD0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A8BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_1002A8C08, 0, 0);
}

uint64_t sub_1002A8C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v9 + 296);
  *(_QWORD *)(v9 + 280) = sub_1002AB264(0, *(_QWORD *)(*(_QWORD *)(v9 + 312) + 16));
  v10 = swift_task_alloc(48);
  *(_QWORD *)(v9 + 320) = v10;
  *(_QWORD *)(v10 + 16) = v9 + 272;
  *(_OWORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 40) = v9 + 280;
  v11 = sub_100005574(&qword_10049BE78);
  *(_QWORD *)(v9 + 328) = v11;
  if (!sub_10037B730(2, 18, 0, 0))
    return swift_task_switch(sub_1002A8D88, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v9 + 336) = v12;
  *v12 = v9;
  v12[1] = sub_1002A8D1C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &unk_10049BE70, v10, v11, a9);
}

uint64_t sub_1002A8D1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 336));
  if (v0)
  {
    *(_QWORD *)(v2 + 376) = v0;
    v3 = sub_1002A91AC;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v3 = sub_1002A9094;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002A8D88()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[41]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10049BE80
                                                                                    + dword_10049BE80);
  v2 = (_QWORD *)swift_task_alloc(unk_10049BE84);
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_1002A8E18;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_1002A8E18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1002A8F5C, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 360) = v5;
  v6 = sub_100005574(&qword_10049BE88);
  *v5 = v3;
  v5[1] = sub_1002A8EC4;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_1002A8EC4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_1002A8F18, 0, 0);
}

uint64_t sub_1002A8F18()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  return swift_task_switch(sub_1002A9094, 0, 0);
}

uint64_t sub_1002A8F5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_100005574(&qword_100499F80);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 368) = v1;
  v2 = sub_100005574(&qword_10049BE88);
  *v1 = v0;
  v1[1] = sub_1002A8FEC;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_1002A8FEC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 368));
  return swift_task_switch(sub_1002A9040, 0, 0);
}

uint64_t sub_1002A9040()
{
  uint64_t v0;
  __n128 v1;

  v1.n128_f64[0] = swift_taskGroup_destroy(v0 + 16);
  swift_willThrow(v1);
  *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 352);
  return swift_task_switch(sub_1002A91AC, 0, 0);
}

uint64_t sub_1002A9094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 280), 2);
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_100258970(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_100258970((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v4);
}

uint64_t sub_1002A91AC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002A91E8()
{
  return 0x656372756F736572;
}

uint64_t sub_1002A9204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease(0xE900000000000073);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656372756F736572, 0xE900000000000073, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1002A92A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AF890();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A92CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AF890();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_1002A92F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1002AF76C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1002A931C(char *a1, char *a2)
{
  return sub_1002524E8(*a1, *a2);
}

Swift::Int sub_1002A9328()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002A93B0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002A9414()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002A9498@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459E78;
  return sub_1002AA18C(v2, a1, a2);
}

void sub_1002A94A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x652D6D617A616873;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xED000073746E6576;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1002A94EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x652D6D617A616873;
}

uint64_t sub_1002A9530@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459E78;
  return sub_1002AA264(a1, v2, a2);
}

uint64_t sub_1002A953C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1654();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A9564(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1654();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A958C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002AA9D4((uint64_t (*)(void))sub_1002AF9A0, a1);
}

uint64_t sub_1002A95A8(char *a1, char *a2)
{
  return sub_100252844(*a1, *a2);
}

Swift::Int sub_1002A95B4()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1002A9614(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(a1, v2, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

Swift::Int sub_1002A9648()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1002A96A4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459EC8;
  return sub_1002AA18C(v2, a1, a2);
}

void sub_1002A96B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1002A96D4()
{
  _BYTE *v0;

  if (*v0)
    return 1701669236;
  else
    return 1701667182;
}

uint64_t sub_1002A96F4@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459EC8;
  return sub_1002AA264(a1, v2, a2);
}

uint64_t sub_1002A9700(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AF918();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A9728(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002AF918();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A9750@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;

  v66 = a2;
  v65 = type metadata accessor for Date(0);
  v64 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v73 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator(0);
  v80 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin();
  v82 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin();
  v78 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v75 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v71 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v81 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin();
  v74 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v79 = (char *)v58 - v10;
  sub_100005574(&qword_10049C110);
  __chkstk_darwin();
  v87 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for TimeZone(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin();
  v67 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v85 = (char *)v58 - v13;
  v14 = sub_100005574(&qword_10049C118);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  v23 = a1;
  sub_10000ABC8(a1, v21);
  v24 = sub_1002AF918();
  v25 = v89;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.CodingKeys, &type metadata for ShazamEvent.Attributes.CodingKeys, v24, v21, v22);
  if (v25)
    return sub_10000682C(a1);
  v26 = v87;
  v89 = v15;
  v63 = v18;
  v27 = v86;
  v28 = v88;
  LOBYTE(v90) = 0;
  *(_QWORD *)v20 = KeyedDecodingContainer.decode(_:forKey:)(&v90, v14);
  *((_QWORD *)v20 + 1) = v30;
  v94 = 1;
  v31 = sub_1002AF95C();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v90, &type metadata for ShazamEvent.Attributes.Time, &v94, v14, &type metadata for ShazamEvent.Attributes.Time, v31);
  v61 = v17;
  v62 = v14;
  v59 = v90;
  v32 = v92;
  v60 = v91;
  v33 = v93;
  v34 = (uint64_t)v26;
  TimeZone.init(identifier:)(v92, v93);
  v35 = v26;
  v36 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v35, 1, v28) == 1)
  {
    sub_100008758(v34, &qword_10049C110);
    v37 = type metadata accessor for RazzmatazzAPI.CustomError(0);
    v38 = sub_100006924(&qword_10049BEF0, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10039A1B4);
    swift_allocError(v37, v38, 0, 0);
    *v39 = v32;
    v39[1] = v33;
    swift_storeEnumTagMultiPayload(v39, v37, 0);
    swift_bridgeObjectRetain();
    swift_willThrow(v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v62);
    sub_10000682C(v23);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v58[1] = v33;
    v41 = v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v85, v34, v36);
    v42 = *(int *)(v63 + 24);
    v87 = v20;
    v43 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v43(&v20[v42], v41, v36);
    v44 = v67;
    v43(v67, v41, v36);
    v45 = v71;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v71, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v69);
    v46 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v70 + 104))(v75, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v72);
    v47 = v78;
    (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v78, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v77);
    v48 = v82;
    (*(void (**)(char *, _QWORD, uint64_t))(v80 + 104))(v82, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v83);
    v49 = v79;
    Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)(v45, v46, v47, v48, 0, v44);
    v90 = v59;
    v91 = v60;
    v50 = v81;
    v51 = v74;
    v52 = v84;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v74, v49, v84);
    v53 = sub_100006924(&qword_10049C130, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
    v54 = v73;
    Date.init<A>(_:strategy:)(&v90, v51, v52, v53);
    v55 = v88;
    v56 = v89;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v52);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v85, v55);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v62);
    v57 = (uint64_t)v87;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v87[*(int *)(v63 + 20)], v54, v65);
    sub_100082248(v57, v66, type metadata accessor for ShazamEvent.Attributes);
    sub_10000682C(v23);
    return sub_100006798(v57, type metadata accessor for ShazamEvent.Attributes);
  }
}

uint64_t sub_1002A9F34()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E6F7A656D6974;
  else
    return 0x6D69547472617473;
}

uint64_t sub_1002A9F74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002AFB74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002A9F98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B17CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A9FC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B17CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A9FE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1002AFC70(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1002AA014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A9750(a1, a2);
}

uint64_t sub_1002AA028(char *a1, char *a2)
{
  return sub_1002527A4(*a1, *a2);
}

Swift::Int sub_1002AA034()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002AA0B0(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1002AA108()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002AA180@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459F18;
  return sub_1002AA18C(v2, a1, a2);
}

uint64_t sub_1002AA18C@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_1002AA1E4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x73747369747261;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1002AA220()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x73747369747261;
}

uint64_t sub_1002AA258@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_100459F18;
  return sub_1002AA264(a1, v2, a2);
}

uint64_t sub_1002AA264@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

uint64_t sub_1002AA2C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B18DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AA2E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B18DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002AA310@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v21 = a2;
  v3 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_100005574(&qword_10049C150);
  v6 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v12 = a1[4];
  v24 = a1;
  sub_10000ABC8(a1, v13);
  v14 = sub_1002B0FAC();
  v22 = v8;
  v15 = v25;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.CodingKeys, &type metadata for ShazamEvent.CodingKeys, v14, v13, v12);
  if (v15)
    return sub_10000682C(v24);
  LOBYTE(v26) = 0;
  *v11 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v23);
  v11[1] = v16;
  LOBYTE(v26) = 1;
  v17 = sub_100006924(&qword_10049C160, type metadata accessor for ShazamEvent.Attributes, (uint64_t)&unk_10039A18C);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v5, v3, &v26, v23, v3, v17);
  sub_1000648AC((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for ShazamEvent.Attributes);
  v27 = 2;
  v18 = sub_1002B0FF0();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v26, &type metadata for ShazamEvent.Relationships, &v27, v23, &type metadata for ShazamEvent.Relationships, v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v23);
  *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v26;
  sub_100082248((uint64_t)v11, v21, type metadata accessor for ShazamEvent);
  sub_10000682C(v24);
  return sub_100006798((uint64_t)v11, type metadata accessor for ShazamEvent);
}

uint64_t sub_1002AA5C4()
{
  return 25705;
}

uint64_t sub_1002AA5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1002AA64C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B22C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AA674(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B22C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002AA69C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_100005574(&qword_10049C350);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002B22C8();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_10000682C(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_1002AA7C0(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = sub_100005574(&qword_10049C360);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002B22C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002AA8AC()
{
  return 1635017060;
}

uint64_t sub_1002AA8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1635017060, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1002AA940(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1EBC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AA968(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1EBC();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_1002AA990@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1002B0178(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1002AA9B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002AA9D4((uint64_t (*)(void))sub_1002AFE1C, a1);
}

uint64_t sub_1002AA9D4@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1002AA9FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7475626972747461;
  if (*v0 != 1)
    v1 = 0x6E6F6974616C6572;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1002AAA5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002B02C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002AAA80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B0FAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AAAA8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B0FAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002AAAD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002AA310(a1, a2);
}

uint64_t sub_1002AAAE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002526AC(*a1, *a2);
}

Swift::Int sub_1002AAAF0()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1002AAB80(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (*v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1002AABEC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1002AAC78@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002B0430(*a1);
  *a2 = result;
  return result;
}

void sub_1002AACA4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736572646461;
  if (v2 != 1)
  {
    v5 = 7300455;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1002AACF4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736572646461;
  if (*v0 != 1)
    v1 = 7300455;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

unint64_t sub_1002AAD40@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1002B0430(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002AAD64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1810();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AAD8C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1810();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1002AADB4()
{
  return 0xD000000000000011;
}

uint64_t sub_1002AADD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002B07D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1002AADF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1DF0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AAE20(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1DF0();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1002AAE48@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1002B0858(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1002AAE88()
{
  _BYTE *v0;

  if (*v0)
    return 6778476;
  else
    return 7627116;
}

uint64_t sub_1002AAEAC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002B09AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002AAED0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1E78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AAEF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B1E78();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002AAF20(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_1002B0A7C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

double sub_1002AAF48@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_1002B0478(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1002AAFA0()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 25705;
}

uint64_t sub_1002AAFD4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002B0BD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002AAFF8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B0F24();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002AB020(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002B0F24();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1002AB048@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_1002B0CB8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1002AB0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_1004A3D88);
  sub_1000086B4(v2, (uint64_t)qword_1004A3D88);
  return static Logger.music(_:)(0x6174616D7A7A6152, 0xEA00000000007A7ALL);
}

void sub_1002AB104(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100399FA8);
  v5 = swift_getKeyPath(&unk_100399FD0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_1002AB180(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100399FA8);
  v5 = swift_getKeyPath(&unk_100399FD0);
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1002AB1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = sub_100006924(&qword_10049B8F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return dispatch thunk of static Comparable.< infix(_:_:)(a1, a2, v4, v5) & 1;
}

_QWORD *sub_1002AB264(_QWORD *result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      v4 = sub_100005574(&qword_100499E70);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = v3;
      if (a2 != 1)
      {
        v5[5] = v3;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = v3;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_1002AB308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  v7 = sub_100005574(&qword_10049BE90);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v6[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artist(0);
  v6[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[21] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v6[22] = v11;
  v6[23] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10049AEC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[24] = swift_task_alloc(v12);
  v6[25] = swift_task_alloc(v12);
  v13 = sub_100005574(&qword_10049BE98);
  v6[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[27] = v14;
  v6[28] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10049BEA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[29] = swift_task_alloc(v15);
  v6[30] = swift_task_alloc(v15);
  return swift_task_switch(sub_1002AB434, 0, 0);
}

uint64_t sub_1002AB434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v46;
  char v47;
  _QWORD *v48;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v2 = *(_QWORD *)(v1 + 216);
  v52 = *(_QWORD *)(v1 + 168);
  v53 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 16);
  swift_bridgeObjectRetain();
  v4 = 0;
  v51 = v2;
  v50 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 232), 1, 1, *(_QWORD *)(v1 + 208));
      v6 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_20;
      }
      v7 = *(unint64_t **)(v1 + 232);
      v58 = *(_QWORD *)(v1 + 208);
      v8 = *(_QWORD *)(v1 + 160);
      v6 = v4 + 1;
      v9 = *(_QWORD *)(v1 + 224) + *(int *)(v53 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v52 + 16))(v9, *(_QWORD *)(v1 + 104)+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v4, v8);
      v10 = (char *)v7 + *(int *)(v53 + 48);
      *v7 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v10, v9, v8);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v58);
    }
    v11 = *(_QWORD *)(v1 + 240);
    v12 = *(_QWORD *)(v1 + 208);
    sub_1000149A8(*(_QWORD *)(v1 + 232), v11, &qword_10049BEA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v11, 1, v12) == 1)
      break;
    v59 = v6;
    v13 = *(uint64_t **)(v1 + 240);
    v14 = *(_QWORD *)(v1 + 200);
    v15 = *(_QWORD *)(v1 + 176);
    v16 = *(char **)(v1 + 184);
    v17 = *(_QWORD *)(v1 + 160);
    v18 = *(_QWORD *)(v1 + 120);
    v56 = *(_QWORD *)(v1 + 112);
    v57 = *(_QWORD *)(v1 + 192);
    v54 = v14;
    v55 = *v13;
    v19 = (char *)v13 + *(int *)(v53 + 48);
    v20 = type metadata accessor for TaskPriority(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v14, 1, 1, v20);
    v22 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
    v22((uint64_t)v16, v19, v17);
    v23 = *(unsigned __int8 *)(v52 + 80);
    v24 = (v23 + 56) & ~v23;
    v25 = (_QWORD *)swift_allocObject(&unk_100460760, v24 + v15, v23 | 7);
    v25[2] = 0;
    v26 = v25 + 2;
    v25[3] = 0;
    v25[4] = v55;
    v25[5] = v56;
    v25[6] = v18;
    v22((uint64_t)v25 + v24, v16, v17);
    sub_1002ADC38(v54, v57);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v57, 1, v20);
    swift_retain(v18);
    v28 = *(_QWORD *)(v1 + 192);
    if ((_DWORD)v17 == 1)
    {
      sub_100008758(*(_QWORD *)(v1 + 192), &qword_10049AEC0);
      v29 = 0;
      v30 = *v26;
      if (*v26)
        goto LABEL_10;
    }
    else
    {
      v36 = TaskPriority.rawValue.getter(v27);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v28, v20);
      v29 = v36;
      v30 = *v26;
      if (*v26)
      {
LABEL_10:
        v31 = v25[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v30);
        v33 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v31);
        v35 = v34;
        swift_unknownObjectRelease(v30);
        goto LABEL_13;
      }
    }
    v33 = 0;
    v35 = 0;
LABEL_13:
    v2 = v51;
    v37 = **(_QWORD **)(v1 + 96);
    v38 = sub_100005574(&qword_10049BE78);
    v39 = v35 | v33;
    if (v35 | v33)
    {
      v39 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v33;
      *(_QWORD *)(v1 + 40) = v35;
    }
    v0 = *(_QWORD **)(v1 + 200);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v39;
    *(_QWORD *)(v1 + 64) = v37;
    v5 = swift_task_create(v29 | 0x3100, v1 + 48, v38, &unk_10049BEB0, v25);
    swift_release(v5);
    sub_100008758((uint64_t)v0, &qword_10049AEC0);
    v3 = v50;
    v4 = v59;
  }
  v40 = *(_QWORD **)(v1 + 128);
  v41 = *(uint64_t **)(v1 + 96);
  swift_bridgeObjectRelease();
  v42 = *v41;
  v43 = sub_100005574(&qword_10049BE78);
  v44 = sub_100005574(&qword_100499F80);
  ThrowingTaskGroup.makeAsyncIterator()(v42, v43, v44, &protocol self-conformance witness table for Error);
  v0 = (_QWORD *)*v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v40);
  *v40 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_20:
  v0 = sub_100378350(v0);
LABEL_16:
  v46 = *(_QWORD **)(v1 + 128);
  v47 = swift_isUniquelyReferenced_nonNull_native(v0);
  *v46 = v0;
  if ((v47 & 1) == 0)
    v0 = sub_100378350(v0);
  **(_QWORD **)(v1 + 128) = v0;
  v48 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 248) = v48;
  *v48 = v1;
  v48[1] = sub_1002AB870;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, *(_QWORD *)(v1 + 136), v1 + 88);
}

uint64_t sub_1002AB870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 248));
  if (v0)
    v2 = sub_1002ABA3C;
  else
    v2 = sub_1002AB8D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002AB8D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 80);
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v13, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v4;
  if ((result & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  else
  {
    v14 = *(uint64_t **)(v0 + 128);
    result = (uint64_t)sub_100378350(v4);
    v4 = (_QWORD *)result;
    *v14 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v3 < v4[2])
      {
        swift_bridgeObjectRelease();
        v4[v3 + 4] = v1;
        v6 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
        *(_QWORD *)(v0 + 256) = v6;
        *v6 = v0;
        v6[1] = sub_1002ABADC;
        return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1002ABA3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v7, *(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002ABADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  if (v0)
    v2 = sub_1002ABA3C;
  else
    v2 = sub_1002AB8D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002ABB40(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10049BE80
                                                                                     + dword_10049BE80);
  v13 = (_QWORD *)swift_task_alloc(unk_10049BE84);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_10000EA88;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_1002ABBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  int *v11;

  v7[3] = a1;
  v7[4] = a4;
  v11 = (int *)((char *)a5 + *a5);
  v9 = (_QWORD *)swift_task_alloc(a5[1]);
  v7[5] = v9;
  *v9 = v7;
  v9[1] = sub_1002ABC58;
  return ((uint64_t (*)(_QWORD *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t sub_1002ABC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1002ABCD4;
  else
    v3 = sub_1002ABCBC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002ABCBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  *v1 = *(_QWORD *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002ABCD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1002ABCE0(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v6, 0),
        result = 0,
        (v8 & 1) != 0))
  {
    v10 = *((_QWORD *)a1 + 2);
    v11 = *((_QWORD *)a1 + 3);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    if (v10 == v12 && v11 == v13)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    result = 0;
    if ((v15 & 1) != 0)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
  }
  return result;
}

uint64_t sub_1002ABD7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[7] = a1;
  v2 = type metadata accessor for URLRequest(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[12] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v6);
  v1[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = type metadata accessor for Date(0);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004991A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v14);
  v1[28] = swift_task_alloc(v14);
  v15 = sub_100005574(&qword_10049BEC0);
  v1[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URLComponents(0);
  v1[30] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[31] = v17;
  v1[32] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002ABF34, 0, 0);
}

uint64_t sub_1002ABF34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;

  v2 = Artist.catalogID.getter(a1);
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v3;
  if (!v3)
    goto LABEL_6;
  v4 = v2;
  v5 = v3;
  v6 = *(_QWORD *)(v1 + 224);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  URL.init(string:)(0xD000000000000030, 0x80000001003B9A10);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  result = v9(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v63 = v4;
  v65 = v9;
  v11 = *(_QWORD *)(v1 + 240);
  v12 = *(_QWORD *)(v1 + 248);
  v14 = *(_QWORD *)(v1 + 224);
  v13 = *(_QWORD *)(v1 + 232);
  v15 = *(_QWORD *)(v1 + 88);
  v16 = *(_QWORD *)(v1 + 96);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v14, 0);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 280) = v17;
  v17(v14, v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v1 + 208);
  v62 = *(_QWORD *)(v1 + 216);
  v52 = *(_QWORD *)(v1 + 200);
  v53 = *(_QWORD *)(v1 + 192);
  v59 = *(_QWORD *)(v1 + 176);
  v60 = *(_QWORD *)(v1 + 168);
  v19 = *(_QWORD *)(v1 + 144);
  v56 = *(_QWORD *)(v1 + 152);
  v57 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 136);
  v54 = *(_QWORD *)(v1 + 184);
  v55 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 120);
  v61 = *(_QWORD *)(v1 + 88);
  (*(void (**)(void))(*(_QWORD *)(v1 + 248) + 32))();
  v22 = sub_100005574(&qword_10049BEC8);
  v23 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v58 = swift_allocObject(v22, ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ 3 * *(_QWORD *)(v23 + 72), *(unsigned __int8 *)(v23 + 80) | 7);
  *(_OWORD *)(v58 + 16) = xmmword_100384A40;
  v24 = static Locale.current.getter(v58);
  v25 = Locale.identifier.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v18, v53);
  URLQueryItem.init(name:value:)(108, 0xE100000000000000, v25, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)(0x6449747369747261, 0xE800000000000000, v63, v5);
  v28 = swift_bridgeObjectRelease();
  v29 = static Date.now.getter(v28);
  v30 = static FormatStyle<>.iso8601.getter(v29);
  Date.ISO8601FormatStyle.day()(v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8);
  v32 = v31(v20, v21);
  Date.ISO8601FormatStyle.month()(v32);
  v33 = v31(v19, v21);
  Date.ISO8601FormatStyle.year()(v33);
  v31(v56, v21);
  v34 = sub_100006924(&qword_10049BED0, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
  Date.formatted<A>(_:)((_QWORD *)(v1 + 16), v57, v21, v34);
  v31(v57, v21);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v54, v60);
  URLQueryItem.init(name:value:)(1836020326, 0xE400000000000000, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease();
  v35 = URLComponents.queryItems.setter(v58);
  URLComponents.url.getter(v35);
  v36 = v65(v62, 1, v61);
  v37 = *(_QWORD *)(v1 + 216);
  if (v36 == 1)
  {
    swift_bridgeObjectRelease();
    sub_100008758(v37, &qword_1004991A0);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
LABEL_6:
    v38 = *(_QWORD *)(v1 + 224);
    v39 = *(_QWORD *)(v1 + 232);
    v41 = *(_QWORD *)(v1 + 208);
    v40 = *(_QWORD *)(v1 + 216);
    v42 = *(_QWORD *)(v1 + 184);
    v44 = *(_QWORD *)(v1 + 152);
    v43 = *(_QWORD *)(v1 + 160);
    v46 = *(_QWORD *)(v1 + 136);
    v45 = *(_QWORD *)(v1 + 144);
    v64 = *(_QWORD *)(v1 + 112);
    v66 = *(_QWORD *)(v1 + 104);
    v67 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 256));
    swift_task_dealloc(v39);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(_swiftEmptyArrayStorage);
  }
  v48 = *(_QWORD *)(v1 + 104);
  v47 = *(_QWORD *)(v1 + 112);
  v49 = *(_QWORD *)(v1 + 88);
  v50 = *(_QWORD *)(v1 + 96);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 32))(v47, *(_QWORD *)(v1 + 216), v49);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v48, v47, v49);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v48, 0, 60.0);
  *(_QWORD *)(v1 + 288) = objc_msgSend((id)objc_opt_self(NSURLSession), "sharedSession");
  v51 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(for:delegate:)[1]);
  *(_QWORD *)(v1 + 296) = v51;
  *v51 = v1;
  v51[1] = sub_1002AC40C;
  return NSURLSession.data(for:delegate:)(*(_QWORD *)(v1 + 80), 0);
}

uint64_t sub_1002AC40C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 296);
  v6[38] = a1;
  v6[39] = a2;
  v6[40] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_1002AC8B8;
  }
  else
  {
    v9 = (void *)v6[36];

    v8 = sub_1002AC494;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1002AC494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55[2];

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = JSONDecoder.init()();
  v6 = sub_1002ADC80();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Root, v3, v2, &type metadata for Root, v6);
  v8 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 312);
  if (v1)
  {
    sub_1000067E8(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    swift_release(v5);
    if (qword_100498AC8 != -1)
      swift_once(&qword_100498AC8, sub_1002AB0A4);
    v10 = type metadata accessor for Logger(0, v9);
    sub_1000086B4(v10, (uint64_t)qword_1004A3D88);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain();
    v11 = swift_errorRetain(v1);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 272);
    if (v14)
    {
      v16 = *(_QWORD *)(v0 + 264);
      v17 = swift_slowAlloc(22, -1);
      v18 = swift_slowAlloc(64, -1);
      v55[0] = v18;
      *(_DWORD *)v17 = 136315394;
      swift_bridgeObjectRetain();
      v19 = (char *)MusicItemID.description.getter(v16, v15);
      v21 = v20;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 4) = sub_100249A1C(v19, v21, v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v15, 2);
      *(_WORD *)(v17 + 12) = 2080;
      *(_QWORD *)(v0 + 48) = v1;
      swift_errorRetain(v1);
      v22 = sub_100005574(&qword_100499F80);
      v23 = (char *)String.init<A>(describing:)(v0 + 48, v22);
      *(_QWORD *)(v17 + 14) = sub_100249A1C(v23, v24, v55);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Could not load for artistID=%s with error=%s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v30 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v31 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 80);
    v32 = *(_QWORD *)(v0 + 88);
    v34 = *(_QWORD *)(v0 + 64);
    v35 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    v30(v31, v32);
    v54 = _swiftEmptyArrayStorage;
  }
  else
  {
    v50 = *(_QWORD *)(v0 + 112);
    v52 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v25 = *(_QWORD *)(v0 + 72);
    v47 = *(_QWORD *)(v0 + 80);
    v48 = *(_QWORD *)(v0 + 88);
    v26 = *(_QWORD *)(v0 + 56);
    v46 = *(_QWORD *)(v0 + 64);
    swift_release(v5);
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v0 + 32);
    v27 = *(_QWORD *)(v0 + 40);
    v29 = (_QWORD *)swift_task_alloc(48);
    v29[2] = v28;
    v29[3] = v27;
    v29[4] = v26;
    swift_bridgeObjectRetain();
    v54 = (_QWORD *)sub_1002A718C((void (*)(uint64_t))sub_1002ADCC4, (uint64_t)v29, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000067E8(v8, v7);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v47, v46);
    v52(v50, v48);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v37 = *(_QWORD *)(v0 + 224);
  v36 = *(_QWORD *)(v0 + 232);
  v39 = *(_QWORD *)(v0 + 208);
  v38 = *(_QWORD *)(v0 + 216);
  v40 = *(_QWORD *)(v0 + 184);
  v42 = *(_QWORD *)(v0 + 152);
  v41 = *(_QWORD *)(v0 + 160);
  v43 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 104);
  v53 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v43);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v54);
}

uint64_t sub_1002AC8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_QWORD *)(v0 + 320);
  if (qword_100498AC8 != -1)
    swift_once(&qword_100498AC8, sub_1002AB0A4);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)qword_1004A3D88);
  swift_errorRetain(v2);
  swift_bridgeObjectRetain();
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 272);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 264);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v37 = v11;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain();
    v12 = (char *)MusicItemID.description.getter(v9, v8);
    v14 = v13;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 4) = sub_100249A1C(v12, v14, &v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v8, 2);
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v2;
    swift_errorRetain(v2);
    v15 = sub_100005574(&qword_100499F80);
    v16 = (char *)String.init<A>(describing:)(v0 + 48, v15);
    *(_QWORD *)(v10 + 14) = sub_100249A1C(v16, v17, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not load for artistID=%s with error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v18 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v19 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 80);
  v20 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  swift_errorRelease(v2);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v18(v19, v20);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v24 = *(_QWORD *)(v0 + 224);
  v25 = *(_QWORD *)(v0 + 232);
  v27 = *(_QWORD *)(v0 + 208);
  v26 = *(_QWORD *)(v0 + 216);
  v28 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 152);
  v29 = *(_QWORD *)(v0 + 160);
  v32 = *(_QWORD *)(v0 + 136);
  v31 = *(_QWORD *)(v0 + 144);
  v34 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v36 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v25);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

void sub_1002ACBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[3];
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  sub_1000149A8(a1, (uint64_t)v13, &qword_10049BE00);
  if (*((_QWORD *)&v13[0] + 1))
  {
    v14 = v13[0];
    v15 = v13[1];
    v16 = v13[2];
    v1 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    v2 = JSONEncoder.init()();
    v12[0] = v14;
    v12[1] = v15;
    v12[2] = v16;
    v3 = sub_1002ACF34();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for RazzmatazzController.Location, v3);
    v8 = v7;
    swift_release(v2);
    v17 = v14;
    sub_100052668((uint64_t)&v17);
    v18 = v15;
    sub_100052668((uint64_t)&v18);
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11);

    sub_1000067E8(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5);

  }
}

unint64_t sub_1002ACF34()
{
  unint64_t result;

  result = qword_10049BE08;
  if (!qword_10049BE08)
  {
    result = swift_getWitnessTable(&unk_100399E78, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10049BE08);
  }
  return result;
}

void sub_1002ACF78(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  _QWORD v18[2];
  _OWORD v19[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_1000149A8((uint64_t)v19, (uint64_t)v15, &qword_10049B130);
  if (!v16)
  {
    sub_100008758((uint64_t)v15, &qword_10049B130);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v18, v15, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0uLL;
    goto LABEL_9;
  }
  v6 = v18[0];
  v5 = v18[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONDecoder.init()();
  v9 = sub_1002ADD1C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for RazzmatazzController.Location, v6, v5, &type metadata for RazzmatazzController.Location, v9);
  sub_1000067E8(v6, v5);
  swift_release(v8);
  v10 = v15[0];
  v11 = v15[1];
  v12 = v15[2];
  v13 = v16;
  v14 = v17;
LABEL_9:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_OWORD *)(a1 + 32) = v14;
}

uint64_t sub_1002AD2C4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1002AD2DC, 0, 0);
}

uint64_t sub_1002AD2DC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[2];
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_100399FF0);
  v3 = sub_10008FE98(&qword_10049BE48, (uint64_t *)&unk_10049A220, (void (*)(void))sub_1002ADA30, (uint64_t)&protocol conformance descriptor for <A> A?);
  v4 = Array.removingDuplicates<A>(with:)(KeyPath, v1, v3);
  v0[3] = v4;
  swift_release(KeyPath);
  v7 = (char *)&dword_10049BE60 + dword_10049BE60;
  v5 = (_QWORD *)swift_task_alloc(unk_10049BE64);
  v0[4] = v5;
  *v5 = v0;
  v5[1] = sub_1002AD3A4;
  return ((uint64_t (*)(void *, _QWORD, uint64_t))v7)(&unk_10049BE58, 0, v4);
}

uint64_t sub_1002AD3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_1002AD408, 0, 0);
}

uint64_t sub_1002AD408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v5 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v5);
  }
  v3 = (uint64_t *)(v1 + 32);
  result = swift_bridgeObjectRetain();
  v5 = _swiftEmptyArrayStorage;
  while (1)
  {
    v6 = *v3;
    v7 = *(_QWORD *)(*v3 + 16);
    v8 = v5[2];
    v9 = v8 + v7;
    if (__OFADD__(v8, v7))
      break;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native(v5);
    if ((_DWORD)result && v9 <= v5[3] >> 1)
    {
      if (*(_QWORD *)(v6 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v8 <= v9)
        v10 = v8 + v7;
      else
        v10 = v8;
      result = sub_10025885C(result, v10, 1, v5);
      v5 = (_QWORD *)result;
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_14:
        v11 = v5[2];
        v12 = (v5[3] >> 1) - v11;
        result = type metadata accessor for Razzmatazz(0);
        if (v12 < v7)
          goto LABEL_23;
        v13 = *(_QWORD *)(result - 8);
        v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        result = swift_arrayInitWithCopy((char *)v5 + v14 + *(_QWORD *)(v13 + 72) * v11, v6 + v14, v7, result);
        if (v7)
        {
          v15 = v5[2];
          v16 = __OFADD__(v15, v7);
          v17 = v15 + v7;
          if (v16)
            goto LABEL_24;
          v5[2] = v17;
        }
        goto LABEL_4;
      }
    }
    if (v7)
    {
      __break(1u);
      break;
    }
LABEL_4:
    result = swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1002AD570(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1002AD72C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = sub_100005574(&qword_10049BE10);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002AD970();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v27 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v27, v5);
  v14 = v13;
  v26 = 1;
  swift_bridgeObjectRetain();
  v22 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
  v23 = v15;
  v25 = 2;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
  v17 = v16;
  v24 = 3;
  KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10000682C(a1);
  v20 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v17;
  a2[5] = v19;
  return result;
}

unint64_t sub_1002AD970()
{
  unint64_t result;

  result = qword_10049BE18;
  if (!qword_10049BE18)
  {
    result = swift_getWitnessTable(&unk_10039A21C, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049BE18);
  }
  return result;
}

unint64_t sub_1002AD9B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B8E8;
  if (!qword_10049B8E8)
  {
    v1 = sub_100005600(&qword_100499E80);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10049B8E8);
  }
  return result;
}

uint64_t sub_1002ADA08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = Artist.catalogID.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1002ADA30()
{
  unint64_t result;

  result = qword_10049BE50;
  if (!qword_10049BE50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_10049BE50);
  }
  return result;
}

uint64_t sub_1002ADA74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_10049BE6C);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_10049BE68
                                                                                         + dword_10049BE68))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1002ADB08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002ADB84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_10049BEAC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_10049BEA8
                                                                                              + dword_10049BEA8))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1002ADC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049AEC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002ADC80()
{
  unint64_t result;

  result = qword_10049BED8;
  if (!qword_10049BED8)
  {
    result = swift_getWitnessTable(&unk_10039A1F4, &type metadata for Root);
    atomic_store(result, (unint64_t *)&qword_10049BED8);
  }
  return result;
}

uint64_t sub_1002ADCC4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1002A83C8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049C0A0, (uint64_t)&nominal type descriptor for ShazamEvent);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049C010, (uint64_t)&nominal type descriptor for RazzmatazzAPI.CustomError);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049BF60, (uint64_t)&nominal type descriptor for ShazamEvent.Attributes);
}

unint64_t sub_1002ADD1C()
{
  unint64_t result;

  result = qword_10049BF00;
  if (!qword_10049BF00)
  {
    result = swift_getWitnessTable(&unk_100399EA0, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_10049BF00);
  }
  return result;
}

uint64_t *sub_1002ADD60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_1002ADE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_1002ADEAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_1002ADF58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *sub_1002AE008(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_1002AE0A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1002AE140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AE14C);
}

uint64_t sub_1002AE14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1002AE1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AE1F8);
}

uint64_t sub_1002AE1F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1002AE294(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_10039A028;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TimeZone(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

}

_QWORD *initializeWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

_QWORD *assignWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[10] = a2[10];
  v9 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[12];
  v11 = (void *)a1[12];
  a1[12] = v10;
  v12 = v10;

  return a1;
}

_QWORD *assignWithTake for VenueElement(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  a1[10] = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(a1[11]);
  v14 = (void *)a1[12];
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement()
{
  return &type metadata for VenueElement;
}

uint64_t *sub_1002AE5B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v29);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    if (EnumCaseMultiPayload == 1)
    {
      v33 = type metadata accessor for ShazamEvent(0);
      v9 = *(int *)(v33 + 20);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      v13 = type metadata accessor for ShazamEvent.Attributes(0);
      v14 = *(int *)(v13 + 20);
      v31 = &v11[v14];
      v32 = (char *)v10 + v14;
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v32, v31, v15);
      v17 = *(int *)(v13 + 24);
      v18 = (char *)v10 + v17;
      v19 = &v11[v17];
      v20 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(int *)(v33 + 24);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = sub_100005574(&qword_10049BEF8);
      *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v25 + 48));
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_1002AE750(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for ShazamEvent.Attributes(0);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v5 + *(int *)(v6 + 24);
    v10 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100005574(&qword_10049BEF8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1002AE844(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    v29 = type metadata accessor for ShazamEvent(0);
    v30 = v3;
    v8 = *(int *)(v29 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *v9 = *(_QWORD *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v28 = (char *)v9 + v13;
    v14 = &v10[v13];
    v15 = type metadata accessor for Date(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v28, v14, v15);
    v17 = *(int *)(v12 + 24);
    v18 = (char *)v9 + v17;
    v19 = &v10[v17];
    v3 = v30;
    v20 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(int *)(v29 + 24);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_100005574(&qword_10049BEF8);
    *(_QWORD *)((char *)a1 + *(int *)(v25 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 48));
    v26 = 1;
  }
  else
  {
    v26 = 0;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload(a1, v3, v26);
  return a1;
}

_QWORD *sub_1002AE9B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v26 = type metadata accessor for ShazamEvent(0);
      v27 = a3;
      v7 = *(int *)(v26 + 20);
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (char *)a2 + v7;
      *v8 = *(_QWORD *)((char *)a2 + v7);
      v8[1] = *(_QWORD *)((char *)a2 + v7 + 8);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v25 = (char *)v8 + v11;
      v12 = &v9[v11];
      v13 = type metadata accessor for Date(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v25, v12, v13);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = &v9[v15];
      a3 = v27;
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = *(int *)(v26 + 24);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = sub_100005574(&qword_10049BEF8);
      *(_QWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v22 + 48));
      v23 = 1;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload(a1, a3, v23);
  }
  return a1;
}

_OWORD *sub_1002AEB4C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for ShazamEvent(0);
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for ShazamEvent.Attributes(0);
    v11 = *(int *)(v10 + 20);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = *(int *)(v10 + 24);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    v19 = sub_100005574(&qword_10049BEF8);
    *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1002AEC80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for ShazamEvent(0);
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = *(int *)(v10 + 24);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      v19 = sub_100005574(&qword_10049BEF8);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002AEDCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_10039A028;
  result = type metadata accessor for ShazamEvent(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.BridgeObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_1002AEE54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v24);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v26 = &v10[v13];
    v27 = (char *)v9 + v13;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v27, v26, v14);
    v16 = *(int *)(v12 + 24);
    v17 = (char *)v9 + v16;
    v18 = &v10[v16];
    v19 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = *(int *)(a3 + 24);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1002AEF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ShazamEvent.Attributes(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 24);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1002AF034(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = type metadata accessor for ShazamEvent.Attributes(0);
  v11 = *(int *)(v10 + 20);
  v24 = (char *)v7 + v11;
  v12 = &v8[v11];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v24, v12, v13);
  v15 = *(int *)(v10 + 24);
  v16 = (char *)v7 + v15;
  v17 = &v8[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1002AF140(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1002AF26C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1002AF338(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for ShazamEvent.Attributes(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = (char *)v8 + v16;
  v18 = &v9[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((_QWORD *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002AF434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AF440);
}

uint64_t sub_1002AF440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1002AF4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AF4C8);
}

uint64_t sub_1002AF4C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1002AF53C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10039A028;
  result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10039A028;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Root()
{
  return &type metadata for Root;
}

uint64_t storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002AF614 + 4 * byte_100399DF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002AF648 + 4 * byte_100399DF4[v4]))();
}

uint64_t sub_1002AF648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002AF650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002AF658);
  return result;
}

uint64_t sub_1002AF664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002AF66CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002AF670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002AF678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &type metadata for RazzmatazzController.Location.CodingKeys;
}

unint64_t sub_1002AF698()
{
  unint64_t result;

  result = qword_10049C0E0;
  if (!qword_10049C0E0)
  {
    result = swift_getWitnessTable(&unk_10039A114, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C0E0);
  }
  return result;
}

unint64_t sub_1002AF6E0()
{
  unint64_t result;

  result = qword_10049C0E8;
  if (!qword_10049C0E8)
  {
    result = swift_getWitnessTable(&unk_10039A084, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C0E8);
  }
  return result;
}

unint64_t sub_1002AF728()
{
  unint64_t result;

  result = qword_10049C0F0;
  if (!qword_10049C0F0)
  {
    result = swift_getWitnessTable(&unk_10039A0AC, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C0F0);
  }
  return result;
}

_QWORD *sub_1002AF76C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v3 = sub_100005574(&qword_10049C0F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10000ABC8(a1, v7);
  v10 = sub_1002AF890();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Root.CodingKeys, &type metadata for Root.CodingKeys, v10, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v11 = sub_1002AF8D4();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v14, &type metadata for Resources, v12, v3, &type metadata for Resources, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v14;
    sub_10000682C(a1);
  }
  return v9;
}

unint64_t sub_1002AF890()
{
  unint64_t result;

  result = qword_10049C100;
  if (!qword_10049C100)
  {
    result = swift_getWitnessTable(&unk_10039A734, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C100);
  }
  return result;
}

unint64_t sub_1002AF8D4()
{
  unint64_t result;

  result = qword_10049C108;
  if (!qword_10049C108)
  {
    result = swift_getWitnessTable(&unk_10039A70C, &type metadata for Resources);
    atomic_store(result, (unint64_t *)&qword_10049C108);
  }
  return result;
}

unint64_t sub_1002AF918()
{
  unint64_t result;

  result = qword_10049C120;
  if (!qword_10049C120)
  {
    result = swift_getWitnessTable(&unk_10039A6BC, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C120);
  }
  return result;
}

unint64_t sub_1002AF95C()
{
  unint64_t result;

  result = qword_10049C128;
  if (!qword_10049C128)
  {
    result = swift_getWitnessTable(&unk_10039A694, &type metadata for ShazamEvent.Attributes.Time);
    atomic_store(result, (unint64_t *)&qword_10049C128);
  }
  return result;
}

uint64_t sub_1002AF9A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_100005574(&qword_10049C1D0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v7);
  v9 = sub_1002B1654();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Resources.CodingKeys, &type metadata for Resources.CodingKeys, v9, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v10 = sub_100005574(&qword_10049C1E0);
    HIBYTE(v15) = 0;
    v11 = sub_1002B1698();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = sub_100005574(&qword_10049C1F8);
    HIBYTE(v15) = 1;
    v14 = sub_1002B171C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000682C(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1002AFB74(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D69547472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F7A656D6974, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1002AFC70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;

  v3 = sub_100005574(&qword_10049C210);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v7);
  v9 = sub_1002B17CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.Time.CodingKeys, &type metadata for ShazamEvent.Attributes.Time.CodingKeys, v9, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v13 = 0;
    v8 = KeyedDecodingContainer.decode(_:forKey:)(&v13, v3);
    v12 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v12, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000682C(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_1002AFE1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  _QWORD *v38;

  v2 = v1;
  v4 = sub_100005574(&qword_10049C240);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)a1[3];
  v9 = a1[4];
  sub_10000ABC8(a1, (uint64_t)v8);
  v10 = sub_1002B18DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.CodingKeys, &type metadata for ShazamEvent.Relationships.CodingKeys, v10, v8, v9);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v37 = 0;
    v11 = sub_1002B1920();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for ShazamEvent.Relationships.Data, &v37, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    v13 = v38;
    v14 = v38[2];
    v36 = v7;
    if (v14)
    {
      v31 = v11;
      v33 = v5;
      v34 = v4;
      v35 = 0;
      v38 = _swiftEmptyArrayStorage;
      v32 = v13;
      sub_100259288(0, v14, 0);
      v8 = v38;
      v15 = v32 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v38 = v8;
        v19 = v8[2];
        v18 = v8[3];
        swift_bridgeObjectRetain();
        if (v19 >= v18 >> 1)
        {
          sub_100259288((char *)(v18 > 1), v19 + 1, 1);
          v8 = v38;
        }
        v15 += 2;
        v8[2] = v19 + 1;
        v20 = &v8[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v4 = v34;
      v2 = v35;
      v5 = v33;
      v7 = v36;
      v11 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      v8 = _swiftEmptyArrayStorage;
    }
    v37 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v38, &type metadata for ShazamEvent.Relationships.Data, &v37, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      sub_10000682C(a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v38;
      v22 = v38[2];
      if (v22)
      {
        v33 = v5;
        v34 = v4;
        v35 = 0;
        v38 = _swiftEmptyArrayStorage;
        sub_100259288(0, v22, 0);
        v23 = v38;
        v32 = v21;
        v24 = v21 + 5;
        do
        {
          v25 = *(v24 - 1);
          v26 = *v24;
          v38 = v23;
          v28 = v23[2];
          v27 = v23[3];
          swift_bridgeObjectRetain();
          if (v28 >= v27 >> 1)
          {
            sub_100259288((char *)(v27 > 1), v28 + 1, 1);
            v23 = v38;
          }
          v24 += 2;
          v23[2] = v28 + 1;
          v29 = &v23[2 * v28];
          v29[4] = v25;
          v29[5] = v26;
          --v22;
        }
        while (v22);
        swift_bridgeObjectRelease();
        v4 = v34;
        v5 = v33;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v36, v4);
      swift_bridgeObjectRetain();
      sub_10000682C(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

_QWORD *sub_1002B0178(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;

  v3 = sub_100005574(&qword_10049C2E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_10000ABC8(a1, v7);
  v10 = sub_1002B1EBC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.CodingKeys, v10, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v11 = sub_100005574(&qword_10049C2F0);
    v12 = sub_10008FE98(&qword_10049C2F8, &qword_10049C2F0, (void (*)(void))sub_1002B1F00, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v16;
    sub_10000682C(a1);
  }
  return v9;
}

uint64_t sub_1002B02C4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    v7 = 0xEA00000000007365;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease(0xED00007370696873);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974616C6572, 0xED00007370696873, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1002B0430(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100459F68, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_1002B0478@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  v5 = sub_100005574(&qword_10049C220);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002B1810();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.CodingKeys, &type metadata for VenueElement.Attributes.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  LOBYTE(v39) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v39, v5);
  v14 = v13;
  v38 = v12;
  v47 = 1;
  v15 = sub_1002B1854();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for VenueElement.Attributes.StructuredAddress, &v47, v5, &type metadata for VenueElement.Attributes.StructuredAddress, v15);
  v16 = v40;
  v32 = v39;
  v33 = v14;
  v17 = v42;
  v18 = v44;
  v30 = v43;
  v31 = v41;
  v29 = v45;
  v37 = v46;
  v47 = 2;
  v19 = sub_1002B1898();
  v36 = v16;
  swift_bridgeObjectRetain();
  v35 = v17;
  swift_bridgeObjectRetain();
  v34 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, &type metadata for VenueElement.Attributes.Geo, &v47, v5, &type metadata for VenueElement.Attributes.Geo, v19);
  v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v39, v40);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v21 = v33;
  swift_bridgeObjectRetain();
  v22 = v20;
  swift_bridgeObjectRelease();
  sub_10000682C(a1);

  v23 = v37;
  swift_bridgeObjectRelease();
  v24 = v34;
  swift_bridgeObjectRelease();
  v25 = v35;
  swift_bridgeObjectRelease();
  v26 = v36;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v38;
  a2[1] = v21;
  *((double *)a2 + 2) = v32;
  *((double *)a2 + 3) = v26;
  a2[4] = v31;
  a2[5] = v25;
  a2[6] = v30;
  a2[7] = v24;
  a2[8] = v29;
  a2[9] = v23;
  a2[10] = (uint64_t)v22;
  return result;
}

uint64_t sub_1002B07D4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001003B9A50)
  {
    swift_bridgeObjectRelease(0x80000001003B9A50);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x80000001003B9A50, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_1002B0858@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v5 = sub_100005574(&qword_10049C2B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002B1DF0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v12 = sub_1002B1E34();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v21, &type metadata for Razzmatazz.Venue.Address, v13, v5, &type metadata for Razzmatazz.Venue.Address, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v21[1];
  v20 = v21[0];
  v18 = v21[2];
  v14 = v22;
  v15 = v23;
  result = sub_10000682C(a1);
  v17 = v19;
  *(_OWORD *)a2 = v20;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_1002B09AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7627116 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7627116, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6778476, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_1002B0A7C(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v13;
  char v14;
  char v15;

  v4 = sub_100005574(&qword_10049C2D0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  sub_10000ABC8(a1, v8);
  v10 = sub_1002B1E78();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.Geo.CodingKeys, &type metadata for VenueElement.Attributes.Geo.CodingKeys, v10, v8, v9);
  if (!v1)
  {
    v15 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v15, v4);
    v2 = v11;
    v14 = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v14, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_10000682C(a1);
  return v2;
}

uint64_t sub_1002B0BD4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease(0xEA00000000007365);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1002B0CB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[11];
  char v34;

  v5 = sub_100005574(&qword_10049C138);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1002B0F24();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.CodingKeys, &type metadata for VenueElement.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  LOBYTE(v33[0]) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(v33, v5);
  v14 = v13;
  v34 = 1;
  v15 = sub_1002B0F68();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v33, &type metadata for VenueElement.Attributes, &v34, v5, &type metadata for VenueElement.Attributes, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v30 = v33[2];
  v31 = v33[0];
  v25 = v33[3];
  v26 = v33[1];
  v16 = v33[5];
  v28 = v33[6];
  v29 = v33[4];
  v32 = v33[7];
  v17 = v33[9];
  v27 = v33[8];
  v18 = (void *)v33[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v18;
  swift_bridgeObjectRetain();
  v20 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10000682C(a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v26;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  a2[2] = v31;
  a2[3] = v21;
  a2[4] = v30;
  a2[5] = v20;
  a2[6] = v29;
  a2[7] = v16;
  v23 = v32;
  a2[8] = v28;
  a2[9] = v23;
  a2[10] = v27;
  a2[11] = v17;
  a2[12] = (uint64_t)v19;
  return result;
}

unint64_t sub_1002B0F24()
{
  unint64_t result;

  result = qword_10049C140;
  if (!qword_10049C140)
  {
    result = swift_getWitnessTable(&unk_10039A644, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C140);
  }
  return result;
}

unint64_t sub_1002B0F68()
{
  unint64_t result;

  result = qword_10049C148;
  if (!qword_10049C148)
  {
    result = swift_getWitnessTable(&unk_10039A61C, &type metadata for VenueElement.Attributes);
    atomic_store(result, (unint64_t *)&qword_10049C148);
  }
  return result;
}

unint64_t sub_1002B0FAC()
{
  unint64_t result;

  result = qword_10049C158;
  if (!qword_10049C158)
  {
    result = swift_getWitnessTable(&unk_10039A5CC, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C158);
  }
  return result;
}

unint64_t sub_1002B0FF0()
{
  unint64_t result;

  result = qword_10049C168;
  if (!qword_10049C168)
  {
    result = swift_getWitnessTable(&unk_10039A5A4, &type metadata for ShazamEvent.Relationships);
    atomic_store(result, (unint64_t *)&qword_10049C168);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &type metadata for ShazamEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.CodingKeys()
{
  return &type metadata for VenueElement.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &type metadata for ShazamEvent.Attributes.Time;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for Root.CodingKeys()
{
  return &type metadata for Root.CodingKeys;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

_QWORD *initializeWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = (void *)a2[10];
  v10 = (void *)a1[10];
  a1[10] = v9;
  v11 = v9;

  return a1;
}

_QWORD *assignWithTake for VenueElement.Attributes(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(a1[9]);
  v12 = (void *)a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes()
{
  return &type metadata for VenueElement.Attributes;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships()
{
  return &type metadata for ShazamEvent.Relationships;
}

ValueMetadata *type metadata accessor for Resources()
{
  return &type metadata for Resources;
}

unint64_t sub_1002B12F8()
{
  unint64_t result;

  result = qword_10049C170;
  if (!qword_10049C170)
  {
    result = swift_getWitnessTable(&unk_10039A31C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C170);
  }
  return result;
}

unint64_t sub_1002B1340()
{
  unint64_t result;

  result = qword_10049C178;
  if (!qword_10049C178)
  {
    result = swift_getWitnessTable(&unk_10039A40C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C178);
  }
  return result;
}

unint64_t sub_1002B1388()
{
  unint64_t result;

  result = qword_10049C180;
  if (!qword_10049C180)
  {
    result = swift_getWitnessTable(&unk_10039A4C4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C180);
  }
  return result;
}

unint64_t sub_1002B13D0()
{
  unint64_t result;

  result = qword_10049C188;
  if (!qword_10049C188)
  {
    result = swift_getWitnessTable(&unk_10039A57C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C188);
  }
  return result;
}

unint64_t sub_1002B1418()
{
  unint64_t result;

  result = qword_10049C190;
  if (!qword_10049C190)
  {
    result = swift_getWitnessTable(&unk_10039A4EC, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C190);
  }
  return result;
}

unint64_t sub_1002B1460()
{
  unint64_t result;

  result = qword_10049C198;
  if (!qword_10049C198)
  {
    result = swift_getWitnessTable(&unk_10039A514, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C198);
  }
  return result;
}

unint64_t sub_1002B14A8()
{
  unint64_t result;

  result = qword_10049C1A0;
  if (!qword_10049C1A0)
  {
    result = swift_getWitnessTable(&unk_10039A434, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1A0);
  }
  return result;
}

unint64_t sub_1002B14F0()
{
  unint64_t result;

  result = qword_10049C1A8;
  if (!qword_10049C1A8)
  {
    result = swift_getWitnessTable(&unk_10039A45C, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1A8);
  }
  return result;
}

unint64_t sub_1002B1538()
{
  unint64_t result;

  result = qword_10049C1B0;
  if (!qword_10049C1B0)
  {
    result = swift_getWitnessTable(&unk_10039A344, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1B0);
  }
  return result;
}

unint64_t sub_1002B1580()
{
  unint64_t result;

  result = qword_10049C1B8;
  if (!qword_10049C1B8)
  {
    result = swift_getWitnessTable(&unk_10039A36C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1B8);
  }
  return result;
}

unint64_t sub_1002B15C8()
{
  unint64_t result;

  result = qword_10049C1C0;
  if (!qword_10049C1C0)
  {
    result = swift_getWitnessTable(&unk_10039A28C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1C0);
  }
  return result;
}

unint64_t sub_1002B1610()
{
  unint64_t result;

  result = qword_10049C1C8;
  if (!qword_10049C1C8)
  {
    result = swift_getWitnessTable(&unk_10039A2B4, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1C8);
  }
  return result;
}

unint64_t sub_1002B1654()
{
  unint64_t result;

  result = qword_10049C1D8;
  if (!qword_10049C1D8)
  {
    result = swift_getWitnessTable(&unk_10039AC94, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C1D8);
  }
  return result;
}

unint64_t sub_1002B1698()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C1E8;
  if (!qword_10049C1E8)
  {
    v1 = sub_100005600(&qword_10049C1E0);
    sub_100006924(&qword_10049C1F0, type metadata accessor for ShazamEvent, (uint64_t)&unk_10039A13C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_10049C1E8);
  }
  return result;
}

unint64_t sub_1002B171C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C200;
  if (!qword_10049C200)
  {
    v1 = sub_100005600(&qword_10049C1F8);
    sub_1002B1788();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_10049C200);
  }
  return result;
}

unint64_t sub_1002B1788()
{
  unint64_t result;

  result = qword_10049C208;
  if (!qword_10049C208)
  {
    result = swift_getWitnessTable(&unk_10039A164, &type metadata for VenueElement);
    atomic_store(result, (unint64_t *)&qword_10049C208);
  }
  return result;
}

unint64_t sub_1002B17CC()
{
  unint64_t result;

  result = qword_10049C218;
  if (!qword_10049C218)
  {
    result = swift_getWitnessTable(&unk_10039AC44, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C218);
  }
  return result;
}

unint64_t sub_1002B1810()
{
  unint64_t result;

  result = qword_10049C228;
  if (!qword_10049C228)
  {
    result = swift_getWitnessTable(&unk_10039ABF4, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C228);
  }
  return result;
}

unint64_t sub_1002B1854()
{
  unint64_t result;

  result = qword_10049C230;
  if (!qword_10049C230)
  {
    result = swift_getWitnessTable(&unk_10039ABCC, &type metadata for VenueElement.Attributes.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_10049C230);
  }
  return result;
}

unint64_t sub_1002B1898()
{
  unint64_t result;

  result = qword_10049C238;
  if (!qword_10049C238)
  {
    result = swift_getWitnessTable(&unk_10039ABA4, &type metadata for VenueElement.Attributes.Geo);
    atomic_store(result, (unint64_t *)&qword_10049C238);
  }
  return result;
}

unint64_t sub_1002B18DC()
{
  unint64_t result;

  result = qword_10049C248;
  if (!qword_10049C248)
  {
    result = swift_getWitnessTable(&unk_10039AB54, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C248);
  }
  return result;
}

unint64_t sub_1002B1920()
{
  unint64_t result;

  result = qword_10049C250;
  if (!qword_10049C250)
  {
    result = swift_getWitnessTable(&unk_10039AB2C, &type metadata for ShazamEvent.Relationships.Data);
    atomic_store(result, (unint64_t *)&qword_10049C250);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &type metadata for ShazamEvent.Relationships.Data;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &type metadata for VenueElement.Attributes.Geo;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress;
}

uint64_t _s11MusicCoreUI11ShazamEventV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1002B19F0 + 4 * byte_100399E03[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1002B1A24 + 4 * byte_100399DFE[v4]))();
}

uint64_t sub_1002B1A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B1A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002B1A34);
  return result;
}

uint64_t sub_1002B1A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002B1A48);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1002B1A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B1A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for Resources.CodingKeys()
{
  return &type metadata for Resources.CodingKeys;
}

unint64_t sub_1002B1A94()
{
  unint64_t result;

  result = qword_10049C258;
  if (!qword_10049C258)
  {
    result = swift_getWitnessTable(&unk_10039A86C, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C258);
  }
  return result;
}

unint64_t sub_1002B1ADC()
{
  unint64_t result;

  result = qword_10049C260;
  if (!qword_10049C260)
  {
    result = swift_getWitnessTable(&unk_10039A924, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C260);
  }
  return result;
}

unint64_t sub_1002B1B24()
{
  unint64_t result;

  result = qword_10049C268;
  if (!qword_10049C268)
  {
    result = swift_getWitnessTable(&unk_10039AA14, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C268);
  }
  return result;
}

unint64_t sub_1002B1B6C()
{
  unint64_t result;

  result = qword_10049C270;
  if (!qword_10049C270)
  {
    result = swift_getWitnessTable(&unk_10039AB04, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C270);
  }
  return result;
}

unint64_t sub_1002B1BB4()
{
  unint64_t result;

  result = qword_10049C278;
  if (!qword_10049C278)
  {
    result = swift_getWitnessTable(&unk_10039AA3C, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C278);
  }
  return result;
}

unint64_t sub_1002B1BFC()
{
  unint64_t result;

  result = qword_10049C280;
  if (!qword_10049C280)
  {
    result = swift_getWitnessTable(&unk_10039AA64, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C280);
  }
  return result;
}

unint64_t sub_1002B1C44()
{
  unint64_t result;

  result = qword_10049C288;
  if (!qword_10049C288)
  {
    result = swift_getWitnessTable(&unk_10039A94C, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C288);
  }
  return result;
}

unint64_t sub_1002B1C8C()
{
  unint64_t result;

  result = qword_10049C290;
  if (!qword_10049C290)
  {
    result = swift_getWitnessTable(&unk_10039A974, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C290);
  }
  return result;
}

unint64_t sub_1002B1CD4()
{
  unint64_t result;

  result = qword_10049C298;
  if (!qword_10049C298)
  {
    result = swift_getWitnessTable(&unk_10039A894, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C298);
  }
  return result;
}

unint64_t sub_1002B1D1C()
{
  unint64_t result;

  result = qword_10049C2A0;
  if (!qword_10049C2A0)
  {
    result = swift_getWitnessTable(&unk_10039A8BC, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2A0);
  }
  return result;
}

unint64_t sub_1002B1D64()
{
  unint64_t result;

  result = qword_10049C2A8;
  if (!qword_10049C2A8)
  {
    result = swift_getWitnessTable(&unk_10039A7A4, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2A8);
  }
  return result;
}

unint64_t sub_1002B1DAC()
{
  unint64_t result;

  result = qword_10049C2B0;
  if (!qword_10049C2B0)
  {
    result = swift_getWitnessTable(&unk_10039A7CC, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2B0);
  }
  return result;
}

unint64_t sub_1002B1DF0()
{
  unint64_t result;

  result = qword_10049C2C0;
  if (!qword_10049C2C0)
  {
    result = swift_getWitnessTable(&unk_10039B000, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2C0);
  }
  return result;
}

unint64_t sub_1002B1E34()
{
  unint64_t result;

  result = qword_10049C2C8;
  if (!qword_10049C2C8)
  {
    result = swift_getWitnessTable(&unk_100399CA8, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_10049C2C8);
  }
  return result;
}

unint64_t sub_1002B1E78()
{
  unint64_t result;

  result = qword_10049C2D8;
  if (!qword_10049C2D8)
  {
    result = swift_getWitnessTable(&unk_10039AFB0, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2D8);
  }
  return result;
}

unint64_t sub_1002B1EBC()
{
  unint64_t result;

  result = qword_10049C2E8;
  if (!qword_10049C2E8)
  {
    result = swift_getWitnessTable(&unk_10039AF60, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C2E8);
  }
  return result;
}

unint64_t sub_1002B1F00()
{
  unint64_t result;

  result = qword_10049C300;
  if (!qword_10049C300)
  {
    result = swift_getWitnessTable(&unk_10039AF38, &type metadata for ShazamEvent.Relationships.Data.ID);
    atomic_store(result, (unint64_t *)&qword_10049C300);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.CodingKeys;
}

uint64_t _s11MusicCoreUI12VenueElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1002B1FA0 + 4 * byte_100399E0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002B1FD4 + 4 * byte_100399E08[v4]))();
}

uint64_t sub_1002B1FD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B1FDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002B1FE4);
  return result;
}

uint64_t sub_1002B1FF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002B1FF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1002B1FFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B2004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.Geo.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID;
}

unint64_t sub_1002B2044()
{
  unint64_t result;

  result = qword_10049C308;
  if (!qword_10049C308)
  {
    result = swift_getWitnessTable(&unk_10039ADA0, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C308);
  }
  return result;
}

unint64_t sub_1002B208C()
{
  unint64_t result;

  result = qword_10049C310;
  if (!qword_10049C310)
  {
    result = swift_getWitnessTable(&unk_10039AE58, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C310);
  }
  return result;
}

unint64_t sub_1002B20D4()
{
  unint64_t result;

  result = qword_10049C318;
  if (!qword_10049C318)
  {
    result = swift_getWitnessTable(&unk_10039AF10, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C318);
  }
  return result;
}

unint64_t sub_1002B211C()
{
  unint64_t result;

  result = qword_10049C320;
  if (!qword_10049C320)
  {
    result = swift_getWitnessTable(&unk_10039AE80, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C320);
  }
  return result;
}

unint64_t sub_1002B2164()
{
  unint64_t result;

  result = qword_10049C328;
  if (!qword_10049C328)
  {
    result = swift_getWitnessTable(&unk_10039AEA8, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C328);
  }
  return result;
}

unint64_t sub_1002B21AC()
{
  unint64_t result;

  result = qword_10049C330;
  if (!qword_10049C330)
  {
    result = swift_getWitnessTable(&unk_10039ADC8, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C330);
  }
  return result;
}

unint64_t sub_1002B21F4()
{
  unint64_t result;

  result = qword_10049C338;
  if (!qword_10049C338)
  {
    result = swift_getWitnessTable(&unk_10039ADF0, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C338);
  }
  return result;
}

unint64_t sub_1002B223C()
{
  unint64_t result;

  result = qword_10049C340;
  if (!qword_10049C340)
  {
    result = swift_getWitnessTable(&unk_10039AD10, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C340);
  }
  return result;
}

unint64_t sub_1002B2284()
{
  unint64_t result;

  result = qword_10049C348;
  if (!qword_10049C348)
  {
    result = swift_getWitnessTable(&unk_10039AD38, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C348);
  }
  return result;
}

unint64_t sub_1002B22C8()
{
  unint64_t result;

  result = qword_10049C358;
  if (!qword_10049C358)
  {
    result = swift_getWitnessTable(&unk_10039B108, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C358);
  }
  return result;
}

uint64_t _s11MusicCoreUI4RootV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002B234C + 4 * byte_100399E12[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002B236C + 4 * byte_100399E17[v4]))();
}

_BYTE *sub_1002B234C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002B236C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002B2374(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002B237C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002B2384(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002B238C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys;
}

unint64_t sub_1002B23AC()
{
  unint64_t result;

  result = qword_10049C368;
  if (!qword_10049C368)
  {
    result = swift_getWitnessTable(&unk_10039B0E0, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C368);
  }
  return result;
}

unint64_t sub_1002B23F4()
{
  unint64_t result;

  result = qword_10049C370;
  if (!qword_10049C370)
  {
    result = swift_getWitnessTable(&unk_10039B050, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C370);
  }
  return result;
}

unint64_t sub_1002B243C()
{
  unint64_t result;

  result = qword_10049C378;
  if (!qword_10049C378)
  {
    result = swift_getWitnessTable(&unk_10039B078, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049C378);
  }
  return result;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  _QWORD *v10;

  sub_1000648AC(a1, a5, type metadata accessor for Razzmatazz);
  result = type metadata accessor for RazzmatazzDetailView(0);
  *(_QWORD *)(a5 + *(int *)(result + 20)) = a2;
  v10 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView(uint64_t a1)
{
  uint64_t result;

  result = qword_10049C3F0;
  if (!qword_10049C3F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzDetailView);
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_100005574(&qword_10049C388);
  v1 = sub_10002FFB8(&qword_10049C390, &qword_10049C388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_1002B2B84, &v3, v0, v1);
}

uint64_t sub_1002B2594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  unint64_t v72;

  v56 = a2;
  v59 = sub_100005574(&qword_10049C478);
  v69 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (char *)&v53 - v4;
  v57 = sub_100005574(&qword_10049C480);
  v66 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v6;
  v55 = sub_100005574(&qword_10049C488);
  v63 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v53 - v8;
  sub_100005574(&qword_10049C490);
  __chkstk_darwin();
  v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v53 - v11;
  v13 = Razzmatazz.shortName.getter();
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v61 = v12;
  if (v13 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v53 - 2) = a1;
      Section<>.init(content:)(sub_1002B6910);
      v19 = sub_100005574(&qword_10049C498);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
      goto LABEL_7;
    }
  }
  v18 = sub_100005574(&qword_10049C498);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
LABEL_7:
  v71 = 1702125892;
  v72 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v20 = sub_100005574(&qword_10049C4A0);
  v21 = sub_10002FFB8(&qword_10049C4A8, &qword_10049C4A0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v54 = sub_10024AF7C();
  Section<>.init<A>(_:content:)(&v71, sub_1002B6918, &v53 - 4, v20, &type metadata for String, v21, v54);
  v22 = LocalizedStringKey.init(stringLiteral:)(0x747369747241, 0xE600000000000000);
  v24 = v23;
  LOBYTE(v20) = v25;
  v27 = v26;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v60 = v9;
  v28 = sub_100005574(&qword_10049C4B0);
  v29 = sub_10002FFB8(&qword_10049C4B8, &qword_10049C4B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v30 = v64;
  Section<>.init(_:content:)(v22, v24, v20 & 1, v27, sub_1002B6948, &v53 - 4, v28, v29);
  v71 = 0x6E6F697461636F4CLL;
  v72 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v31 = sub_100005574(&qword_10049C4C0);
  v32 = sub_100005600(&qword_10049C4C8);
  v33 = sub_1002B6980();
  v70[0] = v32;
  v70[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v70, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v35 = v67;
  Section<>.init<A>(_:content:)(&v71, sub_1002B6978, &v53 - 4, v31, &type metadata for String, OpaqueTypeConformance2, v54);
  v36 = v62;
  sub_100014A7C((uint64_t)v61, v62, &qword_10049C490);
  v37 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v38 = v65;
  v39 = v55;
  v37(v65, v60, v55);
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v41 = v57;
  v40(v68, v30, v57);
  v42 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v43 = v58;
  v44 = v35;
  v45 = v59;
  v42(v58, v44, v59);
  v46 = v56;
  sub_100014A7C(v36, v56, &qword_10049C490);
  v47 = (int *)sub_100005574(&qword_10049C4F0);
  v37((char *)(v46 + v47[12]), v38, v39);
  v48 = v68;
  v40((char *)(v46 + v47[16]), v68, v41);
  v42((char *)(v46 + v47[20]), v43, v45);
  v49 = *(void (**)(char *, uint64_t))(v69 + 8);
  v49(v67, v45);
  v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v64, v41);
  v51 = *(void (**)(char *, uint64_t))(v63 + 8);
  v51(v60, v39);
  sub_100008758((uint64_t)v61, &qword_10049C490);
  v49(v43, v45);
  v50(v48, v41);
  v51(v65, v39);
  return sub_100008758(v62, &qword_10049C490);
}

uint64_t sub_1002B2B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B2594(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002B2B8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzDetailView.body>>, 1);
}

uint64_t sub_1002B2B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[2];

  v3 = *(_QWORD *)(a1 + 24);
  v20[0] = *(_QWORD *)(a1 + 16);
  v20[1] = v3;
  v4 = sub_10024AF7C();
  swift_bridgeObjectRetain();
  v5 = Text.init<A>(_:)(v20, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v20[0]) = static HierarchicalShapeStyle.secondary.getter();
  v12 = Text.foregroundStyle<A>(_:)(v20, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  sub_10003B4D0(v5, v7, v11);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v16 & 1;
  *(_QWORD *)(a2 + 24) = v18;
  return result;
}

uint64_t sub_1002B2C84@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t OpaqueTypeConformance2;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  uint64_t (*v107)(char *);
  char *v108;
  unint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  char *v112;
  char *v113;
  _QWORD *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  char *v156;

  v114 = a2;
  v137 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v138 = *(_QWORD *)(v137 + 64);
  __chkstk_darwin();
  v136 = (uint64_t)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100005574(&qword_10049C520);
  v146 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin();
  v139 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v145 = (char *)&v102 - v5;
  v135 = type metadata accessor for Date.FormatStyle.Symbol.Minute(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin();
  v133 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin();
  v128 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin();
  v127 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for Date.FormatStyle.Symbol.Year(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin();
  v123 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Date.FormatStyle.Symbol.Month(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v119 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin();
  v116 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0);
  v143 = *(_QWORD *)(v12 - 8);
  v144 = v12;
  __chkstk_darwin();
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for TimeZone(0);
  v15 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin();
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle(0);
  v142 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v108 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v112 = (char *)&v102 - v20;
  __chkstk_darwin();
  v113 = (char *)&v102 - v21;
  __chkstk_darwin();
  v115 = (char *)&v102 - v22;
  __chkstk_darwin();
  v24 = (char *)&v102 - v23;
  __chkstk_darwin();
  v102 = (char *)&v102 - v25;
  v26 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for Razzmatazz(0);
  v31 = *(int *)(v30 + 24);
  v124 = a1;
  v106 = a1 + v31;
  v107 = *(uint64_t (**)(char *))(v27 + 16);
  v32 = v107(v29);
  static ParseableFormatStyle<>.dateTime.getter(v32);
  v33 = a1 + *(int *)(v30 + 32);
  v104 = v33 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v105 = *(void (**)(char *))(v15 + 16);
  v103 = v17;
  v105(v17);
  v34 = Date.FormatStyle.timeZone.setter(v17);
  static Date.FormatStyle.Symbol.Weekday.wide.getter(v34);
  v35 = v102;
  Date.FormatStyle.weekday(_:)(v14);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v14, v144);
  v36 = *(void (**)(char *, uint64_t))(v142 + 8);
  v36(v24, v18);
  v111 = sub_100006924(&qword_10049B8B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v151, v35, v18, v111);
  v36(v35, v18);
  v110 = *(void (**)(char *, uint64_t))(v27 + 8);
  v37 = v26;
  v110(v29, v26);
  v147 = (uint64_t)v151;
  v148 = v152;
  v109 = sub_10024AF7C();
  v38 = Text.init<A>(_:)(&v147, &type metadata for String, v109);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  LODWORD(v151) = static HierarchicalShapeStyle.secondary.getter();
  v45 = Text.foregroundStyle<A>(_:)(&v151, v38, v40, v44, v42, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v143 = v46;
  v144 = v45;
  v122 = v47;
  LODWORD(v142) = v48 & 1;
  sub_10003B4D0(v38, v40, v44);
  swift_bridgeObjectRelease();
  v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v107)(v29, v106, v37);
  v50 = v108;
  static ParseableFormatStyle<>.dateTime.getter(v49);
  v51 = v103;
  ((void (*)(char *, uint64_t, uint64_t))v105)(v103, v104, v141);
  v52 = Date.FormatStyle.timeZone.setter(v51);
  v53 = v116;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v52);
  v54 = v112;
  Date.FormatStyle.day(_:)(v53);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v53, v118);
  v55 = ((uint64_t (*)(char *, uint64_t))v36)(v50, v18);
  v56 = v119;
  static Date.FormatStyle.Symbol.Month.wide.getter(v55);
  v57 = v113;
  Date.FormatStyle.month(_:)(v56);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v56, v121);
  v58 = ((uint64_t (*)(char *, uint64_t))v36)(v54, v18);
  v59 = v123;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v58);
  v60 = v115;
  Date.FormatStyle.year(_:)(v59);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v59, v126);
  v61 = ((uint64_t (*)(char *, uint64_t))v36)(v57, v18);
  v62 = v128;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v61);
  v63 = v127;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v62);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v62, v132);
  Date.FormatStyle.hour(_:)(v63);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v63, v130);
  v64 = ((uint64_t (*)(char *, uint64_t))v36)(v60, v18);
  v65 = v133;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter(v64);
  Date.FormatStyle.minute(_:)(v65);
  (*(void (**)(char *, uint64_t))(v134 + 8))(v65, v135);
  v36(v24, v18);
  Date.formatted<A>(_:)(&v151, v35, v18, v111);
  v36(v35, v18);
  v110(v29, v37);
  v147 = (uint64_t)v151;
  v148 = v152;
  v66 = Text.init<A>(_:)(&v147, &type metadata for String, v109);
  v68 = v67;
  v70 = v69;
  v72 = v71 & 1;
  LODWORD(v151) = static HierarchicalShapeStyle.primary.getter(v66);
  v73 = Text.foregroundStyle<A>(_:)(&v151, v66, v68, v72, v70, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v135 = v74;
  v141 = v75;
  LODWORD(v134) = v76 & 1;
  sub_10003B4D0(v66, v68, v72);
  v77 = swift_bridgeObjectRelease();
  v78 = static Alignment.center.getter(v77);
  _FrameLayout.init(width:height:alignment:)(&v151, 0, 1, 0x4024000000000000, 0, v78, v79);
  v133 = v151;
  LODWORD(v132) = v152;
  v131 = v153;
  LODWORD(v130) = v154;
  v129 = v155;
  v128 = v156;
  v80 = v136;
  sub_1002B6A1C(v124, v136);
  v81 = *(unsigned __int8 *)(v137 + 80);
  v82 = (v81 + 16) & ~v81;
  v83 = swift_allocObject(&unk_1004615F8, v82 + v138, v81 | 7);
  sub_1000648AC(v80, v83 + v82, type metadata accessor for RazzmatazzDetailView);
  v84 = sub_100005574(&qword_10049C528);
  v85 = sub_100005600(&qword_10049C530);
  v86 = type metadata accessor for TitleAndIconLabelStyle(255);
  v87 = sub_10002FFB8(&qword_10049C538, &qword_10049C530, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v88 = sub_100006924(&qword_10049C540, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  v147 = v85;
  v148 = v86;
  v149 = v87;
  v150 = v88;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v90 = v145;
  Button.init(action:label:)(sub_1002B6C5C, v83, sub_1002B421C, 0, v84, OpaqueTypeConformance2);
  LOBYTE(v29) = v142;
  LOBYTE(v147) = v142;
  v91 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
  v93 = v139;
  v92 = v140;
  v91(v139, v90, v140);
  v95 = v143;
  v94 = v144;
  v96 = v114;
  *v114 = v144;
  v96[1] = v95;
  *((_BYTE *)v96 + 16) = (_BYTE)v29;
  v96[3] = v122;
  v96[4] = v73;
  v97 = v135;
  v96[5] = v135;
  LOBYTE(v87) = v134;
  *((_BYTE *)v96 + 48) = v134;
  v96[7] = v141;
  v96[8] = 0;
  *((_BYTE *)v96 + 72) = 1;
  v96[10] = v133;
  *((_BYTE *)v96 + 88) = v132;
  v96[12] = v131;
  *((_BYTE *)v96 + 104) = v130;
  v98 = v128;
  v96[14] = v129;
  v96[15] = v98;
  v99 = sub_100005574(&qword_10049C548);
  v91((char *)v96 + *(int *)(v99 + 80), v93, v92);
  sub_10003B4C0(v94, v95, v142);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v73, v97, v87);
  v100 = *(void (**)(char *, uint64_t))(v146 + 8);
  swift_bridgeObjectRetain();
  v100(v145, v92);
  v100(v93, v92);
  sub_10003B4D0(v73, v97, v87);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v144, v143, v147);
  return swift_bridgeObjectRelease();
}

void sub_1002B3848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  sub_1002B6A1C(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(unsigned __int8 *)(v2 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = swift_allocObject(&unk_100461620, v6 + v3, v5 | 7);
  *(_QWORD *)(v7 + 16) = v4;
  sub_1000648AC((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = sub_1002B6E00;
  v12 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000CC138;
  aBlock[3] = &unk_100461638;
  v8 = _Block_copy(aBlock);
  v9 = v12;
  v10 = v4;
  objc_msgSend(v10, "requestWriteOnlyAccessToEventsWithCompletion:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);

}

void sub_1002B3990(char a1, void *a2, void *a3, uint64_t a4)
{
  Class isa;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  NSString v17;
  uint64_t v18;
  Class v19;
  uint64_t v20;
  Class v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  unsigned int v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t isa_low;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  uint64_t v64;
  id v65;
  _OWORD v66[4];

  v63 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  isa = v63[8].isa;
  __chkstk_darwin();
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v61 = v10;
    v62 = (uint64_t)&v61 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    v16 = objc_msgSend((id)objc_opt_self(EKEvent), "eventWithEventStore:", a3);
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setTitle:", v17);

    v18 = type metadata accessor for Razzmatazz(0);
    v19 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "setStartDate:", v19);

    Date.addingTimeInterval(_:)(v20, 7200.0);
    v21 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    objc_msgSend(v16, "setEndDate:", v21);

    v22 = (_OWORD *)(a4 + *(int *)(v18 + 32));
    v23 = v22[3];
    v66[0] = v22[2];
    v66[1] = v23;
    v24 = v22[5];
    v66[2] = v22[4];
    v66[3] = v24;
    v25 = v16;
    sub_1002A3FBC(0);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, "setLocation:", v26);

    v27 = v25;
    v28 = objc_msgSend(a3, "defaultCalendarForNewEvents");
    objc_msgSend(v27, "setCalendar:", v28);

    v65 = 0;
    v29 = objc_msgSend(a3, "saveEvent:span:error:", v27, 0, &v65);
    v30 = v65;
    if (v29)
    {
      v31 = type metadata accessor for TaskPriority(0);
      v32 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v61, 1, 1, v31);
      v33 = a4;
      v34 = v62;
      sub_1002B6A1C(v33, v62);
      type metadata accessor for MainActor(0);
      v35 = static MainActor.shared.getter(v30);
      isa_low = LOBYTE(v63[10].isa);
      v37 = (isa_low + 32) & ~isa_low;
      v38 = swift_allocObject(&unk_100461670, (char *)isa + v37, isa_low | 7);
      *(_QWORD *)(v38 + 16) = v35;
      *(_QWORD *)(v38 + 24) = &protocol witness table for MainActor;
      sub_1000648AC(v34, v38 + v37, type metadata accessor for RazzmatazzDetailView);
      v39 = sub_100283BE0(v32, (uint64_t)&unk_10049C558, v38);
      swift_release(v39);

    }
    else
    {
      v48 = v65;
      v49 = _convertNSErrorToError(_:)(v30);

      swift_willThrow(v50);
      if (qword_100498AC8 != -1)
        swift_once(&qword_100498AC8, sub_1002AB0A4);
      v52 = type metadata accessor for Logger(0, v51);
      sub_1000086B4(v52, (uint64_t)qword_1004A3D88);
      swift_errorRetain(v49);
      v53 = swift_errorRetain(v49);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.error.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v56 = swift_slowAlloc(12, -1);
        v57 = (void *)swift_slowAlloc(32, -1);
        v65 = v57;
        *(_DWORD *)v56 = 136315138;
        v64 = v49;
        swift_errorRetain(v49);
        v58 = sub_100005574(&qword_100499F80);
        v59 = (char *)String.init<A>(describing:)(&v64, v58);
        *(_QWORD *)(v56 + 4) = sub_100249A1C(v59, v60, (uint64_t *)&v65);
        swift_bridgeObjectRelease();
        swift_errorRelease(v49);
        swift_errorRelease(v49);
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Failed to save event: %s", (uint8_t *)v56, 0xCu);
        swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1, -1);
        swift_slowDealloc(v56, -1, -1);

        swift_errorRelease(v49);
      }
      else
      {

        swift_errorRelease(v49);
        swift_errorRelease(v49);
        swift_errorRelease(v49);

      }
    }
  }
  else
  {
    if (qword_100498AC8 != -1)
      swift_once(&qword_100498AC8, sub_1002AB0A4);
    v40 = type metadata accessor for Logger(0, v13);
    sub_1000086B4(v40, (uint64_t)qword_1004A3D88);
    swift_errorRetain(a2);
    v41 = swift_errorRetain(a2);
    v63 = Logger.logObject.getter(v41);
    v42 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v42))
    {
      v43 = swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v65 = a2;
      *(_QWORD *)&v66[0] = v44;
      *(_DWORD *)v43 = 136315138;
      swift_errorRetain(a2);
      v45 = sub_100005574((uint64_t *)&unk_1004A00D0);
      v46 = (char *)String.init<A>(describing:)(&v65, v45);
      *(_QWORD *)(v43 + 4) = sub_100249A1C(v46, v47, (uint64_t *)v66);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v63, v42, "No Calendar access: %s", (uint8_t *)v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

uint64_t sub_1002B404C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for UUID(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002B4100, v9, v10);
}

uint64_t sub_1002B4100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 20));
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD **)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v8 = UUID.uuidString.getter(v7);
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v8, v10, 0x7261646E656C6163, 0xE800000000000000, 0xD000000000000011, 0x80000001003B9AC0, 0, 0, v4, 0, 0, 0, 0);
    _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v4, 0);
    sub_100006798((uint64_t)v4, type metadata accessor for Notice);
  }
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = v2 == 0;
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B421C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v0 = type metadata accessor for TitleAndIconLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10049C530);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0x43206F7420646441;
  v13[1] = 0xEF7261646E656C61;
  v8 = sub_10024AF7C();
  v9 = Label<>.init<A>(_:systemImage:)(v13, 0xD000000000000013, 0x80000001003B9AA0, &type metadata for String, v8);
  TitleAndIconLabelStyle.init()(v9);
  v10 = sub_10002FFB8(&qword_10049C538, &qword_10049C530, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v11 = sub_100006924(&qword_10049C540, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v3, v4, v0, v10, v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1002B43B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2();
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 1;
  sub_100005574(a3);
  return a4(a1);
}

uint64_t sub_1002B440C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  __int16 v63;

  v55 = a2;
  v53 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100005574(&qword_10049C500);
  v10 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100005574(&qword_10049E4E0);
  __chkstk_darwin();
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100005574(&qword_10049C508);
  __chkstk_darwin();
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v56 = (uint64_t)&v49 - v17;
  type metadata accessor for Razzmatazz(0);
  v54 = a1;
  sub_1002464B0(v9);
  v18 = sub_100005574(&qword_10049F810);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 6, 10, v18);
  if (qword_100498AD0 != -1)
    swift_once(&qword_100498AD0, sub_1002B58E8);
  v58 = qword_10049C380;
  v59 = 0;
  v60 = qword_10049C380;
  v61 = 0;
  v62 = 0;
  v63 = 513;
  v19 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v53);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v9, (uint64_t)v7, (uint64_t)&v58, (uint64_t)v5, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_100006798((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F7D0);
  v20 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v52);
  v21 = &v14[*(int *)(v50 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  v22 = static Border.artwork;
  v23 = qword_1004A3D60;
  v24 = byte_1004A3D68;
  sub_100014A7C((uint64_t)v14, (uint64_t)v16, &qword_10049E4E0);
  v25 = &v16[*(int *)(v51 + 36)];
  *(_QWORD *)v25 = v22;
  *((_QWORD *)v25 + 1) = v23;
  v25[16] = v24;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain(v22);
  sub_100008758((uint64_t)v14, &qword_10049E4E0);
  v26 = sub_1000149A8((uint64_t)v16, v56, &qword_10049C508);
  v57[0] = Artist.name.getter(v26);
  v57[1] = v27;
  v28 = sub_10024AF7C();
  v29 = Text.init<A>(_:)(v57, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v53 = v34;
  v35 = (uint64_t *)(v54 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 24));
  v36 = *v35;
  v37 = (uint64_t)v16;
  if (*v35)
  {
    v38 = v35[1];
    swift_retain(v38);
    sub_10003A434(v36, v38);
    swift_release(v38);
    v39 = 1;
  }
  else
  {
    v39 = 0;
    v38 = 0;
  }
  v40 = v33 & 1;
  v41 = v56;
  v42 = v37;
  sub_100014A7C(v56, v37, &qword_10049C508);
  v43 = v37;
  v44 = v55;
  sub_100014A7C(v43, v55, &qword_10049C508);
  v45 = sub_100005574(&qword_10049C510);
  v46 = v44 + *(int *)(v45 + 48);
  *(_QWORD *)v46 = v29;
  *(_QWORD *)(v46 + 8) = v31;
  *(_BYTE *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v53;
  v47 = (_QWORD *)(v44 + *(int *)(v45 + 64));
  *v47 = 0;
  v47[1] = v39;
  v47[2] = v36;
  v47[3] = v38;
  sub_10003B4C0(v29, v31, v40);
  swift_bridgeObjectRetain();
  sub_1002B6AE4(0, v39, v36, v38);
  sub_100008758(v41, &qword_10049C508);
  sub_1002B6AF4(0, v39, v36, v38);
  sub_10003B4D0(v29, v31, v40);
  swift_bridgeObjectRelease();
  return sub_100008758(v42, &qword_10049C508);
}

uint64_t sub_1002B4914(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v13;
  _OWORD v14[14];
  _OWORD v15[9];
  _OWORD v16[2];
  _OWORD v17[11];
  char v18;
  char v19;
  _OWORD v20[13];
  _OWORD v21[2];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = __chkstk_darwin();
  v5 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static HorizontalAlignment.leading.getter(v4);
  sub_1002B4B64(a1, (uint64_t)v15);
  *(_OWORD *)((char *)&v17[7] + 7) = v15[7];
  *(_OWORD *)((char *)&v17[8] + 7) = v15[8];
  *(_OWORD *)((char *)&v17[9] + 7) = v16[0];
  v17[10] = *(_OWORD *)((char *)v16 + 9);
  *(_OWORD *)((char *)&v17[3] + 7) = v15[3];
  *(_OWORD *)((char *)&v17[4] + 7) = v15[4];
  *(_OWORD *)((char *)&v17[5] + 7) = v15[5];
  *(_OWORD *)((char *)&v17[6] + 7) = v15[6];
  *(_OWORD *)((char *)v17 + 7) = v15[0];
  *(_OWORD *)((char *)&v17[1] + 7) = v15[1];
  v18 = 0;
  *(_OWORD *)((char *)&v17[2] + 7) = v15[2];
  if (qword_100498910 != -1)
    swift_once(&qword_100498910, sub_10024A3A4);
  *(_OWORD *)((char *)&v14[7] + 1) = v17[7];
  *(_OWORD *)((char *)&v14[8] + 1) = v17[8];
  *(_OWORD *)((char *)&v14[9] + 1) = v17[9];
  *(_OWORD *)((char *)&v14[10] + 1) = v17[10];
  *(_OWORD *)((char *)&v14[3] + 1) = v17[3];
  *(_OWORD *)((char *)&v14[4] + 1) = v17[4];
  *(_OWORD *)((char *)&v14[5] + 1) = v17[5];
  *(_OWORD *)((char *)&v14[6] + 1) = v17[6];
  *(_OWORD *)((char *)v14 + 1) = v17[0];
  *(_OWORD *)((char *)&v14[1] + 1) = v17[1];
  *(_OWORD *)((char *)&v14[2] + 1) = v17[2];
  *(_OWORD *)((char *)&v14[11] + 8) = static EdgeInsets.zero;
  v19 = 0;
  v13 = (unint64_t)v6;
  LOBYTE(v14[0]) = 0;
  *(_OWORD *)((char *)&v14[12] + 8) = *(_OWORD *)&qword_1004A31C8;
  BYTE8(v14[13]) = 0;
  sub_1002B6A1C(a1, (uint64_t)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_1004615D0, v8 + v3, v7 | 7);
  sub_1000648AC((uint64_t)v5, v9 + v8, type metadata accessor for RazzmatazzDetailView);
  v10 = sub_100005574(&qword_10049C4C8);
  v11 = sub_1002B6980();
  View.onTapGesture(count:perform:)(1, sub_1002B6A64, v9, v10, v11);
  swift_release(v9);
  v20[12] = v14[11];
  v21[0] = v14[12];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)&v14[12] + 9);
  v20[8] = v14[7];
  v20[9] = v14[8];
  v20[10] = v14[9];
  v20[11] = v14[10];
  v20[4] = v14[3];
  v20[5] = v14[4];
  v20[6] = v14[5];
  v20[7] = v14[6];
  v20[0] = v13;
  v20[1] = v14[0];
  v20[2] = v14[1];
  v20[3] = v14[2];
  return sub_1002B6A70((uint64_t)v20);
}

uint64_t sub_1002B4B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  double v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[4];
  char v56;
  _BYTE v57[7];
  _BYTE v58[7];
  char v59;
  _BYTE v60[7];
  char v61;
  char v62;

  v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v3 + 96), "coordinate");
  v5 = v4;
  v7 = v6;
  v46 = *(_QWORD *)(v3 + 24);
  v47 = *(_QWORD *)(v3 + 16);
  v49 = 0;
  swift_bridgeObjectRetain();
  v8 = sub_100005574(&qword_100499760);
  v9 = State.init(wrappedValue:)(v55, &v49, v8);
  v45 = v55[0];
  v10 = static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(&v49, 0, 1, 0x4069000000000000, 0, v10, v11);
  v12 = v50;
  v43 = v51;
  v44 = v49;
  v40 = v52;
  v41 = v54;
  v42 = v53;
  v13 = *(_OWORD *)(v3 + 48);
  v55[0] = *(_OWORD *)(v3 + 32);
  v55[1] = v13;
  v14 = *(_OWORD *)(v3 + 80);
  v55[2] = *(_OWORD *)(v3 + 64);
  v55[3] = v14;
  v48[0] = sub_1002A3FBC(0);
  v48[1] = v15;
  v16 = sub_10024AF7C();
  v17 = Text.init<A>(_:)(v48, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  LODWORD(v48[0]) = static HierarchicalShapeStyle.secondary.getter();
  v24 = Text.foregroundStyle<A>(_:)(v48, v17, v19, v23, v21, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  sub_10003B4D0(v17, v19, v23);
  v31 = swift_bridgeObjectRelease();
  LOBYTE(v23) = static Edge.Set.all.getter(v31);
  v32 = EdgeInsets.init(_all:)(8.0);
  v62 = v12;
  v61 = v40;
  v59 = v30;
  v56 = 0;
  *(_DWORD *)(a2 + 57) = v48[0];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)v48 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v60[3];
  v33 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 113) = v33;
  v34 = *(_DWORD *)v57;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v57[3];
  *(_DWORD *)(a2 + 129) = v34;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v47;
  *(_QWORD *)(a2 + 24) = v46;
  *(_OWORD *)(a2 + 32) = v45;
  *(_QWORD *)(a2 + 48) = v44;
  *(_BYTE *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v43;
  *(_BYTE *)(a2 + 72) = v40;
  *(_QWORD *)(a2 + 80) = v42;
  *(_QWORD *)(a2 + 88) = v41;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v26;
  *(_BYTE *)(a2 + 112) = v30;
  *(_QWORD *)(a2 + 120) = v28;
  *(_BYTE *)(a2 + 128) = v23;
  *(double *)(a2 + 136) = v32;
  *(_QWORD *)(a2 + 144) = v35;
  *(_QWORD *)(a2 + 152) = v36;
  *(_QWORD *)(a2 + 160) = v37;
  *(_BYTE *)(a2 + 168) = 0;
  swift_retain(*((_QWORD *)&v45 + 1));
  swift_bridgeObjectRetain();
  v38 = (id)v45;
  sub_10003B4C0(v24, v26, v30);
  swift_bridgeObjectRetain();
  sub_10003B4D0(v24, v26, v30);
  swift_release(*((_QWORD *)&v45 + 1));

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002B4E18(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  void *v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unsigned int v26;
  id v27;
  NSURL *v28;
  void *v29;
  void *v30;
  Class isa;
  uint64_t v32;
  unint64_t v33;

  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v8 + 96), "coordinate");
  v10 = v9;
  v12 = v11;
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v13._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v13._object = (void *)0xEA00000000003D71;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v8 + 16);
  v15 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 1030515750;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  Double.write<A>(to:)(&v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v10);
  v18._countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  Double.write<A>(to:)(&v32, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v12);
  v19._countAndFlagsBits = 893221414;
  v19._object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  URL.init(string:)(v32, v33);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_100008758((uint64_t)v3, &qword_1004991A0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v21 = (void *)objc_opt_self(UIApplication);
  v22 = objc_msgSend(v21, "sharedApplication");
  URL._bridgeToObjectiveC()(v23);
  v25 = v24;
  v26 = objc_msgSend(v22, "canOpenURL:", v24);

  if (v26)
  {
    v27 = objc_msgSend(v21, "sharedApplication");
    URL._bridgeToObjectiveC()(v28);
    v30 = v29;
    sub_1002338D4((uint64_t)_swiftEmptyArrayStorage);
    _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
    sub_100006924(&qword_100499248, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_0, (uint64_t)&unk_100396C4C);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v27, "openURL:options:completionHandler:", v30, isa, 0);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_1002B5120@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  __int128 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  id v48[2];

  v35 = a1;
  v5 = type metadata accessor for Image.ResizingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v46 = a2[2];
  v41 = a2[2];
  v12 = sub_100005574(&qword_10049C448);
  State.wrappedValue.getter(&v36, v12);
  if (v36)
  {
    v13 = v36;
    v14 = Image.init(uiImage:)(v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    v15 = (void *)Image.resizable(capInsets:resizingMode:)(v8, v14, 0.0, 0.0, 0.0, 0.0);
    v16 = swift_release(v14);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
    v36 = v15;
    v37 = xmmword_100384A50;
    v38 = 0;
    v39 = 0;
    v40 = 0;
    swift_retain(v15);
    v17 = sub_100005574(&qword_10049C450);
    v18 = sub_100005574(&qword_10049C458);
    v19 = sub_1002B67F4(&qword_10049C460, &qword_10049C450);
    v20 = sub_1002B67F4(&qword_10049C468, &qword_10049C458);
    _ConditionalContent<>.init(storage:)(&v36, v17, v18, v19, v20);
    swift_release(v15);

  }
  else
  {
    sub_1000149A8((uint64_t)&v46, (uint64_t)v48, &qword_100499760);
    sub_1000149A8((uint64_t)&v46 + 8, (uint64_t)&v47, &qword_10049C440);
    v21 = (void *)Color.init(uiColor:)(objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.97, 0.96, 0.93, 1.0));
    v45 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v9);
    v22 = *(unsigned __int8 *)(v10 + 80);
    v23 = (v22 + 64) & ~v22;
    v24 = (char *)swift_allocObject(&unk_100461558, v23 + v11, v22 | 7);
    v25 = a2[1];
    *((_OWORD *)v24 + 1) = *a2;
    *((_OWORD *)v24 + 2) = v25;
    *((_OWORD *)v24 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v23], (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    v36 = v21;
    *(_QWORD *)&v37 = sub_1002B67C4;
    v38 = 0;
    v39 = 0;
    *((_QWORD *)&v37 + 1) = v24;
    v40 = 1;
    sub_1000595EC((uint64_t)&v45);
    sub_1000BC564(v48);
    sub_1002B6718(&v47);
    v26 = sub_100005574(&qword_10049C450);
    v27 = sub_100005574(&qword_10049C458);
    v28 = sub_1002B67F4(&qword_10049C460, &qword_10049C450);
    v29 = sub_1002B67F4(&qword_10049C468, &qword_10049C458);
    _ConditionalContent<>.init(storage:)(&v36, v26, v27, v28, v29);
  }
  result = *(double *)&v41;
  v31 = v42;
  v32 = v43;
  v33 = v44;
  *(_OWORD *)a3 = v41;
  *(_OWORD *)(a3 + 16) = v31;
  *(_QWORD *)(a3 + 32) = v32;
  *(_BYTE *)(a3 + 40) = v33;
  return result;
}

void sub_1002B54C8(uint64_t a1)
{
  double v1;
  uint64_t v2;
  double v3;

  v1 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v2);
  sub_1002B5508(v1, v3);
}

void sub_1002B5508(double a1, double a2)
{
  double *v2;
  double *v3;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  _OWORD *v18;
  _QWORD v19[5];
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  id v23;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:", *v2, v2[1]);
  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithPlacemark:", v6);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setName:", v8);

  v9 = sub_100005574(&qword_100499F50);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100384730;
  *(_QWORD *)(v10 + 32) = v7;
  v19[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  sub_1002B6854();
  v12 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithMapItems:mapSize:distance:", isa, a1, a2, 5000.0, v19[0]);

  v21 = *((_OWORD *)v3 + 2);
  sub_1000149A8((uint64_t)&v21, (uint64_t)&v23, &qword_100499760);
  sub_1000149A8((uint64_t)&v21 + 8, (uint64_t)&v22, &qword_10049C440);
  v15 = (_OWORD *)swift_allocObject(&unk_100461580, 64, 7);
  v16 = *((_OWORD *)v3 + 1);
  v15[1] = *(_OWORD *)v3;
  v15[2] = v16;
  v15[3] = *((_OWORD *)v3 + 2);
  v19[4] = sub_1002B68C8;
  v20 = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1000AC9C8;
  v19[3] = &unk_100461598;
  v17 = _Block_copy(v19);
  v18 = v20;
  swift_bridgeObjectRetain();
  sub_1000BC564(&v23);
  sub_1002B6718(&v22);
  objc_msgSend(v14, "startWithCompletionHandler:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

}

_QWORD *sub_1002B5758(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  uint64_t v12;

  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(v4, "image");
    v10 = *(_OWORD *)(a3 + 32);
    sub_1000149A8((uint64_t)&v10 + 8, (uint64_t)&v12, &qword_10049C440);
    sub_1000149A8((uint64_t)&v10, (uint64_t)&v11, &qword_100499760);
    v9 = v10;
    v8 = v5;
    sub_1000BC564(&v11);
    sub_1002B6718(&v12);
    v6 = v5;
    v7 = sub_100005574(&qword_10049C448);
    State.wrappedValue.setter(&v8, v7);

    sub_100222190(&v11);
    return sub_1002B68E8(&v12);
  }
  return result;
}

_QWORD *sub_1002B5834@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _OWORD *v1;
  double (*v3)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  __int128 v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10;

  v6 = v1[2];
  v7 = v1[1];
  v8 = v6;
  sub_1000149A8((uint64_t)&v8, (uint64_t)&v10, &qword_100499760);
  sub_1000149A8((uint64_t)&v8 + 8, (uint64_t)&v9, &qword_10049C440);
  v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject(&unk_100461530, 64, 7);
  v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = sub_1002B6710;
  a1[1] = v3;
  sub_1000595EC((uint64_t)&v7);
  sub_1000BC564(&v10);
  return sub_1002B6718(&v9);
}

void sub_1002B58E8()
{
  qword_10049C380 = 0x4046000000000000;
}

uint64_t sub_1002B58F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = sub_100005574(&qword_10049C388);
  v1 = sub_10002FFB8(&qword_10049C390, &qword_10049C388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_1002B705C, &v3, v0, v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  char *v41;
  void *v42;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v38);
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v42 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v42;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v40 = &v20[v27];
    v41 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v42;
    v29(v41, v40, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = *(uint64_t *)((char *)a2 + v31);
    *(uint64_t *)((char *)v4 + v31) = v33;
    v34 = (uint64_t *)((char *)v4 + v32);
    v35 = (uint64_t *)((char *)a2 + v32);
    v36 = *v35;
    swift_retain(v33);
    if (v36)
    {
      v37 = v35[1];
      *v34 = v36;
      v34[1] = v37;
      swift_retain(v37);
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
  }
  return v4;
}

double destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD *v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20))).n128_u64[0];
  v13 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  if (*v13)
    *(_QWORD *)&result = swift_release(v13[1]).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v40 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v40;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v38 = &v19[v26];
  v39 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v40;
  v28(v39, v38, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = *(_QWORD *)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v32;
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v35 = *v34;
  swift_retain(v32);
  if (v35)
  {
    v36 = v34[1];
    *v33 = v35;
    v33[1] = v36;
    swift_retain(v36);
  }
  else
  {
    *(_OWORD *)v33 = *(_OWORD *)v34;
  }
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = *(_QWORD *)((char *)a1 + v25);
  v27 = *(_QWORD *)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + v25) = v27;
  swift_retain(v27);
  swift_release(v26);
  v28 = *(int *)(a3 + 24);
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = *(_QWORD *)((char *)a1 + v28);
  v32 = *v30;
  if (!v31)
  {
    if (v32)
    {
      v35 = v30[1];
      *v29 = v32;
      v29[1] = v35;
      swift_retain(v35);
      return a1;
    }
LABEL_7:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    return a1;
  }
  if (!v32)
  {
    swift_release(v29[1]);
    goto LABEL_7;
  }
  v33 = v30[1];
  v34 = v29[1];
  *v29 = v32;
  v29[1] = v33;
  swift_retain(v33);
  swift_release(v34);
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = *v28;
  if (*v28)
  {
    v30 = v28[1];
    *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  return a1;
}

_QWORD *assignWithTake for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_release(v32);
  v33 = *(int *)(a3 + 24);
  v34 = (_QWORD *)((char *)a1 + v33);
  v35 = (_QWORD *)((char *)a2 + v33);
  v36 = *(_QWORD *)((char *)a1 + v33);
  v37 = *v35;
  if (!v36)
  {
    if (v37)
    {
      v40 = v35[1];
      *v34 = v37;
      v34[1] = v40;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v34 = *(_OWORD *)v35;
    return a1;
  }
  if (!v37)
  {
    swift_release(v34[1]);
    goto LABEL_7;
  }
  v38 = v35[1];
  v39 = v34[1];
  *v34 = v37;
  v34[1] = v38;
  swift_release(v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B63D4);
}

uint64_t sub_1002B63D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B6468);
}

uint64_t sub_1002B6468(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1002B64E0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10039B1F0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002B655C()
{
  return sub_10002FFB8(&qword_10049C430, &qword_10049C438, (uint64_t)&protocol conformance descriptor for List<A, B>);
}

double destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v5 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView.MapImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[4];
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = v6;

  v8 = a1[5];
  v9 = a2[5];
  a1[5] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &type metadata for RazzmatazzDetailView.MapImage;
}

uint64_t sub_1002B66FC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E2E84, 1);
}

double sub_1002B6710@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002B5120(a1, (_OWORD *)(v2 + 16), a2);
}

_QWORD *sub_1002B6718(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_1002B6740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  v7 = swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1002B67C4()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  sub_1002B54C8(v0 + 16);
}

uint64_t sub_1002B67F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100005600(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002B6854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C470;
  if (!qword_10049C470)
  {
    v1 = objc_opt_self(MKMapItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049C470);
  }
  return result;
}

uint64_t sub_1002B6894()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

_QWORD *sub_1002B68C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002B5758(a1, a2, v2 + 16);
}

uint64_t sub_1002B68D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1002B68E0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

_QWORD *sub_1002B68E8(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_1002B6910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B2B9C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002B6918@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B43B4(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &qword_10049C518, (uint64_t (*)(uint64_t))sub_1002B2C84, a1);
}

uint64_t sub_1002B6948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B43B4(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_10049C4F8, (uint64_t (*)(uint64_t))sub_1002B440C, a1);
}

uint64_t sub_1002B6978()
{
  uint64_t v0;

  return sub_1002B4914(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1002B6980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C4D0;
  if (!qword_10049C4D0)
  {
    v1 = sub_100005600(&qword_10049C4C8);
    sub_10002FFB8(&qword_10049C4D8, &qword_10049C4E0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C4D0);
  }
  return result;
}

uint64_t sub_1002B6A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RazzmatazzDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B6A64()
{
  return sub_1002B6C68(sub_1002B4E18);
}

uint64_t sub_1002B6A70(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)(a1 + 56);
  v2 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release(v2);
  sub_10003B4D0(v4, v5, v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002B6AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_retain(a4);
  return result;
}

double sub_1002B6AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;

  if (a3)
    *(_QWORD *)&result = swift_release(a4).n128_u64[0];
  return result;
}

uint64_t sub_1002B6B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002B6C5C()
{
  return sub_1002B6C68((uint64_t (*)(uint64_t))sub_1002B3848);
}

uint64_t sub_1002B6C68(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1002B6CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1002B6E00(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  sub_1002B3990(a1, a2, *(void **)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1002B6E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 20)));
  v14 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  if (*v14)
    swift_release(v14[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002B6FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_10049C554);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000EA88;
  return sub_1002B404C(a1, v5, v6, v7);
}

uint64_t sub_1002B7030()
{
  return sub_10002FFB8(&qword_10049C560, &qword_10049C568, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD v10[2];

  v9 = 0;
  State.init(wrappedValue:)(v10, &v9, &type metadata for Bool);
  v6 = v10[0];
  v7 = v10[1];
  result = AppStorage.init<A>(wrappedValue:_:store:)(0, 0xD000000000000010, 0x80000001003B9AE0, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = sub_1002B7174;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return sub_1002B7174;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites(uint64_t a1)
{
  return AppStorage.init<A>(wrappedValue:_:store:)(a1, 0xD000000000000010, 0x80000001003B9AE0, 0);
}

uint64_t sub_1002B7174()
{
  uint64_t v0;

  v0 = type metadata accessor for RazzmatazzController(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_1002A784C();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74[16];
  _OWORD *v75;
  char v76[16];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  char v85;

  v2 = (_OWORD *)v1;
  v72 = a1;
  v65 = type metadata accessor for TaskPriority(0);
  v3 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100005574(&qword_10049C588);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049C590);
  v61 = v8;
  __chkstk_darwin();
  v73 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100005574(&qword_10049C598);
  v69 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin();
  v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100005574(&qword_10049C5A0);
  v71 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin();
  v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v1;
  v12 = sub_100005574(&qword_10049C5A8);
  v13 = sub_10002FFB8(&qword_10049C5B0, &qword_10049C5A8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1002B7B18, v76, v12, v13);
  v14 = *(_QWORD *)(v1 + 8);
  v15 = *(_OWORD *)(v1 + 16);
  v85 = *(_BYTE *)(v1 + 32);
  v83 = *(_OWORD *)(v1 + 40);
  v84 = v15;
  v16 = *(_QWORD *)(v1 + 56);
  v17 = (_OWORD *)swift_allocObject(&unk_1004616D0, 80, 7);
  v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  v17[2] = v18;
  v19 = *(_OWORD *)(v1 + 48);
  v17[3] = *(_OWORD *)(v1 + 32);
  v17[4] = v19;
  v64 = v14;
  swift_retain(v14);
  sub_1002B9084((uint64_t *)&v84);
  sub_1002B90B4((uint64_t)&v83);
  v60 = v16;
  swift_retain(v16);
  static TaskPriority.userInitiated.getter(v20);
  v21 = v73;
  v22 = &v73[*(int *)(v8 + 36)];
  v23 = type metadata accessor for _TaskModifier(0);
  v24 = v65;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v22[*(int *)(v23 + 20)], v5, v65);
  *(_QWORD *)v22 = &unk_10049C5C0;
  *((_QWORD *)v22 + 1) = v17;
  v25 = v62;
  v26 = v21;
  v27 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v26, v7, v63);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v27);
  v82 = v83;
  v28 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(&v78, v28);
  v29 = v78;
  v30 = v79;
  v31 = v80;
  v32 = (_OWORD *)swift_allocObject(&unk_1004616F8, 80, 7);
  v33 = v2[1];
  v32[1] = *v2;
  v32[2] = v33;
  v34 = v2[3];
  v32[3] = v2[2];
  v32[4] = v34;
  swift_retain(v14);
  sub_1002B9084((uint64_t *)&v84);
  sub_1002B90B4((uint64_t)&v83);
  v35 = type metadata accessor for CitySelectionView(0);
  v36 = sub_1002B91B8();
  v37 = sub_100006924(&qword_10049C5E0, type metadata accessor for CitySelectionView, (uint64_t)&unk_100399980);
  v38 = swift_retain(v16);
  v39 = v66;
  v40 = v31;
  v41 = v61;
  v42 = (uint64_t)v73;
  View.sheet<A>(isPresented:onDismiss:content:)(v29, v30, v40, 0, 0, sub_1002B91B0, v32, v61, v38, v35, v36, v37);
  swift_release(v30);
  swift_release(v32);
  swift_release(v29);
  sub_100008758(v42, &qword_10049C590);
  v75 = v2;
  v43 = sub_100005574(&qword_10049C5E8);
  v78 = v41;
  v79 = v35;
  v80 = v36;
  v81 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v45 = sub_100005600(&qword_10049C5F0);
  v46 = sub_10002FFB8(&qword_10049C5F8, &qword_10049C5F0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v78 = v45;
  v79 = v46;
  v47 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v48 = v67;
  v49 = v68;
  v50 = v43;
  View.toolbar<A>(content:)(sub_1002B9400, v74, v68, v43, OpaqueTypeConformance2, v47);
  v51 = v49;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v49);
  v52 = v60;
  AppStorage.wrappedValue.getter(v60, &type metadata for Bool);
  LOBYTE(v82) = v78;
  v53 = (_OWORD *)swift_allocObject(&unk_100461720, 80, 7);
  v54 = v2[1];
  v53[1] = *v2;
  v53[2] = v54;
  v55 = v2[3];
  v53[3] = v2[2];
  v53[4] = v55;
  swift_retain(v64);
  sub_1002B9084((uint64_t *)&v84);
  sub_1002B90B4((uint64_t)&v83);
  swift_retain(v52);
  v78 = v51;
  v79 = v50;
  v80 = OpaqueTypeConformance2;
  v81 = v47;
  v56 = swift_getOpaqueTypeConformance2(&v78, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v57 = v70;
  View.onChange<A>(of:initial:_:)(&v82, 0, sub_1002B9C58, v53, v70, &type metadata for Bool, v56, &protocol witness table for Bool);
  v58 = swift_release(v53);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v71 + 8))(v48, v57, v58);
}

uint64_t sub_1002B7788@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47[16];
  uint64_t v48;
  char v49[16];
  uint64_t v50;

  v40 = a1;
  v46 = a2;
  v44 = sub_100005574(&qword_10049C7D0);
  __chkstk_darwin();
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049C7D8);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v39 - v5;
  sub_100005574(&qword_10049C7E0);
  __chkstk_darwin();
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049C7E8);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  v14 = sub_100005574(&qword_10049C7F0);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin();
  v19 = (char *)&v39 - v18;
  v20 = v40;
  v50 = v40;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v21 = sub_100005574(&qword_10049C7F8);
  sub_1002B812C(v20, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_1002B83F4((uint64_t)v11);
  sub_100008758((uint64_t)v8, &qword_10049C7E0);
  sub_1000149A8((uint64_t)v11, (uint64_t)v13, &qword_10049C7E8);
  v22 = sub_100005574(&qword_10049C800);
  v23 = sub_1002BD26C();
  v24 = sub_1002BD450();
  v39 = v19;
  Section<>.init(header:content:)(v13, sub_1002BD264, v49, v9, v22, v23, v24);
  v48 = v20;
  sub_1002B8790(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v3);
  v25 = sub_100005574(&qword_10049C888);
  v26 = sub_1002BD5E4();
  v27 = sub_1002BD560();
  Section<>.init(header:content:)(v3, sub_1002BD5DC, v47, v44, v25, v26, v27);
  v28 = v41;
  v29 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29(v16, v19, v14);
  v30 = v45;
  v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v32 = v42;
  v33 = v43;
  v31(v43, v6, v42);
  v34 = v46;
  v29(v46, v16, v14);
  v35 = sub_100005574(&qword_10049C8D0);
  v31(&v34[*(int *)(v35 + 48)], v33, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v6, v32);
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v39, v14);
  v36(v33, v32);
  return ((uint64_t (*)(char *, uint64_t))v37)(v16, v14);
}

uint64_t sub_1002B7B18@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1002B7788(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002B7B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _OWORD v75[2];

  v68 = a2;
  v69 = sub_100005574(&qword_10049C888);
  v65 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100005574(&qword_10049C8F0);
  __chkstk_darwin();
  v67 = (uint64_t *)((char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_10039B480);
  v12 = swift_getKeyPath(&unk_10039B4A8);
  static Published.subscript.getter(&v70, v10, KeyPath);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  v13 = (uint64_t)v70;
  v14 = *(_QWORD *)(a1 + 8);
  v75[0] = *(_OWORD *)(a1 + 40);
  v74 = *(_QWORD *)(a1 + 56);
  swift_retain(v14);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  sub_1002B90B4((uint64_t)v75);
  sub_1002B6718(&v74);
  v15 = sub_1002BC6EC(v13, v5, v6, v7);
  swift_release(v14);
  sub_1002B9030(v5, v6);
  sub_10029BCD4((uint64_t)v75);
  sub_1002B68E8(&v74);
  swift_bridgeObjectRelease();
  v16 = v15[2];
  swift_bridgeObjectRelease();
  if (v16)
  {
    v17 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v18 = swift_getKeyPath(&unk_10039B480);
    v19 = swift_getKeyPath(&unk_10039B4A8);
    static Published.subscript.getter(&v70, v17, v18);
    swift_release(v17);
    swift_release(v18);
    swift_release(v19);
    v20 = (uint64_t)v70;
    swift_retain(v14);
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_1002B90B4((uint64_t)v75);
    sub_1002B6718(&v74);
    v21 = sub_1002BC6EC(v20, v5, v6, v7);
    swift_release(v14);
    sub_1002B9030(v5, v6);
    sub_10029BCD4((uint64_t)v75);
    sub_1002B68E8(&v74);
    swift_bridgeObjectRelease();
    v70 = v21;
    v22 = swift_getKeyPath(&unk_10039B4D0);
    v23 = (_OWORD *)swift_allocObject(&unk_1004618C0, 80, 7);
    v24 = *(_OWORD *)(a1 + 16);
    v23[1] = *(_OWORD *)a1;
    v23[2] = v24;
    v25 = *(_OWORD *)(a1 + 48);
    v23[3] = *(_OWORD *)(a1 + 32);
    v23[4] = v25;
    swift_retain(v14);
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_1002B90B4((uint64_t)v75);
    sub_1002B6718(&v74);
    v26 = sub_100005574(&qword_100499E80);
    v27 = type metadata accessor for RazzmatazzView.CompactListCell(0);
    v28 = sub_10002FFB8(&qword_10049B980, &qword_100499E80, (uint64_t)&protocol conformance descriptor for [A]);
    v29 = sub_100006924(&qword_10049B988, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
    v30 = sub_100006924(&qword_10049C890, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10039B2E8);
    v31 = v64;
    ForEach<>.init(_:id:content:)(&v70, v22, sub_1002BDABC, v23, v26, v27, v28, v29, v30);
    v32 = v65;
    v33 = v67;
    v34 = v69;
    (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 16))(v67, v31, v69);
    swift_storeEnumTagMultiPayload(v33, v66, 1);
    v35 = sub_100005574(&qword_10049C858);
    v36 = sub_1002BD4BC();
    v37 = sub_1002BD560();
    _ConditionalContent<>.init(storage:)(v33, v35, v34, v36, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v34);
  }
  else
  {
    v70 = 0;
    v71 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v72 = 0xD000000000000017;
    v73 = 0x80000001003B9B30;
    v39 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v40 = swift_getKeyPath(&unk_10039B4E8);
    v41 = swift_getKeyPath(&unk_10039B510);
    static Published.subscript.getter(&v70, v39, v40);
    swift_release(v39);
    swift_release(v40);
    swift_release(v41);
    v42 = (uint64_t)v70;
    v43 = (void *)v71;
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = v42;
    v44._object = v43;
    String.append(_:)(v44);
    v45 = swift_bridgeObjectRelease();
    v46 = v72;
    v47 = v73;
    LODWORD(v70) = static HierarchicalShapeStyle.secondary.getter(v45);
    v48 = Text.foregroundStyle<A>(_:)(&v70, v46, v47, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v50 = v49;
    v52 = v51;
    v54 = v53;
    swift_bridgeObjectRelease();
    v55 = swift_getKeyPath(&unk_10039B530);
    v56 = static Font.subheadline.getter(v55);
    v57 = swift_getKeyPath(&unk_10039B338);
    v58 = v66;
    v59 = v67;
    *v67 = v48;
    v59[1] = v50;
    *((_BYTE *)v59 + 16) = v52 & 1;
    v59[3] = v54;
    v59[4] = v55;
    *((_BYTE *)v59 + 40) = 1;
    v59[6] = v57;
    v59[7] = v56;
    swift_storeEnumTagMultiPayload(v59, v58, 0);
    v60 = sub_100005574(&qword_10049C858);
    v61 = sub_1002BD4BC();
    v62 = sub_1002BD560();
    return _ConditionalContent<>.init(storage:)(v59, v60, v69, v61, v62);
  }
}

uint64_t sub_1002B812C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v4 = sub_100005574((uint64_t *)&unk_10049DB50);
  v29 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v28 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  v11 = type metadata accessor for RazzmatazzController(0);
  v12 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v13 = StateObject.wrappedValue.getter(v8, v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_10039B4E8);
  v15 = swift_getKeyPath(&unk_10039B510);
  static Published.subscript.getter(&v31, v13, KeyPath);
  swift_release(v13);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = v31;
  swift_bridgeObjectRelease();
  v30 = v16;
  v17 = *(_QWORD *)(a1 + 8);
  v31 = *(_OWORD *)(a1 + 40);
  v32 = *(_QWORD *)(a1 + 56);
  v18 = (_OWORD *)swift_allocObject(&unk_100461898, 80, 7);
  v19 = *(_OWORD *)(a1 + 16);
  v18[1] = *(_OWORD *)a1;
  v18[2] = v19;
  v20 = *(_OWORD *)(a1 + 48);
  v18[3] = *(_OWORD *)(a1 + 32);
  v18[4] = v20;
  swift_retain(v17);
  KeyValueObservationTrigger.keyPath.getter(v8, v9);
  sub_1002B90B4((uint64_t)&v31);
  sub_1002B6718(&v32);
  v21 = sub_10024AF7C();
  Button<>.init<A>(_:action:)(&v30, sub_1002BD80C, v18, &type metadata for String, v21);
  v22 = v28;
  v23 = v29;
  v24 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v24(v28, v7, v4);
  *(_OWORD *)a2 = xmmword_100395430;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_100395440;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = _swiftEmptyArrayStorage;
  v25 = sub_100005574(&qword_10049C8E8);
  v24((char *)(a2 + *(int *)(v25 + 64)), v22, v4);
  sub_10003B4C0(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  sub_10003B4C0(32, 0xE100000000000000, 0);
  v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  swift_bridgeObjectRetain();
  v26(v7, v4);
  v26(v22, v4);
  sub_10003B4D0(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  sub_10003B4D0(1918985550, 0xE400000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002B83F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  __n128 v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;

  v44 = a1;
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100005574(&qword_10049C830);
  __chkstk_darwin();
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049C8E0);
  v6 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049C828);
  __chkstk_darwin();
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v43 = sub_100005574(&qword_10049C818);
  v12 = __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Font.callout.getter(v12);
  KeyPath = swift_getKeyPath(&unk_10039B338);
  sub_100014A7C(v41, (uint64_t)v5, &qword_10049C7E0);
  v17 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *v17 = KeyPath;
  v17[1] = v15;
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = sub_1002BD3B4();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v3, v20);
  sub_100008758((uint64_t)v5, &qword_10049C830);
  v21 = type metadata accessor for Text.Case(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
  v22 = swift_getKeyPath(&unk_10039B450);
  v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  v24 = sub_100005574(&qword_10049B888);
  sub_100014A7C((uint64_t)v2, (uint64_t)v23 + *(int *)(v24 + 28), &qword_10049B890);
  *v23 = v22;
  v25 = v42;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v42);
  sub_100008758((uint64_t)v2, &qword_10049B890);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  v27 = static Edge.Set.horizontal.getter(v26);
  if (qword_100498AE8 != -1)
    swift_once(&qword_100498AE8, sub_1002BC2CC);
  v28 = EdgeInsets.init(_all:)(*(double *)&qword_10049C580);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_100014A7C((uint64_t)v11, (uint64_t)v14, &qword_10049C828);
  v35 = &v14[*(int *)(v43 + 36)];
  *v35 = v27;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  sub_100008758((uint64_t)v11, &qword_10049C828);
  if (qword_100498910 != -1)
    swift_once(&qword_100498910, sub_10024A3A4);
  v43 = static EdgeInsets.zero;
  v36 = qword_1004A31C8;
  v37 = unk_1004A31D0;
  v38 = v44;
  sub_100014A7C((uint64_t)v14, v44, &qword_10049C818);
  v39 = v38 + *(int *)(sub_100005574(&qword_10049C7E8) + 36);
  *(_OWORD *)v39 = v43;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v37;
  *(_BYTE *)(v39 + 32) = 0;
  return sub_100008758((uint64_t)v14, &qword_10049C818);
}

uint64_t sub_1002B8790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  __n128 v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v55 = a5;
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v50 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049C8D8);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin();
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100005574(&qword_10049C8B8);
  __chkstk_darwin();
  v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v53 = sub_100005574(&qword_10049C8A8);
  v14 = __chkstk_darwin();
  v54 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Font.callout.getter(v14);
  KeyPath = swift_getKeyPath(&unk_10039B338);
  v56 = a1;
  v57 = a2;
  v58 = a3 & 1;
  v59 = a4;
  v60 = KeyPath;
  v61 = v16;
  sub_10003B4C0(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = sub_100005574(&qword_10049C8C0);
  v21 = sub_1002BD754(&qword_10049C8C8, &qword_10049C8C0, (unint64_t *)&unk_10049E600, &qword_10049B8D8);
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  sub_10003B4D0(a1, a2, a3 & 1);
  v22 = v16;
  v23 = (uint64_t)v48;
  swift_release(v22);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v24 = type metadata accessor for Text.Case(0);
  v25 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v50, 1, 1, v24);
  v26 = swift_getKeyPath(&unk_10039B450);
  v27 = (uint64_t *)(v23 + *(int *)(v49 + 36));
  v28 = sub_100005574(&qword_10049B888);
  sub_100014A7C(v25, (uint64_t)v27 + *(int *)(v28 + 28), &qword_10049B890);
  *v27 = v26;
  v30 = v51;
  v29 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v23, v12, v52);
  sub_100008758(v25, &qword_10049B890);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v29);
  v32 = static Edge.Set.horizontal.getter(v31);
  if (qword_100498AE8 != -1)
    swift_once(&qword_100498AE8, sub_1002BC2CC);
  v33 = EdgeInsets.init(_all:)(*(double *)&qword_10049C580);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v54;
  sub_100014A7C(v23, v54, &qword_10049C8B8);
  v41 = v40 + *(int *)(v53 + 36);
  *(_BYTE *)v41 = v32;
  *(double *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v35;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  sub_100008758(v23, &qword_10049C8B8);
  if (qword_100498910 != -1)
    swift_once(&qword_100498910, sub_10024A3A4);
  v53 = static EdgeInsets.zero;
  v42 = qword_1004A31C8;
  v43 = unk_1004A31D0;
  v44 = v55;
  sub_100014A7C(v40, v55, &qword_10049C8A8);
  v45 = v44 + *(int *)(sub_100005574(&qword_10049C7D0) + 36);
  *(_OWORD *)v45 = v53;
  *(_QWORD *)(v45 + 16) = v42;
  *(_QWORD *)(v45 + 24) = v43;
  *(_BYTE *)(v45 + 32) = 0;
  return sub_100008758(v40, &qword_10049C8A8);
}

uint64_t sub_1002B8B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = type metadata accessor for RazzmatazzController(0);
  v6 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  KeyPath = swift_getKeyPath(&unk_10039B480);
  v9 = swift_getKeyPath(&unk_10039B4A8);
  static Published.subscript.getter(&v23, v7, KeyPath);
  swift_release(v7);
  swift_release(KeyPath);
  swift_release(v9);
  v21 = v23;
  v10 = swift_getKeyPath(&unk_10039B4D0);
  v11 = *(_QWORD *)(a1 + 8);
  v23 = *(_OWORD *)(a1 + 40);
  v22 = *(_QWORD *)(a1 + 56);
  v12 = (_OWORD *)swift_allocObject(&unk_100461870, 80, 7);
  v13 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  v12[2] = v13;
  v14 = *(_OWORD *)(a1 + 48);
  v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v14;
  swift_retain(v11);
  KeyValueObservationTrigger.keyPath.getter(v2, v3);
  sub_1002B90B4((uint64_t)&v23);
  sub_1002B6718(&v22);
  v15 = sub_100005574(&qword_100499E80);
  v16 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v17 = sub_10002FFB8(&qword_10049B980, &qword_100499E80, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = sub_100006924(&qword_10049B988, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v19 = sub_100006924(&qword_10049C890, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10039B2E8);
  return ForEach<>.init(_:id:content:)(&v21, v10, sub_1002BD7E8, v12, v15, v16, v17, v18, v19);
}

double sub_1002B8D78@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;

  sub_100082248(a1, a3, type metadata accessor for Razzmatazz);
  v6 = *a2;
  v5 = a2[1];
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell(0) + 20));
  *v7 = v6;
  v7[1] = v5;
  *(_QWORD *)&result = swift_retain(v5).n128_u64[0];
  return result;
}

uint64_t sub_1002B8DCC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1[2] = a1;
  v3 = sub_100005574(&qword_10049AEC0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[4] = v4;
  v5 = static MainActor.shared.getter(v4);
  v1[5] = v5;
  v1[6] = static MainActor.shared.getter(v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (_QWORD *)swift_task_alloc(dword_10049C714);
  v1[7] = v7;
  *v7 = v1;
  v7[1] = sub_1002B8E64;
  return sub_1002BC9B0(v6);
}

uint64_t sub_1002B8E64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002B8EDC, v4, v5);
}

uint64_t sub_1002B8EDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release(v0[6]);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain(v10);
  v12 = swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100461848, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  v15 = sub_100283A94(v3, (uint64_t)&unk_10049C7C8, (uint64_t)v14);
  swift_release(v15);
  swift_release(v10);
  swift_bridgeObjectRelease();
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002BDAB8, v16, v17);
}

double sub_1002B9030(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_1002B9038()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10049C5BC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return sub_1002B8DCC(v0 + 16);
}

uint64_t *sub_1002B9084(uint64_t *a1)
{
  KeyValueObservationTrigger.keyPath.getter(*a1, a1[1]);
  return a1;
}

uint64_t sub_1002B90B4(uint64_t a1)
{
  swift_retain(*(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1002B90DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for RazzmatazzController(0);
  v7 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  *(_QWORD *)a2 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = sub_1002A11D4;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  *v10 = swift_getKeyPath(&unk_10039B420);
  v11 = sub_100005574(&qword_10049F780);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_1002B91B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B90DC(v1 + 16, a1);
}

unint64_t sub_1002B91B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C5D0;
  if (!qword_10049C5D0)
  {
    v1 = sub_100005600(&qword_10049C590);
    sub_10002FFB8(&qword_10049C5D8, &qword_10049C588, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100006924(&qword_10049B748, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C5D0);
  }
  return result;
}

uint64_t sub_1002B9254(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  _QWORD v19[4];

  type metadata accessor for ToolbarItemPlacement(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100005574(&qword_10049C5F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v6);
  v18 = a1;
  v9 = sub_100005574(&qword_10049C750);
  v10 = sub_100005600(&qword_10049C758);
  v11 = type metadata accessor for ButtonMenuStyle(255);
  v12 = sub_10002FFB8(&qword_10049C760, &qword_10049C758, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v13 = sub_100006924(&qword_10049C768, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  v19[0] = v10;
  v19[1] = v11;
  v19[2] = v12;
  v19[3] = v13;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v3, sub_1002BD18C, v17, v9, OpaqueTypeConformance2);
  v15 = sub_10002FFB8(&qword_10049C5F8, &qword_10049C5F0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v4, v15);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1002B9400()
{
  uint64_t v0;

  return sub_1002B9254(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002B9408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[10];

  v14[1] = a2;
  v3 = type metadata accessor for ButtonMenuStyle(0);
  v14[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049C758);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[8] = a1;
  v14[4] = a1;
  sub_100005574(&qword_10049C770);
  sub_100005574(&qword_10049C778);
  sub_1002BD1A4();
  sub_10002FFB8(&qword_10049C798, &qword_10049C778, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v10 = Menu.init(content:label:)(sub_1002BD194);
  ButtonMenuStyle.init()(v10);
  v11 = sub_10002FFB8(&qword_10049C760, &qword_10049C758, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v12 = sub_100006924(&qword_10049C768, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v5, v6, v3, v11, v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1002B95CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  AppStorage.projectedValue.getter(&v5, *(_QWORD *)(a1 + 56), &type metadata for Bool);
  v1 = sub_100005574(&qword_10049C7A0);
  v2 = sub_10002FFB8(&qword_10049C7A8, &qword_10049C7A0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v3 = sub_10024AF7C();
  return Picker<>.init<A>(_:selection:content:)(v6, &v5, sub_1002B9694, 0, &type metadata for Bool, v1, &type metadata for String, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_1002B9694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = sub_100005574(&qword_10049C7B0);
  v25 = v1;
  __chkstk_darwin();
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10049C530);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049C7B8);
  __chkstk_darwin();
  v26 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v24 - v10;
  __chkstk_darwin();
  v13 = (char *)&v24 - v12;
  __chkstk_darwin();
  v15 = (char *)&v24 - v14;
  v16 = LocalizedStringKey.init(stringLiteral:)(7105601, 0xE300000000000000);
  Label<>.init(_:systemImage:)(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v3, v7, v4);
  v3[*(int *)(v1 + 36)] = 0;
  sub_100014A7C((uint64_t)v3, (uint64_t)v13, &qword_10049C7B0);
  v13[*(int *)(v8 + 36)] = 0;
  sub_100008758((uint64_t)v3, &qword_10049C7B0);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  sub_1000149A8((uint64_t)v13, (uint64_t)v15, &qword_10049C7B8);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x657469726F766146, 0xE900000000000073);
  Label<>.init(_:systemImage:)(v19);
  v17(v3, v7, v4);
  v3[*(int *)(v25 + 36)] = 1;
  sub_100014A7C((uint64_t)v3, (uint64_t)v11, &qword_10049C7B0);
  v11[*(int *)(v8 + 36)] = 1;
  sub_100008758((uint64_t)v3, &qword_10049C7B0);
  v18(v7, v4);
  sub_1000149A8((uint64_t)v11, (uint64_t)v13, &qword_10049C7B8);
  sub_100014A7C((uint64_t)v15, (uint64_t)v11, &qword_10049C7B8);
  v20 = v26;
  sub_100014A7C((uint64_t)v13, v26, &qword_10049C7B8);
  v21 = v27;
  sub_100014A7C((uint64_t)v11, v27, &qword_10049C7B8);
  v22 = sub_100005574(&qword_10049C7C0);
  sub_100014A7C(v20, v21 + *(int *)(v22 + 48), &qword_10049C7B8);
  sub_100008758((uint64_t)v13, &qword_10049C7B8);
  sub_100008758((uint64_t)v15, &qword_10049C7B8);
  sub_100008758(v20, &qword_10049C7B8);
  return sub_100008758((uint64_t)v11, &qword_10049C7B8);
}

uint64_t sub_1002B99B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t result;
  id v16;
  _BYTE v17[16];

  sub_100005574(&qword_10049EC70);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = Image.init(systemName:)(0xD000000000000026, 0x80000001003B9B00);
  static SymbolRenderingMode.palette.getter();
  v7 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = Image.symbolRenderingMode(_:)(v5, v6);
  swift_release(v6);
  sub_100008758((uint64_t)v5, &qword_10049EC70);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = AppStorage.wrappedValue.getter(v9, &type metadata for Bool);
  if (v17[15] == 1)
    v12 = static Color.white.getter(v10);
  else
    v12 = static Color.accentColor.getter(v11);
  v13 = v12;
  AppStorage.wrappedValue.getter(v9, &type metadata for Bool);
  if (v17[14] == 1)
  {
    result = static Color.accentColor.getter(v14);
  }
  else
  {
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    result = Color.init(uiColor:)(v16);
  }
  *a2 = v8;
  a2[1] = v13;
  a2[2] = result;
  return result;
}

double sub_1002B9B1C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  double result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  char v22;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = *(_QWORD *)(a3 + 8);
    v11 = *(_OWORD *)(a3 + 16);
    v22 = *(_BYTE *)(a3 + 32);
    v20 = *(_OWORD *)(a3 + 40);
    v21 = v11;
    v19 = *(_QWORD *)(a3 + 56);
    swift_retain(v10);
    sub_1002B9084((uint64_t *)&v21);
    sub_1002B90B4((uint64_t)&v20);
    v12 = sub_1002B6718(&v19);
    v13 = static MainActor.shared.getter(v12);
    v14 = swift_allocObject(&unk_1004617F8, 96, 7);
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
    v15 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v14 + 48) = v15;
    v16 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v14 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v14 + 80) = v16;
    v17 = sub_100283A94((uint64_t)v8, (uint64_t)&unk_10049C708, v14);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

double sub_1002B9C58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_1002B9B1C(a1, a2, v2 + 16);
}

uint64_t sub_1002B9C60(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzView.body>>, 1);
}

uint64_t sub_1002B9C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4[2] = a4;
  v6 = sub_100005574(&qword_10049AEC0);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[4] = v7;
  v8 = static MainActor.shared.getter(v7);
  v4[5] = v8;
  v4[6] = static MainActor.shared.getter(v8);
  v9 = *(_QWORD *)(a4 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_10049C714);
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_1002B9D08;
  return sub_1002BC9B0(v9);
}

uint64_t sub_1002B9D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002B9D80, v4, v5);
}

uint64_t sub_1002B9D80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release(v0[6]);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain(v10);
  v12 = swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100461820, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  v15 = sub_100283A94(v3, (uint64_t)&unk_10049C720, (uint64_t)v14);
  swift_release(v15);
  swift_release(v10);
  swift_bridgeObjectRelease();
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002B9ED0, v16, v17);
}

uint64_t sub_1002B9ED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B9F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  __int128 v49;
  uint64_t v50;

  v50 = a1;
  sub_100005574(&qword_10049C690);
  __chkstk_darwin();
  v3 = (double *)((char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100005574(&qword_10049C698);
  __chkstk_darwin();
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049C6A0);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049C6A8);
  v11 = __chkstk_darwin();
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v11);
  if (qword_100498AE8 != -1)
    swift_once(&qword_100498AE8, sub_1002BC2CC);
  v15 = *(double *)&qword_10049C580;
  *(_QWORD *)v3 = v14;
  v3[1] = v15;
  *((_BYTE *)v3 + 16) = 0;
  v16 = sub_100005574(&qword_10049C6B0);
  v17 = sub_1002BA264(v1, (uint64_t)v3 + *(int *)(v16 + 44));
  v18 = static Edge.Set.all.getter(v17);
  v19 = EdgeInsets.init(_all:)(v15);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  sub_100014A7C((uint64_t)v3, (uint64_t)v6, &qword_10049C690);
  v26 = &v6[*(int *)(v4 + 36)];
  *v26 = v18;
  *((double *)v26 + 1) = v19;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v23;
  *((_QWORD *)v26 + 4) = v25;
  v26[40] = 0;
  v27 = sub_100008758((uint64_t)v3, &qword_10049C690);
  v28 = static Edge.Set.leading.getter(v27);
  if (qword_100498AE0 != -1)
    swift_once(&qword_100498AE0, sub_1002BC2BC);
  v29 = EdgeInsets.init(_all:)(*(double *)&qword_10049C578);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_100014A7C((uint64_t)v6, (uint64_t)v9, &qword_10049C698);
  v36 = &v9[*(int *)(v7 + 36)];
  *v36 = v28;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100008758((uint64_t)v6, &qword_10049C698);
  if (qword_100498910 != -1)
    swift_once(&qword_100498910, sub_10024A3A4);
  v49 = static EdgeInsets.zero;
  v37 = qword_1004A31C8;
  v38 = unk_1004A31D0;
  sub_100014A7C((uint64_t)v9, (uint64_t)v13, &qword_10049C6A0);
  v39 = &v13[*(int *)(v10 + 36)];
  *(_OWORD *)v39 = v49;
  *((_QWORD *)v39 + 2) = v37;
  *((_QWORD *)v39 + 3) = v38;
  v39[32] = 0;
  v40 = sub_100008758((uint64_t)v9, &qword_10049C6A0);
  v41 = static Alignment.leading.getter(v40);
  v43 = v42;
  v44 = sub_100005574(&qword_10049C6B8);
  v45 = v50;
  v46 = v50 + *(int *)(v44 + 36);
  sub_1002BB064(v46);
  v47 = (uint64_t *)(v46 + *(int *)(sub_100005574(&qword_10049C6C0) + 36));
  *v47 = v41;
  v47[1] = v43;
  return sub_1000149A8((uint64_t)v13, v45, &qword_10049C6A8);
}

uint64_t sub_1002BA264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  _BYTE v87[7];
  unsigned __int8 v88;
  _BYTE v89[7];
  unsigned __int8 v90;
  _BYTE v91[7];
  unsigned __int8 v92;
  _BYTE v93[7];
  unsigned __int8 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  _BYTE v106[7];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v70 = a2;
  v66 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  __chkstk_darwin();
  v67 = v3;
  v69 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049C500);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_100005574(&qword_10049E4E0);
  __chkstk_darwin();
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100005574(&qword_10049C508);
  __chkstk_darwin();
  v79 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (uint64_t)&v60 - v18;
  type metadata accessor for Razzmatazz(0);
  v68 = a1;
  sub_1002464B0(v10);
  v19 = sub_100005574(&qword_10049F810);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_100498AD8 != -1)
    swift_once(&qword_100498AD8, sub_1002BB540);
  v80 = qword_10049C570;
  v81 = 0;
  v82 = qword_10049C570;
  v83 = 0;
  v84 = 0;
  v85 = 513;
  v20 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v77);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v80, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_100006798((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F7D0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v21 = &v16[*(int *)(v75 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  v22 = static Border.artwork;
  v23 = qword_1004A3D60;
  v24 = byte_1004A3D68;
  v25 = v79;
  sub_100014A7C((uint64_t)v16, v79, &qword_10049E4E0);
  v26 = v25 + *(int *)(v76 + 36);
  *(_QWORD *)v26 = v22;
  *(_QWORD *)(v26 + 8) = v23;
  *(_BYTE *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = 0;
  *(_BYTE *)(v26 + 40) = 1;
  swift_retain(v22);
  sub_100008758((uint64_t)v16, &qword_10049E4E0);
  v27 = v78;
  v28 = sub_1000149A8(v25, v78, &qword_10049C508);
  v65 = static HorizontalAlignment.leading.getter(v28);
  if (qword_100498AE0 != -1)
    swift_once(&qword_100498AE0, sub_1002BC2BC);
  v75 = qword_10049C578;
  v29 = v68;
  sub_1002BA9A8(v68, &v103);
  v30 = v105;
  v73 = v104;
  v74 = v107;
  v76 = v109;
  v77 = v108;
  v31 = v110;
  v62 = v112;
  v63 = v111;
  v71 = v103;
  v72 = v113;
  v32 = v114;
  v64 = v115;
  KeyPath = swift_getKeyPath(&unk_10039B3C8);
  v94 = 0;
  v92 = v30;
  v90 = v31;
  v88 = v32;
  v86 = 0;
  v33 = v69;
  sub_100082248(v29, v69, type metadata accessor for RazzmatazzView.CompactListCell);
  v34 = *(unsigned __int8 *)(v66 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_1004617D0, v35 + v67, v34 | 7);
  sub_1000648AC(v33, v36 + v35, type metadata accessor for RazzmatazzView.CompactListCell);
  sub_100014A7C(v27, v25, &qword_10049C508);
  v37 = v94;
  LODWORD(v66) = v94;
  v38 = v92;
  LODWORD(v67) = v92;
  v39 = v90;
  LODWORD(v68) = v90;
  v40 = v88;
  LODWORD(v69) = v88;
  LOBYTE(v33) = v86;
  v41 = v25;
  v42 = v70;
  sub_100014A7C(v41, v70, &qword_10049C508);
  v43 = (int *)sub_100005574(&qword_10049C6E8);
  v44 = (_OWORD *)(v42 + v43[12]);
  v45 = v65;
  *(_QWORD *)&v95 = v65;
  *((_QWORD *)&v95 + 1) = v75;
  LOBYTE(v96) = v37;
  *(_DWORD *)((char *)&v96 + 1) = *(_DWORD *)v93;
  DWORD1(v96) = *(_DWORD *)&v93[3];
  *((_QWORD *)&v96 + 1) = v71;
  *(_QWORD *)&v97 = v73;
  BYTE8(v97) = v38;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v91;
  HIDWORD(v97) = *(_DWORD *)&v91[3];
  *(_QWORD *)&v98 = v74;
  *((_QWORD *)&v98 + 1) = v77;
  *(_QWORD *)&v99 = v76;
  BYTE8(v99) = v39;
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v89;
  HIDWORD(v99) = *(_DWORD *)&v89[3];
  v47 = v62;
  v46 = v63;
  *(_QWORD *)&v100 = v63;
  *((_QWORD *)&v100 + 1) = v62;
  *(_QWORD *)&v101 = v72;
  BYTE8(v101) = v40;
  *(_DWORD *)((char *)&v101 + 9) = *(_DWORD *)v87;
  HIDWORD(v101) = *(_DWORD *)&v87[3];
  v48 = v64;
  v49 = KeyPath;
  *(_QWORD *)&v102[0] = v64;
  *((_QWORD *)&v102[0] + 1) = KeyPath;
  *(_QWORD *)&v102[1] = 1;
  BYTE8(v102[1]) = v33;
  v50 = v95;
  v51 = v96;
  v52 = v98;
  v53 = v99;
  v44[2] = v97;
  v44[3] = v52;
  *v44 = v50;
  v44[1] = v51;
  v54 = v100;
  v55 = v101;
  *(_OWORD *)((char *)v44 + 121) = *(_OWORD *)((char *)v102 + 9);
  v56 = v102[0];
  v44[6] = v55;
  v44[7] = v56;
  v44[4] = v53;
  v44[5] = v54;
  v57 = v42 + v43[16];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 0;
  v58 = (uint64_t (**)())(v42 + v43[20]);
  *v58 = sub_1002BC480;
  v58[1] = (uint64_t (*)())v36;
  sub_1002BC4C8((uint64_t)&v95);
  swift_retain(v36);
  sub_100008758(v78, &qword_10049C508);
  swift_release(v36);
  v103 = v45;
  v104 = v75;
  v105 = v66;
  *(_DWORD *)v106 = *(_DWORD *)v93;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v93[3];
  v107 = v71;
  v108 = v73;
  LOBYTE(v109) = v67;
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v91;
  HIDWORD(v109) = *(_DWORD *)&v91[3];
  v110 = v74;
  v111 = v77;
  v112 = v76;
  LOBYTE(v113) = v68;
  HIDWORD(v113) = *(_DWORD *)&v89[3];
  *(_DWORD *)((char *)&v113 + 1) = *(_DWORD *)v89;
  v114 = v46;
  v115 = v47;
  v116 = v72;
  v117 = v69;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)v118 = *(_DWORD *)v87;
  v119 = v48;
  v120 = v49;
  v121 = 1;
  v122 = v33;
  sub_1002BC580((uint64_t)&v103);
  return sub_100008758(v79, &qword_10049C508);
}

uint64_t sub_1002BA9A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  char *v56;
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  unint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  __int128 v108;
  _OWORD v109[4];

  v92 = a1;
  v93 = a2;
  type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin();
  v97 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar(0);
  __chkstk_darwin();
  v96 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v95 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for TimeZone(0);
  v5 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C6F0);
  __chkstk_darwin();
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C6F8);
  __chkstk_darwin();
  v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Date.FormatStyle(0);
  v102 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v103 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Razzmatazz(0);
  *(_QWORD *)&v109[0] = Artist.name.getter(v13);
  *((_QWORD *)&v109[0] + 1) = v14;
  v98 = sub_10024AF7C();
  v15 = Text.init<A>(_:)(v109, &type metadata for String, v98);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v109[0]) = static HierarchicalShapeStyle.primary.getter(v15);
  v104 = Text.foregroundStyle<A>(_:)(v109, v15, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v100 = v22;
  v101 = v23;
  v99 = v24 & 1;
  sub_10003B4D0(v15, v17, v21);
  v25 = swift_bridgeObjectRelease();
  static Date.FormatStyle.DateStyle.abbreviated.getter(v25);
  v26 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 0, 1, v26);
  static Date.FormatStyle.TimeStyle.omitted.getter(v27);
  v28 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 0, 1, v28);
  v29 = (char *)(v92 + *(int *)(v13 + 32));
  v30 = type metadata accessor for Razzmatazz.Venue(0);
  v31 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 16);
  v32 = v7;
  v33 = v31(v7, &v29[*(int *)(v30 + 32)], v94);
  v34 = v95;
  v35 = static Locale.autoupdatingCurrent.getter(v33);
  v36 = v96;
  v37 = static Calendar.autoupdatingCurrent.getter(v35);
  v38 = v97;
  static FormatStyleCapitalizationContext.unknown.getter(v37);
  v39 = v103;
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v11, v9, v34, v36, v32, v38);
  v40 = sub_100006924(&qword_10049B8B8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v108, v39, v105, v40);
  v109[0] = v108;
  v41._countAndFlagsBits = 12288995;
  v41._object = (void *)0xA300000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v42);
  v43 = swift_bridgeObjectRelease();
  v44 = v109[0];
  LODWORD(v109[0]) = static HierarchicalShapeStyle.secondary.getter(v43);
  v45 = Text.foregroundStyle<A>(_:)(v109, v44, *((_QWORD *)&v44 + 1), 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v47 = v46;
  LOBYTE(v9) = v48;
  v50 = v49;
  v51 = swift_bridgeObjectRelease();
  v52 = v9 & 1;
  v53 = static Font.footnote.getter(v51);
  v96 = (char *)Text.font(_:)(v53, v45, v47, v52, v50);
  v95 = v54;
  LOBYTE(v32) = v55;
  v97 = v56;
  swift_release(v53);
  v57 = v32 & 1;
  sub_10003B4D0(v45, v47, v52);
  swift_bridgeObjectRelease();
  v58 = *((_OWORD *)v29 + 3);
  v109[0] = *((_OWORD *)v29 + 2);
  v109[1] = v58;
  v59 = *((_OWORD *)v29 + 5);
  v109[2] = *((_OWORD *)v29 + 4);
  v109[3] = v59;
  *(_QWORD *)&v108 = sub_1002A3FBC(2);
  *((_QWORD *)&v108 + 1) = v60;
  v61 = Text.init<A>(_:)(&v108, &type metadata for String, v98);
  v63 = v62;
  v65 = v64;
  v67 = v66 & 1;
  LODWORD(v108) = static HierarchicalShapeStyle.secondary.getter(v61);
  v68 = Text.foregroundStyle<A>(_:)(&v108, v61, v63, v67, v65, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v70 = v69;
  v72 = v71;
  v74 = v73 & 1;
  sub_10003B4D0(v61, v63, v67);
  v75 = swift_bridgeObjectRelease();
  v76 = static Font.footnote.getter(v75);
  v77 = Text.font(_:)(v76, v68, v70, v74, v72);
  v79 = v78;
  LOBYTE(v53) = v80;
  v82 = v81;
  swift_release(v76);
  LOBYTE(v53) = v53 & 1;
  sub_10003B4D0(v68, v70, v74);
  swift_bridgeObjectRelease();
  v83 = v99;
  LOBYTE(v108) = v99;
  v107 = v57;
  v106 = v53;
  v84 = v104;
  v85 = v93;
  v86 = v100;
  *v93 = v104;
  v85[1] = v86;
  *((_BYTE *)v85 + 16) = v83;
  v87 = (uint64_t)v96;
  v85[3] = v101;
  v85[4] = v87;
  v88 = (uint64_t)v95;
  v85[5] = v95;
  *((_BYTE *)v85 + 48) = v57;
  v85[7] = v97;
  v85[8] = v77;
  v85[9] = v79;
  *((_BYTE *)v85 + 80) = v53;
  v85[11] = v82;
  sub_10003B4C0(v84, v86, v83);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v87, v88, v57);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v77, v79, v53);
  v89 = *(void (**)(char *, uint64_t))(v102 + 8);
  swift_bridgeObjectRetain();
  v89(v103, v105);
  sub_10003B4D0(v77, v79, v106);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v87, v88, v107);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v104, v86, v108);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002BB064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  __n128 v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v59 = a1;
  v52 = sub_100005574(&qword_10049E750);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  __chkstk_darwin();
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C6C8);
  __chkstk_darwin();
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100005574(&qword_10049C6D0);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = sub_100005574(&qword_10049C6D8);
  __chkstk_darwin();
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049C6E0);
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  __chkstk_darwin();
  v56 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicFavoriteStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v50 - v18;
  type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for MusicFavoriteStatus.favorited(_:), v14);
  v20 = static MusicFavoriteStatus.== infix(_:_:)(v19, v17);
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  v21(v19, v14);
  if ((v20 & 1) != 0)
  {
    v22 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v24 = static Font.Weight.semibold.getter(v23);
    v25 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
    v26 = static Font.system(size:weight:design:)(*(_QWORD *)&v24, 0, v7, 7.0);
    sub_100008758((uint64_t)v7, &qword_10049C6C8);
    KeyPath = swift_getKeyPath(&unk_10039B338);
    v29 = v54;
    v28 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v5, enum case for Image.Scale.medium(_:), v55);
    v30 = swift_getKeyPath(&unk_10039B368);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v2 + *(int *)(v52 + 28), v5, v28);
    *v2 = v30;
    sub_100014A7C((uint64_t)v2, (uint64_t)v9 + *(int *)(v51 + 36), &qword_10049E750);
    *v9 = v22;
    v9[1] = KeyPath;
    v9[2] = v26;
    swift_retain(v22);
    swift_retain(KeyPath);
    swift_retain(v26);
    sub_100008758((uint64_t)v2, &qword_10049E750);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
    swift_release(v26);
    swift_release(KeyPath);
    v31 = swift_release(v22);
    v32 = static Color.accentColor.getter(v31);
    v33 = swift_getKeyPath(&unk_10039B398);
    sub_100014A7C((uint64_t)v9, (uint64_t)v11, &qword_10049C6D0);
    v34 = (uint64_t *)&v11[*(int *)(v53 + 36)];
    *v34 = v33;
    v34[1] = v32;
    v35 = sub_100008758((uint64_t)v9, &qword_10049C6D0);
    v36 = static Edge.Set.leading.getter(v35);
    if (qword_100498AE0 != -1)
      swift_once(&qword_100498AE0, sub_1002BC2BC);
    v37 = EdgeInsets.init(_all:)(*(double *)&qword_10049C578);
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v44 = v56;
    sub_100014A7C((uint64_t)v11, v56, &qword_10049C6D8);
    v45 = v58;
    v46 = v44 + *(int *)(v58 + 36);
    *(_BYTE *)v46 = v36;
    *(double *)(v46 + 8) = v37;
    *(_QWORD *)(v46 + 16) = v39;
    *(_QWORD *)(v46 + 24) = v41;
    *(_QWORD *)(v46 + 32) = v43;
    *(_BYTE *)(v46 + 40) = 0;
    sub_100008758((uint64_t)v11, &qword_10049C6D8);
    v47 = v59;
    sub_1000149A8(v44, v59, &qword_10049C6E0);
    v48 = 0;
  }
  else
  {
    v48 = 1;
    v45 = v58;
    v47 = v59;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v47, v48, 1, v45);
}

void sub_1002BB540()
{
  qword_10049C570 = 0x404B000000000000;
}

uint64_t sub_1002BB550@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

double destroy for RazzmatazzView(_QWORD *a1)
{
  double result;

  swift_release(a1[1]);
  sub_1002B9030(a1[2], a1[3]);
  swift_release(a1[6]);
  *(_QWORD *)&result = swift_release(a1[7]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain(v4);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v6, v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_1002B9030(v9, v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v11);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v13;
  swift_retain(v13);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1002B9030(v6, v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release(*(_QWORD *)(a1 + 48));
  v8 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_1002BB770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;

  v0 = sub_100005600(&qword_10049C5A0);
  v1 = sub_100005600(&qword_10049C598);
  v2 = sub_100005600(&qword_10049C5E8);
  v9 = sub_100005600(&qword_10049C590);
  v10 = (void *)type metadata accessor for CitySelectionView(255);
  v11 = sub_1002B91B8();
  v12 = (void *)sub_100006924(&qword_10049C5E0, type metadata accessor for CitySelectionView, (uint64_t)&unk_100399980);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v4 = sub_100005600(&qword_10049C5F0);
  v5 = sub_10002FFB8(&qword_10049C5F8, &qword_10049C5F0, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v9 = v4;
  v10 = (void *)v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v9 = v1;
  v10 = (void *)v2;
  v11 = OpaqueTypeConformance2;
  v12 = (void *)v6;
  v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v9 = v0;
  v10 = &type metadata for Bool;
  v11 = v7;
  v12 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t *sub_1002BB8C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v34 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v38 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v38;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v36 = &v20[v27];
    v37 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v38;
    v29(v37, v36, v28);
    v31 = *(int *)(a3 + 20);
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain(v34);
  return v4;
}

_QWORD *sub_1002BBA9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  void *v37;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v35 = &v19[v26];
  v36 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v37;
  v28(v36, v35, v27);
  v30 = *(int *)(a3 + 20);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_retain(v33);
  return a1;
}

_QWORD *sub_1002BBC48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  v29 = v26[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  swift_release(v29);
  return a1;
}

_OWORD *sub_1002BBE5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_1002BBF6C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(a3 + 20);
  v32 = *(_QWORD *)((char *)a1 + v31 + 8);
  *(_OWORD *)((char *)a1 + v31) = *(_OWORD *)((char *)a2 + v31);
  swift_release(v32);
  return a1;
}

uint64_t sub_1002BC0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BC0FC);
}

uint64_t sub_1002BC0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1002BC178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BC184);
}

uint64_t sub_1002BC184(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_10049C658;
  if (!qword_10049C658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzView.CompactListCell);
  return result;
}

uint64_t sub_1002BC238(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1002BC2AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E2F20, 1);
}

void sub_1002BC2BC()
{
  qword_10049C578 = 0x4010000000000000;
}

void sub_1002BC2CC()
{
  qword_10049C580 = 0x4028000000000000;
}

uint64_t sub_1002BC2E4()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1002BC304()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1002BC338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v7 + v8[6];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + v8[7];
  v12 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v7 + v8[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v14 = v13 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  swift_release(*(_QWORD *)(v7 + *(int *)(v1 + 20) + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002BC480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

uint64_t sub_1002BC4C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 120);
  sub_10003B4C0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_10003B4C0(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_10003B4C0(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain(v9);
  return a1;
}

uint64_t sub_1002BC580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 120);
  sub_10003B4D0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_10003B4D0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v5, v6, v7);
  swift_release(v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002BC638()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  sub_1002B9030(v0[6], v0[7]);
  swift_release(v0[10]);
  swift_release(v0[11]);
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1002BC680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10049C704);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000EA88;
  return sub_1002B9C70(a1, v4, v5, v1 + 32);
}

_QWORD *sub_1002BC6EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[6];
  _QWORD *v36;

  v33 = a2;
  v34 = a3;
  v32 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v31 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v27 - v9;
  result = _swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v27 = v4;
    v30 = a4 & 1;
    v29 = v10 + 96;
    v28 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = a1 + v28;
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_100082248(v13, (uint64_t)v10, type metadata accessor for Razzmatazz);
      v15 = *(void **)&v29[*(int *)(v32 + 32)];
      v16 = type metadata accessor for RazzmatazzController(0);
      v17 = sub_100006924(&qword_10049C718, type metadata accessor for RazzmatazzController, (uint64_t)&unk_100399F08);
      v18 = StateObject.wrappedValue.getter(v33, v34, v30, v16, v17);
      KeyPath = swift_getKeyPath(&unk_10039B4E8);
      v20 = swift_getKeyPath(&unk_10039B510);
      static Published.subscript.getter(v35, v18, KeyPath);
      swift_release(v18);
      swift_release(KeyPath);
      swift_release(v20);
      v21 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", *(double *)&v35[4], *(double *)&v35[5]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, "distanceFromLocation:", v21);
      v23 = v22;

      if (v23 > 85000.0)
      {
        sub_100006798((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        sub_1000648AC((uint64_t)v10, v31, type metadata accessor for Razzmatazz);
        v24 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_100259368(0, v24[2] + 1, 1);
          v24 = v36;
        }
        v26 = v24[2];
        v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_100259368(v25 > 1, v26 + 1, 1);
          v24 = v36;
        }
        v24[2] = v26 + 1;
        sub_1000648AC(v31, (uint64_t)v24 + v28 + v26 * v14, type metadata accessor for Razzmatazz);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    return v36;
  }
  return result;
}

uint64_t sub_1002BC9B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1[8] = a1;
  v2 = type metadata accessor for Artist(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10049C728);
  v1[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[13] = v5;
  v1[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049C730);
  v1[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[16] = v7;
  v1[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v1[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[19] = v9;
  v1[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049C738);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v1[24] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v1[25] = v13;
  v1[26] = v14;
  return swift_task_switch(sub_1002BCAF0, v13, v14);
}

uint64_t sub_1002BCAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 64);
  MusicLibraryRequest.init()(*(_QWORD *)(v0 + 72), &protocol witness table for Artist);
  AppStorage.wrappedValue.getter(v1, &type metadata for Bool);
  if (*(_BYTE *)(v0 + 232) == 1)
  {
    v3 = *(_QWORD *)(v0 + 160);
    v2 = *(_QWORD *)(v0 + 168);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    KeyPath = swift_getKeyPath(&unk_10039B3F8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for MusicFavoriteStatus.favorited(_:), v4);
    v7 = sub_100006924(&qword_10049C748, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v3, v2, &protocol witness table for Artist, v7);
    v8 = swift_release(KeyPath);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v8);
  }
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  *(_QWORD *)(v0 + 216) = v9;
  *v9 = v0;
  v9[1] = sub_1002BCC18;
  return MusicLibraryRequest.response()(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 168));
}

uint64_t sub_1002BCC18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1002BCEB4;
  else
    v4 = sub_1002BCC78;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_1002BCC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = swift_release(*(_QWORD *)(v0 + 192));
  MusicLibraryResponse.items.getter(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = sub_10002FFB8(&qword_10049C740, &qword_10049C728, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v7 = dispatch thunk of Collection.count.getter(v4, v6);
  if (!v7)
  {
LABEL_7:
    v23 = *(_QWORD *)(v0 + 176);
    v22 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    v25 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 112);
    v28 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v8 = v7;
  v9 = v0 + 56;
  v10 = *(_QWORD *)(v0 + 96);
  sub_100259394(0, v7 & ~(v7 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v10);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v29 = v0 + 16;
    v12 = *(_QWORD *)(v0 + 80);
    do
    {
      v13 = *(_QWORD *)(v0 + 88);
      v14 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v29, v9, *(_QWORD *)(v0 + 96), v6);
      (*(void (**)(uint64_t))(v12 + 16))(v13);
      v14(v29, 0);
      v15 = v9;
      v16 = v6;
      v18 = _swiftEmptyArrayStorage[2];
      v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1)
        sub_100259394(v17 > 1, v18 + 1, 1);
      v19 = *(_QWORD *)(v0 + 88);
      v20 = *(_QWORD *)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 72);
      _swiftEmptyArrayStorage[2] = v18 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v18, v19, v21);
      dispatch thunk of Collection.formIndex(after:)(v15, v20, v16);
      --v8;
      v6 = v16;
      v9 = v15;
    }
    while (v8);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002BCEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 192));
  if (qword_100498AC8 != -1)
    swift_once(&qword_100498AC8, sub_1002AB0A4);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)qword_1004A3D88);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 224);
  if (v7)
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v22 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 48) = v8;
    swift_errorRetain(v8);
    v11 = sub_100005574(&qword_100499F80);
    v12 = (char *)String.init<A>(describing:)(v0 + 48, v11);
    *(_QWORD *)(v9 + 4) = sub_100249A1C(v12, v13, &v22);
    swift_bridgeObjectRelease();
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not load favorite artists error=%s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 224));
    swift_errorRelease(v8);
  }

  v15 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  v17 = *(_QWORD *)(v0 + 160);
  v18 = *(_QWORD *)(v0 + 136);
  v19 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_1002BD0D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10049BE3C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1002A7A94(a1, v4, v5, v7, v6);
}

uint64_t sub_1002BD148(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_10000ABC8(a1, v1);
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter(v1, v2);
}

uint64_t sub_1002BD18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B9408(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1002BD194()
{
  uint64_t v0;

  return sub_1002B95CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1002BD19C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1002B99B0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002BD1A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C780;
  if (!qword_10049C780)
  {
    v1 = sub_100005600(&qword_10049C770);
    sub_10002FFB8(&qword_10049C788, &qword_10049C790, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C780);
  }
  return result;
}

uint64_t sub_1002BD230()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002BD264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002B7B20(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002BD26C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C808;
  if (!qword_10049C808)
  {
    v1 = sub_100005600(&qword_10049C7E8);
    sub_1002BD9C8(&qword_10049C810, &qword_10049C818, (void (*)(void))sub_1002BD308);
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C808);
  }
  return result;
}

unint64_t sub_1002BD308()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049C820;
  if (!qword_10049C820)
  {
    v1 = sub_100005600(&qword_10049C828);
    v2[0] = sub_100005600(&qword_10049C830);
    v2[1] = sub_1002BD3B4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10002FFB8(&qword_10049B8D0, &qword_10049B888, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C820);
  }
  return result;
}

unint64_t sub_1002BD3B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C838;
  if (!qword_10049C838)
  {
    v1 = sub_100005600(&qword_10049C830);
    sub_10002FFB8(&qword_10049C840, &qword_10049C7E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C838);
  }
  return result;
}

unint64_t sub_1002BD450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C848;
  if (!qword_10049C848)
  {
    v1 = sub_100005600(&qword_10049C800);
    sub_1002BD4BC();
    sub_1002BD560();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C848);
  }
  return result;
}

unint64_t sub_1002BD4BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C850;
  if (!qword_10049C850)
  {
    v1 = sub_100005600(&qword_10049C858);
    sub_1002BD754(&qword_10049C860, &qword_10049C868, &qword_10049C870, &qword_10049C878);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C850);
  }
  return result;
}

unint64_t sub_1002BD560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C880;
  if (!qword_10049C880)
  {
    v1 = sub_100005600(&qword_10049C888);
    sub_100006924(&qword_10049C890, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10039B2E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C880);
  }
  return result;
}

uint64_t sub_1002BD5DC()
{
  uint64_t v0;

  return sub_1002B8B78(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1002BD5E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C898;
  if (!qword_10049C898)
  {
    v1 = sub_100005600(&qword_10049C7D0);
    sub_1002BD9C8(&qword_10049C8A0, &qword_10049C8A8, (void (*)(void))sub_1002BD680);
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C898);
  }
  return result;
}

unint64_t sub_1002BD680()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049C8B0;
  if (!qword_10049C8B0)
  {
    v1 = sub_100005600(&qword_10049C8B8);
    v2[0] = sub_100005600(&qword_10049C8C0);
    v2[1] = sub_1002BD754(&qword_10049C8C8, &qword_10049C8C0, (unint64_t *)&unk_10049E600, &qword_10049B8D8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10002FFB8(&qword_10049B8D0, &qword_10049B888, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C8B0);
  }
  return result;
}

uint64_t sub_1002BD754(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100005600(a2);
    sub_10002FFB8(a3, a4, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

double sub_1002BD7E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1002B8D78(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_1002BD80C()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 56);
  v3 = 1;
  v1 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_1002BD85C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  sub_1002B9030(v0[4], v0[5]);
  swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

unint64_t sub_1002BD8A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C8F8;
  if (!qword_10049C8F8)
  {
    v1 = sub_100005600(&qword_10049C6B8);
    sub_1002BD92C();
    sub_10002FFB8(&qword_10049C920, &qword_10049C6C0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C8F8);
  }
  return result;
}

unint64_t sub_1002BD92C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C900;
  if (!qword_10049C900)
  {
    v1 = sub_100005600(&qword_10049C6A8);
    sub_1002BD9C8(&qword_10049C908, &qword_10049C6A0, (void (*)(void))sub_1002BDA34);
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C900);
  }
  return result;
}

uint64_t sub_1002BD9C8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100005600(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002BDA34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C910;
  if (!qword_10049C910)
  {
    v1 = sub_100005600(&qword_10049C698);
    sub_10002FFB8(&qword_10049C918, &qword_10049C690, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C910);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498B20, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_1002C6668);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a1)
  {
    case 0:
      v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      v8 = *v3;
      v9 = type metadata accessor for Playlist.Variant(0);
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = type metadata accessor for Playlist.Variant(0);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
    return 0x7061687372616567;
  if (v6 == enum case for Playlist.Variant.genius(_:))
    return 0x7375696E6567;
  if (v6 == enum case for Playlist.Variant.folder(_:))
    return 0x7265646C6F66;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return sub_1000149A8(a2, a3 + *(int *)(v7 + 20), &qword_1004999E0);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498B10, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_1002C6498);
}

uint64_t sub_1002BDD9C(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return sub_1000086B4(v6, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498B18, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_1002C6504);
}

uint64_t sub_1002BDE04@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE018(&qword_10049F780, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, (char *)0x417373696D736944, (char *)0xED00006E6F697463, a1);
}

uint64_t sub_1002BDE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100249A1C((char *)0xD000000000000011, (char *)0x80000001003B9C10, &v15);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = sub_1002D05D8(a1, a2, 0);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v13);
    return v15;
  }
  return a1;
}

uint64_t sub_1002BDFE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE018((uint64_t *)&unk_100498E50, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (char *)0x694474756F79614CLL, (char *)0xEF6E6F6974636572, a1);
}

uint64_t sub_1002BE018@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;

  v26 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100014A7C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v23 = swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v27 = v24;
      *(_DWORD *)v23 = 136315138;
      *(_QWORD *)(v23 + 4) = sub_100249A1C(a3, v26, &v27);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    v25 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
  }
}

uint64_t sub_1002BE220@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE018(&qword_100498E60, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (char *)0x5463696D616E7944, (char *)0xEF657A6953657079, a1);
}

uint64_t sub_1002BE254(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;
  unsigned __int8 v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v10, v9))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v11 + 4) = sub_100249A1C((char *)0x6C6F6F42, (char *)0xE400000000000000, &v15);
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  v13 = sub_1002D0564(a1, 0);
  (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v13);
  return v16;
}

uint64_t sub_1002BE3E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE018(&qword_100498ED8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (char *)0x686353726F6C6F43, (char *)0xEB00000000656D65, a1);
}

uint64_t sub_1002BE410@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE43C(&qword_100498E70, &qword_100499170, (char *)0xD000000000000020, (char *)0x80000001003B9BE0, a1);
}

uint64_t sub_1002BE43C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  uint64_t v26;

  v25 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100014A7C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    return sub_1000149A8((uint64_t)v17, a5, a2);
  v19 = *v17;
  v20 = static os_log_type_t.fault.getter();
  v21 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v21, v20))
  {
    v22 = swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v26 = v23;
    *(_DWORD *)v22 = 136315138;
    *(_QWORD *)(v22 + 4) = sub_100249A1C(a3, v25, &v26);
    _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v19);
  v24 = swift_release(v19);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v24);
}

uint64_t sub_1002BE634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_1002D05AC(a1, a2);
  }
  else
  {
    v10 = swift_retain(a1);
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_100249A1C((char *)0xD000000000000019, (char *)0x80000001003B9BC0, &v18);
      _os_log_impl((void *)&_mh_execute_header, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    v15 = sub_1002D0570(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v15);
    return v18;
  }
  return a1;
}

uint64_t sub_1002BE7F8(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;
  unsigned __int8 v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100249A1C((char *)0xD000000000000017, (char *)0x80000001003B9BA0, &v15);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = sub_1002D0564(a1, 0);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v13);
    return v16;
  }
  return a1;
}

uint64_t sub_1002BE98C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_100249A1C((char *)0x6C616E6F6974704FLL, (char *)0xEF3E726F6C6F433CLL, &v16);
      _os_log_impl((void *)&_mh_execute_header, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = j__swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
    return v16;
  }
  return a1;
}

uint64_t sub_1002BEB28@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BE018((uint64_t *)&unk_100498E40, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, (char *)0xD000000000000013, (char *)0x80000001003B9B80, a1);
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6 & 1;
  *(_BYTE *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  __n128 v53;
  char *v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;

  v59 = a4;
  v70 = a2;
  v67 = a5;
  v68 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  __chkstk_darwin();
  v69 = v7;
  v63 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10049C500);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  __chkstk_darwin();
  v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v58 = (uint64_t)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v55 - v17;
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ArtworkImage(0);
  v21 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v71 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v55 - v23;
  __chkstk_darwin();
  v25 = (char *)&v55 - v24;
  __chkstk_darwin();
  v72 = (char *)&v55 - v26;
  v60 = a1;
  sub_100014A7C(a1, (uint64_t)v18, (uint64_t *)&unk_10049F7D0);
  v27 = type metadata accessor for ArtworkImage.ViewModel(0);
  v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
  if (v57(v18, 1, v27) == 1)
  {
    sub_100008758((uint64_t)v18, (uint64_t *)&unk_10049F7D0);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v20, 1, 1, v28);
  }
  else
  {
    v29 = type metadata accessor for Artwork(0);
    v55 = v25;
    v56 = a3;
    v30 = v9;
    v31 = v13;
    v32 = v11;
    v33 = v10;
    v34 = v29;
    v35 = v21;
    v36 = *(_QWORD *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v20, v18, v29);
    sub_100006798((uint64_t)v18, type metadata accessor for ArtworkImage.ViewModel);
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56);
    v21 = v35;
    v38 = v34;
    v10 = v33;
    v11 = v32;
    v13 = v31;
    v9 = v30;
    v25 = v55;
    a3 = v56;
    v37(v20, 0, 1, v38);
  }
  sub_1002BF590((uint64_t)v20, *(_QWORD *)a3, *(_BYTE *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_BYTE *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)(v59);
  v39 = v58;
  sub_100014A7C(v60, v58, (uint64_t *)&unk_10049F7D0);
  if (v57((char *)v39, 1, v27) == 1)
  {
    sub_100008758(v39, (uint64_t *)&unk_10049F7D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_100014A7C(v39 + *(int *)(v27 + 20), (uint64_t)v9, &qword_1004999E0);
    sub_100006798(v39, type metadata accessor for ArtworkImage.ViewModel);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      goto LABEL_11;
    }
  }
  if (qword_100498B10 != -1)
    swift_once(&qword_100498B10, sub_1002C6498);
  v40 = sub_1000086B4(v10, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v40, v10);
  sub_100008758((uint64_t)v9, &qword_1004999E0);
LABEL_11:
  v41 = v61;
  v42 = v71;
  ArtworkImage.artworkCropStyle(_:)(v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v43 = *(void (**)(char *, uint64_t))(v21 + 8);
  v44 = v66;
  v43(v42, v66);
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(a3 + 32), *(unsigned __int8 *)(a3 + 40), *(unsigned __int8 *)(a3 + 41));
  v43(v41, v44);
  v45 = v63;
  sub_100082248(v70, v63, type metadata accessor for ArtworkImage.Placeholder);
  v46 = *(unsigned __int8 *)(v68 + 80);
  v47 = (v46 + 58) & ~v46;
  v48 = (_OWORD *)swift_allocObject(&unk_100461968, v47 + v69, v46 | 7);
  v49 = *(_OWORD *)(a3 + 16);
  v48[1] = *(_OWORD *)a3;
  v48[2] = v49;
  *(_OWORD *)((char *)v48 + 42) = *(_OWORD *)(a3 + 26);
  sub_1000648AC(v45, (uint64_t)v48 + v47, type metadata accessor for ArtworkImage.Placeholder);
  v50 = sub_100005574((uint64_t *)&unk_10049E7C0);
  v51 = sub_1002C6818();
  v52 = v62;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_1002C67A8, v48, v50, v51);
  v53 = swift_release(v48);
  ((void (*)(char *, uint64_t, __n128))v43)(v25, v44, v53);
  v43(v72, v44);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(v67, v52, v65);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Artwork(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BF250(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&qword_1004999E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100014A7C, a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  double v0;
  uint64_t result;

  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100014A7C(v1, a1, (uint64_t *)&unk_10049F7D0);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BF250(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100082248, a1);
}

uint64_t sub_1002BF250@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  result = type metadata accessor for ArtworkImage.Info(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  v9 = v4[4];
  v10 = *((_BYTE *)v4 + 40);
  LOBYTE(v4) = *((_BYTE *)v4 + 41);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 result;
  uint64_t v22;

  sub_1000149A8(a1, a9, (uint64_t *)&unk_10049F7D0);
  v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  sub_1000648AC(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  v18 = a9 + v17[6];
  *(_QWORD *)v18 = a3;
  *(_BYTE *)(v18 + 8) = a4 & 1;
  v19 = a9 + v17[7];
  v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  v22 = a9 + v17[8];
  *(_QWORD *)v22 = a6;
  *(_QWORD *)(v22 + 8) = a7;
  *(_BYTE *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 & 1;
  if ((a3 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a4 = v5;
  *(_BYTE *)(a4 + 8) = v4;
  if ((a3 & 1) != 0)
    v6 = 0;
  else
    v6 = a2;
  *(_QWORD *)(a4 + 16) = v6;
  *(_BYTE *)(a4 + 24) = v4;
  *(_QWORD *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      v6 = *(double *)&result / a3;
      *(double *)&result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      v6 = *(double *)&result * a3;
      *(double *)&result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t sub_1002BF548(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(__int128 *)((char *)a2 + 26);
  return _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_1002BF590(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (char *)&v14 - v11;
  if ((a3 & 1) != 0)
  {
    sub_100014A7C(a1, (uint64_t)&v14 - v11, (uint64_t *)&unk_10049F430);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:)(v12);
    else
      ArtworkImage.init(_:height:)(v12, *(double *)&a4);
  }
  else
  {
    sub_100014A7C(a1, (uint64_t)&v14 - v11, (uint64_t *)&unk_10049F430);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:width:)(v12, *(double *)&a2);
    else
      ArtworkImage.init(_:width:height:)(v12, *(double *)&a2, *(double *)&a4);
  }
  return sub_100008758(a1, (uint64_t *)&unk_10049F430);
}

uint64_t sub_1002BF6E0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (**v8)@<X0>(uint64_t@<X8>);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[3];
  _BYTE v61[16];
  uint64_t v62;
  char v63;

  v56 = a2;
  v59 = a3;
  v4 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100005574(&qword_10049D158);
  __chkstk_darwin();
  v8 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  v53 = sub_100005574(&qword_10049C950);
  __chkstk_darwin();
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100005574(&qword_10049C948);
  __chkstk_darwin();
  v54 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v55 = (uint64_t)&v53 - v17;
  sub_1000149A8(a1, (uint64_t)v61, &qword_10049D190);
  sub_1000149A8((uint64_t)v61, (uint64_t)&v62, &qword_10049D190);
  if ((v63 & 1) != 0 || (*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    sub_100082248(v56, (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_100461D58, v20 + 42, v18 | 7);
    sub_1000648AC((uint64_t)v6, v21 + v19, type metadata accessor for ArtworkImage.Placeholder);
    v22 = (_OWORD *)(v21 + v20);
    v23 = *(_OWORD *)(a1 + 16);
    *v22 = *(_OWORD *)a1;
    v22[1] = v23;
    *(_OWORD *)((char *)v22 + 26) = *(_OWORD *)(a1 + 26);
    *v8 = sub_1002D0AA4;
    v8[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v21;
    swift_storeEnumTagMultiPayload(v8, v58, 1);
    v24 = sub_100005574((uint64_t *)&unk_10049E810);
    v25 = sub_1002C689C();
    v26 = sub_10002FFB8(&qword_10049C960, (uint64_t *)&unk_10049E810, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    return _ConditionalContent<>.init(storage:)(v8, v57, v24, v25, v26);
  }
  else
  {
    v28 = *(_QWORD *)(a1 + 16);
    v29 = v62;
    sub_1002C13B4();
    v31 = v30;
    v33 = v32;
    sub_1002C13B4();
    v35 = v34;
    swift_bridgeObjectRelease();
    sub_1002C13B4();
    v37 = v36;
    swift_bridgeObjectRelease();
    v38 = (_QWORD *)((char *)v11 + *(int *)(v9 + 32));
    *v38 = swift_getKeyPath(&unk_10039B5F0);
    v39 = sub_100005574(&qword_100498E38);
    swift_storeEnumTagMultiPayload(v38, v39, 0);
    v40 = (_QWORD *)((char *)v11 + *(int *)(v9 + 36));
    *v40 = swift_getKeyPath(&unk_10039B618);
    v41 = sub_100005574((uint64_t *)&unk_100498E40);
    swift_storeEnumTagMultiPayload(v40, v41, 0);
    *v11 = v31;
    v11[1] = v33;
    v11[2] = v35;
    v11[3] = v29;
    v11[4] = v28;
    v11[5] = v37;
    sub_1000648AC((uint64_t)v11, (uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    sub_100082248((uint64_t)v13, (uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    v15[*(int *)(v53 + 36)] = 0;
    v42 = sub_100006798((uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    v43 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(v60, v29, 0, v28, 0, v43, v44);
    v45 = v54;
    sub_100014A7C((uint64_t)v15, v54, &qword_10049C950);
    v46 = v57;
    v47 = (_OWORD *)(v45 + *(int *)(v57 + 36));
    v48 = v60[1];
    *v47 = v60[0];
    v47[1] = v48;
    v47[2] = v60[2];
    sub_100008758((uint64_t)v15, &qword_10049C950);
    v49 = v55;
    sub_1000149A8(v45, v55, &qword_10049C948);
    sub_100014A7C(v49, (uint64_t)v8, &qword_10049C948);
    swift_storeEnumTagMultiPayload(v8, v58, 0);
    v50 = sub_100005574((uint64_t *)&unk_10049E810);
    v51 = sub_1002C689C();
    v52 = sub_10002FFB8(&qword_10049C960, (uint64_t *)&unk_10049E810, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v8, v46, v50, v51, v52);
    return sub_100008758(v49, &qword_10049C948);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;

  v6 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v24 - v9;
  sub_1002C13B4();
  v12 = v11;
  v14 = v13;
  sub_1002C13B4();
  v16 = v15;
  swift_bridgeObjectRelease();
  sub_1002C13B4();
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = &v8[*(int *)(v6 + 32)];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_10039B5F0);
  v20 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_10039B618);
  v22 = sub_100005574((uint64_t *)&unk_100498E40);
  swift_storeEnumTagMultiPayload(v21, v22, 0);
  *(_QWORD *)v8 = v12;
  *((_QWORD *)v8 + 1) = v14;
  *((_QWORD *)v8 + 2) = v16;
  *((double *)v8 + 3) = a2;
  *((double *)v8 + 4) = a3;
  *((_QWORD *)v8 + 5) = v18;
  sub_1000648AC((uint64_t)v8, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_100082248((uint64_t)v10, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(_BYTE *)(a1 + *(int *)(sub_100005574(&qword_10049C950) + 36)) = 0;
  return sub_100006798((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t sub_1002BFD34@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a2;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = sub_100005574(&qword_10049C950);
  v9 = __chkstk_darwin();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v9);
  v14 = v13;
  sub_1002C13B4();
  v16 = v15;
  v18 = v17;
  sub_1002C13B4();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_1002C13B4();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&unk_10039B5F0);
  v24 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_10039B618);
  v26 = sub_100005574((uint64_t *)&unk_100498E40);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_1000648AC((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_100082248((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v8 + 36)] = 0;
  v27 = sub_100006798((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v28 = *a1;
  v29 = *((unsigned __int8 *)a1 + 8);
  v30 = a1[2];
  v31 = *((unsigned __int8 *)a1 + 24);
  v32 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v28, v29, v30, v31, v32, v33);
  v34 = v39;
  sub_100014A7C((uint64_t)v11, v39, &qword_10049C950);
  v35 = (_OWORD *)(v34 + *(int *)(sub_100005574(&qword_10049C948) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_100008758((uint64_t)v11, &qword_10049C950);
}

uint64_t ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_1000149A8(a1, a7, &qword_10049C968);
  v13 = (int *)type metadata accessor for ArtworkMotionView(0);
  sub_1000149A8(a2, a7 + v13[5], (uint64_t *)&unk_10049F430);
  sub_1000149A8(a3, a7 + v13[6], &qword_1004999E0);
  v14 = (_OWORD *)(a7 + v13[7]);
  v15 = a4[1];
  *v14 = *a4;
  v14[1] = v15;
  *(_OWORD *)((char *)v14 + 26) = *(_OWORD *)((char *)a4 + 26);
  sub_1000149A8(a5, a7 + v13[8], &qword_10049C970);
  v16 = a7 + v13[9];
  v17 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a6, v17);
}

uint64_t ArtworkMotionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v79 = a1;
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Artwork.CropStyle(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v77 = v5;
  v78 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v61 - v6;
  sub_100005574(&qword_10049C968);
  __chkstk_darwin();
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v61 - v12;
  v74 = type metadata accessor for ArtworkImage(0);
  v61 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v61 - v16;
  __chkstk_darwin();
  v19 = (char *)&v61 - v18;
  __chkstk_darwin();
  v64 = (char *)&v61 - v20;
  v21 = sub_100005574(&qword_10049C978);
  v67 = *(_QWORD *)(v21 - 8);
  v68 = v21;
  __chkstk_darwin();
  v65 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100005574(&qword_10049C980);
  __chkstk_darwin();
  v69 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100005574(&qword_10049C988);
  __chkstk_darwin();
  v66 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(v2, (uint64_t)v9, &qword_10049C968);
  v25 = type metadata accessor for VideoArtwork(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
  {
    sub_100008758((uint64_t)v9, &qword_10049C968);
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 1, 1, v27);
  }
  else
  {
    VideoArtwork.previewFrame.getter();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
    v27 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 0, 1, v27);
  }
  sub_100082248(v2, (uint64_t)v7, type metadata accessor for ArtworkMotionView);
  type metadata accessor for Artwork(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27);
  v30 = v74;
  if (v29 == 1)
  {
    v31 = (int *)v72;
    sub_100014A7C((uint64_t)&v7[*(int *)(v72 + 20)], (uint64_t)v13, (uint64_t *)&unk_10049F430);
    sub_100006798((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    sub_100008758((uint64_t)v11, (uint64_t *)&unk_10049F430);
  }
  else
  {
    sub_100006798((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v13, v11, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v27);
    v31 = (int *)v72;
  }
  ArtworkImage.init(_:)(v13);
  ArtworkImage.artworkReusablePolicy(_:)(v2 + v31[9]);
  v32 = *(void (**)(char *, uint64_t))(v61 + 8);
  v32(v15, v30);
  v33 = v70;
  sub_100014A7C(v2 + v31[6], v70, &qword_1004999E0);
  v34 = v73;
  v35 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v33, 1, v75) == 1)
  {
    v36 = v71;
    if (qword_100498B10 != -1)
      swift_once(&qword_100498B10, sub_1002C6498);
    v37 = sub_1000086B4(v35, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v37, v35);
    sub_100008758(v33, &qword_1004999E0);
  }
  else
  {
    v36 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v71, v33, v35);
  }
  ArtworkImage.artworkCropStyle(_:)(v36);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
  v32(v17, v30);
  v38 = v64;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(v2 + v31[7] + 32), *(unsigned __int8 *)(v2 + v31[7] + 40), *(unsigned __int8 *)(v2 + v31[7] + 41));
  v32(v19, v30);
  v39 = v78;
  sub_100082248(v2, v78, type metadata accessor for ArtworkMotionView);
  v40 = *(unsigned __int8 *)(v76 + 80);
  v41 = (v40 + 16) & ~v40;
  v42 = swift_allocObject(&unk_100461990, v41 + v77, v40 | 7);
  sub_1000648AC(v39, v42 + v41, type metadata accessor for ArtworkMotionView);
  v43 = sub_100005574(&qword_10049C990);
  v44 = sub_1002C86C4();
  v45 = v65;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_1002C8658, v42, v43, v44);
  v46 = swift_release(v42);
  v47 = ((uint64_t (*)(char *, uint64_t, __n128))v32)(v38, v30, v46);
  v48 = static Alignment.center.getter(v47);
  v50 = v49;
  v51 = (uint64_t)v69;
  v52 = (uint64_t)&v69[*(int *)(v62 + 36)];
  sub_1002C1078(v2, v52);
  v53 = (uint64_t *)(v52 + *(int *)(sub_100005574(&qword_10049C9A0) + 36));
  *v53 = v48;
  v53[1] = v50;
  v54 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v51, v45, v68);
  v56 = static Animation.default.getter(v54, v55);
  v57 = (uint64_t)v66;
  v58 = (uint64_t *)&v66[*(int *)(v63 + 36)];
  v59 = sub_100005574(&qword_10049C9A8);
  sub_100014A7C(v2, (uint64_t)v58 + *(int *)(v59 + 36), &qword_10049C968);
  *v58 = v56;
  sub_1000149A8(v51, v57, &qword_10049C980);
  return sub_1000149A8(v57, v79, &qword_10049C988);
}

uint64_t sub_1002C0794@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t@<X8>);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t@<X8>);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)@<X0>(uint64_t@<X8>);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[3];

  v84 = a2;
  v3 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v76 + 64);
  __chkstk_darwin();
  v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100005574(&qword_10049D158);
  __chkstk_darwin();
  v81 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (uint64_t)&v68 - v7;
  v70 = sub_100005574(&qword_10049C950);
  __chkstk_darwin();
  v74 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_100005574(&qword_10049C948);
  __chkstk_darwin();
  v73 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v75 = (uint64_t)&v68 - v10;
  v11 = sub_100005574((uint64_t *)&unk_10049E7C0);
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  __chkstk_darwin();
  v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C970);
  __chkstk_darwin();
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin();
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v68 - v19;
  sub_100014A7C(a1 + *(int *)(v3 + 32), (uint64_t)v14, &qword_10049C970);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100008758((uint64_t)v14, &qword_10049C970);
    v21 = 1;
    v22 = v84;
  }
  else
  {
    sub_1000648AC((uint64_t)v14, (uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v23 = a1 + *(int *)(v3 + 28);
    if ((*(_BYTE *)(v23 + 8) & 1) != 0 || (*(_BYTE *)(v23 + 24) & 1) != 0)
    {
      sub_100082248((uint64_t)v20, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
      v24 = a1;
      v25 = v77;
      sub_100082248(v24, v77, type metadata accessor for ArtworkMotionView);
      v26 = *(unsigned __int8 *)(v16 + 80);
      v27 = (v26 + 16) & ~v26;
      v28 = *(unsigned __int8 *)(v76 + 80);
      v29 = (v17 + v28 + v27) & ~v28;
      v30 = swift_allocObject(&unk_100461D30, v29 + v4, v26 | v28 | 7);
      sub_1000648AC((uint64_t)v18, v30 + v27, type metadata accessor for ArtworkImage.Placeholder);
      sub_1000648AC(v25, v30 + v29, type metadata accessor for ArtworkMotionView);
      v31 = v80;
      v32 = v81;
      *v81 = sub_1002D0964;
      v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
      swift_storeEnumTagMultiPayload(v32, v31, 1);
      v33 = sub_100005574((uint64_t *)&unk_10049E810);
      v34 = sub_1002C689C();
      v35 = sub_10002FFB8(&qword_10049C960, (uint64_t *)&unk_10049E810, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v32, v79, v33, v34, v35);
    }
    else
    {
      v37 = *(_QWORD *)v23;
      v38 = *(_QWORD *)(v23 + 16);
      sub_1002C13B4();
      v40 = v39;
      v42 = v41;
      sub_1002C13B4();
      v44 = v43;
      swift_bridgeObjectRelease();
      sub_1002C13B4();
      v46 = v45;
      swift_bridgeObjectRelease();
      v47 = v69;
      v48 = v71;
      v49 = &v71[*(int *)(v69 + 32)];
      *(_QWORD *)v49 = swift_getKeyPath(&unk_10039B5F0);
      v50 = sub_100005574(&qword_100498E38);
      swift_storeEnumTagMultiPayload(v49, v50, 0);
      v51 = (_QWORD *)((char *)v48 + *(int *)(v47 + 36));
      *v51 = swift_getKeyPath(&unk_10039B618);
      v52 = sub_100005574((uint64_t *)&unk_100498E40);
      swift_storeEnumTagMultiPayload(v51, v52, 0);
      *v48 = v40;
      v48[1] = v42;
      v48[2] = v44;
      v48[3] = v37;
      v48[4] = v38;
      v48[5] = v46;
      v53 = v72;
      sub_1000648AC((uint64_t)v48, v72, type metadata accessor for ArtworkImage.Placeholder.View);
      v54 = v74;
      sub_100082248(v53, v74, type metadata accessor for ArtworkImage.Placeholder.View);
      *(_BYTE *)(v54 + *(int *)(v70 + 36)) = 0;
      v55 = sub_100006798(v53, type metadata accessor for ArtworkImage.Placeholder.View);
      v56 = static Alignment.center.getter(v55);
      _FrameLayout.init(width:height:alignment:)(v85, v37, 0, v38, 0, v56, v57);
      v58 = v73;
      sub_100014A7C(v54, v73, &qword_10049C950);
      v59 = v79;
      v60 = (_OWORD *)(v58 + *(int *)(v79 + 36));
      v61 = v85[1];
      *v60 = v85[0];
      v60[1] = v61;
      v60[2] = v85[2];
      sub_100008758(v54, &qword_10049C950);
      v62 = v75;
      sub_1000149A8(v58, v75, &qword_10049C948);
      v63 = v81;
      sub_100014A7C(v62, (uint64_t)v81, &qword_10049C948);
      swift_storeEnumTagMultiPayload(v63, v80, 0);
      v64 = sub_100005574((uint64_t *)&unk_10049E810);
      v65 = sub_1002C689C();
      v66 = sub_10002FFB8(&qword_10049C960, (uint64_t *)&unk_10049E810, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v63, v59, v64, v65, v66);
      sub_100008758(v62, &qword_10049C948);
    }
    sub_100006798((uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v22 = v84;
    sub_1000149A8(v36, v84, (uint64_t *)&unk_10049E7C0);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v22, v21, 1, v83);
}

uint64_t sub_1002C0E0C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = sub_100005574(&qword_10049C950);
  v9 = __chkstk_darwin();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v9);
  v14 = v13;
  sub_1002C13B4();
  v16 = v15;
  v18 = v17;
  sub_1002C13B4();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_1002C13B4();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&unk_10039B5F0);
  v24 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_10039B618);
  v26 = sub_100005574((uint64_t *)&unk_100498E40);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_1000648AC((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_100082248((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v8 + 36)] = 0;
  sub_100006798((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v27 = type metadata accessor for ArtworkMotionView(0);
  v28 = (uint64_t *)(v39 + *(int *)(v27 + 28));
  v29 = *v28;
  v30 = *((unsigned __int8 *)v28 + 8);
  v31 = v28[2];
  v32 = *((unsigned __int8 *)v28 + 24);
  v33 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v29, v30, v31, v32, v33, v34);
  sub_100014A7C((uint64_t)v11, a2, &qword_10049C950);
  v35 = (_OWORD *)(a2 + *(int *)(sub_100005574(&qword_10049C948) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_100008758((uint64_t)v11, &qword_10049C950);
}

uint64_t sub_1002C1078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = sub_100005574(&qword_10049D138);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin();
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL(0);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049D140);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049D148);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C968);
  __chkstk_darwin();
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(v33, (uint64_t)v13, &qword_10049C968);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100008758((uint64_t)v13, &qword_10049C968);
    v18 = 1;
    v19 = v34;
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    VideoArtwork.url.getter(v20);
    MotionView.init(url:previewFrame:fallback:)(v5, sub_1002D0B04, 0, sub_1002C138C, 0, &type metadata for Color, &type metadata for Color);
    v21 = sub_10002FFB8(&qword_10049D150, &qword_10049D140, (uint64_t)&protocol conformance descriptor for MotionView<A, B>);
    v22 = v30;
    View.mcui.getter(v6, v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    v23 = v29;
    v24 = v32;
    MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(0, v32, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v25 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v34, v23, v9);
    v18 = 0;
    v19 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, v18, 1, v9);
}

uint64_t sub_1002C138C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *a1 = result;
  return result;
}

void sub_1002C13B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin();
  __chkstk_darwin();
  sub_100005574(&qword_100499778);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v0, (uint64_t)v2, v3);
  v4 = sub_100005574(&qword_10049F810);
  v5 = (char *)sub_1002C1504
     + 4
     * byte_10039B56A[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 10, v4)];
  __asm { BR              X10 }
}

double sub_1002C1504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  double v10;

  sub_1000149A8(v5, v4, &qword_100499778);
  sub_100014A7C(v4, v2, &qword_100499778);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for Playlist.Variant.regular(_:), v0);
    sub_100008758(v2, &qword_100499778);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1, v0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v3, v0);
  if (v8 != enum case for Playlist.Variant.smart(_:)
    && v8 != enum case for Playlist.Variant.genius(_:)
    && v8 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v0);
  }
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  v10 = ((double (*)(uint64_t))static Font.Weight.light.getter)(v9);
  sub_100008758(v4, &qword_100499778);
  return v10;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v15 = (_QWORD *)(a3 + *(int *)(v14 + 32));
  *v15 = swift_getKeyPath(&unk_10039B5F0);
  v16 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a3 + *(int *)(v14 + 36));
  *v17 = swift_getKeyPath(&unk_10039B618);
  v18 = sub_100005574((uint64_t *)&unk_100498E40);
  result = swift_storeEnumTagMultiPayload(v17, v18, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

uint64_t EnvironmentValues.placeholderStyle.getter()
{
  unint64_t v0;

  v0 = sub_1002C8728();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_1002C1900()
{
  unint64_t v0;

  v0 = sub_1002C8728();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_1002C193C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v8;

  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v8 - v4;
  sub_100014A7C(a1, (uint64_t)&v8 - v4, &qword_10049C9B8);
  sub_100014A7C((uint64_t)v5, (uint64_t)v3, &qword_10049C9B8);
  v6 = sub_1002C8728();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_100008758((uint64_t)v5, &qword_10049C9B8);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;

  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v3, &qword_10049C9B8);
  v4 = sub_1002C8728();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v4);
  return sub_100008758(a1, &qword_10049C9B8);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v2 = (uint64_t *)v1;
  v44 = a1;
  v43 = sub_100005574(&qword_10049C9C0);
  __chkstk_darwin();
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049C9C8);
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v41 - v9;
  v11 = v1[3];
  v12 = v1[4];
  v13 = v1[5];
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  sub_1002BE43C(&qword_100498E38, &qword_10049C9B8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v10);
  v14 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (v15(v10, 1, v14) == 1)
  {
    sub_100008758((uint64_t)v10, &qword_10049C9B8);
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
  }
  else
  {
    sub_100014A7C((uint64_t)(v10 + 40), (uint64_t)&v45, (uint64_t *)&unk_10049E850);
    sub_100006798((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1000137C8(&v45, (uint64_t)v48);
      v16 = v49;
      v41 = v50;
      sub_10000ABC8(v48, v49);
      __chkstk_darwin();
      v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      v20 = AnyShapeStyle.init<A>(_:)(v18, v16, v41);
      sub_10000682C(v48);
      goto LABEL_6;
    }
  }
  sub_100008758((uint64_t)&v45, (uint64_t *)&unk_10049E850);
  v20 = 0;
LABEL_6:
  sub_1002BE43C(&qword_100498E38, &qword_10049C9B8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v8);
  if (v15(v8, 1, v14) == 1)
  {
    sub_100008758((uint64_t)v8, &qword_10049C9B8);
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
  }
  else
  {
    sub_100014A7C((uint64_t)v8, (uint64_t)&v45, (uint64_t *)&unk_10049E850);
    sub_100006798((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v46 + 1))
    {
      sub_1000137C8(&v45, (uint64_t)v48);
      v21 = v49;
      v22 = v50;
      sub_10000ABC8(v48, v49);
      __chkstk_darwin();
      v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v25 + 16))(v24);
      v26 = AnyShapeStyle.init<A>(_:)(v24, v21, v22);
      v27 = sub_10000682C(v48);
      goto LABEL_11;
    }
  }
  v27 = sub_100008758((uint64_t)&v45, (uint64_t *)&unk_10049E850);
  v26 = 0;
LABEL_11:
  v28 = static Color.clear.getter(v27);
  if (v20)
  {
    v29 = v20;
  }
  else
  {
    v30 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v48[0] = Color.init(_:)(v30);
    v29 = AnyShapeStyle.init<A>(_:)(v48, &type metadata for Color, &protocol witness table for Color);
  }
  if (v12 >= v11)
    v31 = v11;
  else
    v31 = v12;
  v32 = v13 * v31;
  swift_retain(v20);
  v34 = static Edge.Set.all.getter(v33);
  v35 = v34;
  v36 = static Alignment.center.getter(v34);
  v38 = v37;
  sub_1002C1F84(v2, v26, (uint64_t)v4, v32);
  v39 = (uint64_t *)&v4[*(int *)(v43 + 36)];
  *v39 = v36;
  v39[1] = v38;
  sub_100014A7C((uint64_t)v4, (uint64_t)&v6[*(int *)(v42 + 36)], &qword_10049C9C0);
  *(_QWORD *)v6 = v28;
  *((_QWORD *)v6 + 1) = v29;
  v6[16] = v35;
  swift_retain(v28);
  swift_retain(v29);
  sub_100008758((uint64_t)v4, &qword_10049C9C0);
  swift_release(v29);
  swift_release(v28);
  swift_release(v20);
  swift_release(v26);
  return sub_1000149A8((uint64_t)v6, v44, &qword_10049C9C8);
}

uint64_t sub_1002C1F84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a3;
  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C6C8);
  __chkstk_darwin();
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049D0F0);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin();
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D0F8);
  __chkstk_darwin();
  v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100005574(&qword_10049D100);
  __chkstk_darwin();
  v46 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  v20 = Image.init(_internalSystemName:)(v18, v19);
  v51 = v9;
  if (a2)
  {
    v21 = a2;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v54 = Color.init(_:)(v22);
    v21 = AnyShapeStyle.init<A>(_:)(&v54, &type metadata for Color, &protocol witness table for Color);
  }
  v23 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  swift_retain(a2);
  v24 = static Font.system(size:weight:design:)(0, 1, v12, a4);
  sub_100008758((uint64_t)v12, &qword_10049C6C8);
  KeyPath = swift_getKeyPath(&unk_10039C370);
  v54 = v20;
  v55 = v21;
  v56 = KeyPath;
  v57 = v24;
  v26 = a1[2];
  v27 = sub_100005574(&qword_10049D108);
  v28 = sub_1002D05EC();
  View.fontWeight(_:)(v26, 0, v27, v28);
  swift_release(v24);
  swift_release(KeyPath);
  swift_release(v21);
  swift_release(v20);
  v54 = v27;
  v55 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v30 = (uint64_t)v47;
  v31 = v44;
  View.accessibility(hidden:)(1, v44, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v31);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  v32 = v48;
  sub_1002BE43C(&qword_100498E38, &qword_10049C9B8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, v48);
  v33 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    sub_100008758(v32, &qword_10049C9B8);
    v35 = v51;
    v34 = v52;
    v36 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, 1, 1, v52);
    v37 = v50;
  }
  else
  {
    v38 = v32 + *(int *)(v33 + 24);
    v36 = v49;
    sub_100014A7C(v38, v49, &qword_10049C9D0);
    sub_100006798(v32, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    v35 = v51;
    v34 = v52;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v36, 1, v52);
    v37 = v50;
    if (v39 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v50, v36, v34);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for BlendMode.normal(_:), v34);
  sub_100008758(v36, &qword_10049C9D0);
LABEL_9:
  v40 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v46[*(int *)(v45 + 36)], v37, v34);
  sub_100014A7C(v30, v40, &qword_10049D0F8);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  sub_100008758(v30, &qword_10049D0F8);
  return sub_1000149A8(v40, v53, &qword_10049D100);
}

uint64_t sub_1002C24A8()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100014A7C(v1, a1, (uint64_t *)&unk_10049E850);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100129EBC(a1, v1, (uint64_t *)&unk_10049E850);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100014A7C(v1 + 40, a1, (uint64_t *)&unk_10049E850);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100129EBC(a1, v1 + 40, (uint64_t *)&unk_10049E850);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 24), a1, &qword_10049C9D0);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 24), &qword_10049C9D0);
}

CFRange (__swiftcall *ArtworkImage.Placeholder.View.Style.blendMode.modify())(__C::_NSRange)
{
  type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return CFRange.init(_:);
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (uint64_t)a4 + 40;
  v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  v11 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_100129EBC(a1, (uint64_t)a4, (uint64_t *)&unk_10049E850);
  sub_100129EBC(a2, v8, (uint64_t *)&unk_10049E850);
  return sub_100129EBC(a3, v10, &qword_10049C9D0);
}

uint64_t sub_1002C26B4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD v15[5];
  _QWORD v16[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v5 = sub_1000086B4(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v6 = static Color.white.getter(v5);
  v7 = Color.opacity(_:)(0.12);
  v8 = swift_release(v6);
  v16[3] = &type metadata for Color;
  v16[4] = &protocol witness table for Color;
  v16[0] = v7;
  v9 = static Color.black.getter(v8);
  v10 = Color.opacity(_:)(0.1);
  swift_release(v9);
  v15[3] = &type metadata for Color;
  v15[4] = &protocol witness table for Color;
  v15[0] = v10;
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v4, 1, 1, v11);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v13 = (uint64_t)v2 + *(int *)(v0 + 24);
  v12((char *)v13, 1, 1, v11);
  sub_100129EBC((uint64_t)v16, (uint64_t)v2, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v15, (uint64_t)v2 + 40, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v4, v13, &qword_10049C9D0);
  return sub_1000648AC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498AF0, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_1002C26B4);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C2F1C(&qword_100498AF0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_1002C26B4, a1);
}

uint64_t sub_1002C28D4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v5 = sub_1000086B4(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = Color.init(_:)(objc_msgSend(v6, "quaternaryLabelColor"));
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = Color.init(_:)(objc_msgSend(v6, "tertiarySystemFillColor"));
  v13[3] = &type metadata for Color;
  v13[4] = &protocol witness table for Color;
  v13[0] = v8;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v4, 1, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v11 = (uint64_t)v2 + *(int *)(v0 + 24);
  v10((char *)v11, 1, 1, v9);
  sub_100129EBC((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v13, (uint64_t)v2 + 40, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v4, v11, &qword_10049C9D0);
  return sub_1000648AC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498AF8, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_1002C28D4);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C2F1C(&qword_100498AF8, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_1002C28D4, a1);
}

uint64_t sub_1002C2AF8()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD v17[5];
  _QWORD v18[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  v5 = sub_1000086B4(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  v6 = static Color.white.getter(v5);
  v7 = Color.opacity(_:)(0.25);
  swift_release(v6);
  v18[3] = &type metadata for Color;
  v18[4] = &protocol witness table for Color;
  v18[0] = v7;
  v9 = static Color.white.getter(v8);
  v10 = Color.opacity(_:)(0.07);
  swift_release(v9);
  v17[3] = &type metadata for Color;
  v17[4] = &protocol witness table for Color;
  v17[0] = v10;
  v11 = enum case for BlendMode.plusLighter(_:);
  v12 = type metadata accessor for BlendMode(0);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v4, v11, v12);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v14(v4, 0, 1, v12);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v15 = (uint64_t)v2 + *(int *)(v0 + 24);
  v14((char *)v15, 1, 1, v12);
  sub_100129EBC((uint64_t)v18, (uint64_t)v2, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v17, (uint64_t)v2 + 40, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v4, v15, &qword_10049C9D0);
  return sub_1000648AC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498B00, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_1002C2AF8);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C2F1C(&qword_100498B00, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_1002C2AF8, a1);
}

uint64_t sub_1002C2D34()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  v5 = sub_1000086B4(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  v7 = static Color.accentColor.getter(v6);
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = type metadata accessor for BlendMode(0);
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v4, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_100129EBC((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_10049E850);
  sub_100129EBC((uint64_t)v4, v10, &qword_10049C9D0);
  return sub_1000648AC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498B08, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_1002C2D34);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C2F1C(&qword_100498B08, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_1002C2D34, a1);
}

uint64_t sub_1002C2F1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v7 = sub_1000086B4(v6, a2);
  return sub_100082248(v7, a4, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin();
  sub_100005574(&qword_100499778);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v0, (uint64_t)v2, v3);
  v4 = sub_100005574(&qword_10049F810);
  v5 = (char *)sub_1002C30B8
     + 4
     * byte_10039B575[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 10, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1002C30B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1000149A8(v5, v3, &qword_100499778);
  Hasher._combine(_:)(3uLL);
  sub_100014A7C(v3, v4, &qword_100499778);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v0) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v0);
    Hasher._combine(_:)(1u);
    v7 = sub_100006924(&qword_10049C9D8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    dispatch thunk of Hashable.hash(into:)(v1, v0, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  }
  return sub_100008758(v3, &qword_100499778);
}

uint64_t sub_1002C31EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002C321C + 4 * byte_10039B580[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_1002C321C()
{
  return 0x6979616C50776F6ELL;
}

uint64_t sub_1002C323C()
{
  return 0x6C79616C5077656ELL;
}

uint64_t sub_1002C325C()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1002C3274()
{
  return 0x646956636973756DLL;
}

uint64_t sub_1002C3294()
{
  return 30324;
}

uint64_t sub_1002C32A0()
{
  return 0x6F68706F7263696DLL;
}

uint64_t sub_1002C32BC()
{
  return 0x6E6F73726570;
}

uint64_t sub_1002C32D0()
{
  return 0x65726E6567;
}

uint64_t sub_1002C32E0()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_1002C32F8()
{
  return 0x6F69646172;
}

uint64_t sub_1002C3308()
{
  unsigned __int8 *v0;

  return sub_1002C31EC(*v0);
}

uint64_t sub_1002C3310@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002D00FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002C3334(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1002C3340(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8780();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3368(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8780();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C3390(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C87C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C33B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C87C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C33E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8808();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3408(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8808();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C3430(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C88D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3458(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C88D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C3480@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_1002C34AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8A6C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C34D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8A6C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C34FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C895C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3524(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C895C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C354C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C89E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3574(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C89E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C359C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8A28();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C35C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8A28();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C35EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8890();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3614(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8890();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C363C()
{
  return 1701869940;
}

uint64_t sub_1002C364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1002C36D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C89A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C36F8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C89A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C3720(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C884C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3748(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C884C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C3770(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8918();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3798(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002C8918();
  return CodingKey.debugDescription.getter(a1, v2);
}

void ArtworkImage.Placeholder.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = sub_100005574(&qword_10049C9E0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin();
  v52 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10049C9E8);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin();
  v49 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100005574(&qword_10049C9F0);
  v26[2] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v26[1] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049C9F8);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin();
  v46 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049CA00);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin();
  v43 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049CA08);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin();
  v38 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100005574(&qword_10049CA10);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v33 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100005574(&qword_10049CA18);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v37 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499778);
  __chkstk_darwin();
  v34 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100005574(&qword_10049CA20);
  v31 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v30 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100005574(&qword_10049CA28);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  sub_100005574(&qword_10049CA30);
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100005574(&qword_10049CA38);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  sub_10000ABC8(a1, v21);
  v23 = sub_1002C8780();
  v56 = v20;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v23, v21, v22);
  sub_100082248(v58, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
  v24 = sub_100005574(&qword_10049F810);
  v25 = (char *)sub_1002C3C30
      + 4
      * byte_10039B58B[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 10, v24)];
  __asm { BR              X10 }
}

uint64_t sub_1002C3C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 - 304);
  sub_1000149A8(v0, v2, &qword_100499778);
  *(_BYTE *)(v1 - 72) = 3;
  v3 = sub_1002C89A0();
  v4 = *(_QWORD *)(v1 - 280);
  v6 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v1 - 120);
  ((void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t))KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:))(&_s11PlaceholderO18PlaylistCodingKeysON, v1 - 72, v5, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  type metadata accessor for Playlist.Variant(0);
  sub_100006924(&qword_10049CA88, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v7 = *(_QWORD *)(v1 - 256);
  ((void (*)(uint64_t))KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:))(v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(v4, v7);
  sub_100008758(v2, &qword_100499778);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v6, v5);
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  __n128 v35;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  uint64_t v73;

  v64 = a2;
  v3 = sub_100005574(&qword_10049CAA8);
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  __chkstk_darwin();
  v63 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049CAB0);
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  __chkstk_darwin();
  v62 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100005574(&qword_10049CAB8);
  v52 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v61 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100005574(&qword_10049CAC0);
  v50 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin();
  v60 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100005574(&qword_10049CAC8);
  v48 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v68 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100005574(&qword_10049CAD0);
  v45 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin();
  v58 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100005574(&qword_10049CAD8);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v57 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100005574(&qword_10049CAE0);
  v54 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v59 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049CAE8);
  v41 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v56 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100005574(&qword_10049CAF0);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v55 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100005574(&qword_10049CAF8);
  v37[3] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin();
  v67 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100005574(&qword_10049CB00);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v24 = (char *)v37 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v72 = a1;
  sub_10000ABC8(a1, v25);
  v27 = sub_1002C8780();
  v71 = v19;
  v28 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v27, v25, v26);
  if (!v28)
  {
    v37[0] = v22;
    v37[2] = 0;
    v73 = v17;
    v37[1] = v24;
    v29 = KeyedDecodingContainer.allKeys.getter(v16);
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = type metadata accessor for DecodingError(0);
    swift_allocError(v30, &protocol witness table for DecodingError, 0, 0);
    v32 = v31;
    sub_100005574(&qword_10049CB08);
    *v32 = v20;
    v33 = v71;
    v34 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v34, 0xD00000000000002BLL, 0x80000001003B9B50, 0);
    v35.n128_f64[0] = (*(double (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow(v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v16);
  }
  return sub_10000682C(v72);
}

void sub_1002C4670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 90) = 1;
  v3 = sub_1002C8A28();
  v4 = *(_QWORD *)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20NowPlayingCodingKeysON, v2 - 90, v1, &_s11PlaceholderO20NowPlayingCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 376) + 8))(v4, *(_QWORD *)(v2 - 368));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 2, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 89) = 2;
  v3 = sub_1002C89E4();
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO21NewPlaylistCodingKeysON, v2 - 89, v1, &_s11PlaceholderO21NewPlaylistCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 360) + 8))(v4, *(_QWORD *)(v2 - 352));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 3, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C47B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v2 - 72) = 3;
  v3 = sub_1002C89A0();
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18PlaylistCodingKeysON, v2 - 72, v1, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  if (!v5)
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    sub_100006924(&qword_10049CB10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v7 = *(_QWORD *)(v2 - 416);
    v8 = *(_QWORD *)(v2 - 312);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6);
    v9 = *(_QWORD *)(v2 - 104);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v4, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v1);
    v10 = sub_100005574(&qword_10049F810);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 0, 10, v10);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 408), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4C58);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C488C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 71) = 4;
  v3 = sub_1002C895C();
  v4 = *(_QWORD *)(v2 - 232);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MusicVideoCodingKeysON, v2 - 71, v1, &_s11PlaceholderO20MusicVideoCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 344) + 8))(v4, *(_QWORD *)(v2 - 336));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 4, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 70) = 5;
  v3 = sub_1002C8918();
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO12TvCodingKeysON, v2 - 70, v1, &_s11PlaceholderO12TvCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 328) + 8))(v4, *(_QWORD *)(v2 - 320));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 5, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C49D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 69) = 6;
  v4 = sub_1002C88D4();
  v5 = *(_QWORD *)(v3 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MicrophoneCodingKeysON, v3 - 69, v1, &_s11PlaceholderO20MicrophoneCodingKeysON, v4);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(v2, *(_QWORD *)(v3 - 296));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v3 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 6, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v3 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 68) = 7;
  v3 = sub_1002C8890();
  v4 = *(_QWORD *)(v2 - 208);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO16PersonCodingKeysON, v2 - 68, v1, &_s11PlaceholderO16PersonCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 8))(v4, *(_QWORD *)(v2 - 280));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 7, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v2 - 67) = 8;
  v3 = sub_1002C884C();
  v4 = *(_QWORD *)(v2 - 200);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15RadioCodingKeysON, v2 - 67, v1, &_s11PlaceholderO15RadioCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v4, *(_QWORD *)(v2 - 264));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
    v6 = sub_100005574(&qword_10049F810);
    v7 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 8, 10, v6);
    sub_1000648AC(v7, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0x1002C4648);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 66) = 9;
  v5 = sub_1002C8808();
  v6 = *(_QWORD *)(v4 - 192);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15GenreCodingKeysON, v4 - 66, v3, &_s11PlaceholderO15GenreCodingKeysON, v5);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v3);
    sub_100005574(&qword_10049F810);
    JUMPOUT(0x1002C4C50);
  }
  JUMPOUT(0x1002C4628);
}

void sub_1002C4C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v4 - 65) = 10;
  v5 = sub_1002C87C4();
  v6 = *(_QWORD *)(v4 - 184);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18ComposerCodingKeysON, v4 - 65, v1, &_s11PlaceholderO18ComposerCodingKeysON, v5);
  if (v7)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v1);
    JUMPOUT(0x1002C4648);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v0, v1);
  v8 = sub_100005574(&qword_10049F810);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(*(_QWORD *)(v4 - 408), 10, 10, v8);
  JUMPOUT(0x1002C4C60);
}

uint64_t sub_1002C4DC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

void sub_1002C4DD4(_QWORD *a1)
{
  ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int sub_1002C4DEC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v39 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v13((char *)&v39 - v11, v1, v7);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v12, v7);
  if (v14 == enum case for GenericMusicItem.album(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.artist(_:))
    goto LABEL_13;
  if (v14 == enum case for GenericMusicItem.composer(_:))
  {
    v18 = sub_100005574(&qword_10049F810);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 10, 10, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.creditArtist(_:) || v14 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_13;
  if (v14 == enum case for GenericMusicItem.editorialItem(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.genre(_:))
  {
    v21 = sub_100005574(&qword_10049F810);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 9, 10, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.musicMovie(_:))
    goto LABEL_18;
  if (v14 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v23 = sub_100005574(&qword_10049F810);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 4, 10, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    Playlist.variant.getter(v24);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v25 = sub_100005574(&qword_10049F810);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 0, 10, v25);
  }
  if (v14 == enum case for GenericMusicItem.radioShow(_:))
    goto LABEL_24;
  if (v14 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v20 = sub_100005574(&qword_10049F810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 6, 10, v20);
  }
  if (v14 == enum case for GenericMusicItem.socialProfile(_:))
  {
    v27 = sub_100005574(&qword_10049F810);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 7, 10, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.song(_:))
    goto LABEL_2;
  if (v14 == enum case for GenericMusicItem.station(_:))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v26 = sub_100005574(&qword_10049F810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 8, 10, v26);
  }
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:)
    || v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v22 = sub_100005574(&qword_10049F810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 5, 10, v22);
  }
  if (v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_3:
    v16 = sub_100005574(&qword_10049F810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 10, v16);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:))
    goto LABEL_18;
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (qword_100498B20 != -1)
    swift_once(&qword_100498B20, sub_1002C6668);
  v28 = type metadata accessor for Logger(0, v15);
  sub_1000086B4(v28, (uint64_t)static Logger.artwork);
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v10, v1, v7);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v40 = v33;
    *(_DWORD *)v32 = 136315394;
    *(_QWORD *)(v32 + 4) = sub_100249A1C((char *)0xD000000000000010, (char *)0x80000001003B7EE0, &v40);
    *(_WORD *)(v32 + 12) = 2080;
    v34 = sub_100006924((unint64_t *)&qword_1004999E8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v35 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v34);
    *(_QWORD *)(v32 + 14) = sub_100249A1C(v35, v36, &v40);
    swift_bridgeObjectRelease();
    v37 = *(void (**)(char *, uint64_t))(v8 + 8);
    v37(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unhandled case for %s: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t))(v8 + 8);
    v37(v10, v7);
  }

  v38 = sub_100005574(&qword_10049F810);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a1, 1, 10, v38);
  return ((uint64_t (*)(char *, uint64_t))v37)(v12, v7);
}

uint64_t GenericMusicItem.aspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  double v29;
  uint64_t v30;

  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(double *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v29 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)&v8 + 16);
  v13((char *)&v29 - v11, v0, v7);
  v14 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 88))(v12, v7);
  if (v14 == enum case for GenericMusicItem.album(_:)
    || v14 == enum case for GenericMusicItem.artist(_:)
    || v14 == enum case for GenericMusicItem.composer(_:)
    || v14 == enum case for GenericMusicItem.creditArtist(_:)
    || v14 == enum case for GenericMusicItem.curator(_:)
    || v14 == enum case for GenericMusicItem.editorialItem(_:)
    || v14 == enum case for GenericMusicItem.genre(_:)
    || v14 == enum case for GenericMusicItem.musicMovie(_:)
    || v14 == enum case for GenericMusicItem.musicVideo(_:)
    || v14 == enum case for GenericMusicItem.playlist(_:)
    || v14 == enum case for GenericMusicItem.radioShow(_:)
    || v14 == enum case for GenericMusicItem.recordLabel(_:)
    || v14 == enum case for GenericMusicItem.socialProfile(_:)
    || v14 == enum case for GenericMusicItem.song(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 8))(v12, v7);
  }
  v29 = v8;
  if (v14 == enum case for GenericMusicItem.station(_:))
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v29 + 8))(v12, v7);
  v8 = v29;
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:))
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 8))(v12, v7);
  if (v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:)
    || v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v29 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 96))(v12, v7);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    sub_10024649C(v2);
    v17 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v2, 1, v17) == 1)
    {
      sub_100008758((uint64_t)v2, (uint64_t *)&unk_10049F7D0);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        v18 = (double)Artwork.maximumWidth.getter();
        v29 = v18 / (double)Artwork.maximumHeight.getter();
        sub_100006798((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
      sub_100006798((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
    }
    v29 = 1.77777778;
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 96))(v12, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100498B20 != -1)
      swift_once(&qword_100498B20, sub_1002C6668);
    v19 = type metadata accessor for Logger(0, v15);
    sub_1000086B4(v19, (uint64_t)static Logger.artwork);
    v20 = ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v10, v0, v7);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v30 = v24;
      *(_DWORD *)v23 = 136315394;
      *(_QWORD *)(v23 + 4) = sub_100249A1C((char *)0xD000000000000010, (char *)0x80000001003B7EE0, &v30);
      *(_WORD *)(v23 + 12) = 2080;
      v25 = sub_100006924((unint64_t *)&qword_1004999E8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v25);
      *(_QWORD *)(v23 + 14) = sub_100249A1C(v26, v27, &v30);
      swift_bridgeObjectRelease();
      v28 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 8);
      v28(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Unhandled case for %s: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 8);
      v28(v10, v7);
    }

    return ((uint64_t (*)(char *, uint64_t))v28)(v12, v7);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
  {
    v7 = 0xE900000000000065;
  }
  else if (v6 == enum case for Playlist.Variant.genius(_:))
  {
    v7 = 0xE600000000000000;
  }
  else if (v6 == enum case for Playlist.Variant.folder(_:))
  {
    v7 = 0xE600000000000000;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7 = 0xEF7473696C2E6574;
  }
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v8);

  if (!v9)
    __break(1u);
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSString v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _BYTE v30[32];

  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v26 - v10;
  v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  __chkstk_darwin();
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v12);
  v28 = v13;
  v16 = a1;
  Artwork.init(_:)();
  v17 = objc_msgSend(v16, "token");
  _bridgeAnyObjectToAny(_:)(v17);
  swift_unknownObjectRelease(v17);
  v18 = sub_1000087DC(0, &qword_10049CB18, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v29, v30, (char *)&type metadata for Any + 8, v18, 6) & 1) == 0)
  {

LABEL_8:
    v24 = &v15[*(int *)(v12 + 20)];
    v25 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v11, v6);
    goto LABEL_9;
  }
  v27 = a2;
  v19 = v29;
  v20 = objc_msgSend(v29, "cropStyle");

  if (!v20)
  {

    a2 = v27;
    goto LABEL_8;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v26 = v5;

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v22 = (uint64_t)v26;
  Artwork.CropStyle.init(_:)(v21, (uint64_t)v26);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
  sub_1000149A8(v22, (uint64_t)&v15[*(int *)(v12 + 20)], &qword_1004999E0);
  a2 = v27;
LABEL_9:
  sub_1000648AC((uint64_t)v15, a2, type metadata accessor for ArtworkImage.ViewModel);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(a2, 0, 1, v12);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleBoundedBox);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v8 == v11 && v10 == v12)
  {
    v34 = a1;
    v17 = swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_16;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  v16 = a1;
  swift_bridgeObjectRelease(v10);
  v17 = swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter(v17);
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedWidth);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v18 == v21 && v20 == v22)
  {
    v26 = swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_19;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  v26 = swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter(v26);
    goto LABEL_17;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedHeight);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    v33 = swift_bridgeObjectRelease_n(v29, 2);
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter(v33);
    goto LABEL_17;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v29);
  v33 = swift_bridgeObjectRelease(v32);
  if ((v36 & 1) != 0)
    goto LABEL_21;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop270);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    v43 = swift_bridgeObjectRelease_n(v39, 2);
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter(v43);
    goto LABEL_17;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  v43 = swift_bridgeObjectRelease(v42);
  if ((v44 & 1) != 0)
    goto LABEL_26;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop44);
  v47 = v46;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v50 = v48;
  if (v45 == v49 && v47 == v48)
  {
    v51 = swift_bridgeObjectRelease_n(v47, 2);
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter(v51);
    goto LABEL_17;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
  swift_bridgeObjectRelease(v47);
  v51 = swift_bridgeObjectRelease(v50);
  if ((v52 & 1) != 0)
    goto LABEL_31;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop170T100B);
  v55 = v54;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    v59 = swift_bridgeObjectRelease_n(v55, 2);
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter(v59);
    goto LABEL_17;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);
  swift_bridgeObjectRelease(v55);
  v59 = swift_bridgeObjectRelease(v58);
  if ((v60 & 1) != 0)
    goto LABEL_36;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSourceSize);
  v63 = v62;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v66 = v64;
  if (v61 == v65 && v63 == v64)
  {
    v67 = swift_bridgeObjectRelease_n(v63, 2);
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter(v67);
    goto LABEL_17;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v65, v64, 0);
  swift_bridgeObjectRelease(v63);
  v67 = swift_bridgeObjectRelease(v66);
  if ((v68 & 1) != 0)
    goto LABEL_41;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSpecificRectangle);
  v71 = v70;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v74 = v72;
  if (v69 == v73 && v71 == v72)
  {
    v75 = swift_bridgeObjectRelease_n(v71, 2);
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter(v75);
    goto LABEL_17;
  }
  v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v73, v72, 0);
  swift_bridgeObjectRelease(v71);
  v75 = swift_bridgeObjectRelease(v74);
  if ((v76 & 1) != 0)
    goto LABEL_46;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSquareCenterCrop);
  v79 = v78;
  v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v82 = v80;
  if (v77 == v81 && v79 == v80)
  {
    v83 = swift_bridgeObjectRelease_n(v79, 2);
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter(v83);
    goto LABEL_17;
  }
  v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v81, v80, 0);
  swift_bridgeObjectRelease(v79);
  v83 = swift_bridgeObjectRelease(v82);
  if ((v84 & 1) != 0)
    goto LABEL_51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t sub_1002C6498()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.CropStyle(0);
  sub_1000086DC(v0, static Artwork.CropStyle.fallback);
  v1 = sub_1000086B4(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter(v1);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C69DC(&qword_100498B10, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_1002C6498, a1);
}

uint64_t sub_1002C6504()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.ImageFormat(0);
  sub_1000086DC(v0, static Artwork.ImageFormat.fallback);
  v1 = sub_1000086B4(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Artwork.ImageFormat.heic(_:), v0);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C69DC(&qword_100498B18, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_1002C6504, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v9 = a4 & 1;
  sub_1000087DC(0, (unint64_t *)&qword_10049E540, MPArtworkCatalog_ptr);
  if (static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9))
  {
    Artwork.init(_:)();
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 0;
  }
  else
  {
    v10 = type metadata accessor for Artwork(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a5;
    v13 = 1;
  }
  return v11(v12, v13, 1, v10);
}

uint64_t sub_1002C6668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.artwork);
  sub_1000086B4(v2, (uint64_t)static Logger.artwork);
  return static Logger.music(_:)(0x6B726F77747241, 0xE700000000000000);
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CB98, (uint64_t)&nominal type descriptor for ArtworkImage.ViewModel);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CDA8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_1002C66EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 58) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_100005574(&qword_10049F810);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002C67A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 80);
  return sub_1002BF6E0(v1 + 16, v1 + ((v3 + 58) & ~v3), a1);
}

unint64_t sub_1002C6818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C940;
  if (!qword_10049C940)
  {
    v1 = sub_100005600((uint64_t *)&unk_10049E7C0);
    sub_1002C689C();
    sub_10002FFB8(&qword_10049C960, (uint64_t *)&unk_10049E810, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049C940);
  }
  return result;
}

unint64_t sub_1002C689C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E7D0;
  if (!qword_10049E7D0)
  {
    v1 = sub_100005600(&qword_10049C948);
    sub_1002C6908();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E7D0);
  }
  return result;
}

unint64_t sub_1002C6908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E7E0;
  if (!qword_10049E7E0)
  {
    v1 = sub_100005600(&qword_10049C950);
    sub_100006924((unint64_t *)&unk_10049E7F0, type metadata accessor for ArtworkImage.Placeholder.View, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder.View);
    sub_10002FFB8(&qword_10049C958, (uint64_t *)&unk_10049E800, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E7E0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CE28, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C69DC(&qword_100498B20, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_1002C6668, a1);
}

uint64_t sub_1002C69DC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_1000086B4(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1002C6A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100005574(&qword_10049C9B8);
  sub_1000086DC(v0, qword_10049C928);
  v1 = sub_1000086B4(v0, (uint64_t)qword_10049C928);
  v2 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_1002C6AB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_100498B28 != -1)
    swift_once(&qword_100498B28, sub_1002C6A48);
  v2 = sub_100005574(&qword_10049C9B8);
  v3 = sub_1000086B4(v2, (uint64_t)qword_10049C928);
  return sub_100014A7C(v3, a1, &qword_10049C9B8);
}

void (*EnvironmentValues.placeholderStyle.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  unint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10049C9B8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = sub_1002C8728();
  v3[4] = v5;
  EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
  return sub_1002C6BC0;
}

void sub_1002C6BC0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_100014A7C((*a1)[3], (*a1)[2], &qword_10049C9B8);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_100014A7C(v3[2], v3[1], &qword_10049C9B8);
    EnvironmentValues.subscript.setter(v6, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
    sub_100008758((uint64_t)v7, &qword_10049C9B8);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v3[4]);
  }
  sub_100008758((uint64_t)v4, &qword_10049C9B8);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_1002C6C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23[2];

  v20 = a1;
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a2, (uint64_t)v10, &qword_10049C9B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_100008758((uint64_t)v10, &qword_10049C9B8);
  sub_1000648AC((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  sub_100014A7C((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&unk_10049E850);
  if (v22)
  {
    sub_1000137C8(&v21, (uint64_t)v23);
    v16 = v20;
    sub_100008758(v20, (uint64_t *)&unk_10049E850);
    sub_1000137C8(v23, v16);
  }
  else
  {
    sub_100008758((uint64_t)&v21, (uint64_t *)&unk_10049E850);
    v16 = v20;
  }
  sub_100014A7C((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&unk_10049E850);
  if (v22)
  {
    sub_1000137C8(&v21, (uint64_t)v23);
    sub_100008758(v16 + 40, (uint64_t *)&unk_10049E850);
    sub_1000137C8(v23, v16 + 40);
  }
  else
  {
    sub_100008758((uint64_t)&v21, (uint64_t *)&unk_10049E850);
  }
  sub_100014A7C((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &qword_10049C9D0);
  sub_100006798((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_100008758((uint64_t)v4, &qword_10049C9D0);
  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  v18 = v16 + *(int *)(v11 + 24);
  sub_100008758(v18, &qword_10049C9D0);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10039B5F0);
  sub_1002C7098((uint64_t)v5);
  v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = (uint64_t *)(a2 + *(int *)(sub_100005574(&qword_10049CB20) + 36));
  v9 = sub_100005574(&qword_10049CB28);
  sub_100014A7C((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &qword_10049C9B8);
  *v8 = KeyPath;
  v10 = sub_100005574(&qword_10049CB30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  return sub_100008758((uint64_t)v5, &qword_10049C9B8);
}

uint64_t sub_1002C7098@<X0>(uint64_t a1@<X8>)
{
  uint64_t (**v1)(uint64_t);
  uint64_t (**v2)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C9D0);
  __chkstk_darwin();
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049C9B8);
  __chkstk_darwin();
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  sub_1002BE43C(&qword_100498E38, &qword_10049C9B8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v12 = type metadata accessor for BlendMode(0);
    memset(v16, 0, sizeof(v16));
    v17 = 0;
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    v7[3] = 0u;
    v7[4] = 0u;
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    sub_100129EBC((uint64_t)v18, (uint64_t)v7, (uint64_t *)&unk_10049E850);
    sub_100129EBC((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&unk_10049E850);
    sub_100129EBC((uint64_t)v9, v14, &qword_10049C9D0);
    sub_1000648AC((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    sub_100008758((uint64_t)v11, &qword_10049C9B8);
  }
  else
  {
    sub_1000648AC((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v18 = a3;
  v5 = *(_QWORD *)(sub_100005574(&qword_10049C9B8) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin();
  v7 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v11 = (char *)&v18 - v10;
  sub_100014A7C(a1, (uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10049C9B8);
  v12 = (_QWORD *)((char *)v9 + *(int *)(v7 + 20));
  *v12 = swift_getKeyPath(&unk_10039B5F0);
  v13 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v12, v13, 0);
  v14 = *(unsigned __int8 *)(v5 + 80);
  v15 = (v14 + 16) & ~v14;
  v16 = swift_allocObject(&unk_1004619B8, v15 + v6, v14 | 7);
  sub_1000149A8((uint64_t)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, &qword_10049C9B8);
  *v9 = sub_1002C8AC8;
  v9[1] = v16;
  sub_1000648AC((uint64_t)v9, (uint64_t)v11, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v11, a2, v7, v18);
  return sub_100006798((uint64_t)v11, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a4;
  v6 = *(_QWORD *)(sub_100005574(&qword_10049C9B8) - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  a1(v11);
  v14 = (_QWORD *)((char *)v10 + *(int *)(v8 + 20));
  *v14 = swift_getKeyPath(&unk_10039B5F0);
  v15 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_1004619E0, v17 + v7, v16 | 7);
  sub_1000149A8((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_10049C9B8);
  *v10 = sub_1002C8AC8;
  v10[1] = v18;
  sub_1000648AC((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v13, a3, v8, v20);
  return sub_100006798((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin();
  v13 = (char *)&v17 - v12;
  v14 = (_QWORD *)((char *)v10 + *(int *)(v11 + 20));
  *v14 = swift_getKeyPath(&unk_10039B5F0);
  v15 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  *v10 = a1;
  v10[1] = a2;
  sub_1000648AC((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  swift_retain(a2);
  View.modifier<A>(_:)(v13, a3, v8, a4);
  return sub_100006798((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  int v5;
  int v6;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
LABEL_7:
    v3 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
        v3 = 1;
      if ((v3 & 1) != 0)
        return 0;
    }
    v4 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    v5 = *(unsigned __int8 *)(a1 + 41);
    v6 = *(unsigned __int8 *)(a2 + 41);
    if (v5 == 2)
    {
      if (v6 != 2)
        return 0;
    }
    else if (v6 == 2 || (static ContentMode.== infix(_:_:)(v5 & 1, v6 & 1) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_7;
  return 0;
}

BOOL _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049D180);
  __chkstk_darwin();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  v16 = (char *)&v25 - v15;
  if ((static Artwork.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v26 = v7;
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_100014A7C(a1 + *(int *)(v17 + 20), (uint64_t)v16, &qword_1004999E0);
  sub_100014A7C(a2 + *(int *)(v17 + 20), (uint64_t)v14, &qword_1004999E0);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100014A7C((uint64_t)v16, (uint64_t)v10, &qword_1004999E0);
  sub_100014A7C((uint64_t)v14, v18, &qword_1004999E0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_100008758((uint64_t)v14, &qword_1004999E0);
    sub_100008758((uint64_t)v16, &qword_1004999E0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v10, &qword_1004999E0);
      return 1;
    }
    goto LABEL_7;
  }
  sub_100014A7C((uint64_t)v10, (uint64_t)v12, &qword_1004999E0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_100008758((uint64_t)v14, &qword_1004999E0);
    sub_100008758((uint64_t)v16, &qword_1004999E0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
    sub_100008758((uint64_t)v10, &qword_10049D180);
    return 0;
  }
  v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v18, v4);
  v21 = sub_100006924(&qword_10049D188, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t)&protocol conformance descriptor for Artwork.CropStyle);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v20, v4, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v20, v4);
  sub_100008758((uint64_t)v14, &qword_1004999E0);
  sub_100008758((uint64_t)v16, &qword_1004999E0);
  v23(v12, v4);
  sub_100008758((uint64_t)v10, &qword_1004999E0);
  return (v22 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CC30, (uint64_t)&nominal type descriptor for ArtworkImage.Info);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4InfoV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  BOOL v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  __int128 v45;
  _BYTE v46[26];

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049D178);
  __chkstk_darwin();
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  __chkstk_darwin();
  v15 = (char *)&v39 - v14;
  v41 = a1;
  sub_100014A7C(a1, (uint64_t)&v39 - v14, (uint64_t *)&unk_10049F7D0);
  v42 = a2;
  sub_100014A7C(a2, (uint64_t)v13, (uint64_t *)&unk_10049F7D0);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100014A7C((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_10049F7D0);
  sub_100014A7C((uint64_t)v13, v16, (uint64_t *)&unk_10049F7D0);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_100014A7C((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_10049F7D0);
    if (v17(v16, 1, v4) != 1)
    {
      v18 = v40;
      sub_1000648AC(v16, v40, type metadata accessor for ArtworkImage.ViewModel);
      v19 = _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)v11, v18);
      sub_100006798(v18, type metadata accessor for ArtworkImage.ViewModel);
      sub_100008758((uint64_t)v13, (uint64_t *)&unk_10049F7D0);
      sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F7D0);
      sub_100006798((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F7D0);
      if (!v19)
        return 0;
      goto LABEL_8;
    }
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_10049F7D0);
    sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F7D0);
    sub_100006798((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    sub_100008758((uint64_t)v9, &qword_10049D178);
    return 0;
  }
  sub_100008758((uint64_t)v13, (uint64_t *)&unk_10049F7D0);
  sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F7D0);
  if (v17(v16, 1, v4) != 1)
    goto LABEL_6;
  sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F7D0);
LABEL_8:
  v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v22 = v41;
  v21 = v42;
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(v41 + v20[5], v42 + v20[5]);
  if ((v23 & 1) != 0)
  {
    v24 = v20[6];
    v25 = (double *)(v22 + v24);
    v26 = *(_BYTE *)(v22 + v24 + 8);
    v27 = (double *)(v21 + v24);
    v28 = *(unsigned __int8 *)(v21 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        return 0;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        return 0;
    }
    v29 = (__int128 *)(v22 + v20[7]);
    v30 = *(__int128 *)((char *)v29 + 26);
    v31 = v29[1];
    v43 = *v29;
    v44[0] = v31;
    *(_OWORD *)((char *)v44 + 10) = v30;
    v32 = (__int128 *)(v21 + v20[7]);
    *(_OWORD *)&v46[10] = *(__int128 *)((char *)v32 + 26);
    v33 = v32[1];
    v45 = *v32;
    *(_OWORD *)v46 = v33;
    if ((_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v43, (uint64_t)&v45) & 1) != 0)
    {
      v34 = v20[8];
      v35 = v22 + v34;
      v36 = *(_BYTE *)(v22 + v34 + 16);
      v37 = v21 + v34;
      if ((v36 & 1) != 0)
      {
        if ((*(_BYTE *)(v37 + 16) & 1) == 0)
          return 0;
      }
      else if ((*(_BYTE *)(v37 + 16) & 1) != 0
             || *(double *)v35 != *(double *)v37
             || *(_QWORD *)(v35 + 8) != *(_QWORD *)(v37 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

void _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  v12 = type metadata accessor for Playlist.Variant(0);
  v11[1] = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  sub_100005574(&qword_10049D160);
  __chkstk_darwin();
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499778);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  sub_100005574(&qword_10049D168);
  v5 = __chkstk_darwin();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100082248(a1, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_100082248(a2, v8, type metadata accessor for ArtworkImage.Placeholder);
  v9 = sub_100005574(&qword_10049F810);
  v10 = (char *)sub_1002C80CC
      + 4
      * byte_10039B5AC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 10, v9)];
  __asm { BR              X10 }
}

uint64_t sub_1002C80CC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_100082248(v0, v8, type metadata accessor for ArtworkImage.Placeholder);
  if (!v2(v1, 10, v7))
  {
    sub_1000149A8(v1, v5, &qword_100499778);
    v11 = *(_QWORD *)(v9 - 96);
    v12 = v11 + *(int *)(v6 + 48);
    sub_1000149A8(v8, v11, &qword_100499778);
    sub_100014A7C(v5, v12, &qword_100499778);
    v13 = *(_QWORD *)(v9 - 104);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = *(_QWORD *)(v9 - 88);
    if (v14(v11, 1, v15) == 1)
    {
      sub_100008758(v5, &qword_100499778);
      if (v14(v12, 1, v15) == 1)
      {
        sub_100008758(v11, &qword_100499778);
LABEL_3:
        sub_100006798(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 1;
      }
    }
    else
    {
      sub_100014A7C(v11, v4, &qword_100499778);
      if (v14(v12, 1, v15) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v12, v15);
        v16 = sub_100006924(&qword_10049D170, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v17 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v3, v15, v16);
        v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v3, v15);
        sub_100008758(v5, &qword_100499778);
        v18(v4, v15);
        sub_100008758(v11, &qword_100499778);
        if ((v17 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_100006798(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 0;
      }
      sub_100008758(v5, &qword_100499778);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v15);
    }
    sub_100008758(v11, &qword_10049D160);
    goto LABEL_12;
  }
  sub_100008758(v8, &qword_100499778);
  sub_100008758(v0, &qword_10049D168);
  return 0;
}

uint64_t sub_1002C840C()
{
  unint64_t v0;

  v0 = sub_1002C8728();
  return EnvironmentValues.subscript.getter(&_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v0);
}

uint64_t sub_1002C844C()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t type metadata accessor for ArtworkMotionView(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CCD8, (uint64_t)&nominal type descriptor for ArtworkMotionView);
}

uint64_t sub_1002C8480()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for ArtworkMotionView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for VideoArtwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = v6 + v1[5];
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v6 + v1[6];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v6 + v1[8];
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_100005574(&qword_10049F810);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 10, v17))
    {
      v18 = type metadata accessor for Playlist.Variant(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
    }
  }
  v20 = v6 + v1[9];
  v21 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002C8658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_1002C0794(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_1002C86C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049C998;
  if (!qword_10049C998)
  {
    v1 = sub_100005600(&qword_10049C990);
    sub_1002C6818();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10049C998);
  }
  return result;
}

unint64_t sub_1002C8728()
{
  unint64_t result;

  result = qword_10049C9B0;
  if (!qword_10049C9B0)
  {
    result = swift_getWitnessTable(&unk_10039C334, &_s19PlaceholderStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_10049C9B0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049CED8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View.Style);
}

unint64_t sub_1002C8780()
{
  unint64_t result;

  result = qword_10049CA40;
  if (!qword_10049CA40)
  {
    result = swift_getWitnessTable(&unk_10039C2E4, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA40);
  }
  return result;
}

unint64_t sub_1002C87C4()
{
  unint64_t result;

  result = qword_10049CA48;
  if (!qword_10049CA48)
  {
    result = swift_getWitnessTable(&unk_10039C294, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA48);
  }
  return result;
}

unint64_t sub_1002C8808()
{
  unint64_t result;

  result = qword_10049CA50;
  if (!qword_10049CA50)
  {
    result = swift_getWitnessTable(&unk_10039C244, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA50);
  }
  return result;
}

unint64_t sub_1002C884C()
{
  unint64_t result;

  result = qword_10049CA58;
  if (!qword_10049CA58)
  {
    result = swift_getWitnessTable(&unk_10039C1F4, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA58);
  }
  return result;
}

unint64_t sub_1002C8890()
{
  unint64_t result;

  result = qword_10049CA60;
  if (!qword_10049CA60)
  {
    result = swift_getWitnessTable(&unk_10039C1A4, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA60);
  }
  return result;
}

unint64_t sub_1002C88D4()
{
  unint64_t result;

  result = qword_10049CA68;
  if (!qword_10049CA68)
  {
    result = swift_getWitnessTable(&unk_10039C154, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA68);
  }
  return result;
}

unint64_t sub_1002C8918()
{
  unint64_t result;

  result = qword_10049CA70;
  if (!qword_10049CA70)
  {
    result = swift_getWitnessTable(&unk_10039C104, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA70);
  }
  return result;
}

unint64_t sub_1002C895C()
{
  unint64_t result;

  result = qword_10049CA78;
  if (!qword_10049CA78)
  {
    result = swift_getWitnessTable(&unk_10039C0B4, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA78);
  }
  return result;
}

unint64_t sub_1002C89A0()
{
  unint64_t result;

  result = qword_10049CA80;
  if (!qword_10049CA80)
  {
    result = swift_getWitnessTable(&unk_10039C064, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA80);
  }
  return result;
}

unint64_t sub_1002C89E4()
{
  unint64_t result;

  result = qword_10049CA90;
  if (!qword_10049CA90)
  {
    result = swift_getWitnessTable(&unk_10039C014, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA90);
  }
  return result;
}

unint64_t sub_1002C8A28()
{
  unint64_t result;

  result = qword_10049CA98;
  if (!qword_10049CA98)
  {
    result = swift_getWitnessTable(&unk_10039BFC4, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CA98);
  }
  return result;
}

unint64_t sub_1002C8A6C()
{
  unint64_t result;

  result = qword_10049CAA0;
  if (!qword_10049CAA0)
  {
    result = swift_getWitnessTable(&unk_10039BF74, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049CAA0);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049CF78, (uint64_t)&nominal type descriptor for PlaceholderStyleModifier);
}

uint64_t sub_1002C8AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(sub_100005574(&qword_10049C9B8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    if (v5[3])
      sub_10000682C((_QWORD *)(v0 + v3));
    if (v5[8])
      sub_10000682C(v5 + 5);
    v7 = (char *)v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for BlendMode(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002C8BB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_10049C9B8) - 8) + 80);
  return sub_1002C6C9C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1002C8BF8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkMotionView.body>>, 1);
}

uint64_t sub_1002C8C08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.View.body>>, 1);
}

uint64_t sub_1002C8C18()
{
  return sub_100006924(&qword_10049CB38, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_1002C8C44(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaceholderStyleModifier.body(content:)>>, 1);
}

uint64_t *_s9ViewModelVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100005574(&qword_1004999E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s9ViewModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Artwork.CropStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t _s9ViewModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_1004999E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100005574(&qword_1004999E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_1004999E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100005574(&qword_1004999E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C9200);
}

uint64_t sub_1002C9200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100005574(&qword_1004999E0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s9ViewModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C9284);
}

uint64_t sub_1002C9284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100005574(&qword_1004999E0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1002C9304(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002CA7E8(319, (unint64_t *)&unk_10049CBA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *_s4InfoVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100005574((uint64_t *)&unk_10049F7D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100005574(&qword_1004999E0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_100005574(&qword_10049F810);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = sub_100005574(&qword_100499778);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[6];
    v28 = a3[7];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = (_OWORD *)((char *)a1 + v28);
    v32 = (_OWORD *)((char *)a2 + v28);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t _s4InfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_100005574(&qword_10049F810);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Playlist.Variant(0);
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
  }
  return result;
}

char *_s4InfoVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100005574((uint64_t *)&unk_10049F7D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100005574(&qword_1004999E0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100005574(&qword_10049F810);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100005574(&qword_100499778);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004999E0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100006798(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100005574((uint64_t *)&unk_10049F7D0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100005574(&qword_1004999E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100005574(&qword_10049F810);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100005574(&qword_100499778);
      goto LABEL_21;
    }
    sub_100008758((uint64_t)v31, &qword_10049F810);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100005574(&qword_100499778);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_QWORD *)(v52 + 32) = v56;
  *(_BYTE *)(v52 + 41) = v53[41];
  v57 = a3[8];
  v58 = a1 + v57;
  v59 = &a2[v57];
  v60 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v59[16];
  *(_OWORD *)v58 = v60;
  return a1;
}

char *_s4InfoVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100005574((uint64_t *)&unk_10049F7D0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = sub_100005574(&qword_1004999E0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_100005574(&qword_10049F810);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = sub_100005574(&qword_100499778);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004999E0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100006798(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(sub_100005574((uint64_t *)&unk_10049F7D0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100005574(&qword_1004999E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = sub_100005574(&qword_10049F810);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = sub_100005574(&qword_100499778);
      goto LABEL_21;
    }
    sub_100008758((uint64_t)v31, &qword_10049F810);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = sub_100005574(&qword_100499778);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a3[7];
  v49 = a1 + v47;
  v50 = &a2[v47];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = a1 + v48;
  v52 = &a2[v48];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = v52[8];
  *(_QWORD *)(v51 + 16) = *((_QWORD *)v52 + 2);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_BYTE *)(v51 + 40) = v52[40];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_BYTE *)(v51 + 41) = v52[41];
  v53 = a3[8];
  v54 = a1 + v53;
  v55 = &a2[v53];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t _s4InfoVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CA5C0);
}

uint64_t sub_1002CA5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = sub_100005574((uint64_t *)&unk_10049F7D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t _s4InfoVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CA684);
}

uint64_t sub_1002CA684(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_100005574((uint64_t *)&unk_10049F7D0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ArtworkImage.Placeholder(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
  return result;
}

void sub_1002CA730(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1002CA7E8(319, (unint64_t *)&unk_10049CC40, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = &unk_10039B8A0;
      v6[4] = &unk_10039B8B8;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_1002CA7E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t _s4SizeVwet(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 41) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s4SizeVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkMotionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for VideoArtwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100005574(&qword_10049C968);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Artwork(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = sub_100005574((uint64_t *)&unk_10049F430);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100005574(&qword_1004999E0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = (_OWORD *)((char *)a1 + v23);
    v26 = (_OWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)((char *)v26 + 26);
    v28 = (char *)a1 + v24;
    v29 = (char *)a2 + v24;
    v30 = type metadata accessor for ArtworkImage.Placeholder(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100005574(&qword_10049C970);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = sub_100005574(&qword_10049F810);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 10, v33))
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      else
      {
        v35 = type metadata accessor for Playlist.Variant(0);
        v42 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v29, 1, v35))
        {
          v36 = sub_100005574(&qword_100499778);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v29, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v28, 0, 1, v35);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v28, 0, 10, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for ArtworkImage.ReusePolicy(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ArtworkMotionView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[6];
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + a2[8];
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_100005574(&qword_10049F810);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
    }
  }
  v17 = a1 + a2[9];
  v18 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

char *initializeWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100005574(&qword_10049C968);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100005574(&qword_1004999E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100005574(&qword_10049C970);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_100005574(&qword_10049F810);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_100005574(&qword_100499778);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

char *assignWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100005574(&qword_10049C968);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_100005574(&qword_1004999E0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = *((_QWORD *)v32 + 2);
  v31[24] = v32[24];
  *((_QWORD *)v31 + 2) = v34;
  v35 = *((_QWORD *)v32 + 4);
  v31[40] = v32[40];
  *((_QWORD *)v31 + 4) = v35;
  v31[41] = v32[41];
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for ArtworkImage.Placeholder(0);
  v40 = *(_QWORD **)(v39 - 8);
  v41 = (uint64_t (*)(char *, uint64_t, uint64_t))v40[6];
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      v44 = sub_100005574(&qword_10049F810);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v38, 10, v44))
      {
        memcpy(v37, v38, v40[8]);
      }
      else
      {
        v56 = type metadata accessor for Playlist.Variant(0);
        v68 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v38, 1, v56))
        {
          v57 = sub_100005574(&qword_100499778);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v37, v38, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v37, 0, 1, v56);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 10, v44);
      }
      v58 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v40[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v43)
  {
    sub_100006798((uint64_t)v37, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v46 = &qword_10049C970;
LABEL_26:
    v47 = *(_QWORD *)(*(_QWORD *)(sub_100005574(v46) - 8) + 64);
LABEL_27:
    memcpy(v37, v38, v47);
    goto LABEL_44;
  }
  v48 = sub_100005574(&qword_10049F810);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v37, 10, v48);
  v52 = v50(v38, 10, v48);
  if (!v51)
  {
    if (!v52)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v39 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v37, 1, v39);
      v67 = v65(v38, 1, v39);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v37, v38, v39);
          v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56);
LABEL_43:
          v58(v37, 0, 1, v39);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v37, v38, v39);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
      }
      v46 = &qword_100499778;
      goto LABEL_26;
    }
    sub_100008758((uint64_t)v37, &qword_10049F810);
LABEL_39:
    v47 = v40[8];
    goto LABEL_27;
  }
  if (v52)
    goto LABEL_39;
  v53 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v53))
  {
    v55 = sub_100005574(&qword_100499778);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v37, v38, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v53);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v37, 0, 10, v48);
LABEL_44:
  v59 = a3[9];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

char *initializeWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100005574(&qword_10049C968);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100005574(&qword_1004999E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100005574(&qword_10049C970);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = sub_100005574(&qword_10049F810);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = sub_100005574(&qword_100499778);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

char *assignWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_100005574(&qword_10049C968);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = sub_100005574(&qword_1004999E0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = a3[8];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  v32[24] = v33[24];
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  *((_WORD *)v32 + 20) = *((_WORD *)v33 + 20);
  v34 = &a1[v31];
  v35 = &a2[v31];
  v36 = type metadata accessor for ArtworkImage.Placeholder(0);
  v37 = *(_QWORD **)(v36 - 8);
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v37[6];
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = sub_100005574(&qword_10049F810);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 10, v41))
      {
        memcpy(v34, v35, v37[8]);
      }
      else
      {
        v53 = type metadata accessor for Playlist.Variant(0);
        v65 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v35, 1, v53))
        {
          v54 = sub_100005574(&qword_100499778);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v34, v35, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v34, 0, 1, v53);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 10, v41);
      }
      v55 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v40)
  {
    sub_100006798((uint64_t)v34, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v43 = &qword_10049C970;
LABEL_26:
    v44 = *(_QWORD *)(*(_QWORD *)(sub_100005574(v43) - 8) + 64);
LABEL_27:
    memcpy(v34, v35, v44);
    goto LABEL_44;
  }
  v45 = sub_100005574(&qword_10049F810);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v34, 10, v45);
  v49 = v47(v35, 10, v45);
  if (!v48)
  {
    if (!v49)
    {
      v36 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v36 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v34, 1, v36);
      v64 = v62(v35, 1, v36);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v34, v35, v36);
          v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
LABEL_43:
          v55(v34, 0, 1, v36);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v34, v35, v36);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v36);
      }
      v43 = &qword_100499778;
      goto LABEL_26;
    }
    sub_100008758((uint64_t)v34, &qword_10049F810);
LABEL_39:
    v44 = v37[8];
    goto LABEL_27;
  }
  if (v49)
    goto LABEL_39;
  v50 = type metadata accessor for Playlist.Variant(0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v35, 1, v50))
  {
    v52 = sub_100005574(&qword_100499778);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v34, v35, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 10, v45);
LABEL_44:
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CC0DC);
}

uint64_t sub_1002CC0DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v6 = sub_100005574(&qword_10049C968);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_100005574((uint64_t *)&unk_10049F430);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = sub_100005574(&qword_1004999E0);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 253)
  {
    v16 = sub_100005574(&qword_10049C970);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[8];
    }
    else
    {
      v11 = type metadata accessor for ArtworkImage.ReusePolicy(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + a3[7] + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CC214);
}

uint64_t sub_1002CC214(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = sub_100005574(&qword_10049C968);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100005574((uint64_t *)&unk_10049F430);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = sub_100005574(&qword_1004999E0);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(_BYTE *)(a1 + a4[7] + 41) = a2 + 2;
          return result;
        }
        v17 = sub_100005574(&qword_10049C970);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1002CC334(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[6];

  sub_1002CA7E8(319, &qword_10049CCE8, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002CA7E8(319, &qword_10049CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1002CA7E8(319, (unint64_t *)&unk_10049CBA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        v12[3] = &unk_10039B8A0;
        sub_1002CA7E8(319, (unint64_t *)&unk_10049CCF8, type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v12[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(319);
          if (v11 <= 0x3F)
          {
            v12[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 6, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *_s11PlaceholderOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100005574(&qword_10049F810);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = sub_100005574(&qword_100499778);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t _s11PlaceholderOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_100005574(&qword_10049F810);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Playlist.Variant(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *_s11PlaceholderOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100005574(&qword_10049F810);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_100005574(&qword_100499778);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_100005574(&qword_10049F810);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_100005574(&qword_100499778) - 8);
      goto LABEL_8;
    }
    sub_100008758((uint64_t)a1, &qword_10049F810);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_100005574(&qword_100499778);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *_s11PlaceholderOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_100005574(&qword_10049F810);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_100005574(&qword_100499778);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = sub_100005574(&qword_10049F810);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(sub_100005574(&qword_100499778) - 8);
      goto LABEL_8;
    }
    sub_100008758((uint64_t)a1, &qword_10049F810);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = sub_100005574(&qword_100499778);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t _s11PlaceholderOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CCC28);
}

uint64_t sub_1002CCC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100005574(&qword_10049F810);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB)
    return v5 - 10;
  else
    return 0;
}

uint64_t _s11PlaceholderOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CCC84);
}

uint64_t sub_1002CCC84(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 10);
  else
    v5 = 0;
  v6 = sub_100005574(&qword_10049F810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1002CCCDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10049F810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
}

uint64_t sub_1002CCD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049F810);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 10, v4);
}

void sub_1002CCD5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_1002CA7E8(319, &qword_10049CDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 10);
}

uint64_t _s11PlaceholderO4ViewVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    v11 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100005574(&qword_10049C9B8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v18 = *((_QWORD *)v10 + 3);
        if (v18)
        {
          v19 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 3) = v18;
          *((_QWORD *)v9 + 4) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v9, v10);
        }
        else
        {
          v20 = v10[1];
          *v9 = *v10;
          v9[1] = v20;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        }
        v21 = (_OWORD *)((char *)v9 + 40);
        v22 = (_OWORD *)((char *)v10 + 40);
        v23 = *((_QWORD *)v10 + 8);
        if (v23)
        {
          v24 = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 8) = v23;
          *((_QWORD *)v9 + 9) = v24;
          (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
        }
        else
        {
          v25 = *(_OWORD *)((char *)v10 + 56);
          *v21 = *v22;
          *(_OWORD *)((char *)v9 + 56) = v25;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        }
        v26 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v26;
        v27 = (char *)v10 + v26;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_100005574(&qword_10049C9D0);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v17 = *(_QWORD *)v10;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain(v17);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v31 = *(int *)(a3 + 36);
    v32 = (uint64_t *)(a1 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
    {
      v35 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v33, v35);
      v36 = v32;
      v37 = v34;
      v38 = 1;
    }
    else
    {
      v39 = *v33;
      *v32 = *v33;
      swift_retain(v39);
      v36 = v32;
      v37 = v34;
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v36, v37, v38);
  }
  return a1;
}

double _s11PlaceholderO4ViewVwxx(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        sub_10000682C(v4);
      if (v4[8])
        sub_10000682C(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release(*v4);
  }
  v10 = (_QWORD *)(a1 + *(int *)(a2 + 36));
  v11 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v10).n128_u64[0];
  }
  return result;
}

uint64_t _s11PlaceholderO4ViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  v10 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = sub_100005574(&qword_10049C9B8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      v16 = *((_QWORD *)v9 + 3);
      if (v16)
      {
        v17 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = v16;
        *((_QWORD *)v8 + 4) = v17;
        (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v8, v9);
      }
      else
      {
        v18 = v9[1];
        *v8 = *v9;
        v8[1] = v18;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      }
      v19 = (_OWORD *)((char *)v8 + 40);
      v20 = (_OWORD *)((char *)v9 + 40);
      v21 = *((_QWORD *)v9 + 8);
      if (v21)
      {
        v22 = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 8) = v21;
        *((_QWORD *)v8 + 9) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
      }
      else
      {
        v23 = *(_OWORD *)((char *)v9 + 56);
        *v19 = *v20;
        *(_OWORD *)((char *)v8 + 56) = v23;
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
      }
      v24 = *(int *)(v11 + 24);
      __dst = (char *)v8 + v24;
      v25 = (char *)v9 + v24;
      v26 = type metadata accessor for BlendMode(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = sub_100005574(&qword_10049C9D0);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      v14 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v15 = *(_QWORD *)v9;
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  v29 = *(int *)(a3 + 36);
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
  {
    v33 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v31, v33);
    v34 = 1;
  }
  else
  {
    v35 = *v31;
    *v30 = *v31;
    swift_retain(v35);
    v34 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v32, v34);
  return a1;
}

_QWORD *_s11PlaceholderO4ViewVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (__int128 *)((char *)a2 + v6);
    sub_100008758((uint64_t)a1 + v6, &qword_100498E38);
    v9 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100005574(&qword_10049C9B8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        v15 = *((_QWORD *)v8 + 3);
        if (v15)
        {
          *((_QWORD *)v7 + 3) = v15;
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v15 - 8))(v7, v8);
        }
        else
        {
          v16 = *v8;
          v17 = v8[1];
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *v7 = v16;
          v7[1] = v17;
        }
        v18 = (_OWORD *)((char *)v7 + 40);
        v19 = (__int128 *)((char *)v8 + 40);
        v20 = *((_QWORD *)v8 + 8);
        if (v20)
        {
          *((_QWORD *)v7 + 8) = v20;
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v20 - 8))(v18, v19);
        }
        else
        {
          v21 = *v19;
          v22 = *(__int128 *)((char *)v8 + 56);
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *v18 = v21;
          *(_OWORD *)((char *)v7 + 56) = v22;
        }
        v23 = *(int *)(v10 + 24);
        __dst = (char *)v7 + v23;
        v24 = (char *)v8 + v23;
        v25 = type metadata accessor for BlendMode(0);
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          v27 = sub_100005574(&qword_10049C9D0);
          memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        v13 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      v14 = *(_QWORD *)v8;
      *(_QWORD *)v7 = *(_QWORD *)v8;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
    v28 = *(int *)(a3 + 36);
    v29 = (_QWORD *)((char *)a1 + v28);
    v30 = (_QWORD *)((char *)a2 + v28);
    sub_100008758((uint64_t)a1 + v28, (uint64_t *)&unk_100498E40);
    v31 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
      v33 = 1;
    }
    else
    {
      v34 = *v30;
      *v29 = *v30;
      swift_retain(v34);
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v31, v33);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = sub_100005574(&qword_10049C9B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      v15 = (char *)v8 + v14;
      v16 = type metadata accessor for BlendMode(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = sub_100005574(&qword_10049C9D0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = *(int *)(a3 + 36);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_100008758(a1 + v8, &qword_100498E38);
    v11 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100005574(&qword_10049C9B8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        v17 = (char *)v10 + v16;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100005574(&qword_10049C9D0);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v21 = *(int *)(a3 + 36);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_100008758(a1 + v21, (uint64_t *)&unk_100498E40);
    v24 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CDC48);
}

uint64_t sub_1002CDC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049CDC0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_100005574(&qword_10049CDC8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s11PlaceholderO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CDCFC);
}

uint64_t sub_1002CDCFC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049CDC0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_100005574(&qword_10049CDC8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1002CDDA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_10039B928;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_10039B940;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1002CDE60(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002CA7E8(319, (unint64_t *)&unk_10049CE40, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_1002CDE60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049CE38)
  {
    v2 = sub_100005600(&qword_10049C9B8);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049CE38);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v9);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v11 = (_OWORD *)(v4 + 40);
    v12 = a2 + 5;
    v13 = a2[8];
    if (v13)
    {
      v14 = a2[9];
      *(_QWORD *)(v4 + 64) = v13;
      *(_QWORD *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      v15 = *(_OWORD *)(a2 + 7);
      *v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v16 = *(int *)(a3 + 24);
    v17 = (void *)(v4 + v16);
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for BlendMode(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = sub_100005574(&qword_10049C9D0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwxx(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1[3])
    sub_10000682C(a1);
  if (a1[8])
    sub_10000682C(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v9 = (_OWORD *)(a1 + 40);
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 56);
    *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for BlendMode(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100005574(&qword_10049C9D0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_100020AF8((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    sub_10000682C((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v9)
    {
      sub_100020AF8((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
      goto LABEL_15;
    }
    sub_10000682C((_QWORD *)(a1 + 40));
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  v10 = *(__int128 *)((char *)a2 + 40);
  v11 = *(__int128 *)((char *)a2 + 56);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for BlendMode(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    v20 = sub_100005574(&qword_10049C9D0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = sub_100005574(&qword_10049C9D0);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  if (*(_QWORD *)(a1 + 24))
    sub_10000682C((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    sub_10000682C((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    v16 = sub_100005574(&qword_10049C9D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CE5D4);
}

uint64_t sub_1002CE5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100005574(&qword_10049C9D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CE66C);
}

uint64_t sub_1002CE66C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = sub_100005574(&qword_10049C9D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1002CE6E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "(";
  v4[1] = "(";
  sub_1002CA7E8(319, (unint64_t *)&unk_10049CEE8, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain(v6);
    v10 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100005574(&qword_10049C9B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = *((_QWORD *)v9 + 3);
        if (v18)
        {
          v19 = *((_QWORD *)v9 + 4);
          *((_QWORD *)v8 + 3) = v18;
          *((_QWORD *)v8 + 4) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v8, v9);
        }
        else
        {
          v20 = v9[1];
          *v8 = *v9;
          v8[1] = v20;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        }
        v21 = (_OWORD *)((char *)v8 + 40);
        v22 = (_OWORD *)((char *)v9 + 40);
        v23 = *((_QWORD *)v9 + 8);
        if (v23)
        {
          v24 = *((_QWORD *)v9 + 9);
          *((_QWORD *)v8 + 8) = v23;
          *((_QWORD *)v8 + 9) = v24;
          (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v21, v22);
        }
        else
        {
          v25 = *(_OWORD *)((char *)v9 + 56);
          *v21 = *v22;
          *(_OWORD *)((char *)v8 + 56) = v25;
          *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        }
        v26 = *(int *)(v11 + 24);
        v27 = (char *)v8 + v26;
        v28 = (char *)v9 + v26;
        v29 = type metadata accessor for BlendMode(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = sub_100005574(&qword_10049C9D0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v15 = v8;
      v16 = v10;
      v17 = 1;
    }
    else
    {
      v14 = *(_QWORD *)v9;
      *(_QWORD *)v8 = *(_QWORD *)v9;
      swift_retain(v14);
      v15 = v8;
      v16 = v10;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

void destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        sub_10000682C(v4);
      if (v4[8])
        sub_10000682C(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release(*v4);
  }
}

_QWORD *initializeWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain(v4);
  v8 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = sub_100005574(&qword_10049C9B8);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v12 = 1;
    }
    else
    {
      v14 = *((_QWORD *)v7 + 3);
      if (v14)
      {
        v15 = *((_QWORD *)v7 + 4);
        *((_QWORD *)v6 + 3) = v14;
        *((_QWORD *)v6 + 4) = v15;
        (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v6, v7);
      }
      else
      {
        v16 = v7[1];
        *v6 = *v7;
        v6[1] = v16;
        *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
      }
      v17 = (_OWORD *)((char *)v6 + 40);
      v18 = (_OWORD *)((char *)v7 + 40);
      v19 = *((_QWORD *)v7 + 8);
      if (v19)
      {
        v20 = *((_QWORD *)v7 + 9);
        *((_QWORD *)v6 + 8) = v19;
        *((_QWORD *)v6 + 9) = v20;
        (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
      }
      else
      {
        v21 = *(_OWORD *)((char *)v7 + 56);
        *v17 = *v18;
        *(_OWORD *)((char *)v6 + 56) = v21;
        *((_QWORD *)v6 + 9) = *((_QWORD *)v7 + 9);
      }
      v22 = *(int *)(v9 + 24);
      v23 = (char *)v6 + v22;
      v24 = (char *)v7 + v22;
      v25 = type metadata accessor for BlendMode(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = sub_100005574(&qword_10049C9D0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v12 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    v13 = *(_QWORD *)v7;
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v8, v12);
  return a1;
}

_QWORD *assignWithCopy for PlaceholderStyleModifier(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (__int128 *)((char *)a2 + v8);
    sub_100008758((uint64_t)a1 + v8, &qword_100498E38);
    v11 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = sub_100005574(&qword_10049C9B8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v17 = *((_QWORD *)v10 + 3);
        if (v17)
        {
          *((_QWORD *)v9 + 3) = v17;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v17 - 8))(v9, v10);
        }
        else
        {
          v18 = *v10;
          v19 = v10[1];
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *v9 = v18;
          v9[1] = v19;
        }
        v20 = (_OWORD *)((char *)v9 + 40);
        v21 = (__int128 *)((char *)v10 + 40);
        v22 = *((_QWORD *)v10 + 8);
        if (v22)
        {
          *((_QWORD *)v9 + 8) = v22;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v22 - 8))(v20, v21);
        }
        else
        {
          v23 = *v21;
          v24 = *(__int128 *)((char *)v10 + 56);
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          *v20 = v23;
          *(_OWORD *)((char *)v9 + 56) = v24;
        }
        v25 = *(int *)(v12 + 24);
        v26 = (char *)v9 + v25;
        v27 = (char *)v10 + v25;
        v28 = type metadata accessor for BlendMode(0);
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          v30 = sub_100005574(&qword_10049C9D0);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v16 = *(_QWORD *)v10;
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = sub_100005574(&qword_100498E38);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100005574(&qword_10049C9B8);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = v6[1];
      *v5 = *v6;
      v5[1] = v11;
      *((_QWORD *)v5 + 4) = *((_QWORD *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((_QWORD *)v5 + 9) = *((_QWORD *)v6 + 9);
      v12 = *(int *)(v8 + 24);
      v13 = (char *)v5 + v12;
      v14 = (char *)v6 + v12;
      v15 = type metadata accessor for BlendMode(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = sub_100005574(&qword_10049C9D0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for PlaceholderStyleModifier(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v6);
  if ((_OWORD *)a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)(a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    sub_100008758(a1 + v7, &qword_100498E38);
    v10 = sub_100005574(&qword_100498E38);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = sub_100005574(&qword_10049C9B8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v14 = v9[1];
        *v8 = *v9;
        v8[1] = v14;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
        v15 = *(int *)(v11 + 24);
        v16 = (char *)v8 + v15;
        v17 = (char *)v9 + v15;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100005574(&qword_10049C9D0);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CF268);
}

uint64_t sub_1002CF268(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049CDC0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CF2F4);
}

char *sub_1002CF2F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10049CDC0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1002CF36C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for () + 64;
  sub_1002CDE60(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1002CF3E4()
{
  _QWORD v1[2];

  v1[0] = sub_100005600((uint64_t *)&unk_10049E7C0);
  v1[1] = sub_1002C6818();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
}

unint64_t sub_1002CF434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049CFB0;
  if (!qword_10049CFB0)
  {
    v1 = sub_100005600(&qword_10049C988);
    sub_1002CF4B8();
    sub_10002FFB8(&qword_10049CFC8, &qword_10049C9A8, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049CFB0);
  }
  return result;
}

unint64_t sub_1002CF4B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049CFB8;
  if (!qword_10049CFB8)
  {
    v1 = sub_100005600(&qword_10049C980);
    v2[0] = sub_100005600(&qword_10049C990);
    v2[1] = sub_1002C86C4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_10002FFB8(&qword_10049CFC0, &qword_10049C9A0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049CFB8);
  }
  return result;
}

unint64_t sub_1002CF56C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049CFD0;
  if (!qword_10049CFD0)
  {
    v1 = sub_100005600(&qword_10049C9C8);
    sub_1002CF5F0();
    sub_10002FFB8(&qword_10049CFF8, &qword_10049C9C0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049CFD0);
  }
  return result;
}

unint64_t sub_1002CF5F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049CFD8;
  if (!qword_10049CFD8)
  {
    v1 = sub_100005600(&qword_10049CFE0);
    sub_10002FFB8(&qword_10049CFE8, &qword_10049CFF0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049CFD8);
  }
  return result;
}

unint64_t sub_1002CF678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D000;
  if (!qword_10049D000)
  {
    v1 = sub_100005600(&qword_10049CB20);
    sub_10002FFB8(&qword_10049D008, &qword_10049CB30, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10002FFB8(&qword_10049D010, &qword_10049CB28, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D000);
  }
  return result;
}

uint64_t sub_1002CF714(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for PlaceholderStyleModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100006924(&qword_10049D018, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

uint64_t _s11PlaceholderO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1002CF7E0 + 4 * byte_10039B5BC[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1002CF814 + 4 * byte_10039B5B7[v4]))();
}

uint64_t sub_1002CF814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CF81C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002CF824);
  return result;
}

uint64_t sub_1002CF830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002CF838);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1002CF83C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002CF844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s11PlaceholderO10CodingKeysOMa()
{
  return &_s11PlaceholderO10CodingKeysON;
}

ValueMetadata *_s11PlaceholderO15MusicCodingKeysOMa()
{
  return &_s11PlaceholderO15MusicCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20NowPlayingCodingKeysOMa()
{
  return &_s11PlaceholderO20NowPlayingCodingKeysON;
}

ValueMetadata *_s11PlaceholderO21NewPlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO21NewPlaylistCodingKeysON;
}

uint64_t _s11PlaceholderO18PlaylistCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002CF8D0 + 4 * byte_10039B5C1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002CF8F0 + 4 * byte_10039B5C6[v4]))();
}

_BYTE *sub_1002CF8D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002CF8F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002CF8F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002CF900(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002CF908(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002CF910(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s11PlaceholderO18PlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO18PlaylistCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MusicVideoCodingKeysOMa()
{
  return &_s11PlaceholderO20MusicVideoCodingKeysON;
}

ValueMetadata *_s11PlaceholderO12TvCodingKeysOMa()
{
  return &_s11PlaceholderO12TvCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MicrophoneCodingKeysOMa()
{
  return &_s11PlaceholderO20MicrophoneCodingKeysON;
}

ValueMetadata *_s11PlaceholderO16PersonCodingKeysOMa()
{
  return &_s11PlaceholderO16PersonCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15RadioCodingKeysOMa()
{
  return &_s11PlaceholderO15RadioCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15GenreCodingKeysOMa()
{
  return &_s11PlaceholderO15GenreCodingKeysON;
}

ValueMetadata *_s11PlaceholderO18ComposerCodingKeysOMa()
{
  return &_s11PlaceholderO18ComposerCodingKeysON;
}

ValueMetadata *_s19PlaceholderStyleKeyVMa()
{
  return &_s19PlaceholderStyleKeyVN;
}

unint64_t sub_1002CF9B0()
{
  unint64_t result;

  result = qword_10049D020;
  if (!qword_10049D020)
  {
    result = swift_getWitnessTable(&unk_10039BDA4, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D020);
  }
  return result;
}

unint64_t sub_1002CF9F8()
{
  unint64_t result;

  result = qword_10049D028;
  if (!qword_10049D028)
  {
    result = swift_getWitnessTable(&unk_10039BF4C, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D028);
  }
  return result;
}

unint64_t sub_1002CFA40()
{
  unint64_t result;

  result = qword_10049D030;
  if (!qword_10049D030)
  {
    result = swift_getWitnessTable(&unk_10039BE6C, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D030);
  }
  return result;
}

unint64_t sub_1002CFA88()
{
  unint64_t result;

  result = qword_10049D038;
  if (!qword_10049D038)
  {
    result = swift_getWitnessTable(&unk_10039BE94, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D038);
  }
  return result;
}

unint64_t sub_1002CFAD0()
{
  unint64_t result;

  result = qword_10049D040;
  if (!qword_10049D040)
  {
    result = swift_getWitnessTable(&unk_10039BE1C, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D040);
  }
  return result;
}

unint64_t sub_1002CFB18()
{
  unint64_t result;

  result = qword_10049D048;
  if (!qword_10049D048)
  {
    result = swift_getWitnessTable(&unk_10039BE44, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D048);
  }
  return result;
}

unint64_t sub_1002CFB60()
{
  unint64_t result;

  result = qword_10049D050;
  if (!qword_10049D050)
  {
    result = swift_getWitnessTable(&unk_10039BDCC, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D050);
  }
  return result;
}

unint64_t sub_1002CFBA8()
{
  unint64_t result;

  result = qword_10049D058;
  if (!qword_10049D058)
  {
    result = swift_getWitnessTable(&unk_10039BDF4, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D058);
  }
  return result;
}

unint64_t sub_1002CFBF0()
{
  unint64_t result;

  result = qword_10049D060;
  if (!qword_10049D060)
  {
    result = swift_getWitnessTable(&unk_10039BD14, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D060);
  }
  return result;
}

unint64_t sub_1002CFC38()
{
  unint64_t result;

  result = qword_10049D068;
  if (!qword_10049D068)
  {
    result = swift_getWitnessTable(&unk_10039BD3C, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D068);
  }
  return result;
}

unint64_t sub_1002CFC80()
{
  unint64_t result;

  result = qword_10049D070;
  if (!qword_10049D070)
  {
    result = swift_getWitnessTable(&unk_10039BCC4, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D070);
  }
  return result;
}

unint64_t sub_1002CFCC8()
{
  unint64_t result;

  result = qword_10049D078;
  if (!qword_10049D078)
  {
    result = swift_getWitnessTable(&unk_10039BCEC, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D078);
  }
  return result;
}

unint64_t sub_1002CFD10()
{
  unint64_t result;

  result = qword_10049D080;
  if (!qword_10049D080)
  {
    result = swift_getWitnessTable(&unk_10039BC74, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D080);
  }
  return result;
}

unint64_t sub_1002CFD58()
{
  unint64_t result;

  result = qword_10049D088;
  if (!qword_10049D088)
  {
    result = swift_getWitnessTable(&unk_10039BC9C, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D088);
  }
  return result;
}

unint64_t sub_1002CFDA0()
{
  unint64_t result;

  result = qword_10049D090;
  if (!qword_10049D090)
  {
    result = swift_getWitnessTable(&unk_10039BC24, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D090);
  }
  return result;
}

unint64_t sub_1002CFDE8()
{
  unint64_t result;

  result = qword_10049D098;
  if (!qword_10049D098)
  {
    result = swift_getWitnessTable(&unk_10039BC4C, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D098);
  }
  return result;
}

unint64_t sub_1002CFE30()
{
  unint64_t result;

  result = qword_10049D0A0;
  if (!qword_10049D0A0)
  {
    result = swift_getWitnessTable(&unk_10039BBD4, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0A0);
  }
  return result;
}

unint64_t sub_1002CFE78()
{
  unint64_t result;

  result = qword_10049D0A8;
  if (!qword_10049D0A8)
  {
    result = swift_getWitnessTable(&unk_10039BBFC, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0A8);
  }
  return result;
}

unint64_t sub_1002CFEC0()
{
  unint64_t result;

  result = qword_10049D0B0;
  if (!qword_10049D0B0)
  {
    result = swift_getWitnessTable(&unk_10039BB84, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0B0);
  }
  return result;
}

unint64_t sub_1002CFF08()
{
  unint64_t result;

  result = qword_10049D0B8;
  if (!qword_10049D0B8)
  {
    result = swift_getWitnessTable(&unk_10039BBAC, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0B8);
  }
  return result;
}

unint64_t sub_1002CFF50()
{
  unint64_t result;

  result = qword_10049D0C0;
  if (!qword_10049D0C0)
  {
    result = swift_getWitnessTable(&unk_10039BB34, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0C0);
  }
  return result;
}

unint64_t sub_1002CFF98()
{
  unint64_t result;

  result = qword_10049D0C8;
  if (!qword_10049D0C8)
  {
    result = swift_getWitnessTable(&unk_10039BB5C, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0C8);
  }
  return result;
}

unint64_t sub_1002CFFE0()
{
  unint64_t result;

  result = qword_10049D0D0;
  if (!qword_10049D0D0)
  {
    result = swift_getWitnessTable(&unk_10039BAE4, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0D0);
  }
  return result;
}

unint64_t sub_1002D0028()
{
  unint64_t result;

  result = qword_10049D0D8;
  if (!qword_10049D0D8)
  {
    result = swift_getWitnessTable(&unk_10039BB0C, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0D8);
  }
  return result;
}

unint64_t sub_1002D0070()
{
  unint64_t result;

  result = qword_10049D0E0;
  if (!qword_10049D0E0)
  {
    result = swift_getWitnessTable(&unk_10039BEBC, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0E0);
  }
  return result;
}

unint64_t sub_1002D00B8()
{
  unint64_t result;

  result = qword_10049D0E8;
  if (!qword_10049D0E8)
  {
    result = swift_getWitnessTable(&unk_10039BEE4, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10049D0E8);
  }
  return result;
}

uint64_t sub_1002D00FC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  if (a1 == 0x636973756DLL && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x636973756DLL, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL)
  {
    v7 = 0xEA0000000000676ELL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6979616C50776F6ELL, 0xEA0000000000676ELL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369)
  {
    v8 = 0xEB00000000747369;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6C79616C5077656ELL, 0xEB00000000747369, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000)
  {
    v9 = 0xE800000000000000;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C70, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65)
  {
    v10 = 0xEA00000000006F65;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x646956636973756DLL, 0xEA00000000006F65, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    v11 = 0xE200000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(30324, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL)
  {
    v12 = 0xEA0000000000656ELL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F68706F7263696DLL, 0xEA0000000000656ELL, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000)
  {
    v13 = 0xE600000000000000;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73726570, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v13 = a2;
    goto LABEL_50;
  }
  if (a1 == 0x6F69646172 && a2 == 0xE500000000000000)
  {
    v14 = 0xE500000000000000;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F69646172, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v14 = a2;
    goto LABEL_56;
  }
  if (a1 == 0x65726E6567 && a2 == 0xE500000000000000)
  {
    v15 = 0xE500000000000000;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65726E6567, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v15 = a2;
    goto LABEL_62;
  }
  if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 10;
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265736F706D6F63, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v16 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

double sub_1002D0564(uint64_t a1, char a2)
{
  double result;

  if ((a2 & 1) == 0)
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1002D0570(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  double result;

  if ((a4 & 1) != 0)
    return sub_1002D057C(a1, a2);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

double sub_1002D057C(uint64_t a1, uint64_t a2)
{
  double result;

  if (a2)
  {
    swift_release(a2);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

uint64_t sub_1002D05AC(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    swift_retain(result);
    return swift_retain(a2);
  }
  return result;
}

double sub_1002D05D8(uint64_t a1, uint64_t a2, char a3)
{
  double result;

  if ((a3 & 1) == 0)
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

unint64_t sub_1002D05EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D110;
  if (!qword_10049D110)
  {
    v1 = sub_100005600(&qword_10049D108);
    sub_1002D0670();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D110);
  }
  return result;
}

unint64_t sub_1002D0670()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D118;
  if (!qword_10049D118)
  {
    v1 = sub_100005600(&qword_10049D120);
    sub_10002FFB8(&qword_10049D128, &qword_10049D130, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D118);
  }
  return result;
}

uint64_t sub_1002D06F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = type metadata accessor for ArtworkImage.Placeholder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (int *)type metadata accessor for ArtworkMotionView(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v31 = (v4 + v5 + v8) & ~v8;
  v29 = *(_QWORD *)(v7 + 64);
  v9 = v0 + v4;
  v10 = sub_100005574(&qword_10049F810);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v28(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v30 = v0;
  v13 = v0 + v31;
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v0 + v31, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = v13 + v6[5];
  v17 = type metadata accessor for Artwork(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  v19 = v13 + v6[6];
  v20 = type metadata accessor for Artwork.CropStyle(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  v22 = v13 + v6[8];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v22, 1, v1) && !v28(v22, 10, v10))
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  v25 = v13 + v6[9];
  v26 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
  return swift_deallocObject(v30, v31 + v29, v3 | v8 | 7);
}

uint64_t sub_1002D0964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_1002C0E0C(v1 + ((v4 + v5 + v6) & ~v6), a1);
}

uint64_t sub_1002D09DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_100005574(&qword_10049F810);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 42, v2 | 7);
}

uint64_t sub_1002D0AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  return sub_1002BFD34((uint64_t *)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if ((a1 & 1) != 0)
    return 4;
  else
    return 2;
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  _QWORD v10[5];

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  v10[3] = type metadata accessor for TintShapeStyle(0);
  v10[4] = &protocol witness table for TintShapeStyle;
  sub_1000207D4(v10);
  TintShapeStyle.init()();
  v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  v7 = v6;
  sub_1002D30A4(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(_QWORD *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;

  if (a2 != 2)
  {
    if (a2 == 3)
    {
      sub_1000244B0((uint64_t)(a1 + 1), (uint64_t)v76);
      v31 = v77;
      v73 = v78;
      v72 = sub_10000ABC8(v76, v77);
      v32 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v34 = *v32;
      v33 = v32[1];
      swift_bridgeObjectRetain();
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v35);

      if (v36)
      {
        v37 = objc_msgSend(v36, "imageWithConfiguration:", *a1);

        v38 = objc_msgSend(v37, "imageWithRenderingMode:", 2);
        v39 = Image.init(uiImage:)(v38);
        v40 = Text.init(_:)(v39);
        v42 = v41;
        v44 = v43 & 1;
        v46 = static Text.+ infix(_:_:)(v34, v33, 0, _swiftEmptyArrayStorage, v40, v41, v44, v45);
        v48 = v47;
        v50 = v49;
        v52 = v51 & 1;
        sub_10003B4D0(v40, v42, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v53 = Text.foregroundStyle<A>(_:)(v72, v46, v48, v52, v50, v31, v73);
        v55 = v54;
        v57 = v56;
        LOBYTE(v44) = v58 & 1;
        sub_10003B4D0(v46, v48, v52);
        swift_bridgeObjectRelease();
        v59 = AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        v60 = *v59;
        v61 = v59[1];
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)(v60, v61, v53, v55, v44, v57);
        swift_bridgeObjectRelease();
        sub_10003B4D0(v53, v55, v44);
        swift_bridgeObjectRelease();
        sub_10000682C(v76);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      v2 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v3 = *v2;
      v4 = v2[1];
      swift_bridgeObjectRetain();
      v5 = Image.init(_internalSystemName:)(0x6461622E3130336ELL, 0xEF79616C702E6567);
      v6 = Text.init(_:)(v5);
      v8 = v7;
      v10 = v9 & 1;
      v12 = static Text.+ infix(_:_:)(v3, v4, 0, _swiftEmptyArrayStorage, v6, v7, v10, v11);
      v14 = v13;
      v16 = v15;
      v18 = v17 & 1;
      sub_10003B4D0(v6, v8, v10);
      swift_bridgeObjectRelease();
      v19 = swift_bridgeObjectRelease();
      LODWORD(v76[0]) = static HierarchicalShapeStyle.secondary.getter(v19);
      v20 = Text.foregroundStyle<A>(_:)(v76, v12, v14, v18, v16, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v22 = v21;
      v24 = v23;
      v26 = v25 & 1;
      sub_10003B4D0(v12, v14, v18);
      swift_bridgeObjectRelease();
      v27 = AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      v28 = *v27;
      v29 = v27[1];
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)(v28, v29, v20, v22, v26, v24);
      swift_bridgeObjectRelease();
      sub_10003B4D0(v20, v22, v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = a2 & 1;
      v63 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      v65 = *v63;
      v64 = v63[1];
      v74 = v65;
      v75 = v64;
      swift_bridgeObjectRetain();
      v66 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess(v66 + 32, v76, 0, 0);
      v67 = *(_QWORD *)(v66 + 32);
      v68 = *(void **)(v66 + 40);
      swift_bridgeObjectRetain();
      v69._countAndFlagsBits = v67;
      v69._object = v68;
      String.append(_:)(v69);
      v70 = swift_bridgeObjectRelease();
      v71 = v74;
      LODWORD(v74) = static HierarchicalShapeStyle.secondary.getter(v70);
      Text.playableForegroundStyle<A>(_:isPlayable:)((int *)&v74, v62, v71, v75, 0, (uint64_t)_swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(_QWORD *a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleLargeTitle);
  objc_msgSend(v2, "scaledValueForValue:", 10.0);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:", 7, v4);
  a1[4] = type metadata accessor for TintShapeStyle(0);
  a1[5] = &protocol witness table for TintShapeStyle;
  sub_1000207D4(a1 + 1);
  result = TintShapeStyle.init()();
  *a1 = v5;
  return result;
}

uint64_t sub_1002D1184()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002D11B0 + 4 * byte_10039C3A0[*v0]))(0x7974706D65, 0xE500000000000000);
}

uint64_t sub_1002D11B0()
{
  return 0x746963696C707865;
}

uint64_t sub_1002D11C8()
{
  return 0x657469726F766166;
}

uint64_t sub_1002D11E0()
{
  return 0x76697372656D6D69;
}

uint64_t sub_1002D11FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1002D322C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D1220(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D30D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D1248(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D30D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D1270(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D31E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D1298(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D31E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D12C0()
{
  return 0x626179616C507369;
}

uint64_t sub_1002D12DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    result = swift_bridgeObjectRelease(0xEA0000000000656CLL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x626179616C507369, 0xEA0000000000656CLL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1002D137C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D31A4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D13A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D31A4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D13CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D3160();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D13F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D3160();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D141C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D311C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D1444(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1002D311C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(_QWORD *a1, unsigned __int8 a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v3 = a2;
  v4 = sub_100005574(&qword_10049D198);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin();
  v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_100005574(&qword_10049D1A0);
  v33 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100005574(&qword_10049D1A8);
  v32 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049D1B0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049D1B8);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin();
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_10000ABC8(a1, v16);
  v18 = sub_1002D30D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v18, v16, v17);
  switch(v3)
  {
    case 2:
      v41 = 0;
      v22 = sub_1002D31E8();
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.EmptyCodingKeys, &v41, v40, &type metadata for TextBadge.EmptyCodingKeys, v22);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 3:
      v43 = 2;
      v23 = sub_1002D3160();
      v24 = v31;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.FavoriteCodingKeys, &v43, v40, &type metadata for TextBadge.FavoriteCodingKeys, v23);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
    case 4:
      v44 = 3;
      v19 = sub_1002D311C();
      v20 = v36;
      v21 = v40;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ImmersiveCodingKeys, &v44, v40, &type metadata for TextBadge.ImmersiveCodingKeys, v19);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v21);
  }
  v42 = 1;
  v26 = sub_1002D31A4();
  v27 = v40;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for TextBadge.ExplicitCodingKeys, &v42, v40, &type metadata for TextBadge.ExplicitCodingKeys, v26);
  v28 = v34;
  KeyedEncodingContainer.encode(_:forKey:)(v3 & 1, v29, v34);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v27);
}

char *TextBadge.init(from:)(_QWORD *a1)
{
  return sub_1002D33E8(a1);
}

char *sub_1002D17C8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1002D33E8(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1002D17F0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v3 = v2;
  v4 = type metadata accessor for Logger(0, a2);
  v59 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  __chkstk_darwin();
  v58 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Artist(0);
  v6 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin();
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Playlist(0);
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  __chkstk_darwin();
  v64 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Song(0);
  v62 = *(_QWORD *)(v11 - 8);
  v63 = v11;
  __chkstk_darwin();
  v61 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v13 - 8);
  v69 = v13;
  __chkstk_darwin();
  v67 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D1E8);
  __chkstk_darwin();
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Album(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin();
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for GenericMusicItem(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v57 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v25 = (char *)&v56 - v24;
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v56 = v3;
  v27 = v3;
  v28 = v26;
  v26((char *)&v56 - v24, v27, v21);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v29 != enum case for GenericMusicItem.album(_:))
  {
    if (v29 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      v33 = v25;
      v34 = v70;
      v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v33, v70);
      Artist.favoriteStatus.getter(v35);
      v36 = type metadata accessor for MusicFavoriteStatus(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v16, 0, 1, v36);
      v32 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v16);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v34);
      return v32;
    }
    if (v29 == enum case for GenericMusicItem.composer(_:)
      || v29 == enum case for GenericMusicItem.creditArtist(_:)
      || v29 == enum case for GenericMusicItem.curator(_:)
      || v29 == enum case for GenericMusicItem.editorialItem(_:)
      || v29 == enum case for GenericMusicItem.genre(_:)
      || v29 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_11;
    }
    if (v29 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      v38 = v67;
      v39 = v68;
      v40 = v69;
      v41 = (*(uint64_t (**)(char *, char *, uint64_t))(v68 + 32))(v67, v25, v69);
      MusicVideo.favoriteStatus.getter(v41);
    }
    else
    {
      if (v29 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v29 != enum case for GenericMusicItem.radioShow(_:)
          && v29 != enum case for GenericMusicItem.recordLabel(_:)
          && v29 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v29 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
            v38 = v61;
            v39 = v62;
            v40 = v63;
            v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v62 + 32))(v61, v25, v63);
            Song.favoriteStatus.getter(v44);
            goto LABEL_18;
          }
          if (v29 != enum case for GenericMusicItem.station(_:)
            && v29 != enum case for GenericMusicItem.tvEpisode(_:)
            && v29 != enum case for GenericMusicItem.tvSeason(_:)
            && v29 != enum case for GenericMusicItem.tvShow(_:)
            && v29 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v29 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v29 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
              swift_bridgeObjectRelease();
            }
            else
            {
              v45 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v45, v60);
              v46 = v28(v57, v56, v21);
              v47 = Logger.logObject.getter(v46);
              v48 = static os_log_type_t.fault.getter();
              if (os_log_type_enabled(v47, v48))
              {
                v49 = swift_slowAlloc(22, -1);
                v70 = swift_slowAlloc(64, -1);
                v71 = v70;
                *(_DWORD *)v49 = 136315394;
                *(_QWORD *)(v49 + 4) = sub_100249A1C((char *)0xD000000000000010, (char *)0x80000001003B7EE0, &v71);
                *(_WORD *)(v49 + 12) = 2080;
                v50 = sub_100006924((unint64_t *)&qword_1004999E8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                v51 = v57;
                v52 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v21, v50);
                *(_QWORD *)(v49 + 14) = sub_100249A1C(v52, v53, &v71);
                swift_bridgeObjectRelease();
                v54 = *(void (**)(char *, uint64_t))(v22 + 8);
                v54(v51, v21);
                _os_log_impl((void *)&_mh_execute_header, v47, v48, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v49, 0x16u);
                v55 = v70;
                swift_arrayDestroy(v70, 2, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v55, -1, -1);
                swift_slowDealloc(v49, -1, -1);
              }
              else
              {
                v54 = *(void (**)(char *, uint64_t))(v22 + 8);
                v54(v57, v21);
              }

              (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
              v54(v25, v21);
            }
            return 2;
          }
        }
LABEL_11:
        (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
      v38 = v64;
      v39 = v65;
      v40 = v66;
      v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v65 + 32))(v64, v25, v66);
      Playlist.favoriteStatus.getter(v42);
    }
LABEL_18:
    v43 = type metadata accessor for MusicFavoriteStatus(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v16, 0, 1, v43);
    v32 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
    return v32;
  }
  (*(void (**)(char *, uint64_t))(v22 + 96))(v25, v21);
  v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v25, v17);
  Album.favoriteStatus.getter(v30);
  v31 = type metadata accessor for MusicFavoriteStatus(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v16, 0, 1, v31);
  v32 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v32;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  int v113;
  uint64_t v114;

  v3 = v2;
  v113 = a1;
  v86 = type metadata accessor for Logger(0, a2);
  v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin();
  v84 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TVSeason(0);
  v94 = *(_QWORD *)(v5 - 8);
  v95 = v5;
  __chkstk_darwin();
  v93 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MusicMovie(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  __chkstk_darwin();
  v109 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for TVShow(0);
  v91 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin();
  v90 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D1F0);
  __chkstk_darwin();
  v112 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TVEpisode(0);
  v97 = *(_QWORD *)(v11 - 8);
  v98 = v11;
  __chkstk_darwin();
  v96 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for UploadedVideo(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin();
  v81 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for UploadedAudio(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v87 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Playlist(0);
  v106 = *(_QWORD *)(v15 - 8);
  v107 = v15;
  __chkstk_darwin();
  v105 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Station(0);
  v100 = *(_QWORD *)(v17 - 8);
  v101 = v17;
  __chkstk_darwin();
  v99 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Song(0);
  v103 = *(_QWORD *)(v19 - 8);
  v104 = v19;
  __chkstk_darwin();
  v102 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for MusicVideo(0);
  v21 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin();
  v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D1F8);
  __chkstk_darwin();
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for Album(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v29 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(type metadata accessor for GenericMusicItem(0) - 8);
  __chkstk_darwin();
  v80 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v33 = (char *)&v78 - v32;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v79 = v3;
  v35 = v3;
  v37 = v36;
  v34((char *)&v78 - v32, v35, v36);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v33, v37);
  if (v38 != enum case for GenericMusicItem.album(_:))
  {
    v41 = v113;
    if (v38 == enum case for GenericMusicItem.artist(_:)
      || v38 == enum case for GenericMusicItem.composer(_:)
      || v38 == enum case for GenericMusicItem.creditArtist(_:)
      || v38 == enum case for GenericMusicItem.curator(_:)
      || v38 == enum case for GenericMusicItem.editorialItem(_:)
      || v38 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v38 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
      v43 = v109;
      v44 = v110;
      v45 = v111;
      v46 = (*(uint64_t (**)(char *, char *, uint64_t))(v110 + 32))(v109, v33, v111);
      v47 = (uint64_t)v112;
      MusicMovie.contentRating.getter(v46);
LABEL_14:
      v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v47, v41 & 1);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
      return v40;
    }
    v48 = v113;
    if (v38 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
      v49 = v108;
      v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v23, v33, v108);
      MusicVideo.contentRating.getter(v50);
      v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v25, v48 & 1);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v49);
      return v40;
    }
    v51 = (uint64_t)v25;
    if (v38 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
      v52 = v105;
      v53 = v106;
      v54 = v107;
      v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v106 + 32))(v105, v33, v107);
      Playlist.contentRating.getter(v55);
    }
    else
    {
      if (v38 == enum case for GenericMusicItem.radioShow(_:)
        || v38 == enum case for GenericMusicItem.recordLabel(_:)
        || v38 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v37);
        return 2;
      }
      if (v38 != enum case for GenericMusicItem.song(_:))
      {
        v57 = v37;
        if (v38 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
          v58 = v99;
          v59 = v100;
          v60 = v101;
          v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v100 + 32))(v99, v33, v101);
          Station.contentRating.getter(v61);
        }
        else
        {
          if (v38 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
            v43 = v96;
            v44 = v97;
            v45 = v98;
            v62 = (*(uint64_t (**)(char *, char *, uint64_t))(v97 + 32))(v96, v33, v98);
            v47 = (uint64_t)v112;
            TVEpisode.contentRating.getter(v62);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
            v44 = v94;
            v45 = v95;
            v43 = v93;
            v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v94 + 32))(v93, v33, v95);
            v47 = (uint64_t)v112;
            TVSeason.contentRating.getter(v63);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
            v44 = v91;
            v43 = v90;
            v45 = v92;
            v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v91 + 32))(v90, v33, v92);
            v47 = (uint64_t)v112;
            TVShow.contentRating.getter(v64);
            goto LABEL_14;
          }
          if (v38 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
            v59 = v88;
            v58 = v87;
            v60 = v89;
            v65 = (*(uint64_t (**)(char *, char *, uint64_t))(v88 + 32))(v87, v33, v89);
            UploadedAudio.contentRating.getter(v65);
          }
          else
          {
            if (v38 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v38 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
                swift_bridgeObjectRelease();
              }
              else
              {
                v67 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v67, v86);
                v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v80, v79, v37);
                v69 = Logger.logObject.getter(v68);
                v70 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v69, v70))
                {
                  v71 = swift_slowAlloc(22, -1);
                  v72 = swift_slowAlloc(64, -1);
                  v114 = v72;
                  *(_DWORD *)v71 = 136315394;
                  *(_QWORD *)(v71 + 4) = sub_100249A1C((char *)0xD000000000000010, (char *)0x80000001003B7EE0, &v114);
                  *(_WORD *)(v71 + 12) = 2080;
                  v73 = sub_100006924((unint64_t *)&qword_1004999E8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                  v74 = v80;
                  v75 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v57, v73);
                  *(_QWORD *)(v71 + 14) = sub_100249A1C(v75, v76, &v114);
                  swift_bridgeObjectRelease();
                  v77 = *(void (**)(char *, uint64_t))(v30 + 8);
                  v77(v74, v57);
                  _os_log_impl((void *)&_mh_execute_header, v69, v70, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v71, 0x16u);
                  swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v72, -1, -1);
                  swift_slowDealloc(v71, -1, -1);
                }
                else
                {
                  v77 = *(void (**)(char *, uint64_t))(v30 + 8);
                  v77(v80, v37);
                }

                (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
                v77(v33, v57);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
            v59 = v82;
            v58 = v81;
            v60 = v83;
            v66 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v81, v33, v83);
            UploadedVideo.contentRating.getter(v66);
          }
        }
        v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v25, v41 & 1);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
        return v40;
      }
      (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
      v52 = v102;
      v53 = v103;
      v54 = v104;
      v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v103 + 32))(v102, v33, v104);
      Song.contentRating.getter(v56);
    }
    v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(v51, v48 & 1);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
    return v40;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v33, v37);
  v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v27 + 32))(v29, v33, v26);
  Album.contentRating.getter(v39);
  v40 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v25, v113 & 1);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  return v40;
}

uint64_t FavoriteBadgeConfiguration.foregroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000244B0(v1 + 8, a1);
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_1000137C8(a2, (uint64_t)(a3 + 1));
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = type metadata accessor for ContentRating(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049D288);
  __chkstk_darwin();
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D1F8);
  __chkstk_darwin();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v21 - v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))((char *)&v21 - v13, enum case for ContentRating.explicit(_:), v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  v15 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100014A7C(a1, (uint64_t)v10, &qword_10049D1F8);
  sub_100014A7C((uint64_t)v14, v15, &qword_10049D1F8);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v10, 1, v4) == 1)
  {
    sub_100008758(a1, &qword_10049D1F8);
    sub_100008758((uint64_t)v14, &qword_10049D1F8);
    if (v16(v15, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v10, &qword_10049D1F8);
      return a2 & 1;
    }
    goto LABEL_6;
  }
  sub_100014A7C((uint64_t)v10, (uint64_t)v12, &qword_10049D1F8);
  if (v16(v15, 1, v4) == 1)
  {
    sub_100008758(a1, &qword_10049D1F8);
    sub_100008758((uint64_t)v14, &qword_10049D1F8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_6:
    sub_100008758((uint64_t)v10, &qword_10049D288);
    return 2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_100006924(&qword_10049D290, (uint64_t (*)(uint64_t))&type metadata accessor for ContentRating, (uint64_t)&protocol conformance descriptor for ContentRating);
  v18 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v7, v4, v17);
  sub_100008758(a1, &qword_10049D1F8);
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v7, v4);
  sub_100008758((uint64_t)v14, &qword_10049D1F8);
  v19(v12, v4);
  sub_100008758((uint64_t)v10, &qword_10049D1F8);
  if ((v18 & 1) != 0)
    return a2 & 1;
  return 2;
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_100005574(&qword_10049D1F0);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for VideoContentRating(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v5, &qword_10049D1F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100008758(a1, &qword_10049D1F0);
    sub_100008758((uint64_t)v5, &qword_10049D1F0);
    return 2;
  }
  else
  {
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v12 = VideoContentRating.isExplicit.getter(v11);
    sub_100008758(a1, &qword_10049D1F0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = 2;
    if (v12 != 2)
    {
      if ((v12 & 1) != 0)
        return a2 & 1;
      else
        return 2;
    }
  }
  return result;
}

uint64_t _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  sub_100005574(&qword_10049D1E8);
  __chkstk_darwin();
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v11 - v4;
  sub_100014A7C(a1, (uint64_t)&v11 - v4, &qword_10049D1E8);
  v6 = type metadata accessor for MusicFavoriteStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1
    || (sub_100014A7C((uint64_t)v5, (uint64_t)v3, &qword_10049D1E8),
        v8 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v3, v6),
        v8 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    v9 = 2;
    goto LABEL_8;
  }
  if (v8 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v8 != enum case for MusicFavoriteStatus.disliked(_:))
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    goto LABEL_7;
  }
  v9 = 3;
LABEL_8:
  sub_100008758(a1, &qword_10049D1E8);
  sub_100008758((uint64_t)v5, &qword_10049D1E8);
  return v9;
}

id *sub_1002D30A4(id *a1)
{
  _QWORD *v2;

  v2 = a1 + 1;

  sub_10000682C(v2);
  return a1;
}

unint64_t sub_1002D30D8()
{
  unint64_t result;

  result = qword_10049D1C0;
  if (!qword_10049D1C0)
  {
    result = swift_getWitnessTable(&unk_10039C874, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D1C0);
  }
  return result;
}

unint64_t sub_1002D311C()
{
  unint64_t result;

  result = qword_10049D1C8;
  if (!qword_10049D1C8)
  {
    result = swift_getWitnessTable(&unk_10039C824, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D1C8);
  }
  return result;
}

unint64_t sub_1002D3160()
{
  unint64_t result;

  result = qword_10049D1D0;
  if (!qword_10049D1D0)
  {
    result = swift_getWitnessTable(&unk_10039C7D4, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D1D0);
  }
  return result;
}

unint64_t sub_1002D31A4()
{
  unint64_t result;

  result = qword_10049D1D8;
  if (!qword_10049D1D8)
  {
    result = swift_getWitnessTable(&unk_10039C784, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D1D8);
  }
  return result;
}

unint64_t sub_1002D31E8()
{
  unint64_t result;

  result = qword_10049D1E0;
  if (!qword_10049D1E0)
  {
    result = swift_getWitnessTable(&unk_10039C734, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D1E0);
  }
  return result;
}

uint64_t sub_1002D322C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7974706D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746963696C707865, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x657469726F766166, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x76697372656D6D69, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

char *sub_1002D33E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  __n128 v29;
  _QWORD v31[10];
  _QWORD *v32;
  uint64_t v33;

  v2 = sub_100005574(&qword_10049D260);
  v3 = *(_QWORD *)(v2 - 8);
  v31[5] = v2;
  v31[6] = v3;
  __chkstk_darwin();
  v31[9] = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049D268);
  v6 = *(_QWORD *)(v5 - 8);
  v31[3] = v5;
  v31[4] = v6;
  __chkstk_darwin();
  v31[8] = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049D270);
  v9 = *(_QWORD *)(v8 - 8);
  v31[1] = v8;
  v31[2] = v9;
  __chkstk_darwin();
  v31[7] = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049D278);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = sub_100005574(&qword_10049D280);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  v32 = a1;
  sub_10000ABC8(a1, v18);
  v19 = sub_1002D30D8();
  v20 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for TextBadge.CodingKeys, &type metadata for TextBadge.CodingKeys, v19, v18, v17);
  if (!v20)
  {
    v31[0] = v12;
    v33 = v11;
    v21 = v14;
    v22 = KeyedDecodingContainer.allKeys.getter(v13);
    v23 = v13;
    v24 = v16;
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v16 = (char *)type metadata accessor for DecodingError(0);
    swift_allocError(v16, &protocol witness table for DecodingError, 0, 0);
    v25 = v23;
    v27 = v26;
    sub_100005574(&qword_10049CB08);
    *v27 = &type metadata for TextBadge;
    v28 = KeyedDecodingContainer.codingPath.getter(v25);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v28, 0xD00000000000002BLL, 0x80000001003B9B50, 0);
    v29.n128_f64[0] = (*(double (**)(_QWORD *, _QWORD, char *))(*((_QWORD *)v16 - 1) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow(v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v25);
  }
  sub_10000682C(v32);
  return v16;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 2;
      if (v7 > 2)
        return result;
    }
    return 0;
  }
  v2 = a2 + 4;
  if (a2 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1002D3924 + 4 * byte_10039C3A8[v4]))();
}

uint64_t storeEnumTagSinglePayload for TextBadge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1002D39D0 + 4 * byte_10039C3B2[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1002D3A04 + 4 * byte_10039C3AD[v5]))();
}

uint64_t sub_1002D3A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D3A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002D3A14);
  return result;
}

uint64_t sub_1002D3A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002D3A28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1002D3A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D3A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return sub_10000682C(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_100020AF8(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  sub_10000682C((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

uint64_t storeEnumTagSinglePayload for TextBadge.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1002D3BE0 + 4 * byte_10039C3BC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002D3C14 + 4 * byte_10039C3B7[v4]))();
}

uint64_t sub_1002D3C14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D3C1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1002D3C24);
  return result;
}

uint64_t sub_1002D3C30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1002D3C38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1002D3C3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D3C44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.CodingKeys()
{
  return &type metadata for TextBadge.CodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &type metadata for TextBadge.EmptyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1002D3CB0 + 4 * byte_10039C3C1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1002D3CD0 + 4 * byte_10039C3C6[v4]))();
}

_BYTE *sub_1002D3CB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1002D3CD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002D3CD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002D3CE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1002D3CE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1002D3CF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &type metadata for TextBadge.ExplicitCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &type metadata for TextBadge.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &type metadata for TextBadge.ImmersiveCodingKeys;
}

unint64_t sub_1002D3D30()
{
  unint64_t result;

  result = qword_10049D200;
  if (!qword_10049D200)
  {
    result = swift_getWitnessTable(&unk_10039C604, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D200);
  }
  return result;
}

unint64_t sub_1002D3D78()
{
  unint64_t result;

  result = qword_10049D208;
  if (!qword_10049D208)
  {
    result = swift_getWitnessTable(&unk_10039C70C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D208);
  }
  return result;
}

unint64_t sub_1002D3DC0()
{
  unint64_t result;

  result = qword_10049D210;
  if (!qword_10049D210)
  {
    result = swift_getWitnessTable(&unk_10039C62C, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D210);
  }
  return result;
}

unint64_t sub_1002D3E08()
{
  unint64_t result;

  result = qword_10049D218;
  if (!qword_10049D218)
  {
    result = swift_getWitnessTable(&unk_10039C654, &type metadata for TextBadge.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D218);
  }
  return result;
}

unint64_t sub_1002D3E50()
{
  unint64_t result;

  result = qword_10049D220;
  if (!qword_10049D220)
  {
    result = swift_getWitnessTable(&unk_10039C574, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D220);
  }
  return result;
}

unint64_t sub_1002D3E98()
{
  unint64_t result;

  result = qword_10049D228;
  if (!qword_10049D228)
  {
    result = swift_getWitnessTable(&unk_10039C59C, &type metadata for TextBadge.ExplicitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D228);
  }
  return result;
}

unint64_t sub_1002D3EE0()
{
  unint64_t result;

  result = qword_10049D230;
  if (!qword_10049D230)
  {
    result = swift_getWitnessTable(&unk_10039C524, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D230);
  }
  return result;
}

unint64_t sub_1002D3F28()
{
  unint64_t result;

  result = qword_10049D238;
  if (!qword_10049D238)
  {
    result = swift_getWitnessTable(&unk_10039C54C, &type metadata for TextBadge.FavoriteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D238);
  }
  return result;
}

unint64_t sub_1002D3F70()
{
  unint64_t result;

  result = qword_10049D240;
  if (!qword_10049D240)
  {
    result = swift_getWitnessTable(&unk_10039C4D4, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D240);
  }
  return result;
}

unint64_t sub_1002D3FB8()
{
  unint64_t result;

  result = qword_10049D248;
  if (!qword_10049D248)
  {
    result = swift_getWitnessTable(&unk_10039C4FC, &type metadata for TextBadge.ImmersiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D248);
  }
  return result;
}

unint64_t sub_1002D4000()
{
  unint64_t result;

  result = qword_10049D250;
  if (!qword_10049D250)
  {
    result = swift_getWitnessTable(&unk_10039C67C, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D250);
  }
  return result;
}

unint64_t sub_1002D4048()
{
  unint64_t result;

  result = qword_10049D258;
  if (!qword_10049D258)
  {
    result = swift_getWitnessTable(&unk_10039C6A4, &type metadata for TextBadge.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10049D258);
  }
  return result;
}

void sub_1002D408C()
{
  qword_10049D298 = 0x403E000000000000;
}

void sub_1002D409C()
{
  qword_10049D2A0 = 0x4018000000000000;
}

void sub_1002D40AC()
{
  qword_10049D2A8 = 0x402A000000000000;
}

void sub_1002D40BC()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10049D2B0 = v1 == (id)6;
}

uint64_t sub_1002D411C()
{
  double v0;
  double v1;
  uint64_t result;

  if (qword_100498B48 != -1)
    result = swift_once(&qword_100498B48, sub_1002D40BC);
  v0 = 20.0;
  if (byte_10049D2B0)
    v1 = 20.0;
  else
    v1 = 0.0;
  *(_QWORD *)&xmmword_10049D2B8 = 0x4034000000000000;
  *((double *)&xmmword_10049D2B8 + 1) = v1;
  if (byte_10049D2B0)
    v0 = 0.0;
  qword_10049D2C8 = 0;
  qword_10049D2D0 = *(_QWORD *)&v0;
  return result;
}

void sub_1002D418C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (qword_100498B48 != -1)
    a1 = swift_once(&qword_100498B48, sub_1002D40BC);
  if (byte_10049D2B0 == 1)
  {
    v1 = static Font.headline.getter();
  }
  else
  {
    v2 = static Font.caption.getter(a1);
    v1 = Font.bold()();
    swift_release(v2);
  }
  qword_10049D2D8 = v1;
}

void sub_1002D4208()
{
  qword_10049D2E0 = 0x4018000000000000;
}

uint64_t sub_1002D4218()
{
  double v0;
  uint64_t result;

  if (qword_100498B48 != -1)
    result = swift_once(&qword_100498B48, sub_1002D40BC);
  v0 = 44.0;
  if (!byte_10049D2B0)
    v0 = 24.0;
  qword_10049D2E8 = *(_QWORD *)&v0;
  unk_10049D2F0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002D4278()
{
  uint64_t result;
  uint64_t v1;

  if (qword_100498B48 != -1)
    swift_once(&qword_100498B48, sub_1002D40BC);
  if (byte_10049D2B0 == 1)
    result = static Alignment.topLeading.getter();
  else
    result = static Alignment.topTrailing.getter();
  qword_10049D2F8 = result;
  unk_10049D300 = v1;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  char v33;
  double v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  int v47;
  unsigned __int8 v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  int v55;
  uint64_t OpaqueTypeConformance2;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  double v72;
  char v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105[16];
  uint64_t v106;
  _QWORD v107[4];

  v103 = a2;
  v3 = type metadata accessor for ScrollBounceBehavior(0);
  v101 = *(_QWORD *)(v3 - 8);
  v102 = v3;
  __chkstk_darwin();
  v100 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ScrollIndicatorVisibility(0);
  v93 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin();
  v89 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (double *)((char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100005574(&qword_10049D308);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049D310);
  __chkstk_darwin();
  v14 = (char *)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100005574(&qword_10049D318);
  __chkstk_darwin();
  v16 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100005574(&qword_10049D320);
  v88 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin();
  v87 = (char *)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100005574(&qword_10049D328);
  v94 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin();
  v91 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_100005574(&qword_10049D330);
  __chkstk_darwin();
  v97 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100005574(&qword_10049D338);
  __chkstk_darwin();
  v21 = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100005574(&qword_10049D340);
  v22 = __chkstk_darwin();
  v99 = (uint64_t)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = a1;
  v24 = static Axis.Set.vertical.getter(v22);
  v25 = sub_100005574(&qword_10049D348);
  v26 = sub_1002D4BC4();
  v27 = ScrollView.init(_:showsIndicators:content:)(v24, 1, sub_1002D4BBC, v105, v25, v26);
  LOBYTE(v24) = static Edge.Set.all.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  v14[*(int *)(v12 + 36)] = v24;
  v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29 = v84[1];
  v28(v11, v8);
  v30 = *(_QWORD *)v29;
  v31 = *(unsigned __int8 *)(v29 + 8);
  LODWORD(v12) = *(unsigned __int8 *)(v29 + 9);
  sub_1002D4C48(*(_QWORD *)v29, v31, *(_BYTE *)(v29 + 9));
  v32 = COERCE_DOUBLE(sub_1002BDE38(v30, v31 | ((_DWORD)v12 << 8)));
  LOBYTE(v11) = v33;
  sub_1002D05D8(v30, v31, v12);
  if ((v11 & 1) != 0 || v32 <= 0.0)
  {
    if (qword_100498B40 != -1)
      swift_once(&qword_100498B40, sub_1002D40AC);
    v34 = *(double *)&qword_10049D2A8;
  }
  else
  {
    if (qword_100498B38 != -1)
      swift_once(&qword_100498B38, sub_1002D409C);
    v34 = v32 - *(double *)&qword_10049D2A0;
  }
  v35 = v87;
  v36 = (char *)v7 + *(int *)(v85 + 20);
  v37 = enum case for RoundedCornerStyle.continuous(_:);
  v38 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  *v7 = v34;
  v7[1] = v34;
  v39 = (uint64_t)&v16[*(int *)(v104 + 36)];
  sub_100082248((uint64_t)v7, v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v39 + *(int *)(sub_100005574((uint64_t *)&unk_10049F4D0) + 36)) = 256;
  sub_100014A7C((uint64_t)v14, (uint64_t)v16, &qword_10049D310);
  sub_100006798((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v40 = sub_100008758((uint64_t)v14, &qword_10049D310);
  v41 = v89;
  v42 = static ScrollIndicatorVisibility.never.getter(v40);
  v43 = static Axis.Set.vertical.getter(v42);
  v44 = static Axis.Set.horizontal.getter();
  v45 = Axis.Set.init(rawValue:)(0);
  v46 = Axis.Set.init(rawValue:)(v45);
  if (Axis.Set.init(rawValue:)(v46 & v43) != v43)
    v45 = Axis.Set.init(rawValue:)(v45 | v43);
  v47 = Axis.Set.init(rawValue:)(v45);
  v48 = Axis.Set.init(rawValue:)(v47 & v44);
  v49 = v100;
  if (v48 != v44)
    v45 = Axis.Set.init(rawValue:)(v45 | v44);
  v50 = sub_1002D4C54();
  View.scrollIndicators(_:axes:)(v41, v45, v104, v50);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v41, v95);
  v51 = sub_100008758((uint64_t)v16, &qword_10049D318);
  v52 = static ScrollBounceBehavior.basedOnSize.getter(v51);
  v53 = static Axis.Set.vertical.getter(v52);
  v54 = Axis.Set.init(rawValue:)(0);
  v55 = Axis.Set.init(rawValue:)(v54);
  if (Axis.Set.init(rawValue:)(v55 & v53) != v53)
    v54 = Axis.Set.init(rawValue:)(v54 | v53);
  v107[0] = v104;
  v107[1] = v50;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v107, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v57 = v91;
  v58 = v54;
  v59 = v92;
  View.scrollBounceBehavior(_:axes:)(v49, v58, v92, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v102);
  v60 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v35, v59);
  v61 = static SafeAreaRegions.all.getter(v60);
  v62 = static Edge.Set.all.getter(v61);
  v63 = v94;
  v64 = v96;
  v65 = (uint64_t)v97;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v97, v57, v96);
  v66 = v65 + *(int *)(v86 + 36);
  *(_QWORD *)v66 = v61;
  *(_BYTE *)(v66 + 8) = v62;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v64);
  if (qword_100498B70 != -1)
    swift_once(&qword_100498B70, sub_1002D4278);
  v67 = qword_10049D2F8;
  v68 = unk_10049D300;
  v69 = (uint64_t)&v21[*(int *)(v90 + 36)];
  sub_1002D4D74(v29, v69);
  v70 = (uint64_t *)(v69 + *(int *)(sub_100005574(&qword_10049D390) + 36));
  *v70 = v67;
  v70[1] = v68;
  v71 = sub_1000149A8(v65, (uint64_t)v21, &qword_10049D330);
  if (qword_100498B38 != -1)
    v71 = swift_once(&qword_100498B38, sub_1002D409C);
  v72 = *(double *)&qword_10049D2A0;
  v73 = static Edge.Set.all.getter(v71);
  v74 = EdgeInsets.init(_all:)(v72);
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v81 = v99;
  sub_100014A7C((uint64_t)v21, v99, &qword_10049D338);
  v82 = v81 + *(int *)(v98 + 36);
  *(_BYTE *)v82 = v73;
  *(double *)(v82 + 8) = v74;
  *(_QWORD *)(v82 + 16) = v76;
  *(_QWORD *)(v82 + 24) = v78;
  *(_QWORD *)(v82 + 32) = v80;
  *(_BYTE *)(v82 + 40) = 0;
  sub_100008758((uint64_t)v21, &qword_10049D338);
  return sub_1000149A8(v81, v103, &qword_10049D340);
}

uint64_t sub_1002D4AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v2 = a1;
  if (qword_100498B30 != -1)
    a1 = swift_once(&qword_100498B30, sub_1002D408C);
  v4 = *(double *)&qword_10049D298;
  v5 = static Edge.Set.all.getter(a1);
  v6 = EdgeInsets.init(_all:)(v4);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = sub_100005574(&qword_10049D360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v2, v13);
  result = sub_100005574(&qword_10049D348);
  v15 = a2 + *(int *)(result + 36);
  *(_BYTE *)v15 = v5;
  *(double *)(v15 + 8) = v6;
  *(_QWORD *)(v15 + 16) = v8;
  *(_QWORD *)(v15 + 24) = v10;
  *(_QWORD *)(v15 + 32) = v12;
  *(_BYTE *)(v15 + 40) = 0;
  return result;
}

uint64_t sub_1002D4BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002D4AEC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002D4BC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D350;
  if (!qword_10049D350)
  {
    v1 = sub_100005600(&qword_10049D348);
    sub_10002FFB8(&qword_10049D358, &qword_10049D360, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D350);
  }
  return result;
}

uint64_t sub_1002D4C48(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return swift_retain(result);
  return result;
}

unint64_t sub_1002D4C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D368;
  if (!qword_10049D368)
  {
    v1 = sub_100005600(&qword_10049D318);
    sub_1002D4CD8();
    sub_10002FFB8((unint64_t *)&unk_10049F520, (uint64_t *)&unk_10049F4D0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D368);
  }
  return result;
}

unint64_t sub_1002D4CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D370;
  if (!qword_10049D370)
  {
    v1 = sub_100005600(&qword_10049D310);
    sub_10002FFB8(&qword_10049D378, &qword_10049D308, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
    sub_10002FFB8(&qword_10049D380, &qword_10049D388, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D370);
  }
  return result;
}

uint64_t sub_1002D4D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;

  v46 = a1;
  v54 = a2;
  v2 = type metadata accessor for PlainButtonStyle(0);
  v52 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v53 = v2;
  __chkstk_darwin();
  v51 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContentShapeKinds(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin();
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(type metadata accessor for Card.DisplayStyle(0) - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049D4E8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10049D4F0);
  __chkstk_darwin();
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10049D4F8);
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  __chkstk_darwin();
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v46, (uint64_t)v9, type metadata accessor for Card.DisplayStyle);
  v20 = *(unsigned __int8 *)(v7 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_100462388, v21 + v8, v20 | 7);
  sub_1002D676C((uint64_t)v9, v22 + v21);
  v23 = sub_100005574(&qword_10049D500);
  v24 = sub_1002D71F8();
  v25 = Button.init(action:label:)(sub_1002D71CC, v22, sub_1002D5200, 0, v23, v24);
  static ContentShapeKinds.interaction.getter(v25);
  if (qword_100498B68 != -1)
    swift_once(&qword_100498B68, sub_1002D4218);
  v26 = (*(double *)&qword_10049D2E8 + -44.0) * 0.5;
  v27 = &v16[*(int *)(v14 + 36)];
  v28 = sub_100005574(&qword_10049D578);
  v30 = v47;
  v29 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v27[*(int *)(v28 + 40)], v6, v48);
  *(double *)v27 = v26;
  v27[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v32 = v51;
  PlainButtonStyle.init()(v31);
  v33 = sub_1002D744C();
  v34 = sub_100006924((unint64_t *)&qword_10049D598, (uint64_t (*)(uint64_t))&type metadata accessor for PlainButtonStyle, (uint64_t)&protocol conformance descriptor for PlainButtonStyle);
  v35 = v53;
  View.buttonStyle<A>(_:)(v32, v14, v53, v33, v34);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v35);
  v36 = sub_100008758((uint64_t)v16, &qword_10049D4F0);
  if (qword_100498B50 != -1)
    v36 = swift_once(&qword_100498B50, sub_1002D411C);
  v53 = xmmword_10049D2B8;
  v37 = qword_10049D2C8;
  v38 = qword_10049D2D0;
  v39 = static Edge.Set.all.getter(v36);
  v41 = v49;
  v40 = v50;
  v42 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v54, v19, v50);
  v43 = v42 + *(int *)(sub_100005574(&qword_10049D5A0) + 36);
  *(_BYTE *)v43 = v39;
  *(_OWORD *)(v43 + 8) = v53;
  *(_QWORD *)(v43 + 24) = v37;
  *(_QWORD *)(v43 + 32) = v38;
  *(_BYTE *)(v43 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v40);
}

uint64_t sub_1002D5168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle(0);
  sub_1002BDE04((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002D5200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[24];
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  __int128 v78;

  v49 = a1;
  v50 = sub_100005574(&qword_10049D570);
  __chkstk_darwin();
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Material(0);
  v52 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin();
  v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100005574(&qword_10049D518);
  __chkstk_darwin();
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100005574(&qword_10049D500);
  __chkstk_darwin();
  v45 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v48 = static Color.secondary.getter();
  KeyPath = swift_getKeyPath(&unk_10039C9C0);
  if (qword_100498B58 != -1)
    swift_once(&qword_100498B58, sub_1002D418C);
  v8 = qword_10049D2D8;
  v43 = swift_getKeyPath(&unk_10039C9F0);
  v9 = qword_100498B60;
  swift_retain(v8);
  if (v9 != -1)
    v10 = swift_once(&qword_100498B60, sub_1002D4208);
  v11 = *(double *)&qword_10049D2E0;
  v12 = static Edge.Set.all.getter(v10);
  v14 = EdgeInsets.init(_all:)(v11);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if (qword_100498B68 != -1)
    v13 = swift_once(&qword_100498B68, sub_1002D4218);
  v21 = qword_10049D2E8;
  v22 = unk_10049D2F0;
  v23 = static Alignment.center.getter(v13);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v66, v21, 0, 0, 1, 0, 1, v22, 0, 0, 1, 0, 1, v23, v24);
  *(_QWORD *)&v54 = v53;
  *((_QWORD *)&v54 + 1) = KeyPath;
  v25 = v48;
  v26 = v43;
  *(_QWORD *)&v55 = v48;
  *((_QWORD *)&v55 + 1) = v43;
  *(_QWORD *)&v56 = v8;
  BYTE8(v56) = v12;
  *(double *)&v57 = v14;
  *((_QWORD *)&v57 + 1) = v16;
  *(_QWORD *)&v58 = v18;
  *((_QWORD *)&v58 + 1) = v20;
  LOBYTE(v59) = 0;
  *((_QWORD *)&v59 + 1) = v66;
  LOBYTE(v60) = v67;
  *((_QWORD *)&v60 + 1) = v68;
  LOBYTE(v61) = v69;
  *((_QWORD *)&v61 + 1) = v70;
  LOBYTE(v62) = v71;
  *((_QWORD *)&v62 + 1) = v72;
  LOBYTE(v63) = v73;
  *((_QWORD *)&v63 + 1) = v74;
  LOBYTE(v64) = v75;
  *((_QWORD *)&v64 + 1) = v76;
  v65[0] = v77;
  *(_OWORD *)&v65[8] = v78;
  v27 = v51;
  v28 = static Material.thin.getter();
  v29 = static Edge.Set.all.getter(v28);
  v42 = KeyPath;
  v30 = v52;
  v31 = (uint64_t)v2;
  v32 = v2;
  v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v32, v27, v46);
  *(_BYTE *)(v31 + *(int *)(v50 + 36)) = v29;
  sub_100014A7C(v31, (uint64_t)&v5[*(int *)(v44 + 36)], &qword_10049D570);
  v34 = *(_OWORD *)v65;
  *((_OWORD *)v5 + 10) = v64;
  *((_OWORD *)v5 + 11) = v34;
  *((_QWORD *)v5 + 24) = *(_QWORD *)&v65[16];
  v35 = v61;
  *((_OWORD *)v5 + 6) = v60;
  *((_OWORD *)v5 + 7) = v35;
  v36 = v63;
  *((_OWORD *)v5 + 8) = v62;
  *((_OWORD *)v5 + 9) = v36;
  v37 = v57;
  *((_OWORD *)v5 + 2) = v56;
  *((_OWORD *)v5 + 3) = v37;
  v38 = v59;
  *((_OWORD *)v5 + 4) = v58;
  *((_OWORD *)v5 + 5) = v38;
  v39 = v55;
  *(_OWORD *)v5 = v54;
  *((_OWORD *)v5 + 1) = v39;
  sub_1002D74F8((uint64_t *)&v54);
  sub_100008758(v31, &qword_10049D570);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v33);
  swift_release(v8);
  swift_release(v26);
  swift_release(v25);
  swift_release(v42);
  swift_release(v53);
  v40 = v45;
  sub_100014A7C((uint64_t)v5, v45, &qword_10049D518);
  *(_WORD *)(v40 + *(int *)(v47 + 36)) = 256;
  sub_100008758((uint64_t)v5, &qword_10049D518);
  return sub_1000149A8(v40, v49, &qword_10049D500);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = objc_allocWithZone(v1);
  sub_1002D60E4(a1);
  v6 = v5;
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_isaMask & *v1;
  sub_1002D60E4(a1);
  v5 = v4;
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_1002D5788(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    v7 = v6;

    return v7;
  }
  else
  {
    v9 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "largeDetent");
    v8 = UISheetPresentationControllerDetent.resolvedValue(in:)(a1);

  }
  return v8;
}

void sub_1002D5848(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  _QWORD *v0;
  uint64_t ObjectType;
  uint64_t v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  ObjectType = swift_getObjectType();
  v3 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v0) + 0x50), *(_QWORD *)((swift_isaMask & *v0) + 0x58), v2);
  v8.receiver = v0;
  v8.super_class = v3;
  objc_msgSendSuper2(&v8, "viewDidLoad");
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  objc_msgSend(v0, "setPreferredContentSize:");
  v4 = sub_100005574(&qword_10049AED0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100384A80;
  *(_QWORD *)(v5 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v5 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v6 = swift_allocObject(&unk_100462210, 24, 7);
  *(_QWORD *)(v6 + 16) = ObjectType;
  v7 = UIViewController.registerForTraitChanges<A>(_:handler:)(v5, sub_1002D66C0, v6, ObjectType);
  swift_unknownObjectRelease(v7);
  swift_bridgeObjectRelease();
  swift_release(v6);
}

void sub_1002D5974(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLoad()();

}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  objc_super v11;

  v7 = swift_isaMask & *v3;
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  objc_msgSend(v3, "setPreferredContentSize:");
  v9 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), v8);
  v11.receiver = v3;
  v11.super_class = v9;
  return objc_msgSendSuper2(&v11, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_1002D5A40(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  uint64_t v0;
  _QWORD *v1;
  objc_class *v2;
  id v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  uint64_t v13;
  double v14;
  double v15;
  CGFloat v16;
  double Height;
  id v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double MaxY;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  objc_super v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v2 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58), v0);
  v53.receiver = v1;
  v53.super_class = v2;
  objc_msgSendSuper2(&v53, "viewDidLayoutSubviews");
  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v3;
  objc_msgSend(v3, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v54.origin.x = v6;
  v54.origin.y = v8;
  v54.size.width = v10;
  v54.size.height = v12;
  *(double *)&v13 = CGRectGetWidth(v54);
  Card.ViewController.preferredContentSize(forWidth:)(v13, 0);
  v15 = v14;
  v55.size.height = v16;
  v55.origin.x = 0.0;
  v55.origin.y = 0.0;
  v55.size.width = v15;
  Height = CGRectGetHeight(v55);
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v19 = v18;
  objc_msgSend(v18, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v56.origin.x = v21;
  v56.origin.y = v23;
  v56.size.width = v25;
  v56.size.height = v27;
  v28 = CGRectGetHeight(v56);
  if (v28 < Height)
    Height = v28;
  v29 = objc_msgSend(v1, "view");
  if (!v29)
    goto LABEL_11;
  v30 = v29;
  objc_msgSend(v29, "bounds");
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;

  v57.origin.x = v32;
  v57.origin.y = v34;
  v57.size.width = v36;
  v57.size.height = v38;
  MaxY = CGRectGetMaxY(v57);
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.width = v15;
  v58.size.height = Height;
  v40 = CGRectGetHeight(v58);
  v41 = objc_msgSend(*(id *)((char *)v1 + qword_10049D430), "view");
  if (!v41)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v42 = v41;
  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    CGRect.centeringAlong(axes:in:)(1, 0.0, MaxY - v40, v15, Height);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v52 = v51;

    objc_msgSend(v42, "setFrame:", v46, v48, v50, v52);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1002D5D00(void *a1)
{
  id v1;

  v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();

}

uint64_t sub_1002D5D34()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  CGRect v24;

  if ((a2 & 1) == 0)
  {
LABEL_8:
    v16 = objc_msgSend(v2, "presentingViewController");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "traitCollection");

      if (v18)
        goto LABEL_12;
    }
    v19 = objc_msgSend(v2, "presentationController");
    v20 = v19;
    if (v19)
    {
      v18 = objc_msgSend(v19, "traitCollection");

      if (v18)
      {
LABEL_12:
        v20 = v18;
        v21 = objc_msgSend(v20, "horizontalSizeClass");

        v22 = 414.0;
        if (*(double *)&a1 <= 414.0)
          v22 = *(double *)&a1;
        if (v21 == (id)2)
          *(double *)&a1 = v22;
        goto LABEL_16;
      }
      v20 = 0;
    }
LABEL_16:
    v23 = *(id *)&v2[qword_10049D430];
    dispatch thunk of UIHostingController.sizeThatFits(in:)(*(double *)&a1, INFINITY);

    return;
  }
  v4 = objc_msgSend(v2, "presentationController");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "containerView");

    if (v6)
    {
LABEL_7:
      objc_msgSend(v6, "bounds");
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v24.origin.x = v9;
      v24.origin.y = v11;
      v24.size.width = v13;
      v24.size.height = v15;
      *(double *)&a1 = CGRectGetWidth(v24);
      goto LABEL_8;
    }
  }
  v7 = objc_msgSend(v2, "view");
  if (v7)
  {
    v6 = v7;
    goto LABEL_7;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
  sub_1002D66F8();
}

void sub_1002D5F30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_1002D66F8();
}

id Card.ViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Card.ViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1002D5FB8(uint64_t a1)
{

}

uint64_t View.cardDisplayStyle()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v12 - v7;
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10039C8C8);
  *((_WORD *)v6 + 4) = 0;
  v9 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v9 = swift_getKeyPath(&unk_10039C8F8);
  v10 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  sub_1002D676C((uint64_t)v6, (uint64_t)v8);
  View.modifier<A>(_:)(v8, a1, v4, a2);
  return sub_100006798((uint64_t)v8, type metadata accessor for Card.DisplayStyle);
}

void sub_1002D60E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t WitnessTable;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  objc_class *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  objc_super v60;
  uint64_t v61;
  uint64_t v62;

  v56 = swift_isaMask & *v1;
  v3 = v56;
  v4 = type metadata accessor for Card.DisplayStyle(0);
  __chkstk_darwin();
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v54 - v7;
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v54 - v11;
  v13 = type metadata accessor for ModifiedContent(0, v9, v4);
  v58 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v54 - v15;
  *(_QWORD *)((char *)v1 + qword_10049D428) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  *(_QWORD *)v6 = swift_getKeyPath(&unk_10039C8C8);
  *((_WORD *)v6 + 4) = 0;
  v17 = &v6[*(int *)(v4 + 20)];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_10039C8F8);
  v18 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_1002D676C((uint64_t)v6, (uint64_t)v8);
  v19 = v1;
  v20 = v9;
  ModifiedContent.init(content:modifier:)(v12, v8, v9, v4);
  v21 = *(_QWORD *)(v56 + 88);
  v22 = sub_100006924(&qword_10049D4D8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  v61 = v21;
  v62 = v22;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  type metadata accessor for UIHostingController(0, v13, WitnessTable);
  v24 = v57;
  v25 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v55 = v16;
  v56 = v13;
  v25(v57, v16, v13);
  v26 = (void *)UIHostingController.__allocating_init(rootView:)(v24);
  v27 = qword_10049D430;
  *(_QWORD *)((char *)v19 + qword_10049D430) = v26;
  v28 = v26;
  UIHostingController.safeAreaRegions.setter(0);

  v29 = objc_msgSend(*(id *)((char *)v19 + v27), "view");
  if (!v29)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  v30 = v29;
  v31 = (void *)objc_opt_self(UIColor);
  v32 = objc_msgSend(v31, "clearColor");
  objc_msgSend(v30, "setBackgroundColor:", v32);

  v33 = v20;
  v35 = (objc_class *)type metadata accessor for Card.ViewController(0, v20, v21, v34);
  v60.receiver = v19;
  v60.super_class = v35;
  v19 = objc_msgSendSuper2(&v60, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v19, "setModalPresentationStyle:", 2);
  v36 = objc_msgSend(v19, "sheetPresentationController");
  if (v36)
  {
    v37 = v36;
    v38 = sub_100005574(&qword_100499F50);
    v39 = swift_allocObject(v38, 40, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100384730;
    sub_1002D7084();
    v40 = swift_allocObject(&unk_100462338, 24, 7);
    swift_unknownObjectWeakInit(v40 + 16);
    v41 = (_QWORD *)swift_allocObject(&unk_100462360, 40, 7);
    v41[2] = v33;
    v41[3] = v21;
    v41[4] = v40;
    v42 = swift_retain(v40);
    v43 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)(0, sub_1002D7108, v41, v42);
    swift_release(v40);
    swift_release(v41);
    *(_QWORD *)(v39 + 32) = v43;
    v59 = v39;
    specialized Array._endMutation()(v44);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v37, "setDetents:", isa);

    objc_msgSend(v37, "setWidthFollowsPreferredContentSizeWhenEdgeAttached:", 1);
  }
  v46 = objc_msgSend(v19, "view");
  if (!v46)
    goto LABEL_9;
  v47 = v46;
  v48 = objc_msgSend(v31, "clearColor");
  objc_msgSend(v47, "setBackgroundColor:", v48);

  v49 = qword_10049D430;
  objc_msgSend(v19, "addChildViewController:", *(_QWORD *)((char *)v19 + qword_10049D430));
  v50 = objc_msgSend(v19, "view");
  if (!v50)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  v51 = v50;
  v52 = objc_msgSend(*(id *)((char *)v19 + v49), "view");
  if (v52)
  {
    v53 = v52;
    objc_msgSend(v51, "addSubview:", v52);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v56);
    return;
  }
LABEL_11:

  __break(1u);
}

void _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0()
{
  char *v0;

  *(_QWORD *)&v0[qword_10049D428] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/Card.swift", 22, 2, 123, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Card.ViewController);
}

uint64_t sub_1002D66B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1002D66C4(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  return objc_msgSend(a1, "setPreferredContentSize:");
}

void sub_1002D66F8()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for Card.DisplayStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_10049D3F0;
  if (!qword_10049D3F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Card.DisplayStyle);
  return result;
}

uint64_t sub_1002D676C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Card.DisplayStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D67B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Card.DisplayStyle.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v18);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 9);
    v9 = *(_BYTE *)(a2 + 8);
    sub_1002D4C48(*(_QWORD *)a2, v9, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 9) = v8;
    v10 = *(int *)(a3 + 20);
    v11 = (uint64_t *)(a1 + v10);
    v12 = (uint64_t *)(a2 + v10);
    v13 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      v19 = *v12;
      *v11 = *v12;
      swift_retain(v19);
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return a1;
}

double destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  sub_1002D05D8(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_BYTE *)(a1 + 9));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_1002D4C48(*(_QWORD *)a2, v8, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v12 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v11;
    *v10 = *v11;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  unsigned __int8 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_BYTE *)(a2 + 8);
  sub_1002D4C48(*(_QWORD *)a2, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v6;
  v11 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 9) = v7;
  sub_1002D05D8(v9, v11, v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 20);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_100008758(a1 + v12, &qword_10049F780);
    v15 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      v18 = *v14;
      *v13 = *v14;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v10 = *(unsigned __int8 *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 9) = v7;
  sub_1002D05D8(v8, v10, v9);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 20);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_100008758(a1 + v11, &qword_10049F780);
    v14 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002D6CCC);
}

uint64_t sub_1002D6CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_100005574(&qword_10049DF50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002D6D50);
}

uint64_t sub_1002D6D50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 9) = -(char)a2;
  }
  else
  {
    v7 = sub_100005574(&qword_10049DF50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1002D6DC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = "\n";
  sub_1002A336C(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_1002D6E38(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 96);
}

uint64_t sub_1002D6E88()
{
  return sub_100100628(&qword_10049D4B8, &qword_10049D340, (void (*)(void))sub_1002D6EBC);
}

unint64_t sub_1002D6EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D4C0;
  if (!qword_10049D4C0)
  {
    v1 = sub_100005600(&qword_10049D338);
    sub_1002D6F40();
    sub_10002FFB8(&qword_10049D4D0, &qword_10049D390, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D4C0);
  }
  return result;
}

unint64_t sub_1002D6F40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_10049D4C8;
  if (!qword_10049D4C8)
  {
    v1 = sub_100005600(&qword_10049D330);
    v2 = sub_100005600(&qword_10049D320);
    v4 = sub_100005600(&qword_10049D318);
    v5 = sub_1002D4C54();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D4C8);
  }
  return result;
}

uint64_t sub_1002D7004(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for Card.DisplayStyle(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100006924(&qword_10049D4D8, type metadata accessor for Card.DisplayStyle, (uint64_t)&protocol conformance descriptor for Card.DisplayStyle);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_1002D7084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D4E0;
  if (!qword_10049D4E0)
  {
    v1 = objc_opt_self(UISheetPresentationControllerDetent);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049D4E0);
  }
  return result;
}

uint64_t sub_1002D70C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D70E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002D7108(uint64_t a1)
{
  uint64_t v1;

  return sub_1002D5788(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1002D7114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for Card.DisplayStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  sub_1002D05D8(*(_QWORD *)(v0 + v4), *(unsigned __int8 *)(v0 + v4 + 8), *(_BYTE *)(v0 + v4 + 9));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1002D71CC()
{
  type metadata accessor for Card.DisplayStyle(0);
  return sub_1002D5168();
}

unint64_t sub_1002D71F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D508;
  if (!qword_10049D508)
  {
    v1 = sub_100005600(&qword_10049D500);
    sub_1002D727C();
    sub_10002FFB8((unint64_t *)&unk_10049EE50, &qword_10049F850, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D508);
  }
  return result;
}

unint64_t sub_1002D727C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D510;
  if (!qword_10049D510)
  {
    v1 = sub_100005600(&qword_10049D518);
    sub_100100628(&qword_10049D520, &qword_10049D528, (void (*)(void))sub_1002D7320);
    sub_10002FFB8(&qword_10049D568, &qword_10049D570, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D510);
  }
  return result;
}

uint64_t sub_1002D7320()
{
  return sub_100100628(&qword_10049D530, &qword_10049D538, (void (*)(void))sub_1002D7344);
}

unint64_t sub_1002D7344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D540;
  if (!qword_10049D540)
  {
    v1 = sub_100005600(&qword_10049D548);
    sub_1002D73C8();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D540);
  }
  return result;
}

unint64_t sub_1002D73C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D550;
  if (!qword_10049D550)
  {
    v1 = sub_100005600(&qword_10049D558);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D550);
  }
  return result;
}

unint64_t sub_1002D744C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D580;
  if (!qword_10049D580)
  {
    v1 = sub_100005600(&qword_10049D4F0);
    sub_10002FFB8(&qword_10049D588, &qword_10049D4E8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10002FFB8(&qword_10049D590, &qword_10049D578, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D580);
  }
  return result;
}

uint64_t *sub_1002D74F8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_retain(a1[4]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26;
  char *v27;
  int *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double result;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = a7;
  v53 = a8;
  v49 = a6;
  v47 = a4;
  v48 = a5;
  v46 = a3;
  v50 = a14;
  v51 = a15;
  v45 = a17;
  sub_100005574(&qword_10049D5B0);
  __chkstk_darwin();
  v27 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(_QWORD *)v54 = a16;
  *(_OWORD *)&v54[8] = v45;
  v55 = a18;
  v56 = a19;
  v28 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v54);
  v29 = (char *)a9 + v28[16];
  v30 = type metadata accessor for Binding(0, a16);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = v28[17];
  *((_BYTE *)a9 + v31) = 1;
  v32 = (_QWORD *)((char *)a9 + v28[22]);
  *v32 = 0;
  v32[1] = 0;
  v33 = v28[23];
  v57 = 0;
  State.init(wrappedValue:)(v54, &v57, &type metadata for Int);
  *(_OWORD *)((char *)a9 + v33) = *(_OWORD *)v54;
  v34 = (_QWORD *)((char *)a9 + v28[24]);
  v35 = type metadata accessor for ScrollViewProxy(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v27, 1, 1, v35);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v27, v34);
  v36 = (_QWORD *)((char *)a9 + v28[26]);
  *v36 = swift_getKeyPath(&unk_10039CA60);
  v37 = sub_100005574((uint64_t *)&unk_100498E50);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  *a9 = a1;
  v38 = (double *)((char *)a9 + v28[18]);
  *v38 = a10;
  v38[1] = a11;
  sub_1002D057C(a9[1], a9[2]);
  v39 = v46;
  a9[1] = a2;
  a9[2] = v39;
  a9[3] = v47;
  v40 = type metadata accessor for Optional(0, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v29, v48, v40);
  *((_BYTE *)a9 + v31) = v49;
  *(double *)((char *)a9 + v28[20]) = a12;
  *(double *)((char *)a9 + v28[21]) = a13;
  v41 = (_QWORD *)((char *)a9 + v28[19]);
  v42 = v53;
  *v41 = v52;
  v41[1] = v42;
  sub_10003A5C8(*v32, v32[1]);
  v43 = v51;
  *v32 = v50;
  v32[1] = v43;
  result = *v38 + a12;
  *(double *)((char *)a9 + v28[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CarouselView);
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Int);
  return v3;
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = sub_100005574(&qword_10049D5B0);
  __chkstk_darwin();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v6, &qword_10049D5B0);
  State.init(wrappedValue:)(a2, v6, v4);
  return sub_100008758(a1, &qword_10049D5B0);
}

uint64_t CarouselView.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata2;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char v80[16];
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t OpaqueTypeConformance2;
  uint64_t v102;
  void *v103;
  unint64_t v104;
  void *v105;
  uint64_t v106;

  v79 = a2;
  v3 = (void *)a1[2];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v3, 0, 0);
  v4 = type metadata accessor for Array(255);
  v76 = a1[3];
  v5 = a1[6];
  v6 = a1;
  v73 = a1;
  v77 = v5;
  v102 = v76;
  v103 = &type metadata for Int;
  v104 = v5;
  v105 = &protocol witness table for Int;
  v7 = type metadata accessor for IDView(255, &v102);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v7);
  v102 = v7;
  v103 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v75 = v4;
  v74 = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  v72 = v6[5];
  v102 = v4;
  v103 = v3;
  v10 = v3;
  v104 = OpaqueTypeMetadata2;
  v105 = (void *)v74;
  v106 = v72;
  v11 = type metadata accessor for ForEach(255, &v102);
  v102 = v7;
  v103 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v11);
  v13 = type metadata accessor for LazyHStack(255, v11, v12);
  v14 = sub_100005600(&qword_10049D5B8);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = sub_100005600(&qword_10049D5C0);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _AppearanceActionModifier);
  v20 = sub_100005600(&qword_10049D5C8);
  v99 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v13);
  v100 = sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v97 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  v98 = &protocol witness table for _PaddingLayout;
  v95 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v96 = sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v94 = &protocol witness table for _AppearanceActionModifier;
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v22 = sub_1002DD77C();
  v102 = v19;
  v103 = (void *)v20;
  v104 = v21;
  v105 = (void *)v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v24 = type metadata accessor for Optional(255, v3);
  v102 = v19;
  v103 = (void *)v20;
  v104 = v21;
  v105 = (void *)v22;
  v25 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v26 = v72;
  v92 = *(_QWORD *)(v72 + 8);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v24);
  v102 = v23;
  v103 = (void *)v24;
  v104 = v25;
  v105 = (void *)v27;
  v28 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v102 = v23;
  v103 = (void *)v24;
  v104 = v25;
  v105 = (void *)v27;
  v29 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v30 = type metadata accessor for PagingScrollView(255, v28, v29);
  v31 = sub_100005600(&qword_10049D5E8);
  v32 = type metadata accessor for ModifiedContent(255, v30, v31);
  v90 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v30);
  v91 = sub_10002FFB8(&qword_10049D5F0, &qword_10049D5E8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  v102 = v32;
  v103 = (void *)v33;
  v34 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v102 = v32;
  v103 = (void *)v33;
  v35 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v102 = v34;
  v103 = (void *)v35;
  v36 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v102 = v34;
  v103 = (void *)v35;
  v37 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v102 = v36;
  v103 = (void *)v37;
  v38 = swift_getOpaqueTypeMetadata2(255, &v102, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v102 = v36;
  v103 = (void *)v37;
  v39 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v40 = type metadata accessor for GeometryReader(255, v38, v39);
  v41 = type metadata accessor for ModifiedContent(255, v40, &type metadata for _FrameLayout);
  v88 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v40);
  v89 = &protocol witness table for _FrameLayout;
  v42 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v41);
  v43 = type metadata accessor for ScrollViewReader(255, v41, v42);
  v44 = type metadata accessor for ModifiedContent(255, v43, &type metadata for _FrameLayout);
  v45 = sub_100005600(&qword_10049D5F8);
  v102 = v75;
  v103 = v10;
  v104 = v45;
  v105 = (void *)v74;
  v106 = v72;
  v46 = type metadata accessor for ForEach(255, &v102);
  v47 = sub_100005600(&qword_10049D600);
  v48 = sub_100005600(&qword_10049D608);
  v49 = type metadata accessor for AutomaticHoverEffect(255);
  v50 = sub_1002DD7D8();
  v51 = sub_100006924(qword_10049D688, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v102 = v48;
  v103 = (void *)v49;
  v104 = v50;
  v105 = (void *)v51;
  v52 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v102 = v47;
  v103 = (void *)v52;
  v87 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v46);
  v54 = type metadata accessor for HStack(255, v46, v53);
  v55 = type metadata accessor for ModifiedContent(255, v54, &type metadata for _FrameLayout);
  v56 = type metadata accessor for Optional(255, v55);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v44, v56, 0, 0);
  v58 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v59 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v58);
  v60 = type metadata accessor for VStack(0, v58, v59);
  v61 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v63 = (char *)&v72 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __chkstk_darwin();
  v66 = (char *)&v72 - v65;
  v67 = *(_QWORD *)(v78 + *((int *)v73 + 21));
  v81 = v10;
  v82 = v76;
  v83 = v73[4];
  v84 = v26;
  v85 = v77;
  v86 = v78;
  v68 = static HorizontalAlignment.center.getter(v64);
  VStack.init(alignment:spacing:content:)(v68, v67, 0, sub_1002DDB90, v80, v58, v59);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v60);
  v69 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v69(v66, v63, v60);
  v70 = *(void (**)(char *, uint64_t))(v61 + 8);
  v70(v63, v60);
  v69(v79, v66, v60);
  return ((uint64_t (*)(char *, uint64_t))v70)(v66, v60);
}

double sub_1002D8050@<D0>(_QWORD *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, _QWORD *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, _QWORD *, uint64_t);
  char *v118;
  void (*v119)(_QWORD *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  void *v127;
  __n128 v128;
  double result;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t WitnessTable;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD v160[6];
  uint64_t *v161;
  char *v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  __int128 v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  unint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  __int128 v188;
  uint64_t v189;
  char *v190;
  unint64_t v191;
  void *v192;
  uint64_t v193;
  char v194;
  __int128 v195;
  uint64_t v196;

  v147 = a4;
  v148 = a6;
  v149 = a1;
  v146 = a7;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v138 = type metadata accessor for Array(255);
  v10 = sub_100005600(&qword_10049D5F8);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v138);
  v189 = v138;
  v190 = a2;
  v11 = a2;
  v191 = v10;
  v192 = (void *)WitnessTable;
  v193 = (uint64_t)a5;
  v151 = a5;
  v12 = type metadata accessor for ForEach(255, &v189);
  v13 = sub_100005600(&qword_10049D600);
  v14 = sub_100005600(&qword_10049D608);
  v15 = type metadata accessor for AutomaticHoverEffect(255);
  v16 = sub_1002DD7D8();
  v17 = sub_100006924(qword_10049D688, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v189 = v14;
  v190 = (char *)v15;
  v191 = v16;
  v192 = (void *)v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v189 = v13;
  v190 = (char *)OpaqueTypeConformance2;
  v196 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v135 = v12;
  v130 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v12);
  v134 = *(_QWORD *)(type metadata accessor for HStack(0, v12, v130) - 8);
  __chkstk_darwin();
  v131 = (char *)&v130 - v19;
  v144 = v20;
  v140 = *(_QWORD *)(type metadata accessor for ModifiedContent(0, v20, &type metadata for _FrameLayout) - 8);
  __chkstk_darwin();
  v132 = (uint64_t *)((char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v133 = (char *)&v130 - v22;
  v150 = v23;
  v145 = type metadata accessor for Optional(0, v23);
  v141 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v143 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v142 = (char *)&v130 - v25;
  v26 = v11;
  v152 = v11;
  v189 = (uint64_t)v11;
  v190 = a3;
  v27 = (uint64_t)a3;
  v28 = v147;
  v29 = v148;
  v191 = v147;
  v192 = a5;
  v193 = v148;
  v30 = type metadata accessor for CarouselView(0, (uint64_t)&v189);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  __chkstk_darwin();
  v34 = (char *)&v130 - v33;
  v35 = *(void (**)(_QWORD, _QWORD, _QWORD))(v31 + 16);
  v139 = v30;
  v35(v34, v149, v30);
  v36 = *(unsigned __int8 *)(v31 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = (_QWORD *)swift_allocObject(&unk_100462518, v37 + v32, v36 | 7);
  v38[2] = v26;
  v38[3] = v27;
  v39 = v151;
  v38[4] = v28;
  v38[5] = v39;
  v40 = v29;
  v38[6] = v29;
  v41 = v38;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v38 + v37, v34, v30);
  v136 = v27;
  v189 = v27;
  v190 = (char *)&type metadata for Int;
  v191 = v40;
  v192 = &protocol witness table for Int;
  v42 = type metadata accessor for IDView(255, &v189);
  v43 = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v42);
  v189 = v42;
  v190 = (char *)v43;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v189 = v138;
  v190 = v152;
  v191 = OpaqueTypeMetadata2;
  v192 = (void *)WitnessTable;
  v193 = (uint64_t)v39;
  v45 = type metadata accessor for ForEach(255, &v189);
  v189 = v42;
  v190 = (char *)v43;
  v181 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v46 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v45);
  v47 = type metadata accessor for LazyHStack(255, v45, v46);
  v48 = sub_100005600(&qword_10049D5B8);
  v49 = type metadata accessor for ModifiedContent(255, v47, v48);
  v50 = type metadata accessor for ModifiedContent(255, v49, &type metadata for _PaddingLayout);
  v51 = sub_100005600(&qword_10049D5C0);
  v52 = type metadata accessor for ModifiedContent(255, v50, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _AppearanceActionModifier);
  v54 = sub_100005600(&qword_10049D5C8);
  v55 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v47);
  v56 = sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v179 = v55;
  v180 = v56;
  v177 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v49);
  v178 = &protocol witness table for _PaddingLayout;
  v57 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  v58 = sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v175 = v57;
  v176 = v58;
  v173 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v52);
  v174 = &protocol witness table for _AppearanceActionModifier;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v53);
  v60 = sub_1002DD77C();
  v189 = v53;
  v190 = (char *)v54;
  v191 = v59;
  v192 = (void *)v60;
  v61 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v62 = type metadata accessor for Optional(255, v152);
  v189 = v53;
  v190 = (char *)v54;
  v191 = v59;
  v192 = (void *)v60;
  v63 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v172 = v151[1];
  v64 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v62);
  v189 = v61;
  v190 = (char *)v62;
  v191 = v63;
  v192 = (void *)v64;
  v65 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v189 = v61;
  v190 = (char *)v62;
  v191 = v63;
  v192 = (void *)v64;
  v66 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v67 = type metadata accessor for PagingScrollView(255, v65, v66);
  v68 = sub_100005600(&qword_10049D5E8);
  v69 = type metadata accessor for ModifiedContent(255, v67, v68);
  v70 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v67);
  v71 = sub_10002FFB8(&qword_10049D5F0, &qword_10049D5E8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v170 = v70;
  v171 = v71;
  v72 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v69);
  v189 = v69;
  v190 = (char *)v72;
  v73 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v189 = v69;
  v190 = (char *)v72;
  v74 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v189 = v73;
  v190 = (char *)v74;
  v75 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v189 = v73;
  v190 = (char *)v74;
  v76 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v189 = v75;
  v190 = (char *)v76;
  v77 = swift_getOpaqueTypeMetadata2(255, &v189, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v189 = v75;
  v190 = (char *)v76;
  v78 = swift_getOpaqueTypeConformance2(&v189, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v79 = type metadata accessor for GeometryReader(255, v77, v78);
  v80 = type metadata accessor for ModifiedContent(0, v79, &type metadata for _FrameLayout);
  v168 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v79);
  v169 = &protocol witness table for _FrameLayout;
  v81 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v80);
  v82 = ScrollViewReader.init(content:)(sub_1002E0A74, v41, v80, v81);
  v84 = v83;
  v189 = v82;
  v190 = v83;
  v85 = v149;
  v86 = *(_QWORD *)((char *)v149 + *(int *)(v139 + 72) + 8);
  v87 = static Alignment.center.getter(v82);
  v89 = v88;
  v90 = type metadata accessor for ScrollViewReader(0, v80, v81);
  v91 = swift_getWitnessTable(&protocol conformance descriptor for ScrollViewReader<A>, v90);
  v92 = v86;
  v93 = v85;
  v94 = v89;
  v95 = (uint64_t)v152;
  View.frame(width:height:alignment:)(&v182, 0, 1, v92, 0, v87, v94, v90, v91);
  swift_release(v84);
  v96 = v183;
  v161 = (uint64_t *)v182;
  v162 = v183;
  v163 = v184;
  v164 = v185;
  v165 = v186;
  v166 = v187;
  v167 = v188;
  v97 = type metadata accessor for ModifiedContent(0, v90, &type metadata for _FrameLayout);
  v160[4] = v91;
  v160[5] = &protocol witness table for _FrameLayout;
  v139 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v97);
  (*(void (**)(uint64_t *, uint64_t **, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(&v189, &v161, v97);
  swift_release(v96);
  if (Array.count.getter(*v93, v95) < 2)
  {
    v120 = v143;
    v121 = v150;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v143, 1, 1, v150);
    v112 = v144;
    v160[2] = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v144);
    v160[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v121);
  }
  else
  {
    v98 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v99 = objc_msgSend(v98, "userInterfaceIdiom");

    if (v99 == (id)6)
      v100 = 0x4024000000000000;
    else
      v100 = 0x4020000000000000;
    v101 = __chkstk_darwin();
    v102 = v136;
    *(&v130 - 6) = v95;
    *(&v130 - 5) = v102;
    v103 = (uint64_t)v151;
    *(&v130 - 4) = v147;
    *(&v130 - 3) = v103;
    *(&v130 - 2) = v148;
    *(&v130 - 1) = (uint64_t)v93;
    v104 = static VerticalAlignment.center.getter(v101);
    v105 = v131;
    HStack.init(alignment:spacing:content:)(v104, v100, 0, sub_1002E0B08, &v130 - 8, v135, v130);
    sub_1002E0B14();
    v107 = v106;
    v109 = static Alignment.center.getter(v108);
    v111 = v110;
    v112 = v144;
    v113 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v144);
    v114 = v132;
    View.frame(width:height:alignment:)(v132, 0, 1, v107, 0, v109, v111, v112, v113);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v105, v112);
    v153 = v113;
    v154 = &protocol witness table for _FrameLayout;
    v115 = v150;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v150);
    v116 = v140;
    v117 = *(void (**)(_QWORD, _QWORD, _QWORD))(v140 + 16);
    v118 = v133;
    v117(v133, v114, v115);
    v119 = *(void (**)(_QWORD, _QWORD))(v116 + 8);
    v119(v114, v115);
    v120 = v143;
    v117(v143, v118, v115);
    v119(v118, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v120, 0, 1, v115);
  }
  v122 = v141;
  v123 = v142;
  v124 = *(void (**)(_QWORD, _QWORD, _QWORD))(v141 + 16);
  v125 = v145;
  v124(v142, v120, v145);
  v126 = *(void (**)(_QWORD, _QWORD))(v122 + 8);
  v126(v120, v125);
  v127 = v190;
  v182 = v189;
  v183 = v190;
  v184 = v191;
  v185 = (char)v192;
  v186 = v193;
  v187 = v194;
  v188 = v195;
  v161 = &v182;
  v124(v120, v123, v125);
  v162 = v120;
  swift_retain(v127);
  v160[0] = v97;
  v160[1] = v125;
  v158 = v139;
  v156 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v112);
  v157 = &protocol witness table for _FrameLayout;
  v155 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v150);
  v159 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v125);
  sub_1000388A8((uint64_t *)&v161, 2uLL, (uint64_t)v160);
  v126(v123, v125);
  v128 = swift_release(v190);
  ((void (*)(char *, uint64_t, __n128))v126)(v120, v125, v128);
  *(_QWORD *)&result = swift_release(v183).n128_u64[0];
  return result;
}

double sub_1002D8C54@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, _QWORD *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  void (*v85)(uint64_t *, uint64_t *, uint64_t);
  void *v86;
  double result;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  void *v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  _QWORD v101[3];
  char v102;
  _QWORD *v103;
  char v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t OpaqueTypeConformance2;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  char v121;
  _QWORD *v122;
  char v123;
  __int128 v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  _QWORD *v129;
  char v130;
  __int128 v131;

  v90 = (uint64_t)a7;
  v91 = a5;
  v97 = (void *)a3;
  v98 = a6;
  v95 = a8;
  v96 = (uint64_t)a4;
  v94 = a2;
  v92 = a1;
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  v89 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin();
  v88 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = a3;
  v126 = a4;
  v127 = a5;
  v128 = a6;
  v129 = a7;
  v17 = type metadata accessor for CarouselView(0, (uint64_t)&v125);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin();
  v21 = (char *)&v88 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v93 = v17;
  v22(v21, a2, v17);
  v23 = v88;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v88, v92, v14);
  v24 = *(unsigned __int8 *)(v18 + 80);
  v25 = (v24 + 56) & ~v24;
  v26 = *(unsigned __int8 *)(v15 + 80);
  v27 = (v19 + v26 + v25) & ~v26;
  v28 = (char *)swift_allocObject(&unk_1004625B8, v27 + v16, v24 | v26 | 7);
  v29 = v96;
  v30 = v97;
  *((_QWORD *)v28 + 2) = v97;
  *((_QWORD *)v28 + 3) = v29;
  v31 = v90;
  v32 = v98;
  *((_QWORD *)v28 + 4) = v91;
  *((_QWORD *)v28 + 5) = v32;
  *((_QWORD *)v28 + 6) = v31;
  v33 = &v28[v25];
  v34 = v28;
  v92 = v28;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v33, v21, v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v34[v27], v23, v89);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, v30, 0, 0);
  v35 = type metadata accessor for Array(255);
  v125 = v96;
  v126 = &type metadata for Int;
  v127 = v31;
  v128 = &protocol witness table for Int;
  v36 = type metadata accessor for IDView(255, &v125);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v36);
  v125 = v36;
  v126 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v39 = swift_getWitnessTable(&protocol conformance descriptor for [A], v35);
  v125 = v35;
  v126 = v30;
  v127 = OpaqueTypeMetadata2;
  v128 = (void *)v39;
  v129 = v98;
  v40 = type metadata accessor for ForEach(255, &v125);
  v125 = v36;
  v126 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v40);
  v42 = type metadata accessor for LazyHStack(255, v40, v41);
  v43 = sub_100005600(&qword_10049D5B8);
  v44 = type metadata accessor for ModifiedContent(255, v42, v43);
  v45 = type metadata accessor for ModifiedContent(255, v44, &type metadata for _PaddingLayout);
  v46 = sub_100005600(&qword_10049D5C0);
  v47 = type metadata accessor for ModifiedContent(255, v45, v46);
  v48 = type metadata accessor for ModifiedContent(255, v47, &type metadata for _AppearanceActionModifier);
  v49 = sub_100005600(&qword_10049D5C8);
  v50 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v42);
  v51 = sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v115 = v50;
  v116 = v51;
  v113 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
  v114 = &protocol witness table for _PaddingLayout;
  v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v45);
  v53 = sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v111 = v52;
  v112 = v53;
  v109 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v110 = &protocol witness table for _AppearanceActionModifier;
  v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v48);
  v55 = sub_1002DD77C();
  v125 = v48;
  v126 = (void *)v49;
  v127 = v54;
  v128 = (void *)v55;
  v56 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v57 = type metadata accessor for Optional(255, v97);
  v125 = v48;
  v126 = (void *)v49;
  v127 = v54;
  v128 = (void *)v55;
  v58 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v108 = v98[1];
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v57);
  v125 = v56;
  v126 = (void *)v57;
  v127 = v58;
  v128 = (void *)v59;
  v60 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v125 = v56;
  v126 = (void *)v57;
  v127 = v58;
  v128 = (void *)v59;
  v61 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v62 = type metadata accessor for PagingScrollView(255, v60, v61);
  v63 = sub_100005600(&qword_10049D5E8);
  v64 = type metadata accessor for ModifiedContent(255, v62, v63);
  v65 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v62);
  v66 = sub_10002FFB8(&qword_10049D5F0, &qword_10049D5E8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v106 = v65;
  v107 = v66;
  v67 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v64);
  v125 = v64;
  v126 = (void *)v67;
  v68 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v125 = v64;
  v126 = (void *)v67;
  v69 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v125 = v68;
  v126 = (void *)v69;
  v70 = swift_getOpaqueTypeMetadata2(255, &v125, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v125 = v68;
  v126 = (void *)v69;
  v71 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v125 = v70;
  v126 = (void *)v71;
  v72 = swift_getOpaqueTypeMetadata2(0, &v125, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v125 = v70;
  v126 = (void *)v71;
  v73 = swift_getOpaqueTypeConformance2(&v125, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v74 = GeometryReader.init(content:)(sub_1002E0C60, v92, v72, v73);
  v76 = v75;
  v125 = v74;
  v126 = v75;
  v77 = *(_QWORD *)(v94 + *(int *)(v93 + 72) + 8);
  v78 = static Alignment.center.getter(v74);
  v80 = v79;
  v81 = type metadata accessor for GeometryReader(0, v72, v73);
  v82 = swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v81);
  View.frame(width:height:alignment:)(&v118, 0, 1, v77, 0, v78, v80, v81, v82);
  swift_release(v76);
  v83 = v119;
  v101[0] = v118;
  v101[1] = v119;
  v101[2] = v120;
  v102 = v121;
  v103 = v122;
  v104 = v123;
  v105 = v124;
  v84 = type metadata accessor for ModifiedContent(0, v81, &type metadata for _FrameLayout);
  v99 = v82;
  v100 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v84);
  v85 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
  v85(&v125, v101, v84);
  swift_release(v83);
  v86 = v126;
  v118 = v125;
  v119 = v126;
  v120 = v127;
  v121 = (char)v128;
  v122 = v129;
  v123 = v130;
  v124 = v131;
  v85(v95, &v118, v84);
  *(_QWORD *)&result = swift_release(v86).n128_u64[0];
  return result;
}

uint64_t sub_1002D9384@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  double v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  int v78;
  int v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _BOOL8 v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  void (*v92)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  _QWORD *v124;
  uint64_t v125;
  char v126[8];
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  _QWORD *v132;
  double v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t OpaqueTypeConformance2;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  _QWORD *v151;

  v115 = a8;
  v118 = a6;
  v116 = (void *)a5;
  v119 = a3;
  v124 = a2;
  v114 = a1;
  v122 = a9;
  v121 = type metadata accessor for ScrollIndicatorVisibility(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v123 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrollPagingBehavior(0);
  __chkstk_darwin();
  v117 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a4, 0, 0);
  v15 = type metadata accessor for Array(255);
  v147 = a5;
  v148 = &type metadata for Int;
  v149 = a8;
  v150 = &protocol witness table for Int;
  v16 = type metadata accessor for IDView(255, &v147);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v16);
  v147 = v16;
  v148 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v147, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for [A], v15);
  v147 = v15;
  v148 = a4;
  v125 = (uint64_t)a4;
  v149 = OpaqueTypeMetadata2;
  v150 = (void *)v19;
  v151 = a7;
  v20 = a7;
  v21 = type metadata accessor for ForEach(255, &v147);
  v147 = v16;
  v148 = (void *)WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v21);
  v23 = type metadata accessor for LazyHStack(255, v21, v22);
  v24 = sub_100005600(&qword_10049D5B8);
  v25 = type metadata accessor for ModifiedContent(255, v23, v24);
  v26 = type metadata accessor for ModifiedContent(255, v25, &type metadata for _PaddingLayout);
  v27 = sub_100005600(&qword_10049D5C0);
  v28 = type metadata accessor for ModifiedContent(255, v26, v27);
  v29 = type metadata accessor for ModifiedContent(255, v28, &type metadata for _AppearanceActionModifier);
  v30 = sub_100005600(&qword_10049D5C8);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v23);
  v32 = sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v144 = v31;
  v145 = v32;
  v142 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v143 = &protocol witness table for _PaddingLayout;
  v33 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v26);
  v34 = sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v140 = v33;
  v141 = v34;
  v138 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v139 = &protocol witness table for _AppearanceActionModifier;
  v35 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v29);
  v36 = sub_1002DD77C();
  v147 = v29;
  v148 = (void *)v30;
  v149 = v35;
  v150 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v147, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v38 = type metadata accessor for Optional(255, a4);
  v147 = v29;
  v148 = (void *)v30;
  v149 = v35;
  v150 = (void *)v36;
  v39 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v40 = v20;
  v137 = v20[1];
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v38);
  v147 = v37;
  v148 = (void *)v38;
  v149 = v39;
  v150 = (void *)v41;
  v42 = swift_getOpaqueTypeMetadata2(255, &v147, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v98 = v42;
  v147 = v37;
  v148 = (void *)v38;
  v149 = v39;
  v150 = (void *)v41;
  v97 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v43 = type metadata accessor for PagingScrollView(0, v42, v97);
  v99 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin();
  v45 = (char *)&v94 - v44;
  v46 = sub_100005600(&qword_10049D5E8);
  v47 = type metadata accessor for ModifiedContent(0, v43, v46);
  v112 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v95 = (char *)&v94 - v48;
  v49 = swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v43);
  v96 = v49;
  v50 = sub_10002FFB8(&qword_10049D5F0, &qword_10049D5E8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v135 = v49;
  v136 = v50;
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  v147 = v47;
  v148 = (void *)v51;
  v52 = swift_getOpaqueTypeMetadata2(0, &v147, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v110 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v109 = (char *)&v94 - v53;
  v113 = v47;
  v147 = v47;
  v148 = (void *)v51;
  v106 = v51;
  v54 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v147 = v52;
  v148 = (void *)v54;
  v55 = swift_getOpaqueTypeMetadata2(0, &v147, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v107 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v105 = (char *)&v94 - v56;
  v111 = v52;
  v147 = v52;
  v148 = (void *)v54;
  v104 = v54;
  v57 = swift_getOpaqueTypeConformance2(&v147, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v108 = v55;
  v147 = v55;
  v148 = (void *)v57;
  v101 = v57;
  v58 = swift_getOpaqueTypeMetadata2(0, &v147, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v103 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin();
  v100 = (char *)&v94 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __chkstk_darwin();
  v102 = (char *)&v94 - v61;
  v62 = GeometryProxy.size.getter(v60);
  v63 = v125;
  v64 = v116;
  v147 = v125;
  v148 = v116;
  v65 = v118;
  v149 = v118;
  v150 = v40;
  v66 = v40;
  v67 = v115;
  v151 = (_QWORD *)v115;
  v68 = type metadata accessor for CarouselView(0, (uint64_t)&v147);
  v69 = v124;
  v70 = (v62 - *(double *)((char *)v124 + *(int *)(v68 + 72))) * 0.5;
  v71 = v117;
  static ScrollPagingBehavior.childPaging.getter();
  v127 = v63;
  v128 = v64;
  v72 = v95;
  v129 = v65;
  v130 = v66;
  v131 = v67;
  v132 = v69;
  v133 = v70;
  v134 = v119;
  PagingScrollView.init(behavior:axis:content:)(v71, 0, sub_1002E0D20, v126, v98, v97);
  v147 = 0x6C6C6F726373;
  v148 = (void *)0xE600000000000000;
  View.coordinateSpace<A>(name:)(&v147, v43, &type metadata for String, v96, &protocol witness table for String);
  v73 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v45, v43);
  v74 = static ScrollIndicatorVisibility.hidden.getter(v73);
  v75 = static Axis.Set.vertical.getter(v74);
  v76 = static Axis.Set.horizontal.getter();
  v77 = Axis.Set.init(rawValue:)(0);
  v78 = Axis.Set.init(rawValue:)(v77);
  if (Axis.Set.init(rawValue:)(v78 & v75) != v75)
    v77 = Axis.Set.init(rawValue:)(v77 | v75);
  v79 = Axis.Set.init(rawValue:)(v77);
  if (Axis.Set.init(rawValue:)(v79 & v76) != v76)
    v77 = Axis.Set.init(rawValue:)(v77 | v76);
  v80 = v109;
  v81 = v123;
  v82 = v77;
  v83 = v113;
  View.scrollIndicators(_:axes:)(v123, v82, v113, v106);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v81, v121);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v72, v83);
  v84 = v105;
  v85 = v111;
  View.scrollClipDisabled(_:)(1, v111, v104);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v80, v85);
  v86 = Array.count.getter(*v124, v125) < 2;
  v87 = v100;
  v88 = v108;
  View.scrollDisabled(_:)(v86, v108, v101);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v88);
  v89 = v103;
  v90 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  v91 = v102;
  v90(v102, v87, v58);
  v92 = *(void (**)(char *, uint64_t))(v89 + 8);
  v92(v87, v58);
  v90(v122, v91, v58);
  return ((uint64_t (*)(char *, uint64_t))v92)(v91, v58);
}

uint64_t sub_1002D9D3C@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, double (*a3)@<D0>(uint64_t a1@<X8>)@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>, double a9@<D0>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double (*v21)@<D0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  void *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  __n128 v89;
  char *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _QWORD *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  __n128 v105;
  __n128 v106;
  void *v107;
  uint64_t v108;
  double (*v109)@<D0>(uint64_t@<X8>);
  uint64_t v110;
  double (*v111)@<D0>(uint64_t@<X8>);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double (*v115)@<D0>(uint64_t@<X8>);
  void *v116;
  _QWORD *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  void *v133;
  _QWORD *v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  __n128 v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  _QWORD *v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  _QWORD *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  double (*v198)@<D0>(uint64_t@<X8>);
  _QWORD *v199;
  uint64_t v200;
  void *v201;
  uint64_t v202;
  char v203[8];
  double (*v204)@<D0>(uint64_t@<X8>);
  void *v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD v210[11];
  double (*v211)@<D0>(uint64_t@<X8>);
  void *v212;
  uint64_t v213;
  void *v214;
  _QWORD *v215;

  v202 = a5;
  v188 = a2;
  v197 = a1;
  v186 = a8;
  v183 = type metadata accessor for Binding(255, a3);
  v182 = type metadata accessor for Optional(0, v183);
  v180 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin();
  v181 = (char *)&v147 - v15;
  v16 = type metadata accessor for Optional(0, a3);
  v184 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v187 = (uint64_t *)((char *)&v147 - v17);
  v178 = type metadata accessor for ScrollViewProxy(0);
  v177 = *(_QWORD *)(v178 - 8);
  v179 = *(_QWORD *)(v177 + 64);
  __chkstk_darwin();
  v176 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = a3;
  v212 = a4;
  v201 = a4;
  v213 = a5;
  v214 = a6;
  v215 = (_QWORD *)a7;
  v200 = a7;
  v196 = type metadata accessor for CarouselView(0, (uint64_t)&v211);
  v190 = *(_QWORD **)(v196 - 8);
  v195 = v190[8];
  __chkstk_darwin();
  v164 = (char *)&v147 - v19;
  type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v194 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3;
  v198 = a3;
  swift_getTupleTypeMetadata2(255, &type metadata for Int, a3, 0, 0);
  v22 = type metadata accessor for Array(255);
  v211 = (double (*)@<D0>(uint64_t@<X8>))a4;
  v212 = &type metadata for Int;
  v213 = a7;
  v214 = &protocol witness table for Int;
  v23 = type metadata accessor for IDView(255, &v211);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v23);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v23;
  v212 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v211, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for [A], v22);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v22;
  v212 = v21;
  v213 = OpaqueTypeMetadata2;
  v214 = (void *)v26;
  v215 = a6;
  v27 = type metadata accessor for ForEach(255, &v211);
  v211 = (double (*)@<D0>(uint64_t@<X8>))v23;
  v212 = (void *)WitnessTable;
  v210[10] = swift_getOpaqueTypeConformance2(&v211, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v153 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v27);
  v28 = type metadata accessor for LazyHStack(0, v27, v153);
  v189 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v154 = (char *)&v147 - v29;
  v30 = sub_100005600(&qword_10049D5B8);
  v148 = v28;
  v31 = type metadata accessor for ModifiedContent(0, v28, v30);
  v159 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v155 = (char *)&v147 - v32;
  v150 = v31;
  v33 = type metadata accessor for ModifiedContent(0, v31, &type metadata for _PaddingLayout);
  v160 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin();
  v156 = (char *)&v147 - v34;
  v35 = sub_100005600(&qword_10049D5C0);
  v152 = v33;
  v36 = type metadata accessor for ModifiedContent(0, v33, v35);
  v162 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v191 = (char *)&v147 - v37;
  v158 = v36;
  v38 = type metadata accessor for ModifiedContent(0, v36, &type metadata for _AppearanceActionModifier);
  v172 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin();
  v192 = (char *)&v147 - v39;
  v40 = sub_100005600(&qword_10049D5C8);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v28);
  v42 = sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v210[8] = v41;
  v210[9] = v42;
  v149 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v210[6] = v149;
  v210[7] = &protocol witness table for _PaddingLayout;
  v43 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v33);
  v151 = v43;
  v44 = sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  v210[4] = v43;
  v210[5] = v44;
  v157 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v36);
  v210[2] = v157;
  v210[3] = &protocol witness table for _AppearanceActionModifier;
  v45 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v38);
  v46 = sub_1002DD77C();
  v211 = (double (*)@<D0>(uint64_t@<X8>))v38;
  v212 = (void *)v40;
  v213 = v45;
  v214 = (void *)v46;
  v47 = swift_getOpaqueTypeMetadata2(0, &v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v174 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v193 = (char *)&v147 - v48;
  v173 = v38;
  v211 = (double (*)@<D0>(uint64_t@<X8>))v38;
  v212 = (void *)v40;
  v169 = v40;
  v163 = v45;
  v213 = v45;
  v214 = (void *)v46;
  v161 = v46;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v199 = a6;
  v210[1] = a6[1];
  v50 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v16);
  v175 = v47;
  v211 = (double (*)@<D0>(uint64_t@<X8>))v47;
  v212 = (void *)v16;
  v185 = v16;
  v167 = OpaqueTypeConformance2;
  v213 = OpaqueTypeConformance2;
  v214 = (void *)v50;
  v165 = v50;
  v171 = swift_getOpaqueTypeMetadata2(0, &v211, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin();
  v166 = (char *)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin();
  v168 = (char *)&v147 - v53;
  v54 = static VerticalAlignment.center.getter(v52);
  v55 = v196;
  v56 = *(_QWORD *)((char *)v197 + *(int *)(v196 + 80));
  v204 = v198;
  v205 = v201;
  v206 = v202;
  v207 = a6;
  v208 = v200;
  v209 = v197;
  v57 = v194;
  v58 = v153;
  sub_1002DB4AC();
  v59 = v154;
  v60 = LazyHStack.init(alignment:spacing:pinnedViews:content:)(v54, v56, 0, v57, sub_1002E0D38, v203, v27, v58);
  v211 = sub_1002DB510;
  v212 = 0;
  v61 = static Alignment.center.getter(v60);
  v63 = v62;
  v64 = sub_100005574(&qword_10049D760);
  v65 = sub_10002FFB8(&qword_10049D768, &qword_10049D760, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
  v66 = v155;
  v67 = v55;
  v68 = v63;
  v69 = v148;
  View.background<A>(_:alignment:)(&v211, v61, v68, v148, v64, v41, v65);
  v70 = v164;
  v71 = (*(uint64_t (**)(char *, uint64_t))(v189 + 8))(v59, v69);
  v72 = static Edge.Set.horizontal.getter(v71);
  v73 = v156;
  v74 = v150;
  View.padding(_:_:)(v72, *(_QWORD *)&a9, 0, v150, v149);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v66, v74);
  v75 = v190;
  v76 = (_QWORD *)v190[2];
  v77 = v67;
  ((void (*)(char *, _QWORD *, uint64_t))v76)(v70, v197, v67);
  v78 = *((unsigned __int8 *)v75 + 80);
  v189 = ((v78 + 56) & ~v78) + v195;
  v79 = (v78 + 56) & ~v78;
  v194 = (char *)v79;
  v195 = v78 | 7;
  v80 = (_QWORD *)swift_allocObject(&unk_1004625E0, v189, v78 | 7);
  v81 = v201;
  v80[2] = v198;
  v80[3] = v81;
  v82 = v199;
  v80[4] = v202;
  v80[5] = v82;
  v83 = v200;
  v80[6] = v200;
  v84 = (char *)v80 + v79;
  v85 = (void (*)(char *, char *, uint64_t))v75[4];
  v85(v84, v70, v67);
  v86 = sub_1002E0DE8();
  v87 = sub_1002E0E2C();
  v88 = v152;
  View.onPreferenceChange<A>(_:perform:)(&type metadata for ScrollViewOffsetKey, sub_1002E0D5C, v80, v152, &type metadata for ScrollViewOffsetKey, v151, v86, v87);
  v89 = swift_release(v80);
  v90 = v73;
  v91 = v83;
  (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v90, v88, v89);
  v92 = v197;
  v190 = v76;
  ((void (*)(char *, _QWORD *, uint64_t))v76)(v70, v197, v77);
  v93 = v177;
  v94 = v176;
  v95 = v178;
  (*(void (**)(char *, _QWORD, uint64_t))(v177 + 16))(v176, v188, v178);
  v96 = *(unsigned __int8 *)(v93 + 80);
  v97 = (v189 + v96) & ~v96;
  v98 = swift_allocObject(&unk_100462608, v97 + v179, v195 | v96);
  v99 = v201;
  *(_QWORD *)(v98 + 16) = v198;
  *(_QWORD *)(v98 + 24) = v99;
  v100 = v199;
  *(_QWORD *)(v98 + 32) = v202;
  *(_QWORD *)(v98 + 40) = v100;
  v101 = &v194[v98];
  *(_QWORD *)(v98 + 48) = v91;
  v102 = v70;
  v188 = v85;
  v85(v101, v70, v196);
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v98 + v97, v94, v95);
  v103 = v158;
  v104 = v191;
  View.onAppear(perform:)(sub_1002E10A8, v98, v158, v157);
  v105 = swift_release(v98);
  (*(void (**)(char *, uint64_t, __n128))(v162 + 8))(v104, v103, v105);
  v107 = (void *)v92[2];
  if (v107)
  {
    v108 = v92[3];
    v109 = (double (*)@<D0>(uint64_t@<X8>))v92[1];
    v211 = v109;
    v212 = v107;
    v213 = v108;
    swift_retain(v109);
    swift_retain(v107);
    v110 = sub_100005574(&qword_10049D748);
    Binding.wrappedValue.getter(v210, v110);
    swift_release(v107);
    v106 = swift_release(v109);
    v111 = (double (*)@<D0>(uint64_t@<X8>))v210[0];
  }
  else
  {
    v111 = 0;
  }
  v211 = v111;
  LOBYTE(v212) = v107 == 0;
  v112 = v196;
  ((void (*)(char *, _QWORD *, uint64_t, __n128))v190)(v70, v92, v196, v106);
  v113 = v189;
  v114 = swift_allocObject(&unk_100462630, v189, v195);
  v115 = v198;
  v116 = v201;
  *(_QWORD *)(v114 + 16) = v198;
  *(_QWORD *)(v114 + 24) = v116;
  v117 = v199;
  *(_QWORD *)(v114 + 32) = v202;
  *(_QWORD *)(v114 + 40) = v117;
  v118 = &v194[v114];
  *(_QWORD *)(v114 + 48) = v200;
  v188(v118, v102, v112);
  v119 = v173;
  v120 = v192;
  View.onChange<A>(of:initial:_:)(&v211, 0, sub_1002E1154, v114, v173, v169, v163, v161);
  v121 = swift_release(v114);
  (*(void (**)(char *, uint64_t, __n128))(v172 + 8))(v120, v119, v121);
  v122 = (char *)v92 + *(int *)(v112 + 64);
  v123 = v180;
  v124 = v112;
  v125 = v181;
  v126 = v182;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v181, v122, v182);
  v127 = v102;
  v128 = v183;
  v129 = *(_QWORD *)(v183 - 8);
  v130 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v183) != 1)
  {
    Binding.wrappedValue.getter(v187, v128);
    v130 = 0;
    v123 = v129;
    v126 = v128;
  }
  (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v126);
  v131 = v187;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, double (*)@<D0>(uint64_t@<X8>)))(*((_QWORD *)v115 - 1)
                                                                                               + 56))(v187, v130, 1, v115);
  ((void (*)(char *, _QWORD *, uint64_t))v190)(v127, v197, v124);
  v132 = swift_allocObject(&unk_100462658, v113, v195);
  v133 = v201;
  *(_QWORD *)(v132 + 16) = v115;
  *(_QWORD *)(v132 + 24) = v133;
  v134 = v199;
  *(_QWORD *)(v132 + 32) = v202;
  *(_QWORD *)(v132 + 40) = v134;
  v135 = &v194[v132];
  *(_QWORD *)(v132 + 48) = v200;
  v188(v135, v127, v124);
  v136 = v166;
  v137 = v175;
  v138 = v185;
  v139 = v193;
  View.onChange<A>(of:initial:_:)(v131, 0, sub_1002E11EC, v132, v175, v185, v167, v165);
  v140 = swift_release(v132);
  (*(void (**)(_QWORD *, uint64_t, __n128))(v184 + 8))(v131, v138, v140);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v139, v137);
  v141 = v170;
  v142 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
  v143 = v168;
  v144 = v171;
  v142(v168, v136, v171);
  v145 = *(void (**)(char *, uint64_t))(v141 + 8);
  v145(v136, v144);
  v142(v186, v143, v144);
  return ((uint64_t (*)(char *, uint64_t))v145)(v143, v144);
}

uint64_t sub_1002DAC10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t OpaqueTypeConformance2;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t WitnessTable;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  void *v74;
  unint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;

  v51 = a4;
  v65 = a7;
  *(_QWORD *)&v79 = a2;
  *((_QWORD *)&v79 + 1) = a3;
  v50 = a3;
  v80 = a4;
  v81 = a5;
  v82 = a6;
  v56 = type metadata accessor for CarouselView(0, (uint64_t)&v79);
  v55 = *(_QWORD *)(v56 - 8);
  v58 = *(_QWORD *)(v55 + 64);
  __chkstk_darwin();
  v53 = (char *)&v48 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v62 = v14;
  *(_QWORD *)&v79 = a3;
  *((_QWORD *)&v79 + 1) = &type metadata for Int;
  v80 = a6;
  v81 = &protocol witness table for Int;
  v15 = a6;
  v16 = type metadata accessor for IDView(255, &v79);
  v59 = v16;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v16);
  *(_QWORD *)&v79 = v16;
  *((_QWORD *)&v79 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v79, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v61 = OpaqueTypeMetadata2;
  v60 = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v79 = v14;
  *((_QWORD *)&v79 + 1) = a2;
  v80 = OpaqueTypeMetadata2;
  v81 = (void *)v60;
  v82 = (uint64_t)a5;
  v63 = type metadata accessor for ForEach(0, &v79);
  v64 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v52 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v54 = (char *)&v48 - v19;
  *(_QWORD *)&v77 = *a1;
  v20 = v77;
  v21 = type metadata accessor for Array(0);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
  RandomAccessCollection<>.indices.getter(&v79, v21, v22, &protocol witness table for Int);
  v72 = v79;
  v76 = v20;
  v23 = sub_100005574(&qword_10049D728);
  v24 = sub_1002E0BC8();
  v74 = &protocol witness table for Int;
  v75 = v24;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v23);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
  zip<A, B>(_:_:)(&v77, &v72, &v76, v23, v21, v25, v26);
  v72 = v77;
  v73 = v78;
  *(_QWORD *)&v79 = v23;
  *((_QWORD *)&v79 + 1) = v21;
  v80 = v25;
  v81 = (void *)v26;
  v27 = type metadata accessor for Zip2Sequence(0, &v79);
  v28 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v27);
  *(_QWORD *)&v77 = Array.init<A>(_:)(&v72, TupleTypeMetadata2, v27, v28);
  v29 = v50;
  v66 = a2;
  v67 = v50;
  v30 = v51;
  v68 = v51;
  v69 = a5;
  v31 = a5;
  v70 = v15;
  KeyPath = swift_getKeyPath(&unk_10039CC00);
  v32 = v55;
  v33 = v53;
  v34 = a1;
  v35 = v56;
  (*(void (**)(char *, _QWORD *, uint64_t))(v55 + 16))(v53, v34, v56);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = (v36 + 56) & ~v36;
  v38 = (char *)swift_allocObject(&unk_100462680, v37 + v58, v36 | 7);
  *((_QWORD *)v38 + 2) = a2;
  *((_QWORD *)v38 + 3) = v29;
  *((_QWORD *)v38 + 4) = v30;
  *((_QWORD *)v38 + 5) = v31;
  *((_QWORD *)v38 + 6) = v15;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v38[v37], v33, v35);
  v39 = (_QWORD *)swift_allocObject(&unk_1004626A8, 72, 7);
  v39[2] = a2;
  v39[3] = v29;
  v39[4] = v30;
  v39[5] = v31;
  v39[6] = v15;
  v39[7] = sub_1002E1474;
  v39[8] = v38;
  *(_QWORD *)&v79 = v59;
  *((_QWORD *)&v79 + 1) = WitnessTable;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v41 = v52;
  ForEach<>.init(_:id:content:)(&v77, KeyPath, sub_1002E0C1C, v39, v62, v61, v60, v31, OpaqueTypeConformance2);
  v71 = OpaqueTypeConformance2;
  v42 = v63;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v63);
  v43 = v64;
  v44 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  v45 = v54;
  v44(v54, v41, v42);
  v46 = *(void (**)(char *, uint64_t))(v43 + 8);
  v46(v41, v42);
  v44(v65, v45, v42);
  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v42);
}

uint64_t sub_1002DB0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  void *v32;
  char *v33;
  __n128 v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t WitnessTable;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;

  v51 = a6;
  v52 = a7;
  v50 = a4;
  v55 = a1;
  v56 = a4;
  v53 = a9;
  v57 = a5;
  v58 = a6;
  v59 = a7;
  v60 = a8;
  v42 = a8;
  v13 = type metadata accessor for CarouselView(0, (uint64_t)&v56);
  v14 = *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64);
  v47 = *(_QWORD *)(v13 - 8);
  v48 = v14;
  __chkstk_darwin();
  v54 = (char *)&v40 - v15;
  v44 = *((_QWORD *)a5 - 1);
  __chkstk_darwin();
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = (uint64_t)a5;
  v57 = &type metadata for Int;
  v58 = a8;
  v59 = &protocol witness table for Int;
  v18 = type metadata accessor for IDView(0, &v56);
  v49 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v41 = (char *)&v40 - v19;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v18);
  v56 = v18;
  v57 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v56, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v46 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v43 = (char *)&v40 - v23;
  (*(void (**)(uint64_t))(a3 + *(int *)(v13 + 76)))(a2);
  v56 = v55;
  v24 = v42;
  View.id<A>(_:)(&v56, a5, &type metadata for Int, v42, &protocol witness table for Int);
  (*(void (**)(char *, void *))(v44 + 8))(v17, a5);
  v25 = v47;
  v26 = a3;
  v27 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v54, v26, v13);
  v28 = *(unsigned __int8 *)(v25 + 80);
  v29 = (v28 + 56) & ~v28;
  v30 = (v48 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (char *)swift_allocObject(&unk_1004626D0, v30 + 8, v28 | 7);
  *((_QWORD *)v31 + 2) = v50;
  *((_QWORD *)v31 + 3) = a5;
  v32 = v52;
  *((_QWORD *)v31 + 4) = v51;
  *((_QWORD *)v31 + 5) = v32;
  *((_QWORD *)v31 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v31[v29], v54, v27);
  *(_QWORD *)&v31[v30] = v55;
  v33 = v41;
  View.onTapGesture(count:perform:)(1, sub_1002E0C24, v31, v18, WitnessTable);
  v34 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v33, v18, v34);
  v35 = v46;
  v36 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v37 = v43;
  v36(v43, v22, OpaqueTypeMetadata2);
  v38 = *(void (**)(char *, uint64_t))(v35 + 8);
  v38(v22, OpaqueTypeMetadata2);
  v36(v53, v37, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, OpaqueTypeMetadata2);
}

double sub_1002DB414(uint64_t a1, char a2, uint64_t a3, __n128 a4)
{
  uint64_t v4;
  uint64_t v7;
  __int128 v8;
  double result;
  _OWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = 0;
  if ((a2 & 1) != 0)
    v7 = static Animation.default.getter(a1, a4);
  __chkstk_darwin();
  v8 = *(_OWORD *)(a3 + 32);
  v10[1] = *(_OWORD *)(a3 + 16);
  v10[2] = v8;
  v11 = *(_QWORD *)(a3 + 48);
  v12 = v4;
  v13 = a1;
  withAnimation<A>(_:_:)(v7, sub_1002E0C28, v10, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1002DB4AC()
{
  uint64_t v0;
  uint64_t v1;
  int v3;

  v0 = type metadata accessor for PinnedScrollableViews(0);
  v3 = 0;
  v1 = sub_100006924(&qword_10049B960, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  return dispatch thunk of OptionSet.init(rawValue:)(&v3, v0, v1);
}

double sub_1002DB510@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double result;
  _QWORD v10[2];

  v2 = type metadata accessor for NamedCoordinateSpace(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static Color.clear.getter(v4);
  v10[0] = 0x6C6C6F726373;
  v10[1] = 0xE600000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  v8 = GeometryProxy.frame<A>(in:)(v6, v2, &protocol witness table for NamedCoordinateSpace);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  result = -v8;
  *(_QWORD *)a1 = v7;
  *(double *)(a1 + 8) = -v8;
  return result;
}

uint64_t sub_1002DB5F4(double *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t result;
  double v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[5];

  v29 = a7;
  v13 = type metadata accessor for LayoutDirection(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v30[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v30[-1] - v17;
  v19 = *a1;
  v20 = a3;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  v30[3] = a6;
  v30[4] = v29;
  result = type metadata accessor for CarouselView(0, (uint64_t)v30);
  v22 = ceil(v19 / *(double *)((char *)a2 + *(int *)(result + 100)));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v23 = result;
  v24 = (uint64_t)v22;
  sub_1002BDFE4((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for LayoutDirection.rightToLeft(_:), v13);
  v25 = static LayoutDirection.== infix(_:_:)(v18, v16);
  v26 = *(void (**)(char *, uint64_t))(v14 + 8);
  v26(v16, v13);
  v26(v18, v13);
  if ((v25 & 1) == 0)
    return sub_1002DB7DC(v24, v23);
  result = Array.count.getter(*a2, v20);
  v27 = result - 1;
  if (__OFSUB__(result, 1))
    goto LABEL_11;
  v28 = __OFSUB__(v27, v24);
  v24 = v27 - v24;
  if (!v28)
    return sub_1002DB7DC(v24, v23);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1002DB7B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002BDFE4(a1);
}

uint64_t sub_1002DB7DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void (**v22)(uint64_t, char *);
  void (*v23)(uint64_t, char *);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *);
  uint64_t v40;
  __int128 *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v46 = type metadata accessor for Binding(255, v6);
  v7 = type metadata accessor for Optional(0, v46);
  v43 = *(_QWORD *)(v7 - 8);
  v44 = v7;
  __chkstk_darwin();
  v45 = (char *)&v37 - v8;
  v9 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  *(_QWORD *)&v47 = *v2;
  v12 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v12);
  result = Collection.isEmpty.getter(v12, WitnessTable);
  if ((result & 1) != 0)
    return result;
  result = Array.count.getter(v11, v6);
  v15 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v15 >= (a1 & ~(a1 >> 63)))
    v16 = a1 & ~(a1 >> 63);
  else
    v16 = result - 1;
  v17 = (__int128 *)((char *)v2 + *(int *)(a2 + 92));
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v41 = v17;
  *(_QWORD *)&v47 = v19;
  *((_QWORD *)&v47 + 1) = v18;
  v20 = sub_100005574(&qword_10049D740);
  result = (uint64_t)State.wrappedValue.getter(&v49, v20);
  if (v16 != v49)
  {
    *(_QWORD *)&v47 = v19;
    *((_QWORD *)&v47 + 1) = v18;
    v49 = v16;
    State.wrappedValue.setter(&v49, v20);
    v22 = (void (**)(uint64_t, char *))((char *)v2 + *(int *)(a2 + 88));
    v23 = *v22;
    v24 = v42;
    if (*v22)
    {
      v25 = (uint64_t)v22[1];
      v39 = v23;
      v40 = v25;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      v38 = v49;
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      State.wrappedValue.getter(&v49, v20);
      Array.subscript.getter(v49, v11, v6);
      v39(v38, v24);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v6);
    }
    v40 = v20;
    v26 = v2[2];
    if (v26)
    {
      v27 = v2[3];
      v28 = v2[1];
      *(_QWORD *)&v47 = v19;
      *((_QWORD *)&v47 + 1) = v18;
      swift_retain(v28);
      swift_retain(v26);
      State.wrappedValue.getter(&v49, v40);
      *(_QWORD *)&v47 = v28;
      *((_QWORD *)&v47 + 1) = v26;
      v48 = v27;
      v29 = sub_100005574(&qword_10049D748);
      Binding.wrappedValue.setter(&v49, v29);
      swift_release(v26);
      v21 = swift_release(v28);
    }
    v30 = (char *)v2 + *(int *)(a2 + 64);
    v32 = v43;
    v31 = v44;
    v33 = v45;
    (*(void (**)(char *, char *, uint64_t, __n128))(v43 + 16))(v45, v30, v44, v21);
    v34 = v46;
    v35 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v46) != 1)
    {
      v36 = *v3;
      v47 = *v41;
      State.wrappedValue.getter(&v49, v40);
      Array.subscript.getter(v49, v36, v6);
      Binding.wrappedValue.setter(v24, v34);
      v32 = v35;
      v31 = v34;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  return result;
}

double sub_1002DBAD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t *, uint64_t);
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double result;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t WitnessTable;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  __n128 v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v83 = a2;
  v80 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v79 = (char **)((char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for Binding(0, v14);
  v84 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v77 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v81 = (char *)&v73 - v17;
  v82 = a3;
  v86 = a3;
  v87 = a4;
  v88 = a5;
  v89 = a6;
  v78 = a6;
  v90 = a7;
  v18 = type metadata accessor for CarouselView(0, (uint64_t)&v86);
  v75 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v73 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v74 = (char *)&v73 - v20;
  v21 = sub_100005600((uint64_t *)&unk_10049D780);
  v22 = type metadata accessor for Optional(255, v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v21, v22, 0, 0);
  v76 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  v25 = (uint64_t *)((char *)&v73 - v24);
  sub_100005574(&qword_10049D5B0);
  __chkstk_darwin();
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v73 - v28;
  v30 = type metadata accessor for ScrollViewProxy(0);
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v83, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_100014A7C((uint64_t)v29, (uint64_t)v27, &qword_10049D5B0);
  v32 = sub_100005574(&qword_10049D720);
  State.wrappedValue.setter(v27, v32);
  sub_100008758((uint64_t)v29, &qword_10049D5B0);
  v34 = a1[1];
  v33 = a1[2];
  v35 = a1[3];
  v83 = v18;
  v36 = *(int *)(v18 + 64);
  v37 = a1;
  v38 = (char *)v25 + *(int *)(TupleTypeMetadata2 + 48);
  *v25 = v34;
  v25[1] = v33;
  v25[2] = v35;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v38, (char *)a1 + v36, v22);
  if (v33)
  {
    v39 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v38, 1, v15) == 1)
    {
      v86 = v34;
      v87 = v33;
      v88 = v35;
      sub_1002D05AC(v34, v33);
      swift_retain(v34);
      swift_retain(v33);
      v40 = sub_100005574(&qword_10049D748);
      Binding.wrappedValue.getter(&v85, v40);
      v41 = v85;
      v42 = v74;
      v43 = v75;
      v44 = *(void (**)(char *, uint64_t *, uint64_t))(v75 + 16);
      v45 = a1;
      v46 = v83;
      v44(v74, a1, v83);
      v47 = v82;
      if (v41 < 0)
      {
        v70 = *(void (**)(char *, uint64_t))(v43 + 8);
        v70(v42, v46);
        v71 = v73;
        v44(v73, v45, v46);
        v70(v71, v46);
      }
      else
      {
        v48 = Array.count.getter(*(_QWORD *)v42, v82);
        v49 = v42;
        v50 = v48;
        v51 = *(void (**)(char *, uint64_t))(v43 + 8);
        v51(v49, v46);
        if (v41 >= v50)
        {
          v72 = v73;
          v44(v73, v45, v46);
          if (!v41)
            Array.count.getter(*v72, v47);
          v51((char *)v72, v46);
        }
        else
        {
          sub_1002DB414(v41, 1, v46, v52);
        }
      }
      swift_release(v33);
      swift_release(v34);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v81, v38, v15);
      v85 = *a1;
      sub_1002D05AC(v34, v33);
      swift_retain(v34);
      swift_retain(v33);
      swift_bridgeObjectRetain();
      v57 = v79;
      Binding.wrappedValue.getter(v79, v15);
      v58 = v82;
      v59 = type metadata accessor for Array(0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v59);
      Collection<>.firstIndex(of:)(&v86, v57, v59, WitnessTable, *(_QWORD *)(v78 + 8));
      (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v57, v58);
      swift_bridgeObjectRelease();
      if (v87 != 1)
      {
        v61 = v86;
        v86 = v34;
        v87 = v33;
        v88 = v35;
        v62 = sub_100005574(&qword_10049D748);
        Binding.wrappedValue.getter(&v85, v62);
        if (v61 == v85)
          sub_1002DB414(v61, 1, v83, v63);
      }
      swift_release(v33);
      v64 = swift_release(v34);
      (*(void (**)(char *, uint64_t, __n128))(v84 + 8))(v81, v15, v64);
    }
  }
  else
  {
    v53 = v76;
    v54 = v77;
    v55 = v84;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v38, 1, v15) == 1)
    {
      (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v25, TupleTypeMetadata2);
      return result;
    }
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v38, v15);
    v85 = *v37;
    swift_bridgeObjectRetain();
    v65 = v79;
    Binding.wrappedValue.getter(v79, v15);
    v66 = v82;
    v67 = type metadata accessor for Array(0);
    v68 = swift_getWitnessTable(&protocol conformance descriptor for [A], v67);
    Collection<>.firstIndex(of:)(&v86, v65, v67, v68, *(_QWORD *)(v78 + 8));
    (*(void (**)(_QWORD *, uint64_t))(v80 + 8))(v65, v66);
    swift_bridgeObjectRelease();
    if (v87 != 1)
      v69.n128_f64[0] = sub_1002DB414(v86, 1, v83, v69);
    (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v54, v15, v69);
  }
  return sub_1002D057C(*v25, v25[1]);
}

double sub_1002DC130(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((*(_BYTE *)(a3 + 8) & 1) == 0)
  {
    v10 = *(_QWORD *)a3;
    *(_QWORD *)&v15 = a5;
    *((_QWORD *)&v15 + 1) = a6;
    v16 = a7;
    v17 = a8;
    v18 = a9;
    v11 = type metadata accessor for CarouselView(0, (uint64_t)&v15);
    v15 = *(_OWORD *)(a4 + *(int *)(v11 + 92));
    v12 = sub_100005574(&qword_10049D740);
    State.wrappedValue.getter(&v14, v12);
    if (v10 != v14)
      a1.n128_f64[0] = sub_1002DB414(v10, *(_BYTE *)(a4 + *(int *)(v11 + 68)), v11, a1);
  }
  return a1.n128_f64[0];
}

uint64_t sub_1002DC1CC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t WitnessTable;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v27 = a6;
  v28 = a8;
  v13 = type metadata accessor for Optional(0, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin();
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a4);
  v33 = *a3;
  v21 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v21);
  Collection<>.firstIndex(of:)(&v29, v19, v21, WitnessTable, *(_QWORD *)(a7 + 8));
  if (BYTE8(v29) != 1)
  {
    v23 = v29;
    *(_QWORD *)&v29 = a4;
    *((_QWORD *)&v29 + 1) = a5;
    v30 = v27;
    v31 = a7;
    v32 = v28;
    v24 = type metadata accessor for CarouselView(0, (uint64_t)&v29);
    v29 = *(_OWORD *)((char *)a3 + *(int *)(v24 + 92));
    v25 = sub_100005574(&qword_10049D740);
    State.wrappedValue.getter(&v33, v25);
    if (v23 != v33)
      sub_1002DB414(v23, *((_BYTE *)a3 + *(int *)(v24 + 68)), v24, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, a4);
}

uint64_t sub_1002DC3AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t WitnessTable;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  void *v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v59 = a6;
  v58 = a4;
  v56 = a3;
  v68 = a7;
  *(_QWORD *)&v82 = a2;
  *((_QWORD *)&v82 + 1) = a3;
  v83 = a4;
  v84 = a5;
  v85 = a6;
  v60 = type metadata accessor for CarouselView(0, (uint64_t)&v82);
  v10 = *(_QWORD *)(v60 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v57 = (char *)&KeyPath - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, a2, 0, 0);
  v14 = type metadata accessor for Array(255);
  v66 = v14;
  v15 = sub_100005600(&qword_10049D5F8);
  v65 = v15;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v14);
  *(_QWORD *)&v82 = v14;
  *((_QWORD *)&v82 + 1) = a2;
  v83 = v15;
  v84 = WitnessTable;
  v85 = a5;
  v61 = type metadata accessor for ForEach(0, &v82);
  v67 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v62 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v63 = (char *)&KeyPath - v17;
  v19 = a1;
  *(_QWORD *)&v80 = *a1;
  v18 = v80;
  v20 = type metadata accessor for Array(0);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  RandomAccessCollection<>.indices.getter(&v82, v20, v21, &protocol witness table for Int);
  v75 = v82;
  v79 = v18;
  v22 = sub_100005574(&qword_10049D728);
  v23 = sub_1002E0BC8();
  v77 = &protocol witness table for Int;
  v78 = v23;
  v24 = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v22);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for [A], v20);
  zip<A, B>(_:_:)(&v80, &v75, &v79, v22, v20, v24, v25);
  v75 = v80;
  v76 = v81;
  *(_QWORD *)&v82 = v22;
  *((_QWORD *)&v82 + 1) = v20;
  v83 = v24;
  v84 = v25;
  v26 = type metadata accessor for Zip2Sequence(0, &v82);
  v27 = swift_getWitnessTable(&protocol conformance descriptor for Zip2Sequence<A, B>, v26);
  *(_QWORD *)&v80 = Array.init<A>(_:)(&v75, TupleTypeMetadata2, v26, v27);
  v28 = v56;
  v69 = a2;
  v70 = v56;
  v29 = v58;
  v71 = v58;
  v72 = a5;
  v30 = a5;
  v31 = v59;
  v73 = v59;
  KeyPath = swift_getKeyPath(&unk_10039CC00);
  v32 = v10;
  v33 = *(void (**)(char *, _QWORD *, uint64_t))(v10 + 16);
  v34 = v57;
  v35 = v60;
  v33(v57, v19, v60);
  v36 = *(unsigned __int8 *)(v32 + 80);
  v37 = v32;
  v38 = (v36 + 56) & ~v36;
  v39 = (char *)swift_allocObject(&unk_100462540, v38 + v11, v36 | 7);
  *((_QWORD *)v39 + 2) = a2;
  *((_QWORD *)v39 + 3) = v28;
  *((_QWORD *)v39 + 4) = v29;
  *((_QWORD *)v39 + 5) = v30;
  *((_QWORD *)v39 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v39[v38], v34, v35);
  v40 = (_QWORD *)swift_allocObject(&unk_100462568, 72, 7);
  v40[2] = a2;
  v40[3] = v28;
  v40[4] = v29;
  v40[5] = v30;
  v40[6] = v31;
  v40[7] = sub_1002E0C10;
  v40[8] = v39;
  v41 = sub_100005600(&qword_10049D600);
  v42 = sub_100005600(&qword_10049D608);
  v43 = type metadata accessor for AutomaticHoverEffect(255);
  v44 = sub_1002DD7D8();
  v45 = sub_100006924(qword_10049D688, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  *(_QWORD *)&v82 = v42;
  *((_QWORD *)&v82 + 1) = v43;
  v83 = v44;
  v84 = v45;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  *(_QWORD *)&v82 = v41;
  *((_QWORD *)&v82 + 1) = OpaqueTypeConformance2;
  v47 = swift_getOpaqueTypeConformance2(&v82, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v48 = v62;
  ForEach<>.init(_:id:content:)(&v80, KeyPath, sub_1002E0C1C, v40, v66, v65, WitnessTable, v30, v47);
  v74 = v47;
  v49 = v61;
  swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v61);
  v50 = v67;
  v51 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v52 = v63;
  v51(v63, v48, v49);
  v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v48, v49);
  v51(v68, v52, v49);
  return ((uint64_t (*)(char *, uint64_t))v53)(v52, v49);
}

uint64_t sub_1002DC88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  char *v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[4];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v72 = a8;
  v82 = a3;
  v83 = a4;
  v84 = a5;
  v85 = a6;
  v86 = a7;
  v76 = type metadata accessor for CarouselView(0, (uint64_t)&v82);
  v71 = *(_QWORD *)(v76 - 8);
  v65 = *(_QWORD *)(v71 + 64);
  __chkstk_darwin();
  v68 = (char *)&v53 - v15;
  v67 = type metadata accessor for AutomaticHoverEffect(0);
  v57 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin();
  v56 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D620);
  __chkstk_darwin();
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100005574(&qword_10049D608);
  __chkstk_darwin();
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100005574(&qword_10049D600);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v62 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100005574(&qword_10049D5F8);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin();
  v58 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a2;
  v74 = a4;
  v69 = a6;
  v70 = a7;
  sub_1002DCE04(a2, a1, a3, a4, a5, a6, a7, (uint64_t)v18);
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  v73 = a3;
  v75 = a5;
  v23(v81, a3, a5);
  sub_1000149A8((uint64_t)v81, (uint64_t)&v82, &qword_10049D738);
  if (v82)
  {
    v24 = v83;
    v25 = v84;
    v27 = v85;
    v26 = v86;
    v87 = v82;
    swift_retain(v84);
    sub_1002B68E8(&v87);
    v88 = v24;
    sub_1002B68E8(&v88);
    swift_release(v25);
    v89 = v27;
    sub_1002B68E8(&v89);
    v90 = v26;
    sub_1002B68E8(&v90);
  }
  else
  {
    v25 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  }
  v28 = v66;
  v77 = *(_OWORD *)(v66 + *(int *)(v76 + 92));
  v29 = sub_100005574(&qword_10049D740);
  State.wrappedValue.getter(&v80, v29);
  v55 = a1;
  v30 = v80 == a1;
  sub_100014A7C((uint64_t)v18, (uint64_t)v20, &qword_10049D620);
  v31 = v61;
  v32 = &v20[*(int *)(v61 + 36)];
  *(_QWORD *)v32 = v25;
  v32[8] = v30;
  v33 = sub_100008758((uint64_t)v18, &qword_10049D620);
  v34 = v56;
  static CustomHoverEffect<>.automatic.getter(v33);
  v35 = sub_1002DD7D8();
  v54 = v35;
  v36 = sub_100006924(qword_10049D688, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v37 = v62;
  v38 = v67;
  View.hoverEffect<A>(_:isEnabled:)(v34, 1, v31, v67, v35, v36);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v38);
  sub_100008758((uint64_t)v20, &qword_10049D608);
  v39 = v71;
  v40 = v68;
  v41 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v68, v28, v76);
  v42 = *(unsigned __int8 *)(v39 + 80);
  v43 = (v42 + 56) & ~v42;
  v44 = (v65 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (char *)swift_allocObject(&unk_100462590, v44 + 8, v42 | 7);
  v46 = v74;
  *((_QWORD *)v45 + 2) = v73;
  *((_QWORD *)v45 + 3) = v46;
  v47 = v69;
  *((_QWORD *)v45 + 4) = v75;
  *((_QWORD *)v45 + 5) = v47;
  *((_QWORD *)v45 + 6) = v70;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v45[v43], v40, v41);
  *(_QWORD *)&v45[v44] = v55;
  *(_QWORD *)&v77 = v31;
  *((_QWORD *)&v77 + 1) = v38;
  v78 = v54;
  v79 = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v49 = v58;
  v50 = v64;
  View.onTapGesture(count:perform:)(1, sub_1002E0C24, v45, v64, OpaqueTypeConformance2);
  v51 = swift_release(v45);
  (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v37, v50, v51);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v59 + 32))(v72, v49, v60);
}

uint64_t sub_1002DCE04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[5];
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[5];
  uint64_t v92;

  v75 = a7;
  v74 = a6;
  *((_QWORD *)&v73 + 1) = a4;
  v77 = a2;
  v76 = a1;
  v80 = a8;
  v79 = sub_100005574(&qword_10049D750);
  __chkstk_darwin();
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DynamicTypeSize(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100005574(&qword_10049D758);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin();
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100005574(&qword_10049D640);
  __chkstk_darwin();
  v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)&v66 - v20;
  v22 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  *(_QWORD *)&v73 = a3;
  v22(v85, a3, a5);
  sub_1000149A8((uint64_t)v85, (uint64_t)v91, &qword_10049D738);
  v23 = v91[0];
  if (v91[0])
  {
    v24 = v91[1];
    v69 = v91[2];
    v67 = v91[3];
    v72 = v91[4];
    KeyPath = swift_getKeyPath(&unk_10039CC50);
    *(_QWORD *)&v86 = v23;
    *((_QWORD *)&v86 + 1) = KeyPath;
    v87 = v24;
    v68 = v24;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain(v23);
    swift_retain(v24);
    v26 = sub_100005574((uint64_t *)&unk_10049E5F0);
    v66 = v21;
    v27 = v26;
    v28 = sub_1002DD9D8();
    View.dynamicTypeSize(_:)(v15, v27, v28);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release(v86);
    swift_release(*((_QWORD *)&v86 + 1));
    swift_release(v87);
    v86 = v73;
    v87 = a5;
    v88 = v74;
    v89 = v75;
    v29 = type metadata accessor for CarouselView(0, (uint64_t)&v86);
    v86 = *(_OWORD *)(v76 + *(int *)(v29 + 92));
    v30 = sub_100005574(&qword_10049D740);
    State.wrappedValue.getter(&v81, v30);
    v31 = v67;
    if ((_QWORD)v81 == v77)
      v32 = v67;
    else
      v32 = v72;
    swift_retain(v32);
    v33 = swift_getKeyPath(&unk_10039CC20);
    v34 = v70;
    v35 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v19, v17, v71);
    v36 = v78;
    v37 = (uint64_t *)&v19[*(int *)(v78 + 36)];
    *v37 = v33;
    v37[1] = v32;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v35);
    v38 = (uint64_t)v19;
    v39 = (uint64_t)v66;
    sub_1000149A8(v38, (uint64_t)v66, &qword_10049D640);
    sub_100014A7C(v39, (uint64_t)v11, &qword_10049D640);
    swift_storeEnumTagMultiPayload(v11, v79, 0);
    v40 = sub_100005574(&qword_10049D658);
    v41 = sub_1002DD92C();
    v42 = sub_1002DDA5C();
    _ConditionalContent<>.init(storage:)(v11, v36, v40, v41, v42);
    swift_release(v68);
    swift_release(v23);
    v92 = v69;
    sub_1002B68E8(&v92);
    *(_QWORD *)&v81 = v31;
    sub_1002B68E8(&v81);
    *(_QWORD *)&v86 = v72;
    sub_1002B68E8(&v86);
    return sub_100008758(v39, &qword_10049D640);
  }
  else
  {
    v44 = sub_1002E0B14();
    sub_1002E0B14();
    v46 = v45;
    v48 = static Alignment.center.getter(v47);
    _FrameLayout.init(width:height:alignment:)(&v86, *(_QWORD *)&v44, 0, v46, 0, v48, v49);
    v50 = v86;
    v51 = BYTE8(v86);
    v52 = v87;
    v53 = v88;
    v54 = v89;
    v55 = v90;
    v57 = static Color.primary.getter(v56);
    v81 = v73;
    v82 = a5;
    v83 = v74;
    v84 = v75;
    v58 = type metadata accessor for CarouselView(0, (uint64_t)&v81);
    v81 = *(_OWORD *)(v76 + *(int *)(v58 + 92));
    v59 = sub_100005574(&qword_10049D740);
    State.wrappedValue.getter(&v92, v59);
    v60 = 0.25;
    if (v92 == v77)
      v60 = 1.0;
    v61 = Color.opacity(_:)(v60);
    swift_release(v57);
    v62 = swift_getKeyPath(&unk_10039CC20);
    *(_QWORD *)v11 = v50;
    v11[8] = v51;
    *((_QWORD *)v11 + 2) = v52;
    v11[24] = v53;
    *((_QWORD *)v11 + 4) = v54;
    *((_QWORD *)v11 + 5) = v55;
    *((_QWORD *)v11 + 6) = v62;
    *((_QWORD *)v11 + 7) = v61;
    swift_storeEnumTagMultiPayload(v11, v79, 1);
    v63 = sub_100005574(&qword_10049D658);
    v64 = sub_1002DD92C();
    v65 = sub_1002DDA5C();
    return _ConditionalContent<>.init(storage:)(v11, v78, v63, v64, v65);
  }
}

uint64_t sub_1002DD3CC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  BOOL v32;
  double v33;
  double v34;
  double *v35;
  double v36;
  double v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v45 = a6;
  v46 = a7;
  v47 = a2;
  v11 = type metadata accessor for ScrollViewProxy(0);
  v12 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  v49 = v12;
  __chkstk_darwin();
  v43 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049D5B0);
  __chkstk_darwin();
  v15 = (char **)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v21 = (char *)&v43 - v20;
  v44 = a3;
  *(_QWORD *)&v50 = a3;
  *((_QWORD *)&v50 + 1) = a4;
  v51 = a5;
  v52 = v45;
  v53 = v46;
  v22 = (int *)type metadata accessor for CarouselView(0, (uint64_t)&v50);
  sub_1002DB7DC(v47, (uint64_t)v22);
  v50 = *(_OWORD *)((char *)a1 + v22[23]);
  v23 = sub_100005574(&qword_10049D740);
  State.wrappedValue.getter(&v54, v23);
  v24 = v54;
  sub_1002BDFE4((uint64_t)v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for LayoutDirection.rightToLeft(_:), v16);
  LOBYTE(a4) = static LayoutDirection.== infix(_:_:)(v21, v19);
  v25 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26 = v19;
  v27 = v48;
  v25(v26, v16);
  v28 = v21;
  v29 = v49;
  v25(v28, v16);
  if ((a4 & 1) == 0)
    goto LABEL_4;
  result = Array.count.getter(*a1, v44);
  v31 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  v32 = __OFSUB__(v31, v24);
  v24 = v31 - v24;
  if (v32)
  {
LABEL_8:
    __break(1u);
    return result;
  }
LABEL_4:
  v33 = *(double *)((char *)a1 + v22[25]);
  v34 = Int.seconds.getter(v24);
  v35 = (double *)((char *)a1 + v22[18]);
  v36 = *v35;
  v37 = v35[1];
  v38 = sub_100005574(&qword_10049D720);
  State.wrappedValue.getter(v15, v38);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v27))
    return sub_100008758((uint64_t)v15, &qword_10049D5B0);
  v39 = v43;
  (*(void (**)(char *, _QWORD *, uint64_t))(v29 + 16))(v43, v15, v27);
  v40 = sub_100008758((uint64_t)v15, &qword_10049D5B0);
  v41 = static UnitPoint.leading.getter(v40);
  ScrollViewProxy.scrollTo(rect:anchor:)(*(_QWORD *)&v41, v42, 0, v33 * v34, 0.0, v36, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v39, v27);
}

uint64_t sub_1002DD6BC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1002DD6DC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1002DD6FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for LayoutDirection(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.layoutDirection.setter(v4);
}

unint64_t sub_1002DD77C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D5E0;
  if (!qword_10049D5E0)
  {
    v1 = sub_100005600(&qword_10049D5C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10049D5E0);
  }
  return result;
}

unint64_t sub_1002DD7D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D610;
  if (!qword_10049D610)
  {
    v1 = sub_100005600(&qword_10049D608);
    sub_1002DD85C();
    sub_10002FFB8(&qword_10049D678, &qword_10049D680, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D610);
  }
  return result;
}

unint64_t sub_1002DD85C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D618;
  if (!qword_10049D618)
  {
    v1 = sub_100005600(&qword_10049D620);
    sub_1002DD8C0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D618);
  }
  return result;
}

unint64_t sub_1002DD8C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D628;
  if (!qword_10049D628)
  {
    v1 = sub_100005600(&qword_10049D630);
    sub_1002DD92C();
    sub_1002DDA5C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D628);
  }
  return result;
}

unint64_t sub_1002DD92C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049D638;
  if (!qword_10049D638)
  {
    v1 = sub_100005600(&qword_10049D640);
    v2[0] = sub_100005600((uint64_t *)&unk_10049E5F0);
    v2[1] = sub_1002DD9D8();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize(_:)>>, 1);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D638);
  }
  return result;
}

unint64_t sub_1002DD9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D648;
  if (!qword_10049D648)
  {
    v1 = sub_100005600((uint64_t *)&unk_10049E5F0);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D648);
  }
  return result;
}

unint64_t sub_1002DDA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D650;
  if (!qword_10049D650)
  {
    v1 = sub_100005600(&qword_10049D658);
    sub_1002DDAE0();
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D650);
  }
  return result;
}

unint64_t sub_1002DDAE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D660;
  if (!qword_10049D660)
  {
    v1 = sub_100005600(&qword_10049D668);
    sub_1002DDB4C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049D660);
  }
  return result;
}

unint64_t sub_1002DDB4C()
{
  unint64_t result;

  result = qword_10049D670;
  if (!qword_10049D670)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_10049D670);
  }
  return result;
}

uint64_t sub_1002DDB90()
{
  return sub_1002E0D44((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002D8050);
}

uint64_t sub_1002DDB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 32);
  v5[0] = *(_OWORD *)(a2 + 16);
  v5[1] = v3;
  v6 = v2;
  return swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of CarouselView.body>>, 1);
}

double destroy for PageIndicator(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  *(_QWORD *)&result = swift_release(a1[4]).n128_u64[0];
  return result;
}

uint64_t *initializeWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for PageIndicator(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

_QWORD *assignWithTake for PageIndicator(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

uint64_t sub_1002DDDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 96);
}

void sub_1002DDDA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[13];

  v9[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v9[1] = &unk_10039CB28;
  v2 = type metadata accessor for Binding(255, *(_QWORD *)(a1 + 16));
  v3 = type metadata accessor for Optional(319, v2);
  if (v4 <= 0x3F)
  {
    v9[2] = *(_QWORD *)(v3 - 8) + 64;
    v9[3] = &unk_10039CB40;
    v9[4] = &unk_10039CB58;
    v9[5] = (char *)&value witness table for () + 64;
    v9[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v9[8] = &unk_10039CB70;
    v9[9] = &unk_10039CB70;
    sub_1002E02D8(319);
    if (v6 <= 0x3F)
    {
      v9[10] = *(_QWORD *)(v5 - 8) + 64;
      v9[11] = (char *)&value witness table for Builtin.Int64 + 64;
      sub_1002E0330(319);
      if (v8 <= 0x3F)
      {
        v9[12] = *(_QWORD *)(v7 - 8) + 64;
        swift_initStructMetadata(a1, 0, 13, v9, a1 + 56);
      }
    }
  }
}

uint64_t *sub_1002DDEAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, unint64_t, uint64_t);
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  size_t v77;
  unint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v84 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v84 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v85 = *(_DWORD *)(v5 + 84);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 80);
  v11 = *(_DWORD *)(v10 + 84);
  v13 = v12 & 0xF8;
  v86 = v10;
  v88 = v9;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = v14;
  else
    v15 = v14 + 1;
  v16 = type metadata accessor for LayoutDirection(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18 & 0xF8;
  v20 = v19 | 7;
  if (*(_QWORD *)(v17 + 64) <= 8uLL)
    v21 = 8;
  else
    v21 = *(_QWORD *)(v17 + 64);
  v22 = v13 | v20 | v6;
  v23 = (v12 | v18 | v6) & 0x100000;
  v24 = *a2;
  *a1 = *a2;
  v25 = v22 == 7 && v23 == 0;
  if (!v25
    || (v26 = v6 | 7,
        v27 = ((v6 + 16) & ~(unint64_t)v6) + v8,
        v21
      + ((v19
        + 15
        + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8
        + ((v13
          + 23
          + ((((((((((((v27 + ((v6 + 32) & ~v26)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v13 & 0xFFFFFFFFFFFFFFF8)) & ~v20)
      + 1 > 0x18))
  {
    v34 = v24 + ((v22 + 16) & ~v22);
    swift_retain(v24);
    return (uint64_t *)v34;
  }
  v74 = v13 + 23;
  v75 = ~v13 & 0xFFFFFFFFFFFFFFF8;
  v76 = v19 | 7;
  v77 = v15 + 7;
  v78 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v79 = v19 + 15;
  v80 = v15;
  v81 = v17;
  v82 = v21;
  v83 = a1;
  v73 = v16;
  v28 = ~v26;
  v29 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v30 + 8);
  swift_bridgeObjectRetain();
  if (v31 < 0xFFFFFFFF)
  {
    v35 = *(_OWORD *)v30;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    *(_OWORD *)v29 = v35;
  }
  else
  {
    v32 = *(_QWORD *)v30;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v33 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)(v29 + 8) = v33;
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
    swift_retain(v32);
    swift_retain(v33);
  }
  v36 = v86;
  v37 = ~v7;
  v38 = (_QWORD *)((v29 + v26 + 24) & v28);
  v39 = (uint64_t *)((v30 + v26 + 24) & v28);
  v40 = (uint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v85 & 0x80000000) == 0)
  {
    v41 = *v40;
    if ((unint64_t)*v40 >= 0xFFFFFFFF)
      LODWORD(v41) = -1;
    if ((_DWORD)v41 != -1)
      goto LABEL_21;
LABEL_23:
    v42 = *v39;
    *v38 = *v39;
    v43 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
    v44 = *v40;
    *v43 = *v40;
    v87 = ((unint64_t)v43 + v7 + 8) & v37;
    v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    swift_retain(v42);
    swift_retain(v44);
    v45(v87, ((unint64_t)v40 + v7 + 8) & v37, v84);
    goto LABEL_24;
  }
  if (!(*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v40 + v7 + 8) & v37))
    goto LABEL_23;
LABEL_21:
  memcpy(v38, v39, v27);
LABEL_24:
  *((_BYTE *)v38 + v27) = *((_BYTE *)v39 + v27);
  v46 = ((unint64_t)v38 + v27) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)v39 + v27) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
  v48 = (_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)((v47 + 31) & 0xFFFFFFFFFFFFFFF8);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFF8);
  v52 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFF8);
  *v52 = *v51;
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8);
  *v54 = *v53;
  v55 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v57 = *v56;
  swift_retain(v50);
  if (v57 < 0xFFFFFFFF)
  {
    *(_OWORD *)v55 = *(_OWORD *)v56;
  }
  else
  {
    v58 = v56[1];
    *(_QWORD *)v55 = v57;
    *(_QWORD *)(v55 + 8) = v58;
    swift_retain(v58);
  }
  v59 = ~v76;
  v60 = (_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v61[1];
  v60[1] = v62;
  v63 = (char *)(((unint64_t)v60 + v74) & v75);
  v64 = (char *)(((unint64_t)v61 + v74) & v75);
  v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_retain(v62);
  if (v65(v64, 1, v88))
  {
    memcpy(v63, v64, v80);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v63, v64, v88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v63, 0, 1, v88);
  }
  v66 = *(_QWORD *)((unint64_t)&v64[v77] & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)((unint64_t)&v63[v77] & 0xFFFFFFFFFFFFF8) = v66;
  *(_QWORD *)&v63[v78] = *(_QWORD *)&v64[v78];
  v67 = (_QWORD *)((unint64_t)&v63[v78 + v79] & v59);
  v68 = (uint64_t *)((unint64_t)&v64[v78 + v79] & v59);
  v69 = *((unsigned __int8 *)v68 + v82);
  swift_retain(v66);
  if (v69 >= 2)
  {
    if (v82 <= 3)
      v70 = v82;
    else
      v70 = 4;
    __asm { BR              X11 }
  }
  if (v69 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v81 + 16))(v67, v68, v73);
    *((_BYTE *)v67 + v82) = 1;
  }
  else
  {
    v71 = *v68;
    *v67 = *v68;
    *((_BYTE *)v67 + v82) = 0;
    swift_retain(v71);
  }
  return v83;
}

double sub_1002DE3B4(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  __n128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unsigned int v29;
  uint64_t v30;
  double result;

  v3 = (unint64_t)a1 + 15;
  swift_bridgeObjectRelease(*a1);
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release(*v5);
    v4 = swift_release(v5[1]);
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(((unint64_t)v5 + (v8 | 7) + 24) & ~(v8 | 7));
  v10 = ~v8;
  v11 = (v8 + 16) & ~v8;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v7 + 84) & 0x80000000) != 0)
  {
    v15 = v11 + v12;
    if (!(*(unsigned int (**)(unint64_t, __n128))(v7 + 48))(((unint64_t)v13 + v8 + 8) & v10, v4))
    {
LABEL_7:
      swift_release(*v9);
      v16 = swift_release(*v13);
      (*(void (**)(unint64_t, uint64_t, __n128))(v7 + 8))(((unint64_t)v13 + v8 + 8) & v10, v6, v16);
    }
  }
  else
  {
    v14 = *v13;
    if (*v13 >= 0xFFFFFFFFuLL)
      LODWORD(v14) = -1;
    v15 = v11 + v12;
    if ((_DWORD)v14 == -1)
      goto LABEL_7;
  }
  v17 = ((((unint64_t)v9 + v15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v17 + 8));
  v18 = (_QWORD *)((((((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 >= 0xFFFFFFFFuLL)
    swift_release(v18[1]);
  v19 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v19 + 8));
  v20 = type metadata accessor for ScrollViewProxy(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = (v19 + v22 + 16) & ~v22;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
  if (*(_DWORD *)(v21 + 84))
    v24 = *(_QWORD *)(v21 + 64);
  else
    v24 = *(_QWORD *)(v21 + 64) + 1;
  swift_release(*(_QWORD *)(((v23 | 7) + v24) & 0xFFFFFFFFFFFFF8));
  v25 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v27 = (_QWORD *)((v23 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + v26 + 16) & ~v26);
  v28 = *(_QWORD *)(v25 + 64);
  if (v28 <= 8)
    v28 = 8;
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X14 }
  }
  if (v29 == 1)
    (*(void (**)(void))(v25 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v27).n128_u64[0];
  return result;
}

_QWORD *sub_1002DE664(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int (*v53)(unint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  *a1 = *a2;
  v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    v10 = *(_OWORD *)v6;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    *(_OWORD *)v5 = v10;
  }
  else
  {
    v8 = *(_QWORD *)v6;
    *(_QWORD *)v5 = *(_QWORD *)v6;
    v9 = *(_QWORD *)(v6 + 8);
    *(_QWORD *)(v5 + 8) = v9;
    *(_QWORD *)(v5 + 16) = *(_QWORD *)(v6 + 16);
    swift_retain(v8);
    swift_retain(v9);
  }
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (_QWORD *)((v5 + (v13 | 7) + 24) & ~(v13 | 7));
  v15 = (uint64_t *)((v6 + (v13 | 7) + 24) & ~(v13 | 7));
  v16 = ~v13;
  v17 = (v13 + 16) & ~v13;
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v12 + 84) & 0x80000000) != 0)
  {
    v21 = v17 + v18;
    if ((*(unsigned int (**)(unint64_t))(v12 + 48))(((unint64_t)v19 + v13 + 8) & v16))
    {
LABEL_8:
      memcpy(v14, v15, v21);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    v21 = v17 + v18;
    if ((_DWORD)v20 != -1)
      goto LABEL_8;
  }
  v22 = *v15;
  *v14 = *v15;
  v23 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = *v19;
  *v23 = *v19;
  v25 = v13 + 8;
  v26 = ((unint64_t)v23 + v13 + 8) & v16;
  v27 = ((unint64_t)v19 + v25) & v16;
  v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
  swift_retain(v22);
  swift_retain(v24);
  v28(v26, v27, v11);
LABEL_11:
  *((_BYTE *)v14 + v21) = *((_BYTE *)v15 + v21);
  v29 = ((unint64_t)v14 + v21) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v15 + v21) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v29 + 8) = *(_OWORD *)(v30 + 8);
  v31 = (_QWORD *)((v29 + 31) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)((v30 + 31) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFF8);
  v35 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFF8);
  *v35 = *v34;
  v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
  *v37 = *v36;
  v38 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (unint64_t *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = *v39;
  swift_retain(v33);
  if (v40 < 0xFFFFFFFF)
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  else
  {
    v41 = v39[1];
    *(_QWORD *)v38 = v40;
    *(_QWORD *)(v38 + 8) = v41;
    swift_retain(v41);
  }
  v42 = (_QWORD *)((v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  v44 = v43[1];
  v42[1] = v44;
  v45 = type metadata accessor for ScrollViewProxy(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(_DWORD *)(v46 + 80) & 0xF8;
  v48 = v47 + 23;
  v49 = (unint64_t)v42 + v47 + 23;
  v50 = ~v47 & 0xFFFFFFFFFFFFFFF8;
  v51 = v49 & v50;
  v52 = ((unint64_t)v43 + v48) & v50;
  v53 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v46 + 48);
  swift_retain(v44);
  if (v53(v52, 1, v45))
  {
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
    if (v54)
      v56 = *(_QWORD *)(v46 + 64);
    else
      v56 = v55 + 1;
    memcpy((void *)v51, (const void *)v52, v56);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))(v51, v52, v45);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v51, 0, 1, v45);
    v54 = *(_DWORD *)(v46 + 84);
    v55 = *(_QWORD *)(v46 + 64);
  }
  if (v54)
    v57 = v55;
  else
    v57 = v55 + 1;
  v58 = (uint64_t *)(((v52 | 7) + v57) & 0xFFFFFFFFFFFFF8);
  v59 = *v58;
  *(_QWORD *)(((v51 | 7) + v57) & 0xFFFFFFFFFFFFF8) = *v58;
  v60 = ((v57 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v61 = (_QWORD *)(v60 + v51);
  v62 = (char *)(v60 + v52);
  *v61 = *(_QWORD *)(v60 + v52);
  v63 = type metadata accessor for LayoutDirection(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xF8;
  v66 = v65 + 15;
  v67 = (unint64_t)v61 + v65 + 15;
  v68 = ~v65 & 0xFFFFFFFFFFFFFFF8;
  v69 = (_QWORD *)(v67 & v68);
  v70 = (uint64_t *)((unint64_t)&v62[v66] & v68);
  if (*(_QWORD *)(v64 + 64) <= 8uLL)
    v71 = 8;
  else
    v71 = *(_QWORD *)(v64 + 64);
  v72 = *((unsigned __int8 *)v70 + v71);
  swift_retain(v59);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X11 }
  }
  if (v72 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v64 + 16))(v69, v70, v63);
    v74 = 1;
  }
  else
  {
    v75 = *v70;
    *v69 = *v70;
    swift_retain(v75);
    v74 = 0;
  }
  *((_BYTE *)v69 + v71) = v74;
  return a1;
}

_QWORD *sub_1002DEA80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(unint64_t, uint64_t, uint64_t);
  int v73;
  size_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  __n128 v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  int v101;
  size_t v102;
  _QWORD *v103;
  uint64_t v104;

  v4 = a1;
  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v7[1] < 0xFFFFFFFFuLL)
  {
    if (v9 >= 0xFFFFFFFF)
    {
      v15 = *v8;
      *v7 = *v8;
      v16 = v8[1];
      v7[1] = v16;
      v7[2] = v8[2];
      swift_retain(v15);
      swift_retain(v16);
      goto LABEL_8;
    }
  }
  else
  {
    v10 = *v7;
    if (v9 >= 0xFFFFFFFF)
    {
      v11 = *v8;
      *v7 = *v8;
      swift_retain(v11);
      swift_release(v10);
      v12 = v8[1];
      v13 = v7[1];
      v7[1] = v12;
      swift_retain(v12);
      v14 = swift_release(v13);
      v7[2] = v8[2];
      goto LABEL_8;
    }
    swift_release(*v7);
    swift_release(v7[1]);
  }
  v14 = *(__n128 *)v8;
  v7[2] = v8[2];
  *(__n128 *)v7 = v14;
LABEL_8:
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (_QWORD *)(((unint64_t)v7 + (v19 | 7) + 24) & ~(v19 | 7));
  v21 = (uint64_t *)(((unint64_t)v8 + (v19 | 7) + 24) & ~(v19 | 7));
  v22 = *(unsigned int *)(v18 + 84);
  v23 = *(_QWORD *)(v18 + 64);
  v24 = ((v19 + 16) & ~v19) + v23;
  v25 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v104 = ~v19;
  if ((v22 & 0x80000000) == 0)
  {
    v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = *v26;
    if ((unint64_t)*v26 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (*v25 > 0xFFFFFFFEuLL)
      goto LABEL_12;
LABEL_15:
    if (v28)
      goto LABEL_16;
    v32 = *v21;
    *v20 = *v21;
    v33 = *v26;
    *v25 = *v26;
    v34 = ((unint64_t)v25 + v19 + 8) & v104;
    v35 = ((unint64_t)v26 + v19 + 8) & v104;
    v36 = v24;
    v37 = v17;
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    swift_retain(v32);
    swift_retain(v33);
    v39 = v37;
    v24 = v36;
    v38(v34, v35, v39);
    goto LABEL_19;
  }
  v102 = ((v19 + 16) & ~v19) + v23;
  v103 = v4;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v18 + 48);
  v101 = v31(((unint64_t)v25 + v19 + 8) & ~v19, v22, v17, v14);
  v26 = (uint64_t *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = v102;
  v28 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v31)(((unint64_t)v26 + v19 + 8) & ~v19, v22, v17);
  v4 = v103;
  if (v101)
    goto LABEL_15;
LABEL_12:
  v29 = *v20;
  if (v28)
  {
    swift_release(*v20);
    v30 = swift_release(*v25);
    (*(void (**)(unint64_t, uint64_t, __n128))(v18 + 8))(((unint64_t)v25 + v19 + 8) & v104, v17, v30);
LABEL_16:
    memcpy(v20, v21, v24);
    goto LABEL_19;
  }
  v40 = *v21;
  *v20 = *v21;
  swift_retain(v40);
  swift_release(v29);
  v41 = *v26;
  v42 = *v25;
  *v25 = *v26;
  swift_retain(v41);
  v43 = swift_release(v42);
  (*(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v18 + 24))(((unint64_t)v25 + v19 + 8) & v104, ((unint64_t)v26 + v19 + 8) & v104, v17, v43);
LABEL_19:
  *((_BYTE *)v20 + v24) = *((_BYTE *)v21 + v24);
  v44 = ((unint64_t)v20 + v24) & 0xFFFFFFFFFFFFFFF8;
  v45 = ((unint64_t)v21 + v24) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v44 + 8) = *(_QWORD *)(v45 + 8);
  *(_QWORD *)(v44 + 16) = *(_QWORD *)(v45 + 16);
  v46 = (_QWORD *)((v44 + 31) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)((v45 + 31) & 0xFFFFFFFFFFFFFFF8);
  v48 = v47[1];
  v49 = v46[1];
  *v46 = *v47;
  v46[1] = v48;
  swift_retain(v48);
  swift_release(v49);
  v50 = (_QWORD *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = (_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
  v55 = (unint64_t *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v56 = *v55;
  if (*v54 < 0xFFFFFFFFuLL)
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v59 = v55[1];
      *v54 = v56;
      v54[1] = v59;
      swift_retain(v59);
      goto LABEL_26;
    }
  }
  else
  {
    if (v56 >= 0xFFFFFFFF)
    {
      v57 = v55[1];
      v58 = v54[1];
      *v54 = v56;
      v54[1] = v57;
      swift_retain(v57);
      swift_release(v58);
      goto LABEL_26;
    }
    swift_release(v54[1]);
  }
  *(_OWORD *)v54 = *(_OWORD *)v55;
LABEL_26:
  v60 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
  v61 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v60 = *v61;
  v62 = v60[1];
  v63 = v61[1];
  v60[1] = v63;
  swift_retain(v63);
  swift_release(v62);
  v64 = type metadata accessor for ScrollViewProxy(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(_DWORD *)(v65 + 80) & 0xF8;
  v67 = v66 + 23;
  v68 = (unint64_t)v60 + v66 + 23;
  v69 = ~v66 & 0xFFFFFFFFFFFFFFF8;
  v70 = v68 & v69;
  v71 = ((unint64_t)v61 + v67) & v69;
  v72 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v65 + 48);
  LODWORD(v60) = v72(v68 & v69, 1, v64);
  v73 = v72(v71, 1, v64);
  if ((_DWORD)v60)
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 16))(v70, v71, v64);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v70, 0, 1, v64);
      goto LABEL_35;
    }
  }
  else
  {
    if (!v73)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 24))(v70, v71, v64);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v65 + 8))(v70, v64);
  }
  if (*(_DWORD *)(v65 + 84))
    v74 = *(_QWORD *)(v65 + 64);
  else
    v74 = *(_QWORD *)(v65 + 64) + 1;
  memcpy((void *)v70, (const void *)v71, v74);
LABEL_35:
  if (*(_DWORD *)(v65 + 84))
    v75 = *(_QWORD *)(v65 + 64);
  else
    v75 = *(_QWORD *)(v65 + 64) + 1;
  v76 = (uint64_t *)(((v70 | 7) + v75) & 0xFFFFFFFFFFFFFFF8);
  v77 = (uint64_t *)(((v71 | 7) + v75) & 0xFFFFFFFFFFFFF8);
  v78 = *v77;
  v79 = *v76;
  *v76 = *v77;
  swift_retain(v78);
  swift_release(v79);
  v80 = ((v75 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v81 = (char *)(v80 + v70);
  v82 = (char *)(v80 + v71);
  *(_QWORD *)(v80 + v70) = *(_QWORD *)(v80 + v71);
  v83 = type metadata accessor for LayoutDirection(0);
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xF8;
  v86 = v85 + 15;
  v87 = &v81[v85 + 15];
  v88 = ~v85 & 0xFFFFFFFFFFFFFFF8;
  v89 = (_QWORD *)((unint64_t)v87 & v88);
  v90 = &v82[v86];
  v91 = (uint64_t *)((unint64_t)v90 & v88);
  if (((unint64_t)v87 & v88) != ((unint64_t)v90 & v88))
  {
    v92 = v83;
    if (*(_QWORD *)(v84 + 64) <= 8uLL)
      v93 = 8;
    else
      v93 = *(_QWORD *)(v84 + 64);
    v94 = *((unsigned __int8 *)v89 + v93);
    if (v94 >= 2)
    {
      if (v93 <= 3)
        v95 = v93;
      else
        v95 = 4;
      __asm { BR              X12 }
    }
    if (v94 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v84 + 8))(v89, v83);
    else
      v96 = swift_release(*v89);
    v97 = *((unsigned __int8 *)v91 + v93);
    if (v97 >= 2)
    {
      if (v93 <= 3)
        v98 = v93;
      else
        v98 = 4;
      __asm { BR              X12 }
    }
    if (v97 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t, __n128))(v84 + 16))(v89, v91, v92, v96);
      *((_BYTE *)v89 + v93) = 1;
    }
    else
    {
      v99 = *v91;
      *v89 = *v91;
      *((_BYTE *)v89 + v93) = 0;
      swift_retain(v99);
    }
  }
  return v4;
}

_QWORD *sub_1002DF158(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  size_t v41;
  size_t v42;
  size_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v5 + 16);
  *(_OWORD *)v4 = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (_QWORD *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  v11 = (_QWORD *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  v12 = ~v9;
  v13 = (v9 + 16) & ~v9;
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF)
      LODWORD(v16) = -1;
    v17 = v13 + v14;
    if ((_DWORD)v16 != -1)
      goto LABEL_5;
  }
  *v10 = *v11;
  v18 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((_BYTE *)v10 + v17) = *((_BYTE *)v11 + v17);
  v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
  }
  v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = type metadata accessor for ScrollViewProxy(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  v35 = v34 + 23;
  v36 = (unint64_t)v30 + v34 + 23;
  v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  v38 = v36 & v37;
  v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
    if (v40)
      v42 = v41;
    else
      v42 = v41 + 1;
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v32);
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
  }
  if (v40)
    v43 = v41;
  else
    v43 = v41 + 1;
  *(_QWORD *)(((v38 | 7) + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v39 | 7) + v43) & 0xFFFFFFFFFFFFF8);
  v44 = ((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v45 = (_QWORD *)(v44 + v38);
  v46 = (_QWORD *)(v44 + v39);
  *v45 = *v46;
  v47 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v48 = *(_DWORD *)(v47 + 80) & 0xF8;
  v49 = v48 + 15;
  v50 = (unint64_t)v45 + v48 + 15;
  v51 = ~v48 & 0xFFFFFFFFFFFFFFF8;
  v52 = (_QWORD *)(v50 & v51);
  v53 = (_QWORD *)(((unint64_t)v46 + v49) & v51);
  if (*(_QWORD *)(v47 + 64) <= 8uLL)
    v54 = 8;
  else
    v54 = *(_QWORD *)(v47 + 64);
  v55 = *((unsigned __int8 *)v53 + v54);
  if (v55 >= 2)
  {
    if (v54 <= 3)
      v56 = v54;
    else
      v56 = 4;
    __asm { BR              X13 }
  }
  if (v55 == 1)
  {
    (*(void (**)(_QWORD *))(v47 + 32))(v52);
    v57 = 1;
  }
  else
  {
    v57 = 0;
    *v52 = *v53;
  }
  *((_BYTE *)v52 + v54) = v57;
  return a1;
}

_QWORD *sub_1002DF4EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(unint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  size_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  _QWORD *v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  __n128 v80;
  unsigned int v81;
  uint64_t v82;
  char v83;
  int v85;
  size_t v86;
  uint64_t v87;
  _QWORD *v88;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  v88 = a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (__n128 *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v7->n128_u64[1] >= 0xFFFFFFFF)
  {
    v9 = v7->n128_u64[0];
    if (v8[1] >= 0xFFFFFFFF)
    {
      v7->n128_u64[0] = *v8;
      swift_release(v9);
      v10 = v7->n128_i64[1];
      v7->n128_u64[1] = v8[1];
      v11 = swift_release(v10);
      v7[1].n128_u64[0] = v8[2];
      goto LABEL_6;
    }
    swift_release(v9);
    swift_release(v7->n128_u64[1]);
  }
  v11 = *(__n128 *)v8;
  v7[1].n128_u64[0] = v8[2];
  *v7 = v11;
LABEL_6:
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (_QWORD *)(((unint64_t)&v7[1].n128_u64[1] + (v14 | 7)) & ~(v14 | 7));
  v16 = (_QWORD *)(((unint64_t)v8 + (v14 | 7) + 24) & ~(v14 | 7));
  v17 = *(unsigned int *)(v13 + 84);
  v18 = ~v14;
  v19 = *(_QWORD *)(v13 + 64);
  v20 = ((v14 + 16) & ~v14) + v19;
  v21 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v87 = ~v14;
  if ((v17 & 0x80000000) == 0)
  {
    v22 = v12;
    v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v24) = -1;
    v25 = v24 + 1;
    if (*v21 > 0xFFFFFFFEuLL)
      goto LABEL_10;
LABEL_13:
    if (v25)
      goto LABEL_14;
    *v15 = *v16;
    *v21 = *v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
    goto LABEL_17;
  }
  v86 = ((v14 + 16) & ~v14) + v19;
  v28 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v13 + 48);
  v85 = v28(((unint64_t)v21 + v14 + 8) & v18, v17, v12, v11);
  v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = v17;
  v22 = v12;
  v25 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v28)(((unint64_t)v23 + v14 + 8) & v18, v29, v12);
  v20 = v86;
  if (v85)
    goto LABEL_13;
LABEL_10:
  v26 = *v15;
  if (v25)
  {
    swift_release(*v15);
    v27 = swift_release(*v21);
    (*(void (**)(unint64_t, uint64_t, __n128))(v13 + 8))(((unint64_t)v21 + v14 + 8) & v87, v22, v27);
LABEL_14:
    memcpy(v15, v16, v20);
    goto LABEL_17;
  }
  *v15 = *v16;
  swift_release(v26);
  v30 = *v21;
  *v21 = *v23;
  swift_release(v30);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
LABEL_17:
  *((_BYTE *)v15 + v20) = *((_BYTE *)v16 + v20);
  v31 = ((unint64_t)v15 + v20) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v16 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v33 = (v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v32 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_OWORD *)v34;
  v34 += 23;
  *(_OWORD *)v33 = v36;
  swift_release(v35);
  v37 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFF8);
  *v37 = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((v34 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (unint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if (*v40 < 0xFFFFFFFFuLL)
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v45 = v41[1];
      *v40 = v42;
      v40[1] = v45;
      goto LABEL_24;
    }
  }
  else
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v43 = v41[1];
      v44 = v40[1];
      *v40 = v42;
      v40[1] = v43;
      swift_release(v44);
      goto LABEL_24;
    }
    swift_release(v40[1]);
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_24:
  v46 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = v46[1];
  v46[1] = v47[1];
  swift_release(v48);
  v49 = type metadata accessor for ScrollViewProxy(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8;
  v52 = v51 + 23;
  v53 = (unint64_t)v46 + v51 + 23;
  v54 = ~v51 & 0xFFFFFFFFFFFFFFF8;
  v55 = v53 & v54;
  v56 = ((unint64_t)v47 + v52) & v54;
  v57 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48);
  v58 = v57(v53 & v54, 1, v49);
  v59 = v57(v56, 1, v49);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 32))(v55, v56, v49);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 40))(v55, v56, v49);
      goto LABEL_33;
    }
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(v55, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v60 = *(_QWORD *)(v50 + 64);
  else
    v60 = *(_QWORD *)(v50 + 64) + 1;
  memcpy((void *)v55, (const void *)v56, v60);
LABEL_33:
  if (*(_DWORD *)(v50 + 84))
    v61 = *(_QWORD *)(v50 + 64);
  else
    v61 = *(_QWORD *)(v50 + 64) + 1;
  v62 = (uint64_t *)(((v55 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
  v63 = *v62;
  *v62 = *(_QWORD *)(((v56 | 7) + v61) & 0xFFFFFFFFFFFFF8);
  swift_release(v63);
  v64 = ((v61 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v65 = (char *)(v64 + v55);
  v66 = (char *)(v64 + v56);
  *(_QWORD *)(v64 + v55) = *(_QWORD *)(v64 + v56);
  v67 = type metadata accessor for LayoutDirection(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(_DWORD *)(v68 + 80) & 0xF8;
  v70 = v69 + 15;
  v71 = &v65[v69 + 15];
  v72 = ~v69 & 0xFFFFFFFFFFFFFFF8;
  v73 = (_QWORD *)((unint64_t)v71 & v72);
  v74 = &v66[v70];
  v75 = (_QWORD *)((unint64_t)v74 & v72);
  if (((unint64_t)v71 & v72) != ((unint64_t)v74 & v72))
  {
    v76 = v67;
    if (*(_QWORD *)(v68 + 64) <= 8uLL)
      v77 = 8;
    else
      v77 = *(_QWORD *)(v68 + 64);
    v78 = *((unsigned __int8 *)v73 + v77);
    if (v78 >= 2)
    {
      if (v77 <= 3)
        v79 = v77;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v73, v67);
    else
      v80 = swift_release(*v73);
    v81 = *((unsigned __int8 *)v75 + v77);
    if (v81 >= 2)
    {
      if (v77 <= 3)
        v82 = v77;
      else
        v82 = 4;
      __asm { BR              X12 }
    }
    if (v81 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v68 + 32))(v73, v75, v76, v80);
      v83 = 1;
    }
    else
    {
      v83 = 0;
      *v73 = *v75;
    }
    *((_BYTE *)v73 + v77) = v83;
  }
  return v88;
}

uint64_t sub_1002DFB0C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;

  v37 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = v7 - 1;
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  if ((_DWORD)v11)
    v17 = 7;
  else
    v17 = 8;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = v18 | 7;
  v20 = ((v18 + 16) & ~v18) + *(_QWORD *)(v5 + 64);
  v21 = *(_DWORD *)(v10 + 80) & 0xF8;
  v22 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 + 23;
  if (a2 <= v14)
    goto LABEL_40;
  v24 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v25 = v16
      + ((((v17 + *(_QWORD *)(v10 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v23
          + ((((((((((((v20 + ((v18 + 32) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v22)
        + 16) & ~v24)
      + 1;
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v29 = ((a2 - v14 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v29))
    {
      v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 > 0xFF)
    {
      v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(_WORD *)((char *)a1 + v25))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 < 2)
    {
LABEL_40:
      if ((v13 & 0x80000000) != 0)
      {
        v33 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v19 + 24) & ~v19;
        if (v8 == v14)
        {
          v34 = (uint64_t *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v6 & 0x80000000) != 0)
          {
            v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v34 + v18 + 8) & ~v18, v6, v37);
          }
          else
          {
            v35 = *v34;
            if ((unint64_t)*v34 >= 0xFFFFFFFF)
              LODWORD(v35) = -1;
            v36 = v35 + 1;
          }
        }
        else
        {
          v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v23+ ((((((((((((v33 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v22, v11, v9);
        }
        if (v36 >= 2)
          return v36 - 1;
        else
          return 0;
      }
      else
      {
        v32 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v32) = -1;
        return (v32 + 1);
      }
    }
  }
  v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((_BYTE *)a1 + v25))
    goto LABEL_40;
LABEL_31:
  v30 = (v27 - 1) << v26;
  if (v25 > 3)
    v30 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v31 = v25;
    else
      v31 = 4;
    __asm { BR              X11 }
  }
  return v14 + v30 + 1;
}

void sub_1002DFE2C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = 0;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v19;
  v20 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = *(_DWORD *)(v8 + 80) & 0xF8;
  v17 = *(unsigned __int8 *)(v5 + 80);
  v21 = v16
      + ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v18
          + 23
          + ((((((((((((((v17 + 16) & ~v17) + *(_QWORD *)(v5 + 64) + ((v17 + 32) & ~(v17 | 7))) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18 & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v20)
      + 1;
  if (a3 > v13)
  {
    if (v21 <= 3)
    {
      v22 = ((a3 - v13 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v22))
      {
        v14 = &dword_100000004;
      }
      else if (v22 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v22 > 1;
      }
    }
    else
    {
      v14 = &_mh_execute_header.magic + 1;
    }
  }
  if (v13 < a2)
  {
    v23 = ~v13 + a2;
    if (v21 < 4)
    {
      if ((_DWORD)v21)
      {
        v24 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if ((_DWORD)v21 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v21 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_1002E01FC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_1002E0204()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_1002E0288()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1002E0298()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1002E02A0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_1002E02D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049D710)
  {
    v2 = sub_100005600(&qword_10049D5B0);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049D710);
  }
}

void sub_1002E0330(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10049D718)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10049D718);
  }
}

uint64_t sub_1002E0384(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t TupleTypeMetadata2;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;

  v1 = (void *)*a1;
  v2 = a1[1];
  v4 = a1[3];
  v3 = a1[4];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, *a1, 0, 0);
  v5 = type metadata accessor for Array(255);
  v62 = v2;
  v63 = &type metadata for Int;
  v64 = v3;
  v65 = &protocol witness table for Int;
  v6 = type metadata accessor for IDView(255, &v62);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v6);
  v62 = v6;
  v63 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v60 = v5;
  v61 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  v62 = v5;
  v63 = v1;
  v64 = OpaqueTypeMetadata2;
  v65 = (void *)v61;
  v66 = v4;
  v9 = v4;
  v10 = type metadata accessor for ForEach(255, &v62);
  v62 = v6;
  v63 = (void *)WitnessTable;
  swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v10);
  v12 = type metadata accessor for LazyHStack(255, v10, v11);
  v13 = sub_100005600(&qword_10049D5B8);
  v14 = type metadata accessor for ModifiedContent(255, v12, v13);
  v15 = type metadata accessor for ModifiedContent(255, v14, &type metadata for _PaddingLayout);
  v16 = sub_100005600(&qword_10049D5C0);
  v17 = type metadata accessor for ModifiedContent(255, v15, v16);
  v18 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _AppearanceActionModifier);
  v19 = sub_100005600(&qword_10049D5C8);
  swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v12);
  sub_10002FFB8(&qword_10049D5D0, &qword_10049D5B8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  sub_10002FFB8(&qword_10049D5D8, &qword_10049D5C0, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v21 = sub_1002DD77C();
  v62 = v18;
  v63 = (void *)v19;
  v64 = v20;
  v65 = (void *)v21;
  v22 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v23 = type metadata accessor for Optional(255, v1);
  v62 = v18;
  v63 = (void *)v19;
  v64 = v20;
  v65 = (void *)v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v23);
  v62 = v22;
  v63 = (void *)v23;
  v64 = OpaqueTypeConformance2;
  v65 = (void *)v25;
  v26 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v62 = v22;
  v63 = (void *)v23;
  v64 = OpaqueTypeConformance2;
  v65 = (void *)v25;
  v27 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v28 = type metadata accessor for PagingScrollView(255, v26, v27);
  v29 = sub_100005600(&qword_10049D5E8);
  v30 = type metadata accessor for ModifiedContent(255, v28, v29);
  swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v28);
  sub_10002FFB8(&qword_10049D5F0, &qword_10049D5E8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v31 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v62 = v30;
  v63 = (void *)v31;
  v32 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v62 = v30;
  v63 = (void *)v31;
  v33 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v62 = v32;
  v63 = (void *)v33;
  v34 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v62 = v32;
  v63 = (void *)v33;
  v35 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v62 = v34;
  v63 = (void *)v35;
  v36 = swift_getOpaqueTypeMetadata2(255, &v62, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v62 = v34;
  v63 = (void *)v35;
  v37 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v38 = type metadata accessor for GeometryReader(255, v36, v37);
  v39 = type metadata accessor for ModifiedContent(255, v38, &type metadata for _FrameLayout);
  swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v38);
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v39);
  v41 = type metadata accessor for ScrollViewReader(255, v39, v40);
  v42 = type metadata accessor for ModifiedContent(255, v41, &type metadata for _FrameLayout);
  v43 = sub_100005600(&qword_10049D5F8);
  v62 = v60;
  v63 = v1;
  v64 = v43;
  v65 = (void *)v61;
  v66 = v9;
  v44 = type metadata accessor for ForEach(255, &v62);
  v45 = sub_100005600(&qword_10049D600);
  v46 = sub_100005600(&qword_10049D608);
  v47 = type metadata accessor for AutomaticHoverEffect(255);
  v48 = sub_1002DD7D8();
  v49 = sub_100006924(qword_10049D688, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v62 = v46;
  v63 = (void *)v47;
  v64 = v48;
  v65 = (void *)v49;
  v50 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v62 = v45;
  v63 = (void *)v50;
  swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v51 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v44);
  v52 = type metadata accessor for HStack(255, v44, v51);
  v53 = type metadata accessor for ModifiedContent(255, v52, &type metadata for _FrameLayout);
  v54 = type metadata accessor for Optional(255, v53);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v42, v54, 0, 0);
  v56 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v57 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v56);
  v58 = type metadata accessor for VStack(255, v56, v57);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v58);
}

ValueMetadata *type metadata accessor for ScrollViewOffsetKey()
{
  return &type metadata for ScrollViewOffsetKey;
}

void sub_1002E09CC()
{
  qword_10049D5A8 = 0;
}

double sub_1002E09D8@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_100498B78 != -1)
    swift_once(&qword_100498B78, sub_1002E09CC);
  result = *(double *)&qword_10049D5A8;
  *a1 = qword_10049D5A8;
  return result;
}

double sub_1002E0A28(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

double sub_1002E0A74@<D0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = (_QWORD *)v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_1002D8C54(a1, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_1002E0B08()
{
  return sub_1002E0D44((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002DC3AC);
}

double sub_1002E0B14()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v0 = (void *)objc_opt_self(UITraitCollection);
  v1 = objc_msgSend(v0, "currentTraitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
    v3 = 10;
  else
    v3 = 8;
  v4 = objc_msgSend(v0, "currentTraitCollection");
  objc_msgSend(v4, "userInterfaceIdiom");

  return (double)v3;
}

unint64_t sub_1002E0BC8()
{
  unint64_t result;

  result = qword_10049D730;
  if (!qword_10049D730)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_10049D730);
  }
  return result;
}

uint64_t sub_1002E0C10(uint64_t a1, uint64_t a2)
{
  return sub_1002E1480(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002DC88C);
}

uint64_t sub_1002E0C28()
{
  uint64_t v0;

  return sub_1002DD3CC(*(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1002E0C60@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = v2[6];
  v15[0] = v2[2];
  v5 = (void *)v15[0];
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v10 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v15) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_1002D9384(a1, (_QWORD *)((char *)v2 + v11), (uint64_t)v2 + ((v11 + v12 + v13) & ~v13), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_1002E0D20@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1002D9D3C(*(_QWORD **)(v1 + 56), *(void (**)(char *, char *, uint64_t))(v1 + 72), *(double (**)@<D0>(uint64_t@<X8>))(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 64));
}

uint64_t sub_1002E0D38()
{
  return sub_1002E0D44((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002DAC10);
}

uint64_t sub_1002E0D44(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1002E0D5C(double *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v10) - 8) + 80);
  return sub_1002DB5F4(a1, (_QWORD *)((char *)v1 + ((v8 + 56) & ~v8)), v3, v4, v5, v6, v7);
}

unint64_t sub_1002E0DE8()
{
  unint64_t result;

  result = qword_10049D770;
  if (!qword_10049D770)
  {
    result = swift_getWitnessTable(&unk_10039CBB4, &type metadata for ScrollViewOffsetKey);
    atomic_store(result, (unint64_t *)&qword_10049D770);
  }
  return result;
}

unint64_t sub_1002E0E2C()
{
  unint64_t result;

  result = qword_10049D778;
  if (!qword_10049D778)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_10049D778);
  }
  return result;
}

uint64_t sub_1002E0E74()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _OWORD v27[2];
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v26 = *(_OWORD *)(v0 + 16);
  v27[0] = v26;
  v27[1] = v2;
  v28 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v27);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v25 = *(_QWORD *)(v4 + 64);
  v6 = type metadata accessor for ScrollViewProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v24 = *(_QWORD *)(v7 + 64);
  v9 = v0 + ((v5 + 56) & ~v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
  {
    swift_release(*(_QWORD *)(v9 + 8));
    swift_release(*(_QWORD *)(v9 + 16));
  }
  v10 = (char *)(v9 + v3[16]);
  v11 = type metadata accessor for Binding(0, v26);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_release(*(_QWORD *)v10);
    v12 = swift_release(*((_QWORD *)v10 + 1));
    (*(void (**)(char *, _QWORD, __n128))(*(_QWORD *)(v26 - 8) + 8))(&v10[*(int *)(v11 + 32)], v26, v12);
  }
  swift_release(*(_QWORD *)(v9 + v3[19] + 8));
  v13 = (_QWORD *)(v9 + v3[22]);
  if (*v13)
    swift_release(v13[1]);
  v14 = swift_release(*(_QWORD *)(v9 + v3[23] + 8));
  v15 = v9 + v3[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v15, 1, v6, v14))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  v16 = sub_100005574(&qword_10049D720);
  swift_release(*(_QWORD *)(v15 + *(int *)(v16 + 28)));
  v17 = (_QWORD *)(v9 + v3[26]);
  v18 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    v20 = swift_release(*v17);
  }
  v21 = (((v5 + 56) & ~v5) + v25 + v8) & ~v8;
  v22 = v21 + v24;
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v0 + v21, v6, v20);
  return swift_deallocObject(v0, v22, v5 | v8 | 7);
}

double sub_1002E10A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v11[0] = v0[2];
  v1 = v11[0];
  v11[1] = v2;
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v5;
  v6 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v11) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_1002DBAD8((_QWORD *)((char *)v0 + v7), (uint64_t)v0 + ((v7 + v8 + v9) & ~v9), v1, v2, v3, v4, v5);
}

double sub_1002E1154(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v13[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v13[0] = v2[2];
  v5 = v13[0];
  v13[1] = v6;
  v13[2] = v7;
  v13[3] = v8;
  v13[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v13) - 8) + 80);
  return sub_1002DC130(v11, a1, a2, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9);
}

uint64_t sub_1002E11EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_1002DC1CC(a1, a2, (_QWORD *)((char *)v2 + ((v10 + 56) & ~v10)), v5, v6, v7, v8, v9);
}

uint64_t sub_1002E1284()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v21 = *(_OWORD *)(v0 + 16);
  v22[0] = v21;
  v22[1] = v2;
  v23 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v22);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v6 + 16))
  {
    swift_release(*(_QWORD *)(v8 + 8));
    swift_release(*(_QWORD *)(v8 + 16));
  }
  v9 = (char *)(v8 + v3[16]);
  v10 = type metadata accessor for Binding(0, v21);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_release(*(_QWORD *)v9);
    v11 = swift_release(*((_QWORD *)v9 + 1));
    (*(void (**)(char *, _QWORD, __n128))(*(_QWORD *)(v21 - 8) + 8))(&v9[*(int *)(v10 + 32)], v21, v11);
  }
  swift_release(*(_QWORD *)(v8 + v3[19] + 8));
  v12 = (_QWORD *)(v8 + v3[22]);
  if (*v12)
    swift_release(v12[1]);
  swift_release(*(_QWORD *)(v8 + v3[23] + 8));
  v13 = v8 + v3[24];
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = sub_100005574(&qword_10049D720);
  swift_release(*(_QWORD *)(v13 + *(int *)(v16 + 28)));
  v17 = (_QWORD *)(v8 + v3[26]);
  v18 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  return swift_deallocObject(v0, v6 + v7, v5 | 7);
}

uint64_t sub_1002E1474(uint64_t a1, uint64_t a2)
{
  return sub_1002E1480(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002DB0F0);
}

uint64_t sub_1002E1480(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[5];

  v7 = *((_QWORD *)v3 + 3);
  v8 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  v10 = *((_QWORD *)v3 + 6);
  v14[0] = *((_QWORD *)v3 + 2);
  v6 = v14[0];
  v14[1] = v7;
  v14[2] = v8;
  v14[3] = v9;
  v14[4] = v10;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v14) - 8) + 80);
  return a3(a1, a2, &v3[(v11 + 56) & ~v11], v6, v7, v8, v9, v10);
}

uint64_t sub_1002E1528()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002E154C(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 56);
  v4 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, *(_QWORD *)(v1 + 16), 0, 0);
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1002E15B8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v21 = *(_OWORD *)(v0 + 16);
  v22[0] = v21;
  v22[1] = v2;
  v23 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v22);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = v0 + v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v6 + 16))
  {
    swift_release(*(_QWORD *)(v8 + 8));
    swift_release(*(_QWORD *)(v8 + 16));
  }
  v9 = (char *)(v8 + v3[16]);
  v10 = type metadata accessor for Binding(0, v21);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_release(*(_QWORD *)v9);
    v11 = swift_release(*((_QWORD *)v9 + 1));
    (*(void (**)(char *, _QWORD, __n128))(*(_QWORD *)(v21 - 8) + 8))(&v9[*(int *)(v10 + 32)], v21, v11);
  }
  swift_release(*(_QWORD *)(v8 + v3[19] + 8));
  v12 = (_QWORD *)(v8 + v3[22]);
  if (*v12)
    swift_release(v12[1]);
  swift_release(*(_QWORD *)(v8 + v3[23] + 8));
  v13 = v8 + v3[24];
  v14 = type metadata accessor for ScrollViewProxy(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16 = sub_100005574(&qword_10049D720);
  swift_release(*(_QWORD *)(v13 + *(int *)(v16 + 28)));
  v17 = (_QWORD *)(v8 + v3[26]);
  v18 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  return swift_deallocObject(v0, ((v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v5 | 7);
}

double sub_1002E17B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v11 = v0[2];
  v1 = v11;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v6 = type metadata accessor for CarouselView(0, (uint64_t)&v11);
  v7 = *(_QWORD *)((char *)v0
                 + ((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v8 = type metadata accessor for CarouselView(0, (uint64_t)&v11);
  return sub_1002DB414(v7, 1, v8, v9);
}

char *CircularProgressView.__allocating_init(size:)(double a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return CircularProgressView.init(size:)(a1, a2);
}

void CircularProgressView.setState(_:animated:)(uint64_t a1, int a2, char a3, double a4)
{
  _BYTE *v4;
  double v6;
  __int16 v7;
  char *v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSNumber v31;
  Class isa;

  v6 = *(double *)&a1;
  LOBYTE(v7) = a2;
  v8 = &v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  if ((a2 & 0x10000) != 0)
  {
    if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
      return;
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 1;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      goto LABEL_12;
    }
LABEL_11:
    v16 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v16, "begin");
    objc_msgSend(v16, "setDisableActions:", 1);
    v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
    if ((v8[10] & 1) == 0)
    {
      v6 = *(double *)v8;
      v7 = *((_WORD *)v8 + 4);
      if ((v7 & 0x100) == 0)
        goto LABEL_5;
      goto LABEL_21;
    }
LABEL_12:
    objc_msgSend(v9, "setLineDashPattern:", 0);
    v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
    if (!v17)
      goto LABEL_33;
    v18 = swift_allocObject(&unk_100462780, 24, 7);
    *(_QWORD *)(v18 + 16) = v4;
    v19 = v4;
    swift_retain(v17);
    sub_1002E34A0((uint64_t)sub_1002E2A48, v18, 0.0);
    swift_release(v17);
    goto LABEL_31;
  }
  if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
  {
LABEL_3:
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 0;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      if ((a2 & 0x100) == 0)
      {
LABEL_5:
        objc_msgSend(v9, "setLineDashPattern:", 0);
        LODWORD(v10) = 1.0;
        objc_msgSend(v9, "setOpacity:", v10);
        if ((v7 & 1) == 0)
        {
          v11 = v6;
          v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
          if (v12)
          {
            v13 = swift_allocObject(&unk_1004627D0, 24, 7);
            *(_QWORD *)(v13 + 16) = v4;
            swift_retain(v12);
            v14 = v4;
            sub_1002E34A0((uint64_t)sub_1002E3FE8, v13, v11);
            swift_release(v12);
            v15 = v13;
LABEL_32:
            swift_release(v15);
            goto LABEL_33;
          }
          objc_msgSend(v9, "setStrokeEnd:", v11);
LABEL_33:
          if ((a3 & 1) == 0)
            objc_msgSend((id)objc_opt_self(CATransaction), "commit");
          return;
        }
        v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator;
        v18 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
        if (!v18)
        {
          v23 = type metadata accessor for CircularProgressView.SpinAnimator();
          v18 = swift_allocObject(v23, 41, 7);
          *(_BYTE *)(v18 + 40) = 0;
          *(_QWORD *)(v18 + 16) = 0xD000000000000010;
          *(_QWORD *)(v18 + 24) = 0x80000001003B9CD0;
          *(_QWORD *)(v18 + 32) = v9;
          v24 = v9;
        }
        *(_QWORD *)&v4[v22] = v18;
        if (!v18)
          goto LABEL_33;
        swift_retain(v18);
        sub_1002E315C();
LABEL_31:
        v15 = v18;
        goto LABEL_32;
      }
LABEL_21:
      if (*(_QWORD *)&v6 | v7)
      {
        LODWORD(a4) = 0;
        objc_msgSend(v9, "setOpacity:", a4);
        goto LABEL_33;
      }
      v25 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
      if (v25)
      {
        v26 = swift_allocObject(&unk_1004627A8, 32, 7);
        *(_QWORD *)(v26 + 16) = v4;
        *(_QWORD *)(v26 + 24) = v9;
        v27 = v4;
        v28 = v9;
        swift_retain(v25);
        sub_1002E34A0((uint64_t)sub_1002E39D0, v26, 1.0);
        swift_release(v25);
        v15 = v26;
        goto LABEL_32;
      }
      objc_msgSend(v9, "setStrokeEnd:", 1.0);
      v29 = sub_100005574(&qword_100499F50);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100384730;
      sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
      v31.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
      *(NSNumber *)(v30 + 32) = v31;
      specialized Array._endMutation()(v31.super.super.isa);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v9, "setLineDashPattern:", isa);

      goto LABEL_33;
    }
    goto LABEL_11;
  }
  v20 = *(double *)v8;
  v21 = *((_WORD *)v8 + 4);
  if ((a2 & 0x100) != 0)
  {
    if (a1 | a2)
    {
      if ((*((_WORD *)v8 + 4) & 0x100) == 0 || !(*(_QWORD *)&v20 | *((_WORD *)v8 + 4)))
        goto LABEL_3;
    }
    else if ((*((_WORD *)v8 + 4) & 0x100) == 0 || *(_QWORD *)&v20 | *((_WORD *)v8 + 4))
    {
      goto LABEL_3;
    }
  }
  else
  {
    if ((*((_WORD *)v8 + 4) & 0x100) != 0)
      goto LABEL_3;
    if ((a2 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        return;
      goto LABEL_3;
    }
    if ((v21 & 1) != 0)
      goto LABEL_3;
    HIDWORD(a4) = HIDWORD(a1);
    if (*(double *)&a1 != v20)
      goto LABEL_3;
  }
}

uint64_t static CircularProgressView.State.__derived_enum_equals(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  _BOOL4 v5;
  _BOOL4 v6;

  if ((a2 & 0x100) != 0)
  {
    v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      v6 = (a3 | a4) != 0;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (a1 | a2)
      return v6;
    else
      return v5;
  }
  else
  {
    if ((a4 & 0x100) == 0)
    {
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) != 0)
          return 1;
      }
      else if ((a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL sub_1002E1D70(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(double *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 9) == 1)
  {
    if (*(_QWORD *)&v2 | v3)
    {
      if (*(_BYTE *)(a2 + 9))
        return (*(_QWORD *)&v4 | v5) != 0;
    }
    else if (*(_BYTE *)(a2 + 9))
    {
      return (*(_QWORD *)&v4 | v5) == 0;
    }
    return 0;
  }
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    return 0;
  if ((v3 & 1) != 0)
    return (v5 & 1) != 0;
  return (v5 & 1) == 0 && v2 == v4;
}

char *CircularProgressView.init(size:)(double a1, double a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  double *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v6 = 0;
  *((_WORD *)v6 + 4) = 0;
  v6[10] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v8 = objc_allocWithZone((Class)CAShapeLayer);
  v9 = v2;
  *(_QWORD *)&v2[v7] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v11 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  *v11 = a1;
  v11[1] = a2;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, a1, a2);
  v13 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  v14 = *(void **)&v12[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v12;
  v17 = v14;
  v18 = objc_msgSend(v15, "clearColor");
  v19 = objc_msgSend(v18, "CGColor");

  objc_msgSend(v17, "setFillColor:", v19);
  v20 = *(void **)&v12[v13];
  objc_msgSend(v20, "setLineWidth:", 2.5);
  v21 = objc_msgSend(v16, "layer");
  objc_msgSend(v21, "addSublayer:", v20);

  v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v23 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  objc_msgSend(v23, "setLineCap:", kCALineCapRound);
  objc_msgSend(v23, "setStrokeEnd:", 0.0);
  v24 = v23;
  v25 = objc_msgSend(v15, "clearColor");
  v26 = objc_msgSend(v25, "CGColor");

  objc_msgSend(v24, "setFillColor:", v26);
  v27 = *(void **)&v16[v22];
  objc_msgSend(v27, "setLineWidth:", 2.5);
  objc_msgSend(v27, "setLineDashPhase:", 6.0);
  v28 = objc_msgSend(v16, "layer");
  objc_msgSend(v28, "addSublayer:", v27);

  sub_1002E20DC();
  return v16;
}

void sub_1002E20DC()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v3 = objc_msgSend(v2, "CGColor");

  objc_msgSend(v1, "setStrokeColor:", v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v5 = objc_msgSend(v0, "tintColor");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "CGColor");

    objc_msgSend(v4, "setStrokeColor:", v7);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CircularProgressView.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_1002E20DC();
}

Swift::Void __swiftcall CircularProgressView.layoutSubviews()()
{
  char *v0;
  double x;
  double y;
  double width;
  double height;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  CGFloat v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double *v22;
  id v23;
  _BYTE v24[24];
  objc_super v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v25, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  v5 = CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  v6 = CGRectGetHeight(v27);
  if (v6 >= v5)
    v6 = v5;
  v7 = (v6 + -2.5) * 0.5;
  v8 = CGRect.center.getter(x, y, width, height);
  v10 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v8, v9, v7, -1.57079633, 4.71238898);
  v11 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v12 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v11, "setPath:", v12);

  v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v14 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v13, "setPath:", v14);

  objc_msgSend(v13, "setBounds:", x, y, width, height);
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  v15 = CGRectGetWidth(v28) * 0.5;
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  objc_msgSend(v13, "setPosition:", v15, CGRectGetHeight(v29) * 0.5);
  v16 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v17 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v17)
  {
    objc_msgSend(v17, "setFrame:", x, y, width, height);
    v18 = *(void **)&v0[v16];
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v19, "frame");
      v20 = CGRectGetWidth(v30);
      objc_msgSend(v19, "frame");
      v21 = CGRectGetHeight(v31);
      if (v21 < v20)
        v20 = v21;
      v22 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale];
      swift_beginAccess(v22, v24, 0, 0);
      v23 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", v20 * *v22);
      objc_msgSend(v19, "setPreferredSymbolConfiguration:", v23);

      v10 = v23;
    }
  }

}

double CircularProgressView.sizeThatFits(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.preferredSize.setter(double a1, double a2)
{
  char *v2;
  double *v5;
  double v6;
  double v7;
  _BYTE v9[24];

  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize], v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  if (v6 != a1 || v7 != a2)
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
}

void (*CircularProgressView.preferredSize.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  _OWORD *v5;

  v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  *((_QWORD *)v3 + 5) = v1;
  *((_QWORD *)v3 + 6) = v4;
  v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *(_OWORD *)(v3 + 24) = *v5;
  return sub_1002E2738;
}

void sub_1002E2738(id **a1)
{
  id *v1;
  double v2;
  double *v3;
  double v4;
  double v5;
  double v6;

  v1 = *a1;
  v2 = *((double *)*a1 + 3);
  v3 = (double *)((char *)(*a1)[6] + (_QWORD)(*a1)[5]);
  v4 = *((double *)*a1 + 4);
  v5 = *v3;
  v6 = v3[1];
  *v3 = v2;
  v3[1] = v4;
  if (v2 != v5 || v4 != v6)
    objc_msgSend(v1[5], "invalidateIntrinsicContentSize");
  free(v1);
}

uint64_t CircularProgressView.state.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
}

void CircularProgressView.state.setter(uint64_t a1, int a2, double a3)
{
  CircularProgressView.setState(_:animated:)(a1, a2 & 0x1FFFF, 0, a3);
}

void (*CircularProgressView.state.modify(uint64_t a1))(uint64_t a1, double a2)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
  return sub_1002E2804;
}

void sub_1002E2804(uint64_t a1, double a2)
{
  CircularProgressView.setState(_:animated:)(*(_QWORD *)a1, *(unsigned __int16 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 10) << 16), 0, a2);
}

double sub_1002E2844(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  NSNumber v9;
  Class isa;
  uint64_t v11;
  double result;
  double v13;
  __int16 v14;

  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v5)
    v6 = v5 == a1;
  else
    v6 = 0;
  if (v6)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v7 = sub_100005574(&qword_100499F50);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100384730;
  sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
  v9.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
  *(NSNumber *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9.super.super.isa);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a3, "setLineDashPattern:", isa);

  v11 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v13 = *(double *)v11;
    v14 = *(_WORD *)(v11 + 8);
    if ((v14 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v13 | v14))
        return 1.0;
    }
    else
    {
      result = v13;
      if ((v14 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

double sub_1002E298C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  double result;
  double v7;
  __int16 v8;

  v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v3)
    v4 = v3 == a1;
  else
    v4 = 0;
  if (v4)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v5 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v7 = *(double *)v5;
    v8 = *(_WORD *)(v5 + 8);
    if ((v8 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v7 | v8))
        return 1.0;
    }
    else
    {
      result = v7;
      if ((v8 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

uint64_t sub_1002E2A24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1002E2A48(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E298C(a1, *(_QWORD *)(v1 + 16));
}

void sub_1002E2A60()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  double Width;
  double Height;
  double *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];
  CGRect v20;
  CGRect v21;

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v19, 0, 0);
  v2 = *v1;
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v4)
    {
      v5 = v2;
      v6 = v4;
    }
    else
    {
      v8 = objc_allocWithZone((Class)UIImageView);
      v9 = v2;
      v6 = objc_msgSend(v8, "init");
    }
    v10 = v4;
    objc_msgSend(v6, "setImage:", v2);
    v11 = *(void **)(v0 + v3);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v12, "frame");
      Width = CGRectGetWidth(v20);
      objc_msgSend(v12, "frame");
      Height = CGRectGetHeight(v21);
      if (Height < Width)
        Width = Height;
      v15 = (double *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
      swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, &v18, 0, 0);
      v16 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", Width * *v15);
      objc_msgSend(v12, "setPreferredSymbolConfiguration:", v16);

      v17 = *(void **)(v0 + v3);
    }
    else
    {
      v17 = 0;
    }
    *(_QWORD *)(v0 + v3) = v6;
    v7 = v6;
    sub_1002E2D40(v17);

  }
  else
  {
    v7 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView) = 0;
    sub_1002E2D40(v7);
  }

}

void *CircularProgressView.image.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CircularProgressView.image.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_1002E2A60();
}

void (*CircularProgressView.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, a1, 33, 0);
  return sub_1002E2D10;
}

void sub_1002E2D10(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1002E2A60();
}

void sub_1002E2D40(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_10:
      v13 = v5;
      objc_msgSend(v13, "setContentMode:", 4);
      objc_msgSend(v2, "addSubview:", v13);

      return;
    }
    sub_1000087DC(0, (unint64_t *)&unk_10049D978, UIImageView_ptr);
    v6 = v5;
    v3 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v8 = v3;
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
    v11 = v2;
    v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

    if ((v10 & 1) != 0)
      objc_msgSend(v8, "removeFromSuperview");
  }

  v5 = *(void **)&v2[v4];
  if (v5)
    goto LABEL_10;
}

double CircularProgressView.imageScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.imageScale.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  void *v5;
  id v6;
  double Width;
  double Height;
  id v9;
  _BYTE v10[24];
  CGRect v11;
  CGRect v12;

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v10, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, "frame");
      Width = CGRectGetWidth(v11);
      objc_msgSend(v6, "frame");
      Height = CGRectGetHeight(v12);
      if (Height >= Width)
        Height = Width;
      v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *v3 * Height);
      objc_msgSend(v6, "setPreferredSymbolConfiguration:", v9);

    }
  }
}

void (*CircularProgressView.imageScale.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1002E3060;
}

void sub_1002E3060(uint64_t a1, char a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  double Width;
  double Height;
  id v13;
  CGRect v14;
  CGRect v15;

  v2 = *(_QWORD **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    CircularProgressView.imageScale.setter(v3);
  }
  else
  {
    v5 = v2[4];
    v4 = v2[5];
    v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      v7 = v2[4];
      v8 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
      if (v8)
      {
        v9 = v2[5];
        v10 = v8;
        objc_msgSend(v10, "frame");
        Width = CGRectGetWidth(v14);
        objc_msgSend(v10, "frame");
        Height = CGRectGetHeight(v15);
        if (Height >= Width)
          Height = Width;
        v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *(double *)(v7 + v9) * Height);
        objc_msgSend(v10, "setPreferredSymbolConfiguration:", v13);

      }
    }
  }
  free(v2);
}

void sub_1002E315C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  Swift::String v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  Class isa;
  Class v13;
  double v14;
  CFTimeInterval v15;
  id v16;
  long double v17;
  NSString v18;
  uint64_t v19;
  _OWORD v20[2];
  _QWORD v21[4];

  *(_BYTE *)(v0 + 40) = 0;
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v4);

  v21[0] = v3;
  v21[1] = v2;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x676E69646E65;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, "removeAnimationForKey:", v6);

  objc_msgSend(v1, "setStrokeEnd:", 0.6);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v7);

  v9 = objc_msgSend(v1, "presentationLayer");
  if (!v9)
    v9 = v1;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "valueForKeyPath:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_10024ED08((uint64_t)v20, (uint64_t)v21);
  if (v21[3])
    swift_dynamicCast(&v19, v21, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  else
    sub_10024ED50((uint64_t)v21);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setFromValue:", isa);

  if (qword_100498B80 != -1)
    swift_once(&qword_100498B80, sub_1002E3B58);
  v13 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setToValue:", v13);

  objc_msgSend(v8, "setRemovedOnCompletion:", 1);
  objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
  objc_msgSend(v8, "setDuration:", 1.0);
  LODWORD(v14) = 2139095040;
  objc_msgSend(v8, "setRepeatCount:", v14);
  v15 = CACurrentMediaTime();
  v16 = v8;
  objc_msgSend(v16, "duration");
  objc_msgSend(v16, "setBeginTime:", (double)(v15 - fmod(v15, v17)));

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addAnimation:forKey:", v16, v18);

}

void sub_1002E34A0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  double v11;
  NSString v12;
  void *v13;
  id v14;
  double v15;
  Class isa;
  Class v17;
  NSString v18;
  id v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  Class v26;
  objc_class *v27;
  char *v28;
  char *v29;
  id v30;
  char *v31;
  uint64_t v32;
  void (**v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  Swift::String v40;
  NSString v41;
  uint64_t v43;
  objc_super v44;
  _OWORD v45[2];
  _QWORD v46[4];

  if ((*(_BYTE *)(v3 + 40) & 1) == 0)
  {
    v4 = v3;
    *(_BYTE *)(v3 + 40) = 1;
    v7 = *(void **)(v3 + 32);
    v8 = objc_msgSend(v7, "presentationLayer");
    if (!v8)
      v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "valueForKeyPath:", v9);

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)(v10);
      swift_unknownObjectRelease(v10);
    }
    else
    {
      memset(v45, 0, sizeof(v45));
    }
    sub_10024ED08((uint64_t)v45, (uint64_t)v46);
    if (v46[3])
      swift_dynamicCast(&v43, v46, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
    else
      sub_10024ED50((uint64_t)v46);
    v11 = fmin(a3, 0.1);
    v12 = String._bridgeToObjectiveC()();
    v13 = (void *)objc_opt_self(CABasicAnimation);
    v14 = objc_msgSend(v13, "animationWithKeyPath:", v12);

    if (qword_100498B80 != -1)
      swift_once(&qword_100498B80, sub_1002E3B58);
    v15 = *(double *)&qword_10049D790 - (6.28318531 - (1.0 - (0.6 - v11)) * 6.28318531);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setFromValue:", isa);

    v17 = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setToValue:", v17);

    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v13, "animationWithKeyPath:", v18);

    v20 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v19, "setToValue:", v20);

    v21 = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");
    v22 = sub_100005574(&qword_100499F50);
    v23 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100384B70;
    *(_QWORD *)(v23 + 32) = v14;
    *(_QWORD *)(v23 + 40) = v19;
    v46[0] = v23;
    specialized Array._endMutation()(v23);
    sub_1000087DC(0, &qword_10049D988, CAAnimation_ptr);
    v24 = v14;
    v25 = v19;
    v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v21, "setAnimations:", v26);

    objc_msgSend(v21, "setDuration:", v15 * (1.0 / *(double *)&qword_10049D790));
    objc_msgSend(v21, "setFillMode:", kCAFillModeForwards);
    objc_msgSend(v21, "setRemovedOnCompletion:", 0);
    v27 = (objc_class *)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
    v28 = (char *)objc_allocWithZone(v27);
    v29 = &v28[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    v44.receiver = v28;
    v44.super_class = v27;
    v30 = v21;
    v31 = (char *)objc_msgSendSuper2(&v44, "init");
    objc_msgSend(v30, "setDelegate:", v31);

    v32 = swift_allocObject(&unk_100462888, 64, 7);
    *(_QWORD *)(v32 + 16) = v31;
    *(_QWORD *)(v32 + 24) = v4;
    *(double *)(v32 + 32) = v11;
    *(_QWORD *)(v32 + 40) = a1;
    *(_QWORD *)(v32 + 48) = a2;
    *(double *)(v32 + 56) = a3;
    v33 = (void (**)(uint64_t))&v31[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v34 = *(_QWORD *)&v31[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v35 = *(_QWORD *)&v31[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop
                        + 8];
    *v33 = sub_1002E3FD4;
    v33[1] = (void (*)(uint64_t))v32;
    v36 = v31;
    swift_retain(v4);
    swift_retain(a2);
    sub_10003A5C8(v34, v35);
    v37 = *(_QWORD *)(v4 + 16);
    v38 = *(_QWORD *)(v4 + 24);
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "removeAnimationForKey:", v39);

    v46[0] = v37;
    v46[1] = v38;
    swift_bridgeObjectRetain();
    v40._countAndFlagsBits = 0x676E69646E65;
    v40._object = (void *)0xE600000000000000;
    String.append(_:)(v40);
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, "addAnimation:forKey:", v30, v41);

  }
}

uint64_t sub_1002E39A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1002E39D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E2844(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator()
{
  return objc_opt_self(_TtCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator);
}

void sub_1002E39F8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v10;
  void *v11;
  Swift::String v12;
  NSString v13;
  double v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_BYTE *)(a5 + 40) == 1)
  {
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "begin");
    objc_msgSend(v10, "setDisableActions:", 1);
    v11 = *(void **)(a5 + 32);
    v16 = *(_QWORD *)(a5 + 16);
    v17 = *(_QWORD *)(a5 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x676E69646E65;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v11, "removeAnimationForKey:", v13, v16);

    objc_msgSend(v11, "setStrokeStart:", 0.0);
    objc_msgSend(v11, "setStrokeEnd:", a1);
    objc_msgSend(v10, "commit");
    v14 = COERCE_DOUBLE(a6(a5));
    if ((v15 & 1) != 0)
      v14 = a2;
    objc_msgSend(v11, "setStrokeEnd:", v14);
  }
}

void sub_1002E3B58()
{
  qword_10049D790 = 0x401921FB54442D18;
}

id sub_1002E3C34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002E3C7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 41, 7);
}

void CircularProgressView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.CircularProgressView", 32, "init(frame:)", 12, 0);
  __break(1u);
}

void _s11MusicCoreUI20CircularProgressViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v1 = 0;
  *((_WORD *)v1 + 4) = 0;
  v1[10] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/CircularProgressView.swift", 38, 2, 45, 0);
  __break(1u);
}

uint64_t type metadata accessor for CircularProgressView()
{
  return objc_opt_self(_TtC11MusicCoreUI20CircularProgressView);
}

uint64_t initializeBufferWithCopyOfBuffer for CircularProgressView.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t sub_1002E3F30(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1002E3F4C(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.State()
{
  return &type metadata for CircularProgressView.State;
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator.Delegate()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate);
}

uint64_t sub_1002E3FA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1002E3FD4(uint64_t a1)
{
  uint64_t v1;

  sub_1002E39F8(*(double *)(v1 + 32), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1002E3FF0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  result = sub_100257EF8(result, v14, 1, v3);
  v3 = (_QWORD *)result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  if ((v3[3] >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = sub_100005574(&qword_1004991A0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  result = swift_arrayInitWithCopy((char *)v3 + v10 + *(_QWORD *)(v9 + 72) * v7, v6 + v10, v2, v8);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1002E40F4(uint64_t a1)
{
  return sub_1002E4160(a1, (unint64_t *)_s5GlyphCMa, &qword_10049E6D0, &qword_10049E6C8, (uint64_t *)sub_1002701D0);
}

uint64_t sub_1002E4118(uint64_t a1)
{
  return sub_1002E4160(a1, (unint64_t *)_s8SyllableCMa, &qword_10049E6E0, &qword_10049E6D8, (uint64_t *)sub_1002701D0);
}

uint64_t sub_1002E413C(uint64_t a1)
{
  return sub_1002E4160(a1, (unint64_t *)_s4WordCMa, &qword_10049E6F0, &qword_10049E6E8, (uint64_t *)sub_1000F3274);
}

uint64_t sub_1002E4160(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1002FD884(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (uint64_t (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease();
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E4370(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(result + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  result = sub_100258BC8(result, v14, 1, v3);
  v3 = (_QWORD *)result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v7 = v3[2];
  v8 = (v3[3] >> 1) - v7;
  result = type metadata accessor for Playlist.Collaborator(0);
  if (v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = *(_QWORD *)(result - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  result = swift_arrayInitWithCopy((char *)v3 + v10 + *(_QWORD *)(v9 + 72) * v7, v6 + v10, v2, result);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t Collaboration.Management.Model.__allocating_init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = sub_1002FDD6C(a1, a2);
  swift_release(a1);
  return v5;
}

uint64_t Collaboration.Management.Model.init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1002FDD6C(a1, a2);
  swift_release(a1);
  return v3;
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.pendingCollaborators(uint64_t a1)
{
  return sub_1001710A4(a1, &qword_10049DA50);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.transientCollaborators(uint64_t a1)
{
  return sub_1001710A4(a1, &qword_10049DA58);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.playlist(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  Published.init(initialValue:)(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_1002E45B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  char v8;
  _BYTE v9[24];
  _QWORD v10[15];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    static ApplicationCapabilities.shared.getter((uint64_t)v10);
    sub_1000BC0D0(v10);
    v5 = BYTE1(v10[0]);
    KeyPath = swift_getKeyPath(&unk_10039D5D8);
    v7 = swift_getKeyPath(&unk_10039D600);
    v8 = v5;
    return static Published.subscript.setter(&v8, v4, KeyPath, v7);
  }
  return result;
}

uint64_t sub_1002E4648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_100005574(&qword_10049ED08);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049ED10);
  v5[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[9] = v8;
  v5[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049ED18);
  v5[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[12] = v10;
  v5[13] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049ED20);
  v5[14] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[15] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v13);
  v5[17] = swift_task_alloc(v13);
  return swift_task_switch(sub_1002E4738, 0, 0);
}

uint64_t sub_1002E4738()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[14];
  v4 = v0[15];
  v5 = type metadata accessor for Playlist(0);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = sub_100006924(&qword_10049ED28, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  MusicLibrarySectionedRequest.init()(v5, v6, &protocol witness table for Playlist, v7);
  KeyPath = swift_getKeyPath(&unk_10039D848);
  v0[2] = Playlist.id.getter();
  v0[3] = v9;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)(KeyPath, v0 + 2, v3, &protocol witness table for Playlist, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  v10 = swift_release(KeyPath);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v2, v1, v3, v10);
  v11 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E487C, v12, v13);
}

uint64_t sub_1002E487C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[14];
  swift_release(v0[18]);
  v4 = sub_10002FFB8((unint64_t *)&unk_10049ED30, &qword_10049ED20, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v0[19] = MusicAutoupdatableRequest.autoupdatingResponse.getter(v3, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[20] = v5;
  v5(v1, v3);
  return swift_task_switch(sub_1002E4908, 0, 0);
}

uint64_t sub_1002E4908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = *(_QWORD *)(v0 + 152);
  v4 = swift_release(v3);
  v5 = *(_QWORD *)(v1 + v2);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v11 = *(_QWORD *)(v0 + 56);
    v34 = *(_QWORD *)(v0 + 48);
    v35 = *(_QWORD *)(v0 + 96);
    v12 = swift_retain(v5);
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v12);
    swift_release(v5);
    v13 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
    *(_QWORD *)(v0 + 32) = static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
    v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
    v22 = sub_10002FFB8(&qword_10049ED40, &qword_10049ED10, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    sub_100304E94();
    Publisher.receive<A>(on:options:)(v0 + 32, v11, v10, v13, v22);
    sub_100008758(v11, &qword_10049ED08);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    v23 = swift_allocObject(&unk_100462FC8, 24, 7);
    swift_weakInit(v23 + 16, v34);
    v24 = sub_10002FFB8(&qword_10049ED50, &qword_10049ED18, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v5 = Publisher<>.sink(receiveValue:)(sub_100304EEC, v23, v7, v24);
    v25 = swift_release(v23);
    (*(void (**)(uint64_t, uint64_t, __n128))(v35 + 8))(v6, v7, v25);
  }
  v27 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 48);
  v30 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, __n128))(v0 + 160))(v26, *(_QWORD *)(v0 + 112), v4);
  v32 = *(_QWORD *)(v31
                  + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription);
  *(_QWORD *)(v31
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = v5;
  swift_release(v32);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002E4B30(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t Strong;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *);
  void (*v71)(_QWORD, _QWORD, _QWORD);
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  _BOOL4 v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint8_t *v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  char *v145;
  uint64_t v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  void (*v191)(char *, uint64_t, uint64_t);
  uint64_t v192;
  NSObject *v193;
  os_log_type_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  BOOL v208;
  void (*v209)(char *, uint64_t);
  void (*v210)(uint64_t *, _QWORD);
  uint64_t v211;
  uint64_t v212;
  void (*v213)(char *);
  uint64_t v214;
  char *v215;
  uint64_t (*v216)(uint64_t, char *, uint64_t);
  uint64_t v217;
  uint64_t v218;
  char *v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void (*v227)(uint64_t *, _QWORD);
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __n128 v232;
  _QWORD *v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  char *v238;
  void (*v239)(char *, uint64_t);
  char *v240;
  char *v241;
  uint64_t v242;
  NSObject *v243;
  os_log_type_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  unsigned int (*v255)(char *, uint64_t, uint64_t);
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  char *v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  void (*v284)(char *, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  _QWORD *v289;
  void (*v290)(char *);
  char *v291;
  _QWORD *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308[8];
  char v309[8];
  _QWORD *v310;
  char *v311;
  uint64_t v312;
  char v313[8];
  char v314[8];
  char v315[8];
  char v316[8];
  char v317[8];

  v290 = a1;
  sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v286 = (uint64_t)&v252 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v304 = type metadata accessor for Playlist.Collaborator(0);
  v281 = *(_QWORD *)(v304 - 8);
  __chkstk_darwin();
  v294 = (char *)&v252 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v293 = (char *)&v252 - v5;
  __chkstk_darwin();
  v300 = (uint64_t)&v252 - v6;
  __chkstk_darwin();
  v280 = (char *)&v252 - v7;
  v297 = sub_100005574(&qword_10049ED58);
  v275 = *(_QWORD *)(v297 - 8);
  __chkstk_darwin();
  v296 = (char *)&v252 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = sub_100005574(&qword_10049ED60);
  __chkstk_darwin();
  v273 = (char *)&v252 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v295 = (char *)&v252 - v10;
  v263 = type metadata accessor for Date(0);
  v262 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin();
  v258 = (char *)&v252 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = sub_100005574(&qword_10049ED68);
  __chkstk_darwin();
  v265 = (uint64_t)&v252 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = type metadata accessor for Playlist(0);
  v270 = *(_QWORD *)(v271 - 8);
  __chkstk_darwin();
  v268 = (char *)&v252 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v269 = (char *)&v252 - v14;
  __chkstk_darwin();
  v261 = (uint64_t *)((char *)&v252 - v15);
  sub_100005574(&qword_10049E698);
  __chkstk_darwin();
  v259 = (uint64_t)&v252 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v267 = (uint64_t)&v252 - v17;
  __chkstk_darwin();
  v266 = (uint64_t)&v252 - v18;
  sub_100005574(&qword_10049E6B0);
  __chkstk_darwin();
  v279 = (char *)&v252 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v287 = type metadata accessor for Playlist.Collaborator.Status(0);
  v292 = *(_QWORD **)(v287 - 8);
  __chkstk_darwin();
  v277 = (char *)&v252 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v278 = (char *)&v252 - v21;
  v298 = type metadata accessor for Playlist.Collaboration(0);
  v301 = *(_QWORD *)(v298 - 8);
  __chkstk_darwin();
  v282 = (char *)&v252 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v306 = sub_100005574(&qword_10049ED70);
  v305 = *(_QWORD *)(v306 - 8);
  __chkstk_darwin();
  v299 = (char *)&v252 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = type metadata accessor for Logger(0, v24);
  v25 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin();
  v288 = (char *)&v252 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v272 = (char *)&v252 - v27;
  __chkstk_darwin();
  v276 = (char *)&v252 - v28;
  __chkstk_darwin();
  v30 = (char *)&v252 - v29;
  v284 = (void (*)(char *, uint64_t))sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v260 = (char *)&v252 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v285 = (uint64_t)&v252 - v32;
  __chkstk_darwin();
  v283 = (uint64_t)&v252 - v33;
  __chkstk_darwin();
  v289 = (uint64_t *)((char *)&v252 - v34);
  __chkstk_darwin();
  v36 = (char *)&v252 - v35;
  sub_100005574(&qword_10049ED78);
  __chkstk_darwin();
  v38 = (char *)&v252 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_100005574(&qword_10049ED80);
  __chkstk_darwin();
  v291 = (char *)&v252 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v42 = (char *)&v252 - v41;
  __chkstk_darwin();
  v44 = (char *)&v252 - v43;
  __chkstk_darwin();
  v46 = (char *)&v252 - v45;
  __chkstk_darwin();
  v307 = (uint64_t)&v252 - v47;
  a2 += 16;
  swift_beginAccess(a2, v317, 0, 0);
  v303 = a2;
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v49 = Strong;
    v50 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
    swift_retain(v50);
    v51 = swift_release(v49);
    if (v50)
    {
      v52 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v51);
      swift_release(v50);
      if ((v52 & 1) != 0)
      {
        v257 = v36;
        sub_100014A7C((uint64_t)v290, (uint64_t)v38, &qword_10049ED78);
        v53 = sub_100005574(&qword_10049ED88);
        v54 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v53) == 1)
        {
          sub_100008758((uint64_t)v38, &qword_10049ED78);
          v55 = v305;
          v56 = v307;
          v57 = v306;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v305 + 56))(v307, 1, 1, v306);
        }
        else
        {
          v58 = MusicLibrarySectionedResponse.sections.getter(v53);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v53);
          v55 = v305;
          v56 = v307;
          v59 = v306;
          if (*(_QWORD *)(v58 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v305 + 16))(v307, v58 + ((*(unsigned __int8 *)(v305 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v305 + 80)), v306);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v59);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v305 + 56))(v307, 1, 1, v306);
          }
          v57 = v59;
          swift_bridgeObjectRelease();
        }
        sub_100014A7C(v56, (uint64_t)v46, &qword_10049ED80);
        v255 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        if (v255(v46, 1, v57) == 1)
        {
          sub_100008758((uint64_t)v46, &qword_10049ED80);
          v60 = (uint64_t)v257;
          v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v301 + 56))(v257, 1, 1, v298);
        }
        else
        {
          KeyPath = swift_getKeyPath(&unk_10039D870);
          v64 = v30;
          v65 = v25;
          v66 = (uint64_t)v257;
          MusicLibrarySection.subscript.getter(KeyPath, v57);
          v60 = v66;
          v25 = v65;
          v30 = v64;
          v67 = swift_release(KeyPath);
          v61 = (*(uint64_t (**)(char *, uint64_t, __n128))(v305 + 8))(v46, v306, v67);
        }
        v68 = v302;
        v254 = v30;
        v69 = Logger.collaboration.unsafeMutableAddressor(v61, v62);
        v70 = *(void (**)(char *))(v25 + 16);
        v256 = v69;
        v70(v30);
        sub_100014A7C(v56, (uint64_t)v44, &qword_10049ED80);
        v71 = (void (*)(_QWORD, _QWORD, _QWORD))v289;
        v72 = sub_100014A7C(v60, (uint64_t)v289, &qword_10049E690);
        v73 = Logger.logObject.getter(v72);
        v74 = static os_log_type_t.default.getter();
        v75 = os_log_type_enabled(v73, v74);
        v290 = v70;
        if (v75)
        {
          v76 = swift_slowAlloc(22, -1);
          v253 = swift_slowAlloc(64, -1);
          v312 = v253;
          *(_DWORD *)v76 = 136446466;
          sub_100014A7C((uint64_t)v44, (uint64_t)v42, &qword_10049ED80);
          v77 = (char *)String.init<A>(describing:)(v42, v39);
          *(_QWORD *)(v76 + 4) = sub_100249A1C(v77, v78, &v312);
          swift_bridgeObjectRelease();
          sub_100008758((uint64_t)v44, &qword_10049ED80);
          *(_WORD *)(v76 + 12) = 2082;
          v79 = v283;
          sub_100014A7C((uint64_t)v71, v283, &qword_10049E690);
          v80 = (char *)String.init<A>(describing:)(v79, v284);
          *(_QWORD *)(v76 + 14) = sub_100249A1C(v80, v81, &v312);
          swift_bridgeObjectRelease();
          v68 = v302;
          sub_100008758((uint64_t)v71, &qword_10049E690);
          _os_log_impl((void *)&_mh_execute_header, v73, v74, "    [Management] Did update collaborative playlist with:\n        playlist=%{public}s\")\n        collaboration=%{public}s", (uint8_t *)v76, 0x16u);
          v82 = v253;
          swift_arrayDestroy(v253, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v82, -1, -1);
          v83 = v76;
          v70 = v290;
          swift_slowDealloc(v83, -1, -1);
        }
        else
        {
          sub_100008758((uint64_t)v44, &qword_10049ED80);
          sub_100008758((uint64_t)v71, &qword_10049E690);
        }

        v84 = *(void (**)(char *, uint64_t))(v25 + 8);
        v84(v254, v68);
        v85 = v299;
        v86 = v292;
        v87 = v291;
        sub_100014A7C(v307, (uint64_t)v291, &qword_10049ED80);
        v88 = v306;
        v89 = v255(v87, 1, v306);
        v90 = v301;
        v91 = v305;
        if (v89 == 1)
        {
          sub_100008758((uint64_t)v87, &qword_10049ED80);
LABEL_26:
          v106 = v288;
          v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v288, v256, v68);
          v108 = Logger.logObject.getter(v107);
          v109 = static os_log_type_t.default.getter();
          v110 = os_log_type_enabled(v108, v109);
          v111 = v307;
          if (v110)
          {
            v112 = v84;
            v113 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v113 = 0;
            _os_log_impl((void *)&_mh_execute_header, v108, v109, "[Management] Dismissing management sheet", v113, 2u);
            v114 = v113;
            v84 = v112;
            swift_slowDealloc(v114, -1, -1);
          }

          v84(v106, v68);
          v115 = v303;
          swift_beginAccess(v303, &v312, 0, 0);
          v116 = swift_weakLoadStrong(v115);
          if (v116)
          {
            v117 = v116;
            v118 = swift_getKeyPath(&unk_10039CDB0);
            v119 = swift_getKeyPath(&unk_10039CDD8);
            v316[0] = 1;
            static Published.subscript.setter(v316, v117, v118, v119);
          }
          sub_100008758((uint64_t)v257, &qword_10049E690);
          v120 = v111;
LABEL_31:
          sub_100008758(v120, &qword_10049ED80);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v305 + 32))(v85, v87, v88);
        v92 = v285;
        sub_100014A7C((uint64_t)v257, v285, &qword_10049E690);
        v93 = v298;
        v292 = *(_QWORD **)(v90 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v292)(v92, 1, v298) == 1)
        {
          (*(void (**)(char *, uint64_t))(v91 + 8))(v85, v88);
          sub_100008758(v92, &qword_10049E690);
LABEL_25:
          v70 = v290;
          goto LABEL_26;
        }
        v284 = v84;
        v94 = v282;
        v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 32))(v282, v92, v93);
        v96 = (uint64_t)v279;
        Playlist.Collaboration.collaboratorStatus.getter(v95);
        v97 = v93;
        v98 = v287;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v86[6])(v96, 1, v287) == 1)
        {
          (*(void (**)(char *, uint64_t))(v90 + 8))(v94, v97);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v299, v306);
          sub_100008758(v96, &qword_10049E6B0);
LABEL_24:
          v84 = v284;
          goto LABEL_25;
        }
        v99 = v278;
        ((void (*)(char *, uint64_t, uint64_t))v86[4])(v278, v96, v98);
        v100 = v277;
        ((void (*)(char *, _QWORD, uint64_t))v86[13])(v277, enum case for Playlist.Collaborator.Status.notJoined(_:), v98);
        v101 = sub_100006924(&qword_10049E6B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
        v102 = dispatch thunk of static Equatable.== infix(_:_:)(v99, v100, v287, v101);
        v103 = v287;
        v104 = v102;
        v105 = (void (*)(char *, uint64_t))v86[1];
        v105(v100, v287);
        if ((v104 & 1) != 0)
        {
          v105(v99, v103);
          (*(void (**)(char *, uint64_t))(v90 + 8))(v282, v298);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v299, v306);
          goto LABEL_24;
        }
        v121 = v303;
        swift_beginAccess(v303, v316, 0, 0);
        v122 = swift_weakLoadStrong(v121);
        v123 = (uint64_t)v295;
        if (!v122
          || (v124 = v122,
              v125 = swift_getKeyPath(&unk_10039D668),
              v126 = swift_getKeyPath(&unk_10039D690),
              static Published.subscript.getter(&v312, v124, v125),
              swift_release(v126),
              swift_release(v125),
              swift_release(v124),
              v312 != 1))
        {
LABEL_49:
          v153 = v303;
          swift_beginAccess(v303, v315, 0, 0);
          v154 = swift_weakLoadStrong(v153);
          if (v154)
          {
            v155 = v154;
            v156 = v269;
            MusicLibrarySection.item.getter(v306);
            v157 = swift_getKeyPath(&unk_10039D428);
            v158 = swift_getKeyPath(&unk_10039D450);
            v159 = v270;
            v160 = v268;
            v161 = v271;
            (*(void (**)(char *, char *, uint64_t))(v270 + 16))(v268, v156, v271);
            swift_retain(v155);
            static Published.subscript.setter(v160, v155, v157, v158);
            (*(void (**)(char *, uint64_t))(v159 + 8))(v156, v161);
            swift_release(v155);
          }
          v162 = v303;
          swift_beginAccess(v303, v314, 0, 0);
          v163 = swift_weakLoadStrong(v162);
          v164 = v297;
          if (v163)
          {
            v165 = v163;
            v166 = Playlist.Collaboration.isOpenInvitation.getter();
            v167 = swift_getKeyPath(&unk_10039D620);
            v168 = swift_getKeyPath(&unk_10039D648);
            LOBYTE(v312) = v166 & 1;
            static Published.subscript.setter(&v312, v165, v167, v168);
          }
          v169 = v296;
          MusicLibrarySection.items.getter(v306);
          v170 = v275;
          v171 = (uint64_t)v273;
          v289 = *(_QWORD **)(v275 + 16);
          ((void (*)(char *, char *, uint64_t))v289)(v273, v169, v164);
          v172 = sub_10002FFB8(&qword_10049ED90, &qword_10049ED58, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          dispatch thunk of Collection.startIndex.getter(v164);
          v288 = *(char **)(v170 + 8);
          ((void (*)(char *, uint64_t))v288)(v169, v164);
          v173 = v274;
          *(_QWORD *)(v171 + *(int *)(v274 + 36)) = v312;
          sub_1000149A8(v171, v123, &qword_10049ED60);
          v174 = (uint64_t *)(v123 + *(int *)(v173 + 36));
          swift_beginAccess(v303, v313, 0, 0);
          v175 = *v174;
          dispatch thunk of Collection.endIndex.getter(&v312, v164, v172);
          if (v175 == v312)
          {
            v292 = _swiftEmptyArrayStorage;
            v291 = (char *)_swiftEmptyArrayStorage;
          }
          else
          {
            v291 = (char *)_swiftEmptyArrayStorage;
            v292 = _swiftEmptyArrayStorage;
            v203 = v281;
            v204 = v280;
            do
            {
              v209 = v105;
              v210 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v312, v174, v164, v172);
              v211 = v123;
              v212 = v164;
              v213 = *(void (**)(char *))(v203 + 16);
              v214 = v304;
              v213(v204);
              v210(&v312, 0);
              v215 = v296;
              ((void (*)(char *, uint64_t, uint64_t))v289)(v296, v211, v212);
              dispatch thunk of Collection.formIndex(after:)(v174, v212, v172);
              ((void (*)(char *, uint64_t))v288)(v215, v212);
              v216 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v203 + 32);
              v217 = v300;
              v218 = v216(v300, v204, v214);
              if ((Playlist.Collaborator.isPending.getter(v218) & 1) != 0)
              {
                ((void (*)(char *, uint64_t, uint64_t))v213)(v293, v217, v214);
                if ((swift_isUniquelyReferenced_nonNull_native(v292) & 1) == 0)
                  v292 = (_QWORD *)sub_100258BC8(0, v292[2] + 1, 1, v292);
                v105 = v209;
                v233 = v292;
                v235 = v292[2];
                v234 = v292[3];
                if (v235 >= v234 >> 1)
                  v233 = (_QWORD *)sub_100258BC8(v234 > 1, v235 + 1, 1, v292);
                v233[2] = v235 + 1;
                v236 = (*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80);
                v292 = v233;
                v237 = v304;
                v216((uint64_t)v233 + v236 + *(_QWORD *)(v203 + 72) * v235, v293, v304);
                (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v217, v237);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v213)(v294, v217, v214);
                v219 = v291;
                if ((swift_isUniquelyReferenced_nonNull_native(v291) & 1) == 0)
                  v219 = (char *)sub_100258BC8(0, *((_QWORD *)v219 + 2) + 1, 1, v219);
                v221 = *((_QWORD *)v219 + 2);
                v220 = *((_QWORD *)v219 + 3);
                if (v221 >= v220 >> 1)
                  v219 = (char *)sub_100258BC8(v220 > 1, v221 + 1, 1, v219);
                *((_QWORD *)v219 + 2) = v221 + 1;
                v222 = (*(unsigned __int8 *)(v203 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v203 + 80);
                v291 = v219;
                v216((uint64_t)&v219[v222 + *(_QWORD *)(v203 + 72) * v221], v294, v214);
                v223 = swift_weakLoadStrong(v303);
                if (v223)
                {
                  v224 = v223;
                  v225 = swift_getKeyPath(&unk_10039D4A0);
                  v226 = swift_getKeyPath(&unk_10039D4C8);
                  v227 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(&v312, v224, v225, v226);
                  v228 = v286;
                  v229 = v300;
                  sub_1002FCFA8(v300, v286);
                  v230 = v228;
                  v203 = v281;
                  sub_100008758(v230, &qword_10049B070);
                  v227(&v312, 0);
                  swift_release(v226);
                  swift_release(v225);
                  v231 = v229;
                  v204 = v280;
                  v232 = swift_release(v224);
                  (*(void (**)(uint64_t, uint64_t, __n128))(v203 + 8))(v231, v304, v232);
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v300, v214);
                  v205 = v286;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v203 + 56))(v286, 1, 1, v214);
                  sub_100008758(v205, &qword_10049B070);
                }
                v105 = v209;
              }
              v206 = *v174;
              v207 = v295;
              v164 = v297;
              dispatch thunk of Collection.endIndex.getter(&v312, v297, v172);
              v208 = v206 == v312;
              v123 = (uint64_t)v207;
            }
            while (!v208);
          }
          sub_100008758(v123, &qword_10049ED60);
          v176 = v303;
          swift_beginAccess(v303, &v312, 0, 0);
          v177 = swift_weakLoadStrong(v176);
          v178 = v291;
          if (v177)
          {
            v179 = v177;
            v180 = swift_getKeyPath(&unk_10039D590);
            v181 = swift_getKeyPath(&unk_10039D5B8);
            v311 = v178;
            swift_bridgeObjectRetain();
            static Published.subscript.setter((char **)&v311, v179, v180, v181);
          }
          v182 = v303;
          swift_beginAccess(v303, (char **)&v311, 0, 0);
          v183 = swift_weakLoadStrong(v182);
          v184 = v256;
          v185 = v292;
          if (v183)
          {
            v186 = v183;
            v187 = swift_getKeyPath(&unk_10039D548);
            v188 = swift_getKeyPath(&unk_10039D570);
            v310 = v185;
            swift_bridgeObjectRetain();
            static Published.subscript.setter(&v310, v186, v187, v188);
          }
          v189 = v276;
          v190 = v302;
          v191 = (void (*)(char *, uint64_t, uint64_t))v290;
          ((void (*)(char *, uint64_t, uint64_t))v290)(v276, v184, v302);
          v192 = swift_bridgeObjectRetain();
          v193 = Logger.logObject.getter(v192);
          v194 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v193, v194))
          {
            v195 = swift_slowAlloc(12, -1);
            v196 = swift_slowAlloc(32, -1);
            v310 = (_QWORD *)v196;
            *(_DWORD *)v195 = 136315138;
            v197 = swift_bridgeObjectRetain();
            v198 = Array.description.getter(v197, v304);
            v200 = v199;
            swift_bridgeObjectRelease();
            v201 = (char *)v198;
            v184 = v256;
            *(_QWORD *)(v195 + 4) = sub_100249A1C(v201, v200, (uint64_t *)&v310);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v185, 2);
            _os_log_impl((void *)&_mh_execute_header, v193, v194, "[Management] pendingCollaborators=%s", (uint8_t *)v195, 0xCu);
            swift_arrayDestroy(v196, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v196, -1, -1);
            v202 = v195;
            v191 = (void (*)(char *, uint64_t, uint64_t))v290;
            swift_slowDealloc(v202, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v185, 2);
          }

          v238 = v189;
          v239 = v284;
          v284(v238, v190);
          v240 = v272;
          v191(v272, v184, v190);
          v241 = v291;
          v242 = swift_bridgeObjectRetain();
          v243 = Logger.logObject.getter(v242);
          v244 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v243, v244))
          {
            v245 = swift_slowAlloc(12, -1);
            v246 = v190;
            v247 = swift_slowAlloc(32, -1);
            v310 = (_QWORD *)v247;
            *(_DWORD *)v245 = 136315138;
            v248 = swift_bridgeObjectRetain();
            v249 = (char *)Array.description.getter(v248, v304);
            v251 = v250;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v245 + 4) = sub_100249A1C(v249, v251, (uint64_t *)&v310);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v241, 2);
            _os_log_impl((void *)&_mh_execute_header, v243, v244, "[Management] activeCollaborators=%s", (uint8_t *)v245, 0xCu);
            swift_arrayDestroy(v247, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v247, -1, -1);
            swift_slowDealloc(v245, -1, -1);

            v284(v240, v246);
          }
          else
          {

            swift_bridgeObjectRelease_n(v241, 2);
            v239(v240, v190);
          }
          v105(v278, v287);
          (*(void (**)(char *, uint64_t))(v301 + 8))(v282, v298);
          (*(void (**)(char *, uint64_t))(v305 + 8))(v299, v306);
          sub_100008758((uint64_t)v257, &qword_10049E690);
          v120 = v307;
          goto LABEL_31;
        }
        v127 = v303;
        swift_beginAccess(v303, v309, 0, 0);
        v128 = swift_weakLoadStrong(v127);
        v129 = v266;
        if (v128)
        {
          v130 = v128;
          v131 = swift_getKeyPath(&unk_10039D428);
          v132 = swift_getKeyPath(&unk_10039D450);
          v133 = v261;
          static Published.subscript.getter(v261, v130, v131);
          swift_release(v132);
          swift_release(v131);
          swift_release(v130);
          v134 = (uint64_t)v260;
          Playlist.collaboration.getter(v135);
          (*(void (**)(_QWORD *, uint64_t))(v270 + 8))(v133, v271);
          v136 = v298;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v292)(v134, 1, v298) != 1)
          {
            ((void (*)(void))Playlist.Collaboration.invitationExpirationDate.getter)();
            v139 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v134, v136);
            v138 = v263;
            v137 = v262;
LABEL_40:
            v140 = v267;
            Playlist.Collaboration.invitationExpirationDate.getter(v139);
            v141 = v265;
            v142 = v265 + *(int *)(v264 + 48);
            sub_100014A7C(v129, v265, &qword_10049E698);
            sub_100014A7C(v140, v142, &qword_10049E698);
            v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
            if (v143(v141, 1, v138) == 1)
            {
              sub_100008758(v140, &qword_10049E698);
              sub_100008758(v129, &qword_10049E698);
              if (v143(v142, 1, v138) == 1)
              {
                sub_100008758(v141, &qword_10049E698);
                goto LABEL_49;
              }
            }
            else
            {
              v144 = v259;
              sub_100014A7C(v141, v259, &qword_10049E698);
              if (v143(v142, 1, v138) != 1)
              {
                v145 = v258;
                (*(void (**)(char *, uint64_t, uint64_t))(v137 + 32))(v258, v142, v138);
                v146 = sub_100006924(&qword_10049ED98, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                LODWORD(v292) = dispatch thunk of static Equatable.== infix(_:_:)(v144, v145, v138, v146);
                v147 = *(void (**)(char *, uint64_t))(v137 + 8);
                v147(v145, v138);
                sub_100008758(v267, &qword_10049E698);
                sub_100008758(v266, &qword_10049E698);
                v147((char *)v144, v138);
                sub_100008758(v141, &qword_10049E698);
                if ((v292 & 1) != 0)
                  goto LABEL_49;
LABEL_47:
                v148 = v303;
                swift_beginAccess(v303, v308, 0, 0);
                v149 = swift_weakLoadStrong(v148);
                if (v149)
                {
                  v150 = v149;
                  v151 = swift_getKeyPath(&unk_10039D668);
                  v152 = swift_getKeyPath(&unk_10039D690);
                  LOBYTE(v312) = 0;
                  static Published.subscript.setter(&v312, v150, v151, v152);
                }
                goto LABEL_49;
              }
              sub_100008758(v267, &qword_10049E698);
              sub_100008758(v129, &qword_10049E698);
              (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v144, v138);
            }
            sub_100008758(v141, &qword_10049ED68);
            goto LABEL_47;
          }
          sub_100008758(v134, &qword_10049E690);
        }
        v137 = v262;
        v138 = v263;
        v139 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v262 + 56))(v129, 1, 1, v263);
        goto LABEL_40;
      }
    }
  }
}

uint64_t sub_1002E696C()
{
  return sub_100172524((uint64_t)&unk_10039D548, (uint64_t)&unk_10039D570);
}

uint64_t sub_1002E6980()
{
  return sub_100172524((uint64_t)&unk_10039D590, (uint64_t)&unk_10039D5B8);
}

uint64_t sub_1002E6994()
{
  return sub_100172524((uint64_t)&unk_10039D4A0, (uint64_t)&unk_10039D4C8);
}

double sub_1002E69A8@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10039D428);
  v4 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1002E6A0C()
{
  return sub_1001727E4((uint64_t)&unk_10039D620, (uint64_t)&unk_10039D648);
}

uint64_t sub_1002E6A20()
{
  return sub_1001727E4((uint64_t)&unk_10039D668, (uint64_t)&unk_10039D690);
}

uint64_t sub_1002E6A34()
{
  return sub_1001727E4((uint64_t)&unk_10039CDB0, (uint64_t)&unk_10039CDD8);
}

uint64_t sub_1002E6A48()
{
  return sub_1001727E4((uint64_t)&unk_10039D5D8, (uint64_t)&unk_10039D600);
}

double sub_1002E6A5C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v5 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1002E6AC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v14 = swift_getKeyPath(&unk_10039D450);
  v11(v8, (uint64_t)v10, v4);
  swift_retain(v12);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1002E6BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v0 = type metadata accessor for Playlist.Collaborator.Status(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100005574(&qword_10049E6A8);
  __chkstk_darwin();
  v35 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E6B0);
  __chkstk_darwin();
  v32 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v30 - v11;
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v16 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v7, v33, KeyPath);
  swift_release(v16);
  swift_release(KeyPath);
  Playlist.collaboration.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  v18 = type metadata accessor for Playlist.Collaboration(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v18) == 1)
  {
    sub_100008758((uint64_t)v9, &qword_10049E690);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  else
  {
    Playlist.Collaboration.collaboratorStatus.getter();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaborator.Status.pending(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v20 = v35;
  v21 = v35 + *(int *)(v34 + 48);
  v22 = &qword_10049E6B0;
  sub_100014A7C((uint64_t)v14, v35, &qword_10049E6B0);
  sub_100014A7C((uint64_t)v12, v21, &qword_10049E6B0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v23(v20, 1, v0) == 1)
  {
    sub_100008758((uint64_t)v12, &qword_10049E6B0);
    sub_100008758((uint64_t)v14, &qword_10049E6B0);
    if (v23(v21, 1, v0) == 1)
    {
      v24 = -1;
    }
    else
    {
      v22 = &qword_10049E6A8;
      v24 = 0;
    }
  }
  else
  {
    v25 = v32;
    sub_100014A7C(v20, v32, &qword_10049E6B0);
    if (v23(v21, 1, v0) == 1)
    {
      sub_100008758((uint64_t)v12, &qword_10049E6B0);
      sub_100008758((uint64_t)v14, &qword_10049E6B0);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v0);
      v24 = 0;
      v22 = &qword_10049E6A8;
    }
    else
    {
      v26 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v31, v21, v0);
      v27 = sub_100006924(&qword_10049E6B8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v26, v0, v27);
      v28 = *(void (**)(char *, uint64_t))(v1 + 8);
      v28(v26, v0);
      v22 = &qword_10049E6B0;
      sub_100008758((uint64_t)v12, &qword_10049E6B0);
      sub_100008758((uint64_t)v14, &qword_10049E6B0);
      v28((char *)v25, v0);
    }
  }
  sub_100008758(v20, v22);
  return v24 & 1;
}

uint64_t sub_1002E700C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10039D620);
  v6 = swift_getKeyPath(&unk_10039D648);
  static Published.subscript.getter(&v13, v0, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  if (v13 == 1 && (sub_1002E766C() & 1) == 0)
    return 1;
  v7 = swift_getKeyPath(&unk_10039D428);
  v8 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v4, v0, v7);
  swift_release(v8);
  swift_release(v7);
  v10 = Playlist.isOwner.getter(v9);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if (v10 == 2)
    return 0;
  else
    return v10 & 1;
}

uint64_t sub_1002E714C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  KeyPath = swift_getKeyPath(&unk_10039D5D8);
  v2 = swift_getKeyPath(&unk_10039D600);
  static Published.subscript.getter(&v12, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  if (v12 == 1)
  {
    v3 = swift_getKeyPath(&unk_10039D548);
    v4 = swift_getKeyPath(&unk_10039D570);
    static Published.subscript.getter(&v12, v0, v3);
    swift_release(v4);
    swift_release(v3);
    v5 = v12;
    v6 = swift_getKeyPath(&unk_10039D590);
    v7 = swift_getKeyPath(&unk_10039D5B8);
    static Published.subscript.getter(&v12, v0, v6);
    swift_release(v7);
    swift_release(v6);
    v8 = v12;
    v12 = v5;
    sub_1002E4370(v8);
  }
  else
  {
    v9 = swift_getKeyPath(&unk_10039D590);
    v10 = swift_getKeyPath(&unk_10039D5B8);
    static Published.subscript.getter(&v12, v0, v9);
    swift_release(v10);
    swift_release(v9);
  }
  return v12;
}

uint64_t sub_1002E72AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v27 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10039D548);
  v13 = swift_getKeyPath(&unk_10039D570);
  static Published.subscript.getter(&v28, v1, KeyPath);
  swift_release(v13);
  swift_release(KeyPath);
  v14 = *(_QWORD *)(v28 + 16);
  swift_bridgeObjectRelease();
  v15 = swift_getKeyPath(&unk_10039D590);
  v16 = swift_getKeyPath(&unk_10039D5B8);
  static Published.subscript.getter(&v28, v1, v15);
  swift_release(v16);
  swift_release(v15);
  v17 = *(_QWORD *)(v28 + 16);
  swift_bridgeObjectRelease();
  if (v17 == 1)
  {
    if (!v14)
      return 0;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1);
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
    v28 = v14;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v19 = 0xD000000000000012;
    v20 = 0x80000001003BA500;
  }
  else if (v14)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2);
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
    v28 = v17;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v22._countAndFlagsBits = 0x2064656E696F6A20;
    v22._object = (void *)0xAC00000020A280E2;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    v28 = v14;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v19 = 0x676E69646E657020;
    v20 = 0xE800000000000000;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
    v28 = v17;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20 = 0x80000001003BA4E0;
    v19 = 0xD000000000000011;
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v19);
  String.LocalizationValue.init(stringInterpolation:)(v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v25 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v23 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v25, v3, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  return v23;
}

uint64_t sub_1002E766C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  _QWORD v23[2];

  v0 = type metadata accessor for Playlist(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (_QWORD *)((char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E698);
  __chkstk_darwin();
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v23[0] = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v23 - v11;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v14 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v3, v23[1], KeyPath);
  swift_release(v14);
  swift_release(KeyPath);
  Playlist.collaboration.getter(v15);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v16 = type metadata accessor for Playlist.Collaboration(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    sub_100008758((uint64_t)v5, &qword_10049E690);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    Playlist.Collaboration.invitationExpirationDate.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      v20 = v23[0];
      Date.init()(v19);
      v18 = static Date.> infix(_:_:)(v20, v12);
      v21 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v21(v20, v8);
      v21((uint64_t)v12, v8);
      return v18 & 1;
    }
  }
  sub_100008758((uint64_t)v7, &qword_10049E698);
  v18 = 1;
  return v18 & 1;
}

uint64_t sub_1002E7904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  Swift::String v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  char *v74;
  Swift::String v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD v102[2];

  v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v85 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v94 = *(_QWORD *)(v3 - 8);
  v95 = v3;
  __chkstk_darwin();
  v93 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DateComponents(0);
  v97 = *(_QWORD *)(v5 - 8);
  v98 = v5;
  __chkstk_darwin();
  v96 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v88 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v90 = *(_QWORD *)(v8 - 8);
  v91 = v8;
  __chkstk_darwin();
  v87 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v89 = (char *)&v83 - v10;
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v84 = (uint64_t *)((char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v86 = (uint64_t *)((char *)&v83 - v14);
  __chkstk_darwin();
  v16 = (uint64_t *)((char *)&v83 - v15);
  sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E698);
  __chkstk_darwin();
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v92 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v101 = (char *)&v83 - v24;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v26 = swift_getKeyPath(&unk_10039D450);
  v100 = v1;
  static Published.subscript.getter(v16, v1, KeyPath);
  swift_release(v26);
  swift_release(KeyPath);
  Playlist.collaboration.getter(v27);
  v28 = *(void (**)(_QWORD *, uint64_t))(v12 + 8);
  v99 = v11;
  v28(v16, v11);
  v29 = type metadata accessor for Playlist.Collaboration(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v29) == 1)
  {
    sub_100008758((uint64_t)v18, &qword_10049E690);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_100008758((uint64_t)v20, &qword_10049E698);
    return 0;
  }
  Playlist.Collaboration.invitationExpirationDate.getter();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    goto LABEL_4;
  v33 = v21;
  v34 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v101, v20, v21);
  v35 = v100;
  v36 = sub_1002E766C();
  if ((v36 & 1) == 0)
    goto LABEL_9;
  v37 = swift_getKeyPath(&unk_10039D428);
  v38 = swift_getKeyPath(&unk_10039D450);
  v39 = v86;
  static Published.subscript.getter(v86, v35, v37);
  swift_release(v38);
  swift_release(v37);
  LOBYTE(v37) = Playlist.isOwner.getter(v40);
  v36 = ((uint64_t (*)(_QWORD *, uint64_t))v28)(v39, v99);
  if ((v37 & 1) != 0)
  {
    v68 = v89;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000069, 0x80000001003BA470);
    v70 = v90;
    v69 = v91;
    v71 = v87;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v68, v91);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v72 = qword_1004A2F90;
    v73 = (id)qword_1004A2F90;
    v74 = v88;
    static Locale.current.getter(v73);
    v31 = String.init(localized:table:bundle:locale:comment:)(v71, 0, 0, v72, v74, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v101, v33);
  }
  else
  {
LABEL_9:
    v41 = v93;
    static Calendar.autoupdatingCurrent.getter(v36);
    v42 = sub_100005574(&qword_10049E6A0);
    v43 = type metadata accessor for Calendar.Component(0);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(unsigned __int8 *)(v44 + 80);
    v46 = (v45 + 32) & ~v45;
    v47 = swift_allocObject(v42, v46 + *(_QWORD *)(v44 + 72), v45 | 7);
    *(_OWORD *)(v47 + 16) = xmmword_100384A80;
    v48 = v47 + v46;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v48, enum case for Calendar.Component.day(_:), v43);
    v49 = sub_10024BE88(v47);
    swift_setDeallocating(v47);
    swift_arrayDestroy(v48, 1, v43);
    v50 = swift_deallocClassInstance(v47, 32, 7);
    v51 = v92;
    Date.init()(v50);
    v52 = v96;
    v53 = v101;
    Calendar.dateComponents(_:from:to:)(v49, v51, v101);
    v54 = v21;
    swift_bridgeObjectRelease();
    v55 = *(void (**)(char *, uint64_t))(v34 + 8);
    v55(v51, v21);
    v56 = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v41, v95);
    v57 = DateComponents.day.getter(v56);
    if ((v58 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v97 + 8))(v52, v98);
      v55(v53, v21);
      return 0;
    }
    v59 = v57;
    v60 = swift_getKeyPath(&unk_10039D428);
    v61 = swift_getKeyPath(&unk_10039D450);
    v62 = v84;
    static Published.subscript.getter(v84, v100, v60);
    swift_release(v61);
    swift_release(v60);
    LOBYTE(v60) = Playlist.isOwner.getter(v63);
    v28(v62, v99);
    if ((v60 & 1) != 0)
    {
      v64 = v85;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(124, 1);
      v75._object = (void *)0x80000001003BA3E0;
      v75._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v75);
      v102[0] = v59;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v102, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v66 = 0xD00000000000006CLL;
      v67 = 0x80000001003BA400;
    }
    else
    {
      v64 = v85;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
      v65._object = (void *)0x80000001003BA3E0;
      v65._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v65);
      v102[0] = v59;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v102, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v66 = 0x2E29732879616420;
      v67 = 0xE800000000000000;
    }
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v66);
    v76 = v89;
    String.LocalizationValue.init(stringInterpolation:)(v64);
    v78 = v90;
    v77 = v91;
    v79 = v87;
    (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v76, v91);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v80 = qword_1004A2F90;
    v81 = (id)qword_1004A2F90;
    v82 = v88;
    static Locale.current.getter(v81);
    v31 = String.init(localized:table:bundle:locale:comment:)(v79, 0, 0, v80, v82, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v77);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v52, v98);
    v55(v53, v54);
  }
  return v31;
}

uint64_t sub_1002E8194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1002E766C() & 1) != 0)
  {
    v9 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_10039D428);
    v12 = swift_getKeyPath(&unk_10039D450);
    static Published.subscript.getter(v6, v1, KeyPath);
    swift_release(v12);
    swift_release(KeyPath);
    Playlist.collaboration.getter(v13);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    v14 = type metadata accessor for Playlist.Collaboration(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
    {
      sub_100008758((uint64_t)v8, &qword_10049E690);
      v16 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v8, v14);
    }
  }
}

uint64_t sub_1002E8360@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];
  _BYTE v12[24];

  sub_100005574(&qword_10049DAC8);
  __chkstk_darwin();
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v6 = &v11[-v5];
  v7 = v1
     + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, v12, 0, 0);
  sub_100014A7C(v7, (uint64_t)v6, &qword_10049DAC8);
  v8 = sub_100005574((uint64_t *)&unk_10049F7D0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return sub_1000149A8((uint64_t)v6, (uint64_t)a1, (uint64_t *)&unk_10049F7D0);
  sub_100008758((uint64_t)v6, &qword_10049DAC8);
  sub_1002E84E4(v1, a1);
  sub_100014A7C((uint64_t)a1, (uint64_t)v4, (uint64_t *)&unk_10049F7D0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess(v7, v11, 33, 0);
  sub_100129EBC((uint64_t)v4, v7, &qword_10049DAC8);
  return swift_endAccess(v11);
}

uint64_t sub_1002E84E4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;

  v30 = a2;
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v29 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v27 - v13;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v16 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v9, a1, KeyPath);
  swift_release(v16);
  swift_release(KeyPath);
  Playlist.artwork.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_100008758((uint64_t)v5, (uint64_t *)&unk_10049F430);
    v18 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v30, 1, 1, v18);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v20(v14, v5, v10);
    v21 = v28;
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v28, v14, v10);
    v23 = (uint64_t)v29;
    static Artwork.CropStyle.boundedBox.getter(v22);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v24 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
    v25 = v30;
    v20(v30, v21, v10);
    v26 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1000149A8(v23, (uint64_t)&v25[*(int *)(v26 + 20)], &qword_1004999E0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
}

uint64_t sub_1002E87A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002E8804, 0, 0);
}

uint64_t sub_1002E8804()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 56) = v3;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v5 = swift_getKeyPath(&unk_10039D450);
  swift_retain(v3);
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = (_QWORD *)swift_task_alloc(dword_100491324);
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_1002E88C8;
  return Collaboration.Manager.updateShareOption(_:for:)(*(_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1002E88C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v3);
  v4 = v2[6];
  v5 = v2[7];
  v8 = v2 + 4;
  v6 = v2[4];
  v7 = v8[1];
  if (v0)
  {
    swift_release(v5);
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v9 = sub_100305758;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    swift_release(v5);
    v9 = sub_1002E897C;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_1002E897C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 72) != 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1002E89C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double result;
  _QWORD v22[4];

  v1 = v0;
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_100462C30, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain(v1);
  if (v8 == 1)
  {
    sub_100008758((uint64_t)v3, &qword_10049AEC0);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_100462C58, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_10049E680;
  *(_QWORD *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0;
    v22[1] = 0;
    v19 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }
  else
  {
    v19 = 0;
  }
  v20 = swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_10049B138, v18);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1002E8B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[5] = swift_task_alloc(v7);
  v4[6] = swift_task_alloc(v7);
  return swift_task_switch(sub_1002E8C04, 0, 0);
}

uint64_t sub_1002E8C04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  v0[7] = v3;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v5 = swift_getKeyPath(&unk_10039D450);
  swift_retain(v3);
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_1004912FC);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_1002E8CC4;
  return Collaboration.Manager.end(_:)(v0[6], v0[5]);
}

uint64_t sub_1002E8CC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v3);
  v4 = v2[7];
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release(v4);
    v5 = sub_1002E8DB8;
  }
  else
  {
    v7 = v2[5];
    v6 = v2[6];
    v10 = v2 + 3;
    v8 = v2[3];
    v9 = v10[1];
    v11 = swift_release(v4);
    v12 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 8);
    v12(v7, v8, v11);
    ((void (*)(uint64_t, uint64_t))v12)(v6, v8);
    v5 = sub_1002E8D80;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002E8D80()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8DB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0[2] + 16);
  v0[10] = v1;
  v2 = type metadata accessor for MainActor(0);
  swift_retain(v1);
  v0[11] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E8E34, v4, v5);
}

uint64_t sub_1002E8E34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[10];
  v2 = v0[9];
  swift_release(v0[11]);
  Collaboration.Manager.handleError(_:)(v2, v3);
  swift_release(v1);
  return swift_task_switch(sub_1002E8E84, 0, 0);
}

uint64_t sub_1002E8E84()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E8EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v4[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[7] = v8;
  v4[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002E8F4C, 0, 0);
}

uint64_t sub_1002E8F4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  v0[9] = v3;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v5 = swift_getKeyPath(&unk_10039D450);
  swift_retain(v3);
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = (_QWORD *)swift_task_alloc(dword_10049131C);
  v0[10] = v6;
  *v6 = v0;
  v6[1] = sub_1002E9010;
  return Collaboration.Manager.resetInvitationURL(_:)(v0[8], v0[5]);
}

uint64_t sub_1002E9010()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __n128 v13;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  v4 = v2[9];
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release(v4);
    v5 = sub_1002E9118;
  }
  else
  {
    v7 = v2[7];
    v6 = v2[8];
    v9 = v2[5];
    v8 = v2[6];
    v12 = v2 + 3;
    v10 = v2[3];
    v11 = v12[1];
    v13 = swift_release(v4);
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v9, v10, v13);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v5 = sub_1002E90DC;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002E90DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E9118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  KeyPath = swift_getKeyPath(&unk_10039D668);
  v3 = swift_getKeyPath(&unk_10039D690);
  *(_BYTE *)(v0 + 112) = 0;
  swift_retain(v1);
  static Published.subscript.setter(v0 + 112, v1, KeyPath, v3);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 96) = v4;
  v5 = type metadata accessor for MainActor(0);
  swift_retain(v4);
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E91E0, v7, v8);
}

uint64_t sub_1002E91E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[12];
  v2 = v0[11];
  swift_release(v0[13]);
  Collaboration.Manager.handleError(_:)(v2, v3);
  swift_release(v1);
  return swift_task_switch(sub_1002E9230, 0, 0);
}

uint64_t sub_1002E9230()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E9274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t result;
  uint64_t v21;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v21 - v11;
  sub_100014A7C(a1, (uint64_t)v6, &qword_10049B070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100008758((uint64_t)v6, &qword_10049B070);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F7020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 211, 0);
    __break(1u);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v12, v6, v7);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 40) & ~v15;
    v17 = (char *)swift_allocObject(&unk_100462C08, v16 + v9, v15 | 7);
    *((_QWORD *)v17 + 2) = 0;
    *((_QWORD *)v17 + 3) = 0;
    *((_QWORD *)v17 + 4) = v1;
    v13(&v17[v16], v10, v7);
    swift_retain(v1);
    v18 = sub_100283A94((uint64_t)v4, (uint64_t)&unk_10049E670, (uint64_t)v17);
    v19 = swift_release(v18);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v19);
  }
  return result;
}

uint64_t sub_1002E94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for Playlist(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[6] = swift_task_alloc(v8);
  v5[7] = swift_task_alloc(v8);
  return swift_task_switch(sub_1002E9538, 0, 0);
}

uint64_t sub_1002E9538()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)v0[6];
  v2 = v0[2];
  v3 = *(_QWORD *)(v2 + 16);
  v0[8] = v3;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v5 = swift_getKeyPath(&unk_10039D450);
  swift_retain(v3);
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_100491314);
  v0[9] = v6;
  *v6 = v0;
  v6[1] = sub_1002E95FC;
  return Collaboration.Manager.remove(collaborator:in:)(v0[7], v0[3], v0[6]);
}

uint64_t sub_1002E95FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __n128 v11;
  void (*v12)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  v4 = v2[8];
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[5] + 8))(v2[6], v2[4]);
    swift_release(v4);
    v5 = sub_1002E96F0;
  }
  else
  {
    v7 = v2[6];
    v6 = v2[7];
    v10 = v2 + 4;
    v8 = v2[4];
    v9 = v10[1];
    v11 = swift_release(v4);
    v12 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 8);
    v12(v7, v8, v11);
    ((void (*)(uint64_t, uint64_t))v12)(v6, v8);
    v5 = sub_1002E96B8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002E96B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E96F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0[2] + 16);
  v0[11] = v1;
  v2 = type metadata accessor for MainActor(0);
  swift_retain(v1);
  v0[12] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E976C, v4, v5);
}

uint64_t sub_1002E976C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[11];
  v2 = v0[10];
  swift_release(v0[12]);
  Collaboration.Manager.handleError(_:)(v2, v3);
  swift_release(v1);
  return swift_task_switch(sub_1002E97BC, 0, 0);
}

uint64_t sub_1002E97BC()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1002E97FC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t v15;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _BYTE v28[32];

  v3 = v2;
  v25 = a1;
  v27 = a2 & 1;
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v24 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v13(v10, a1, v7);
  KeyPath = swift_getKeyPath(&unk_10039D4A0);
  v15 = swift_getKeyPath(&unk_10039D4C8);
  v16 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v28, v3, KeyPath, v15);
  sub_1002FB250((uint64_t)v12, v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  v16(v28, 0);
  swift_release(v15);
  swift_release(KeyPath);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  v13(v12, v25, v7);
  v18 = *(unsigned __int8 *)(v8 + 80);
  v19 = (v18 + 41) & ~v18;
  v20 = swift_allocObject(&unk_100462BB8, v19 + v9, v18 | 7);
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  v21 = v26;
  *(_QWORD *)(v20 + 32) = v26;
  *(_BYTE *)(v20 + 40) = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v12, v7);
  swift_retain(v21);
  v22 = sub_100283A94((uint64_t)v6, (uint64_t)&unk_10049E638, v20);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_1002E9A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a6;
  v7 = type metadata accessor for Playlist.Collaborator(0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 40) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049AEC0);
  *(_QWORD *)(v6 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v6 + 72) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 80) = v12;
  *(_QWORD *)(v6 + 88) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002E9ABC, 0, 0);
}

uint64_t sub_1002E9ABC()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = *(_BYTE *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v0 + 96) = v4;
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v6 = swift_getKeyPath(&unk_10039D450);
  swift_retain(v4);
  static Published.subscript.getter(v1, v3, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = (_QWORD *)swift_task_alloc(dword_100491304);
  *(_QWORD *)(v0 + 104) = v7;
  *v7 = v0;
  v7[1] = sub_1002E9B88;
  return Collaboration.Manager.moderate(_:collaborator:in:)(v2 & 1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1002E9B88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v5 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(*v1 + 88);
  v6 = *(_QWORD *)(*v1 + 72);
  v7 = *v1;
  *(_QWORD *)(v7 + 112) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release(v3);
  if (v0)
    return swift_task_switch(sub_1002E9C48, 0, 0);
  v9 = *(_QWORD *)(v7 + 56);
  v10 = *(_QWORD *)(v7 + 64);
  swift_task_dealloc(*(_QWORD *)(v7 + 88));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1002E9C48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v0[7];
  v1 = v0[8];
  v4 = v0[5];
  v3 = v0[6];
  v5 = v0[3];
  v6 = v0[4];
  v7 = v0[2];
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v6);
  v9 = type metadata accessor for MainActor(0);
  swift_retain(v7);
  v11 = static MainActor.shared.getter(v10);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_100462BE0, v13 + v3, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v14 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v14[v13], v2, v6);
  v15 = sub_100283BFC(v1, (uint64_t)&unk_10049E648, (uint64_t)v14);
  swift_release(v15);
  v16 = *(_QWORD *)(v7 + 16);
  v0[15] = v16;
  swift_retain(v16);
  v0[16] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E9D98, v18, v19);
}

uint64_t sub_1002E9D98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[15];
  v2 = v0[14];
  swift_release(v0[16]);
  Collaboration.Manager.handleError(_:)(v2, v3);
  swift_release(v1);
  return swift_task_switch(sub_1002E9DE8, 0, 0);
}

uint64_t sub_1002E9DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E9E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002E9EA4, v7, v8);
}

uint64_t sub_1002E9EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  KeyPath = swift_getKeyPath(&unk_10039D4A0);
  v5 = swift_getKeyPath(&unk_10039D4C8);
  v6 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v2, KeyPath, v5);
  sub_1002FCFA8(v1, v3);
  v6(v0 + 16, 0);
  swift_release(KeyPath);
  v7 = swift_release(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t Collaboration.Management.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  swift_release(*(_QWORD *)(v0 + 16));
  v1 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v2 = sub_100005574(&qword_10049DA68);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators, v2);
  v4 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v5 = sub_100005574(&qword_10049DA80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist;
  v7 = sub_100005574(&qword_10049DA90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen;
  v9 = sub_100005574(&qword_10049DAA0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity, v9);
  sub_100008758(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, &qword_10049DAC8);
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver));
  return v0;
}

uint64_t Collaboration.Management.Model.__deallocating_deinit()
{
  uint64_t v0;

  Collaboration.Management.Model.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1002EA0F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t Collaboration.Management.View.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v4 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_10039CD20);
  v6 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_10039CD50);
  v8 = sub_100005574(&qword_100498E60);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_10039CD80);
  v10 = sub_100005574(&qword_100498E68);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = v4[8];
  v25 = 0;
  v12 = sub_100005574(&qword_10049DAF0);
  State.init(wrappedValue:)(&v26, &v25, v12);
  *(_OWORD *)((char *)a2 + v11) = v26;
  v13 = (char *)a2 + v4[9];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v14 = *((_QWORD *)&v26 + 1);
  *v13 = v26;
  *((_QWORD *)v13 + 1) = v14;
  v15 = (char *)a2 + v4[10];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v16 = *((_QWORD *)&v26 + 1);
  *v15 = v26;
  *((_QWORD *)v15 + 1) = v16;
  v17 = (char *)a2 + v4[11];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v18 = *((_QWORD *)&v26 + 1);
  *v17 = v26;
  *((_QWORD *)v17 + 1) = v18;
  v19 = (char *)a2 + v4[12];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v26, &v25, &type metadata for Bool);
  v20 = *((_QWORD *)&v26 + 1);
  *v19 = v26;
  *((_QWORD *)v19 + 1) = v20;
  v21 = type metadata accessor for Collaboration.Management.Model(0);
  v22 = sub_100006924(&qword_10049DAF8, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v21, v22);
  *a2 = result;
  a2[1] = v24;
  return result;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.shareSheet(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = sub_100005574(&qword_10049DAF0);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.viewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  v3 = sub_100006924(&qword_10049DAF8, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;

  v2 = v1;
  v29 = a1;
  v27 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin();
  v4 = sub_100005574(&qword_10049DB00);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v2;
  v26 = sub_100005574(&qword_10049DB08);
  v7 = sub_100005600(&qword_10049DB10);
  v8 = sub_100005600(&qword_10049DB18);
  v9 = sub_100005600(&qword_10049DB20);
  v10 = type metadata accessor for InsetGroupedListStyle(255);
  v11 = sub_1002FE4E0();
  v32 = v9;
  v33 = v10;
  v34 = v11;
  v35 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v13 = sub_100005600((uint64_t *)&unk_10049DB50);
  v14 = sub_10002FFB8(&qword_10049F870, (uint64_t *)&unk_10049DB50, (uint64_t)&protocol conformance descriptor for Button<A>);
  v32 = v13;
  v33 = v14;
  v15 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v32 = v7;
  v33 = v8;
  v34 = OpaqueTypeConformance2;
  v35 = (void *)v15;
  v16 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, 1);
  NavigationStack.init<>(root:)(sub_1002FE4D8, v30, v26, v16);
  v17 = *(_QWORD *)(v2 + 8);
  KeyPath = swift_getKeyPath(&unk_10039CDB0);
  v19 = swift_getKeyPath(&unk_10039CDD8);
  static Published.subscript.getter(&v32, v17, KeyPath);
  swift_release(KeyPath);
  swift_release(v19);
  sub_100082248(v2, (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v20 = *(unsigned __int8 *)(v27 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_1004628C0, v21 + v3, v20 | 7);
  sub_1000648AC((uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for Collaboration.Management.View);
  v23 = sub_10002FFB8(&qword_10049DB60, &qword_10049DB00, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.onChange<A>(of:initial:_:)(&v32, 0, sub_1002FE5C8, v22, v4, &type metadata for Bool, v23, &protocol witness table for Bool);
  v24 = swift_release(v22);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v28 + 8))(v6, v4, v24);
}

uint64_t sub_1002EA680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  __n128 v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t OpaqueTypeConformance2;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77[16];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  void *v82;

  v75 = a2;
  v66 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v68 = v3;
  v70 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v62 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for String.LocalizationValue(0);
  v60 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin();
  v76 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v59 = (char *)&v57 - v6;
  v72 = sub_100005574((uint64_t *)&unk_10049DB50);
  v67 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v65 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049DB18);
  v73 = *(_QWORD *)(v8 - 8);
  v74 = v8;
  __chkstk_darwin();
  v71 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for InsetGroupedListStyle(0);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049DB38);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10049DB20);
  __chkstk_darwin();
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_100005574(&qword_10049DB10);
  v63 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = a1;
  v78 = a1;
  v22 = sub_100005574(&qword_10049E868);
  v23 = sub_10002FFB8(&qword_10049E870, &qword_10049E868, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_1003039F8, v77, v22, v23);
  KeyPath = swift_getKeyPath(&unk_10039D758);
  if (qword_100498BA0 != -1)
    swift_once(&qword_100498BA0, sub_1002F312C);
  v25 = qword_10049D9A8;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v16, v13);
  v26 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *v26 = KeyPath;
  v26[1] = v25;
  v27 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  InsetGroupedListStyle.init()(v27);
  v28 = sub_1002FE4E0();
  View.listStyle<A>(_:)(v12, v17, v10, v28, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v10);
  sub_100008758((uint64_t)v19, &qword_10049DB20);
  v29 = v59;
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v30 = v60;
  v31 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v76, v29, v61);
  v32 = v21;
  v33 = v29;
  v34 = v17;
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v35 = qword_1004A2F90;
  v36 = (id)qword_1004A2F90;
  v37 = v62;
  static Locale.current.getter(v36);
  v38 = String.init(localized:table:bundle:locale:comment:)(v76, 0, 0, v35, v37, 0, 0, 256);
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v31);
  v79 = v38;
  v80 = v40;
  v41 = v70;
  sub_100082248(v69, v70, type metadata accessor for Collaboration.Management.View);
  v42 = *(unsigned __int8 *)(v66 + 80);
  v43 = (v42 + 16) & ~v42;
  v44 = swift_allocObject(&unk_100462CF8, v43 + v68, v42 | 7);
  sub_1000648AC(v41, v44 + v43, type metadata accessor for Collaboration.Management.View);
  v45 = sub_10024AF7C();
  v46 = v65;
  Button<>.init<A>(_:action:)(&v79, sub_100303C08, v44, &type metadata for String, v45);
  v48 = static Font.Weight.semibold.getter(v47);
  v49 = sub_10002FFB8(&qword_10049F870, (uint64_t *)&unk_10049DB50, (uint64_t)&protocol conformance descriptor for Button<A>);
  v51 = v71;
  v50 = v72;
  View.fontWeight(_:)(*(_QWORD *)&v48, 0, v72, v49);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v50);
  v79 = v34;
  v80 = v10;
  v81 = v28;
  v82 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v79 = v50;
  v80 = v49;
  v53 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v54 = v74;
  v55 = v64;
  View.navigationBarItems<A>(trailing:)(v51, v64, v74, OpaqueTypeConformance2, v53);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v32, v55);
}

uint64_t sub_1002EACAC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t OpaqueTypeConformance2;
  unint64_t v38;
  void (**v39)(char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(void (**)(char *, uint64_t), char *, uint64_t);
  void (**v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, void (**)(char *, uint64_t), uint64_t);
  void (**v129)(char *, uint64_t);
  void (**v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(_QWORD, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (**v163)(char *, uint64_t);
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176[8];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD v182[2];
  char v183;
  uint64_t v184;

  v171 = a2;
  v166 = type metadata accessor for Playlist(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin();
  v164 = (uint64_t *)((char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049E878);
  __chkstk_darwin();
  v170 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v169 = (char *)&v138 - v5;
  v145 = sub_100005574(&qword_10049E880);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v144 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (char *)&v138 - v7;
  sub_100005574(&qword_10049E888);
  __chkstk_darwin();
  v142 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v149 = (uint64_t)&v138 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v150 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for String.LocalizationValue(0);
  v155 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin();
  v161 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v160 = (char *)&v138 - v12;
  v148 = sub_100005574(&qword_10049E890);
  v153 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v140 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v139 = (char *)&v138 - v14;
  __chkstk_darwin();
  v151 = (char *)&v138 - v15;
  sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v146 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Playlist.Collaborator(0);
  v152 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin();
  v147 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E898);
  __chkstk_darwin();
  v168 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v174 = (uint64_t)&v138 - v19;
  v175 = type metadata accessor for Prominence(0);
  v163 = *(void (***)(char *, uint64_t))(v175 - 8);
  __chkstk_darwin();
  v21 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100005574(&qword_10049E8A0);
  __chkstk_darwin();
  v23 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100005574(&qword_10049E8A8);
  v159 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin();
  v25 = (char *)&v138 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100005574(&qword_10049E8B0);
  v172 = *(_QWORD *)(v26 - 8);
  v173 = v26;
  __chkstk_darwin();
  v167 = (char *)&v138 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v138 - v28;
  __chkstk_darwin();
  v31 = (void (**)(char *, uint64_t))((char *)&v138 - v30);
  v177 = a1;
  sub_1002EE5B0(a1, (uint64_t)v23);
  v156 = sub_100005574(&qword_10049E8B8);
  v32 = sub_100005600(&qword_10049E8C0);
  v33 = sub_100005600(&qword_10049E8C8);
  v34 = sub_100303C24();
  v35 = sub_100303CC0(&qword_10049E8F8, &qword_10049E8C8, (void (*)(void))sub_100303D24);
  v178 = v32;
  v179 = v33;
  v180 = v34;
  v181 = v35;
  v36 = a1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
  v38 = sub_100303DC8();
  Section<>.init(header:content:)(v23, sub_100303C1C, v176, v157, v156, OpaqueTypeConformance2, v38);
  v39 = v163;
  v40 = v175;
  ((void (*)(char *, _QWORD, uint64_t))v163[13])(v21, enum case for Prominence.increased(_:), v175);
  v41 = sub_100303E44();
  v42 = v158;
  View.headerProminence(_:)(v21, v158, v41);
  v39[1](v21, v40);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v25, v42);
  v43 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v172 + 32);
  v163 = v31;
  v44 = v31;
  v45 = v174;
  v43(v44, v29, v173);
  v175 = v36;
  v46 = *(_QWORD *)(v36 + 8);
  if ((sub_1002E6BC8() & 1) == 0)
    goto LABEL_7;
  KeyPath = swift_getKeyPath(&unk_10039D548);
  v48 = swift_getKeyPath(&unk_10039D570);
  static Published.subscript.getter(&v178, v46, KeyPath);
  swift_release(KeyPath);
  v49 = swift_release(v48);
  if (*(_QWORD *)(v178 + 16))
  {
    v50 = v152;
    v51 = (uint64_t)v146;
    v52 = v154;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v152 + 16))(v146, v178 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)), v154, v49);
    v53 = 0;
    v54 = v155;
  }
  else
  {
    v53 = 1;
    v54 = v155;
    v52 = v154;
    v50 = v152;
    v51 = (uint64_t)v146;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v53, 1, v52);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v52) == 1)
  {
    sub_100008758(v51, &qword_10049B070);
    v45 = v174;
LABEL_7:
    v55 = sub_100005574(&qword_10049E950);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v45, 1, 1, v55);
    v56 = (uint64_t)v168;
    v57 = (uint64_t)v169;
    goto LABEL_14;
  }
  v58 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v147, v51, v52);
  __chkstk_darwin();
  v136 = (uint64_t)v58;
  v137 = v175;
  v59 = v160;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003BA520);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v161, v59, v162);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v60 = qword_1004A2F90;
  v61 = (id)qword_1004A2F90;
  v62 = v150;
  static Locale.current.getter(v61);
  v63 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v60, v62, 0, 0, 256);
  v65 = v64;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v160, v162);
  v178 = v63;
  v179 = v65;
  v66 = sub_10024AF7C();
  v178 = Text.init<A>(_:)(&v178, &type metadata for String, v66);
  v179 = v67;
  LOBYTE(v180) = v68 & 1;
  v181 = v69;
  v70 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v71 = sub_100006924(&qword_10049E998, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10039D3D8);
  v72 = v139;
  Section<>.init(header:content:)(&v178, sub_100303FC0, &v138 - 4, &type metadata for Text, v70, &protocol witness table for Text, v71);
  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v151, v72, v148);
  v73 = *(_QWORD *)(v175 + 8);
  v74 = swift_getKeyPath(&unk_10039D5D8);
  v75 = swift_getKeyPath(&unk_10039D600);
  static Published.subscript.getter(&v178, v73, v74);
  swift_release(v74);
  swift_release(v75);
  if (v178 == 1)
  {
    __chkstk_darwin();
    v136 = v175;
    sub_100005574(&qword_10049E9C0);
    v76 = sub_100005600(&qword_10049E9C8);
    v77 = sub_100005600(&qword_10049E9D0);
    v78 = type metadata accessor for BorderlessButtonStyle(255);
    v79 = sub_10002FFB8(&qword_10049E9D8, &qword_10049E9D0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v80 = sub_100006924(&qword_10049E9E0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v178 = v77;
    v179 = v78;
    v180 = v79;
    v181 = v80;
    v81 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v178 = v76;
    v179 = v81;
    swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v82 = v149;
    Section<>.init(content:)(sub_10030405C);
    v83 = sub_100005574(&qword_10049E9A0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
  }
  else
  {
    v84 = sub_100005574(&qword_10049E9A0);
    v82 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v149, 1, 1, v84);
  }
  v56 = (uint64_t)v168;
  __chkstk_darwin();
  v136 = v175;
  sub_1002F23B0(v175, (uint64_t)&v178);
  v85 = sub_100005574(&qword_10049E9A8);
  v86 = sub_100303FE0();
  v87 = v141;
  Section<>.init(header:content:)(&v178, sub_100303FD8, &v138 - 4, &type metadata for Text, v85, &protocol witness table for Text, v86);
  v88 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  v89 = v140;
  v90 = v148;
  v88(v140, v151, v148);
  v91 = v142;
  sub_100014A7C(v82, v142, &qword_10049E888);
  v92 = v143;
  v93 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  v94 = v144;
  v95 = v145;
  v93(v144, v87, v145);
  v88((char *)v56, v89, v90);
  v96 = sub_100005574(&qword_10049E9B8);
  sub_100014A7C(v91, v56 + *(int *)(v96 + 48), &qword_10049E888);
  v93((char *)(v56 + *(int *)(v96 + 64)), v94, v95);
  v97 = *(void (**)(char *, uint64_t))(v92 + 8);
  v97(v87, v95);
  sub_100008758(v149, &qword_10049E888);
  v98 = *(void (**)(char *, uint64_t))(v153 + 8);
  v98(v151, v90);
  v97(v94, v95);
  sub_100008758(v91, &qword_10049E888);
  v98(v89, v90);
  v99 = sub_100005574(&qword_10049E950);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v56, 0, 1, v99);
  v45 = v174;
  sub_1000149A8(v56, v174, &qword_10049E898);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v147, v154);
  v57 = (uint64_t)v169;
LABEL_14:
  v100 = *(_QWORD *)(v175 + 8);
  v101 = swift_getKeyPath(&unk_10039D428);
  v102 = swift_getKeyPath(&unk_10039D450);
  v103 = v164;
  static Published.subscript.getter(v164, v100, v101);
  swift_release(v101);
  swift_release(v102);
  LOBYTE(v100) = Playlist.isOwner.getter(v104);
  (*(void (**)(_QWORD *, uint64_t))(v165 + 8))(v103, v166);
  if ((v100 & 1) != 0
    && (v105 = *(_QWORD *)(v175 + 8),
        v106 = swift_getKeyPath(&unk_10039D5D8),
        v107 = swift_getKeyPath(&unk_10039D600),
        static Published.subscript.getter(&v178, v105, v106),
        swift_release(v106),
        swift_release(v107),
        v178 == 1))
  {
    __chkstk_darwin();
    v136 = v175;
    v108 = v160;
    String.LocalizationValue.init(stringLiteral:)(0x704F206572616853, 0xED0000736E6F6974);
    v109 = v155;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v161, v108, v162);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v110 = qword_1004A2F90;
    v111 = (id)qword_1004A2F90;
    v112 = v150;
    static Locale.current.getter(v111);
    v113 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v110, v112, 0, 0, 256);
    v115 = v114;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v160, v162);
    v178 = v113;
    v179 = v115;
    v116 = sub_10024AF7C();
    v182[0] = Text.init<A>(_:)(&v178, &type metadata for String, v116);
    v182[1] = v117;
    v183 = v118 & 1;
    v184 = v119;
    sub_1002F29A4(v175, (uint64_t)&v178);
    v120 = sub_100005574(&qword_10049E968);
    v121 = sub_100005574(&qword_10049E970);
    v122 = sub_10002FFB8(&qword_10049E978, &qword_10049E968, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v123 = sub_100303F30();
    Section<>.init(header:footer:content:)(v182, &v178, sub_100303F28, &v138 - 4, &type metadata for Text, v120, v121, &protocol witness table for Text, v122, v123);
    v124 = sub_100005574(&qword_10049E958);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v57, 0, 1, v124);
  }
  else
  {
    v125 = sub_100005574(&qword_10049E958);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v57, 1, 1, v125);
  }
  v126 = v172;
  v127 = v173;
  v128 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v172 + 16);
  v129 = v167;
  v130 = v163;
  v128(v167, v163, v173);
  sub_100014A7C(v45, v56, &qword_10049E898);
  v131 = v170;
  sub_100014A7C(v57, v170, &qword_10049E878);
  v132 = v171;
  v128((char *)v171, (void (**)(char *, uint64_t))v129, v127);
  v133 = sub_100005574(&qword_10049E960);
  sub_100014A7C(v56, v132 + *(int *)(v133 + 48), &qword_10049E898);
  sub_100014A7C(v131, v132 + *(int *)(v133 + 64), &qword_10049E878);
  sub_100008758(v57, &qword_10049E878);
  sub_100008758(v174, &qword_10049E898);
  v134 = *(void (**)(_QWORD, uint64_t))(v126 + 8);
  v134(v130, v127);
  sub_100008758(v131, &qword_10049E878);
  sub_100008758(v56, &qword_10049E898);
  return ((uint64_t (*)(_QWORD, uint64_t))v134)(v129, v127);
}

uint64_t sub_1002EBDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_100005574(&qword_10049E8B8);
  __chkstk_darwin();
  v86 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v79 = v5;
  v81 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100005574(&qword_10049E9A8);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin();
  v84 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v82 = (char *)&v72 - v7;
  v8 = type metadata accessor for AccessibilityChildBehavior(0);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  __chkstk_darwin();
  v74 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049EBB8);
  __chkstk_darwin();
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049EBC0);
  __chkstk_darwin();
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10049EBC8);
  __chkstk_darwin();
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10049EBD0);
  __chkstk_darwin();
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100005574(&qword_10049EBD8);
  v87 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin();
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v77 = (char *)&v72 - v23;
  v88 = a1;
  v24 = sub_1002E6BC8();
  if ((v24 & 1) != 0)
  {
    v25 = sub_100005574(&qword_10049E940);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  else
  {
    v73 = a2;
    *(_QWORD *)v11 = static VerticalAlignment.center.getter(v24);
    *((_QWORD *)v11 + 1) = 0x4028000000000000;
    v11[16] = 0;
    v27 = sub_100005574(&qword_10049EBE0);
    v28 = sub_1002EC4F0(v88, (uint64_t)&v11[*(int *)(v27 + 44)]);
    v29 = static Edge.Set.horizontal.getter(v28);
    v30 = EdgeInsets.init(_all:)(20.0);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    sub_100014A7C((uint64_t)v11, (uint64_t)v14, &qword_10049EBB8);
    v37 = &v14[*(int *)(v12 + 36)];
    *v37 = v29;
    *((double *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    sub_100008758((uint64_t)v11, &qword_10049EBB8);
    if (qword_100498910 != -1)
      swift_once(&qword_100498910, sub_10024A3A4);
    v72 = static EdgeInsets.zero;
    v38 = qword_1004A31C8;
    v39 = unk_1004A31D0;
    sub_100014A7C((uint64_t)v14, (uint64_t)v17, &qword_10049EBC0);
    v40 = &v17[*(int *)(v15 + 36)];
    *(_OWORD *)v40 = v72;
    *((_QWORD *)v40 + 2) = v38;
    *((_QWORD *)v40 + 3) = v39;
    v40[32] = 0;
    v41 = sub_100008758((uint64_t)v14, &qword_10049EBC0);
    v42 = static HorizontalAlignment.listRowSeparatorLeading.getter(v41);
    sub_100014A7C((uint64_t)v17, (uint64_t)v20, &qword_10049EBC8);
    v43 = (uint64_t *)&v20[*(int *)(v18 + 36)];
    *v43 = v42;
    v43[1] = (uint64_t)sub_1002EE58C;
    v43[2] = 0;
    v44 = sub_100008758((uint64_t)v17, &qword_10049EBC8);
    v45 = v74;
    static AccessibilityChildBehavior.combine.getter(v44);
    v46 = sub_1003035C0(&qword_10049EBE8, &qword_10049EBD0, (void (*)(void))sub_100304800, (void (*)(void))sub_100304908);
    View.accessibilityElement(children:)(v45, v18, v46);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v76);
    sub_100008758((uint64_t)v20, &qword_10049EBD0);
    v47 = v87;
    v48 = v77;
    v49 = v80;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v77, v22, v80);
    v50 = v88;
    v89 = sub_1002E714C();
    v51 = v81;
    sub_100082248(v50, v81, type metadata accessor for Collaboration.Management.View);
    v52 = *(unsigned __int8 *)(v78 + 80);
    v53 = (v52 + 16) & ~v52;
    v54 = swift_allocObject(&unk_100462F50, v53 + v79, v52 | 7);
    sub_1000648AC(v51, v54 + v53, type metadata accessor for Collaboration.Management.View);
    v55 = sub_100005574(&qword_10049DA50);
    v56 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
    v57 = sub_10002FFB8(&qword_10049EA08, &qword_10049DA50, (uint64_t)&protocol conformance descriptor for [A]);
    v58 = sub_100006924(&qword_10049E998, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10039D3D8);
    v59 = sub_100006924(&qword_10049EA10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v60 = v82;
    ForEach<>.init(_:content:)(&v89, sub_1003041A0, v54, v55, &type metadata for MusicItemID, v56, v57, v58, v59);
    v61 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v62 = v48;
    v61(v22, v48, v49);
    v64 = v83;
    v63 = v84;
    v65 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v66 = v85;
    v65(v84, v60, v85);
    v67 = (uint64_t)v86;
    v61(v86, v22, v49);
    v68 = sub_100005574(&qword_10049EC10);
    v65((char *)(v67 + *(int *)(v68 + 48)), v63, v66);
    v69 = *(void (**)(char *, uint64_t))(v64 + 8);
    v69(v60, v66);
    v70 = *(void (**)(char *, uint64_t))(v87 + 8);
    v70(v62, v49);
    v69(v63, v66);
    v70(v22, v49);
    v71 = sub_100005574(&qword_10049E940);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v67, 0, 1, v71);
    return sub_1000149A8(v67, v73, &qword_10049E8B8);
  }
}

uint64_t sub_1002EC4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  __n128 v109;
  double v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  __int128 v126;
  uint64_t v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t OpaqueTypeConformance2;
  char *v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  void (*v172)(char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unsigned __int8 v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  uint64_t v259;

  v239 = a2;
  v229 = sub_100005574(&qword_10049E5D8);
  __chkstk_darwin();
  v4 = (char *)&v186 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v6 = (char *)&v186 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Management.View(0);
  v199 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v200 = v8;
  v201 = (uint64_t)&v186 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_100005574((uint64_t *)&unk_10049DB50);
  v204 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin();
  v202 = (char *)&v186 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100005574(&qword_10049EC18);
  __chkstk_darwin();
  v205 = (char *)&v186 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100005574(&qword_10049EC20);
  v209 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin();
  v208 = (char *)&v186 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100005574(&qword_10049EC28);
  __chkstk_darwin();
  v213 = (char *)&v186 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100005574(&qword_10049EC30);
  __chkstk_darwin();
  v214 = (uint64_t)&v186 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = sub_100005574(&qword_10049EC38);
  __chkstk_darwin();
  v237 = (char *)&v186 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_100005574(&qword_10049EC40);
  __chkstk_darwin();
  v216 = (uint64_t)&v186 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100005574(&qword_10049EC48);
  __chkstk_darwin();
  v217 = (char *)&v186 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_100005574(&qword_10049EC50);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin();
  v219 = (char *)&v186 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = sub_100005574(&qword_10049EC58);
  v225 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin();
  v224 = (char *)&v186 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v222 = (char *)&v186 - v19;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v195 = (char *)&v186 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = type metadata accessor for String.LocalizationValue(0);
  v197 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin();
  v194 = (char *)&v186 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v196 = (char *)&v186 - v22;
  v193 = type metadata accessor for Playlist(0);
  v192 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin();
  v191 = (uint64_t *)((char *)&v186 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049EC60);
  __chkstk_darwin();
  v238 = (uint64_t *)((char *)&v186 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v241 = (uint64_t)&v186 - v25;
  v231 = sub_100005574(&qword_10049EC68);
  __chkstk_darwin();
  v233 = (uint64_t *)((char *)&v186 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049EC70);
  __chkstk_darwin();
  v232 = (char *)&v186 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = sub_100005574(&qword_10049EC78);
  __chkstk_darwin();
  v29 = (char *)&v186 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v236 = sub_100005574(&qword_10049EC80);
  v235 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin();
  v234 = (uint64_t)&v186 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DynamicTypeSize(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v34 = (char *)&v186 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v36 = (char *)&v186 - v35;
  sub_100005574(&qword_10049EC88);
  __chkstk_darwin();
  v240 = (uint64_t)&v186 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v242 = (uint64_t)&v186 - v38;
  sub_1002BE220((uint64_t)v36);
  if (qword_100498BF8 != -1)
    swift_once(&qword_100498BF8, sub_1002F3510);
  v39 = sub_1000086B4(v31, (uint64_t)qword_10049DA00);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v39, v31);
  v40 = sub_100006924((unint64_t *)&qword_10049E500, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v41 = dispatch thunk of static Comparable.< infix(_:_:)(v34, v36, v31, v40);
  v42 = *(void (**)(char *, uint64_t))(v32 + 8);
  v42(v34, v31);
  v42(v36, v31);
  v228 = (uint64_t *)v4;
  v227 = v7;
  v223 = v6;
  if ((v41 & 1) != 0)
  {
    v43 = 1;
    v44 = v242;
    v45 = (uint64_t)v237;
    v46 = v236;
  }
  else
  {
    v189 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
    if (qword_100498B98 != -1)
      swift_once(&qword_100498B98, sub_1002F30B0);
    v190 = a1;
    v47 = qword_10049D9A0;
    KeyPath = swift_getKeyPath(&unk_10039D518);
    v49 = qword_100498BE8;
    swift_retain(v47);
    if (v49 != -1)
      v50 = swift_once(&qword_100498BE8, sub_1002F341C);
    v51 = qword_10049D9F0;
    v52 = static Alignment.center.getter(v50);
    v54 = _FrameLayout.init(width:height:alignment:)(&v254, v51, 0, v51, 0, v52, v53);
    v188 = v254;
    v187 = v255;
    v186 = v256;
    v55 = v257;
    v56 = v258;
    v57 = v259;
    v58 = (uint64_t)v232;
    static SymbolRenderingMode.hierarchical.getter(v54);
    v59 = type metadata accessor for SymbolRenderingMode(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
    v60 = swift_getKeyPath(&unk_10039D818);
    v61 = v233;
    sub_100014A7C(v58, (uint64_t)v233 + *(int *)(v231 + 28), &qword_10049EC70);
    *v61 = v60;
    sub_100014A7C((uint64_t)v61, (uint64_t)&v29[*(int *)(v230 + 36)], &qword_10049EC68);
    v62 = v189;
    *(_QWORD *)v29 = v189;
    *((_QWORD *)v29 + 1) = KeyPath;
    v63 = v188;
    *((_QWORD *)v29 + 2) = v47;
    *((_QWORD *)v29 + 3) = v63;
    v29[32] = v187;
    *((_QWORD *)v29 + 5) = v186;
    v29[48] = v55;
    *((_QWORD *)v29 + 7) = v56;
    *((_QWORD *)v29 + 8) = v57;
    swift_retain(v62);
    swift_retain(KeyPath);
    swift_retain(v47);
    sub_100008758((uint64_t)v61, &qword_10049EC68);
    sub_100008758(v58, &qword_10049EC70);
    swift_release(v47);
    swift_release(KeyPath);
    swift_release(v62);
    if (qword_100498BF0 != -1)
      swift_once(&qword_100498BF0, sub_1002F347C);
    v64 = qword_10049D9F8;
    v65 = swift_getKeyPath(&unk_10039D4E8);
    v66 = v234;
    sub_100014A7C((uint64_t)v29, v234, &qword_10049EC78);
    v46 = v236;
    v67 = (uint64_t *)(v66 + *(int *)(v236 + 36));
    *v67 = v65;
    v67[1] = v64;
    swift_retain(v64);
    sub_100008758((uint64_t)v29, &qword_10049EC78);
    v44 = v242;
    sub_1000149A8(v66, v242, &qword_10049EC80);
    v43 = 0;
    a1 = v190;
    v45 = (uint64_t)v237;
  }
  v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v235 + 56))(v44, v43, 1, v46);
  v69 = static HorizontalAlignment.leading.getter(v68);
  sub_1002EDB00(a1, (uint64_t)&v249);
  v231 = *((_QWORD *)&v249 + 1);
  v232 = (char *)v249;
  LODWORD(v230) = v250;
  v233 = (uint64_t *)*((_QWORD *)&v250 + 1);
  v236 = *((_QWORD *)&v251 + 1);
  v237 = (char *)v251;
  v235 = v252;
  v234 = v253;
  v70 = *(_QWORD *)(a1 + 8);
  v71 = swift_getKeyPath(&unk_10039D5D8);
  v72 = swift_getKeyPath(&unk_10039D600);
  static Published.subscript.getter(&v249, v70, v71);
  swift_release(v71);
  swift_release(v72);
  if (v249 == 1)
  {
    v190 = v69;
    v73 = *(_QWORD *)(a1 + 8);
    v74 = swift_getKeyPath(&unk_10039D428);
    v75 = swift_getKeyPath(&unk_10039D450);
    v76 = v191;
    static Published.subscript.getter(v191, v73, v74);
    swift_release(v74);
    swift_release(v75);
    LOBYTE(v73) = Playlist.isOwner.getter(v77);
    (*(void (**)(_QWORD *, uint64_t))(v192 + 8))(v76, v193);
    v78 = v196;
    if ((v73 & 1) != 0)
    {
      v79 = 1886352467;
      v80 = 0xE400000000000000;
    }
    else
    {
      v79 = 0x657661654CLL;
      v80 = 0xE500000000000000;
    }
    String.LocalizationValue.init(stringLiteral:)(v79, v80);
    v85 = v197;
    v86 = v194;
    v87 = v198;
    (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v194, v78, v198);
    v88 = (uint64_t)v217;
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v89 = qword_1004A2F90;
    v90 = (id)qword_1004A2F90;
    v91 = v195;
    static Locale.current.getter(v90);
    v92 = String.init(localized:table:bundle:locale:comment:)(v86, 0, 0, v89, v91, 0, 0, 256);
    v94 = v93;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v78, v87);
    v198 = v92;
    *(_QWORD *)&v249 = v92;
    *((_QWORD *)&v249 + 1) = v94;
    v95 = v201;
    sub_100082248(a1, v201, type metadata accessor for Collaboration.Management.View);
    v96 = *(unsigned __int8 *)(v199 + 80);
    v97 = (v96 + 16) & ~v96;
    v98 = swift_allocObject(&unk_100462F78, v97 + v200, v96 | 7);
    sub_1000648AC(v95, v98 + v97, type metadata accessor for Collaboration.Management.View);
    v99 = sub_10024AF7C();
    v217 = v94;
    swift_bridgeObjectRetain();
    v100 = v202;
    v101 = Button<>.init<A>(_:action:)(&v249, sub_1003049C8, v98, &type metadata for String, v99);
    v102 = static Font.subheadline.getter(v101);
    v103 = swift_getKeyPath(&unk_10039D518);
    v104 = v204;
    v105 = (uint64_t)v205;
    v106 = v207;
    (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v205, v100, v207);
    v107 = v206;
    v108 = (uint64_t *)(v105 + *(int *)(v206 + 36));
    *v108 = v103;
    v108[1] = v102;
    v109.n128_f64[0] = (*(double (**)(char *, uint64_t))(v104 + 8))(v100, v106);
    v110 = static Font.Weight.semibold.getter(v109);
    v111 = sub_100304A1C();
    v112 = v208;
    View.fontWeight(_:)(*(_QWORD *)&v110, 0, v107, v111);
    v113 = sub_100008758(v105, &qword_10049EC18);
    v114 = static Color.white.getter(v113);
    v115 = swift_getKeyPath(&unk_10039D4E8);
    v116 = v209;
    v117 = (uint64_t)v213;
    v118 = v210;
    (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v213, v112, v210);
    v119 = (uint64_t *)(v117 + *(int *)(v203 + 36));
    *v119 = v115;
    v119[1] = v114;
    v120 = (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v112, v118);
    if (qword_100498BD8 != -1)
      v120 = swift_once(&qword_100498BD8, sub_1002F3358);
    v121 = qword_10049D9E0;
    v122 = static Alignment.center.getter(v120);
    _FrameLayout.init(width:height:alignment:)(&v249, 0, 1, v121, 0, v122, v123);
    v124 = v214;
    sub_100014A7C(v117, v214, &qword_10049EC28);
    v125 = (_OWORD *)(v124 + *(int *)(v211 + 36));
    v126 = v250;
    *v125 = v249;
    v125[1] = v126;
    v125[2] = v251;
    v127 = sub_100008758(v117, &qword_10049EC28);
    LOBYTE(v121) = static Edge.Set.horizontal.getter(v127);
    v128 = EdgeInsets.init(_all:)(14.0);
    v130 = v129;
    v132 = v131;
    v134 = v133;
    sub_100014A7C(v124, v45, &qword_10049EC30);
    v135 = v45 + *(int *)(v212 + 36);
    *(_BYTE *)v135 = v121;
    *(double *)(v135 + 8) = v128;
    *(_QWORD *)(v135 + 16) = v130;
    *(_QWORD *)(v135 + 24) = v132;
    *(_QWORD *)(v135 + 32) = v134;
    *(_BYTE *)(v135 + 40) = 0;
    sub_100008758(v124, &qword_10049EC30);
    v136 = (uint64_t)v228;
    v137 = v227;
    v138 = (uint64_t)v223;
    if (qword_100498920 != -1)
      swift_once(&qword_100498920, sub_10024DEF0);
    v139 = Color.init(_:)((id)static UIColor.MusicTint.normal);
    v140 = static Edge.Set.all.getter(v139);
    v141 = v45;
    v142 = v45;
    v143 = v216;
    sub_100014A7C(v141, v216, &qword_10049EC38);
    v144 = v143 + *(int *)(v215 + 36);
    *(_QWORD *)v144 = v139;
    *(_BYTE *)(v144 + 8) = v140;
    sub_100008758(v142, &qword_10049EC38);
    v145 = enum case for RoundedCornerStyle.continuous(_:);
    v146 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 104))(v138, v145, v146);
    v147 = v218;
    v148 = v88 + *(int *)(v218 + 36);
    sub_100082248(v138, v148, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    *(_WORD *)(v148 + *(int *)(sub_100005574(&qword_10049ECA8) + 36)) = 256;
    sub_100014A7C(v143, v88, &qword_10049EC40);
    sub_100006798(v138, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    sub_100008758(v143, &qword_10049EC40);
    v149 = v147;
    if (qword_100498C00 != -1)
      swift_once(&qword_100498C00, sub_1002F3568);
    v150 = v229;
    v151 = sub_1000086B4(v229, (uint64_t)qword_10049DA18);
    sub_100014A7C(v151, v136, &qword_10049E5D8);
    v152 = sub_100304AB8();
    v153 = sub_10002FFB8(&qword_10049E610, &qword_10049E5D8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v154 = v219;
    View.dynamicTypeSize<A>(_:)(v136, v149, v150, v152, v153);
    sub_100008758(v136, &qword_10049E5D8);
    sub_100008758(v88, &qword_10049EC48);
    v155 = a1 + *(int *)(v137 + 44);
    v156 = *(_BYTE *)v155;
    v157 = *(_QWORD *)(v155 + 8);
    v247 = v156;
    v248 = v157;
    v158 = sub_100005574(&qword_10049C5C8);
    State.projectedValue.getter(&v243, v158);
    v228 = &v186;
    v159 = v243;
    v160 = v244;
    v161 = v245;
    __chkstk_darwin();
    v162 = v198;
    *(&v186 - 4) = a1;
    *(&v186 - 3) = v162;
    *(&v186 - 2) = (uint64_t)v217;
    v243 = v149;
    v244 = v150;
    v245 = v152;
    v246 = v153;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v243, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v164 = v224;
    v165 = v221;
    View.alert(isPresented:content:)(v159, v160, v161, sub_100304CB0, &v186 - 6, v221, OpaqueTypeConformance2);
    swift_bridgeObjectRelease();
    swift_release(v160);
    v166 = swift_release(v159);
    (*(void (**)(char *, uint64_t, __n128))(v220 + 8))(v154, v165, v166);
    v167 = v225;
    v168 = v222;
    v169 = v226;
    (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v222, v164, v226);
    v170 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
    v170(v164, v168, v169);
    v84 = (uint64_t)v238;
    *v238 = 0;
    *(_BYTE *)(v84 + 8) = 1;
    v171 = sub_100005574(&qword_10049ECF0);
    v170((char *)(v84 + *(int *)(v171 + 48)), v164, v169);
    v172 = *(void (**)(char *, uint64_t))(v167 + 8);
    v172(v168, v169);
    v172(v164, v169);
    v173 = sub_100005574(&qword_10049EC90);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 56))(v84, 0, 1, v173);
    v82 = v241;
    sub_1000149A8(v84, v241, &qword_10049EC60);
    v83 = v242;
    v69 = v190;
  }
  else
  {
    v81 = sub_100005574(&qword_10049EC90);
    v82 = v241;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v241, 1, 1, v81);
    v83 = v44;
    v84 = (uint64_t)v238;
  }
  v174 = v240;
  sub_100014A7C(v83, v240, &qword_10049EC88);
  sub_100014A7C(v82, v84, &qword_10049EC60);
  v175 = v239;
  sub_100014A7C(v174, v239, &qword_10049EC88);
  v176 = sub_100005574(&qword_10049EC98);
  v177 = v175 + *(int *)(v176 + 48);
  *(_QWORD *)v177 = v69;
  *(_QWORD *)(v177 + 8) = 0;
  *(_BYTE *)(v177 + 16) = 1;
  v178 = (uint64_t)v232;
  v179 = v231;
  *(_QWORD *)(v177 + 24) = v232;
  *(_QWORD *)(v177 + 32) = v179;
  v180 = v230;
  *(_BYTE *)(v177 + 40) = v230;
  v181 = (uint64_t)v237;
  *(_QWORD *)(v177 + 48) = v233;
  *(_QWORD *)(v177 + 56) = v181;
  v182 = v236;
  v183 = v235;
  *(_QWORD *)(v177 + 64) = v236;
  *(_QWORD *)(v177 + 72) = v183;
  v184 = v234;
  *(_QWORD *)(v177 + 80) = v234;
  sub_100014A7C(v84, v175 + *(int *)(v176 + 64), &qword_10049EC60);
  sub_10003B4C0(v178, v179, v180);
  swift_bridgeObjectRetain();
  sub_1002A3C34(v181, v182, v183, v184);
  sub_100008758(v241, &qword_10049EC60);
  sub_100008758(v242, &qword_10049EC88);
  sub_100008758(v84, &qword_10049EC60);
  sub_10003B4D0(v178, v179, v180);
  swift_bridgeObjectRelease();
  sub_1002A3C64(v181, v182, v183, v184);
  return sub_100008758(v240, &qword_10049EC88);
}

uint64_t sub_1002EDB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  _BYTE v67[12];
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v71 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v67[-v9];
  String.LocalizationValue.init(stringLiteral:)(0x726F62616C6C6F43, 0xED00006E6F697461);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v10, v5);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v11 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v12 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v11, v4, 0, 0, 256);
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v5);
  v72 = v12;
  v73 = v14;
  v15 = sub_10024AF7C();
  v34 = Text.init<A>(_:)(&v72, &type metadata for String, v15);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v72) = static HierarchicalShapeStyle.primary.getter(v34);
  v22 = Text.foregroundStyle<A>(_:)(&v72, v34, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  sub_10003B4D0(v34, v17, v21);
  v29 = swift_bridgeObjectRelease();
  v30 = static Font.callout.getter(v29);
  v31 = Text.font(_:)(v30, v22, v24, v28, v26);
  v70 = v32;
  LODWORD(v34) = v33;
  v36 = v35;
  swift_release(v30);
  sub_10003B4D0(v22, v24, v28);
  swift_bridgeObjectRelease();
  v37 = sub_1002E72AC();
  if (v38)
  {
    v72 = v37;
    v73 = v38;
    v39 = Text.init<A>(_:)(&v72, &type metadata for String, v15);
    v41 = v40;
    v43 = v42;
    v45 = v44 & 1;
    LODWORD(v72) = static HierarchicalShapeStyle.secondary.getter(v39);
    v46 = Text.foregroundStyle<A>(_:)(&v72, v39, v41, v45, v43, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v68 = v34;
    v34 = v47;
    v71 = v36;
    v49 = v48;
    v69 = v31;
    v51 = v50 & 1;
    sub_10003B4D0(v39, v41, v45);
    v52 = swift_bridgeObjectRelease();
    v53 = static Font.caption.getter(v52);
    v54 = Text.font(_:)(v53, v46, v34, v51, v49);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    swift_release(v53);
    v61 = v58 & 1;
    v62 = v34;
    LOBYTE(v34) = v68;
    v63 = v51;
    v31 = v69;
    sub_10003B4D0(v46, v62, v63);
    v36 = v71;
    swift_bridgeObjectRelease();
  }
  else
  {
    v54 = 0;
    v56 = 0;
    v61 = 0;
    v60 = 0;
  }
  v64 = v34 & 1;
  v65 = v70;
  *(_QWORD *)a2 = v31;
  *(_QWORD *)(a2 + 8) = v65;
  *(_BYTE *)(a2 + 16) = v64;
  *(_QWORD *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v54;
  *(_QWORD *)(a2 + 40) = v56;
  *(_QWORD *)(a2 + 48) = v61;
  *(_QWORD *)(a2 + 56) = v60;
  sub_10003B4C0(v31, v65, v64);
  swift_bridgeObjectRetain();
  sub_1002A3C34(v54, v56, v61, v60);
  sub_1002A3C64(v54, v56, v61, v60);
  sub_10003B4D0(v31, v65, v64);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002EDED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v20[9];
  uint64_t v21;

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v7 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 44));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v20[1] = v8;
  v21 = v9;
  v20[0] = 1;
  v10 = sub_100005574(&qword_10049C5C8);
  v11 = State.wrappedValue.setter(v20, v10);
  v13 = Logger.collaboration.unsafeMutableAddressor(v11, v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Management] Stop/Leave button tapped", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002EE020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v71 = a2;
  v72 = a3;
  v79 = a4;
  v73 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v74 = v5;
  v76 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0);
  __chkstk_darwin();
  v78 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v77 = (char *)&v65 - v7;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v70 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v65 - v13;
  v15 = type metadata accessor for Playlist(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (uint64_t *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = a1;
  v19 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v21 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v18, v19, KeyPath);
  swift_release(KeyPath);
  swift_release(v21);
  LOBYTE(v19) = Playlist.isOwner.getter(v22);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003BA7A0);
    v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v23(v12, v14, v9);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v33 = qword_1004A2F90;
    v34 = (id)qword_1004A2F90;
    v26 = v70;
    static Locale.current.getter(v34);
    v27 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v33, v26, 0, 0, 256);
    v29 = v35;
    v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v30(v14, v9);
    v32 = 0xD00000000000005ELL;
    v31 = 0x80000001003BA7C0;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003BA700);
    v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v23(v12, v14, v9);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v24 = qword_1004A2F90;
    v25 = (id)qword_1004A2F90;
    v26 = v70;
    static Locale.current.getter(v25);
    v27 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v24, v26, 0, 0, 256);
    v29 = v28;
    v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v30(v14, v9);
    v31 = 0x80000001003BA720;
    v32 = 0x1000000000000079;
  }
  String.LocalizationValue.init(stringLiteral:)(v32, v31);
  v23(v12, v14, v9);
  v36 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v37 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v36, v26, 0, 0, 256);
  v39 = v38;
  v30(v14, v9);
  v80 = v27;
  v81 = v29;
  v40 = sub_10024AF7C();
  v41 = Text.init<A>(_:)(&v80, &type metadata for String, v40);
  v69 = v42;
  v70 = (char *)v41;
  v67 = v43;
  v68 = v44;
  v80 = v37;
  v81 = v39;
  v45 = Text.init<A>(_:)(&v80, &type metadata for String, v40);
  v65 = v46;
  v66 = v45;
  v48 = v47;
  v50 = v49 & 1;
  v80 = v71;
  v81 = v72;
  swift_bridgeObjectRetain();
  v51 = Text.init<A>(_:)(&v80, &type metadata for String, v40);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  v58 = v76;
  sub_100082248(v75, v76, type metadata accessor for Collaboration.Management.View);
  v59 = *(unsigned __int8 *)(v73 + 80);
  v60 = (v59 + 16) & ~v59;
  v61 = swift_allocObject(&unk_100462FA0, v60 + v74, v59 | 7);
  sub_1000648AC(v58, v61 + v60, type metadata accessor for Collaboration.Management.View);
  v62 = v77;
  static Alert.Button.destructive(_:action:)(v51, v53, v57, v55, sub_100304198, v61);
  sub_10003B4D0(v51, v53, v57);
  swift_release(v61);
  swift_bridgeObjectRelease();
  v63 = v78;
  static Alert.Button.cancel(_:)(CFRange.init(_:), 0);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v70, v69, v67 & 1, v68, v66, v48, v50, v65, v62, v63);
}

uint64_t sub_1002EE58C()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.leading.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_1002EE5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD v31[2];
  unsigned __int8 v32;

  v28 = a2;
  v3 = type metadata accessor for Collaboration.Management.View(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  sub_100005574((uint64_t *)&unk_10049E8E0);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049E8C0);
  v9 = __chkstk_darwin();
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v9);
  *((_QWORD *)v7 + 1) = 0x4028000000000000;
  v7[16] = 0;
  v12 = sub_100005574((uint64_t *)&unk_10049EA30);
  sub_1002EE824(a1, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_100014A7C((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_10049E8E0);
  v13 = &v11[*(int *)(v8 + 36)];
  v13[32] = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_100008758((uint64_t)v7, (uint64_t *)&unk_10049E8E0);
  v14 = a1 + *(int *)(v3 + 40);
  v15 = *(_BYTE *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v29 = v15;
  v30 = v16;
  v17 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(v31, v17);
  v19 = v31[0];
  v18 = v31[1];
  v20 = v32;
  sub_100082248(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_100462E10, v22 + v5, v21 | 7);
  sub_1000648AC((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for Collaboration.Management.View);
  v24 = sub_100005574(&qword_10049E8C8);
  v25 = sub_100303C24();
  v26 = sub_100303CC0(&qword_10049E8F8, &qword_10049E8C8, (void (*)(void))sub_100303D24);
  View.fullScreenCover<A>(isPresented:onDismiss:content:)(v19, v18, v20, 0, 0, sub_100304474, v23, v8, v24, v25, v26);
  swift_release(v18);
  swift_release(v23);
  swift_release(v19);
  return sub_100008758((uint64_t)v11, &qword_10049E8C0);
}

uint64_t sub_1002EE824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  double v99;
  _QWORD *v100;
  int v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD v215[2];
  _OWORD v216[3];
  uint64_t v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  __int16 v222;

  v211 = a2;
  sub_100005574(&qword_10049F880);
  __chkstk_darwin();
  v185 = (uint64_t)&v177 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049EA50);
  __chkstk_darwin();
  v188 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_100005574(&qword_10049EA58);
  __chkstk_darwin();
  v186 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100005574(&qword_10049EA60);
  __chkstk_darwin();
  v187 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100005574(&qword_10049EA68);
  __chkstk_darwin();
  v190 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100005574(&qword_10049EA70);
  __chkstk_darwin();
  v191 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100005574(&qword_10049EA78);
  __chkstk_darwin();
  v195 = (uint64_t)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100005574(&qword_10049EA80);
  __chkstk_darwin();
  v197 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v196 = (uint64_t)&v177 - v11;
  sub_100005574(&qword_10049EA88);
  __chkstk_darwin();
  v178 = (uint64_t *)((char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177 = sub_100005574(&qword_10049EA90);
  __chkstk_darwin();
  v180 = (uint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100005574(&qword_10049EA98);
  __chkstk_darwin();
  v194 = (uint64_t)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v192 = (uint64_t)&v177 - v15;
  sub_100005574((uint64_t *)&unk_10049EAA0);
  __chkstk_darwin();
  v210 = (char *)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v209 = (char *)&v177 - v17;
  v208 = type metadata accessor for Playlist(0);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v206 = (uint64_t *)((char *)&v177 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v199 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin();
  v20 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v24 = (char *)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100005574(&qword_10049C500);
  v201 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin();
  v26 = (char *)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_100005574((uint64_t *)&unk_10049F7E0);
  __chkstk_darwin();
  v28 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100005574(&qword_10049EAB0);
  __chkstk_darwin();
  v30 = (char *)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100005574(&qword_10049EAB8);
  __chkstk_darwin();
  v32 = (char *)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_100005574(&qword_10049EAC0);
  __chkstk_darwin();
  v214 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v212 = (uint64_t)&v177 - v34;
  v213 = a1;
  sub_1002E8360(v24);
  v35 = enum case for Playlist.Variant.regular(_:);
  v36 = type metadata accessor for Playlist.Variant(0);
  v37 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v22, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v22, 0, 1, v36);
  v38 = sub_100005574(&qword_10049F810);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v22, 0, 10, v38);
  v217 = 0;
  v218 = 1;
  v219 = 0;
  v220 = 1;
  v221 = 0;
  v222 = 513;
  v39 = v198;
  v40 = v199;
  (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v20, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v199);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v24, (uint64_t)v22, (uint64_t)&v217, (uint64_t)v20, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  sub_100006798((uint64_t)v22, type metadata accessor for ArtworkImage.Placeholder);
  v41 = sub_100008758((uint64_t)v24, (uint64_t *)&unk_10049F7D0);
  if (qword_100498BE0 != -1)
    v41 = swift_once(&qword_100498BE0, sub_1002F33B8);
  v42 = qword_10049D9E8;
  v43 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(v216, v42, 0, v42, 0, v43, v44);
  v45 = v201;
  v46 = v203;
  (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v28, v26, v203);
  v47 = &v28[*(int *)(v200 + 36)];
  v48 = v216[1];
  *(_OWORD *)v47 = v216[0];
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v216[2];
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v46);
  if (qword_100498A80 != -1)
    swift_once(&qword_100498A80, sub_1002962B0);
  v49 = static Corner.small;
  v50 = unk_1004A3D00;
  v51 = byte_1004A3D08;
  sub_100014A7C((uint64_t)v28, (uint64_t)v30, (uint64_t *)&unk_10049F7E0);
  v52 = &v30[*(int *)(v202 + 36)];
  *(_QWORD *)v52 = v49;
  *((_QWORD *)v52 + 1) = v50;
  v52[16] = v51;
  sub_100008758((uint64_t)v28, (uint64_t *)&unk_10049F7E0);
  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  v53 = static Border.artwork;
  v54 = qword_1004A3D60;
  v55 = byte_1004A3D68;
  v56 = static Corner.small;
  v57 = unk_1004A3D00;
  v58 = byte_1004A3D08;
  sub_100014A7C((uint64_t)v30, (uint64_t)v32, &qword_10049EAB0);
  v59 = &v32[*(int *)(v204 + 36)];
  *(_QWORD *)v59 = v53;
  *((_QWORD *)v59 + 1) = v54;
  v59[16] = v55;
  *((_QWORD *)v59 + 3) = v56;
  *((_QWORD *)v59 + 4) = v57;
  v59[40] = v58;
  swift_retain(v53);
  sub_100008758((uint64_t)v30, &qword_10049EAB0);
  v61 = static Color.black.getter(v60);
  v62 = Color.opacity(_:)(0.15);
  swift_release(v61);
  v63 = v214;
  sub_100014A7C((uint64_t)v32, v214, &qword_10049EAB8);
  v64 = v63 + *(int *)(v205 + 36);
  *(_QWORD *)v64 = v62;
  *(_OWORD *)(v64 + 8) = xmmword_100395450;
  *(_QWORD *)(v64 + 24) = 0x4000000000000000;
  sub_100008758((uint64_t)v32, &qword_10049EAB8);
  sub_1000149A8(v63, v212, &qword_10049EAC0);
  v65 = *(_QWORD *)(v213 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v67 = swift_getKeyPath(&unk_10039D450);
  v68 = v206;
  static Published.subscript.getter(v206, v65, KeyPath);
  swift_release(KeyPath);
  swift_release(v67);
  v70 = Playlist.name.getter(v69);
  v72 = v71;
  (*(void (**)(_QWORD *, uint64_t))(v207 + 8))(v68, v208);
  v215[0] = v70;
  v215[1] = v72;
  v73 = sub_10024AF7C();
  v74 = Text.init<A>(_:)(v215, &type metadata for String, v73);
  v76 = v75;
  v78 = v77;
  v80 = v79 & 1;
  LODWORD(v215[0]) = static HierarchicalShapeStyle.primary.getter(v74);
  v81 = Text.foregroundStyle<A>(_:)(v215, v74, v76, v80, v78, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v83 = v82;
  v85 = v84;
  v87 = v86;
  sub_10003B4D0(v74, v76, v80);
  swift_bridgeObjectRelease();
  if (qword_100498B90 != -1)
    swift_once(&qword_100498B90, sub_1002F3094);
  v88 = qword_10049D998;
  swift_retain(qword_10049D998);
  v89 = v85 & 1;
  v91 = Text.font(_:)(v90, v81, v83, v89, v87);
  v93 = v92;
  v95 = v94;
  v97 = v96;
  swift_release(v88);
  sub_10003B4D0(v81, v83, v89);
  swift_bridgeObjectRelease();
  v99 = static Font.Weight.semibold.getter(v98);
  v207 = Text.fontWeight(_:)(*(_QWORD *)&v99, 0, v91, v93, v95 & 1, v97);
  v206 = v100;
  v102 = v101;
  v208 = v103;
  sub_10003B4D0(v91, v93, v95 & 1);
  swift_bridgeObjectRelease();
  v104 = v213;
  if ((sub_1002E700C() & 1) != 0)
  {
    LODWORD(v205) = v102;
    v105 = static VerticalAlignment.bottom.getter();
    v106 = (uint64_t)v178;
    *v178 = v105;
    *(_QWORD *)(v106 + 8) = 0x4020000000000000;
    *(_BYTE *)(v106 + 16) = 0;
    v107 = sub_100005574(&qword_10049EAD8);
    sub_1002EFA68(v104, (char *)(v106 + *(int *)(v107 + 44)));
    v108 = v180;
    sub_100014A7C(v106, v180, &qword_10049EA88);
    *(_WORD *)(v108 + *(int *)(v177 + 36)) = 256;
    v109 = sub_100008758(v106, &qword_10049EA88);
    v110 = static Edge.Set.top.getter(v109);
    v111 = (uint64_t)v210;
    v112 = (uint64_t)v209;
    if (qword_100498BC8 != -1)
      swift_once(&qword_100498BC8, sub_1002F32A8);
    v113 = EdgeInsets.init(_all:)(*(double *)&qword_10049D9D0);
    v115 = v114;
    v117 = v116;
    v119 = v118;
    v120 = v194;
    sub_100014A7C(v108, v194, &qword_10049EA90);
    v121 = v120 + *(int *)(v179 + 36);
    *(_BYTE *)v121 = v110;
    *(double *)(v121 + 8) = v113;
    *(_QWORD *)(v121 + 16) = v115;
    *(_QWORD *)(v121 + 24) = v117;
    *(_QWORD *)(v121 + 32) = v119;
    *(_BYTE *)(v121 + 40) = 0;
    sub_100008758(v108, &qword_10049EA90);
    v122 = v192;
    sub_1000149A8(v120, v192, &qword_10049EA98);
    v123 = v185;
    v124 = sub_1002F0818(v104, v185);
    v125 = static Alignment.leading.getter(v124);
    v126 = v188;
    sub_1003154D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v188, 0.0, 1, 0.0, 1, v125, v127);
    sub_100008758(v123, &qword_10049F880);
    v128 = swift_getKeyPath(&unk_10039D6B0);
    v129 = v186;
    sub_100014A7C(v126, v186, &qword_10049EA50);
    v130 = v129 + *(int *)(v182 + 36);
    *(_QWORD *)v130 = v128;
    *(_QWORD *)(v130 + 8) = 0;
    *(_BYTE *)(v130 + 16) = 1;
    sub_100008758(v126, &qword_10049EA50);
    v131 = v187;
    sub_100014A7C(v129, v187, &qword_10049EA58);
    *(_WORD *)(v131 + *(int *)(v181 + 36)) = 256;
    v132 = sub_100008758(v129, &qword_10049EA58);
    LODWORD(v128) = static HierarchicalShapeStyle.secondary.getter(v132);
    v133 = v190;
    sub_100014A7C(v131, v190, &qword_10049EA60);
    *(_DWORD *)(v133 + *(int *)(v183 + 36)) = v128;
    v134 = sub_100008758(v131, &qword_10049EA60);
    v135 = static Font.footnote.getter(v134);
    v136 = swift_getKeyPath(&unk_10039D518);
    v137 = v191;
    sub_100014A7C(v133, v191, &qword_10049EA68);
    v138 = (uint64_t *)(v137 + *(int *)(v184 + 36));
    *v138 = v136;
    v138[1] = v135;
    v139 = sub_100008758(v133, &qword_10049EA68);
    LOBYTE(v135) = static Edge.Set.horizontal.getter(v139);
    v140 = EdgeInsets.init(_all:)(18.0);
    v142 = v141;
    v144 = v143;
    v146 = v145;
    v147 = v195;
    sub_100014A7C(v137, v195, &qword_10049EA70);
    v148 = v147 + *(int *)(v189 + 36);
    *(_BYTE *)v148 = v135;
    *(double *)(v148 + 8) = v140;
    *(_QWORD *)(v148 + 16) = v142;
    *(_QWORD *)(v148 + 24) = v144;
    *(_QWORD *)(v148 + 32) = v146;
    *(_BYTE *)(v148 + 40) = 0;
    v149 = sub_100008758(v137, &qword_10049EA70);
    v150 = static Edge.Set.top.getter(v149);
    if (qword_100498BD0 != -1)
      swift_once(&qword_100498BD0, sub_1002F3300);
    v151 = EdgeInsets.init(_all:)(*(double *)&qword_10049D9D8);
    v153 = v152;
    v155 = v154;
    v157 = v156;
    v158 = v197;
    sub_100014A7C(v147, v197, &qword_10049EA78);
    v159 = v158 + *(int *)(v193 + 36);
    *(_BYTE *)v159 = v150;
    *(double *)(v159 + 8) = v151;
    *(_QWORD *)(v159 + 16) = v153;
    *(_QWORD *)(v159 + 24) = v155;
    *(_QWORD *)(v159 + 32) = v157;
    *(_BYTE *)(v159 + 40) = 0;
    sub_100008758(v147, &qword_10049EA78);
    v160 = v196;
    sub_1000149A8(v158, v196, &qword_10049EA80);
    sub_100014A7C(v122, v120, &qword_10049EA98);
    sub_100014A7C(v160, v158, &qword_10049EA80);
    sub_100014A7C(v120, v111, &qword_10049EA98);
    v161 = sub_100005574(&qword_10049EAE0);
    sub_100014A7C(v158, v111 + *(int *)(v161 + 48), &qword_10049EA80);
    v162 = v111 + *(int *)(v161 + 64);
    *(_QWORD *)v162 = 0x3FF0000000000000;
    *(_BYTE *)(v162 + 8) = 0;
    sub_100008758(v160, &qword_10049EA80);
    sub_100008758(v122, &qword_10049EA98);
    sub_100008758(v158, &qword_10049EA80);
    sub_100008758(v120, &qword_10049EA98);
    v163 = sub_100005574(&qword_10049EAC8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v111, 0, 1, v163);
    v164 = sub_1000149A8(v111, v112, (uint64_t *)&unk_10049EAA0);
    LOBYTE(v102) = v205;
  }
  else
  {
    v165 = sub_100005574(&qword_10049EAC8);
    v112 = (uint64_t)v209;
    v164 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v209, 1, 1, v165);
    v111 = (uint64_t)v210;
  }
  v166 = v102 & 1;
  v213 = static VerticalAlignment.center.getter(v164);
  v167 = v212;
  v168 = v214;
  sub_100014A7C(v212, v214, &qword_10049EAC0);
  sub_100014A7C(v112, v111, (uint64_t *)&unk_10049EAA0);
  v169 = v211;
  sub_100014A7C(v168, v211, &qword_10049EAC0);
  v170 = v112;
  v171 = (int *)sub_100005574(&qword_10049EAD0);
  v172 = v169 + v171[12];
  v173 = v207;
  v174 = v206;
  *(_QWORD *)v172 = v207;
  *(_QWORD *)(v172 + 8) = v174;
  *(_BYTE *)(v172 + 16) = v166;
  *(_QWORD *)(v172 + 24) = v208;
  sub_100014A7C(v111, v169 + v171[16], (uint64_t *)&unk_10049EAA0);
  v175 = v169 + v171[20];
  *(_QWORD *)v175 = v213;
  *(_QWORD *)(v175 + 8) = 0;
  *(_BYTE *)(v175 + 16) = 1;
  *(_QWORD *)(v175 + 24) = 0;
  *(_BYTE *)(v175 + 32) = 1;
  sub_10003B4C0(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRetain();
  sub_100008758(v170, (uint64_t *)&unk_10049EAA0);
  sub_100008758(v167, &qword_10049EAC0);
  sub_100008758(v111, (uint64_t *)&unk_10049EAA0);
  sub_10003B4D0(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRelease();
  return sub_100008758(v168, &qword_10049EAC0);
}

uint64_t sub_1002EFA68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t (**v77)();
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v87;
  char *v88;
  unsigned int (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  _QWORD v118[2];
  unsigned __int8 v119;

  v111 = a2;
  v107 = sub_100005574(&qword_10049EB60);
  v109 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin();
  v99 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v98 = (uint64_t)&v88 - v4;
  sub_100005574(&qword_10049EB68);
  __chkstk_darwin();
  v110 = (uint64_t)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v106 = (char *)&v88 - v6;
  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v97 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v88 - v8;
  sub_100005574(&qword_10049E350);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = type metadata accessor for Collaboration.Management.View(0);
  v12 = *(_QWORD *)(v103 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  __chkstk_darwin();
  v96 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v88 - v17;
  v115 = sub_100005574(&qword_10049EB70);
  __chkstk_darwin();
  v95 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v100 = (uint64_t)&v88 - v20;
  v21 = sub_100005574(&qword_10049EB78);
  v22 = *(_QWORD *)(v21 - 8);
  v104 = v21;
  v105 = v22;
  __chkstk_darwin();
  v108 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v102 = (char *)&v88 - v24;
  __chkstk_darwin();
  v101 = (char *)&v88 - v25;
  sub_100082248(a1, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v113 = v26 | 7;
  v114 = v27 + v13;
  v28 = swift_allocObject(&unk_100462E88, v27 + v13, v26 | 7);
  sub_1000648AC((uint64_t)v14, v28 + v27, type metadata accessor for Collaboration.Management.View);
  *v11 = swift_getKeyPath(&unk_10039D788);
  v91 = sub_100005574(&qword_100498ED8);
  swift_storeEnumTagMultiPayload(v11, v91, 0);
  KeyPath = swift_getKeyPath(&unk_10039D7B8);
  *v18 = 0;
  *((_QWORD *)v18 + 1) = sub_1003046B8;
  *((_QWORD *)v18 + 2) = v28;
  v30 = (uint64_t)&v18[*(int *)(v15 + 24)];
  v94 = v11;
  sub_1000149A8((uint64_t)v11, v30, &qword_10049E350);
  v93 = v15;
  v31 = &v18[*(int *)(v15 + 28)];
  *(_QWORD *)v31 = KeyPath;
  v31[8] = 0;
  sub_1002E8194((uint64_t)v9);
  v32 = type metadata accessor for URL(0);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
  v112 = 1;
  v90 = v32;
  v89 = v33;
  LOBYTE(KeyPath) = ((unsigned int (*)(char *, uint64_t))v33)(v9, 1) == 1;
  sub_100008758((uint64_t)v9, &qword_1004991A0);
  v34 = swift_getKeyPath(&unk_10039D7E8);
  v35 = swift_allocObject(&unk_100462EB0, 17, 7);
  *(_BYTE *)(v35 + 16) = KeyPath;
  v36 = v100;
  sub_100082248((uint64_t)v18, v100, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v37 = v115;
  v38 = (uint64_t *)(v36 + *(int *)(v115 + 36));
  *v38 = v34;
  v38[1] = (uint64_t)sub_1003046F4;
  v38[2] = v35;
  sub_100006798((uint64_t)v18, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v39 = a1;
  v40 = a1 + *(int *)(v103 + 36);
  v41 = *(_BYTE *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  v116 = v41;
  v117 = v42;
  v43 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(v118, v43);
  v44 = v118[0];
  v45 = v118[1];
  v46 = v119;
  v103 = v39;
  sub_100082248(v39, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v47 = swift_allocObject(&unk_100462ED8, v114, v113);
  v92 = v27;
  v88 = v14;
  sub_1000648AC((uint64_t)v14, v47 + v27, type metadata accessor for Collaboration.Management.View);
  v48 = sub_100005574(&qword_10049EB80);
  v49 = sub_10030473C();
  v50 = sub_100303CC0(&qword_10049EBA8, &qword_10049EB80, (void (*)(void))sub_1003022FC);
  v87 = v48;
  v52 = v101;
  v51 = v102;
  View.sheet<A>(isPresented:onDismiss:content:)(v44, v45, v46, 0, 0, sub_100304700, v47, v37, v53, v87, v49, v50);
  v54 = v45;
  v55 = v104;
  swift_release(v54);
  swift_release(v47);
  v56 = v44;
  v57 = (uint64_t)v106;
  swift_release(v56);
  v58 = v105;
  sub_100008758(v36, &qword_10049EB70);
  v59 = v107;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v52, v51, v55);
  v60 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v61 = objc_msgSend(v60, "userInterfaceIdiom");

  if (v61 != (id)6)
  {
    v62 = (uint64_t)v88;
    sub_100082248(v103, (uint64_t)v88, type metadata accessor for Collaboration.Management.View);
    v63 = swift_allocObject(&unk_100462F00, v114, v113);
    sub_1000648AC(v62, v63 + v92, type metadata accessor for Collaboration.Management.View);
    v64 = swift_getKeyPath(&unk_10039D788);
    v65 = (uint64_t)v94;
    *v94 = v64;
    swift_storeEnumTagMultiPayload(v65, v91, 0);
    v66 = swift_getKeyPath(&unk_10039D7B8);
    v67 = (uint64_t)v96;
    *v96 = 1;
    *(_QWORD *)(v67 + 8) = sub_1003047DC;
    *(_QWORD *)(v67 + 16) = v63;
    v68 = v93;
    sub_1000149A8(v65, v67 + *(int *)(v93 + 24), &qword_10049E350);
    v69 = v67 + *(int *)(v68 + 28);
    *(_QWORD *)v69 = v66;
    *(_BYTE *)(v69 + 8) = 0;
    v70 = v97;
    sub_1002E8194(v97);
    v71 = v89(v70, 1, v90) == 1;
    sub_100008758(v70, &qword_1004991A0);
    v72 = swift_getKeyPath(&unk_10039D7E8);
    v73 = swift_allocObject(&unk_100462F28, 17, 7);
    *(_BYTE *)(v73 + 16) = v71;
    v74 = v95;
    sub_100082248(v67, v95, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v75 = (uint64_t *)(v74 + *(int *)(v115 + 36));
    *v75 = v72;
    v75[1] = (uint64_t)sub_100305750;
    v75[2] = v73;
    sub_100006798(v67, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v76 = v99;
    sub_100014A7C(v74, v99, &qword_10049EB70);
    v77 = (uint64_t (**)())(v76 + *(int *)(v59 + 36));
    *v77 = sub_1002F07F4;
    v77[1] = 0;
    sub_100008758(v74, &qword_10049EB70);
    v78 = v76;
    v79 = v98;
    sub_1000149A8(v78, v98, &qword_10049EB60);
    sub_1000149A8(v79, v57, &qword_10049EB60);
    v112 = 0;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v109 + 56))(v57, v112, 1, v59);
  v80 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v81 = v108;
  v80(v108, v52, v55);
  v82 = v110;
  sub_100014A7C(v57, v110, &qword_10049EB68);
  v83 = v111;
  v80(v111, v81, v55);
  v84 = sub_100005574(&qword_10049EBB0);
  sub_100014A7C(v82, (uint64_t)&v83[*(int *)(v84 + 48)], &qword_10049EB68);
  sub_100008758(v57, &qword_10049EB68);
  v85 = *(void (**)(char *, uint64_t))(v58 + 8);
  v85(v52, v55);
  sub_100008758(v82, &qword_10049EB68);
  return ((uint64_t (*)(char *, uint64_t))v85)(v81, v55);
}

uint64_t sub_1002F0380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v20[9];
  uint64_t v21;

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v7 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 36));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v20[1] = v8;
  v21 = v9;
  v20[0] = 1;
  v10 = sub_100005574(&qword_10049C5C8);
  v11 = State.wrappedValue.setter(v20, v10);
  v13 = Logger.collaboration.unsafeMutableAddressor(v11, v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Management] Share Sheet button tapped", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002F04C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 8);
  sub_1002E8194((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    result = sub_100008758((uint64_t)v8, &qword_1004991A0);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    KeyPath = swift_getKeyPath(&unk_10039D428);
    v17 = swift_getKeyPath(&unk_10039D450);
    static Published.subscript.getter(v6, v13, KeyPath);
    swift_release(KeyPath);
    swift_release(v17);
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16);
    swift_retain(v18);
    v15 = Collaboration.Manager.activityViewController(for:url:)((uint64_t)v6, (uint64_t)v12);
    swift_release(v18);
    sub_100006798((uint64_t)v6, type metadata accessor for Collaboration.Object);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a2 = v15;
  return result;
}

uint64_t sub_1002F06AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v20[9];
  uint64_t v21;

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v7 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 40));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v20[1] = v8;
  v21 = v9;
  v20[0] = 1;
  v10 = sub_100005574(&qword_10049C5C8);
  v11 = State.wrappedValue.setter(v20, v10);
  v13 = Logger.collaboration.unsafeMutableAddressor(v11, v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Management] QRCode button tapped", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002F07F4()
{
  return Transaction.disablesAnimations.setter(1);
}

uint64_t sub_1002F0818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _BYTE v60[4];
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;

  v80 = a2;
  v74 = sub_100005574(&qword_10049EAE8);
  __chkstk_darwin();
  v78 = (uint64_t *)&v60[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v71 = v4;
  v72 = &v60[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for OpenURLAction(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin();
  v75 = &v60[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100005574(&qword_10049EAF0);
  __chkstk_darwin();
  v9 = &v60[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v79 = &v60[-v10];
  v11 = sub_100005574(&qword_10049EAF8);
  __chkstk_darwin();
  v13 = &v60[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100005574(&qword_10049EB00);
  __chkstk_darwin();
  v15 = &v60[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_100005574(&qword_10049EB08);
  __chkstk_darwin();
  v18 = &v60[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = a1;
  v19 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D668);
  v21 = swift_getKeyPath(&unk_10039D690);
  static Published.subscript.getter(&v81, v19, KeyPath);
  swift_release(KeyPath);
  swift_release(v21);
  if (v81 == 1)
  {
    *(_QWORD *)v18 = static VerticalAlignment.center.getter(v22);
    *((_QWORD *)v18 + 1) = 0x4020000000000000;
    v18[16] = 0;
    v23 = sub_100005574(&qword_10049EB40);
    sub_1002F0DF8(&v18[*(int *)(v23 + 44)]);
    sub_100014A7C((uint64_t)v18, (uint64_t)v13, &qword_10049EB08);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v24 = sub_10002FFB8(&qword_10049EB18, &qword_10049EB08, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v25 = sub_100304500();
    _ConditionalContent<>.init(storage:)(v13, v16, v7, v24, v25);
    sub_100008758((uint64_t)v18, &qword_10049EB08);
    v26 = sub_100005574(&qword_10049EB10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 0, 1, v26);
    v27 = (uint64_t)v15;
    return sub_1000149A8(v27, v80, &qword_10049EB00);
  }
  v65 = v15;
  v66 = v13;
  v67 = v11;
  v68 = v16;
  v69 = v7;
  v28 = sub_1002E7904();
  if (v29)
  {
    v30 = LocalizedStringKey.init(_:)(v28);
    v31 = Text.init(_:tableName:bundle:comment:)(v30);
    v63 = v32;
    v64 = v31;
    v34 = v33;
    v36 = v35 & 1;
    v38 = static Color.accentColor.getter(v37);
    v39 = swift_getKeyPath(&unk_10039D470);
    v62 = swift_getKeyPath(&unk_10039CD80);
    v40 = v72;
    sub_100082248(v73, (uint64_t)v72, type metadata accessor for Collaboration.Management.View);
    v41 = *(unsigned __int8 *)(v70 + 80);
    v42 = (v41 + 16) & ~v41;
    v43 = swift_allocObject(&unk_100462E38, v42 + v71, v41 | 7);
    sub_1000648AC((uint64_t)v40, v43 + v42, type metadata accessor for Collaboration.Management.View);
    v44 = v75;
    OpenURLAction.init(handler:)(sub_1003044B4, v43);
    v46 = v77;
    v45 = v78;
    v47 = v76;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 16))((_BYTE *)v78 + *(int *)(v74 + 28), v44, v77);
    *v45 = v62;
    sub_100014A7C((uint64_t)v45, (uint64_t)&v9[*(int *)(v69 + 36)], &qword_10049EAE8);
    v49 = v63;
    v48 = v64;
    *(_QWORD *)v9 = v64;
    *((_QWORD *)v9 + 1) = v49;
    v50 = v36;
    v61 = v36;
    v9[16] = v36;
    *((_QWORD *)v9 + 3) = v34;
    *((_QWORD *)v9 + 4) = v39;
    *((_QWORD *)v9 + 5) = v38;
    v51 = v48;
    sub_10003B4C0(v48, v49, v50);
    swift_bridgeObjectRetain();
    swift_retain(v39);
    swift_retain(v38);
    sub_100008758((uint64_t)v45, &qword_10049EAE8);
    (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v44, v46);
    sub_10003B4D0(v51, v49, v61);
    swift_release(v38);
    swift_release(v39);
    swift_bridgeObjectRelease();
    v52 = v79;
    sub_1000149A8((uint64_t)v9, (uint64_t)v79, &qword_10049EAF0);
    v53 = (uint64_t)v66;
    sub_100014A7C((uint64_t)v52, (uint64_t)v66, &qword_10049EAF0);
    swift_storeEnumTagMultiPayload(v53, v67, 1);
    v54 = sub_10002FFB8(&qword_10049EB18, &qword_10049EB08, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v55 = sub_100304500();
    v56 = (uint64_t)v65;
    _ConditionalContent<>.init(storage:)(v53, v68, v69, v54, v55);
    sub_100008758((uint64_t)v52, &qword_10049EAF0);
    v57 = sub_100005574(&qword_10049EB10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
    v27 = v56;
    return sub_1000149A8(v27, v80, &qword_10049EB00);
  }
  v59 = sub_100005574(&qword_10049EB10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v80, 1, 1, v59);
}

uint64_t sub_1002F0DF8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  _QWORD v33[3];

  v32 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v2 = (char *)&v33[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v33[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v33[-1] - v7;
  v9 = sub_100005574(&qword_10049E4B8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v33[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin();
  v15 = (char *)&v33[-1] - v14;
  ProgressView<>.init<>()(v13);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000018, 0x80000001003BA6E0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v8, v3);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v16 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v17 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v16, v2, 0, 0, 256);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  v33[0] = v17;
  v33[1] = v19;
  v20 = sub_10024AF7C();
  v21 = Text.init<A>(_:)(v33, &type metadata for String, v20);
  v23 = v22;
  v25 = v24;
  LOBYTE(v19) = v26 & 1;
  v27 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v27(v12, v15, v9);
  v28 = v32;
  v27(v32, v12, v9);
  v29 = &v28[*(int *)(sub_100005574(&qword_10049EB48) + 48)];
  *(_QWORD *)v29 = v21;
  *((_QWORD *)v29 + 1) = v23;
  v29[16] = v19;
  *((_QWORD *)v29 + 3) = v25;
  sub_10003B4C0(v21, v23, v19);
  v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  v30(v15, v9);
  sub_10003B4D0(v21, v23, v19);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v30)(v12, v9);
}

uint64_t sub_1002F1090()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1002F10B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FD808(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_1002F10C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  char v14;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a2 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D668);
  v7 = swift_getKeyPath(&unk_10039D690);
  v14 = 1;
  swift_retain(v5);
  static Published.subscript.setter(&v14, v5, KeyPath, v7);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject(&unk_100462E60, 40, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  swift_retain(v5);
  v10 = sub_100283A94((uint64_t)v4, (uint64_t)&unk_10049EB58, (uint64_t)v9);
  v11 = swift_release(v10);
  return static OpenURLAction.Result.handled.getter(v11);
}

uint64_t sub_1002F11E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  _BYTE v27[8];
  uint64_t v28;
  unint64_t v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1002E8194((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    result = sub_100008758((uint64_t)v3, &qword_1004991A0);
    v9 = 0;
    v10 = 0;
LABEL_6:
    v17 = 0;
    v18 = 0;
    v25 = 0;
    v21 = 0;
    v23 = 0;
    v24 = 0uLL;
    goto LABEL_7;
  }
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v12 = URL.dataRepresentation.getter(v11);
  QRCode.init(data:errorCorrectionLevel:)(v12, v13, 76, (uint64_t)v27);
  v14 = v28;
  v15 = v29;
  v16 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_1000149A8((uint64_t)v27, (uint64_t)&v31, (uint64_t *)&unk_10049EA40);
  v10 = v33;
  if (!v33)
  {
    v9 = 0;
    goto LABEL_6;
  }
  v26 = v31;
  v9 = v32;
  v17 = v34;
  sub_1000516F8(v14, v15);
  v18 = static SafeAreaRegions.all.getter(v16);
  v19 = static Edge.Set.all.getter(v18);
  v20 = v19;
  v21 = static Alignment.center.getter(v19);
  v23 = v22;
  result = sub_1001B9B64((uint64_t)v27);
  v24 = v26;
  v25 = v20;
LABEL_7:
  *(_OWORD *)a1 = v24;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  *(_QWORD *)(a1 + 48) = v25;
  *(_QWORD *)(a1 + 56) = v21;
  *(_QWORD *)(a1 + 64) = v23;
  return result;
}

uint64_t sub_1002F13C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE v26[15];
  char v27;
  _QWORD v28[2];

  v6 = sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v26[-v9];
  sub_100005574(&qword_10049DF60);
  __chkstk_darwin();
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Playlist.Collaborator(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v17 = *(_QWORD *)(a2 + 8);
  *v12 = swift_getKeyPath(&unk_10039CD80);
  v18 = sub_100005574(&qword_100498E68);
  swift_storeEnumTagMultiPayload(v12, v18, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a3, v16, v13);
  v19 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  *(_QWORD *)(a3 + v19[5]) = v17;
  v20 = a3 + v19[6];
  v27 = 0;
  swift_retain(v17);
  State.init(wrappedValue:)(v28, &v27, &type metadata for Bool);
  v21 = v28[1];
  *(_BYTE *)v20 = v28[0];
  *(_QWORD *)(v20 + 8) = v21;
  v22 = (_QWORD *)(a3 + v19[7]);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  sub_100014A7C((uint64_t)v10, (uint64_t)v8, &qword_10049B070);
  State.init(wrappedValue:)(v22, v8, v6);
  sub_100008758((uint64_t)v10, &qword_10049B070);
  v23 = (_QWORD *)(a3 + v19[8]);
  *v23 = swift_getKeyPath(&unk_10039CD50);
  v24 = sub_100005574(&qword_100498E60);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  return sub_1000149A8((uint64_t)v12, a3 + v19[9], &qword_10049DF60);
}

uint64_t sub_1002F1618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[16];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v41 = a2;
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v38 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Collaboration.Management.View(0);
  v6 = *(_QWORD *)(v37 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049E9D0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049E9C8);
  v14 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  v40 = v14;
  __chkstk_darwin();
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(a1, (uint64_t)v8, type metadata accessor for Collaboration.Management.View);
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_100462D20, v18 + v7, v17 | 7);
  sub_1000648AC((uint64_t)v8, v19 + v18, type metadata accessor for Collaboration.Management.View);
  v20 = sub_100005574(&qword_10049E9E8);
  v21 = sub_10030407C();
  v22 = Button.init(action:label:)(sub_100304068, v19, sub_1002F1A58, 0, v20, v21);
  BorderlessButtonStyle.init()(v22);
  v23 = sub_10002FFB8(&qword_10049E9D8, &qword_10049E9D0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v24 = sub_100006924(&qword_10049E9E0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)(v5, v9, v3, v23, v24);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v25 = a1 + *(int *)(v37 + 48);
  v26 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v48 = v26;
  v49 = v27;
  v28 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(&v44, v28);
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v43 = a1;
  v44 = v9;
  v45 = v3;
  v46 = v23;
  v47 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v33 = v39;
  View.alert(isPresented:content:)(v29, v30, v31, sub_10030418C, v42, v39, OpaqueTypeConformance2);
  swift_release(v30);
  v34 = swift_release(v29);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v16, v33, v34);
}

uint64_t sub_1002F1910(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v20[9];
  uint64_t v21;

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v7 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 48));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  v20[1] = v8;
  v21 = v9;
  v20[0] = 1;
  v10 = sub_100005574(&qword_10049C5C8);
  v11 = State.wrappedValue.setter(v20, v10);
  v13 = Logger.collaboration.unsafeMutableAddressor(v11, v12);
  v14 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Management] Remove Join Request button tapped", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 sub_1002F1A58@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 result;
  _BYTE v31[16];
  _OWORD v32[9];
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v31[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v31[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003BA5A0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v10 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  *(_QWORD *)&v33 = v11;
  *((_QWORD *)&v33 + 1) = v13;
  v14 = sub_10024AF7C();
  v15 = Text.init<A>(_:)(&v33, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  LOBYTE(v13) = v20 & 1;
  v21 = static Alignment.center.getter(v15);
  sub_1003156F4(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v32, v23, 0.0, 1, 0.0, 1, v21, v22, v15, v17, v13, v19);
  sub_10003B4D0(v15, v17, v13);
  v24 = swift_bridgeObjectRelease();
  v39 = v32[6];
  v40 = v32[7];
  v41 = v32[8];
  v35 = v32[2];
  v36 = v32[3];
  v37 = v32[4];
  v38 = v32[5];
  v33 = v32[0];
  v34 = (__n128)v32[1];
  v25 = static Color.red.getter(v24);
  KeyPath = swift_getKeyPath(&unk_10039D4E8);
  v27 = v40;
  *(_OWORD *)(a1 + 96) = v39;
  *(_OWORD *)(a1 + 112) = v27;
  *(_OWORD *)(a1 + 128) = v41;
  v28 = v36;
  *(_OWORD *)(a1 + 32) = v35;
  *(_OWORD *)(a1 + 48) = v28;
  v29 = v38;
  *(_OWORD *)(a1 + 64) = v37;
  *(_OWORD *)(a1 + 80) = v29;
  result = v34;
  *(_OWORD *)a1 = v33;
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 144) = KeyPath;
  *(_QWORD *)(a1 + 152) = v25;
  return result;
}

uint64_t sub_1002F1CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = a1;
  v64 = a2;
  v58 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v59 = v2;
  v61 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0);
  __chkstk_darwin();
  v63 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v62 = (char *)&v51 - v4;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v51 - v11;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001003BA540);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v14 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v15 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v14, v6, 0, 0, 256);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v12, v7);
  v65 = v15;
  v66 = v17;
  v19 = sub_10024AF7C();
  v20 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v56 = v21;
  v57 = v20;
  v54 = v22;
  v55 = v23;
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000037, 0x80000001003BA560);
  v13(v10, v12, v7);
  v24 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v24, v6, 0, 0, 256);
  v27 = v26;
  v18(v12, v7);
  v65 = v25;
  v66 = v27;
  v28 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v52 = v29;
  v53 = v28;
  v51 = v30;
  v32 = v31 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x522065766F6D6552, 0xEE00747365757165);
  v13(v10, v12, v7);
  v33 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v34 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v33, v6, 0, 0, 256);
  v36 = v35;
  v18(v12, v7);
  v65 = v34;
  v66 = v36;
  v37 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = v61;
  sub_100082248(v60, v61, type metadata accessor for Collaboration.Management.View);
  v45 = *(unsigned __int8 *)(v58 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = swift_allocObject(&unk_100462D48, v46 + v59, v45 | 7);
  sub_1000648AC(v44, v47 + v46, type metadata accessor for Collaboration.Management.View);
  v48 = v62;
  static Alert.Button.destructive(_:action:)(v37, v39, v43, v41, sub_100304198, v47);
  sub_10003B4D0(v37, v39, v43);
  swift_release(v47);
  swift_bridgeObjectRelease();
  v49 = v63;
  static Alert.Button.cancel(_:)(CFRange.init(_:), 0);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v57, v56, v54 & 1, v55, v53, v52, v32, v51, v48, v49);
}

uint64_t sub_1002F2144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002E89C0();
  type metadata accessor for Collaboration.Management.View(0);
  sub_1002BDE04((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002F21E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D590);
  v6 = swift_getKeyPath(&unk_10039D5B8);
  static Published.subscript.getter(&v17, v4, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  sub_100082248(a1, (uint64_t)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_100462D70, v8 + v3, v7 | 7);
  sub_1000648AC((uint64_t)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for Collaboration.Management.View);
  v10 = sub_100005574(&qword_10049DA50);
  v11 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v12 = sub_10002FFB8(&qword_10049EA08, &qword_10049DA50, (uint64_t)&protocol conformance descriptor for [A]);
  v13 = sub_100006924(&qword_10049E998, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10039D3D8);
  v14 = sub_100006924(&qword_10049EA10, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  return ForEach<>.init(_:content:)(&v17, sub_1003041A0, v9, v10, &type metadata for MusicItemID, v11, v12, v13, v14);
}

uint64_t sub_1002F23B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v30[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = (char *)&v30[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v30[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v30[-1] - v10;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v13 = (char *)&v30[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D590);
  v16 = swift_getKeyPath(&unk_10039D5B8);
  static Published.subscript.getter(v30, v14, KeyPath);
  swift_release(KeyPath);
  swift_release(v16);
  v17 = *(_QWORD *)(v30[0] + 16);
  swift_bridgeObjectRelease();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  v30[0] = v17;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v30, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v19._object = (void *)0x80000001003BA5C0;
  v19._countAndFlagsBits = 0xD000000000000010;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  String.LocalizationValue.init(stringInterpolation:)(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v20 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v21 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v20, v5, 0, 0, 256);
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v30[0] = v21;
  v30[1] = v23;
  v24 = sub_10024AF7C();
  result = Text.init<A>(_:)(v30, &type metadata for String, v24);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v26;
  *(_BYTE *)(a2 + 16) = v27 & 1;
  *(_QWORD *)(a2 + 24) = v28;
  return result;
}

uint64_t sub_1002F262C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[2];
  unsigned __int8 v21;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin();
  v7 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(v6);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v19 = a2 + *(int *)(sub_100005574(&qword_10049EA18) + 44);
  sub_100082248(a1, (uint64_t)v7, type metadata accessor for Collaboration.Management.View);
  v8 = type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = v11 + v5;
  v13 = v10 | 7;
  v14 = swift_allocObject(&unk_100462D98, v12, v10 | 7);
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_1000648AC((uint64_t)v7, v14 + v11, type metadata accessor for Collaboration.Management.View);
  v15 = sub_100082248(a1, (uint64_t)v7, type metadata accessor for Collaboration.Management.View);
  v16 = static MainActor.shared.getter(v15);
  v17 = swift_allocObject(&unk_100462DC0, v12, v13);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  sub_1000648AC((uint64_t)v7, v17 + v11, type metadata accessor for Collaboration.Management.View);
  Binding.init(get:set:)(v20, sub_1003041A8, v14, sub_1003043AC, v17, &type metadata for Bool);
  return Toggle.init(isOn:label:)(v20[0], v20[1], v21, sub_1002F2988, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_1002F27DC(uint64_t a1@<X2>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D620);
  v5 = swift_getKeyPath(&unk_10039D648);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = (v6 & 1) == 0;
}

double sub_1002F2860(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  BOOL v18;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(_QWORD *)(a4 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D620);
  v11 = swift_getKeyPath(&unk_10039D648);
  v12 = (v8 & 1) == 0;
  v18 = v12;
  swift_retain(v9);
  static Published.subscript.setter(&v18, v9, KeyPath, v11);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v14 = swift_allocObject(&unk_100462DE8, 41, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v9;
  *(_BYTE *)(v14 + 40) = v12;
  swift_retain(v9);
  v15 = sub_100283BE0((uint64_t)v7, (uint64_t)&unk_10049EA28, v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1002F2988@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F5E44(0xD000000000000015, 0x80000001003BA6C0, a1);
}

uint64_t sub_1002F29A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  __int128 v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[16];
  __int128 v55;
  __int128 v56;
  __int16 v57;
  __int128 v58;
  __int128 v59;
  unsigned __int8 v60;
  char v61;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = &v54[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v11 = &v54[-v10];
  v12 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039D620);
  v14 = swift_getKeyPath(&unk_10039D648);
  static Published.subscript.getter(&v58, v12, KeyPath);
  swift_release(KeyPath);
  swift_release(v14);
  if ((v58 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x80000001003BA5E0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v30 = qword_1004A2F90;
    static Locale.current.getter((id)qword_1004A2F90);
    v31 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v30, v5, 0, 0, 256);
    v33 = v32;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v58 = v31;
    *((_QWORD *)&v58 + 1) = v33;
    v34 = sub_10024AF7C();
    v23 = Text.init<A>(_:)(&v58, &type metadata for String, v34);
    v25 = v23;
    v26 = v24;
    *(_QWORD *)&v55 = v23;
    *((_QWORD *)&v55 + 1) = v24;
    v28 = v35 & 1;
    *(_QWORD *)&v56 = v35 & 1;
    *((_QWORD *)&v56 + 1) = v36;
    LOBYTE(v57) = 0;
    goto LABEL_9;
  }
  v15 = swift_getKeyPath(&unk_10039D548);
  v16 = swift_getKeyPath(&unk_10039D570);
  static Published.subscript.getter(&v58, v12, v15);
  swift_release(v15);
  swift_release(v16);
  v17 = *(_QWORD *)(v58 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000045, 0x80000001003BA630);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v18 = qword_1004A2F90;
    static Locale.current.getter((id)qword_1004A2F90);
    v19 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v18, v5, 0, 0, 256);
    v21 = v20;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v58 = v19;
    *((_QWORD *)&v58 + 1) = v21;
    v22 = sub_10024AF7C();
    v23 = Text.init<A>(_:)(&v58, &type metadata for String, v22);
    v25 = v23;
    v26 = v24;
    v28 = v27 & 1;
    *(_QWORD *)&v55 = v23;
    *((_QWORD *)&v55 + 1) = v24;
    *(_QWORD *)&v56 = v27 & 1;
    *((_QWORD *)&v56 + 1) = v29;
    LOBYTE(v57) = 1;
LABEL_9:
    sub_10003B4C0(v23, v24, v28);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)(&v55, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v55 = v58;
    v56 = v59;
    v57 = v60;
    v37 = sub_100005574(&qword_10049E990);
    v38 = sub_100304128((unint64_t *)&qword_10049E988, &qword_10049E990, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    _ConditionalContent<>.init(storage:)(&v55, v37, &type metadata for Text, v38, &protocol witness table for Text);
    sub_10003B4D0(v25, v26, v28);
    result = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x80000001003BA680);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v44 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v45 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v44, v5, 0, 0, 256);
  v47 = v46;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
  *(_QWORD *)&v58 = v45;
  *((_QWORD *)&v58 + 1) = v47;
  v48 = sub_10024AF7C();
  *(_QWORD *)&v55 = Text.init<A>(_:)(&v58, &type metadata for String, v48);
  *((_QWORD *)&v55 + 1) = v49;
  *(_QWORD *)&v56 = v50 & 1;
  *((_QWORD *)&v56 + 1) = v51;
  v57 = 256;
  v52 = sub_100005574(&qword_10049E990);
  v53 = sub_100304128((unint64_t *)&qword_10049E988, &qword_10049E990, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  result = _ConditionalContent<>.init(storage:)(&v55, v52, &type metadata for Text, v53, &protocol witness table for Text);
LABEL_10:
  v40 = *((_QWORD *)&v58 + 1);
  v41 = v59;
  v42 = v60;
  v43 = v61;
  *(_QWORD *)a2 = v58;
  *(_QWORD *)(a2 + 8) = v40;
  *(_OWORD *)(a2 + 16) = v41;
  *(_BYTE *)(a2 + 32) = v42;
  *(_BYTE *)(a2 + 33) = v43;
  return result;
}

uint64_t sub_1002F2EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View(0);
  sub_1002BDE04((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002F2F8C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v3 = type metadata accessor for DismissAction(0);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin();
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    type metadata accessor for Collaboration.Management.View(0);
    sub_1002BDE04((uint64_t)v7);
    DismissAction.callAsFunction()();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

void sub_1002F3034()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10049D990 = v1 == (id)6;
}

uint64_t sub_1002F3094(uint64_t a1)
{
  return sub_1002F31E0(a1, (uint64_t (*)(void))&static Font.largeTitle.getter, (uint64_t (*)(void))&static Font.title.getter, &qword_10049D998);
}

void sub_1002F30B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (qword_100498B88 != -1)
    a1 = swift_once(&qword_100498B88, sub_1002F3034);
  if (byte_10049D990 == 1)
  {
    v1 = static Font.largeTitle.getter();
  }
  else
  {
    v2 = static Font.title2.getter(a1);
    v1 = Font.bold()();
    swift_release(v2);
  }
  qword_10049D9A0 = v1;
}

uint64_t sub_1002F312C()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = 56.0;
  if (byte_10049D990)
    v0 = 68.0;
  qword_10049D9A8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F318C(uint64_t a1)
{
  return sub_1002F31E0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_10049D9B0);
}

uint64_t sub_1002F31A8(uint64_t a1)
{
  return sub_1002F31E0(a1, (uint64_t (*)(void))&static Font.footnote.getter, (uint64_t (*)(void))&static Font.caption.getter, &qword_10049D9B8);
}

uint64_t sub_1002F31C4(uint64_t a1)
{
  return sub_1002F31E0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.caption2.getter, &qword_10049D9C0);
}

uint64_t sub_1002F31E0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t (*v7)(void);
  uint64_t result;

  if (qword_100498B88 != -1)
    swift_once(&qword_100498B88, sub_1002F3034);
  if (byte_10049D990)
    v7 = a2;
  else
    v7 = a3;
  result = v7();
  *a4 = result;
  return result;
}

void sub_1002F324C(__n128 a1)
{
  double v1;

  if (qword_100498B88 != -1)
    swift_once(&qword_100498B88, sub_1002F3034);
  if (byte_10049D990 == 1)
    v1 = static Font.Weight.semibold.getter(a1);
  else
    v1 = static Font.Weight.regular.getter();
  qword_10049D9C8 = *(_QWORD *)&v1;
}

uint64_t sub_1002F32A8()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = 12.0;
  if (byte_10049D990)
    v0 = 0.0;
  qword_10049D9D0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F3300()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = -4.0;
  if (byte_10049D990)
    v0 = 0.0;
  qword_10049D9D8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F3358()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = 32.0;
  if (byte_10049D990)
    v0 = 44.0;
  qword_10049D9E0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F33B8()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = 84.0;
  if (byte_10049D990)
    v0 = 169.0;
  qword_10049D9E8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F341C()
{
  double v0;
  uint64_t result;

  if (qword_100498B88 != -1)
    result = swift_once(&qword_100498B88, sub_1002F3034);
  v0 = 38.0;
  if (byte_10049D990)
    v0 = 48.0;
  qword_10049D9F0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_1002F347C(__n128 a1)
{
  uint64_t result;

  if (qword_100498B88 != -1)
    swift_once(&qword_100498B88, sub_1002F3034);
  if (byte_10049D990 == 1)
  {
    result = static Color.accentColor.getter(a1);
  }
  else
  {
    if (qword_100498920 != -1)
      swift_once(&qword_100498920, sub_10024DEF0);
    result = Color.init(_:)((id)static UIColor.MusicTint.normal);
  }
  qword_10049D9F8 = result;
  return result;
}

uint64_t sub_1002F3510()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for DynamicTypeSize(0);
  sub_1000086DC(v0, qword_10049DA00);
  v1 = sub_1000086B4(v0, (uint64_t)qword_10049DA00);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for DynamicTypeSize.accessibility2(_:), v0);
}

uint64_t sub_1002F3568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_10049E5D8);
  sub_1000086DC(v4, qword_10049DA18);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10049DA18);
  if (qword_100498BF8 != -1)
    swift_once(&qword_100498BF8, sub_1002F3510);
  v6 = sub_1000086B4(v0, (uint64_t)qword_10049DA00);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = sub_100006924((unint64_t *)&unk_10049E620, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v3, v3, v0, v7);
  if ((result & 1) != 0)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  __break(1u);
  return result;
}

uint64_t sub_1002F3694()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1002F36B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FD808(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_1002F36C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[16];
  uint64_t v56;
  char v57[16];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  v53 = a1;
  v54 = type metadata accessor for AccessibilityTraits(0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v51 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin();
  v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E418);
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10049E420);
  __chkstk_darwin();
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049E428);
  v43 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100005574(&qword_10049E430);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v41 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100005574(&qword_10049E438);
  v47 = *(_QWORD *)(v46 - 8);
  v14 = __chkstk_darwin();
  v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v14);
  *((_QWORD *)v6 + 1) = 0x4028000000000000;
  v6[16] = 0;
  v16 = sub_100005574(&qword_10049E440);
  sub_1002F3B5C(v1, (uint64_t)&v6[*(int *)(v16 + 44)]);
  sub_100014A7C((uint64_t)v6, (uint64_t)v9, &qword_10049E418);
  v9[*(int *)(v7 + 36)] = 0;
  sub_100008758((uint64_t)v6, &qword_10049E418);
  v58 = v1;
  v17 = v1;
  v18 = sub_100005574(&qword_10049E448);
  v19 = sub_1003023E8();
  v20 = sub_100303CC0(&qword_10049E470, &qword_10049E448, (void (*)(void))sub_100302484);
  View.swipeActions<A>(edge:allowsFullSwipe:content:)(1, 1, sub_1003023E0, v57, v7, v18, v19, v20);
  sub_100008758((uint64_t)v9, &qword_10049E420);
  v21 = v1 + *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 24);
  v22 = *(_BYTE *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v63 = v22;
  v64 = v23;
  v24 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(&v59, v24);
  v25 = v59;
  v26 = v60;
  v27 = v61;
  v56 = v17;
  v59 = v7;
  v60 = v18;
  v61 = v19;
  v62 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
  v29 = v41;
  View.alert(isPresented:content:)(v25, v26, v27, sub_100302520, v55, v10, OpaqueTypeConformance2);
  swift_release(v26);
  v30 = swift_release(v25);
  v31 = (*(uint64_t (**)(char *, uint64_t, __n128))(v43 + 8))(v12, v10, v30);
  v32 = v48;
  static AccessibilityChildBehavior.combine.getter(v31);
  v59 = v10;
  v60 = OpaqueTypeConformance2;
  v33 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
  v34 = v42;
  v35 = v44;
  View.accessibilityElement(children:)(v32, v44, v33);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v29, v35);
  v37 = v51;
  static AccessibilityTraits.isButton.getter(v36);
  v59 = v35;
  v60 = v33;
  v38 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v39 = v46;
  View.accessibilityAddTraits(_:)(v37, v46, v38);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v34, v39);
}

uint64_t sub_1002F3B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  __int128 v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  unsigned __int8 v158;
  _OWORD v159[3];
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  __int16 v165;

  v148 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v120 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v121 = v4;
  v125 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100005574(&qword_10049E4B0);
  __chkstk_darwin();
  v130 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100005574(&qword_10049E4B8);
  v123 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin();
  v122 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100005574(&qword_10049E4C0);
  __chkstk_darwin();
  v119 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v126 = (uint64_t)&v117 - v8;
  v147 = sub_100005574(&qword_10049E4C8);
  v146 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin();
  v128 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for Playlist(0);
  v143 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin();
  v142 = (uint64_t *)((char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574((uint64_t *)&unk_10049E4D0);
  __chkstk_darwin();
  v150 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v151 = (uint64_t)&v117 - v12;
  v140 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v138 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin();
  v136 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v135 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v16 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100005574(&qword_10049C500);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin();
  v132 = (uint64_t)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100005574(&qword_10049E4E0);
  __chkstk_darwin();
  v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100005574(&qword_10049E4E8);
  __chkstk_darwin();
  v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100005574(&qword_10049E4F0);
  v141 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v139 = (uint64_t)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DynamicTypeSize(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v27 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v117 - v28;
  sub_100005574(&qword_10049E4F8);
  __chkstk_darwin();
  v149 = (uint64_t)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v152 = (uint64_t)&v117 - v31;
  v145 = v3;
  v32 = a1;
  sub_1002BE220((uint64_t)v29);
  if (qword_100498BF8 != -1)
    swift_once(&qword_100498BF8, sub_1002F3510);
  v33 = sub_1000086B4(v24, (uint64_t)qword_10049DA00);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v33, v24);
  v34 = sub_100006924((unint64_t *)&qword_10049E500, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v35 = dispatch thunk of static Comparable.< infix(_:_:)(v27, v29, v24, v34);
  v36 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36(v27, v24);
  v36(v29, v24);
  v37 = 1;
  v38 = v32;
  v39 = v152;
  if ((v35 & 1) == 0)
  {
    v118 = v22;
    sub_1002F49D8(v16);
    v40 = sub_100005574(&qword_10049F810);
    v41 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v135, 7, 10, v40);
    v160 = 0;
    v161 = 1;
    v162 = 0;
    v163 = 1;
    v164 = 0;
    v165 = 513;
    v42 = v138;
    v43 = (uint64_t)v136;
    v44 = v140;
    (*(void (**)(char *, _QWORD, uint64_t))(v138 + 104))(v136, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v140);
    v45 = v132;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v16, v41, (uint64_t)&v160, v43, v132);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
    sub_100006798(v41, type metadata accessor for ArtworkImage.Placeholder);
    sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F7D0);
    v46 = v133;
    v47 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v19, v45, v134);
    v48 = &v19[*(int *)(v131 + 36)];
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v48[16] = 1;
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    if (qword_100498BE8 != -1)
      v49 = swift_once(&qword_100498BE8, sub_1002F341C);
    v50 = qword_10049D9F0;
    v51 = static Alignment.center.getter(v49);
    _FrameLayout.init(width:height:alignment:)(v159, v50, 0, v50, 0, v51, v52);
    sub_100014A7C((uint64_t)v19, (uint64_t)v21, &qword_10049E4E0);
    v53 = &v21[*(int *)(v137 + 36)];
    v54 = v159[1];
    *(_OWORD *)v53 = v159[0];
    *((_OWORD *)v53 + 1) = v54;
    *((_OWORD *)v53 + 2) = v159[2];
    sub_100008758((uint64_t)v19, &qword_10049E4E0);
    v55 = v139;
    sub_100014A7C((uint64_t)v21, v139, &qword_10049E4E8);
    v22 = v118;
    v56 = v55 + *(int *)(v118 + 36);
    *(_QWORD *)v56 = 0;
    *(_WORD *)(v56 + 8) = 257;
    sub_100008758((uint64_t)v21, &qword_10049E4E8);
    v39 = v152;
    sub_1000149A8(v55, v152, &qword_10049E4F0);
    v37 = 0;
  }
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v39, v37, 1, v22);
  v135 = (char *)static HorizontalAlignment.leading.getter(v57);
  sub_1002F4DB8(v38, (uint64_t *)&v153);
  v138 = *((_QWORD *)&v153 + 1);
  v139 = v153;
  v137 = v154;
  v58 = v155;
  v136 = (char *)*((_QWORD *)&v154 + 1);
  v59 = *((_QWORD *)&v155 + 1);
  v60 = v156;
  v141 = v157;
  LODWORD(v140) = v158;
  v61 = *(int *)(v145 + 20);
  v62 = *(_QWORD *)(v38 + v61);
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v64 = swift_getKeyPath(&unk_10039D450);
  v65 = v142;
  static Published.subscript.getter(v142, v62, KeyPath);
  swift_release(KeyPath);
  swift_release(v64);
  LOBYTE(v62) = Playlist.isOwner.getter(v66);
  v67 = (*(uint64_t (**)(_QWORD *, uint64_t))(v143 + 8))(v65, v144);
  v68 = 1;
  if ((v62 & 1) != 0)
  {
    if ((Playlist.Collaborator.isPending.getter(v67) & 1) != 0)
    {
      v69 = *(_QWORD *)(v38 + v61);
      v70 = swift_getKeyPath(&unk_10039D4A0);
      v71 = swift_getKeyPath(&unk_10039D4C8);
      static Published.subscript.getter(&v153, v69, v70);
      swift_release(v70);
      swift_release(v71);
      LOBYTE(v70) = sub_100262A6C(v38, v153);
      v72 = swift_bridgeObjectRelease();
      if ((v70 & 1) != 0)
      {
        v73 = v122;
        v74 = ProgressView<>.init<>()(v72);
        if (qword_100498BD8 != -1)
          v74 = swift_once(&qword_100498BD8, sub_1002F3358);
        v75 = qword_10049D9E0;
        v76 = static Alignment.center.getter(v74);
        _FrameLayout.init(width:height:alignment:)(&v153, v75, 0, v75, 0, v76, v77);
        v78 = v123;
        v79 = (uint64_t)v119;
        v80 = v124;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v119, v73, v124);
        v81 = v129;
        v82 = (_OWORD *)(v79 + *(int *)(v129 + 36));
        v83 = v154;
        *v82 = v153;
        v82[1] = v83;
        v82[2] = v155;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v80);
        v84 = v126;
        sub_1000149A8(v79, v126, &qword_10049E4C0);
        v85 = v130;
        sub_100014A7C(v84, (uint64_t)v130, &qword_10049E4C0);
        swift_storeEnumTagMultiPayload(v85, v127, 0);
        v86 = sub_100005574(&qword_10049E518);
        v87 = sub_100302830();
        v88 = sub_10002FFB8((unint64_t *)&unk_10049E530, &qword_10049E518, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v89 = (uint64_t)v128;
        _ConditionalContent<>.init(storage:)(v85, v81, v86, v87, v88);
        sub_100008758(v84, &qword_10049E4C0);
        v39 = v152;
      }
      else
      {
        v90 = v125;
        sub_100082248(v38, v125, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v91 = *(unsigned __int8 *)(v120 + 80);
        v92 = (v91 + 16) & ~v91;
        v93 = v92 + v121;
        v94 = v91 | 7;
        v95 = swift_allocObject(&unk_100462B40, v92 + v121, v91 | 7);
        sub_1000648AC(v90, v95 + v92, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        sub_100082248(v38, v90, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v96 = swift_allocObject(&unk_100462B68, v93, v94);
        sub_1000648AC(v90, v96 + v92, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        swift_retain(v95);
        v97 = v130;
        *v130 = 1;
        *((_QWORD *)v97 + 1) = sub_1003027BC;
        *((_QWORD *)v97 + 2) = v95;
        v97[24] = 0;
        *((_QWORD *)v97 + 4) = sub_1003027D0;
        *((_QWORD *)v97 + 5) = v96;
        swift_retain(v96);
        swift_storeEnumTagMultiPayload(v97, v127, 1);
        v98 = sub_100005574(&qword_10049E518);
        v99 = sub_100302830();
        v100 = sub_10002FFB8((unint64_t *)&unk_10049E530, &qword_10049E518, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v101 = v99;
        v89 = (uint64_t)v128;
        _ConditionalContent<>.init(storage:)(v97, v129, v98, v101, v100);
        swift_release(v95);
        swift_release(v96);
      }
      sub_1000149A8(v89, v151, &qword_10049E4C8);
      v68 = 0;
    }
    else
    {
      v68 = 1;
    }
  }
  v102 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56))(v151, v68, 1, v147);
  v103 = v149;
  sub_100014A7C(v39, v149, &qword_10049E4F8);
  sub_100014A7C(v102, v150, (uint64_t *)&unk_10049E4D0);
  v104 = v148;
  sub_100014A7C(v103, v148, &qword_10049E4F8);
  v105 = (int *)sub_100005574(&qword_10049E510);
  v106 = v104 + v105[12];
  *(_QWORD *)v106 = v135;
  *(_QWORD *)(v106 + 8) = 0;
  *(_BYTE *)(v106 + 16) = 1;
  v107 = v139;
  v108 = v138;
  *(_QWORD *)(v106 + 24) = v139;
  *(_QWORD *)(v106 + 32) = v108;
  v109 = v137;
  v110 = (uint64_t)v136;
  *(_QWORD *)(v106 + 40) = v137;
  *(_QWORD *)(v106 + 48) = v110;
  *(_QWORD *)(v106 + 56) = v58;
  *(_QWORD *)(v106 + 64) = v59;
  v111 = v141;
  *(_QWORD *)(v106 + 72) = v60;
  *(_QWORD *)(v106 + 80) = v111;
  v112 = v140;
  *(_BYTE *)(v106 + 88) = v140;
  v113 = v104 + v105[16];
  *(_QWORD *)v113 = 0;
  *(_BYTE *)(v113 + 8) = 1;
  v114 = v104 + v105[20];
  v115 = v150;
  sub_100014A7C(v150, v114, (uint64_t *)&unk_10049E4D0);
  sub_1002A3C34(v107, v108, v109, v110);
  sub_1003026F0(v58, v59, v60, v111, v112);
  sub_100008758(v151, (uint64_t *)&unk_10049E4D0);
  sub_100008758(v152, &qword_10049E4F8);
  sub_100008758(v115, (uint64_t *)&unk_10049E4D0);
  sub_1002A3C64(v107, v108, v109, v110);
  sub_100302730(v58, v59, v60, v111, v112);
  return sub_100008758(v149, &qword_10049E4F8);
}

uint64_t sub_1002F49D8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;

  v36 = a1;
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v35 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Artwork(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v34 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v33 = (char *)&v33 - v5;
  __chkstk_darwin();
  v7 = (char *)&v33 - v6;
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v33 - v10;
  __chkstk_darwin();
  v13 = (char *)&v33 - v12;
  __chkstk_darwin();
  v15 = (char *)&v33 - v14;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v17 = v16((char *)&v33 - v14, 1, 1, v2);
  Playlist.Collaborator.artwork.getter(v17);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v18(v13, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_10049F430);
    sub_1000087DC(0, (unint64_t *)&qword_10049E540, MPArtworkCatalog_ptr);
    v19 = Playlist.Collaborator.name.getter();
    v21 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v19, v20, 0, 1);
    swift_bridgeObjectRelease();
    if (v21)
    {
      Artwork.init(_:)(v21);
      sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F430);
      v16(v11, 0, 1, v2);
      sub_1000149A8((uint64_t)v11, (uint64_t)v15, (uint64_t *)&unk_10049F430);
    }
  }
  else
  {
    sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F430);
    v22 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v22(v7, v13, v2);
    v22(v15, v7, v2);
    v16(v15, 0, 1, v2);
  }
  sub_100014A7C((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_10049F430);
  if (v18(v9, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F430);
    sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F430);
    v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v36, 1, 1, v23);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v26 = v33;
    v25(v33, v9, v2);
    v27 = v34;
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v34, v26, v2);
    v29 = (uint64_t)v35;
    static Artwork.CropStyle.boundedBox.getter(v28);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    sub_100008758((uint64_t)v15, (uint64_t *)&unk_10049F430);
    v30 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    v31 = v36;
    v25(v36, v27, v2);
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1000149A8(v29, (uint64_t)&v31[*(int *)(v32 + 20)], &qword_1004999E0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
}

uint64_t sub_1002F4DB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  unsigned __int8 v146;

  v136 = a2;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v4 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v132 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v133 = *(_QWORD *)(v6 - 8);
  v134 = v6;
  __chkstk_darwin();
  v130 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v131 = (char *)&v128 - v8;
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129 = *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 20);
  v13 = *(_QWORD *)(a1 + v129);
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v15 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v12, v13, KeyPath);
  swift_release(KeyPath);
  swift_release(v15);
  LOBYTE(v13) = Playlist.isOwner.getter(v16);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  v17 = sub_1002F55AC(v13 & 1);
  if (v18)
  {
    v142 = v17;
    v143 = v18;
    v19 = sub_10024AF7C();
    v20 = Text.init<A>(_:)(&v142, &type metadata for String, v19);
    v22 = v21;
    v24 = v23;
    v26 = v25 & 1;
    LODWORD(v142) = static HierarchicalShapeStyle.primary.getter(v20);
    v27 = Text.foregroundStyle<A>(_:)(&v142, v20, v22, v26, v24, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_10003B4D0(v20, v22, v26);
    swift_bridgeObjectRelease();
    if (qword_100498BA8 != -1)
      swift_once(&qword_100498BA8, sub_1002F318C);
    v34 = qword_10049D9B0;
    swift_retain(qword_10049D9B0);
    v35 = v31 & 1;
    v37 = Text.font(_:)(v36, v27, v29, v35, v33);
    v39 = v38;
    v41 = v40;
    v135 = v42;
    swift_release(v34);
    v43 = v41 & 1;
    sub_10003B4D0(v27, v29, v35);
    v17 = swift_bridgeObjectRelease();
  }
  else
  {
    v37 = 0;
    v39 = 0;
    v43 = 0;
    v135 = 0;
  }
  if ((Playlist.Collaborator.isPending.getter(v17) & 1) != 0 && (sub_1002E6BC8() & 1) == 0)
  {
    v128 = v43;
    v90 = v131;
    String.LocalizationValue.init(stringLiteral:)(0x6F742073746E6157, 0xED00006E696F4A20);
    v92 = v133;
    v91 = v134;
    v93 = v130;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v130, v90, v134);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v129 = v39;
    v94 = qword_1004A2F90;
    v95 = (id)qword_1004A2F90;
    v96 = v132;
    static Locale.current.getter(v95);
    v97 = String.init(localized:table:bundle:locale:comment:)(v93, 0, 0, v94, v96, 0, 0, 256);
    v99 = v98;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v91);
    v142 = v97;
    v143 = v99;
    v100 = sub_10024AF7C();
    v101 = Text.init<A>(_:)(&v142, &type metadata for String, v100);
    v103 = v102;
    v105 = v104;
    v107 = v106 & 1;
    LODWORD(v142) = static HierarchicalShapeStyle.secondary.getter(v101);
    v108 = Text.foregroundStyle<A>(_:)(&v142, v101, v103, v107, v105, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v110 = v109;
    v112 = v111;
    v114 = v113;
    sub_10003B4D0(v101, v103, v107);
    swift_bridgeObjectRelease();
    if (qword_100498BB0 != -1)
      swift_once(&qword_100498BB0, sub_1002F31A8);
    v115 = qword_10049D9B8;
    swift_retain(qword_10049D9B8);
    v116 = v112 & 1;
    v118 = Text.font(_:)(v117, v108, v110, v116, v114);
    v120 = v119;
    v122 = v121;
    v124 = v123;
    swift_release(v115);
    sub_10003B4D0(v108, v110, v116);
    swift_bridgeObjectRelease();
    v137 = v118;
    v138 = v120;
    v139 = v122 & 1;
    v140 = v124;
    v141 = 0;
    goto LABEL_20;
  }
  v44 = Playlist.Collaborator.handle.getter();
  v46 = v45;
  if (v45)
  {
    v47 = v44;
    v128 = v43;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 1);
    v48._countAndFlagsBits = 64;
    v48._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v48);
    v49._countAndFlagsBits = v47;
    v49._object = v46;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v49);
    swift_bridgeObjectRelease();
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v50);
    v51 = v131;
    String.LocalizationValue.init(stringInterpolation:)(v4);
    v53 = v133;
    v52 = v134;
    v54 = v130;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v130, v51, v134);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v129 = v39;
    v55 = qword_1004A2F90;
    v56 = (id)qword_1004A2F90;
    v57 = v132;
    static Locale.current.getter(v56);
    v58 = String.init(localized:table:bundle:locale:comment:)(v54, 0, 0, v55, v57, 0, 0, 256);
    v60 = v59;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v52);
    v142 = v58;
    v143 = v60;
    v61 = sub_10024AF7C();
    v62 = Text.init<A>(_:)(&v142, &type metadata for String, v61);
    v64 = v63;
    v66 = v65;
    v68 = v67 & 1;
    LODWORD(v142) = static HierarchicalShapeStyle.secondary.getter(v62);
    v69 = Text.foregroundStyle<A>(_:)(&v142, v62, v64, v68, v66, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    sub_10003B4D0(v62, v64, v68);
    swift_bridgeObjectRelease();
    if (qword_100498BB0 != -1)
      swift_once(&qword_100498BB0, sub_1002F31A8);
    v76 = qword_10049D9B8;
    swift_retain(qword_10049D9B8);
    v77 = v73 & 1;
    v79 = Text.font(_:)(v78, v69, v71, v77, v75);
    v81 = v80;
    v83 = v82;
    v85 = v84;
    swift_release(v76);
    sub_10003B4D0(v69, v71, v77);
    swift_bridgeObjectRelease();
    v137 = v79;
    v138 = v81;
    v139 = v83 & 1;
    v140 = v85;
    v141 = 1;
LABEL_20:
    _ConditionalContent<>.init(storage:)(&v137, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v86 = v142;
    v87 = v143;
    v46 = v144;
    v88 = v145;
    v89 = v146;
    v39 = v129;
    v43 = v128;
    goto LABEL_21;
  }
  v86 = 0;
  v87 = 0;
  v88 = 0;
  v89 = -1;
LABEL_21:
  v126 = v135;
  v125 = v136;
  *v136 = v37;
  v125[1] = v39;
  v125[2] = v43;
  v125[3] = v126;
  v125[4] = v86;
  v125[5] = v87;
  v125[6] = (uint64_t)v46;
  v125[7] = v88;
  *((_BYTE *)v125 + 64) = v89;
  sub_1002A3C34(v37, v39, v43, v126);
  sub_1003026F0(v86, v87, (char)v46, v88, v89);
  sub_100302730(v86, v87, (char)v46, v88, v89);
  return sub_1002A3C64(v37, v39, v43, v126);
}

uint64_t sub_1002F55AC(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v6 = __chkstk_darwin();
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = Playlist.Collaborator.name.getter(v6);
  v11 = v10;
  if (v10 && (Playlist.Collaborator.isHost.getter() & 1) != 0)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    v13._countAndFlagsBits = v9;
    v13._object = v11;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 0x2972656E774F2820;
    v14._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    v15 = String.LocalizationValue.init(stringInterpolation:)(v8);
    static Locale.current.getter(v15);
    if ((a1 & 1) != 0)
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("device host owner", 17, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
    else
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("playlist host owner", 19, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
  }
  return v9;
}

double sub_1002F577C(uint64_t a1, const char *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;

  v6 = type metadata accessor for Logger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = Logger.collaboration.unsafeMutableAddressor(v8, v11);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v12, v6);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, a2, v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  return sub_1002E97FC(a1, a3);
}

uint64_t sub_1002F58A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v38 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v38 + 64);
  __chkstk_darwin();
  v41 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F750);
  __chkstk_darwin();
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574((uint64_t *)&unk_10049DB50);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin();
  v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574((uint64_t *)&unk_10049E480);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  KeyPath = swift_getKeyPath(&unk_10039D428);
  v17 = swift_getKeyPath(&unk_10039D450);
  static Published.subscript.getter(v14, v15, KeyPath);
  swift_release(KeyPath);
  swift_release(v17);
  LOBYTE(v15) = Playlist.isOwner.getter(v18);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v21 = Playlist.Collaborator.isHost.getter();
    v20 = v45;
    if ((v21 & 1) != 0)
    {
      v19 = 1;
    }
    else
    {
      v22 = Playlist.Collaborator.isPending.getter(v21);
      v19 = 1;
      if (v22 != 2 && (v22 & 1) == 0)
      {
        v23 = v39;
        static ButtonRole.cancel.getter(v22);
        v24 = type metadata accessor for ButtonRole(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
        v25 = v41;
        sub_100082248(a1, v41, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v26 = *(unsigned __int8 *)(v38 + 80);
        v27 = (v26 + 16) & ~v26;
        v28 = swift_allocObject(&unk_100462B18, v27 + v4, v26 | 7);
        sub_1000648AC(v25, v28 + v27, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v29 = v42;
        v30 = Button.init(role:action:label:)(v23, sub_1003026D4, v28, sub_1002F5E30, 0, &type metadata for Text, &protocol witness table for Text);
        v31 = static Color.red.getter(v30);
        v32 = swift_getKeyPath(&unk_10039D470);
        v34 = v43;
        v33 = v44;
        v35 = (uint64_t)v40;
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v29, v44);
        v36 = (uint64_t *)(v35 + *(int *)(v8 + 36));
        *v36 = v32;
        v36[1] = v31;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
        sub_1000149A8(v35, v20, (uint64_t *)&unk_10049E480);
        v19 = 0;
      }
    }
  }
  else
  {
    v19 = 1;
    v20 = v45;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v20, v19, 1, v8);
}

uint64_t sub_1002F5C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v27[15];
  _BYTE v28[9];
  uint64_t v29;

  v3 = type metadata accessor for Logger(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v27[-v9];
  v11 = type metadata accessor for Playlist.Collaborator(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  v13 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_100014A7C((uint64_t)v10, (uint64_t)v8, &qword_10049B070);
  v14 = sub_100005574(&qword_10049E298);
  State.wrappedValue.setter(v8, v14);
  sub_100008758((uint64_t)v10, &qword_10049B070);
  v15 = (char *)(a1 + *(int *)(v13 + 24));
  v16 = *v15;
  v17 = *((_QWORD *)v15 + 1);
  v28[1] = v16;
  v29 = v17;
  v28[0] = 1;
  v18 = sub_100005574(&qword_10049C5C8);
  v19 = State.wrappedValue.setter(v28, v18);
  v21 = Logger.collaboration.unsafeMutableAddressor(v19, v20);
  v22 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v21, v3);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Management] Remove swipe action triggered", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1002F5E30@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F5E44(0x65766F6D6552, 0xE600000000000000, a1);
}

uint64_t sub_1002F5E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v24[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v24[-1] - v12;
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v8);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v14 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v7, 0, 0, 256);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  v24[0] = v15;
  v24[1] = v17;
  v18 = sub_10024AF7C();
  result = Text.init<A>(_:)(v24, &type metadata for String, v18);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v20;
  *(_BYTE *)(a3 + 16) = v21 & 1;
  *(_QWORD *)(a3 + 24) = v22;
  return result;
}

uint64_t sub_1002F5FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = a1;
  v64 = a2;
  v58 = *(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  __chkstk_darwin();
  v59 = v2;
  v61 = (uint64_t)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0);
  __chkstk_darwin();
  v63 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v62 = (char *)&v51 - v4;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v51 - v11;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003BA1E0);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v14 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v15 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v14, v6, 0, 0, 256);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v12, v7);
  v65 = v15;
  v66 = v17;
  v19 = sub_10024AF7C();
  v20 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v56 = v21;
  v57 = v20;
  v54 = v22;
  v55 = v23;
  String.LocalizationValue.init(stringLiteral:)(0x10000000000000BCLL, 0x80000001003BA200);
  v13(v10, v12, v7);
  v24 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v24, v6, 0, 0, 256);
  v27 = v26;
  v18(v12, v7);
  v65 = v25;
  v66 = v27;
  v28 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v52 = v29;
  v53 = v28;
  v51 = v30;
  v32 = v31 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
  v13(v10, v12, v7);
  v33 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v34 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v33, v6, 0, 0, 256);
  v36 = v35;
  v18(v12, v7);
  v65 = v34;
  v66 = v36;
  v37 = Text.init<A>(_:)(&v65, &type metadata for String, v19);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = v61;
  sub_100082248(v60, v61, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v45 = *(unsigned __int8 *)(v58 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = swift_allocObject(&unk_100462AF0, v46 + v59, v45 | 7);
  sub_1000648AC(v44, v47 + v46, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v48 = v62;
  static Alert.Button.destructive(_:action:)(v37, v39, v43, v41, sub_10030252C, v47);
  sub_10003B4D0(v37, v39, v43);
  swift_release(v47);
  swift_bridgeObjectRelease();
  v49 = v63;
  static Alert.Button.cancel(_:)(CFRange.init(_:), 0);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v57, v56, v54 & 1, v55, v53, v52, v32, v51, v48, v49);
}

uint64_t sub_1002F6430()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  sub_100005574(&qword_10049B070);
  __chkstk_darwin();
  v1 = (uint64_t *)((char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = sub_100005574(&qword_10049E298);
  State.wrappedValue.getter(v1, v2);
  sub_1002E9274((uint64_t)v1);
  return sub_100008758((uint64_t)v1, &qword_10049B070);
}

uint64_t sub_1002F64E4(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v15[-v8];
  if ((a1 & 1) != 0)
  {
    v11 = 0x65646F43205251;
    v10 = 0xE700000000000000;
  }
  else
  {
    v10 = 0x80000001003BA390;
    v11 = 0xD000000000000011;
  }
  String.LocalizationValue.init(stringLiteral:)(v11, v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v12 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v13 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  return v13;
}

uint64_t sub_1002F6674@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  char **v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70[16];
  uint64_t v71;

  v2 = v1;
  v69 = a1;
  v67 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin();
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (uint64_t)&v58 - v6;
  v7 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100005574(&qword_10049E560);
  v11 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E568);
  __chkstk_darwin();
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100005574(&qword_10049E570);
  __chkstk_darwin();
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100005574(&qword_10049E578);
  __chkstk_darwin();
  v63 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v2, (uint64_t)v10, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_100462B90, v20 + v9, v19 | 7);
  sub_1000648AC((uint64_t)v10, v21 + v20, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v71 = v2;
  v22 = sub_100005574(&qword_10049E580);
  v23 = sub_100100628(&qword_10049E588, &qword_10049E580, (void (*)(void))sub_100302AC8);
  v24 = Button.init(action:label:)(sub_100302A84, v21, sub_100302AC0, v70, v22, v23);
  v25 = static Alignment.center.getter(v24);
  v28 = sub_1003158D4(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v15, v27, 0.0, 1, 0.0, 1, v25, v26);
  (*(void (**)(char *, uint64_t, double))(v11 + 8))(v13, v59, v28);
  v29 = v2 + *(int *)(v7 + 28);
  v30 = *(_QWORD *)v29;
  LOBYTE(v10) = *(_BYTE *)(v29 + 8);
  sub_100301C50(*(_QWORD *)v29, (char)v10);
  v31 = sub_1002BE254(v30, (char)v10);
  sub_1002D0564(v30, (char)v10);
  if ((v31 & 1) != 0)
  {
    if (qword_100498BF0 != -1)
      swift_once(&qword_100498BF0, sub_1002F347C);
    v32 = qword_10049D9F8;
    swift_retain(qword_10049D9F8);
  }
  else
  {
    v33 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v32 = Color.init(_:)(v33);
  }
  KeyPath = swift_getKeyPath(&unk_10039D4E8);
  sub_100014A7C((uint64_t)v15, (uint64_t)v17, &qword_10049E568);
  v35 = (uint64_t *)&v17[*(int *)(v60 + 36)];
  *v35 = KeyPath;
  v35[1] = v32;
  sub_100008758((uint64_t)v15, &qword_10049E568);
  v36 = v61;
  sub_1002BE3E0(v61);
  v38 = v64;
  v37 = v65;
  v39 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, enum case for ColorScheme.light(_:), v66);
  v40 = static ColorScheme.== infix(_:_:)(v36, v38);
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v38, v39);
  v41((char *)v36, v39);
  v42 = (void *)objc_opt_self(UIColor);
  v43 = &selRef_systemBackgroundColor;
  if ((v40 & 1) == 0)
    v43 = &selRef_secondarySystemBackgroundColor;
  v44 = Color.init(_:)(objc_msgSend(v42, *v43));
  v45 = v68;
  v46 = &v68[*(int *)(v67 + 20)];
  v47 = enum case for RoundedCornerStyle.continuous(_:);
  v48 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  __asm { FMOV            V0.2D, #10.0 }
  *v45 = _Q0;
  v54 = (uint64_t)v63;
  v55 = (uint64_t *)&v63[*(int *)(v62 + 36)];
  v56 = sub_100005574(&qword_10049E5D0);
  sub_100082248((uint64_t)v45, (uint64_t)v55 + *(int *)(v56 + 52), (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *v55 = v44;
  *(_WORD *)((char *)v55 + *(int *)(v56 + 56)) = 256;
  sub_100014A7C((uint64_t)v17, v54, &qword_10049E570);
  sub_100006798((uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100008758((uint64_t)v17, &qword_10049E570);
  return sub_1000149A8(v54, v69, &qword_10049E578);
}

uint64_t sub_1002F6BD0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_100005574(&qword_10049E5A8);
  __chkstk_darwin();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574((uint64_t *)&unk_10049F730);
  __chkstk_darwin();
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E580);
  v10 = __chkstk_darwin();
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v10);
  *((_QWORD *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  sub_1002F6DA0(a1, &v6[*(int *)(v4 + 44)]);
  if (*a1)
    v13 = 2.5;
  else
    v13 = 0.0;
  sub_100014A7C((uint64_t)v6, (uint64_t)v9, &qword_10049E5A8);
  v14 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v14 = 0;
  *((double *)v14 + 1) = v13;
  v15 = sub_100008758((uint64_t)v6, &qword_10049E5A8);
  v16 = static Alignment.center.getter(v15);
  sub_10031592C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v16, v17);
  sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F730);
  return sub_1000149A8((uint64_t)v12, a2, &qword_10049E580);
}

uint64_t sub_1002F6DA0@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  __n128 v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  void (*v29)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  _QWORD *v61;
  int *v62;
  char *v63;
  char *v64;
  void (*v65)(uint64_t, uint64_t);
  _BYTE v67[4];
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;

  v74 = a2;
  v72 = (_BYTE *)sub_100005574(&qword_10049E5D8);
  __chkstk_darwin();
  v4 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100005574(&qword_10049E5E0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin();
  v7 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100005574(&qword_10049E5E8);
  v9 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  v76 = v9;
  __chkstk_darwin();
  v73 = &v67[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v69 = &v67[-v11];
  __chkstk_darwin();
  v13 = &v67[-v12];
  v68 = *a1;
  if (v68)
    v14 = 0x65646F637271;
  else
    v14 = 0xD000000000000013;
  if (v68)
    v15 = 0xE600000000000000;
  else
    v15 = 0x80000001003ADDD0;
  v16 = Image.init(systemName:)(v14, v15);
  v17 = static Font.body.getter();
  KeyPath = swift_getKeyPath(&unk_10039D518);
  v77 = v16;
  v78 = KeyPath;
  v79 = v17;
  v20 = static Font.Weight.semibold.getter(v19);
  v21 = sub_100005574((uint64_t *)&unk_10049E5F0);
  v22 = sub_1002DD9D8();
  View.fontWeight(_:)(*(_QWORD *)&v20, 0, v21, v22);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v16);
  if (qword_100498C00 != -1)
    swift_once(&qword_100498C00, sub_1002F3568);
  v23 = (uint64_t)v72;
  v24 = sub_1000086B4((uint64_t)v72, (uint64_t)qword_10049DA18);
  sub_100014A7C(v24, (uint64_t)v4, &qword_10049E5D8);
  v77 = v21;
  v78 = v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v26 = sub_10002FFB8(&qword_10049E610, &qword_10049E5D8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v27 = v69;
  v28 = v71;
  View.dynamicTypeSize<A>(_:)(v4, v71, v23, OpaqueTypeConformance2, v26);
  sub_100008758((uint64_t)v4, &qword_10049E5D8);
  (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v7, v28);
  v29 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 32);
  v72 = v13;
  v29(v13, v27, v75);
  v77 = sub_1002F64E4(v68);
  v78 = v30;
  v31 = sub_10024AF7C();
  v32 = Text.init<A>(_:)(&v77, &type metadata for String, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  if (qword_100498BB8 != -1)
    swift_once(&qword_100498BB8, sub_1002F31C4);
  v39 = qword_10049D9C0;
  swift_retain(qword_10049D9C0);
  v40 = v36 & 1;
  v42 = Text.font(_:)(v41, v32, v34, v36 & 1, v38);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  swift_release(v39);
  sub_10003B4D0(v32, v34, v40);
  swift_bridgeObjectRelease();
  if (qword_100498BC0 != -1)
    swift_once(&qword_100498BC0, sub_1002F324C);
  v49 = v46 & 1;
  v50 = Text.fontWeight(_:)(qword_10049D9C8, 0, v42, v44, v46 & 1, v48);
  v52 = v51;
  v71 = v53;
  v55 = v54 & 1;
  sub_10003B4D0(v42, v44, v49);
  swift_bridgeObjectRelease();
  v56 = v75;
  v57 = v76;
  v58 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 16);
  v60 = (uint64_t)v72;
  v59 = v73;
  v58(v73, v72, v75);
  v61 = v74;
  *v74 = 0;
  *((_BYTE *)v61 + 8) = 1;
  v62 = (int *)sub_100005574(&qword_10049E618);
  v58((_BYTE *)v61 + v62[12], v59, v56);
  v63 = (char *)v61 + v62[16];
  *(_QWORD *)v63 = v50;
  *((_QWORD *)v63 + 1) = v52;
  v63[16] = v55;
  *((_QWORD *)v63 + 3) = v71;
  v64 = (char *)v61 + v62[20];
  *(_QWORD *)v64 = 0x4020000000000000;
  v64[8] = 0;
  sub_10003B4C0(v50, v52, v55);
  v65 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  swift_bridgeObjectRetain();
  v65(v60, v56);
  sub_10003B4D0(v50, v52, v55);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(_BYTE *, uint64_t))v65)(v59, v56);
}

uint64_t sub_1002F726C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[5];

  v49 = a4;
  v6 = a1 & 1;
  v50 = type metadata accessor for ButtonBorderShape(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin();
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BorderlessButtonStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  v44 = v9;
  __chkstk_darwin();
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049EDF8);
  v42 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10049EE00);
  v45 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  __chkstk_darwin();
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_100463128, 40, 7);
  *(_BYTE *)(v18 + 16) = v6;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  v51[16] = v6;
  v52 = a2;
  v53 = a3;
  swift_retain(a3);
  v19 = sub_100005574(&qword_10049EE08);
  v20 = sub_100005600(&qword_10049EE10);
  v21 = sub_100005600(&qword_10049E5D8);
  v22 = sub_10030542C();
  v23 = sub_10002FFB8(&qword_10049E610, &qword_10049E5D8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v54[0] = v20;
  v54[1] = v21;
  v54[2] = v22;
  v54[3] = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v54, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  v25 = Button.init(action:label:)(sub_100305414, v18, sub_100305420, v51, v19, OpaqueTypeConformance2);
  BorderlessButtonStyle.init()(v25);
  v26 = sub_10002FFB8(&qword_10049EE60, &qword_10049EDF8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v27 = sub_100006924(&qword_10049E9E0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v28 = v43;
  View.buttonStyle<A>(_:)(v11, v12, v43, v26, v27);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v12);
  v30 = v47;
  static ButtonBorderShape.circle.getter(v29);
  KeyPath = swift_getKeyPath(&unk_10039D960);
  v32 = sub_100005574(&qword_10049EE68);
  v33 = v49;
  v34 = (uint64_t *)(v49 + *(int *)(v32 + 36));
  v35 = sub_100005574(&qword_10049EE70);
  v36 = v48;
  v37 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v34 + *(int *)(v35 + 28), v30, v50);
  *v34 = KeyPath;
  v39 = v45;
  v38 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v33, v17, v46);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v17, v38);
}

double sub_1002F75A4(char a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v5 = a1 & 1;
  v6 = static Animation.spring(response:dampingFraction:blendDuration:)(0.25, 1.0, 0.0);
  v8[16] = v5;
  v9 = a2;
  v10 = a3;
  withAnimation<A>(_:_:)(v6, sub_10030561C, v8, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_1002F761C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  __int16 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;

  v45 = a2;
  v41 = sub_100005574(&qword_10049E5D8);
  __chkstk_darwin();
  v4 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100005574(&qword_10049EE08);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v42 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v6 = 0x6B72616D78;
  else
    v6 = 0x72616D6B63656863;
  if ((a1 & 1) != 0)
    v7 = 0xE500000000000000;
  else
    v7 = 0xE90000000000006BLL;
  v40 = Image.init(systemName:)(v6, v7);
  v8 = static Font.subheadline.getter(v40);
  v39 = Font.bold()();
  swift_release(v8);
  KeyPath = swift_getKeyPath(&unk_10039D518);
  v9 = static Color.white.getter(KeyPath);
  v10 = swift_getKeyPath(&unk_10039D4E8);
  v11 = v10;
  if (qword_100498BD8 != -1)
    v10 = swift_once(&qword_100498BD8, sub_1002F3358);
  v12 = qword_10049D9E0;
  v13 = static Alignment.center.getter(v10);
  v15 = _FrameLayout.init(width:height:alignment:)(&v60, v12, 0, v12, 0, v13, v14);
  v16 = v60;
  v17 = v61;
  v18 = v62;
  v19 = v63;
  v20 = v64;
  v21 = v65;
  if ((a1 & 1) != 0)
    v22 = static Color.red.getter(v15);
  else
    v22 = static Color.green.getter(v15);
  v23 = v22;
  v24 = static Edge.Set.all.getter(v22);
  v46 = v40;
  v47 = KeyPath;
  v48 = v39;
  v49 = v11;
  v50 = v9;
  v51 = v16;
  v52 = v17;
  v53 = v18;
  v54 = v19;
  v55 = v20;
  v56 = v21;
  v57 = v23;
  v58 = v24;
  v59 = 256;
  if (qword_100498C00 != -1)
    swift_once(&qword_100498C00, sub_1002F3568);
  v25 = v41;
  v26 = sub_1000086B4(v41, (uint64_t)qword_10049DA18);
  sub_100014A7C(v26, (uint64_t)v4, &qword_10049E5D8);
  v27 = sub_100005574(&qword_10049EE10);
  v28 = sub_10030542C();
  v29 = sub_10002FFB8(&qword_10049E610, &qword_10049E5D8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v30 = v42;
  View.dynamicTypeSize<A>(_:)(v4, v27, v25, v28, v29);
  sub_100008758((uint64_t)v4, &qword_10049E5D8);
  v31 = v46;
  v32 = v47;
  v33 = v48;
  v34 = v49;
  v35 = v50;
  swift_release(v57);
  swift_release(v34);
  swift_release(v32);
  swift_release(v31);
  swift_release(v33);
  v36 = swift_release(v35);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v43 + 32))(v45, v30, v44, v36);
}

uint64_t sub_1002F7948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F726C(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t Collaboration.Management.ViewController.__allocating_init(model:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = objc_allocWithZone(v1);
  swift_retain(a1);
  Collaboration.Management.View.init(model:)(v6, v4);
  v7 = UIHostingController.init(rootView:)(v4);
  swift_release(a1);
  return v7;
}

uint64_t Collaboration.Management.ViewController.init(model:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain(a1);
  Collaboration.Management.View.init(model:)(v4, v3);
  v5 = UIHostingController.init(rootView:)(v3);
  swift_release(a1);
  return v5;
}

void sub_1002F7A6C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/CollaborationUI.swift", 33, 2, 718, 0);
  __break(1u);
}

Swift::Void __swiftcall Collaboration.Management.ViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v6, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3)
    {
      v4 = objc_msgSend(v3, "windowScene");

      if (v4)
      {
        v5 = objc_msgSend(v4, "coordinateSpace");

        objc_msgSend(v5, "bounds");
        swift_unknownObjectRelease(v5);
      }
    }
    sub_1002FE628();
  }
  else
  {
    __break(1u);
  }
}

void sub_1002F7BAC(void *a1)
{
  id v1;

  v1 = a1;
  Collaboration.Management.ViewController.viewDidLayoutSubviews()();

}

id Collaboration.Management.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  objc_super v8;

  sub_1002FE628();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  return objc_msgSendSuper2(&v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_1002F7C40(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  id v9;
  objc_super v10;

  swift_unknownObjectRetain(a5);
  v9 = a1;
  sub_1002FE628();
  v10.receiver = v9;
  v10.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v10, "viewWillTransitionToSize:withTransitionCoordinator:", a5, a2, a3);
  swift_unknownObjectRelease(a5);

}

void Collaboration.Management.ViewController.init(coder:rootView:)()
{
  PlaylistCurators.ViewController.__allocating_init(coder:rootView:)();
}

id Collaboration.Management.ViewController.__deallocating_deinit()
{
  return sub_10029A7E0(type metadata accessor for Collaboration.Management.ViewController);
}

uint64_t sub_1002F7CE4(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_1002F7D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10030296C();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002F7D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10030296C();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002F7DBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10030296C();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

char *sub_1002F7DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  id v15;
  _BYTE v17[16];
  _OWORD v18[2];
  uint64_t v19;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v17[-v8];
  v10 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v10;
  v19 = *(_QWORD *)(v1 + 32);
  sub_1003028F8((_QWORD *)v1);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003BA320);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v11(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v12 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v9, v4);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x80000001003BA340);
  v11(v7, v9, v4);
  v14 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v14, v3, 0, 0, 256);
  v13(v9, v4);
  v15 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(v18);
}

char *sub_1002F8018()
{
  return sub_1002F7DE0();
}

uint64_t sub_1002F8050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100302928();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002F80A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100302928();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002F80F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100302928();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t PlaylistCurators.Curator.init(name:artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for PlaylistCurators.Curator(0);
  return sub_1000149A8(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t *)&unk_10049F430);
}

uint64_t sub_1002F8158@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  id v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;

  v35 = a1;
  sub_100005574(&qword_1004999E0);
  __chkstk_darwin();
  v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v32 = (char *)&v32 - v6;
  __chkstk_darwin();
  v8 = (char *)&v32 - v7;
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v32 - v11;
  __chkstk_darwin();
  v14 = (char *)&v32 - v13;
  __chkstk_darwin();
  v16 = (char *)&v32 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v17((char *)&v32 - v15, 1, 1, v3);
  v18 = type metadata accessor for PlaylistCurators.Curator(0);
  sub_100014A7C((uint64_t)v1 + *(int *)(v18 + 20), (uint64_t)v14, (uint64_t *)&unk_10049F430);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v19(v14, 1, v3) == 1)
  {
    sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
    sub_1000087DC(0, (unint64_t *)&qword_10049E540, MPArtworkCatalog_ptr);
    v20 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*v1, v1[1], 0, 1);
    if (v20)
    {
      Artwork.init(_:)(v20);
      sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
      v17(v12, 0, 1, v3);
      sub_1000149A8((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_10049F430);
    }
  }
  else
  {
    sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
    v21 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v21(v8, v14, v3);
    v21(v16, v8, v3);
    v17(v16, 0, 1, v3);
  }
  sub_100014A7C((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_10049F430);
  if (v19(v10, 1, v3) == 1)
  {
    sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
    sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F430);
    v22 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v35, 1, 1, v22);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v25 = v32;
    v24(v32, v10, v3);
    v26 = v33;
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v33, v25, v3);
    v28 = (uint64_t)v34;
    static Artwork.CropStyle.boundedBox.getter(v27);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v25, v3);
    sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
    v29 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
    v30 = v35;
    v24(v35, v26, v3);
    v31 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_1000149A8(v28, (uint64_t)&v30[*(int *)(v31 + 20)], &qword_1004999E0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t PlaylistCurators.View.configuration.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t sub_1002F856C(uint64_t *a1, uint64_t *a2)
{
  return _s11MusicCoreUI16PlaylistCuratorsO4ViewV13ConfigurationV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *a2);
}

uint64_t PlaylistCurators.View.init(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v4 = (_QWORD *)((char *)a2 + *(int *)(type metadata accessor for PlaylistCurators.View(0) + 20));
  *v4 = swift_getKeyPath(&unk_10039CDF8);
  v5 = sub_100005574(&qword_100498E70);
  result = swift_storeEnumTagMultiPayload(v4, v5, 0);
  *a2 = a1;
  return result;
}

uint64_t PlaylistCurators.View.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_100005574(&qword_10049DB68);
  v2 = __chkstk_darwin();
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v2);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 0;
  v5 = sub_100005574(&qword_10049DB70);
  sub_1002F86D0(v0, (uint64_t)&v4[*(int *)(v5 + 44)]);
  v6 = sub_10002FFB8(&qword_10049DB78, &qword_10049DB68, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.artworkCaching(id:limit:)(0xD000000000000010, 0x800000010039CE10, 3, 0, v1, v6);
  return sub_100008758((uint64_t)v4, &qword_10049DB68);
}

uint64_t sub_1002F86D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a2;
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin();
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100005574((uint64_t *)&unk_10049DB80);
  __chkstk_darwin();
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v48 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v46 - v8;
  __chkstk_darwin();
  v49 = (uint64_t)&v46 - v10;
  sub_100005574(&qword_10049E6F8);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049E700);
  __chkstk_darwin();
  v54 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v46 - v15;
  v17 = __chkstk_darwin();
  v19 = (char *)&v46 - v18;
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  v20 = (uint64_t)&v12[*(int *)(sub_100005574(&qword_10049E708) + 44)];
  v51 = (char *)a1;
  sub_1002F8C1C(a1, v20);
  if (qword_100498A88 != -1)
    swift_once(&qword_100498A88, sub_10029639C);
  v21 = *(_QWORD *)algn_1004A3D18;
  v22 = byte_1004A3D20;
  if (byte_1004A3D20)
    v23 = *(double *)&static Corner.medium;
  else
    v23 = *(double *)&static Corner.medium + -3.0;
  sub_100014A7C((uint64_t)v12, (uint64_t)v16, &qword_10049E6F8);
  v24 = &v16[*(int *)(v13 + 36)];
  *(double *)v24 = v23;
  *((_QWORD *)v24 + 1) = v21;
  v24[16] = v22;
  *((_QWORD *)v24 + 3) = 0x4008000000000000;
  *((_QWORD *)v24 + 4) = 0;
  *((_WORD *)v24 + 20) = 257;
  sub_100008758((uint64_t)v12, &qword_10049E6F8);
  sub_1000149A8((uint64_t)v16, (uint64_t)v19, &qword_10049E700);
  type metadata accessor for PlaylistCurators.View(0);
  v25 = v49;
  sub_1002BE410(v49);
  v27 = v52;
  v26 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v9, enum case for UserInterfaceSizeClass.regular(_:), v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
  v28 = (uint64_t)&v6[*(int *)(v50 + 48)];
  sub_100014A7C(v25, (uint64_t)v6, &qword_100499170);
  sub_100014A7C((uint64_t)v9, v28, &qword_100499170);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v30 = v29(v6, 1, v26);
  v51 = v19;
  v31 = (uint64_t)v6;
  v32 = v26;
  if (v30 != 1)
  {
    v33 = v27;
    v34 = v48;
    sub_100014A7C(v31, v48, &qword_100499170);
    if (v29((char *)v28, 1, v26) != 1)
    {
      v35 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v47, v28, v26);
      v36 = sub_100006924(&qword_10049DB90, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35, v26, v36);
      v38 = *(void (**)(char *, uint64_t))(v33 + 8);
      v38(v35, v32);
      sub_100008758((uint64_t)v9, &qword_100499170);
      sub_100008758(v25, &qword_100499170);
      v38((char *)v34, v32);
      sub_100008758(v31, &qword_100499170);
      if ((v37 & 1) != 0)
        goto LABEL_13;
LABEL_14:
      v40 = 0;
      v39 = 1;
      goto LABEL_15;
    }
    sub_100008758((uint64_t)v9, &qword_100499170);
    sub_100008758(v25, &qword_100499170);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v26);
LABEL_11:
    sub_100008758(v31, (uint64_t *)&unk_10049DB80);
    goto LABEL_14;
  }
  sub_100008758((uint64_t)v9, &qword_100499170);
  sub_100008758(v25, &qword_100499170);
  if (v29((char *)v28, 1, v26) != 1)
    goto LABEL_11;
  sub_100008758(v31, &qword_100499170);
LABEL_13:
  v39 = 0;
  v40 = 1;
LABEL_15:
  v41 = (uint64_t)v51;
  v42 = v54;
  sub_100014A7C((uint64_t)v51, v54, &qword_10049E700);
  v43 = v55;
  sub_100014A7C(v42, v55, &qword_10049E700);
  v44 = v43 + *(int *)(sub_100005574((uint64_t *)&unk_10049E710) + 48);
  *(_QWORD *)v44 = 0;
  *(_BYTE *)(v44 + 8) = v40;
  *(_BYTE *)(v44 + 9) = v39;
  sub_100008758(v41, &qword_10049E700);
  return sub_100008758(v42, &qword_10049E700);
}

uint64_t sub_1002F8C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  double *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;

  v95 = a2;
  sub_100005574(&qword_10049C6C8);
  __chkstk_darwin();
  v92 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v93 = *(_QWORD *)(v4 - 8);
  v94 = v4;
  __chkstk_darwin();
  v91 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Image.Scale(0);
  v86 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin();
  v85 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for Text.Suffix(0);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin();
  v73 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100005574(&qword_10049E720);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin();
  v74 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100005574(&qword_10049E728);
  __chkstk_darwin();
  v75 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100005574(&qword_10049E730);
  __chkstk_darwin();
  v79 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100005574(&qword_10049E738);
  __chkstk_darwin();
  v87 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v89 = (uint64_t)&v72 - v12;
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E740);
  __chkstk_darwin();
  v84 = (uint64_t)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (double *)((char *)&v72 - v16);
  type metadata accessor for PlaylistCurators.View(0);
  sub_1002BE410((uint64_t)v14);
  v18 = sub_1003030A8((uint64_t)v14);
  v19 = sub_100008758((uint64_t)v14, &qword_100499170);
  *(_QWORD *)v17 = static VerticalAlignment.center.getter(v19);
  v17[1] = v18;
  *((_BYTE *)v17 + 16) = 0;
  v76 = v17;
  sub_100005574(&qword_10049E748);
  v72 = a1;
  sub_1002F93AC(a1);
  v96 = sub_1002F9C10();
  v97 = v20;
  v21 = sub_10024AF7C();
  v96 = Text.init<A>(_:)(&v96, &type metadata for String, v21);
  v97 = v22;
  v98 = v23 & 1;
  v99 = v24;
  v25 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v26 = *v25;
  v27 = v25[1];
  swift_bridgeObjectRetain();
  v28 = Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  swift_retain(v28);
  v30 = Text.init(_:)(v29);
  v32 = v31;
  v34 = v33 & 1;
  v36 = static Text.+ infix(_:_:)(v26, v27, 0, _swiftEmptyArrayStorage, v30, v31, v34, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_10003B4D0(v30, v32, v34);
  swift_bridgeObjectRelease();
  swift_release(v28);
  swift_bridgeObjectRelease();
  v43 = v73;
  static Text.Suffix.alwaysVisible(_:)(v36, v38, v42, v40);
  sub_10003B4D0(v36, v38, v42);
  swift_bridgeObjectRelease();
  v44 = v74;
  View.textSuffix(_:)(v43, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v80);
  sub_10003B4D0(v96, v97, v98);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_10039D6B0);
  v46 = v81;
  v47 = (uint64_t)v75;
  v48 = v44;
  v49 = v44;
  v50 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v48, v83);
  v51 = v47 + *(int *)(v77 + 36);
  *(_QWORD *)v51 = KeyPath;
  *(_QWORD *)(v51 + 8) = 1;
  *(_BYTE *)(v51 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v50);
  v53 = v85;
  v52 = v86;
  v54 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, enum case for Image.Scale.small(_:), v88);
  v55 = swift_getKeyPath(&unk_10039D6E0);
  v56 = (uint64_t)v79;
  v57 = (uint64_t *)&v79[*(int *)(v82 + 36)];
  v58 = sub_100005574(&qword_10049E750);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v57 + *(int *)(v58 + 28), v53, v54);
  *v57 = v55;
  sub_100014A7C(v47, v56, &qword_10049E728);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  sub_100008758(v47, &qword_10049E728);
  v59 = v91;
  PlaylistCurators.View.fontTextStyle.getter(v91);
  v60 = type metadata accessor for Font.Design(0);
  v61 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v92, 1, 1, v60);
  v62 = static Font.system(_:design:weight:)(v59, v61, 0, 1);
  sub_100008758(v61, &qword_10049C6C8);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v59, v94);
  v63 = swift_getKeyPath(&unk_10039D518);
  v64 = v87;
  sub_100014A7C(v56, v87, &qword_10049E730);
  v65 = (uint64_t *)(v64 + *(int *)(v90 + 36));
  *v65 = v63;
  v65[1] = v62;
  sub_100008758(v56, &qword_10049E730);
  v66 = v89;
  sub_1000149A8(v64, v89, &qword_10049E738);
  v67 = (uint64_t)v76;
  v68 = v84;
  sub_100014A7C((uint64_t)v76, v84, &qword_10049E740);
  sub_100014A7C(v66, v64, &qword_10049E738);
  v69 = v95;
  sub_100014A7C(v68, v95, &qword_10049E740);
  v70 = sub_100005574(&qword_10049E758);
  sub_100014A7C(v64, v69 + *(int *)(v70 + 48), &qword_10049E738);
  sub_100008758(v66, &qword_10049E738);
  sub_100008758(v67, &qword_10049E740);
  sub_100008758(v64, &qword_10049E738);
  return sub_100008758(v68, &qword_10049E740);
}

uint64_t sub_1002F93AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  size_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  size_t v28;

  v2 = *(_QWORD *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) >= 3uLL)
    v5 = 3;
  else
    v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v7 = swift_bridgeObjectRetain();
  v9 = swift_unknownObjectRetain_n(v7, 2, v8);
  v10 = (_QWORD *)swift_dynamicCastClass(v9, v6);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    v10 = _swiftEmptyArrayStorage;
  }
  v11 = v10[2];
  swift_release(v10);
  if (v11 == v5)
  {
    v12 = (_QWORD *)swift_dynamicCastClass(v4, v6);
    if (!v12)
    {
      swift_bridgeObjectRelease();
      v12 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistCurators.Curator(0) - 8) + 80);
    sub_100245084(v4, v4 + ((v25 + 32) & ~v25), 0, (2 * v5) | 1);
    v12 = v26;
  }
  swift_bridgeObjectRelease();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_10037838C(v13);
  swift_release(v12);
  v28 = v14;
  KeyPath = swift_getKeyPath(&unk_10039D710);
  sub_100082248(a1, (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.View);
  v16 = *(unsigned __int8 *)(v2 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = swift_allocObject(&unk_100462C80, v17 + v3, v16 | 7);
  *(_QWORD *)(v18 + 16) = v12;
  sub_1000648AC((uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for PlaylistCurators.View);
  v19 = swift_allocObject(&unk_100462CA8, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100303448;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = sub_100005574(&qword_10049E760);
  v21 = sub_100005574(&qword_10049E768);
  v22 = sub_10002FFB8(&qword_10049E770, &qword_10049E760, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_10030351C();
  return ForEach<>.init(_:id:content:)(&v28, KeyPath, sub_1003034C4, v19, v20, v21, v22, &protocol witness table for Int, v23);
}

uint64_t sub_1002F9610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  uint64_t v15;

  sub_100005574(&qword_10049E788);
  result = __chkstk_darwin();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = __OFSUB__(v11, a1);
  v13 = v11 - a1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    v14 = (double)v13;
    sub_1002F96E8(a2, (uint64_t)v10);
    sub_100014A7C((uint64_t)v10, a4, &qword_10049E788);
    *(double *)(a4 + *(int *)(sub_100005574(&qword_10049E768) + 36)) = v14;
    return sub_100008758((uint64_t)v10, &qword_10049E788);
  }
  return result;
}

uint64_t sub_1002F96E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[3];
  double v53;
  char v54;
  double v55;
  char v56;
  uint64_t v57;
  __int16 v58;

  v43 = a1;
  v51 = a2;
  v50 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v45 = (uint64_t (**)(uint64_t))((char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v44 = *(_QWORD *)(v3 - 8);
  v4 = v3;
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049C500);
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  __chkstk_darwin();
  v41 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100005574(&qword_10049E7B8);
  __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100005574(&qword_10049E7A8);
  __chkstk_darwin();
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100005574(&qword_10049E798);
  __chkstk_darwin();
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.View(0);
  sub_1002BE410((uint64_t)v20);
  v21 = sub_100303724((uint64_t)v20);
  sub_100008758((uint64_t)v20, &qword_100499170);
  sub_1002F8158(v10);
  v22 = sub_100005574(&qword_10049F810);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 7, 10, v22);
  v53 = v21;
  v54 = 0;
  v55 = v21;
  v56 = 0;
  v57 = 0;
  v58 = 257;
  v23 = v44;
  v24 = v4;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v4);
  v25 = v41;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v53, (uint64_t)v6, v41);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  sub_100006798((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F7D0);
  v26 = v45;
  v27 = (char *)v45 + *(int *)(v50 + 20);
  *(_QWORD *)v27 = swift_getKeyPath(&unk_10039D730);
  v28 = sub_100005574(&qword_100498E38);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  *v26 = sub_1002FA268;
  v26[1] = 0;
  sub_1000648AC((uint64_t)v26, (uint64_t)&v14[*(int *)(v42 + 36)], type metadata accessor for PlaceholderStyleModifier);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v14, v25, v49);
  v30 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v52, *(_QWORD *)&v21, 0, *(_QWORD *)&v21, 0, v30, v31);
  sub_100014A7C((uint64_t)v14, (uint64_t)v16, &qword_10049E7B8);
  v32 = &v16[*(int *)(v46 + 36)];
  v33 = v52[1];
  *(_OWORD *)v32 = v52[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v52[2];
  sub_100008758((uint64_t)v14, &qword_10049E7B8);
  sub_100014A7C((uint64_t)v16, (uint64_t)v18, &qword_10049E7A8);
  v34 = &v18[*(int *)(v47 + 36)];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  sub_100008758((uint64_t)v16, &qword_10049E7A8);
  if (qword_100498C10 != -1)
    swift_once(&qword_100498C10, sub_1002FA40C);
  v35 = qword_10049DA38;
  v36 = qword_10049DA40;
  v37 = byte_10049DA48;
  v38 = v51;
  sub_100014A7C((uint64_t)v18, v51, &qword_10049E798);
  v39 = v38 + *(int *)(sub_100005574(&qword_10049E788) + 36);
  *(_QWORD *)v39 = v35;
  *(_QWORD *)(v39 + 8) = v36;
  *(_BYTE *)(v39 + 16) = v37;
  *(_QWORD *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 32) = 0;
  *(_BYTE *)(v39 + 40) = 1;
  swift_retain(v35);
  return sub_100008758((uint64_t)v18, &qword_10049E798);
}

uint64_t sub_1002F9C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v27 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    sub_100082248(v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    v17 = v16 - 1;
    if (v16 == 1)
    {
      v18 = *v14;
      swift_bridgeObjectRetain();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 2);
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
      v20 = *v14;
      v21 = (void *)v14[1];
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v20;
      v22._object = v21;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 2106912;
      v23._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
      v28 = v17;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v24._countAndFlagsBits = 0x7328726568744F20;
      v24._object = (void *)0xE900000000000029;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
      String.LocalizationValue.init(stringInterpolation:)(v11);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v25 = qword_1004A2F90;
      static Locale.current.getter((id)qword_1004A2F90);
      v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v25, v3, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    sub_100006798((uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    return v18;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F5020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 878, 0);
    __break(1u);
  }
  return result;
}

uint64_t PlaylistCurators.View.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574((uint64_t *)&unk_10049DB80);
  __chkstk_darwin();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v23 - v10;
  __chkstk_darwin();
  v13 = (char *)&v23 - v12;
  type metadata accessor for PlaylistCurators.View(0);
  sub_1002BE410((uint64_t)v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
  v14 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100014A7C((uint64_t)v13, (uint64_t)v7, &qword_100499170);
  sub_100014A7C((uint64_t)v11, v14, &qword_100499170);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v15((uint64_t)v7, 1, v1) != 1)
  {
    sub_100014A7C((uint64_t)v7, (uint64_t)v9, &qword_100499170);
    if (v15(v14, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v14, v1);
      v16 = sub_100006924(&qword_10049DB90, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v4, v1, v16);
      v18 = *(void (**)(char *, uint64_t))(v2 + 8);
      v18(v4, v1);
      sub_100008758((uint64_t)v11, &qword_100499170);
      sub_100008758((uint64_t)v13, &qword_100499170);
      v18(v9, v1);
      sub_100008758((uint64_t)v7, &qword_100499170);
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v19 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
      goto LABEL_10;
    }
    sub_100008758((uint64_t)v11, &qword_100499170);
    sub_100008758((uint64_t)v13, &qword_100499170);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
LABEL_6:
    sub_100008758((uint64_t)v7, (uint64_t *)&unk_10049DB80);
    goto LABEL_9;
  }
  sub_100008758((uint64_t)v11, &qword_100499170);
  sub_100008758((uint64_t)v13, &qword_100499170);
  if (v15(v14, 1, v1) != 1)
    goto LABEL_6;
  sub_100008758((uint64_t)v7, &qword_100499170);
LABEL_8:
  v19 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
LABEL_10:
  v20 = *v19;
  v21 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, v20, v21);
}

uint64_t sub_1002FA268(uint64_t a1)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = Color.init(_:)(v2);
  return sub_100129EBC((uint64_t)v4, a1 + 40, (uint64_t *)&unk_10049E850);
}

void sub_1002FA2DC()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_1002FA380;
  v4 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100234A18;
  v3[3] = &unk_100462CC0;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v4);
  qword_10049DA30 = (uint64_t)v2;
}

id sub_1002FA380(void *a1)
{
  void *v2;
  char **v3;
  id v4;

  if (objc_msgSend(a1, "userInterfaceIdiom") == (id)6)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
  }
  else
  {
    v4 = objc_msgSend(a1, "userInterfaceStyle");
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
    if (v4 == (id)2)
      v3 = &selRef_blackColor;
  }
  return objc_msgSend(v2, *v3);
}

uint64_t sub_1002FA40C()
{
  uint64_t result;

  if (qword_100498C08 != -1)
    swift_once(&qword_100498C08, sub_1002FA2DC);
  result = Color.init(uiColor:)((id)qword_10049DA30);
  qword_10049DA38 = result;
  qword_10049DA40 = 0x3FF0000000000000;
  byte_10049DA48 = 1;
  return result;
}

uint64_t PlaylistCurators.ViewController.configuration.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + direct field offset for PlaylistCurators.ViewController.configuration, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t PlaylistCurators.ViewController.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, _QWORD);
  uint64_t *v7;
  uint64_t v8;
  _BYTE v10[32];
  _BYTE v11[24];

  v3 = (uint64_t *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration);
  swift_beginAccess(v1 + direct field offset for PlaylistCurators.ViewController.configuration, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_bridgeObjectRelease(v4);
  v5 = *v3;
  swift_bridgeObjectRetain();
  v6 = (uint64_t (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v10);
  v8 = *v7;
  *v7 = v5;
  swift_bridgeObjectRelease(v8);
  return v6(v10, 0);
}

void (*PlaylistCurators.ViewController.configuration.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = direct field offset for PlaylistCurators.ViewController.configuration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1002FA598;
}

void sub_1002FA598(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t *v6;
  uint64_t v7;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v3[4] + v3[5]);
    swift_bridgeObjectRetain();
    v5 = (void (*)(_QWORD *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v3);
    v7 = *v6;
    *v6 = v4;
    swift_bridgeObjectRelease(v7);
    v5(v3, 0);
  }
  free(v3);
}

uint64_t PlaylistCurators.ViewController.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  v8 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v8[direct field offset for PlaylistCurators.ViewController.configuration] = a1;
  v9 = (_QWORD *)((char *)v5 + *(int *)(v3 + 20));
  *v9 = swift_getKeyPath(&unk_10039CDF8);
  v10 = sub_100005574(&qword_100498E70);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  *v5 = a1;
  sub_1000648AC((uint64_t)v5, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v7);
}

uint64_t PlaylistCurators.ViewController.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __chkstk_darwin();
  v7 = (char *)&v11 - v6;
  *(_QWORD *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration) = a1;
  v8 = (_QWORD *)((char *)v4 + *(int *)(v5 + 20));
  *v8 = swift_getKeyPath(&unk_10039CDF8);
  v9 = sub_100005574(&qword_100498E70);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  *v4 = a1;
  sub_1000648AC((uint64_t)v4, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v7);
}

void sub_1002FA7EC()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/CollaborationUI.swift", 33, 2, 915, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(rootView:)", 15, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_1002FA89C()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id PlaylistCurators.ViewController.__deallocating_deinit()
{
  return sub_10029A7E0(type metadata accessor for PlaylistCurators.ViewController);
}

uint64_t sub_1002FA8B8(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id sub_1002FAB44()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for ClearBackground.Controller);
}

id sub_1002FAB50()
{
  type metadata accessor for ClearBackground.Controller();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
}

uint64_t sub_1002FAB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003028B4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002FABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003028B4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002FAC18(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003028B4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_1002FAC3C(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  *a4 = v9;
}

uint64_t sub_1002FACB4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_bridgeObjectRetain();
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1002FAD28(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t result;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  id v23;
  Swift::Int v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease();

      v31 = v9;
      v11 = sub_1000087DC(0, (unint64_t *)&qword_100499B48, MSVLyricsAgent_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_1002FB4AC(v7, result + 1);
    v32 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v29 = v25 + 1;
      v30 = v8;
      sub_1002FB8B8(v29, (uint64_t *)&unk_10049EDA0);
      v26 = v32;
    }
    else
    {
      v26 = v24;
      v27 = v8;
    }
    sub_1002FBEC0((uint64_t)v8, v26);
    *v3 = v26;
  }
  else
  {
    v13 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v14 = NSObject._rawHashValue(seed:)(v13);
    v15 = -1 << *(_BYTE *)(v6 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      sub_1000087DC(0, (unint64_t *)&qword_100499B48, MSVLyricsAgent_ptr);
      v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
      v18 = static NSObject.== infix(_:_:)(v17, a2);

      if ((v18 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v22 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v16);
        *a1 = (Swift::Int)v22;
        v23 = v22;
        return 0;
      }
      v19 = ~v15;
      while (1)
      {
        v16 = (v16 + 1) & v19;
        if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = static NSObject.== infix(_:_:)(v20, a2);

        if ((v21 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1002FBF40((uint64_t)v8, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_1002FAFCC(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t result;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  void *v22;
  id v23;
  Swift::Int v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease();

      v31 = v9;
      v11 = type metadata accessor for SyncedLyricsLineView();
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_1002FB6B4(v7, result + 1);
    v32 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v29 = v25 + 1;
      v30 = v8;
      sub_1002FB8B8(v29, &qword_10049E6C0);
      v26 = v32;
    }
    else
    {
      v26 = v24;
      v27 = v8;
    }
    sub_1002FBEC0((uint64_t)v8, v26);
    *v3 = v26;
  }
  else
  {
    v13 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v14 = NSObject._rawHashValue(seed:)(v13);
    v15 = -1 << *(_BYTE *)(v6 + 32);
    v16 = v14 & ~v15;
    if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
    {
      type metadata accessor for SyncedLyricsLineView();
      v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
      v18 = static NSObject.== infix(_:_:)(v17, a2);

      if ((v18 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v22 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v16);
        *a1 = (Swift::Int)v22;
        v23 = v22;
        return 0;
      }
      v19 = ~v15;
      while (1)
      {
        v16 = (v16 + 1) & v19;
        if (((*(_QWORD *)(v6 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = static NSObject.== infix(_:_:)(v20, a2);

        if ((v21 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1002FC0E4((uint64_t)v8, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_1002FB250(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100006924((unint64_t *)&unk_10049E650, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v34 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v30 = v3;
    v31 = a1;
    v32 = ~v15;
    v33 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100006924(&qword_10049A0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v33 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v32;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v30;
        a1 = v31;
        v26 = v33;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v25(v34, v6);
    v22(v31, *(_QWORD *)(*v30 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v34;
    v20(v9, v34, v6);
    v35 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002FC278((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v28, v6);
    return 1;
  }
}

Swift::Int sub_1002FB4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100005574((uint64_t *)&unk_10049EDA0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1000087DC(0, (unint64_t *)&qword_100499B48, MSVLyricsAgent_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_1002FB8B8(v16 + 1, (uint64_t *)&unk_10049EDA0);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1002FB6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100005574(&qword_10049E6C0);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for SyncedLyricsLineView();
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_1002FB8B8(v16 + 1, &qword_10049E6C0);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_1002FB8AC(uint64_t a1)
{
  sub_1002FB8B8(a1, (uint64_t *)&unk_10049EDA0);
}

void sub_1002FB8B8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100005574(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    swift_retain(v4);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v12)
          goto LABEL_36;
        v19 = v9[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_36;
          v19 = v9[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v12)
              goto LABEL_36;
            v19 = v9[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v12)
                    goto LABEL_36;
                  v19 = v9[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_1002FBB50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_10049E660);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v40 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v38 = v2;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain(v7);
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = v40[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = v40[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 32);
    v26(v6, v24 + v25 * v19, v4, v15);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_100006924((unint64_t *)&unk_10049E650, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    ((void (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v39)
  {
    v21 = v40[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v38;
  v37 = 1 << *(_BYTE *)(v7 + 32);
  if (v37 > 63)
    bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v40 = -1 << v37;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release(v7);
  *v2 = v9;
}

unint64_t sub_1002FBEC0(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1002FBF40(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1002FB8B8(v9, (uint64_t *)&unk_10049EDA0);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1002FC47C((uint64_t *)&unk_10049EDA0);
      goto LABEL_14;
    }
    sub_1002FC840(v9, (uint64_t *)&unk_10049EDA0);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_1000087DC(0, (unint64_t *)&qword_100499B48, MSVLyricsAgent_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_1002FC0E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1002FB8B8(v9, &qword_10049E6C0);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1002FC47C(&qword_10049E6C0);
      goto LABEL_14;
    }
    sub_1002FC840(v9, &qword_10049E6C0);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for SyncedLyricsLineView();
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_1002FC278(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1002FBB50(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1002FC61C();
      goto LABEL_12;
    }
    sub_1002FCAB4(v12);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100006924((unint64_t *)&unk_10049E650, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100006924(&qword_10049A0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_1002FC47C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_100005574(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_28;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v14)
          goto LABEL_28;
        v21 = *(_QWORD *)(v7 + 8 * v10);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v14)
    goto LABEL_28;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1002FC61C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E660);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release(v6);
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_1002FC840(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::Int v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_100005574(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v31 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  swift_retain(v4);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v12)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v12)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(_QWORD *)(v7 + 40);
    v22 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v23 = NSObject._rawHashValue(seed:)(v21);
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2);
    v3 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1002FCAB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_10049E660);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v36 = v2;
  v37 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  v16 = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_35;
      v22 = *(_QWORD *)(v37 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_35;
        v22 = *(_QWORD *)(v37 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4, v16);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_100006924((unint64_t *)&unk_10049E650, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_35:
    swift_release_n(v8, 2);
    v2 = v36;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1002FCDDC(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      sub_1002FD1E4(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease();
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  type metadata accessor for SyncedLyricsLineView();
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14, a1);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17, a1);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1002FC47C(&qword_10049E6C0);
    v20 = v22;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_1002FD36C(v13);
  *v2 = v22;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1002FCFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100006924((unint64_t *)&unk_10049E650, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v32 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v30 = v3;
    v31 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v33 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100006924(&qword_10049A0C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v32, v6, v21);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v23 = 1;
        a2 = v31;
        v7 = v33;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v23, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v24 = v30;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v30);
    v26 = *v24;
    v34 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1002FC61C();
      v26 = v34;
    }
    v27 = *(_QWORD *)(v26 + 48) + v20;
    v7 = v33;
    a2 = v31;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 32))(v31, v27, v6);
    sub_1002FD50C(v16);
    *v24 = v34;
    swift_bridgeObjectRelease();
    v23 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v23, 1, v6);
}

void sub_1002FD1E4(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  Swift::Int v19;

  v3 = v2;
  swift_bridgeObjectRelease();
  v7 = __CocoaSet.count.getter(a1, v6);
  v8 = swift_unknownObjectRetain(a1);
  v9 = sub_1002FB6B4(v8, v7);
  v19 = v9;
  v10 = *(_QWORD *)(v9 + 40);
  swift_retain(v9);
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v9 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    type metadata accessor for SyncedLyricsLineView();
    v14 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v13);
    v15 = static NSObject.== infix(_:_:)(v14, a2);

    if ((v15 & 1) != 0)
    {
LABEL_6:
      swift_release(v9);
      v9 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v13);
      sub_1002FD36C(v13);
      if ((static NSObject.== infix(_:_:)(a2, v9) & 1) != 0)
      {
        *v3 = v19;
        return;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v13);
        v18 = static NSObject.== infix(_:_:)(v17, a2);

        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v9);
    __break(1u);
  }
  swift_release(v9);
  __break(1u);
}

void sub_1002FD36C(unint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = a1;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
}

void sub_1002FD50C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for Playlist.Collaborator(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v29 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v31 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_100006924((unint64_t *)&unk_10049E650, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        v24 = v21 + v14;
        if (v13 * a1 < v14 || v23 >= v24 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24, 1, v3);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v31 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v6);
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
}

uint64_t sub_1002FD788(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_100005574(&qword_10049EC70);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v3, &qword_10049EC70);
  return EnvironmentValues.symbolRenderingMode.setter(v3);
}

uint64_t sub_1002FD808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1002FD884(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[32];

  v13 = result;
  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    result = swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      if (a3 < 0)
        v18 = a3;
      else
        v18 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      result = swift_bridgeObjectRelease();
      if (v19 <= a2)
      {
        if (v15 >= 1)
        {
          v20 = sub_10002FFB8(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
          swift_bridgeObjectRetain();
          for (i = 0; i != v15; ++i)
          {
            v22 = sub_100005574(a6);
            v23 = (void (*)(_BYTE *, _QWORD))a7(v27, i, a3, v22, v20);
            v25 = *v24;
            swift_retain(*v24);
            v23(v27, 0);
            *(_QWORD *)(v13 + 8 * i) = v25;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_22;
      }
    }
    else
    {
      v16 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16 <= a2)
      {
        v17 = a4(0);
        swift_arrayInitWithCopy(v13, (a3 & 0xFFFFFFFFFFFFFF8) + 32, v16, v17);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL _s11MusicCoreUI16PlaylistCuratorsO7CuratorV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_100499E58);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v28 - v13;
  __chkstk_darwin();
  v16 = (char *)&v28 - v15;
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), result = 0, (v19 & 1) != 0))
  {
    v29 = v7;
    v21 = type metadata accessor for PlaylistCurators.Curator(0);
    sub_100014A7C((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v16, (uint64_t *)&unk_10049F430);
    sub_100014A7C((uint64_t)a2 + *(int *)(v21 + 20), (uint64_t)v14, (uint64_t *)&unk_10049F430);
    v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_100014A7C((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_10049F430);
    sub_100014A7C((uint64_t)v14, v22, (uint64_t *)&unk_10049F430);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v23((uint64_t)v10, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
      sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
      if (v23(v22, 1, v4) == 1)
      {
        sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F430);
        return 1;
      }
    }
    else
    {
      sub_100014A7C((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_10049F430);
      if (v23(v22, 1, v4) != 1)
      {
        v24 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
        v25 = sub_100006924(&qword_10049E860, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v24, v4, v25);
        v27 = *(void (**)(char *, uint64_t))(v5 + 8);
        v27(v24, v4);
        sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
        sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
        v27(v12, v4);
        sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F430);
        return (v26 & 1) != 0;
      }
      sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
      sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    sub_100008758((uint64_t)v10, &qword_100499E58);
    return 0;
  }
  return result;
}

uint64_t sub_1002FDD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, _QWORD *);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  __n128 v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  _BYTE v76[24];
  _QWORD v77[16];

  v3 = v2;
  v69 = a2;
  v70 = a1;
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v72 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049E690);
  __chkstk_darwin();
  v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Playlist(0);
  v74 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v68 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v6;
  __chkstk_darwin();
  v73 = (char *)&v63 - v7;
  v67 = (_QWORD *)sub_100005574(&qword_10049DAA0);
  v66 = *(v67 - 1);
  __chkstk_darwin();
  v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100005574(&qword_10049DA80);
  v10 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_10049DA68);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v77[0] = _swiftEmptyArrayStorage;
  v18 = sub_100005574(&qword_10049DA50);
  Published.init(initialValue:)(v77, v18);
  v19 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  v19(v17, v16, v13);
  v20 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators;
  v77[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(v77, v18);
  v19(v20, v16, v13);
  v21 = v64;
  v22 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v77[0] = &_swiftEmptySetSingleton;
  v23 = sub_100005574(&qword_10049DA58);
  Published.init(initialValue:)(v77, v23);
  v24 = v22;
  v25 = (uint64_t)v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v24, v12, v63);
  v26 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL;
  LOBYTE(v77[0]) = 0;
  Published.init(initialValue:)(v77, &type metadata for Bool);
  v27 = *(void (**)(uint64_t, char *, _QWORD *))(v66 + 32);
  v28 = v67;
  v27(v26, v9, v67);
  v29 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss;
  LOBYTE(v77[0]) = 0;
  Published.init(initialValue:)(v77, &type metadata for Bool);
  v27(v29, v9, v28);
  v30 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity;
  static ApplicationCapabilities.shared.getter((uint64_t)v77);
  sub_1000BC0D0(v77);
  v76[0] = BYTE1(v77[0]);
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v27(v30, v9, v28);
  v31 = v69;
  v32 = v3
      + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  v33 = sub_100005574((uint64_t *)&unk_10049F7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *(_QWORD *)(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = 0;
  v66 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver) = 0;
  v34 = v70;
  *(_QWORD *)(v3 + 16) = v70;
  v36 = v73;
  v35 = v74;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v37(v73, v31, v21);
  v38 = swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist, v76, 33, 0);
  v39 = v68;
  v67 = v37;
  ((void (*)(char *, char *, uint64_t, __n128))v37)(v68, v36, v21, v38);
  swift_retain(v34);
  Published.init(initialValue:)(v39, v21);
  v40 = *(void (**)(char *, uint64_t))(v35 + 8);
  v40(v36, v21);
  v41 = swift_endAccess(v76);
  v42 = v31;
  Playlist.collaboration.getter(v41);
  v43 = type metadata accessor for Playlist.Collaboration(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v25, 1, v43) == 1)
  {
    sub_100008758(v25, &qword_10049E690);
    v45 = 0;
  }
  else
  {
    v45 = Playlist.Collaboration.isOpenInvitation.getter();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v25, v43);
  }
  swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen, v76, 33, 0);
  v75 = v45 & 1;
  Published.init(initialValue:)(&v75, &type metadata for Bool);
  swift_endAccess(v76);
  v46 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  v47 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v48 = swift_allocObject(&unk_100462FC8, 24, 7);
  swift_weakInit(v48 + 16, v3);
  v49 = type metadata accessor for NotificationObserver();
  swift_allocObject(v49, 64, 7);
  swift_retain(v47);
  v50 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v46, v47, 1, 1, (uint64_t)sub_100304D14, v48);
  v51 = *(_QWORD *)(v3 + v66);
  *(_QWORD *)(v3 + v66) = v50;
  swift_release(v51);
  v52 = type metadata accessor for TaskPriority(0);
  v53 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v72, 1, 1, v52);
  v54 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v67)(v73, v31, v21);
  v55 = v74;
  v56 = *(unsigned __int8 *)(v74 + 80);
  v57 = (v56 + 32) & ~v56;
  v58 = (v71 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = swift_allocObject(&unk_100462FF0, v58 + 8, v56 | 7);
  *(_QWORD *)(v59 + 16) = 0;
  *(_QWORD *)(v59 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v59 + v57, v54, v21);
  *(_QWORD *)(v59 + v58) = v3;
  swift_retain(v3);
  v60 = sub_100283A94(v53, (uint64_t)&unk_10049ED00, v59);
  v61 = swift_release(v60);
  ((void (*)(uint64_t, uint64_t, __n128))v40)(v42, v21, v61);
  return v3;
}

uint64_t type metadata accessor for Collaboration.Management.View(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049DFC0, (uint64_t)&nominal type descriptor for Collaboration.Management.View);
}

uint64_t sub_1002FE43C()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1002FE45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FD808(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_1002FE480()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1002FE4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FD808(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t type metadata accessor for Collaboration.Management.Model(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049DBD0, (uint64_t)&nominal type descriptor for Collaboration.Management.Model);
}

uint64_t sub_1002FE4D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002EA680(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1002FE4E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049DB28;
  if (!qword_10049DB28)
  {
    v1 = sub_100005600(&qword_10049DB20);
    sub_10002FFB8(&qword_10049DB30, &qword_10049DB38, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_10002FFB8(&qword_10049DB40, &qword_10049DB48, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049DB28);
  }
  return result;
}

void sub_1002FE57C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039CDB0, (uint64_t)&unk_10039CDD8, a2);
}

uint64_t sub_1002FE5A0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039CDB0, (uint64_t)&unk_10039CDD8);
}

uint64_t sub_1002FE5C8(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_1002F2F8C(a1, a2);
}

uint64_t type metadata accessor for Collaboration.Management.ViewController(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049E030, (uint64_t)&nominal type descriptor for Collaboration.Management.ViewController);
}

void sub_1002FE628()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v8;
  id v9;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
    v3 = 512.0;
  else
    v3 = 540.0;
  if (v2 == (id)6)
    v4 = 620.0;
  else
    v4 = 700.0;
  objc_msgSend(v0, "preferredContentSize");
  if (v3 != v6 || v4 != v5)
  {
    objc_msgSend(v0, "setPreferredContentSize:", v3, v4);
    v8 = objc_msgSend(v0, "navigationController");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setPreferredContentSize:", v3, v4);

    }
  }
}

uint64_t type metadata accessor for PlaylistCurators.Curator(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049E138, (uint64_t)&nominal type descriptor for PlaylistCurators.Curator);
}

uint64_t type metadata accessor for PlaylistCurators.View(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049E1D8, (uint64_t)&nominal type descriptor for PlaylistCurators.View);
}

uint64_t type metadata accessor for PlaylistCurators.ViewController(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049E218, (uint64_t)&nominal type descriptor for PlaylistCurators.ViewController);
}

uint64_t sub_1002FE78C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Management.View.body>>, 1);
}

uint64_t sub_1002FE79C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaylistCurators.View.body>>, 1);
}

uint64_t sub_1002FE7AC(uint64_t a1)
{
  uint64_t result;

  result = sub_100006924(&qword_10049DBA0, type metadata accessor for PlaylistCurators.View, (uint64_t)&protocol conformance descriptor for PlaylistCurators.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Management()
{
  return &type metadata for Collaboration.Management;
}

uint64_t sub_1002FE7F8()
{
  return type metadata accessor for Collaboration.Management.Model(0);
}

void sub_1002FE800(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  const char *v24;

  v12 = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100301AA0(319, &qword_10049DBE0, &qword_10049DA50, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v13 = *(_QWORD *)(v2 - 8) + 64;
    v14 = v13;
    sub_100301AA0(319, &qword_10049DBE8, &qword_10049DA58, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v15 = *(_QWORD *)(v4 - 8) + 64;
      sub_1002CA7E8(319, &qword_10049DBF0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v7 <= 0x3F)
      {
        v16 = *(_QWORD *)(v6 - 8) + 64;
        sub_1002FE958();
        if (v9 <= 0x3F)
        {
          v17 = *(_QWORD *)(v8 - 8) + 64;
          v18 = v17;
          v19 = v17;
          v20 = v17;
          sub_100301AA0(319, qword_10049DC00, (uint64_t *)&unk_10049F7D0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v11 <= 0x3F)
          {
            v21 = *(_QWORD *)(v10 - 8) + 64;
            v22 = "\b";
            v23 = "\b";
            v24 = "\b";
            swift_updateClassMetadata2(a1, 256, 13, &v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_1002FE958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_10049DBF8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_10049DBF8);
  }
}

uint64_t *_s10ManagementO4ViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  id v50;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v7);
    v11 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v15 = *v10;
      *v9 = *v10;
      swift_retain(v15);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v16 = a3[6];
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v23 = a3[7];
    v24 = (uint64_t *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = 1;
    }
    else
    {
      v29 = *v25;
      *v24 = *v25;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v28);
    v30 = a3[8];
    v31 = a3[9];
    v32 = (uint64_t *)((char *)v4 + v30);
    v33 = (char *)a2 + v30;
    v34 = *(void **)v33;
    v35 = *((_QWORD *)v33 + 1);
    *v32 = *(_QWORD *)v33;
    v32[1] = v35;
    v36 = (char *)v4 + v31;
    v37 = (char *)a2 + v31;
    *v36 = *v37;
    v38 = *((_QWORD *)v37 + 1);
    *((_QWORD *)v36 + 1) = v38;
    v39 = a3[10];
    v40 = a3[11];
    v41 = (char *)v4 + v39;
    v42 = (char *)a2 + v39;
    *v41 = *v42;
    v43 = *((_QWORD *)v42 + 1);
    *((_QWORD *)v41 + 1) = v43;
    v44 = (char *)v4 + v40;
    v45 = (char *)a2 + v40;
    *v44 = *v45;
    v46 = *((_QWORD *)v45 + 1);
    *((_QWORD *)v44 + 1) = v46;
    v47 = a3[12];
    v48 = (char *)v4 + v47;
    v49 = (char *)a2 + v47;
    *v48 = *v49;
    v14 = *((_QWORD *)v49 + 1);
    *((_QWORD *)v48 + 1) = v14;
    v50 = v34;
    swift_retain(v35);
    swift_retain(v38);
    swift_retain(v43);
    swift_retain(v46);
  }
  swift_retain(v14);
  return v4;
}

double _s10ManagementO4ViewVwxx(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)(a1 + a2[6]);
  v8 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(a1 + a2[7]);
  v11 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = a1 + a2[8];

  swift_release(*(_QWORD *)(v13 + 8));
  swift_release(*(_QWORD *)(a1 + a2[9] + 8));
  swift_release(*(_QWORD *)(a1 + a2[10] + 8));
  swift_release(*(_QWORD *)(a1 + a2[11] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[12] + 8)).n128_u64[0];
  return result;
}

_QWORD *_s10ManagementO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  id v49;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = 1;
  }
  else
  {
    v27 = *v23;
    *v22 = *v23;
    swift_retain(v27);
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v22, v24, v26);
  v28 = a3[8];
  v29 = a3[9];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (char *)a2 + v28;
  v32 = *(void **)v31;
  v33 = *((_QWORD *)v31 + 1);
  *v30 = *(_QWORD *)v31;
  v30[1] = v33;
  v34 = (char *)a1 + v29;
  v35 = (char *)a2 + v29;
  *v34 = *v35;
  v36 = *((_QWORD *)v35 + 1);
  *((_QWORD *)v34 + 1) = v36;
  v37 = a3[10];
  v38 = a3[11];
  v39 = (char *)a1 + v37;
  v40 = (char *)a2 + v37;
  *v39 = *v40;
  v41 = *((_QWORD *)v40 + 1);
  *((_QWORD *)v39 + 1) = v41;
  v42 = (char *)a1 + v38;
  v43 = (char *)a2 + v38;
  *v42 = *v43;
  v44 = *((_QWORD *)v43 + 1);
  *((_QWORD *)v42 + 1) = v44;
  v45 = a3[12];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  *v46 = *v47;
  v48 = *((_QWORD *)v47 + 1);
  *((_QWORD *)v46 + 1) = v48;
  v49 = v32;
  swift_retain(v33);
  swift_retain(v36);
  swift_retain(v41);
  swift_retain(v44);
  swift_retain(v48);
  return a1;
}

_QWORD *_s10ManagementO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_100008758((uint64_t)a1 + v8, &qword_10049F780);
    v11 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    sub_100008758((uint64_t)a1 + v15, &qword_100498E60);
    v18 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      v21 = *v17;
      *v16 = *v17;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v22 = a3[7];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    sub_100008758((uint64_t)a1 + v22, &qword_100498E68);
    v25 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = 1;
    }
    else
    {
      v28 = *v24;
      *v23 = *v24;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v27);
  }
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(void **)((char *)a1 + v29);
  v33 = *(void **)((char *)a2 + v29);
  *v30 = v33;
  v34 = v33;

  v35 = v30[1];
  v36 = *((_QWORD *)v31 + 1);
  v30[1] = v36;
  swift_retain(v36);
  swift_release(v35);
  v37 = a3[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *v38 = *v39;
  v40 = *((_QWORD *)v38 + 1);
  v41 = *((_QWORD *)v39 + 1);
  *((_QWORD *)v38 + 1) = v41;
  swift_retain(v41);
  swift_release(v40);
  v42 = a3[10];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  *v43 = *v44;
  v45 = *((_QWORD *)v43 + 1);
  v46 = *((_QWORD *)v44 + 1);
  *((_QWORD *)v43 + 1) = v46;
  swift_retain(v46);
  swift_release(v45);
  v47 = a3[11];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *v48 = *v49;
  v50 = *((_QWORD *)v48 + 1);
  v51 = *((_QWORD *)v49 + 1);
  *((_QWORD *)v48 + 1) = v51;
  swift_retain(v51);
  swift_release(v50);
  v52 = a3[12];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  *v53 = *v54;
  v55 = *((_QWORD *)v53 + 1);
  v56 = *((_QWORD *)v54 + 1);
  *((_QWORD *)v53 + 1) = v56;
  swift_retain(v56);
  swift_release(v55);
  return a1;
}

_OWORD *_s10ManagementO4ViewVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *_s10ManagementO4ViewVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_100008758((uint64_t)a1 + v8, &qword_10049F780);
    v11 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_100008758((uint64_t)a1 + v13, &qword_100498E60);
    v16 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    sub_100008758((uint64_t)a1 + v18, &qword_100498E68);
    v21 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  v23 = a3[8];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = *(void **)((char *)a1 + v23);
  *v24 = *v25;

  v27 = v24[1];
  v24[1] = v25[1];
  swift_release(v27);
  v28 = a3[9];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  *v29 = *v30;
  v31 = *((_QWORD *)v29 + 1);
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_release(v31);
  v32 = a3[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  v35 = *((_QWORD *)v33 + 1);
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_release(v35);
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *v37 = *v38;
  v39 = *((_QWORD *)v37 + 1);
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_release(v39);
  v40 = a3[12];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  *v41 = *v42;
  v43 = *((_QWORD *)v41 + 1);
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_release(v43);
  return a1;
}

uint64_t _s10ManagementO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FF748);
}

uint64_t sub_1002FF748(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049DF50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10049DF58);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_100005574(&qword_10049DF60);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s10ManagementO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FF824);
}

uint64_t sub_1002FF824(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049DF50);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10049DF58);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_100005574(&qword_10049DF60);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1002FF8F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  v8[0] = &unk_10039CFD8;
  sub_1002CA7E8(319, (unint64_t *)&qword_10049DFD0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002CA7E8(319, &qword_10049DFD8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1002CA7E8(319, (unint64_t *)&unk_10049DFE0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_10039CFF0;
        v8[5] = &unk_10039CFF0;
        v8[6] = &unk_10039CFF0;
        v8[7] = &unk_10039CFF0;
        v8[8] = &unk_10039CFF0;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1002FF9F4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + class metadata base offset for Collaboration.Management.ViewController);
}

uint64_t sub_1002FFA30()
{
  return type metadata accessor for Collaboration.Management.ViewController(0);
}

ValueMetadata *type metadata accessor for PlaylistCurators()
{
  return &type metadata for PlaylistCurators;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.Curator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v13);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Artwork(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = sub_100005574((uint64_t *)&unk_10049F430);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PlaylistCurators.Curator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FFF90);
}

uint64_t sub_1002FFF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574((uint64_t *)&unk_10049F430);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030001C);
}

uint64_t sub_10030001C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574((uint64_t *)&unk_10049F430);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100300094(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10039CFD8;
  sub_1002CA7E8(319, &qword_10049CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    v9 = sub_100005574(&qword_100498E70);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100005574(&qword_100499170);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v14 = v7;
      v15 = v9;
      v16 = 1;
    }
    else
    {
      v13 = *v8;
      *v7 = *v8;
      swift_retain(v13);
      v14 = v7;
      v15 = v9;
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v15, v16);
  }
  return a1;
}

void destroy for PlaylistCurators.View(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = sub_100005574(&qword_100498E70);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
}

_QWORD *initializeWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  v7 = sub_100005574(&qword_100498E70);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100005574(&qword_100499170);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      v11 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(v5, v6, v8);
      v11 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
  }
  else
  {
    v12 = *v6;
    *v5 = *v6;
    swift_retain(v12);
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v11);
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_100008758((uint64_t)a1 + v6, &qword_100498E70);
    v9 = sub_100005574(&qword_100498E70);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100005574(&qword_100499170);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v7, v8, v10);
        v13 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      v14 = *v8;
      *v7 = *v8;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
  }
  return a1;
}

_QWORD *initializeWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100005574(&qword_100498E70);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100005574(&qword_100499170);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_100008758((uint64_t)a1 + v6, &qword_100498E70);
    v9 = sub_100005574(&qword_100498E70);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100005574(&qword_100499170);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100300794);
}

uint64_t sub_100300794(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049E178);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100300820);
}

char *sub_100300820(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10049E178);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_100300898(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100301AA0(319, (unint64_t *)&unk_10049E1E8, &qword_100499170, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for PlaylistCurators.View.Configuration()
{
  return &type metadata for PlaylistCurators.View.Configuration;
}

uint64_t sub_100300938(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + class metadata base offset for PlaylistCurators.ViewController);
}

uint64_t sub_100300984()
{
  return type metadata accessor for PlaylistCurators.ViewController(0);
}

uint64_t type metadata accessor for ClearBackground.Controller()
{
  return objc_opt_self(_TtCV11MusicCoreUIP33_BED032AFC26D7293E5DA491DDAECC51415ClearBackground10Controller);
}

uint64_t sub_1003009AC()
{
  _QWORD v1[4];

  v1[0] = sub_100005600(&qword_10049DB00);
  v1[1] = &type metadata for Bool;
  v1[2] = sub_10002FFB8(&qword_10049DB60, &qword_10049DB00, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_100300A24()
{
  _QWORD v1[2];

  v1[0] = sub_100005600(&qword_10049DB68);
  v1[1] = sub_10002FFB8(&qword_10049DB78, &qword_10049DB68, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.artworkCaching(id:limit:)>>, 1);
}

uint64_t *sub_100300A88(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for Playlist.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = *(uint64_t *)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = v12;
    v13 = (char *)a1 + v11;
    v14 = (char *)a2 + v11;
    *v13 = *v14;
    v15 = *((_QWORD *)v14 + 1);
    *((_QWORD *)v13 + 1) = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48);
    swift_retain(v12);
    v20 = swift_retain(v15);
    if (v19(v18, 1, v7, v20))
    {
      v21 = sub_100005574(&qword_10049B070);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v17, (uint64_t *)v18, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    v23 = *(int *)(sub_100005574(&qword_10049E298) + 28);
    v24 = *(_QWORD *)&v18[v23];
    *(_QWORD *)&v17[v23] = v24;
    v25 = a3[8];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    swift_retain(v24);
    v28 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = 1;
    }
    else
    {
      v31 = *v27;
      *v26 = *v27;
      swift_retain(v31);
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v30);
    v32 = a3[9];
    v33 = (uint64_t *)((char *)a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v34, v35) == 1)
    {
      v36 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v33, v34, v36);
      v37 = v33;
      v38 = v35;
      v39 = 1;
    }
    else
    {
      v40 = *v34;
      *v33 = *v34;
      swift_retain(v40);
      v37 = v33;
      v38 = v35;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
  }
  return a1;
}

double sub_100300CCC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  v7 = swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v8, 1, v4, v7))
    v6(v8, v4);
  v9 = sub_100005574(&qword_10049E298);
  swift_release(*(_QWORD *)(v8 + *(int *)(v9 + 28)));
  v10 = (_QWORD *)(a1 + a2[8]);
  v11 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)(a1 + a2[9]);
  v14 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v13).n128_u64[0];
  }
  return result;
}

uint64_t sub_100300E24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v13 + 8);
  *(_QWORD *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48);
  swift_retain(v11);
  v19 = swift_retain(v14);
  if (v18(v17, 1, v6, v19))
  {
    v20 = sub_100005574(&qword_10049B070);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v16, (uint64_t)v17, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  v21 = *(int *)(sub_100005574(&qword_10049E298) + 28);
  v22 = *(_QWORD *)&v17[v21];
  *(_QWORD *)&v16[v21] = v22;
  v23 = a3[8];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  swift_retain(v22);
  v26 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
  {
    v27 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
    v28 = 1;
  }
  else
  {
    v29 = *v25;
    *v24 = *v25;
    swift_retain(v29);
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v24, v26, v28);
  v30 = a3[9];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
    v35 = v31;
    v36 = v33;
    v37 = 1;
  }
  else
  {
    v38 = *v32;
    *v31 = *v32;
    swift_retain(v38);
    v35 = v31;
    v36 = v33;
    v37 = 0;
  }
  swift_storeEnumTagMultiPayload(v35, v36, v37);
  return a1;
}

uint64_t sub_10030103C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, __n128);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = *(_QWORD *)(a2 + v9);
  v11 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v13 + 8) = v16;
  swift_retain(v16);
  v17 = swift_release(v15);
  v18 = a3[7];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v22 = v21(a1 + v18, 1, v6, v17);
  v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v20, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_6:
    v24 = sub_100005574(&qword_10049B070);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v19, (uint64_t)v20, v6);
LABEL_7:
  v25 = *(int *)(sub_100005574(&qword_10049E298) + 28);
  v26 = *(_QWORD *)&v19[v25];
  v27 = *(_QWORD *)&v20[v25];
  *(_QWORD *)&v19[v25] = v27;
  swift_retain(v27);
  swift_release(v26);
  if (a1 != a2)
  {
    v28 = a3[8];
    v29 = (uint64_t *)(a1 + v28);
    v30 = (uint64_t *)(a2 + v28);
    sub_100008758(a1 + v28, &qword_100498E60);
    v31 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
      v33 = 1;
    }
    else
    {
      v34 = *v30;
      *v29 = *v30;
      swift_retain(v34);
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v29, v31, v33);
    v35 = a3[9];
    v36 = (uint64_t *)(a1 + v35);
    v37 = (uint64_t *)(a2 + v35);
    sub_100008758(a1 + v35, &qword_100498E68);
    v38 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
    {
      v39 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v36, v37, v39);
      v40 = v36;
      v41 = v38;
      v42 = 1;
    }
    else
    {
      v43 = *v37;
      *v36 = *v37;
      swift_retain(v43);
      v40 = v36;
      v41 = v38;
      v42 = 0;
    }
    swift_storeEnumTagMultiPayload(v40, v41, v42);
  }
  return a1;
}

uint64_t sub_1003012E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    v13 = sub_100005574(&qword_10049B070);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = sub_100005574(&qword_10049E298);
  *(_QWORD *)&v11[*(int *)(v14 + 28)] = *(_QWORD *)&v12[*(int *)(v14 + 28)];
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[9];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload(v21, v23, 1);
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1003014D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)v12 = *(_BYTE *)v13;
  v14 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  v15 = swift_release(v14);
  v16 = a3[7];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v20 = v19(a1 + v16, 1, v6, v15);
  v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v18, 1, v6);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
LABEL_6:
    v22 = sub_100005574(&qword_10049B070);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v17, (uint64_t)v18, v6);
LABEL_7:
  v23 = *(int *)(sub_100005574(&qword_10049E298) + 28);
  v24 = *(_QWORD *)&v17[v23];
  *(_QWORD *)&v17[v23] = *(_QWORD *)&v18[v23];
  swift_release(v24);
  if (a1 != a2)
  {
    v25 = a3[8];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_100008758(a1 + v25, &qword_100498E60);
    v28 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v30 = a3[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    sub_100008758(a1 + v30, &qword_100498E68);
    v33 = sub_100005574(&qword_100498E68);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100301764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100301770);
}

uint64_t sub_100301770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100005574(&qword_10049E298);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v16 = sub_100005574(&qword_10049DF58);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[8];
      }
      else
      {
        v8 = sub_100005574(&qword_10049DF60);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[9];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_10030186C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100301878);
}

uint64_t sub_100301878(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Playlist.Collaborator(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = sub_100005574(&qword_10049E298);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = sub_100005574(&qword_10049DF58);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = sub_100005574(&qword_10049DF60);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[9];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s10ManagementO4ViewV19CollaboratorRowViewVMa(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049E2F8, (uint64_t)&_s10ManagementO4ViewV19CollaboratorRowViewVMn);
}

void sub_100301984(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  v2 = type metadata accessor for Playlist.Collaborator(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[2] = &unk_10039CFF0;
    sub_100301AA0(319, (unint64_t *)&unk_10049E308, &qword_10049B070, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1002CA7E8(319, &qword_10049DFD8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1002CA7E8(319, (unint64_t *)&unk_10049DFE0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100301AA0(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = sub_100005600(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *type metadata accessor for ClearBackground()
{
  return &type metadata for ClearBackground;
}

ValueMetadata *_s10ManagementO10QRCodeViewVMa()
{
  return &_s10ManagementO10QRCodeViewVN;
}

ValueMetadata *_s10ManagementO22ActivityViewControllerVMa()
{
  return &_s10ManagementO22ActivityViewControllerVN;
}

ValueMetadata *_s10ManagementO4ViewV5ShareOMa()
{
  return &_s10ManagementO4ViewV5ShareON;
}

uint64_t *sub_100301B3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v7);
    v11 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v15 = *v10;
      *v9 = *v10;
      swift_retain(v15);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v16 = *(int *)(a3 + 28);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = v18[8];
    sub_100301C50(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
  }
  return v4;
}

uint64_t sub_100301C50(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

double sub_100301C5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 16));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  return sub_1002D0564(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_100301CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  swift_retain(v6);
  v10 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_100301C50(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  *(_BYTE *)(v15 + 8) = v18;
  return a1;
}

uint64_t sub_100301DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)(a1 + v8);
    v10 = (uint64_t *)(a2 + v8);
    sub_100008758(a1 + v8, &qword_100498ED8);
    v11 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_100301C50(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  sub_1002D0564(v20, v21);
  return a1;
}

uint64_t sub_100301EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_100301FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_100008758(a1 + v7, &qword_100498ED8);
    v10 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = (_BYTE)v14;
  sub_1002D0564(v16, v17);
  return a1;
}

uint64_t sub_1003020D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003020DC);
}

uint64_t sub_1003020DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049E350);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_10030215C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100302168);
}

uint64_t sub_100302168(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10049E350);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s10ManagementO4ViewV5ShareO6ButtonVMa(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049E3B0, (uint64_t)&_s10ManagementO4ViewV5ShareO6ButtonVMn);
}

void sub_1003021F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10039D098;
  v4[1] = (char *)&value witness table for () + 64;
  sub_1002CA7E8(319, (unint64_t *)&unk_10049E3C0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_10039D0B0;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100302294(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E3EF8, 1);
}

unint64_t sub_1003022A8()
{
  unint64_t result;

  result = qword_10049E3F8;
  if (!qword_10049E3F8)
  {
    result = swift_getWitnessTable(&unk_10039D158, &_s10ManagementO4ViewV5ShareON);
    atomic_store(result, (unint64_t *)&qword_10049E3F8);
  }
  return result;
}

void *sub_1003022EC()
{
  return &protocol witness table for Never;
}

unint64_t sub_1003022FC()
{
  unint64_t result;

  result = qword_10049E400;
  if (!qword_10049E400)
  {
    result = swift_getWitnessTable(&unk_10039D180, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_10049E400);
  }
  return result;
}

unint64_t sub_100302344()
{
  unint64_t result;

  result = qword_10049E408;
  if (!qword_10049E408)
  {
    result = swift_getWitnessTable(&unk_10039D248, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_10049E408);
  }
  return result;
}

unint64_t sub_10030238C()
{
  unint64_t result;

  result = qword_10049E410;
  if (!qword_10049E410)
  {
    result = swift_getWitnessTable(&unk_10039D310, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_10049E410);
  }
  return result;
}

uint64_t sub_1003023D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E3ED0, 1);
}

uint64_t sub_1003023E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F58A8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1003023E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E450;
  if (!qword_10049E450)
  {
    v1 = sub_100005600(&qword_10049E420);
    sub_10002FFB8(&qword_10049E458, &qword_10049E418, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10002FFB8(&qword_10049E460, &qword_10049E468, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E450);
  }
  return result;
}

unint64_t sub_100302484()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E478;
  if (!qword_10049E478)
  {
    v1 = sub_100005600((uint64_t *)&unk_10049E480);
    sub_10002FFB8(&qword_10049F870, (uint64_t *)&unk_10049DB50, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E478);
  }
  return result;
}

uint64_t sub_100302520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F5FD8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10030252C()
{
  return sub_1003049DC(_s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t (*)(uint64_t))sub_1002F6430);
}

uint64_t sub_10030254C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5]));
  v10 = swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  v11 = v0 + v4 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v11, 1, v7, v10))
    v9(v11, v7);
  v12 = sub_100005574(&qword_10049E298);
  swift_release(*(_QWORD *)(v11 + *(int *)(v12 + 28)));
  v13 = (_QWORD *)(v6 + v1[8]);
  v14 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v6 + v1[9]);
  v17 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003026D4()
{
  return sub_1003049DC(_s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t (*)(uint64_t))sub_1002F5C04);
}

uint64_t sub_1003026F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_100302708(a1, a2, a3);
  return a1;
}

uint64_t sub_100302708(uint64_t a1, uint64_t a2, char a3)
{
  sub_10003B4C0(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100302730(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_100302748(a1, a2, a3);
  return a1;
}

uint64_t sub_100302748(uint64_t a1, uint64_t a2, char a3)
{
  sub_10003B4D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

