uint64_t sub_100109220(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 960) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 968) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  v11 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v11;
  v12 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v12;
  v13 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v13;
  return swift_task_switch(sub_100109314, 0, 0);
}

uint64_t sub_100109314()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_1000086B4(v12, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1000535A4((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_100019400(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_100054A68((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_100054A68((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_10044BE30, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1000535A4((_QWORD *)(v0 + 272));
    v48 = sub_100005574(&qword_10048E0A0);
    v49 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_1001255A8, v43, v48, v49);
    swift_release(v43);
    swift_release(*(_QWORD *)(v0 + 920));
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_100109A6C;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1000535A4((_QWORD *)(v0 + 400));
    sub_10002ECD0(v53, v54);
    sub_1000535A4((_QWORD *)(v0 + 400));
    v63 = sub_10002ECD0(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_100019400(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10001406C(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_100019400(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100109A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100109DC4;
  else
    v3 = sub_100109AD0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100109AD0()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1000535A4((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v41 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v41);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v41);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v39(v15, v16);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1032);
  v22 = *(_QWORD *)(v0 + 1000);
  v23 = *(_QWORD *)(v0 + 992);
  v24 = *(_QWORD *)(v0 + 984);
  v25 = *(_QWORD *)(v0 + 976);
  v40 = *(_QWORD *)(v0 + 952);
  v26 = *(_QWORD *)(v0 + 944);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v28;
  v29 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v29;
  v30 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v30;
  v31 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v31;
  v32 = swift_allocObject(&unk_10044BE58, 160, 7);
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = 0;
  v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v32 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v32 + 112) = v33;
  v34 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v32 + 144) = v34;
  v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v32 + 32) = *v1;
  *(_OWORD *)(v32 + 48) = v35;
  v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v32 + 80) = v36;
  sub_1000535A4((_QWORD *)(v0 + 528));
  v37 = sub_10002DE80(v26, (uint64_t)&unk_100492438, v32);
  swift_release(v37);
  swift_release(v21);
  sub_100008758(v26, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v40);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100109DC4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __n128 v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 1048);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 984);
  v5 = *(_QWORD *)(v0 + 960);
  v6 = swift_release(*(_QWORD *)(v0 + 1032));
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v10;
  sub_1000535A4((_QWORD *)(v0 + 656));
  swift_errorRetain(v1);
  sub_1000535A4((_QWORD *)(v0 + 656));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 1048);
    v35 = *(_QWORD *)(v0 + 984);
    v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v34 = *(_QWORD *)(v0 + 960);
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37[0] = v16;
    *(_DWORD *)v15 = 136446466;
    sub_100054A68((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    v17 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 720));
    *(_QWORD *)(v15 + 4) = sub_100019400(v17, v18, v37);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v15 + 12) = 2082;
    *(_QWORD *)(v0 + 912) = v14;
    swift_errorRetain(v14);
    v19 = sub_100005574((uint64_t *)&unk_1004911F0);
    v20 = (char *)String.init<A>(describing:)(v0 + 912, v19);
    *(_QWORD *)(v15 + 14) = sub_100019400(v20, v21, v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform failed: %{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    v36(v35, v34);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 1048);
    v24 = *(double (**)(uint64_t, uint64_t))(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 984);
    v26 = *(_QWORD *)(v0 + 960);
    sub_100054A68((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 656), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v22.n128_f64[0] = v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 1000);
  v28 = *(_QWORD *)(v0 + 992);
  v29 = *(_QWORD *)(v0 + 984);
  v30 = *(_QWORD *)(v0 + 976);
  v31 = *(_QWORD *)(v0 + 952);
  v32 = *(_QWORD *)(v0 + 944);
  swift_willThrow(v22);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010A094(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)(v3 + 936) = v2;
  *(_BYTE *)(v3 + 1056) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 944) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 952) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 960) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 968) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 976) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 984) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 992) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 1000) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  v11 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v11;
  v12 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v12;
  v13 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v13;
  return swift_task_switch(sub_10010A188, 0, 0);
}

uint64_t sub_10010A188()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void);
  uint64_t v90;
  _OWORD v91[4];
  uint64_t v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v1 = (_OWORD *)(v0 + 16);
  if ((*(_BYTE *)(v0 + 1056) & 1) != 0)
    goto LABEL_3;
  v2 = *(_QWORD *)(v0 + 936);
  v3 = *(_OWORD *)(v2 + 48);
  v91[2] = *(_OWORD *)(v2 + 32);
  v91[3] = v3;
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 16);
  v91[0] = *(_OWORD *)v2;
  v91[1] = v5;
  v97 = *(_QWORD *)(v0 + 136);
  v6 = *(uint64_t (**)(_QWORD))(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  v95 = *(_OWORD *)(v0 + 104);
  v96 = *(_OWORD *)(v0 + 120);
  v92 = v4;
  v93 = v6;
  v94 = v7;
  v8 = v6(v91);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v10 = *(_QWORD *)(v0 + 1000);
    v11 = *(_QWORD *)(v0 + 968);
    v12 = *(_QWORD *)(v0 + 960);
    v13 = sub_1000086B4(v12, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 1008) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 1016) = v14;
    v14(v10, v13, v12);
    v15 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 224) = v15;
    v16 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 256) = v16;
    v17 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 144) = *v1;
    *(_OWORD *)(v0 + 160) = v17;
    v18 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 192) = v18;
    v19 = sub_1000535A4((_QWORD *)(v0 + 144));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 1000);
    v24 = *(_QWORD *)(v0 + 968);
    v25 = *(_QWORD *)(v0 + 960);
    if (v22)
    {
      v88 = *(_QWORD *)(v0 + 1000);
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v91[0] = v27;
      *(_DWORD *)v26 = 136446210;
      v28 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 208));
      *(_QWORD *)(v26 + 4) = sub_100019400(v28, v29, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_100054A68((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s: performing…", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v88, v25);
    }
    else
    {
      sub_100054A68((_QWORD *)(v0 + 144), (void (*)(uint64_t))&_swift_release);

      v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v30(v23, v25);
    }
    *(_QWORD *)(v0 + 1024) = v30;
    v31 = *(_QWORD *)(v0 + 952);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 104);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 928) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 920) = v38;
    v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 352) = v39;
    v40 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 384) = v40;
    v41 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 272) = *v1;
    *(_OWORD *)(v0 + 288) = v41;
    v42 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 320) = v42;
    v43 = (_OWORD *)swift_allocObject(&unk_10044BEA8, 144, 7);
    v44 = *(_OWORD *)(v0 + 96);
    v43[5] = *(_OWORD *)(v0 + 80);
    v43[6] = v44;
    v45 = *(_OWORD *)(v0 + 128);
    v43[7] = *(_OWORD *)(v0 + 112);
    v43[8] = v45;
    v46 = *(_OWORD *)(v0 + 32);
    v43[1] = *v1;
    v43[2] = v46;
    v47 = *(_OWORD *)(v0 + 64);
    v43[3] = *(_OWORD *)(v0 + 48);
    v43[4] = v47;
    sub_1000535A4((_QWORD *)(v0 + 272));
    v48 = sub_100005574(&qword_10048E0A0);
    v49 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 1032) = Publisher<>.sink(receiveValue:)(sub_100125DF4, v43, v48, v49);
    swift_release(v43);
    swift_release(*(_QWORD *)(v0 + 920));
    v50 = *(int **)(v0 + 112);
    v89 = (uint64_t (*)(void))((char *)v50 + *v50);
    v51 = (_QWORD *)swift_task_alloc(v50[1]);
    *(_QWORD *)(v0 + 1040) = v51;
    *v51 = v0;
    v51[1] = sub_10010A8E0;
    return v89();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 976);
    v56 = *(_QWORD *)(v0 + 968);
    v57 = *(_QWORD *)(v0 + 960);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 480) = v59;
    v60 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 512) = v60;
    v61 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 400) = *v1;
    *(_OWORD *)(v0 + 416) = v61;
    v62 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 448) = v62;
    sub_1000535A4((_QWORD *)(v0 + 400));
    sub_10002ECD0(v53, v54);
    sub_1000535A4((_QWORD *)(v0 + 400));
    v63 = sub_10002ECD0(v53, v54);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.error.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v67 = *(_QWORD *)(v0 + 976);
    v68 = *(_QWORD *)(v0 + 968);
    v69 = *(_QWORD *)(v0 + 960);
    if (v66)
    {
      v90 = *(_QWORD *)(v0 + 968);
      v70 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v91[0] = v71;
      *(_DWORD *)v70 = 136446466;
      v87 = v67;
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      v72 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
      v86 = v69;
      *(_QWORD *)(v70 + 4) = sub_100019400(v72, v73, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      v74 = (char *)Optional<A>.description.getter(v53, v54);
      v76 = v75;
      sub_10001406C(v53, v54);
      *(_QWORD *)(v70 + 14) = sub_100019400(v74, v76, (uint64_t *)v91);
      swift_bridgeObjectRelease();
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v87, v86);
    }
    else
    {
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);

      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    }
    v77 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v77, 0, 0);
    *v78 = v53;
    v78[1] = v54;
    v79 = *(_QWORD *)(v0 + 1000);
    v80 = *(_QWORD *)(v0 + 992);
    v81 = *(_QWORD *)(v0 + 984);
    v82 = *(_QWORD *)(v0 + 976);
    v83 = *(_QWORD *)(v0 + 952);
    v84 = *(_QWORD *)(v0 + 944);
    swift_willThrow(v85);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010A8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125DE8;
  else
    v3 = sub_10010A944;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010A944()
{
  uint64_t v0;
  _OWORD *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v1 = (_OWORD *)(v0 + 16);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1016);
  v3 = *(_QWORD *)(v0 + 1008);
  v4 = *(_QWORD *)(v0 + 992);
  v5 = *(_QWORD *)(v0 + 960);
  AnyCancellable.cancel()();
  v2(v4, v3, v5);
  v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 864) = v6;
  v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 896) = v7;
  v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 800) = v8;
  v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 832) = v9;
  v10 = sub_1000535A4((_QWORD *)(v0 + 784));
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  v15 = *(_QWORD *)(v0 + 992);
  v16 = *(_QWORD *)(v0 + 960);
  if (v13)
  {
    v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v41 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 848));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v41);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v41);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    v39(v15, v16);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 784), (void (*)(uint64_t))&_swift_release);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 1032);
  v22 = *(_QWORD *)(v0 + 1000);
  v23 = *(_QWORD *)(v0 + 992);
  v24 = *(_QWORD *)(v0 + 984);
  v25 = *(_QWORD *)(v0 + 976);
  v40 = *(_QWORD *)(v0 + 952);
  v26 = *(_QWORD *)(v0 + 944);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v28;
  v29 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v29;
  v30 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v30;
  v31 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v31;
  v32 = swift_allocObject(&unk_10044BED0, 160, 7);
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = 0;
  v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v32 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v32 + 112) = v33;
  v34 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v32 + 144) = v34;
  v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v32 + 32) = *v1;
  *(_OWORD *)(v32 + 48) = v35;
  v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v32 + 80) = v36;
  sub_1000535A4((_QWORD *)(v0 + 528));
  v37 = sub_10002DE80(v26, (uint64_t)&unk_100492458, v32);
  swift_release(v37);
  swift_release(v21);
  sub_100008758(v26, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v40);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010AC38(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  *(_OWORD *)(v3 + 112) = v2[6];
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_10010AD28, 0, 0);
}

uint64_t sub_10010AD28()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  NSObject *log;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[3];
  char v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v100[0] = *(_OWORD *)(v0 + 16);
  v100[1] = v5;
  v100[2] = *(_OWORD *)(v0 + 48);
  v101 = v1;
  v102 = v2;
  v103 = v3;
  v104 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v105 = *(_OWORD *)(v0 + 96);
  v106 = v6;
  v7 = v2(v100);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_1000086B4(v10, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 56);
    v91 = *(_BYTE *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 120);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    v93 = v18;
    swift_retain(v18);
    v96 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc(12, -1);
      v87 = v25;
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v91);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v87);
    }
    else
    {
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 160);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 88);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 128) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_BYTE *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = swift_allocObject(&unk_10044BF98, 128, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    v94 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v47 + 40) = v94;
    *(_QWORD *)(v47 + 56) = v40;
    *(_BYTE *)(v47 + 64) = v41;
    *(_QWORD *)(v47 + 72) = v43;
    *(_QWORD *)(v47 + 80) = v42;
    *(_QWORD *)(v47 + 88) = v44;
    *(_QWORD *)(v47 + 96) = v45;
    v97 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v47 + 104) = v97;
    *(_QWORD *)(v47 + 120) = v46;
    swift_retain(v48);
    swift_retain(v94);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v97);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100125DEC, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 136));
    v51 = *(int **)(v0 + 96);
    *(_QWORD *)&v97 = (char *)v51 + *v51;
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 240) = v52;
    *v52 = v0;
    v52[1] = sub_10010B5C8;
    return ((uint64_t (*)(void))v97)();
  }
  else
  {
    v54 = v8;
    v99 = v7;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v58, v57);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 40);
    v61 = *(_QWORD *)(v0 + 56);
    v88 = *(_BYTE *)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 120);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v65 = v99;
    sub_10002ECD0(v99, v54);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v66 = sub_10002ECD0(v99, v54);
    v67 = Logger.logObject.getter(v66);
    type = static os_log_type_t.error.getter(v67);
    v68 = os_log_type_enabled(v67, type);
    v98 = *(_QWORD *)(v0 + 184);
    v92 = *(_QWORD *)(v0 + 176);
    v95 = *(_QWORD *)(v0 + 168);
    if (v68)
    {
      log = v67;
      v69 = swift_slowAlloc(22, -1);
      v86 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v100[0] = v86;
      *(_DWORD *)v69 = 136446466;
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      v70 = (char *)ActionType.rawValue.getter(v88);
      *(_QWORD *)(v69 + 4) = sub_100019400(v70, v71, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v72 = Optional<A>.description.getter(v99, v54);
      v74 = v73;
      sub_10001406C(v99, v54);
      v75 = (char *)v72;
      v65 = v99;
      *(_QWORD *)(v69 + 14) = sub_100019400(v75, v74, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v60, 2);
      swift_release_n(v61, 2);
      swift_release_n(v62, 2);
      swift_release_n(v63, 2);
      swift_release_n(v64, 2);
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v95);
    v76 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v76, 0, 0);
    *v77 = v65;
    v77[1] = v54;
    v79 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 184);
    v80 = *(_QWORD *)(v0 + 192);
    v83 = *(_QWORD *)(v0 + 152);
    v82 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v84);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010B5C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125E0C;
  else
    v3 = sub_10010B62C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010B62C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v41 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v43 = v10;
  v11 = swift_retain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 200);
    v17 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v47 = v37;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v41);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v47);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v47);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v16);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v15, v16);
  }
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_BYTE *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = swift_allocObject(&unk_10044BFC0, 144, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = v22;
  v31 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v30 + 40) = v31;
  v34 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 72) = v23;
  *(_BYTE *)(v30 + 80) = v24;
  *(_QWORD *)(v30 + 88) = v25;
  *(_QWORD *)(v30 + 96) = v26;
  *(_QWORD *)(v30 + 104) = v27;
  *(_QWORD *)(v30 + 112) = v28;
  v35 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v30 + 120) = v35;
  *(_QWORD *)(v30 + 136) = v29;
  swift_retain(v31);
  swift_retain(v34);
  swift_retain(v23);
  swift_retain(v26);
  swift_retain(v35);
  swift_retain(v29);
  v32 = sub_10002DE80(v20, (uint64_t)&unk_100492498, v30);
  swift_release(v32);
  swift_release(v36);
  sub_100008758(v20, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010B9DC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  *(_OWORD *)(v3 + 112) = v2[6];
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_10010BACC, 0, 0);
}

uint64_t sub_10010BACC()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  NSObject *log;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[3];
  char v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v100[0] = *(_OWORD *)(v0 + 16);
  v100[1] = v5;
  v100[2] = *(_OWORD *)(v0 + 48);
  v101 = v1;
  v102 = v2;
  v103 = v3;
  v104 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v105 = *(_OWORD *)(v0 + 96);
  v106 = v6;
  v7 = v2(v100);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_1000086B4(v10, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 56);
    v91 = *(_BYTE *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 120);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    v93 = v18;
    swift_retain(v18);
    v96 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc(12, -1);
      v87 = v25;
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v91);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v87);
    }
    else
    {
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 160);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 88);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 128) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_BYTE *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = swift_allocObject(&unk_10044BBD8, 128, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    v94 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v47 + 40) = v94;
    *(_QWORD *)(v47 + 56) = v40;
    *(_BYTE *)(v47 + 64) = v41;
    *(_QWORD *)(v47 + 72) = v43;
    *(_QWORD *)(v47 + 80) = v42;
    *(_QWORD *)(v47 + 88) = v44;
    *(_QWORD *)(v47 + 96) = v45;
    v97 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v47 + 104) = v97;
    *(_QWORD *)(v47 + 120) = v46;
    swift_retain(v48);
    swift_retain(v94);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v97);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100125DEC, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 136));
    v51 = *(int **)(v0 + 96);
    *(_QWORD *)&v97 = (char *)v51 + *v51;
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 240) = v52;
    *v52 = v0;
    v52[1] = sub_10010C36C;
    return ((uint64_t (*)(void))v97)();
  }
  else
  {
    v54 = v8;
    v99 = v7;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v58, v57);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 40);
    v61 = *(_QWORD *)(v0 + 56);
    v88 = *(_BYTE *)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 120);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v65 = v99;
    sub_10002ECD0(v99, v54);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v66 = sub_10002ECD0(v99, v54);
    v67 = Logger.logObject.getter(v66);
    type = static os_log_type_t.error.getter(v67);
    v68 = os_log_type_enabled(v67, type);
    v98 = *(_QWORD *)(v0 + 184);
    v92 = *(_QWORD *)(v0 + 176);
    v95 = *(_QWORD *)(v0 + 168);
    if (v68)
    {
      log = v67;
      v69 = swift_slowAlloc(22, -1);
      v86 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v100[0] = v86;
      *(_DWORD *)v69 = 136446466;
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      v70 = (char *)ActionType.rawValue.getter(v88);
      *(_QWORD *)(v69 + 4) = sub_100019400(v70, v71, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v72 = Optional<A>.description.getter(v99, v54);
      v74 = v73;
      sub_10001406C(v99, v54);
      v75 = (char *)v72;
      v65 = v99;
      *(_QWORD *)(v69 + 14) = sub_100019400(v75, v74, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v60, 2);
      swift_release_n(v61, 2);
      swift_release_n(v62, 2);
      swift_release_n(v63, 2);
      swift_release_n(v64, 2);
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v95);
    v76 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v76, 0, 0);
    *v77 = v65;
    v77[1] = v54;
    v79 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 184);
    v80 = *(_QWORD *)(v0 + 192);
    v83 = *(_QWORD *)(v0 + 152);
    v82 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v84);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010C36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125E0C;
  else
    v3 = sub_10010C3D0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010C3D0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v41 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v43 = v10;
  v11 = swift_retain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 200);
    v17 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v47 = v37;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v41);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v47);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v47);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v16);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v15, v16);
  }
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_BYTE *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = swift_allocObject(&unk_10044BC00, 144, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = v22;
  v31 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v30 + 40) = v31;
  v34 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 72) = v23;
  *(_BYTE *)(v30 + 80) = v24;
  *(_QWORD *)(v30 + 88) = v25;
  *(_QWORD *)(v30 + 96) = v26;
  *(_QWORD *)(v30 + 104) = v27;
  *(_QWORD *)(v30 + 112) = v28;
  v35 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v30 + 120) = v35;
  *(_QWORD *)(v30 + 136) = v29;
  swift_retain(v31);
  swift_retain(v34);
  swift_retain(v23);
  swift_retain(v26);
  swift_retain(v35);
  swift_retain(v29);
  v32 = sub_10002DE80(v20, (uint64_t)&unk_100492398, v30);
  swift_release(v32);
  swift_release(v36);
  sub_100008758(v20, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010C780(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  *(_OWORD *)(v3 + 112) = v2[6];
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_10010C870, 0, 0);
}

uint64_t sub_10010C870()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  NSObject *log;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[3];
  char v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v100[0] = *(_OWORD *)(v0 + 16);
  v100[1] = v5;
  v100[2] = *(_OWORD *)(v0 + 48);
  v101 = v1;
  v102 = v2;
  v103 = v3;
  v104 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v105 = *(_OWORD *)(v0 + 96);
  v106 = v6;
  v7 = v2(v100);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_1000086B4(v10, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 56);
    v91 = *(_BYTE *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 120);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    v93 = v18;
    swift_retain(v18);
    v96 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc(12, -1);
      v87 = v25;
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v91);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v87);
    }
    else
    {
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 160);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 88);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 128) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_BYTE *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = swift_allocObject(&unk_10044BC50, 128, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    v94 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v47 + 40) = v94;
    *(_QWORD *)(v47 + 56) = v40;
    *(_BYTE *)(v47 + 64) = v41;
    *(_QWORD *)(v47 + 72) = v43;
    *(_QWORD *)(v47 + 80) = v42;
    *(_QWORD *)(v47 + 88) = v44;
    *(_QWORD *)(v47 + 96) = v45;
    v97 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v47 + 104) = v97;
    *(_QWORD *)(v47 + 120) = v46;
    swift_retain(v48);
    swift_retain(v94);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v97);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_1001251D4, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 136));
    v51 = *(int **)(v0 + 96);
    *(_QWORD *)&v97 = (char *)v51 + *v51;
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 240) = v52;
    *v52 = v0;
    v52[1] = sub_10010D110;
    return ((uint64_t (*)(void))v97)();
  }
  else
  {
    v54 = v8;
    v99 = v7;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v58, v57);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 40);
    v61 = *(_QWORD *)(v0 + 56);
    v88 = *(_BYTE *)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 120);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v65 = v99;
    sub_10002ECD0(v99, v54);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v66 = sub_10002ECD0(v99, v54);
    v67 = Logger.logObject.getter(v66);
    type = static os_log_type_t.error.getter(v67);
    v68 = os_log_type_enabled(v67, type);
    v98 = *(_QWORD *)(v0 + 184);
    v92 = *(_QWORD *)(v0 + 176);
    v95 = *(_QWORD *)(v0 + 168);
    if (v68)
    {
      log = v67;
      v69 = swift_slowAlloc(22, -1);
      v86 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v100[0] = v86;
      *(_DWORD *)v69 = 136446466;
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      v70 = (char *)ActionType.rawValue.getter(v88);
      *(_QWORD *)(v69 + 4) = sub_100019400(v70, v71, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v72 = Optional<A>.description.getter(v99, v54);
      v74 = v73;
      sub_10001406C(v99, v54);
      v75 = (char *)v72;
      v65 = v99;
      *(_QWORD *)(v69 + 14) = sub_100019400(v75, v74, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v60, 2);
      swift_release_n(v61, 2);
      swift_release_n(v62, 2);
      swift_release_n(v63, 2);
      swift_release_n(v64, 2);
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v95);
    v76 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v76, 0, 0);
    *v77 = v65;
    v77[1] = v54;
    v79 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 184);
    v80 = *(_QWORD *)(v0 + 192);
    v83 = *(_QWORD *)(v0 + 152);
    v82 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v84);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010D110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10010D524;
  else
    v3 = sub_10010D174;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010D174()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v41 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v43 = v10;
  v11 = swift_retain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 200);
    v17 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v47 = v37;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v41);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v47);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v47);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v16);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v15, v16);
  }
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_BYTE *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = swift_allocObject(&unk_10044BC78, 144, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = v22;
  v31 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v30 + 40) = v31;
  v34 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 72) = v23;
  *(_BYTE *)(v30 + 80) = v24;
  *(_QWORD *)(v30 + 88) = v25;
  *(_QWORD *)(v30 + 96) = v26;
  *(_QWORD *)(v30 + 104) = v27;
  *(_QWORD *)(v30 + 112) = v28;
  v35 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v30 + 120) = v35;
  *(_QWORD *)(v30 + 136) = v29;
  swift_retain(v31);
  swift_retain(v34);
  swift_retain(v23);
  swift_retain(v26);
  swift_retain(v35);
  swift_retain(v29);
  v32 = sub_10002DE80(v20, (uint64_t)&unk_1004923B8, v30);
  swift_release(v32);
  swift_release(v36);
  sub_100008758(v20, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010D524()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t type;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *log;
  uint64_t v42[2];

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 224);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = swift_release(*(_QWORD *)(v0 + 232));
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  swift_errorRetain(v1);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = *(_QWORD *)(v0 + 248);
    v37 = *(_QWORD *)(v0 + 176);
    v38 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 192);
    type = v16;
    v18 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v42[0] = v36;
    *(_DWORD *)v18 = 136446466;
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v11);
    swift_release(v12);
    swift_release(v13);
    v19 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v18 + 4) = sub_100019400(v19, v20, v42);
    swift_bridgeObjectRelease();
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v11);
    swift_release(v12);
    swift_release(v13);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v17;
    swift_errorRetain(v17);
    v21 = sub_100005574((uint64_t *)&unk_1004911F0);
    v22 = (char *)String.init<A>(describing:)(v0 + 144, v21);
    *(_QWORD *)(v18 + 14) = sub_100019400(v22, v23, v42);
    swift_bridgeObjectRelease();
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 192);
    v27 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v26 + 8))(v40, v27);
  }
  v29 = *(_QWORD *)(v0 + 200);
  v28 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 184);
  v30 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 152);
  v32 = *(_QWORD *)(v0 + 160);
  swift_willThrow(v24);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010D8AC(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  *(_OWORD *)(v3 + 112) = v2[6];
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_10010D99C, 0, 0);
}

uint64_t sub_10010D99C()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  NSObject *log;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[3];
  char v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v100[0] = *(_OWORD *)(v0 + 16);
  v100[1] = v5;
  v100[2] = *(_OWORD *)(v0 + 48);
  v101 = v1;
  v102 = v2;
  v103 = v3;
  v104 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v105 = *(_OWORD *)(v0 + 96);
  v106 = v6;
  v7 = v2(v100);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_1000086B4(v10, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 56);
    v91 = *(_BYTE *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 120);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    v93 = v18;
    swift_retain(v18);
    v96 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc(12, -1);
      v87 = v25;
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v91);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v87);
    }
    else
    {
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 160);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 88);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 128) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_BYTE *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = swift_allocObject(&unk_10044BCC8, 128, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    v94 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v47 + 40) = v94;
    *(_QWORD *)(v47 + 56) = v40;
    *(_BYTE *)(v47 + 64) = v41;
    *(_QWORD *)(v47 + 72) = v43;
    *(_QWORD *)(v47 + 80) = v42;
    *(_QWORD *)(v47 + 88) = v44;
    *(_QWORD *)(v47 + 96) = v45;
    v97 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v47 + 104) = v97;
    *(_QWORD *)(v47 + 120) = v46;
    swift_retain(v48);
    swift_retain(v94);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v97);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100125DEC, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 136));
    v51 = *(int **)(v0 + 96);
    *(_QWORD *)&v97 = (char *)v51 + *v51;
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 240) = v52;
    *v52 = v0;
    v52[1] = sub_10010E23C;
    return ((uint64_t (*)(void))v97)();
  }
  else
  {
    v54 = v8;
    v99 = v7;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v58, v57);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 40);
    v61 = *(_QWORD *)(v0 + 56);
    v88 = *(_BYTE *)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 120);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v65 = v99;
    sub_10002ECD0(v99, v54);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v66 = sub_10002ECD0(v99, v54);
    v67 = Logger.logObject.getter(v66);
    type = static os_log_type_t.error.getter(v67);
    v68 = os_log_type_enabled(v67, type);
    v98 = *(_QWORD *)(v0 + 184);
    v92 = *(_QWORD *)(v0 + 176);
    v95 = *(_QWORD *)(v0 + 168);
    if (v68)
    {
      log = v67;
      v69 = swift_slowAlloc(22, -1);
      v86 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v100[0] = v86;
      *(_DWORD *)v69 = 136446466;
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      v70 = (char *)ActionType.rawValue.getter(v88);
      *(_QWORD *)(v69 + 4) = sub_100019400(v70, v71, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v72 = Optional<A>.description.getter(v99, v54);
      v74 = v73;
      sub_10001406C(v99, v54);
      v75 = (char *)v72;
      v65 = v99;
      *(_QWORD *)(v69 + 14) = sub_100019400(v75, v74, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v60, 2);
      swift_release_n(v61, 2);
      swift_release_n(v62, 2);
      swift_release_n(v63, 2);
      swift_release_n(v64, 2);
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v95);
    v76 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v76, 0, 0);
    *v77 = v65;
    v77[1] = v54;
    v79 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 184);
    v80 = *(_QWORD *)(v0 + 192);
    v83 = *(_QWORD *)(v0 + 152);
    v82 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v84);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010E23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125E0C;
  else
    v3 = sub_10010E2A0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010E2A0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v41 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v43 = v10;
  v11 = swift_retain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 200);
    v17 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v47 = v37;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v41);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v47);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v47);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v16);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v15, v16);
  }
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_BYTE *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = swift_allocObject(&unk_10044BCF0, 144, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = v22;
  v31 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v30 + 40) = v31;
  v34 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 72) = v23;
  *(_BYTE *)(v30 + 80) = v24;
  *(_QWORD *)(v30 + 88) = v25;
  *(_QWORD *)(v30 + 96) = v26;
  *(_QWORD *)(v30 + 104) = v27;
  *(_QWORD *)(v30 + 112) = v28;
  v35 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v30 + 120) = v35;
  *(_QWORD *)(v30 + 136) = v29;
  swift_retain(v31);
  swift_retain(v34);
  swift_retain(v23);
  swift_retain(v26);
  swift_retain(v35);
  swift_retain(v29);
  v32 = sub_10002DE80(v20, (uint64_t)&unk_1004923D8, v30);
  swift_release(v32);
  swift_release(v36);
  sub_100008758(v20, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010E650(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 256) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 160) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 200) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 208) = swift_task_alloc(v9);
  v10 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v10;
  *(_OWORD *)(v3 + 112) = v2[6];
  v11 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v11;
  v12 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v12;
  return swift_task_switch(sub_10010E740, 0, 0);
}

uint64_t sub_10010E740()
{
  uint64_t v0;
  char v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  BOOL v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  NSObject *log;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 v88;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  _OWORD v100[3];
  char v101;
  uint64_t (*v102)(_QWORD);
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;

  if ((*(_BYTE *)(v0 + 256) & 1) != 0)
    goto LABEL_3;
  v1 = *(_BYTE *)(v0 + 64);
  v2 = *(uint64_t (**)(_QWORD))(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 32);
  v100[0] = *(_OWORD *)(v0 + 16);
  v100[1] = v5;
  v100[2] = *(_OWORD *)(v0 + 48);
  v101 = v1;
  v102 = v2;
  v103 = v3;
  v104 = v4;
  v6 = *(_OWORD *)(v0 + 112);
  v105 = *(_OWORD *)(v0 + 96);
  v106 = v6;
  v7 = v2(v100);
  if (v8 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    v12 = sub_1000086B4(v10, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 216) = v12;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    *(_QWORD *)(v0 + 224) = v13;
    v13(v9, v12, v10);
    v14 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 56);
    v91 = *(_BYTE *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 120);
    swift_retain(v14);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    v93 = v18;
    swift_retain(v18);
    v96 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 208);
    v25 = *(_QWORD *)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 176);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
      v27 = swift_slowAlloc(12, -1);
      v87 = v25;
      v28 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v100[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v91);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v87);
    }
    else
    {
      swift_release(v14);
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v93);
      swift_release(v96);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 160);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 88);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 128) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 136) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_BYTE *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 80);
    v44 = *(_QWORD *)(v0 + 88);
    v45 = *(_QWORD *)(v0 + 96);
    v46 = *(_QWORD *)(v0 + 120);
    v47 = swift_allocObject(&unk_10044BD40, 128, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    v94 = *(_OWORD *)(v0 + 40);
    *(_OWORD *)(v47 + 40) = v94;
    *(_QWORD *)(v47 + 56) = v40;
    *(_BYTE *)(v47 + 64) = v41;
    *(_QWORD *)(v47 + 72) = v43;
    *(_QWORD *)(v47 + 80) = v42;
    *(_QWORD *)(v47 + 88) = v44;
    *(_QWORD *)(v47 + 96) = v45;
    v97 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v47 + 104) = v97;
    *(_QWORD *)(v47 + 120) = v46;
    swift_retain(v48);
    swift_retain(v94);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v97);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 232) = Publisher<>.sink(receiveValue:)(sub_100125DEC, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 136));
    v51 = *(int **)(v0 + 96);
    *(_QWORD *)&v97 = (char *)v51 + *v51;
    v52 = (_QWORD *)swift_task_alloc(v51[1]);
    *(_QWORD *)(v0 + 240) = v52;
    *v52 = v0;
    v52[1] = sub_10010EFE0;
    return ((uint64_t (*)(void))v97)();
  }
  else
  {
    v54 = v8;
    v99 = v7;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v55 = *(_QWORD *)(v0 + 176);
    v56 = *(_QWORD *)(v0 + 184);
    v57 = *(_QWORD *)(v0 + 168);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v56, v58, v57);
    v59 = *(_QWORD *)(v0 + 24);
    v60 = *(_QWORD *)(v0 + 40);
    v61 = *(_QWORD *)(v0 + 56);
    v88 = *(_BYTE *)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 80);
    v63 = *(_QWORD *)(v0 + 104);
    v64 = *(_QWORD *)(v0 + 120);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v65 = v99;
    sub_10002ECD0(v99, v54);
    swift_retain(v59);
    swift_retain(v60);
    swift_retain(v61);
    swift_retain(v62);
    swift_retain(v63);
    swift_retain(v64);
    v66 = sub_10002ECD0(v99, v54);
    v67 = Logger.logObject.getter(v66);
    type = static os_log_type_t.error.getter(v67);
    v68 = os_log_type_enabled(v67, type);
    v98 = *(_QWORD *)(v0 + 184);
    v92 = *(_QWORD *)(v0 + 176);
    v95 = *(_QWORD *)(v0 + 168);
    if (v68)
    {
      log = v67;
      v69 = swift_slowAlloc(22, -1);
      v86 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v100[0] = v86;
      *(_DWORD *)v69 = 136446466;
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      v70 = (char *)ActionType.rawValue.getter(v88);
      *(_QWORD *)(v69 + 4) = sub_100019400(v70, v71, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      swift_release(v62);
      swift_release(v63);
      swift_release(v64);
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      v72 = Optional<A>.description.getter(v99, v54);
      v74 = v73;
      sub_10001406C(v99, v54);
      v75 = (char *)v72;
      v65 = v99;
      *(_QWORD *)(v69 + 14) = sub_100019400(v75, v74, (uint64_t *)v100);
      swift_bridgeObjectRelease();
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v69, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v60, 2);
      swift_release_n(v61, 2);
      swift_release_n(v62, 2);
      swift_release_n(v63, 2);
      swift_release_n(v64, 2);
      sub_10001406C(v99, v54);
      sub_10001406C(v99, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v98, v95);
    v76 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v76, 0, 0);
    *v77 = v65;
    v77[1] = v54;
    v79 = *(_QWORD *)(v0 + 200);
    v78 = *(_QWORD *)(v0 + 208);
    v81 = *(_QWORD *)(v0 + 184);
    v80 = *(_QWORD *)(v0 + 192);
    v83 = *(_QWORD *)(v0 + 152);
    v82 = *(_QWORD *)(v0 + 160);
    swift_willThrow(v84);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010EFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125E0C;
  else
    v3 = sub_10010F044;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010F044()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v41 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v43 = v10;
  v11 = swift_retain(v10);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 168);
  v45 = *(_QWORD *)(v0 + 176);
  if (v14)
  {
    v39 = *(_QWORD *)(v0 + 200);
    v17 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(64, -1);
    v47 = v37;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v41);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v47);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v17 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v47);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: perform success%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v37, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v16);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    swift_release(v43);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v15, v16);
  }
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 208);
  v40 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 152);
  v44 = *(_QWORD *)(v0 + 184);
  v46 = *(_QWORD *)(v0 + 160);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = *(_BYTE *)(v0 + 64);
  v25 = *(_QWORD *)(v0 + 72);
  v26 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 96);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = swift_allocObject(&unk_10044BD68, 144, 7);
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 32) = v22;
  v31 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v30 + 40) = v31;
  v34 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v30 + 56) = v34;
  *(_QWORD *)(v30 + 72) = v23;
  *(_BYTE *)(v30 + 80) = v24;
  *(_QWORD *)(v30 + 88) = v25;
  *(_QWORD *)(v30 + 96) = v26;
  *(_QWORD *)(v30 + 104) = v27;
  *(_QWORD *)(v30 + 112) = v28;
  v35 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v30 + 120) = v35;
  *(_QWORD *)(v30 + 136) = v29;
  swift_retain(v31);
  swift_retain(v34);
  swift_retain(v23);
  swift_retain(v26);
  swift_retain(v35);
  swift_retain(v29);
  v32 = sub_10002DE80(v20, (uint64_t)&unk_1004923F8, v30);
  swift_release(v32);
  swift_release(v36);
  sub_100008758(v20, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10010F3F4(uint64_t a1, char a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_BYTE *)(v3 + 240) = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v3 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Logger(0, v6);
  *(_QWORD *)(v3 + 152) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 160) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 168) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v3 + 192) = swift_task_alloc(v9);
  v10 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v10;
  v11 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v11;
  v12 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v12;
  return swift_task_switch(sub_10010F4DC, 0, 0);
}

uint64_t sub_10010F4DC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  double v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  BOOL v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  NSObject *log;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t typea[8];
  os_log_type_t type;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t (*v96)(_QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;

  if ((*(_BYTE *)(v0 + 240) & 1) != 0)
    goto LABEL_3;
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(uint64_t (**)(_QWORD))(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 104);
  v92 = *(_QWORD *)(v0 + 16);
  v93 = *(_OWORD *)(v0 + 24);
  v94 = v1;
  v95 = v2;
  v96 = v3;
  v97 = v4;
  v98 = v5;
  v99 = v6;
  v86 = v93;
  v90 = *(_OWORD *)(v0 + 88);
  v100 = v90;
  v101 = v7;
  v8 = v3(&v92);
  if (v9 == 1)
  {
LABEL_3:
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v10 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 152);
    v12 = *(_QWORD *)(v0 + 160);
    v13 = sub_1000086B4(v11, (uint64_t)qword_10048E058);
    *(_QWORD *)(v0 + 200) = v13;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    *(_QWORD *)(v0 + 208) = v14;
    v14(v10, v13, v11);
    v15 = *(_QWORD *)(v0 + 24);
    v16 = *(_QWORD *)(v0 + 40);
    v84 = *(_BYTE *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 104);
    swift_retain(v15);
    swift_retain(v16);
    swift_retain(v17);
    swift_retain(v18);
    v87 = v19;
    v20 = swift_retain(v19);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(_QWORD *)(v0 + 192);
    v25 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    if (v23)
    {
      *(_QWORD *)typea = *(_QWORD *)(v0 + 192);
      v27 = swift_slowAlloc(12, -1);
      v80 = v25;
      v28 = swift_slowAlloc(32, -1);
      v92 = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = (char *)ActionType.rawValue.getter(v84);
      *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, &v92);
      swift_bridgeObjectRelease();
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v18);
      swift_release(v87);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: performing…", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v26 + 8))(*(os_log_type_t **)typea, v80);
    }
    else
    {
      swift_release(v15);
      swift_release(v16);
      swift_release(v17);
      swift_release(v18);
      swift_release(v87);

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
    v31 = *(_QWORD *)(v0 + 144);
    sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
    v32 = *(double *)(v0 + 72);
    v33 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v34 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v31, 1, 1, v34);
    v35 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v33, NSRunLoopCommonModes, v31, v32);

    sub_100008758(v31, &qword_10048E088);
    *(_QWORD *)(v0 + 112) = v35;
    v36 = type metadata accessor for NSTimer.TimerPublisher(0);
    v37 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
    v38 = ConnectablePublisher.autoconnect()(v36, v37);
    swift_release(v35);
    *(_QWORD *)(v0 + 120) = v38;
    v39 = *(_QWORD *)(v0 + 16);
    v40 = *(_QWORD *)(v0 + 40);
    v41 = *(_BYTE *)(v0 + 48);
    v43 = *(_QWORD *)(v0 + 56);
    v42 = *(_QWORD *)(v0 + 64);
    v44 = *(_QWORD *)(v0 + 72);
    v45 = *(int **)(v0 + 80);
    v46 = *(_QWORD *)(v0 + 104);
    v47 = swift_allocObject(&unk_10044BB60, 112, 7);
    *(_QWORD *)(v47 + 16) = v39;
    v48 = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v47 + 24) = v48;
    *(_QWORD *)(v47 + 40) = v40;
    *(_BYTE *)(v47 + 48) = v41;
    *(_QWORD *)(v47 + 56) = v43;
    *(_QWORD *)(v47 + 64) = v42;
    *(_QWORD *)(v47 + 72) = v44;
    *(_QWORD *)(v47 + 80) = v45;
    v88 = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v47 + 88) = v88;
    *(_QWORD *)(v47 + 104) = v46;
    swift_retain(v48);
    swift_retain(v40);
    swift_retain(v42);
    swift_retain(v88);
    swift_retain(v46);
    v49 = sub_100005574(&qword_10048E0A0);
    v50 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
    *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100124F8C, v47, v49, v50);
    swift_release(v47);
    swift_release(*(_QWORD *)(v0 + 120));
    *(_QWORD *)&v88 = (char *)v45 + *v45;
    v51 = (_QWORD *)swift_task_alloc(v45[1]);
    *(_QWORD *)(v0 + 224) = v51;
    *v51 = v0;
    v51[1] = sub_10010FD24;
    return ((uint64_t (*)(void))v88)();
  }
  else
  {
    v53 = v8;
    v54 = v9;
    if (qword_10048C578 != -1)
      swift_once(&qword_10048C578, sub_10002E5A0);
    v56 = *(_QWORD *)(v0 + 160);
    v55 = *(_QWORD *)(v0 + 168);
    v57 = *(_QWORD *)(v0 + 152);
    v58 = sub_1000086B4(v57, (uint64_t)qword_10048E058);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
    v59 = v86;
    swift_retain(v86);
    swift_retain(v1);
    swift_retain(v4);
    v60 = v90;
    swift_retain(v90);
    swift_retain(v7);
    sub_10002ECD0(v53, v54);
    swift_retain(v86);
    swift_retain(v1);
    swift_retain(v4);
    swift_retain(v90);
    swift_retain(v7);
    v61 = sub_10002ECD0(v53, v54);
    v62 = Logger.logObject.getter(v61);
    type = static os_log_type_t.error.getter(v62);
    v63 = os_log_type_enabled(v62, type);
    v91 = *(_QWORD *)(v0 + 168);
    v85 = *(_QWORD *)(v0 + 160);
    v89 = *(_QWORD *)(v0 + 152);
    if (v63)
    {
      log = v62;
      v64 = swift_slowAlloc(22, -1);
      v81 = swift_slowAlloc(64, -1);
      v92 = v81;
      *(_DWORD *)v64 = 136446466;
      swift_release(v59);
      swift_release(v1);
      swift_release(v4);
      swift_release(v60);
      swift_release(v7);
      v65 = (char *)ActionType.rawValue.getter(v2);
      *(_QWORD *)(v64 + 4) = sub_100019400(v65, v66, &v92);
      swift_bridgeObjectRelease();
      swift_release(v59);
      swift_release(v1);
      swift_release(v4);
      swift_release(v60);
      swift_release(v7);
      *(_WORD *)(v64 + 12) = 2082;
      swift_bridgeObjectRetain();
      v67 = (char *)Optional<A>.description.getter(v53, v54);
      v69 = v68;
      sub_10001406C(v53, v54);
      *(_QWORD *)(v64 + 14) = sub_100019400(v67, v69, &v92);
      swift_bridgeObjectRelease();
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v64, 0x16u);
      swift_arrayDestroy(v81, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v81, -1, -1);
      swift_slowDealloc(v64, -1, -1);

    }
    else
    {
      swift_release_n(v59, 2);
      swift_release_n(v1, 2);
      swift_release_n(v4, 2);
      swift_release_n(v60, 2);
      swift_release_n(v7, 2);
      sub_10001406C(v53, v54);
      sub_10001406C(v53, v54);

    }
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v91, v89);
    v70 = sub_10002ECE4();
    swift_allocError(&type metadata for ActionError, v70, 0, 0);
    *v71 = v53;
    v71[1] = v54;
    v73 = *(_QWORD *)(v0 + 184);
    v72 = *(_QWORD *)(v0 + 192);
    v75 = *(_QWORD *)(v0 + 168);
    v74 = *(_QWORD *)(v0 + 176);
    v77 = *(_QWORD *)(v0 + 136);
    v76 = *(_QWORD *)(v0 + 144);
    swift_willThrow(v78);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10010FD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100110100;
  else
    v3 = sub_10010FD88;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10010FD88()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 152);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v40 = *(_BYTE *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 104);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  v10 = swift_retain(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 152);
  v42 = *(_QWORD *)(v0 + 160);
  if (v13)
  {
    v38 = *(_QWORD *)(v0 + 184);
    v16 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v44 = v36;
    *(_DWORD *)v16 = 136446466;
    v17 = (char *)ActionType.rawValue.getter(v40);
    *(_QWORD *)(v16 + 4) = sub_100019400(v17, v18, &v44);
    swift_bridgeObjectRelease();
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v16 + 14) = sub_100019400(0, (char *)0xE000000000000000, &v44);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v15);
  }
  else
  {
    swift_release(v5);
    swift_release(v6);
    swift_release(v7);
    swift_release(v8);
    swift_release(v9);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v14, v15);
  }
  v34 = *(_QWORD *)(v0 + 216);
  v35 = *(_QWORD *)(v0 + 192);
  v37 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v0 + 136);
  v41 = *(_QWORD *)(v0 + 168);
  v43 = *(_QWORD *)(v0 + 144);
  v20 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = *(_QWORD *)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 40);
  v23 = *(_BYTE *)(v0 + 48);
  v24 = *(_QWORD *)(v0 + 56);
  v25 = *(_QWORD *)(v0 + 64);
  v26 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 80);
  v28 = *(_QWORD *)(v0 + 104);
  v29 = swift_allocObject(&unk_10044BB88, 128, 7);
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  *(_QWORD *)(v29 + 32) = v21;
  v30 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v29 + 40) = v30;
  *(_QWORD *)(v29 + 56) = v22;
  *(_BYTE *)(v29 + 64) = v23;
  *(_QWORD *)(v29 + 72) = v24;
  *(_QWORD *)(v29 + 80) = v25;
  *(_QWORD *)(v29 + 88) = v26;
  *(_QWORD *)(v29 + 96) = v27;
  v33 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v29 + 104) = v33;
  *(_QWORD *)(v29 + 120) = v28;
  swift_retain(v30);
  swift_retain(v22);
  swift_retain(v25);
  swift_retain(v33);
  swift_retain(v28);
  v31 = sub_10002DE80(v19, (uint64_t)&unk_100492378, v29);
  swift_release(v31);
  swift_release(v34);
  sub_100008758(v19, (uint64_t *)&unk_100493720);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100110100()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *log;
  uint64_t v41[2];

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = swift_release(*(_QWORD *)(v0 + 216));
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_errorRetain(v1);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = v9;
    v17 = *(_QWORD *)(v0 + 232);
    v37 = *(_QWORD *)(v0 + 160);
    v38 = *(_QWORD *)(v0 + 152);
    v39 = *(_QWORD *)(v0 + 176);
    v18 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v41[0] = v36;
    *(_DWORD *)v18 = 136446466;
    swift_release(v7);
    swift_release(v8);
    swift_release(v10);
    swift_release(v11);
    swift_release(v12);
    v19 = (char *)ActionType.rawValue.getter(v16);
    *(_QWORD *)(v18 + 4) = sub_100019400(v19, v20, v41);
    swift_bridgeObjectRelease();
    swift_release(v7);
    swift_release(v8);
    swift_release(v10);
    swift_release(v11);
    swift_release(v12);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v17;
    swift_errorRetain(v17);
    v21 = sub_100005574((uint64_t *)&unk_1004911F0);
    v22 = (char *)String.init<A>(describing:)(v0 + 128, v21);
    *(_QWORD *)(v18 + 14) = sub_100019400(v22, v23, v41);
    swift_bridgeObjectRelease();
    swift_errorRelease(v17);
    swift_errorRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, log, v15, "%{public}s: perform failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v37 + 8))(v39, v38);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 160);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_errorRelease(v25);
    swift_errorRelease(v25);

    v24.n128_f64[0] = (*(double (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  v30 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 192);
  v32 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 176);
  v34 = *(_QWORD *)(v0 + 136);
  v33 = *(_QWORD *)(v0 + 144);
  swift_willThrow(v24);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100110454(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100055090((_QWORD *)a2);
  v10 = sub_100055090((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 48));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100125D68((_QWORD *)a2);
    sub_100125D68((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100125D68((_QWORD *)a2);
    sub_100125D68((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100110630(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100054B90((_QWORD *)a2);
  v10 = sub_100054B90((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10011082C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1000535A4((_QWORD *)a2);
  v10 = sub_1000535A4((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)a2, (void (*)(uint64_t))&_swift_release);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100110A28(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100110AE8, 0, 0);
}

uint64_t sub_100110AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044C060, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100110FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125E10;
  else
    v3 = sub_100125E04;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100111034(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_1001110F4, 0, 0);
}

uint64_t sub_1001110F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044C0D8, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_1001115DC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_10011169C, 0, 0);
}

uint64_t sub_10011169C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044C2B8, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100111B84(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 688) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 696) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v11;
  v12 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v12;
  v13 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v13;
  v14 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v14;
  return swift_task_switch(sub_100111C44, 0, 0);
}

uint64_t sub_100111C44()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_100054DC0((_QWORD *)(v0 + 16));
  v11 = sub_100054DC0((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_1000549E0((_QWORD *)(v0 + 16));
    sub_1000549E0((_QWORD *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_1000549E0((_QWORD *)(v0 + 16));
    sub_1000549E0((_QWORD *)(v0 + 16));

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_100008758(v23, &qword_10048E088);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release(v27);
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_10044C240, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_100054DC0((_QWORD *)(v0 + 272));
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100125C94, v35, v40, v41);
  swift_release(v35);
  swift_release(*(_QWORD *)(v0 + 672));
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100112040;
  return v46(v1);
}

uint64_t sub_100112040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001122B0;
  else
    v3 = sub_1001120A4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001120A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_100054DC0((_QWORD *)(v0 + 528));
  v9 = sub_100054DC0((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 752);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v15 = *(_QWORD *)(v0 + 712);
  v16 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v26 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v26);
    swift_bridgeObjectRelease();
    sub_1000549E0((_QWORD *)(v0 + 528));
    sub_1000549E0((_QWORD *)(v0 + 528));
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release(v13);

    v25(v15, v16);
  }
  else
  {
    sub_1000549E0((_QWORD *)(v0 + 528));
    sub_1000549E0((_QWORD *)(v0 + 528));
    swift_release(v13);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 712);
  v22 = *(_QWORD *)(v0 + 704);
  v23 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001122B0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release(*(_QWORD *)(v0 + 752));
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_100054DC0((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_100054DC0((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_100019400(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_1000549E0((_QWORD *)(v0 + 400));
    sub_1000549E0((_QWORD *)(v0 + 400));
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_100019400(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_1000549E0((_QWORD *)(v0 + 400));
    sub_1000549E0((_QWORD *)(v0 + 400));
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100112544(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 688) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 696) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v11;
  v12 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v12;
  v13 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v13;
  v14 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v14;
  return swift_task_switch(sub_100112604, 0, 0);
}

uint64_t sub_100112604()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_100054B90((_QWORD *)(v0 + 16));
  v11 = sub_100054B90((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_100008758(v23, &qword_10048E088);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release(v27);
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_10044C1C8, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_100054B90((_QWORD *)(v0 + 272));
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100125B48, v35, v40, v41);
  swift_release(v35);
  swift_release(*(_QWORD *)(v0 + 672));
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_100112A20;
  return v46(v1);
}

uint64_t sub_100112A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100112CB0;
  else
    v3 = sub_100112A84;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100112A84()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_100054B90((_QWORD *)(v0 + 528));
  v9 = sub_100054B90((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 752);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v15 = *(_QWORD *)(v0 + 712);
  v16 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v26 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v26);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release(v13);

    v25(v15, v16);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_release(v13);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 712);
  v22 = *(_QWORD *)(v0 + 704);
  v23 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100112CB0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release(*(_QWORD *)(v0 + 752));
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_100054B90((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_100054B90((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_100019400(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_100019400(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100112F64(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 720) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 728) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 736) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 744) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 752) = swift_task_alloc(v10);
  v11 = swift_task_alloc(v10);
  v12 = a4[4];
  *(_OWORD *)(v4 + 232) = a4[5];
  v13 = a4[7];
  *(_OWORD *)(v4 + 248) = a4[6];
  *(_OWORD *)(v4 + 264) = v13;
  v14 = *a4;
  *(_OWORD *)(v4 + 168) = a4[1];
  v15 = a4[3];
  *(_OWORD *)(v4 + 184) = a4[2];
  *(_OWORD *)(v4 + 200) = v15;
  *(_OWORD *)(v4 + 216) = v12;
  *(_QWORD *)(v4 + 760) = v11;
  *(_QWORD *)(v4 + 280) = *((_QWORD *)a4 + 16);
  *(_OWORD *)(v4 + 152) = v14;
  return swift_task_switch(sub_100113048, 0, 0);
}

uint64_t sub_100113048()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 152);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v2 = *(_QWORD *)(v0 + 760);
  v3 = *(_QWORD *)(v0 + 736);
  v4 = *(_QWORD *)(v0 + 728);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 768) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 776) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 128) = v7;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v8;
  v9 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v9;
  v10 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v10;
  sub_100052850(v0 + 16);
  v11 = sub_100052850(v0 + 16);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 760);
  v16 = *(_QWORD *)(v0 + 736);
  v17 = *(_QWORD *)(v0 + 728);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 760);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 88));
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_100052690(v0 + 16);
    sub_100052690(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_100052690(v0 + 16);
    sub_100052690(v0 + 16);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 784) = v22;
  v23 = *(_QWORD *)(v0 + 720);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v24 = *(double *)(v0 + 248);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_100008758(v23, &qword_10048E088);
  *(_QWORD *)(v0 + 696) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release(v27);
  *(_QWORD *)(v0 + 712) = v30;
  v31 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 400) = v31;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 280);
  v32 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 336) = v32;
  v33 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 368) = v33;
  v34 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v0 + 288) = *v1;
  *(_OWORD *)(v0 + 304) = v34;
  v35 = swift_allocObject(&unk_10044BE08, 152, 7);
  v36 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v35 + 112) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v35 + 128) = v36;
  *(_QWORD *)(v35 + 144) = *(_QWORD *)(v0 + 280);
  v37 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v35 + 64) = v37;
  v38 = *(_OWORD *)(v0 + 232);
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v35 + 96) = v38;
  v39 = *(_OWORD *)(v0 + 168);
  *(_OWORD *)(v35 + 16) = *v1;
  *(_OWORD *)(v35 + 32) = v39;
  sub_100052850(v0 + 288);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 792) = Publisher<>.sink(receiveValue:)(sub_100125548, v35, v40, v41);
  swift_release(v35);
  swift_release(*(_QWORD *)(v0 + 712));
  v42 = *(int **)(v0 + 272);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 800) = v43;
  *v43 = v0;
  v43[1] = sub_10011345C;
  return v46(v1);
}

uint64_t sub_10011345C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 800);
  *(_QWORD *)(*(_QWORD *)v1 + 808) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001136E8;
  else
    v3 = sub_1001134C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001134C0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = *(_QWORD *)(v0 + 728);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 232);
  v6 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 672) = v6;
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 280);
  v7 = *(_OWORD *)(v0 + 168);
  v8 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 608) = v8;
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 640) = v5;
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 576) = v7;
  sub_100052850(v0 + 560);
  v9 = sub_100052850(v0 + 560);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 792);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
  v15 = *(_QWORD *)(v0 + 752);
  v16 = *(_QWORD *)(v0 + 728);
  if (v12)
  {
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v26 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 632));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v26);
    swift_bridgeObjectRelease();
    sub_100052690(v0 + 560);
    sub_100052690(v0 + 560);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release(v13);

    v25(v15, v16);
  }
  else
  {
    sub_100052690(v0 + 560);
    sub_100052690(v0 + 560);
    swift_release(v13);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 752);
  v22 = *(_QWORD *)(v0 + 744);
  v23 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001136E8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 808);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 776);
  v3 = *(_QWORD *)(v0 + 768);
  v4 = *(_QWORD *)(v0 + 744);
  v5 = *(_QWORD *)(v0 + 728);
  v6 = swift_release(*(_QWORD *)(v0 + 792));
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 232);
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 248);
  *(_OWORD *)(v0 + 536) = v8;
  *(_QWORD *)(v0 + 552) = *(_QWORD *)(v0 + 280);
  v9 = *(_OWORD *)(v0 + 168);
  v10 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 472) = v10;
  *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 504) = v7;
  *(_OWORD *)(v0 + 424) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 440) = v9;
  sub_100052850(v0 + 424);
  swift_errorRetain(v1);
  sub_100052850(v0 + 424);
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 808);
    v31 = *(_QWORD *)(v0 + 744);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v15 = *(_QWORD *)(v0 + 728);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 496));
    *(_QWORD *)(v16 + 4) = sub_100019400(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_100052690(v0 + 424);
    sub_100052690(v0 + 424);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 704) = v14;
    swift_errorRetain(v14);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 704, v20);
    *(_QWORD *)(v16 + 14) = sub_100019400(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 808);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 784);
    v25 = *(_QWORD *)(v0 + 744);
    v26 = *(_QWORD *)(v0 + 728);
    swift_errorRelease(v23);
    sub_100052690(v0 + 424);
    sub_100052690(v0 + 424);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 752);
  v28 = *(_QWORD *)(v0 + 744);
  v29 = *(_QWORD *)(v0 + 720);
  swift_task_dealloc(*(_QWORD *)(v0 + 760));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100113998(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100113A58, 0, 0);
}

uint64_t sub_100113A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044C150, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100113F40(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100114000, 0, 0);
}

uint64_t sub_100114000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BF70, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_1001144E8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_1001145A8, 0, 0);
}

uint64_t sub_1001145A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BAC0, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100114A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(v5 + 840) = a4;
  v7 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v5 + 848) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0, v8);
  *(_QWORD *)(v5 + 856) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 864) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 872) = swift_task_alloc(v11);
  *(_QWORD *)(v5 + 880) = swift_task_alloc(v11);
  *(_QWORD *)(v5 + 888) = swift_task_alloc(v11);
  *(_BYTE *)(v5 + 944) = a5;
  return swift_task_switch(sub_100114B38, 0, 0);
}

uint64_t sub_100114B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  _QWORD *v38;
  int *v40;
  uint64_t v41;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 888);
  v2 = *(_QWORD *)(v0 + 864);
  v3 = *(_QWORD *)(v0 + 856);
  v4 = *(_QWORD *)(v0 + 840);
  v5 = sub_1000086B4(v3, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 896) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v0 + 904) = v6;
  v6(v1, v5, v3);
  v7 = sub_100014A7C(v4, v0 + 216, &qword_10048DCF0);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 888);
  v12 = *(_QWORD *)(v0 + 864);
  v13 = *(_QWORD *)(v0 + 856);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v41 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 353));
    *(_QWORD *)(v14 + 4) = sub_100019400(v16, v17, &v41);
    swift_bridgeObjectRelease();
    sub_100008758(v0 + 216, &qword_10048DCF0);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: finishing…", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_100008758(v0 + 216, &qword_10048DCF0);
  }

  v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v18(v11, v13);
  *(_QWORD *)(v0 + 912) = v18;
  v19 = *(_QWORD *)(v0 + 848);
  v20 = *(_QWORD *)(v0 + 840);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v21 = *(double *)(v20 + 160);
  v22 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v23 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  v24 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v22, NSRunLoopCommonModes, v19, v21);

  sub_100008758(v19, &qword_10048E088);
  *(_QWORD *)(v0 + 824) = v24;
  v25 = type metadata accessor for NSTimer.TimerPublisher(0);
  v26 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v27 = ConnectablePublisher.autoconnect()(v25, v26);
  swift_release(v24);
  *(_QWORD *)(v0 + 816) = v27;
  sub_100014A7C(v20, v0 + 16, &qword_10048DCF0);
  v28 = swift_allocObject(&unk_10044BB38, 216, 7);
  v29 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v28 + 176) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v28 + 192) = v29;
  *(_QWORD *)(v28 + 208) = *(_QWORD *)(v0 + 208);
  v30 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v28 + 112) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v28 + 128) = v30;
  v31 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v28 + 144) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v28 + 160) = v31;
  v32 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v28 + 64) = v32;
  v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v28 + 96) = v33;
  v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v28 + 32) = v34;
  v35 = sub_100005574(&qword_10048E0A0);
  v36 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 920) = Publisher<>.sink(receiveValue:)(sub_100124F68, v28, v35, v36);
  swift_release(v28);
  swift_release(*(_QWORD *)(v0 + 816));
  v37 = *(int **)(v20 + 184);
  v40 = (int *)((char *)v37 + *v37);
  v38 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 928) = v38;
  *v38 = v0;
  v38[1] = sub_100114F1C;
  return ((uint64_t (*)(_QWORD, uint64_t))v40)(*(_QWORD *)(v0 + 840), v0 + 944);
}

uint64_t sub_100114F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 928);
  *(_QWORD *)(*(_QWORD *)v1 + 936) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100115174;
  else
    v3 = sub_100114F80;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100114F80()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 904);
  v2 = *(_QWORD *)(v0 + 896);
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 856);
  v5 = *(_QWORD *)(v0 + 840);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v6 = sub_100014A7C(v5, v0 + 616, &qword_10048DCF0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 920);
  v11 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
  v12 = *(_QWORD *)(v0 + 880);
  v13 = *(_QWORD *)(v0 + 856);
  if (v9)
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v23 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 753));
    *(_QWORD *)(v14 + 4) = sub_100019400(v16, v17, &v23);
    swift_bridgeObjectRelease();
    sub_100008758(v0 + 616, &qword_10048DCF0);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s: finish success", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
    swift_release(v10);

    v22(v12, v13);
  }
  else
  {
    sub_100008758(v0 + 616, &qword_10048DCF0);
    swift_release(v10);

    v11(v12, v13);
  }
  v18 = *(_QWORD *)(v0 + 880);
  v19 = *(_QWORD *)(v0 + 872);
  v20 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100115174()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 904);
  v3 = *(_QWORD *)(v0 + 896);
  v4 = *(_QWORD *)(v0 + 872);
  v5 = *(_QWORD *)(v0 + 856);
  v6 = *(_QWORD *)(v0 + 840);
  v7 = swift_release(*(_QWORD *)(v0 + 920));
  v2(v4, v3, v5, v7);
  sub_100014A7C(v6, v0 + 416, &qword_10048DCF0);
  swift_errorRetain(v1);
  v8 = swift_errorRetain(v1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(_QWORD *)(v0 + 936);
    v28 = *(_QWORD *)(v0 + 872);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v12 = *(_QWORD *)(v0 + 856);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v30 = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 553));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v30);
    swift_bridgeObjectRelease();
    sub_100008758(v0 + 416, &qword_10048DCF0);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v0 + 832) = v11;
    swift_errorRetain(v11);
    v17 = sub_100005574((uint64_t *)&unk_1004911F0);
    v18 = (char *)String.init<A>(describing:)(v0 + 832, v17);
    *(_QWORD *)(v13 + 14) = sub_100019400(v18, v19, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: finish failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    swift_errorRelease(v11);
    v29(v28, v12);
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 936);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 912);
    v22 = *(_QWORD *)(v0 + 872);
    v23 = *(_QWORD *)(v0 + 856);
    swift_errorRelease(v20);
    sub_100008758(v0 + 416, &qword_10048DCF0);
    swift_errorRelease(v20);
    swift_errorRelease(v20);

    v21(v22, v23);
  }
  v24 = *(_QWORD *)(v0 + 880);
  v25 = *(_QWORD *)(v0 + 872);
  v26 = *(_QWORD *)(v0 + 848);
  swift_task_dealloc(*(_QWORD *)(v0 + 888));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001153F0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 688) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 696) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v11;
  v12 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v12;
  v13 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v13;
  v14 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v14;
  return swift_task_switch(sub_1001154B0, 0, 0);
}

uint64_t sub_1001154B0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1000535A4((_QWORD *)(v0 + 16));
  v11 = sub_1000535A4((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_100008758(v23, &qword_10048E088);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release(v27);
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_10044BE80, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1000535A4((_QWORD *)(v0 + 272));
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100125690, v35, v40, v41);
  swift_release(v35);
  swift_release(*(_QWORD *)(v0 + 672));
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_1001158CC;
  return v46(v1);
}

uint64_t sub_1001158CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100115B5C;
  else
    v3 = sub_100115930;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100115930()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 736);
  v2 = *(_QWORD *)(v0 + 728);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 688);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 608) = v5;
  v6 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 640) = v6;
  v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 544) = v7;
  v8 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 576) = v8;
  sub_1000535A4((_QWORD *)(v0 + 528));
  v9 = sub_1000535A4((_QWORD *)(v0 + 528));
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 752);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
  v15 = *(_QWORD *)(v0 + 712);
  v16 = *(_QWORD *)(v0 + 688);
  if (v12)
  {
    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v17 = swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v26 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 592));
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v26);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release(v13);

    v25(v15, v16);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 528), (void (*)(uint64_t))&_swift_release);
    swift_release(v13);

    v14(v15, v16);
  }
  v21 = *(_QWORD *)(v0 + 712);
  v22 = *(_QWORD *)(v0 + 704);
  v23 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100115B5C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 736);
  v3 = *(_QWORD *)(v0 + 728);
  v4 = *(_QWORD *)(v0 + 704);
  v5 = *(_QWORD *)(v0 + 688);
  v6 = swift_release(*(_QWORD *)(v0 + 752));
  v2(v4, v3, v5, v6);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 480) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 512) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 416) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 448) = v10;
  sub_1000535A4((_QWORD *)(v0 + 400));
  swift_errorRetain(v1);
  sub_1000535A4((_QWORD *)(v0 + 400));
  v11 = swift_errorRetain(v1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = *(_QWORD *)(v0 + 768);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v15 = *(_QWORD *)(v0 + 688);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v33 = v17;
    *(_DWORD *)v16 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 464));
    *(_QWORD *)(v16 + 4) = sub_100019400(v18, v19, &v33);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v16 + 12) = 2082;
    *(_QWORD *)(v0 + 664) = v14;
    swift_errorRetain(v14);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 664, v20);
    *(_QWORD *)(v16 + 14) = sub_100019400(v21, v22, &v33);
    swift_bridgeObjectRelease();
    swift_errorRelease(v14);
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish failed: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v14);
    v32(v31, v15);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 768);
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 744);
    v25 = *(_QWORD *)(v0 + 704);
    v26 = *(_QWORD *)(v0 + 688);
    swift_errorRelease(v23);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 400), (void (*)(uint64_t))&_swift_release);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    v24(v25, v26);
  }
  v27 = *(_QWORD *)(v0 + 712);
  v28 = *(_QWORD *)(v0 + 704);
  v29 = *(_QWORD *)(v0 + 680);
  swift_task_dealloc(*(_QWORD *)(v0 + 720));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100115E10(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 680) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 688) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 696) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 704) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 712) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 720) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 208) = a4[4];
  *(_OWORD *)(v4 + 224) = v11;
  v12 = a4[7];
  *(_OWORD *)(v4 + 240) = a4[6];
  *(_OWORD *)(v4 + 256) = v12;
  v13 = a4[1];
  *(_OWORD *)(v4 + 144) = *a4;
  *(_OWORD *)(v4 + 160) = v13;
  v14 = a4[3];
  *(_OWORD *)(v4 + 176) = a4[2];
  *(_OWORD *)(v4 + 192) = v14;
  return swift_task_switch(sub_100115ED0, 0, 0);
}

uint64_t sub_100115ED0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  double v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t (*v46)(_OWORD *);
  uint64_t v47;

  v1 = (_OWORD *)(v0 + 144);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 696);
  v4 = *(_QWORD *)(v0 + 688);
  v5 = sub_1000086B4(v4, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 728) = v5;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 736) = v6;
  v6(v2, v5, v4);
  v7 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 96) = v7;
  v8 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 128) = v8;
  v9 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 16) = *v1;
  *(_OWORD *)(v0 + 32) = v9;
  v10 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 64) = v10;
  sub_1000535A4((_QWORD *)(v0 + 16));
  v11 = sub_1000535A4((_QWORD *)(v0 + 16));
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 720);
  v16 = *(_QWORD *)(v0 + 696);
  v17 = *(_QWORD *)(v0 + 688);
  if (v14)
  {
    v45 = *(_QWORD *)(v0 + 720);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v47 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(*(_BYTE *)(v0 + 80));
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v47);
    swift_bridgeObjectRelease();
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v45, v17);
  }
  else
  {
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);
    sub_100054A68((_QWORD *)(v0 + 16), (void (*)(uint64_t))&_swift_release);

    v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v22(v15, v17);
  }
  *(_QWORD *)(v0 + 744) = v22;
  v23 = *(_QWORD *)(v0 + 680);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v24 = *(double *)(v0 + 232);
  v25 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v26 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v25, NSRunLoopCommonModes, v23, v24);

  sub_100008758(v23, &qword_10048E088);
  *(_QWORD *)(v0 + 656) = v27;
  v28 = type metadata accessor for NSTimer.TimerPublisher(0);
  v29 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v30 = ConnectablePublisher.autoconnect()(v28, v29);
  swift_release(v27);
  *(_QWORD *)(v0 + 672) = v30;
  v31 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 352) = v31;
  v32 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 384) = v32;
  v33 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v33;
  v34 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 320) = v34;
  v35 = (_OWORD *)swift_allocObject(&unk_10044BEF8, 144, 7);
  v36 = *(_OWORD *)(v0 + 224);
  v35[5] = *(_OWORD *)(v0 + 208);
  v35[6] = v36;
  v37 = *(_OWORD *)(v0 + 256);
  v35[7] = *(_OWORD *)(v0 + 240);
  v35[8] = v37;
  v38 = *(_OWORD *)(v0 + 160);
  v35[1] = *v1;
  v35[2] = v38;
  v39 = *(_OWORD *)(v0 + 192);
  v35[3] = *(_OWORD *)(v0 + 176);
  v35[4] = v39;
  sub_1000535A4((_QWORD *)(v0 + 272));
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 752) = Publisher<>.sink(receiveValue:)(sub_100125DF8, v35, v40, v41);
  swift_release(v35);
  swift_release(*(_QWORD *)(v0 + 672));
  v42 = *(int **)(v0 + 256);
  v46 = (uint64_t (*)(_OWORD *))((char *)v42 + *v42);
  v43 = (_QWORD *)swift_task_alloc(v42[1]);
  *(_QWORD *)(v0 + 760) = v43;
  *v43 = v0;
  v43[1] = sub_1001162EC;
  return v46(v1);
}

uint64_t sub_1001162EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 760);
  *(_QWORD *)(*(_QWORD *)v1 + 768) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100125DE0;
  else
    v3 = sub_100125DE4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100116350(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100116410, 0, 0);
}

uint64_t sub_100116410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BFE8, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_1001168F8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_1001169B8, 0, 0);
}

uint64_t sub_1001169B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BC28, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100116EA0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100116F60, 0, 0);
}

uint64_t sub_100116F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BCA0, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_1001252A4, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100117448;
  return v51(v0 + 16);
}

uint64_t sub_100117448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100117764;
  else
    v3 = sub_1001174AC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001174AC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 56);
  v28 = *(_BYTE *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v29 = v9;
  swift_retain_n(v9, 2);
  v31 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v30 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 184);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    v27 = *(_QWORD *)(v0 + 160);
    v18 = swift_slowAlloc(12, -1);
    v26 = v15;
    v19 = swift_slowAlloc(32, -1);
    v32 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v28);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v32);
    swift_bridgeObjectRelease();
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    swift_release_n(v31, 2);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finish success", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
    swift_release(v30);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v27);
  }
  else
  {
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    swift_release_n(v31, 2);
    swift_release(v30);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v22 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100117764()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = swift_release(*(_QWORD *)(v0 + 216));
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_BYTE *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 120);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  swift_errorRetain(v1);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v12);
  swift_retain(v13);
  v14 = swift_errorRetain(v1);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.error.getter(v15);
  log = v15;
  if (os_log_type_enabled(v15, v16))
  {
    v30 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 168);
    v33 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 176);
    v17 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(64, -1);
    v37 = v31;
    *(_DWORD *)v17 = 136446466;
    v18 = (char *)ActionType.rawValue.getter(v10);
    *(_QWORD *)(v17 + 4) = sub_100019400(v18, v19, &v37);
    swift_bridgeObjectRelease();
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    *(_WORD *)(v17 + 12) = 2082;
    *(_QWORD *)(v0 + 144) = v30;
    swift_errorRetain(v30);
    v20 = sub_100005574((uint64_t *)&unk_1004911F0);
    v21 = (char *)String.init<A>(describing:)(v0 + 144, v20);
    *(_QWORD *)(v17 + 14) = sub_100019400(v21, v22, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v30);
    swift_errorRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, log, v16, "%{public}s: finish failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    swift_errorRelease(v30);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 232);
    v24 = *(_QWORD *)(v0 + 168);
    v35 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 160);
    swift_errorRelease(v23);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_release_n(v13, 2);
    swift_errorRelease(v23);
    swift_errorRelease(v23);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v25);
  }
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 176);
  v28 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100117ACC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100117B8C, 0, 0);
}

uint64_t sub_100117B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BD18, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_100118074(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 160) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 168) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 184) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 192) = swift_task_alloc(v10);
  v11 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v11;
  *(_OWORD *)(v4 + 112) = a4[6];
  v12 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v12;
  v13 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v13;
  return swift_task_switch(sub_100118134, 0, 0);
}

uint64_t sub_100118134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 208) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v47 = *(_BYTE *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 120);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  swift_retain_n(v10, 2);
  v12 = swift_retain_n(v11, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 160);
  v52 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v45 = *(_QWORD *)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v44 = v17;
    v19 = swift_slowAlloc(32, -1);
    v53 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v53);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v44);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    swift_release_n(v11, 2);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v16, v17);
  }
  v22 = *(_QWORD *)(v0 + 152);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 88);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 128) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 136) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 56);
  v50 = *(_BYTE *)(v0 + 64);
  v32 = *(_QWORD *)(v0 + 72);
  v33 = *(_QWORD *)(v0 + 80);
  v34 = *(_QWORD *)(v0 + 88);
  v35 = *(_QWORD *)(v0 + 104);
  v48 = *(_QWORD *)(v0 + 96);
  v37 = *(int **)(v0 + 112);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = swift_allocObject(&unk_10044BD90, 128, 7);
  *(_QWORD *)(v38 + 16) = v30;
  v39 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v38 + 24) = v39;
  v46 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v38 + 40) = v46;
  *(_QWORD *)(v38 + 56) = v31;
  *(_BYTE *)(v38 + 64) = v50;
  *(_QWORD *)(v38 + 72) = v32;
  *(_QWORD *)(v38 + 80) = v33;
  *(_QWORD *)(v38 + 88) = v34;
  *(_QWORD *)(v38 + 96) = v48;
  *(_QWORD *)(v38 + 104) = v35;
  *(_QWORD *)(v38 + 112) = v37;
  *(_QWORD *)(v38 + 120) = v36;
  swift_retain(v39);
  swift_retain(v46);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v36);
  v40 = sub_100005574(&qword_10048E0A0);
  v41 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 216) = Publisher<>.sink(receiveValue:)(sub_100125DF0, v38, v40, v41);
  swift_release(v38);
  swift_release(*(_QWORD *)(v0 + 136));
  v51 = (uint64_t (*)(uint64_t))((char *)v37 + *v37);
  v42 = (_QWORD *)swift_task_alloc(v37[1]);
  *(_QWORD *)(v0 + 224) = v42;
  *v42 = v0;
  v42[1] = sub_100110FD0;
  return v51(v0 + 16);
}

uint64_t sub_10011861C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v6 = sub_100005574(&qword_10048E088);
  *(_QWORD *)(v4 + 136) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0, v7);
  *(_QWORD *)(v4 + 144) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 152) = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 160) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 168) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 176) = swift_task_alloc(v10);
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v12;
  v13 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v13;
  return swift_task_switch(sub_1001186D4, 0, 0);
}

uint64_t sub_1001186D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  double v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = sub_1000086B4(v2, (uint64_t)qword_10048E058);
  *(_QWORD *)(v0 + 184) = v4;
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 192) = v5;
  v5(v1, v4, v2);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 40);
  v47 = *(_BYTE *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  swift_retain_n(v9, 2);
  v49 = v10;
  v11 = swift_retain_n(v10, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 152);
  if (v14)
  {
    v44 = *(_QWORD *)(v0 + 176);
    v18 = swift_slowAlloc(12, -1);
    v43 = v16;
    v19 = swift_slowAlloc(32, -1);
    v50 = v19;
    *(_DWORD *)v18 = 136446210;
    v20 = (char *)ActionType.rawValue.getter(v47);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, &v50);
    swift_bridgeObjectRelease();
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s: finishing…", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v44, v43);
  }
  else
  {
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v9, 2);
    swift_release_n(v49, 2);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  v22 = *(_QWORD *)(v0 + 136);
  sub_1000087DC(0, (unint64_t *)&qword_10048E090, NSTimer_ptr);
  v23 = *(double *)(v0 + 72);
  v24 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = static NSTimer.publish(every:tolerance:on:in:options:)(0, 1, v24, NSRunLoopCommonModes, v22, v23);

  sub_100008758(v22, &qword_10048E088);
  *(_QWORD *)(v0 + 112) = v26;
  v27 = type metadata accessor for NSTimer.TimerPublisher(0);
  v28 = sub_100006924((unint64_t *)&qword_10048E098, (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher, (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  v29 = ConnectablePublisher.autoconnect()(v27, v28);
  swift_release(v26);
  *(_QWORD *)(v0 + 120) = v29;
  v30 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 40);
  LOBYTE(v29) = *(_BYTE *)(v0 + 48);
  v32 = *(_QWORD *)(v0 + 56);
  v33 = *(_QWORD *)(v0 + 64);
  v34 = *(_QWORD *)(v0 + 72);
  v35 = *(_QWORD *)(v0 + 88);
  v36 = *(int **)(v0 + 96);
  v45 = *(_QWORD *)(v0 + 80);
  v48 = *(_QWORD *)(v0 + 104);
  v37 = swift_allocObject(&unk_10044BBB0, 112, 7);
  *(_QWORD *)(v37 + 16) = v30;
  v38 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v37 + 24) = v38;
  *(_QWORD *)(v37 + 40) = v31;
  *(_BYTE *)(v37 + 48) = v29;
  *(_QWORD *)(v37 + 56) = v32;
  *(_QWORD *)(v37 + 64) = v33;
  *(_QWORD *)(v37 + 72) = v34;
  *(_QWORD *)(v37 + 80) = v45;
  *(_QWORD *)(v37 + 88) = v35;
  *(_QWORD *)(v37 + 96) = v36;
  *(_QWORD *)(v37 + 104) = v48;
  swift_retain(v38);
  swift_retain(v31);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v48);
  v39 = sub_100005574(&qword_10048E0A0);
  v40 = sub_10002FFB8(&qword_10048E0A8, &qword_10048E0A0, (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  *(_QWORD *)(v0 + 200) = Publisher<>.sink(receiveValue:)(sub_10012509C, v37, v39, v40);
  swift_release(v37);
  swift_release(*(_QWORD *)(v0 + 120));
  v46 = (uint64_t (*)(uint64_t))((char *)v36 + *v36);
  v41 = (_QWORD *)swift_task_alloc(v36[1]);
  *(_QWORD *)(v0 + 208) = v41;
  *v41 = v0;
  v41[1] = sub_100118B70;
  return v46(v0 + 16);
}

uint64_t sub_100118B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100118E60;
  else
    v3 = sub_100118BD4;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100118BD4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 40);
  v27 = *(_BYTE *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 104);
  swift_retain_n(v5, 2);
  swift_retain_n(v6, 2);
  swift_retain_n(v7, 2);
  swift_retain_n(v8, 2);
  v29 = v9;
  v10 = swift_retain_n(v9, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v28 = *(_QWORD *)(v0 + 200);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 144);
  v16 = *(_QWORD *)(v0 + 152);
  if (v13)
  {
    v26 = *(_QWORD *)(v0 + 168);
    v17 = swift_slowAlloc(12, -1);
    v25 = v16;
    v18 = swift_slowAlloc(32, -1);
    v30 = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = (char *)ActionType.rawValue.getter(v27);
    *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v30);
    swift_bridgeObjectRelease();
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
    swift_release(v28);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v15);
  }
  else
  {
    swift_release_n(v5, 2);
    swift_release_n(v6, 2);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v29, 2);
    swift_release(v28);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 160);
  v23 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100118E60()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *log;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 192);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = swift_release(*(_QWORD *)(v0 + 200));
  v2(v4, v3, v5, v6);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 40);
  v9 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 104);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  swift_errorRetain(v1);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v12);
  v13 = swift_errorRetain(v1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  log = v14;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 144);
    v35 = *(_QWORD *)(v0 + 160);
    v17 = v9;
    v18 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(64, -1);
    v37 = v32;
    *(_DWORD *)v18 = 136446466;
    v19 = (char *)ActionType.rawValue.getter(v17);
    *(_QWORD *)(v18 + 4) = sub_100019400(v19, v20, &v37);
    swift_bridgeObjectRelease();
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    *(_WORD *)(v18 + 12) = 2082;
    *(_QWORD *)(v0 + 128) = v16;
    swift_errorRetain(v16);
    v21 = sub_100005574((uint64_t *)&unk_1004911F0);
    v22 = (char *)String.init<A>(describing:)(v0 + 128, v21);
    *(_QWORD *)(v18 + 14) = sub_100019400(v22, v23, &v37);
    swift_bridgeObjectRelease();
    swift_errorRelease(v16);
    swift_errorRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, log, v15, "%{public}s: finish failed: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v32, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    swift_errorRelease(v16);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 144);
    swift_errorRelease(v24);
    swift_release_n(v7, 2);
    swift_release_n(v8, 2);
    swift_release_n(v10, 2);
    swift_release_n(v11, 2);
    swift_release_n(v12, 2);
    swift_errorRelease(v24);
    swift_errorRelease(v24);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  }
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 136);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100119190(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100054DC0((_QWORD *)a2);
  v10 = sub_100054DC0((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 64));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1000549E0((_QWORD *)a2);
    sub_1000549E0((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1000549E0((_QWORD *)a2);
    sub_1000549E0((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10011936C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_100052850(a2);
  v10 = sub_100052850(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 72));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_100052690(a2);
    sub_100052690(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100052690(a2);
    sub_100052690(a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100119548(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v19;
  _BYTE v20[200];

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  v10 = sub_100014A7C(a2, (uint64_t)v20, &qword_10048DCF0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(v20[137]);
    v17 = v16;
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease(v17);
    sub_100008758((uint64_t)v20, &qword_10048DCF0);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_100008758((uint64_t)v20, &qword_10048DCF0);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10011972C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v5 = type metadata accessor for Logger(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C578 != -1)
    swift_once(&qword_10048C578, sub_10002E5A0);
  v9 = sub_1000086B4(v5, (uint64_t)qword_10048E058);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_10005200C((_QWORD *)a2);
  v10 = sub_10005200C((_QWORD *)a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v19 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = (char *)ActionType.rawValue.getter(*(_BYTE *)(a2 + 32));
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v16, &v19);
    swift_bridgeObjectRelease();
    sub_1001250DC((_QWORD *)a2);
    sub_1001250DC((_QWORD *)a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    sub_1001250DC((_QWORD *)a2);
    sub_1001250DC((_QWORD *)a2);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int NSFileManager.Failure.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void NSFileManager.Failure.hash(into:)()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_10011996C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t MusicLibrary.ActionableState.description.getter(uint64_t a1, __int16 a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::String v15;
  _QWORD v16[2];
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100492220);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 1701736270;
  switch(HIBYTE(a2))
  {
    case 2:
      return result;
    case 3:
      result = 0x6164644120959EE2;
      break;
    case 4:
      result = 0x1000000000000013;
      break;
    case 5:
      result = 0x1000000000000014;
      break;
    default:
      if ((a2 & 0x100) != 0)
      {
        result = 0x100000000000001DLL;
      }
      else if ((a2 & 1) != 0)
      {
        result = 0x100000000000001ELL;
      }
      else
      {
        v18 = 0;
        v19 = 0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v12 = swift_bridgeObjectRelease();
        v18 = 0x1000000000000014;
        v19 = 0x80000001003B2690;
        v16[1] = a1;
        static Locale.autoupdatingCurrent.getter(v12);
        v13 = sub_100119BF4();
        FloatingPointFormatStyle.Percent.init(locale:)(v6, &type metadata for Double, v13);
        v14 = sub_10002FFB8(&qword_100492230, &qword_100492220, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>.Percent);
        BinaryFloatingPoint.formatted<A>(_:)(&v17, v10, &type metadata for Double, v7, v13, v14);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        String.append(_:)(v17);
        swift_bridgeObjectRelease();
        v15._countAndFlagsBits = 8233;
        v15._object = (void *)0xE200000000000000;
        String.append(_:)(v15);
        result = v18;
      }
      break;
  }
  return result;
}

unint64_t sub_100119BF4()
{
  unint64_t result;

  result = qword_100492228;
  if (!qword_100492228)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_100492228);
  }
  return result;
}

uint64_t sub_100119C3C(uint64_t a1, uint64_t a2)
{
  return _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(*(_QWORD *)a1, *(_WORD *)(a1 + 8), *(_QWORD *)a2, *(_WORD *)(a2 + 8));
}

uint64_t sub_100119C54()
{
  uint64_t v0;

  return MusicLibrary.ActionableState.description.getter(*(_QWORD *)v0, *(_WORD *)(v0 + 8));
}

uint64_t MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(uint64_t a1, __int16 a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  uint64_t v36;

  *(_QWORD *)(v9 + 1176) = v8;
  *(_QWORD *)(v9 + 1168) = v36;
  *(_OWORD *)(v9 + 1152) = v35;
  *(_QWORD *)(v9 + 1144) = a8;
  *(_QWORD *)(v9 + 1136) = a7;
  *(_QWORD *)(v9 + 1128) = a6;
  *(_QWORD *)(v9 + 1120) = a5;
  *(_QWORD *)(v9 + 1112) = a4;
  *(_QWORD *)(v9 + 1104) = a3;
  *(_WORD *)(v9 + 354) = a2;
  *(_QWORD *)(v9 + 1096) = a1;
  v10 = *a4;
  *(_QWORD *)(v9 + 1184) = *a4;
  v11 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
  *(_QWORD *)(v9 + 1192) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 1200) = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1208) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1216) = swift_task_alloc(v13);
  *(_QWORD *)(v9 + 1224) = swift_task_alloc(v13);
  v14 = sub_100005574(&qword_10048D510);
  *(_QWORD *)(v9 + 1232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10048D8E8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1240) = swift_task_alloc(v15);
  *(_QWORD *)(v9 + 1248) = swift_task_alloc(v15);
  v16 = type metadata accessor for Actions.MetricsReportingContext(0);
  *(_QWORD *)(v9 + 1256) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v9 + 1264) = v17;
  *(_QWORD *)(v9 + 1272) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Notice.Variant(0);
  *(_QWORD *)(v9 + 1280) = v18;
  *(_QWORD *)(v9 + 1288) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  *(_QWORD *)(v9 + 1296) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v9 + 1304) = v20;
  v21 = (*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1312) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1320) = swift_task_alloc(v21);
  *(_QWORD *)(v9 + 1328) = swift_task_alloc(v21);
  v22 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  *(_QWORD *)(v9 + 1336) = v22;
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v9 + 1344) = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1352) = swift_task_alloc(v24);
  *(_QWORD *)(v9 + 1360) = swift_task_alloc(v24);
  v25 = type metadata accessor for MusicLibrary.AddStatus(0);
  *(_QWORD *)(v9 + 1368) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v9 + 1376) = v26;
  v27 = (*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1384) = swift_task_alloc(v27);
  *(_QWORD *)(v9 + 1392) = swift_task_alloc(v27);
  v28 = *(_QWORD *)(v10 + class metadata base offset for MusicLibrary.ItemState);
  *(_QWORD *)(v9 + 1400) = v28;
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v9 + 1408) = v29;
  v30 = (*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v9 + 1416) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1424) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1432) = swift_task_alloc(v30);
  *(_QWORD *)(v9 + 1440) = swift_task_alloc(v30);
  v31 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 1448) = v31;
  *(_QWORD *)(v9 + 1456) = static MainActor.shared.getter(v31);
  v32 = dispatch thunk of Actor.unownedExecutor.getter(v31, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 1464) = v32;
  *(_QWORD *)(v9 + 1472) = v33;
  return swift_task_switch(sub_100119F04, v32, v33);
}

uint64_t sub_100119F04(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  os_log_t v3;
  Class isa;
  Class v5;
  Class v6;
  Class v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  Class v14;
  Class v15;
  Class v16;
  Class v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  objc_class *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  Class v35;
  Class v36;
  Class v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  Class v47;
  Class v48;
  Class v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  NSObject *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  Class v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  unsigned int v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  unint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  int v78;
  void (*v79)(Class, Class, Class);
  Class v80;
  Class v81;
  Class v82;
  Class v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  void (*v88)(Class, Class);
  Class v89;
  Class v90;
  Class v91;
  os_log_t v92;
  Class v93;
  uint64_t v94;
  __int16 v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  Class v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  NSObject *v115;
  os_log_type_t v116;
  _BOOL4 v117;
  uint8_t *v118;
  objc_class *v119;
  Class v121;
  Class v122;
  Class v123;
  uint64_t v124;
  Class v125;
  Class v126;
  Class v127;
  Class v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  Class v133;
  Class v134;
  Class v135;
  Class v136;
  NSObject *v137;
  uint64_t (*v138)(Class, Class, Class);
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  _BOOL4 v142;
  Class v143;
  Class v144;
  Class v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  objc_class *v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  Class v161;
  uint64_t v162;
  objc_class *v163;
  objc_class *v164;
  int64x2_t v165;
  int64x2_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  objc_class *v170;
  NSObject *v171;
  os_log_type_t v172;
  uint8_t *v173;
  uint64_t v174;
  uint64_t v175;
  Class v176;
  Class v177;
  uint64_t v178;
  _QWORD *v179;
  Class v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t (*v185)();
  uint64_t v186;
  objc_class *v187;
  Class v188;
  uint64_t v189;
  NSObject *v190;
  os_log_type_t v191;
  _BOOL4 v192;
  void (*v193)(Class, Class);
  Class v194;
  Class v195;
  Class v196;
  os_log_t v197;
  Class v198;
  uint64_t v199;
  __int16 v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  Class v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  uint8_t *v219;
  Class v220;
  Class v221;
  Class v222;
  uint64_t v223;
  Class v224;
  Class v225;
  Class v226;
  Class v227;
  NSObject *v228;
  Class v229;
  Class v230;
  Class v231;
  __int128 v232;
  uint64_t v233;
  NSObject *v234;
  os_log_type_t v235;
  _BOOL4 v236;
  Class v237;
  _QWORD *p_isa;
  Class v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  void (*v247)(Class, uint64_t);
  NSObject *v248;
  os_log_type_t v249;
  uint8_t *v250;
  Class v251;
  Class v252;
  uint64_t ObjectType;
  void (*v254)(char *, ValueMetadata *, unint64_t, uint64_t, Class);
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  Class v258;
  uint64_t v259;
  Class v260;
  Class v261;
  unint64_t v262;
  uint64_t v263;
  objc_class *v264;
  Class v265;
  Class v266;
  objc_class *v267;
  Class v268;
  Class v269;
  Class v270;
  uint64_t v271;
  uint64_t v272;
  NSObject *v273;
  os_log_type_t v274;
  uint8_t *v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  int *v279;
  objc_class *v280;
  Class v281;
  Class v282;
  Class v283;
  Class v284;
  __n128 v285;
  void (*v286)(Class, Class, __n128);
  uint64_t v287;
  NSObject *v288;
  os_log_type_t v289;
  Class v290;
  Class v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  NSObject *v296;
  char *v297;
  char *v298;
  uint64_t v299;
  NSObject *v300;
  os_log_type_t v301;
  uint8_t *v302;
  uint64_t v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  int *v307;
  objc_class *v308;
  os_log_t v309;
  uint64_t v310;
  Class v311;
  Class v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  uint64_t v323;
  uint64_t v324;
  NSObject *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char v330;
  uint64_t v331;
  Class v332;
  uint64_t v333;
  Class v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  objc_class *v340;
  uint64_t v341;
  uint64_t WitnessTable;
  uint64_t v343;
  uint64_t v344;
  NSObject *v345;
  os_log_type_t v346;
  uint8_t *v347;
  Class v348;
  Class v349;
  Class v350;
  Class v351;
  Class v352;
  __n128 v353;
  uint64_t v354;
  NSObject *v355;
  os_log_type_t v356;
  _BOOL4 v357;
  Class v358;
  Class v359;
  NSObject *v360;
  Class v361;
  Class v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  void (*v368)(Class, Class);
  _QWORD *v369;
  uint64_t v370;
  int *v371;
  _QWORD *v372;
  Class v373;
  uint64_t v374;
  uint64_t v375;
  objc_class *v376;
  NSObject *v377;
  os_log_type_t v378;
  uint8_t *v379;
  Class v380;
  Class v381;
  Class v382;
  unint64_t v383;
  __n128 v384;
  NSObject *v385;
  os_log_type_t v386;
  uint8_t *v387;
  os_log_t v388;
  Class v389;
  Class v390;
  Class v391;
  Class v392;
  Class v393;
  Class v394;
  Class v395;
  Class v396;
  Class v397;
  Class v398;
  Class v399;
  Class v400;
  Class v401;
  Class v402;
  Class v403;
  Class v404;
  Class v405;
  Class v406;
  Class v407;
  Class v408;
  Class v409;
  Class v410;
  Class v411;
  Class v412;
  uint64_t v413;
  void (*v414)(Class, Class, Class);
  Class v415;
  Class v416;
  uint64_t v417;
  Class v418;
  void (*v419)(Class, Class);
  Class v420;
  Class v421;
  os_log_t v422;
  Class v423;
  Class v424;
  Class v425;
  void (*v426)(Class, Class, Class);
  int64x2_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  Class v431;
  os_log_t log;
  os_log_t logc;
  os_log_t loga;
  uint64_t (*logd)(uint64_t, char);
  uint64_t (*loge)(char);
  NSObject *logf;
  os_log_t logb;
  os_log_t logg;
  uint64_t v440;
  os_log_type_t v441;
  uint64_t (*v442)(uint64_t, uint64_t, uint64_t);
  Class v443;
  uint64_t (*v444)(os_log_t, uint64_t, uint64_t);
  uint64_t v445;
  Class v446;
  uint64_t v447[2];

  v3 = v2;
  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  isa = v2[180].isa;
  v5 = v2[176].isa;
  v6 = v2[175].isa;
  v7 = v2[138].isa;
  v8 = type metadata accessor for Logger(0, a2);
  v2[185].isa = (Class)sub_1000086B4(v8, (uint64_t)static Logger.libraryActionableState);
  v9 = *((_QWORD *)v5 + 2);
  v3[186].isa = (Class)v9;
  v10 = ((uint64_t (*)(Class, Class, Class))v9)(isa, v7, v6);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  v13 = os_log_type_enabled(v11, v12);
  v14 = v3[180].isa;
  if (v13)
  {
    v15 = v3[179].isa;
    v16 = v3[176].isa;
    v17 = v3[175].isa;
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v447[0] = v19;
    *(_DWORD *)v18 = 136446210;
    ((void (*)(Class, Class, Class))v9)(v15, v14, v17);
    v20 = (char *)String.init<A>(describing:)(v15, v17);
    *(_QWORD *)(v18 + 4) = sub_100019400(v20, v21, v447);
    swift_bridgeObjectRelease();
    v22 = (objc_class *)*((_QWORD *)v16 + 1);
    ((void (*)(Class, Class))v22)(v14, v17);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "╭ Performing action for item: %{public}s", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    v22 = (objc_class *)*((_QWORD *)v3[176].isa + 1);
    ((void (*)(Class, Class))v22)(v14, v3[175].isa);
  }

  v3[187].isa = v22;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint64_t)v3[137].isa;
    v27 = WORD1(v3[44].isa);
    v28 = swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v447[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = (char *)MusicLibrary.ActionableState.description.getter(v26, v27);
    *(_QWORD *)(v28 + 4) = sub_100019400(v30, v31, v447);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "| Actionable state: %{public}s", (uint8_t *)v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);
  }

  v32 = swift_retain_n(v3[139].isa, 2);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter();
  log = v9;
  if (os_log_type_enabled(v33, v34))
  {
    v35 = v3[174].isa;
    v424 = v3[172].isa;
    v36 = v3[171].isa;
    v37 = v3[139].isa;
    v38 = swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v447[0] = v39;
    *(_DWORD *)v38 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v39);
    v40 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v41 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v40);
    v43 = v42;
    (*((void (**)(Class, Class))v424 + 1))(v35, v36);
    *(_QWORD *)(v38 + 4) = sub_100019400(v41, v43, v447);
    swift_bridgeObjectRelease();
    swift_release_n(v37, 2);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "| Add status: %{public}s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    swift_release_n(v3[139].isa, 2);
  }

  v44 = swift_retain_n(v3[139].isa, 2);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = v3[170].isa;
    v425 = v3[168].isa;
    v48 = v3[167].isa;
    v49 = v3[139].isa;
    v50 = swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v447[0] = v51;
    *(_DWORD *)v50 = 136446210;
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v51);
    v52 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v53 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v48, v52);
    v54 = v3;
    v56 = v55;
    (*((void (**)(Class, Class))v425 + 1))(v47, v48);
    *(_QWORD *)(v50 + 4) = sub_100019400(v53, v56, v447);
    v3 = v54;
    swift_bridgeObjectRelease();
    swift_release_n(v49, 2);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "| Download status: %{public}s", (uint8_t *)v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {
    swift_release_n(v3[139].isa, 2);
  }

  v57 = swift_retain_n(v3[147].isa, 4);
  v58 = Logger.logObject.getter(v57);
  v59 = static os_log_type_t.default.getter();
  v60 = os_log_type_enabled(v58, v59);
  v61 = v3[147].isa;
  if (v60)
  {
    v62 = swift_slowAlloc(22, -1);
    v63 = swift_slowAlloc(64, -1);
    v447[0] = v63;
    *(_DWORD *)v62 = 136446466;
    v64 = (char *)MusicLibrary.name.getter();
    *(_QWORD *)(v62 + 4) = sub_100019400(v64, v65, v447);
    swift_bridgeObjectRelease();
    v66 = swift_release_n(v61, 2);
    *(_WORD *)(v62 + 12) = 2082;
    v67 = (char *)MusicLibrary.id.getter(v66);
    *(_QWORD *)(v62 + 14) = sub_100019400(v67, v68, v447);
    swift_bridgeObjectRelease();
    swift_release_n(v61, 2);
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "| Library: %{public}s (%{public}s)", (uint8_t *)v62, 0x16u);
    swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v62, -1, -1);
  }
  else
  {
    swift_release_n(v3[147].isa, 4);
  }

  v70 = WORD1(v3[44].isa);
  switch(v70 >> 8)
  {
    case 2u:
      v71 = Logger.logObject.getter(v69);
      v72 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v73 = 0;
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "|—● Nothing to Perform: Actionable State is unknown", v73, 2u);
        swift_slowDealloc(v73, -1, -1);
      }

      v74 = sub_10012439C();
      v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v74, 0, 0);
      swift_willThrow(v76);
      goto LABEL_21;
    case 3u:
      v121 = v3[173].isa;
      v122 = v3[172].isa;
      v123 = v3[171].isa;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v69);
      v124 = (*((uint64_t (**)(Class, Class))v122 + 11))(v121, v123);
      if ((_DWORD)v124 == enum case for MusicLibrary.AddStatus.unaddable(_:))
      {
        v125 = v3[173].isa;
        v126 = v3[166].isa;
        v127 = v3[163].isa;
        v128 = v3[162].isa;
        (*((void (**)(Class, Class))v3[172].isa + 12))(v125, v3[171].isa);
        v129 = (*((uint64_t (**)(Class, Class, Class))v127 + 4))(v126, v125, v128);
        v130 = Logger.logObject.getter(v129);
        v131 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v130, v131))
        {
          v132 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v132 = 0;
          _os_log_impl((void *)&_mh_execute_header, v130, v131, "|—● Unaddable", v132, 2u);
          swift_slowDealloc(v132, -1, -1);
        }
        v133 = v3[166].isa;
        v134 = v3[165].isa;
        v135 = v3[163].isa;
        v136 = v3[162].isa;

        v137 = v3;
        v138 = (uint64_t (*)(Class, Class, Class))*((_QWORD *)v135 + 2);
        v139 = v138(v134, v133, v136);
        v140 = Logger.logObject.getter(v139);
        v141 = static os_log_type_t.default.getter();
        v142 = os_log_type_enabled(v140, v141);
        v143 = v137[165].isa;
        v144 = v137[163].isa;
        loga = v137;
        v145 = v137[162].isa;
        if (v142)
        {
          v146 = swift_slowAlloc(12, -1);
          v147 = swift_slowAlloc(32, -1);
          v447[0] = v147;
          *(_DWORD *)v146 = 136446210;
          v148 = sub_100006924(&qword_10048D9E8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
          v149 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v145, v148);
          *(_QWORD *)(v146 + 4) = sub_100019400(v149, v150, v447);
          swift_bridgeObjectRelease();
          v151 = (objc_class *)*((_QWORD *)v144 + 1);
          ((void (*)(Class, Class))v151)(v143, v145);
          _os_log_impl((void *)&_mh_execute_header, v140, v141, "|—| Reason: %{public}s", (uint8_t *)v146, 0xCu);
          swift_arrayDestroy(v147, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v147, -1, -1);
          swift_slowDealloc(v146, -1, -1);
        }
        else
        {
          v151 = (objc_class *)*((_QWORD *)v144 + 1);
          ((void (*)(Class, Class))v151)(v143, v137[162].isa);
        }

        loga[188].isa = v151;
        v268 = loga[164].isa;
        v269 = loga[163].isa;
        v270 = loga[162].isa;
        v138(v268, loga[166].isa, v270);
        v271 = (*((uint64_t (**)(Class, Class))v269 + 11))(v268, v270);
        if ((_DWORD)v271 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
        {
          v272 = (uint64_t)&loga[84];
          v273 = Logger.logObject.getter(v271);
          v274 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v273, v274))
          {
            v275 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v275 = 0;
            _os_log_impl((void *)&_mh_execute_header, v273, v274, "|—| Presenting Explicit Restriction alert", v275, 2u);
            swift_slowDealloc(v275, -1, -1);
          }
          v276 = loga[140].isa;

          v277 = v276[3];
          v278 = v276[4];
          sub_10000ABC8(v276, v277);
          sub_1000DDA90(0, v272);
          v279 = *(int **)(v278 + 8);
          v442 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v279 + *v279);
          v280 = (objc_class *)swift_task_alloc(v279[1]);
          loga[189].isa = v280;
          *(_QWORD *)v280 = loga;
          *((_QWORD *)v280 + 1) = sub_10011C488;
          return v442(v272, v277, v278);
        }
        if ((_DWORD)v271 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
        {
          v299 = (uint64_t)&loga[59];
          v300 = Logger.logObject.getter(v271);
          v301 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v300, v301))
          {
            v302 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v302 = 0;
            _os_log_impl((void *)&_mh_execute_header, v300, v301, "|—| Presenting Cloud Library Requirement alert", v302, 2u);
            swift_slowDealloc(v302, -1, -1);
          }
          v303 = (uint64_t)loga[142].isa;

          sub_100014A7C(v303, v299, &qword_10048D950);
          if (loga[66].isa == (Class)1)
          {
            v304 = loga[140].isa;
            sub_100008758(v299, &qword_10048D950);
            v305 = v304[3];
            v306 = v304[4];
            sub_10000ABC8(v304, v305);
            sub_1000DD89C(1, (uint64_t)&loga[77]);
            v307 = *(int **)(v306 + 8);
            v444 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v307 + *v307);
            v308 = (objc_class *)swift_task_alloc(v307[1]);
            loga[196].isa = v308;
            *(_QWORD *)v308 = loga;
            *((_QWORD *)v308 + 1) = sub_10011CA10;
            v309 = loga + 77;
            v310 = v305;
            return v444(v309, v310, v306);
          }
          v373 = loga[181].isa;
          v374 = sub_100014AC0(v299, (uint64_t)&loga[68]);
          loga[190].isa = (Class)static MainActor.shared.getter(v374);
          v375 = dispatch thunk of Actor.unownedExecutor.getter(v373, &protocol witness table for MainActor);
          loga[191].isa = (Class)v375;
          loga[192].isa = v376;
          return swift_task_switch(sub_10011C6BC, v375, v376);
        }
        else
        {
          v3 = loga;
          if ((_DWORD)v271 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
          {
            swift_release(loga[182].isa);
            v345 = Logger.logObject.getter(v344);
            v346 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v345, v346))
            {
              v347 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v347 = 0;
              _os_log_impl((void *)&_mh_execute_header, v345, v346, "|—| Presenting upsell", v347, 2u);
              swift_slowDealloc(v347, -1, -1);
            }
            v348 = loga[166].isa;
            v349 = loga[162].isa;

            loga[122].isa = 0;
            *(_OWORD *)&loga[118].isa = 0u;
            *(_OWORD *)&loga[120].isa = 0u;
            LOBYTE(loga[123].isa) = -1;
            _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0((uint64_t)&loga[118]);
            sub_100014974((uint64_t)&loga[118]);
            v343 = ((uint64_t (*)(Class, Class))v151)(v348, v349);
            goto LABEL_91;
          }
          v377 = Logger.logObject.getter(v271);
          v378 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v377, v378))
          {
            v379 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v379 = 0;
            _os_log_impl((void *)&_mh_execute_header, v377, v378, "|—| Unaddable reason is not supported by the UI", v379, 2u);
            swift_slowDealloc(v379, -1, -1);
          }
          v380 = loga[166].isa;
          v381 = loga[164].isa;
          v382 = loga[162].isa;

          v383 = sub_10012439C();
          v75 = swift_allocError(&_s15ActionableStateO5ErrorON, v383, 0, 0);
          swift_willThrow(v384);
          ((void (*)(Class, Class))v151)(v380, v382);
          ((void (*)(Class, Class))v151)(v381, v382);
LABEL_21:
          v3[211].isa = (Class)v75;
          v3[136].isa = (Class)v75;
          swift_errorRetain(v75);
          v77 = sub_100005574((uint64_t *)&unk_1004911F0);
          v78 = swift_dynamicCast(v77, &v3[136], v77, &_s15ActionableStateO5ErrorON, 0);
          v79 = (void (*)(Class, Class, Class))v3[186].isa;
          v80 = v3[175].isa;
          v81 = v3[139].isa;
          v82 = v3[138].isa;
          if (v78)
          {
            v83 = v3[178].isa;
            swift_errorRelease(v75);
            v79(v83, v82, v80);
            v84 = swift_retain_n(v81, 4);
            v85 = Logger.logObject.getter(v84);
            v86 = static os_log_type_t.error.getter(v85);
            v87 = os_log_type_enabled(v85, v86);
            v88 = (void (*)(Class, Class))v3[187].isa;
            if (v87)
            {
              v421 = v3[178].isa;
              v426 = (void (*)(Class, Class, Class))v3[186].isa;
              v411 = v3[179].isa;
              v416 = v3[175].isa;
              v89 = v3[174].isa;
              v90 = v3[171].isa;
              v91 = v3[170].isa;
              v408 = v3[168].isa;
              v402 = v3[172].isa;
              v405 = v3[167].isa;
              logc = (os_log_t)v3[187].isa;
              v92 = v3;
              v93 = v3[139].isa;
              v94 = (uint64_t)v92[137].isa;
              v95 = WORD1(v92[44].isa);
              v96 = swift_slowAlloc(52, -1);
              v440 = swift_slowAlloc(160, -1);
              v447[0] = v440;
              *(_DWORD *)v96 = 136447234;
              v97 = (char *)MusicLibrary.ActionableState.description.getter(v94, v95);
              *(_QWORD *)(v96 + 4) = sub_100019400(v97, v98, v447);
              v99 = swift_bridgeObjectRelease();
              *(_WORD *)(v96 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v99);
              v100 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v101 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v90, v100);
              v103 = v102;
              (*((void (**)(Class, Class))v402 + 1))(v89, v90);
              *(_QWORD *)(v96 + 14) = sub_100019400(v101, v103, v447);
              swift_bridgeObjectRelease();
              v104 = swift_release_n(v93, 2);
              *(_WORD *)(v96 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v104);
              v105 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v106 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v405, v105);
              v108 = v107;
              (*((void (**)(Class, Class))v408 + 1))(v91, v405);
              *(_QWORD *)(v96 + 24) = sub_100019400(v106, v108, v447);
              swift_bridgeObjectRelease();
              v109 = v93;
              v3 = v92;
              swift_release_n(v109, 2);
              *(_WORD *)(v96 + 32) = 2082;
              v426(v411, v421, v416);
              v110 = (char *)String.init<A>(describing:)(v411, v416);
              *(_QWORD *)(v96 + 34) = sub_100019400(v110, v111, v447);
              swift_bridgeObjectRelease();
              v112 = ((uint64_t (*)(Class, Class))logc)(v421, v416);
              *(_WORD *)(v96 + 42) = 2082;
              v113 = (char *)String.init<A>(describing:)(v112, &_s15ActionableStateO5ErrorON);
              *(_QWORD *)(v96 + 44) = sub_100019400(v113, v114, v447);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v85, v86, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v96,
                0x34u);
              swift_arrayDestroy(v440, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v440, -1, -1);
              swift_slowDealloc(v96, -1, -1);
            }
            else
            {
              v260 = v3[178].isa;
              v261 = v3[175].isa;
              swift_release_n(v3[139].isa, 4);
              v88(v260, v261);
            }

            v262 = sub_10012439C();
            v3[212].isa = (Class)v262;
            v263 = swift_allocError(&_s15ActionableStateO5ErrorON, v262, 0, 0);
            v3[213].isa = (Class)v263;
            v264 = (objc_class *)swift_task_alloc(dword_10049224C);
            v3[214].isa = v264;
            *(_QWORD *)v264 = v3;
            *((_QWORD *)v264 + 1) = sub_10011D470;
            return sub_10011F768(v263, (uint64_t)v3[137].isa, WORD1(v3[44].isa), (_QWORD *)v3[139].isa, (uint64_t)v3[140].isa);
          }
          else
          {
            v188 = v3[177].isa;
            swift_errorRelease(v3[136].isa);
            v79(v188, v82, v80);
            swift_retain_n(v81, 3);
            swift_errorRetain(v75);
            swift_retain(v81);
            v189 = swift_errorRetain(v75);
            v190 = Logger.logObject.getter(v189);
            v191 = static os_log_type_t.error.getter(v190);
            v192 = os_log_type_enabled(v190, v191);
            v193 = (void (*)(Class, Class))v3[187].isa;
            if (v192)
            {
              v419 = (void (*)(Class, Class))v3[187].isa;
              v422 = v3 + 135;
              v409 = v3[177].isa;
              v414 = (void (*)(Class, Class, Class))v3[186].isa;
              v403 = v3[179].isa;
              v406 = v3[175].isa;
              v194 = v3[174].isa;
              v195 = v3[171].isa;
              v196 = v3[170].isa;
              v400 = v3[168].isa;
              v397 = v3[172].isa;
              v398 = v3[167].isa;
              logf = v190;
              v197 = v3;
              v198 = v3[139].isa;
              v441 = v191;
              v199 = (uint64_t)v197[137].isa;
              v200 = WORD1(v197[44].isa);
              v201 = swift_slowAlloc(52, -1);
              v429 = swift_slowAlloc(160, -1);
              v447[0] = v429;
              *(_DWORD *)v201 = 136447234;
              v202 = (char *)MusicLibrary.ActionableState.description.getter(v199, v200);
              *(_QWORD *)(v201 + 4) = sub_100019400(v202, v203, v447);
              v204 = swift_bridgeObjectRelease();
              *(_WORD *)(v201 + 12) = 2082;
              dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v204);
              v205 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
              v206 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v195, v205);
              v208 = v207;
              (*((void (**)(Class, Class))v397 + 1))(v194, v195);
              *(_QWORD *)(v201 + 14) = sub_100019400(v206, v208, v447);
              swift_bridgeObjectRelease();
              v209 = swift_release_n(v198, 2);
              *(_WORD *)(v201 + 22) = 2082;
              dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v209);
              v210 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
              v211 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v398, v210);
              v213 = v212;
              (*((void (**)(Class, Class))v400 + 1))(v196, v398);
              *(_QWORD *)(v201 + 24) = sub_100019400(v211, v213, v447);
              swift_bridgeObjectRelease();
              v214 = v198;
              v3 = v197;
              swift_release_n(v214, 2);
              *(_WORD *)(v201 + 32) = 2082;
              v414(v403, v409, v406);
              v215 = (char *)String.init<A>(describing:)(v403, v406);
              *(_QWORD *)(v201 + 34) = sub_100019400(v215, v216, v447);
              swift_bridgeObjectRelease();
              v419(v409, v406);
              *(_WORD *)(v201 + 42) = 2082;
              v197[135].isa = (Class)v75;
              swift_errorRetain(v75);
              v217 = (char *)String.init<A>(describing:)(v422, v77);
              *(_QWORD *)(v201 + 44) = sub_100019400(v217, v218, v447);
              swift_bridgeObjectRelease();
              swift_errorRelease(v75);
              swift_errorRelease(v75);
              _os_log_impl((void *)&_mh_execute_header, logf, v441, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
                "\n"
                "Error: %{public}s",
                (uint8_t *)v201,
                0x34u);
              swift_arrayDestroy(v429, 5, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v429, -1, -1);
              swift_slowDealloc(v201, -1, -1);

            }
            else
            {
              v265 = v3[177].isa;
              v266 = v3[175].isa;
              swift_release_n(v3[139].isa, 4);
              v193(v265, v266);
              swift_errorRelease(v75);
              swift_errorRelease(v75);

            }
            v267 = (objc_class *)swift_task_alloc(dword_10049224C);
            v3[215].isa = v267;
            *(_QWORD *)v267 = v3;
            *((_QWORD *)v267 + 1) = sub_10011D6B4;
            return sub_10011F768(v75, (uint64_t)v3[137].isa, WORD1(v3[44].isa), (_QWORD *)v3[139].isa, (uint64_t)v3[140].isa);
          }
        }
      }
      else
      {
        v248 = Logger.logObject.getter(v124);
        v249 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v248, v249))
        {
          v250 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v250 = 0;
          _os_log_impl((void *)&_mh_execute_header, v248, v249, "|—● Adding to library", v250, 2u);
          swift_slowDealloc(v250, -1, -1);
        }
        v251 = v3[143].isa;

        if (v251)
        {
          v252 = v3[144].isa;
          ObjectType = swift_getObjectType();
          BYTE1(v3[44].isa) = 0;
          v254 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, Class))*((_QWORD *)v252 + 1);
          v255 = sub_10000F4E8();
          v254((char *)&v3[44].isa + 1, &type metadata for ActionType, v255, ObjectType, v252);
        }
        sub_100014A7C((uint64_t)v3[141].isa, (uint64_t)&v3[124], &qword_10048D958);
        v256 = (uint64_t)v3[127].isa;
        if (v256)
        {
          v257 = (uint64_t)v3[161].isa;
          v258 = v3[160].isa;
          v259 = (uint64_t)v3[128].isa;
          sub_10000ABC8(&v3[124].isa, (uint64_t)v3[127].isa);
          swift_storeEnumTagMultiPayload(v257, v258, 7);
          sub_100084534(v257, 0, v256, v259);
          sub_100006798(v257, type metadata accessor for Notice.Variant);
          sub_10000682C(&v3[124].isa);
        }
        else
        {
          sub_100008758((uint64_t)&v3[124], &qword_10048D958);
        }
        v311 = v3[158].isa;
        v312 = v3[157].isa;
        v313 = (uint64_t)v3[156].isa;
        sub_100014A7C((uint64_t)v3[145].isa, v313, &qword_10048D8E8);
        if ((*((unsigned int (**)(uint64_t, uint64_t, Class))v311 + 6))(v313, 1, v312) == 1)
        {
          sub_100008758((uint64_t)v3[156].isa, &qword_10048D8E8);
        }
        else
        {
          v314 = (uint64_t)v3[175].isa;
          v315 = (uint64_t *)v3[159].isa;
          v316 = (uint64_t)v3[154].isa;
          sub_10000F7B4((uint64_t)v3[156].isa, (uint64_t)v315);
          v445 = MusicItem.metricsTargetIdentifier.getter(v314);
          v430 = v317;
          v318 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v318 - 8) + 56))(v316, 1, 1, v318);
          v319 = sub_100005574(&qword_10048D930);
          v320 = swift_allocObject(v319, 80, 7);
          *(_OWORD *)(v320 + 16) = xmmword_100384A60;
          *(_QWORD *)(v320 + 32) = MusicItem.metricsContentType.getter(v314);
          *(_QWORD *)(v320 + 40) = v321;
          *(_BYTE *)(v320 + 48) = 0;
          *(_QWORD *)(v320 + 56) = 0;
          *(_QWORD *)(v320 + 64) = 0;
          *(_BYTE *)(v320 + 72) = 1;
          v322 = sub_100033420(v320);
          v324 = v323;
          v325 = v3;
          v327 = v326;
          v329 = v328;
          v330 = BYTE1(v328);
          swift_setDeallocating(v320);
          swift_arrayDestroy(v320 + 32, *(_QWORD *)(v320 + 16), &type metadata for MetricsEvent.Click.ActionDetails.Key);
          swift_deallocClassInstance(v320, 32, 7);
          sub_100033830(v445, v430, 5, 2, v316, v322, v324, v327, v329, v315);
          v331 = v327;
          v3 = v325;
          sub_10000F7F8(v322, v324, v331, v329, v330);
          swift_bridgeObjectRelease();
          sub_100008758(v316, &qword_10048D510);
          sub_100006798((uint64_t)v315, type metadata accessor for Actions.MetricsReportingContext);
        }
        v332 = v3[176].isa;
        v333 = (uint64_t)v3[175].isa;
        v334 = v3[138].isa;
        v335 = sub_100123878(v333, v333);
        v336 = swift_allocObject(v335, ((*((unsigned __int8 *)v332 + 80) + (unint64_t)*(unsigned int *)(v335 + 48)) & ~(unint64_t)*((unsigned __int8 *)v332 + 80))+ *((_QWORD *)v332 + 9), *((unsigned __int8 *)v332 + 80) | (unint64_t)*(unsigned __int16 *)(v335 + 52));
        v337 = static Array._adoptStorage(_:count:)(v336, 1);
        ((void (*)(uint64_t, Class, uint64_t))log)(v338, v334, v333);
        v339 = sub_10003001C(v337);
        v3[197].isa = (Class)v339;
        v3[134].isa = (Class)v339;
        v340 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.add<A, B>(_:)[1]);
        v3[198].isa = v340;
        v341 = type metadata accessor for Array(0);
        WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v341);
        *(_QWORD *)v340 = v3;
        *((_QWORD *)v340 + 1) = sub_10011CA6C;
        return MusicLibrary.add<A, B>(_:)(&v3[134], v341, v3[175].isa, WitnessTable, v3[146].isa);
      }
    case 4u:
      v427 = (int64x2_t *)&v3[113];
      v152 = Logger.logObject.getter(v69);
      v153 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v152, v153))
      {
        v154 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v154 = 0;
        _os_log_impl((void *)&_mh_execute_header, v152, v153, "|—● Triggering download", v154, 2u);
        swift_slowDealloc(v154, -1, -1);
      }
      v155 = (uint64_t)v3[179].isa;
      v156 = (uint64_t)v3[175].isa;
      v157 = (uint64_t)v3[155].isa;
      v158 = (uint64_t)v3[147].isa;
      v412 = v3[148].isa;
      v417 = (uint64_t)v3[146].isa;
      v159 = (uint64_t)v3[145].isa;
      v160 = (uint64_t)v3[140].isa;
      v161 = v3[138].isa;

      ((void (*)(uint64_t, Class, uint64_t))log)(v155, v161, v156);
      sub_1000244B0(v160, (uint64_t)&v3[129]);
      sub_100014A7C(v159, v157, &qword_10048D8E8);
      v162 = *(_QWORD *)((char *)v412 + class metadata base offset for MusicLibrary.ItemState + 8);
      swift_retain(v158);
      Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v155, v158, (__int128 *)&v3[129], v157, v156, v417, v162, (unint64_t (**)())&v3[112]);
      v163 = v3[112].isa;
      v164 = v3[117].isa;
      v3[202].isa = v164;
      v3[45].isa = v163;
      v165 = *v427;
      v166 = *(int64x2_t *)&v3[115].isa;
      v167 = v427->i64[0];
      *(int64x2_t *)&v3[200].isa = vzip1q_s64(*v427, v166);
      *(int64x2_t *)&v3[46].isa = v165;
      *(int64x2_t *)&v3[48].isa = v166;
      v168 = v166.i64[0];
      v3[50].isa = v164;
      LOBYTE(v3[51].isa) = 9;
      v3[54].isa = (Class)0x4014000000000000;
      v3[55].isa = (Class)&unk_10048DD30;
      v3[56].isa = 0;
      v3[57].isa = (Class)&unk_10048DD38;
      v169 = unk_100492274;
      logd = (uint64_t (*)(uint64_t, char))((char *)&dword_100492270 + dword_100492270);
      v3[52].isa = (Class)sub_10000F930;
      v3[53].isa = 0;
      v3[58].isa = 0;
      swift_retain(v167);
      swift_retain(v168);
      swift_retain(v164);
      v170 = (objc_class *)swift_task_alloc(v169);
      v3[203].isa = v170;
      *(_QWORD *)v170 = v3;
      *((_QWORD *)v170 + 1) = sub_10011CD20;
      return logd((uint64_t)logd, 1);
    case 5u:
      v171 = Logger.logObject.getter(v69);
      v172 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v171, v172))
      {
        v173 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v173 = 0;
        _os_log_impl((void *)&_mh_execute_header, v171, v172, "|—● Is Downloaded: Prompting for delete/remove alert", v173, 2u);
        swift_slowDealloc(v173, -1, -1);
      }
      v174 = (uint64_t)v3[179].isa;
      v175 = (uint64_t)v3[175].isa;
      v176 = v3[158].isa;
      v177 = v3[157].isa;
      v178 = (uint64_t)v3[155].isa;
      v418 = v3[148].isa;
      v428 = (uint64_t)v3[146].isa;
      v179 = v3[140].isa;
      v180 = v3[138].isa;

      v181 = v179[3];
      v413 = v179[4];
      v182 = sub_10000ABC8(v179, v181);
      ((void (*)(uint64_t, Class, uint64_t))log)(v174, v180, v175);
      v183 = *(_QWORD *)(v181 - 8);
      v184 = swift_task_alloc((*(_QWORD *)(v183 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v183 + 16))(v184, v182, v181);
      (*((void (**)(uint64_t, uint64_t, uint64_t, Class))v176 + 7))(v178, 1, 1, v177);
      type metadata accessor for MusicLibrary(0);
      v185 = (uint64_t (*)())static MusicLibrary.shared.getter();
      Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(v174, v184, v185, v178, v175, v181, v428, *(_QWORD *)((char *)v418 + class metadata base offset for MusicLibrary.ItemState + 8), (uint64_t (**)())&v3[27], v413);
      swift_task_dealloc(v184);
      sub_100020270((uint64_t)&v3[27], (uint64_t)&v3[2]);
      v186 = swift_allocObject(&unk_10044B788, 32, 7);
      *(_QWORD *)(v186 + 16) = &unk_10048DC40;
      *(_QWORD *)(v186 + 24) = 0;
      BYTE1(v3[19].isa) = 39;
      v3[20].isa = (Class)sub_10001D2A8;
      v3[21].isa = 0;
      v3[22].isa = (Class)0x403E000000000000;
      v3[23].isa = (Class)&unk_10048DC58;
      v3[24].isa = (Class)v186;
      v3[25].isa = (Class)&unk_10048DC48;
      v3[26].isa = 0;
      sub_1000210EC(&v3[27].isa);
      loge = (uint64_t (*)(char))((char *)&dword_100492260 + dword_100492260);
      v187 = (objc_class *)swift_task_alloc(unk_100492264);
      v3[209].isa = v187;
      *(_QWORD *)v187 = v3;
      *((_QWORD *)v187 + 1) = sub_10011D3E8;
      return loge(1);
    default:
      v115 = Logger.logObject.getter(v69);
      v116 = static os_log_type_t.default.getter();
      v117 = os_log_type_enabled(v115, v116);
      if ((v70 & 0x100) == 0)
      {
        if (v117)
        {
          v118 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v118 = 0;
          _os_log_impl((void *)&_mh_execute_header, v115, v116, "|—● Cancelling download", v118, 2u);
          swift_slowDealloc(v118, -1, -1);
        }

        v119 = (objc_class *)swift_task_alloc(async function pointer to MusicLibrary.cancelDownload<A>(_:)[1]);
        v3[205].isa = v119;
        *(_QWORD *)v119 = v3;
        *((_QWORD *)v119 + 1) = sub_10011CF90;
        return MusicLibrary.cancelDownload<A>(_:)(v3[138].isa, v3[175].isa, v3[146].isa);
      }
      if (v117)
      {
        v219 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v219 = 0;
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "|—● Download is paused: Checking for reasons…", v219, 2u);
        swift_slowDealloc(v219, -1, -1);
      }
      v220 = v3[169].isa;
      v221 = v3[168].isa;
      v222 = v3[167].isa;

      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v223);
      if ((*((unsigned int (**)(Class, Class))v221 + 11))(v220, v222) != enum case for MusicLibrary.DownloadStatus.paused(_:))
      {
        v281 = v3[169].isa;
        v282 = v3[168].isa;
        v283 = v3[167].isa;
        v284 = v3[139].isa;
        v285 = swift_release(v3[182].isa);
        v286 = (void (*)(Class, Class, __n128))*((_QWORD *)v282 + 1);
        v286(v281, v283, v285);
        v287 = swift_retain_n(v284, 2);
        v288 = Logger.logObject.getter(v287);
        v289 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v288, v289))
        {
          v290 = v3[170].isa;
          v291 = v3[167].isa;
          v443 = v3[139].isa;
          v292 = swift_slowAlloc(12, -1);
          v293 = swift_slowAlloc(32, -1);
          v447[0] = v293;
          *(_DWORD *)v292 = 136446210;
          dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v293);
          v294 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
          v295 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v291, v294);
          v296 = v3;
          v298 = v297;
          ((void (*)(Class, Class))v286)(v290, v291);
          *(_QWORD *)(v292 + 4) = sub_100019400(v295, v298, v447);
          v3 = v296;
          swift_bridgeObjectRelease();
          swift_release_n(v443, 2);
          _os_log_impl((void *)&_mh_execute_header, v288, v289, "|—| No reasons found, download status does not match UI state %{public}s", (uint8_t *)v292, 0xCu);
          swift_arrayDestroy(v293, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v293, -1, -1);
          swift_slowDealloc(v292, -1, -1);
        }
        else
        {
          swift_release_n(v3[139].isa, 2);
        }

        goto LABEL_91;
      }
      v224 = v3[169].isa;
      v225 = v3[153].isa;
      v226 = v3[150].isa;
      v227 = v3[149].isa;
      (*((void (**)(Class, Class))v3[168].isa + 12))(v224, v3[167].isa);
      (*((void (**)(Class, Class, Class))v226 + 4))(v225, v224, v227);
      MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter((uint64_t *)&v3[91]);
      sub_1000149A8((uint64_t)&v3[91], (uint64_t)&v3[105], &qword_100496260);
      if (!v3[110].isa)
      {
        v350 = v3[153].isa;
        v351 = v3[151].isa;
        v352 = v3[149].isa;
        v353 = swift_release(v3[182].isa);
        v354 = (*((uint64_t (**)(Class, Class, Class, __n128))v226 + 2))(v351, v350, v352, v353);
        v355 = Logger.logObject.getter(v354);
        v356 = static os_log_type_t.error.getter(v355);
        v357 = os_log_type_enabled(v355, v356);
        v358 = v3[153].isa;
        v359 = v3[151].isa;
        v360 = v3;
        v361 = v3[150].isa;
        logb = v360;
        v362 = v360[149].isa;
        if (v357)
        {
          v363 = swift_slowAlloc(12, -1);
          v364 = swift_slowAlloc(32, -1);
          v447[0] = v364;
          *(_DWORD *)v363 = 136446210;
          v365 = sub_100006924(&qword_100492268, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
          v366 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v362, v365);
          *(_QWORD *)(v363 + 4) = sub_100019400(v366, v367, v447);
          swift_bridgeObjectRelease();
          v368 = (void (*)(Class, Class))*((_QWORD *)v361 + 1);
          v368(v359, v362);
          _os_log_impl((void *)&_mh_execute_header, v355, v356, "|—| Unhandled alert for reason: %{public}s", (uint8_t *)v363, 0xCu);
          swift_arrayDestroy(v364, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v364, -1, -1);
          swift_slowDealloc(v363, -1, -1);

        }
        else
        {

          v368 = (void (*)(Class, Class))*((_QWORD *)v361 + 1);
          v368(v359, v362);
        }
        v343 = ((uint64_t (*)(Class, Class))v368)(v358, v362);
        v3 = logb;
LABEL_91:
        v385 = Logger.logObject.getter(v343);
        v386 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v385, v386))
        {
          v387 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v387 = 0;
          _os_log_impl((void *)&_mh_execute_header, v385, v386, "╰ ✅ Succeeded", v387, 2u);
          swift_slowDealloc(v387, -1, -1);
        }
        v388 = v3;
        v389 = v3[180].isa;
        v390 = v388[179].isa;
        v391 = v388[178].isa;
        v392 = v388[177].isa;
        v393 = v388[174].isa;
        v394 = v388[173].isa;
        v395 = v388[170].isa;
        v396 = v388[169].isa;
        v399 = v388[166].isa;
        v401 = v388[165].isa;
        v404 = v388[164].isa;
        v407 = v388[161].isa;
        v410 = v388[159].isa;
        v415 = v388[156].isa;
        v420 = v388[155].isa;
        v423 = v388[154].isa;
        v431 = v388[153].isa;
        logg = (os_log_t)v388[152].isa;
        v446 = v388[151].isa;

        swift_task_dealloc(v389);
        swift_task_dealloc(v390);
        swift_task_dealloc(v391);
        swift_task_dealloc(v392);
        swift_task_dealloc(v393);
        swift_task_dealloc(v394);
        swift_task_dealloc(v395);
        swift_task_dealloc(v396);
        swift_task_dealloc(v399);
        swift_task_dealloc(v401);
        swift_task_dealloc(v404);
        swift_task_dealloc(v407);
        swift_task_dealloc(v410);
        swift_task_dealloc(v415);
        swift_task_dealloc(v420);
        swift_task_dealloc(v423);
        swift_task_dealloc(v431);
        swift_task_dealloc(logg);
        swift_task_dealloc(v446);
        return ((uint64_t (*)(void))v388[1].isa)();
      }
      v228 = v3 + 98;
      v229 = v3[153].isa;
      v230 = v3[152].isa;
      v231 = v3[149].isa;
      v232 = *(_OWORD *)&v3[107].isa;
      *(_OWORD *)&v3[98].isa = *(_OWORD *)&v3[105].isa;
      *(_OWORD *)&v3[100].isa = v232;
      *(_OWORD *)&v3[102].isa = *(_OWORD *)&v3[109].isa;
      v3[104].isa = v3[111].isa;
      v233 = (*((uint64_t (**)(Class, Class, Class))v226 + 2))(v230, v229, v231);
      v234 = Logger.logObject.getter(v233);
      v235 = static os_log_type_t.default.getter();
      v236 = os_log_type_enabled(v234, v235);
      v237 = v3[152].isa;
      p_isa = &v3->isa;
      v239 = v3[150].isa;
      v240 = p_isa;
      v241 = p_isa[149];
      if (v236)
      {
        v242 = swift_slowAlloc(12, -1);
        v243 = swift_slowAlloc(32, -1);
        v447[0] = v243;
        *(_DWORD *)v242 = 136446210;
        v244 = sub_100006924(&qword_100492268, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
        v245 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v241, v244);
        *(_QWORD *)(v242 + 4) = sub_100019400(v245, v246, v447);
        swift_bridgeObjectRelease();
        v247 = (void (*)(Class, uint64_t))*((_QWORD *)v239 + 1);
        v247(v237, v241);
        _os_log_impl((void *)&_mh_execute_header, v234, v235, "|—| Showing alert for reason: %{public}s", (uint8_t *)v242, 0xCu);
        swift_arrayDestroy(v243, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v243, -1, -1);
        swift_slowDealloc(v242, -1, -1);
      }
      else
      {
        v247 = (void (*)(Class, uint64_t))*((_QWORD *)v239 + 1);
        v247(v237, p_isa[149]);
      }

      v240[207] = v247;
      v369 = (_QWORD *)v240[140];
      v370 = v369[3];
      v306 = v369[4];
      sub_10000ABC8(v369, v370);
      v371 = *(int **)(v306 + 8);
      v444 = (uint64_t (*)(os_log_t, uint64_t, uint64_t))((char *)v371 + *v371);
      v372 = (_QWORD *)swift_task_alloc(v371[1]);
      v240[208] = v372;
      *v372 = v240;
      v372[1] = sub_10011D1B4;
      v309 = v228;
      v310 = v370;
      return v444(v309, v310, v306);
  }
}

uint64_t sub_10011C488()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1512));
  sub_1000149EC(v1 + 84);
  return swift_task_switch(sub_10011C4E4, v1[183], v1[184]);
}

uint64_t sub_10011C4E4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release(*(_QWORD *)(v0 + 1456));
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011C6BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = static MainActor.shared.getter(a1);
  v1[193] = v2;
  v3 = swift_task_alloc(48);
  v1[194] = v3;
  *(_BYTE *)(v3 + 16) = 1;
  *(_QWORD *)(v3 + 24) = v1 + 68;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[195] = v4;
  *v4 = v1;
  v4[1] = sub_10011C780;
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v1 + 357, v2, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x80000001003AD1D0, sub_100014AFC, v3, &type metadata for Bool);
}

uint64_t sub_10011C780()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1552);
  v3 = *(_QWORD *)(*v0 + 1544);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1560));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10011C7F0, *(_QWORD *)(v1 + 1528), *(_QWORD *)(v1 + 1536));
}

uint64_t sub_10011C7F0()
{
  _QWORD *v0;

  swift_release(v0[190]);
  return swift_task_switch(sub_10011C82C, v0[183], v0[184]);
}

uint64_t sub_10011C82C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1504);
  v2 = *(_QWORD *)(v0 + 1328);
  v3 = *(_QWORD *)(v0 + 1296);
  swift_release(*(_QWORD *)(v0 + 1456));
  sub_100014B08(v0 + 544);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011CA10()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1568));
  sub_1000149EC(v1 + 77);
  return swift_task_switch(sub_100125DDC, v1[183], v1[184]);
}

uint64_t sub_10011CA6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1584);
  *(_QWORD *)(*v1 + 1592) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease();
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_10011D8CC;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 1472);
    v5 = *(_QWORD *)(v2 + 1464);
    v6 = sub_10011CB00;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10011CB00()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 1144);
  v2 = swift_release(*(_QWORD *)(v0 + 1456));
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 1152);
    ObjectType = swift_getObjectType();
    *(_BYTE *)(v0 + 356) = 0;
    v5 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v3 + 16);
    v6 = sub_10000F4E8();
    v5(v0 + 356, &type metadata for ActionType, v6, ObjectType, v3);
  }
  v7 = (*(uint64_t (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368), v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "╰ ✅ Succeeded", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  v11 = *(_QWORD *)(v0 + 1440);
  v12 = *(_QWORD *)(v0 + 1432);
  v13 = *(_QWORD *)(v0 + 1424);
  v14 = *(_QWORD *)(v0 + 1416);
  v15 = *(_QWORD *)(v0 + 1392);
  v16 = *(_QWORD *)(v0 + 1384);
  v17 = *(_QWORD *)(v0 + 1360);
  v18 = *(_QWORD *)(v0 + 1352);
  v20 = *(_QWORD *)(v0 + 1328);
  v21 = *(_QWORD *)(v0 + 1320);
  v22 = *(_QWORD *)(v0 + 1312);
  v23 = *(_QWORD *)(v0 + 1288);
  v24 = *(_QWORD *)(v0 + 1272);
  v25 = *(_QWORD *)(v0 + 1248);
  v26 = *(_QWORD *)(v0 + 1240);
  v27 = *(_QWORD *)(v0 + 1232);
  v28 = *(_QWORD *)(v0 + 1224);
  v29 = *(_QWORD *)(v0 + 1216);
  v30 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011CD20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1624);
  *(_QWORD *)(*(_QWORD *)v1 + 1632) = v0;
  swift_task_dealloc(v3);
  v4 = v2[202];
  v5 = v2[201];
  swift_release(v2[200]);
  swift_release(v5);
  swift_release(v4);
  if (v0)
    v6 = sub_10011E068;
  else
    v6 = sub_10011CDAC;
  return swift_task_switch(v6, v2[183], v2[184]);
}

uint64_t sub_10011CDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 1616);
  v2 = *(_QWORD *)(v0 + 1608);
  v3 = *(_QWORD *)(v0 + 1456);
  swift_release(*(_QWORD *)(v0 + 1600));
  swift_release(v2);
  swift_release(v1);
  v4 = swift_release(v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011CF90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1640);
  *(_QWORD *)(*v1 + 1648) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10011E810;
  else
    v4 = sub_10011CFF4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_10011CFF4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ✅ Succeeded", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1440);
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v14 = *(_QWORD *)(v0 + 1328);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011D1B4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1664));
  return swift_task_switch(sub_10011D204, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_10011D204()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1656);
  v2 = *(_QWORD *)(v0 + 1224);
  v3 = *(_QWORD *)(v0 + 1192);
  swift_release(*(_QWORD *)(v0 + 1456));
  sub_100124404(v0 + 728);
  v4 = v1(v2, v3);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "╰ ✅ Succeeded", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v0 + 1440);
  v9 = *(_QWORD *)(v0 + 1432);
  v10 = *(_QWORD *)(v0 + 1424);
  v11 = *(_QWORD *)(v0 + 1416);
  v12 = *(_QWORD *)(v0 + 1392);
  v13 = *(_QWORD *)(v0 + 1384);
  v14 = *(_QWORD *)(v0 + 1360);
  v15 = *(_QWORD *)(v0 + 1352);
  v17 = *(_QWORD *)(v0 + 1328);
  v18 = *(_QWORD *)(v0 + 1320);
  v19 = *(_QWORD *)(v0 + 1312);
  v20 = *(_QWORD *)(v0 + 1288);
  v21 = *(_QWORD *)(v0 + 1272);
  v22 = *(_QWORD *)(v0 + 1248);
  v23 = *(_QWORD *)(v0 + 1240);
  v24 = *(_QWORD *)(v0 + 1232);
  v25 = *(_QWORD *)(v0 + 1224);
  v26 = *(_QWORD *)(v0 + 1216);
  v27 = *(_QWORD *)(v0 + 1208);

  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011D3E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1672);
  *(_QWORD *)(*v1 + 1680) = v0;
  swift_task_dealloc(v3);
  sub_100008758(v2 + 16, &qword_10048DCF0);
  if (v0)
    v4 = sub_10011EF98;
  else
    v4 = sub_100125E08;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1464), *(_QWORD *)(v2 + 1472));
}

uint64_t sub_10011D470()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1704);
  swift_task_dealloc(*(_QWORD *)(*v0 + 1712));
  swift_errorRelease(v2);
  return swift_task_switch(sub_10011D4CC, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_10011D4CC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 1696);

  swift_allocError(&_s15ActionableStateO5ErrorON, v5, 0, 0);
  swift_willThrow();
  swift_errorRelease(*(_QWORD *)(v0 + 1088));
  v6 = *(_QWORD *)(v0 + 1432);
  v7 = *(_QWORD *)(v0 + 1424);
  v8 = *(_QWORD *)(v0 + 1416);
  v9 = *(_QWORD *)(v0 + 1392);
  v10 = *(_QWORD *)(v0 + 1384);
  v11 = *(_QWORD *)(v0 + 1360);
  v12 = *(_QWORD *)(v0 + 1352);
  v13 = *(_QWORD *)(v0 + 1328);
  v14 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  v17 = *(_QWORD *)(v0 + 1288);
  v18 = *(_QWORD *)(v0 + 1272);
  v19 = *(_QWORD *)(v0 + 1248);
  v20 = *(_QWORD *)(v0 + 1240);
  v21 = *(_QWORD *)(v0 + 1232);
  v22 = *(_QWORD *)(v0 + 1224);
  v23 = *(_QWORD *)(v0 + 1216);
  v24 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011D6B4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1720));
  return swift_task_switch(sub_10011D704, *(_QWORD *)(v1 + 1464), *(_QWORD *)(v1 + 1472));
}

uint64_t sub_10011D704()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = swift_release(*(_QWORD *)(v0 + 1456));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "╰ ❌ Failed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  swift_willThrow();
  v5 = *(_QWORD *)(v0 + 1432);
  v6 = *(_QWORD *)(v0 + 1424);
  v7 = *(_QWORD *)(v0 + 1416);
  v8 = *(_QWORD *)(v0 + 1392);
  v9 = *(_QWORD *)(v0 + 1384);
  v10 = *(_QWORD *)(v0 + 1360);
  v11 = *(_QWORD *)(v0 + 1352);
  v12 = *(_QWORD *)(v0 + 1328);
  v13 = *(_QWORD *)(v0 + 1320);
  v15 = *(_QWORD *)(v0 + 1312);
  v16 = *(_QWORD *)(v0 + 1288);
  v17 = *(_QWORD *)(v0 + 1272);
  v18 = *(_QWORD *)(v0 + 1248);
  v19 = *(_QWORD *)(v0 + 1240);
  v20 = *(_QWORD *)(v0 + 1232);
  v21 = *(_QWORD *)(v0 + 1224);
  v22 = *(_QWORD *)(v0 + 1216);
  v23 = *(_QWORD *)(v0 + 1208);
  swift_task_dealloc(*(_QWORD *)(v0 + 1440));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10011D8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t (*type)(uint64_t, uint64_t);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v96;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1376) + 8))(*(_QWORD *)(v0 + 1384), *(_QWORD *)(v0 + 1368));
  v1 = *(_QWORD *)(v0 + 1592);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574((uint64_t *)&unk_1004911F0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v89 = *(_QWORD *)(v0 + 1424);
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v85 = *(_QWORD *)(v0 + 1432);
      v87 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v83 = *(_QWORD *)(v0 + 1344);
      v79 = *(_QWORD *)(v0 + 1376);
      v81 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v96 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_100019400(v21, v22, &v96);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_100019400(v25, v27, &v96);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v81, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v16, v81);
      *(_QWORD *)(v20 + 24) = sub_100019400(v30, v32, &v96);
      swift_release_n(v17, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v90(v85, v89, v87);
      v33 = (char *)String.init<A>(describing:)(v85, v87);
      *(_QWORD *)(v20 + 34) = sub_100019400(v33, v34, &v96);
      swift_bridgeObjectRelease();
      v35 = type(v89, v87);
      *(_WORD *)(v20 + 42) = 2082;
      v36 = (char *)String.init<A>(describing:)(v35, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_100019400(v36, v37, &v96);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v67 = *(_QWORD *)(v0 + 1424);
      v68 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v67, v68);
    }

    v69 = sub_10012439C();
    *(_QWORD *)(v0 + 1696) = v69;
    v70 = swift_allocError(&_s15ActionableStateO5ErrorON, v69, 0, 0);
    *(_QWORD *)(v0 + 1704) = v70;
    v71 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1712) = v71;
    *v71 = v0;
    v71[1] = sub_10011D470;
    return sub_10011F768(v70, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v38, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain(v6);
    v39 = swift_errorRetain(v1);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v42)
    {
      v84 = *(_QWORD *)(v0 + 1416);
      v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v80 = *(_QWORD *)(v0 + 1432);
      v82 = *(_QWORD *)(v0 + 1400);
      v44 = *(_QWORD *)(v0 + 1392);
      loga = v40;
      v45 = *(_QWORD *)(v0 + 1368);
      v46 = *(_QWORD *)(v0 + 1360);
      v78 = *(_QWORD *)(v0 + 1344);
      v76 = *(_QWORD *)(v0 + 1376);
      v77 = *(_QWORD *)(v0 + 1336);
      v47 = *(_QWORD *)(v0 + 1112);
      typea = v41;
      v48 = *(_QWORD *)(v0 + 1096);
      v49 = *(_WORD *)(v0 + 354);
      v88 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
      v50 = swift_slowAlloc(52, -1);
      v91 = swift_slowAlloc(160, -1);
      v96 = v91;
      *(_DWORD *)v50 = 136447234;
      v51 = (char *)MusicLibrary.ActionableState.description.getter(v48, v49);
      *(_QWORD *)(v50 + 4) = sub_100019400(v51, v52, &v96);
      v53 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v53);
      v54 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v55 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v45, v54);
      v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v44, v45);
      *(_QWORD *)(v50 + 14) = sub_100019400(v55, v57, &v96);
      swift_release_n(v47, 2);
      v58 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v58);
      v59 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v60 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v77, v59);
      v62 = v61;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v46, v77);
      *(_QWORD *)(v50 + 24) = sub_100019400(v60, v62, &v96);
      swift_release_n(v47, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 32) = 2082;
      v86(v80, v84, v82);
      v63 = (char *)String.init<A>(describing:)(v80, v82);
      *(_QWORD *)(v50 + 34) = sub_100019400(v63, v64, &v96);
      swift_bridgeObjectRelease();
      v88(v84, v82);
      *(_WORD *)(v50 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v65 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v50 + 44) = sub_100019400(v65, v66, &v96);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v50,
        0x34u);
      swift_arrayDestroy(v91, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {
      v73 = *(_QWORD *)(v0 + 1416);
      v74 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v43(v73, v74);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v75 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1720) = v75;
    *v75 = v0;
    v75[1] = sub_10011D6B4;
    return sub_10011F768(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_10011E068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t (*type)(uint64_t, uint64_t);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v98;

  v1 = *(_QWORD *)(v0 + 1608);
  v2 = *(_QWORD *)(v0 + 1600);
  swift_release(*(_QWORD *)(v0 + 1616));
  swift_release(v1);
  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1632);
  *(_QWORD *)(v0 + 1688) = v3;
  *(_QWORD *)(v0 + 1088) = v3;
  swift_errorRetain(v3);
  v4 = sub_100005574((uint64_t *)&unk_1004911F0);
  v5 = swift_dynamicCast(v4, v0 + 1088, v4, &_s15ActionableStateO5ErrorON, 0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v7 = *(_QWORD *)(v0 + 1400);
  v8 = *(_QWORD *)(v0 + 1112);
  v9 = *(_QWORD *)(v0 + 1104);
  if (v5)
  {
    v10 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v3);
    v6(v10, v9, v7);
    v11 = swift_retain_n(v8, 4);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter(v12);
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v14)
    {
      v91 = *(_QWORD *)(v0 + 1424);
      v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v87 = *(_QWORD *)(v0 + 1432);
      v89 = *(_QWORD *)(v0 + 1400);
      v16 = *(_QWORD *)(v0 + 1392);
      v17 = *(_QWORD *)(v0 + 1368);
      v18 = *(_QWORD *)(v0 + 1360);
      v85 = *(_QWORD *)(v0 + 1344);
      v81 = *(_QWORD *)(v0 + 1376);
      v83 = *(_QWORD *)(v0 + 1336);
      v19 = *(_QWORD *)(v0 + 1112);
      v20 = *(_QWORD *)(v0 + 1096);
      v21 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1496);
      v22 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v98 = (uint64_t)log;
      *(_DWORD *)v22 = 136447234;
      v23 = (char *)MusicLibrary.ActionableState.description.getter(v20, v21);
      *(_QWORD *)(v22 + 4) = sub_100019400(v23, v24, &v98);
      v25 = swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v25);
      v26 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v17, v26);
      v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v16, v17);
      *(_QWORD *)(v22 + 14) = sub_100019400(v27, v29, &v98);
      swift_release_n(v19, 2);
      v30 = swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v30);
      v31 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v83, v31);
      v34 = v33;
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v18, v83);
      *(_QWORD *)(v22 + 24) = sub_100019400(v32, v34, &v98);
      swift_release_n(v19, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 32) = 2082;
      v92(v87, v91, v89);
      v35 = (char *)String.init<A>(describing:)(v87, v89);
      *(_QWORD *)(v22 + 34) = sub_100019400(v35, v36, &v98);
      swift_bridgeObjectRelease();
      v37 = type(v91, v89);
      *(_WORD *)(v22 + 42) = 2082;
      v38 = (char *)String.init<A>(describing:)(v37, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v22 + 44) = sub_100019400(v38, v39, &v98);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v22,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      v69 = *(_QWORD *)(v0 + 1424);
      v70 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v15(v69, v70);
    }

    v71 = sub_10012439C();
    *(_QWORD *)(v0 + 1696) = v71;
    v72 = swift_allocError(&_s15ActionableStateO5ErrorON, v71, 0, 0);
    *(_QWORD *)(v0 + 1704) = v72;
    v73 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1712) = v73;
    *v73 = v0;
    v73[1] = sub_10011D470;
    return sub_10011F768(v72, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v40 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v6(v40, v9, v7);
    swift_retain_n(v8, 3);
    swift_errorRetain(v3);
    swift_retain(v8);
    v41 = swift_errorRetain(v3);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v44)
    {
      v86 = *(_QWORD *)(v0 + 1416);
      v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v82 = *(_QWORD *)(v0 + 1432);
      v84 = *(_QWORD *)(v0 + 1400);
      v46 = *(_QWORD *)(v0 + 1392);
      loga = v42;
      v47 = *(_QWORD *)(v0 + 1368);
      v48 = *(_QWORD *)(v0 + 1360);
      v80 = *(_QWORD *)(v0 + 1344);
      v78 = *(_QWORD *)(v0 + 1376);
      v79 = *(_QWORD *)(v0 + 1336);
      v49 = *(_QWORD *)(v0 + 1112);
      typea = v43;
      v50 = *(_QWORD *)(v0 + 1096);
      v51 = *(_WORD *)(v0 + 354);
      v90 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
      v52 = swift_slowAlloc(52, -1);
      v93 = swift_slowAlloc(160, -1);
      v98 = v93;
      *(_DWORD *)v52 = 136447234;
      v53 = (char *)MusicLibrary.ActionableState.description.getter(v50, v51);
      *(_QWORD *)(v52 + 4) = sub_100019400(v53, v54, &v98);
      v55 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v55);
      v56 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v57 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v56);
      v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v46, v47);
      *(_QWORD *)(v52 + 14) = sub_100019400(v57, v59, &v98);
      swift_release_n(v49, 2);
      v60 = swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v60);
      v61 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v62 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v79, v61);
      v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v48, v79);
      *(_QWORD *)(v52 + 24) = sub_100019400(v62, v64, &v98);
      swift_release_n(v49, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 32) = 2082;
      v88(v82, v86, v84);
      v65 = (char *)String.init<A>(describing:)(v82, v84);
      *(_QWORD *)(v52 + 34) = sub_100019400(v65, v66, &v98);
      swift_bridgeObjectRelease();
      v90(v86, v84);
      *(_WORD *)(v52 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v3;
      swift_errorRetain(v3);
      v67 = (char *)String.init<A>(describing:)(v0 + 1080, v4);
      *(_QWORD *)(v52 + 44) = sub_100019400(v67, v68, &v98);
      swift_bridgeObjectRelease();
      swift_errorRelease(v3);
      swift_errorRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v52,
        0x34u);
      swift_arrayDestroy(v93, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v93, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {
      v75 = *(_QWORD *)(v0 + 1416);
      v76 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v45(v75, v76);
      swift_errorRelease(v3);
      swift_errorRelease(v3);

    }
    v77 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1720) = v77;
    *v77 = v0;
    v77[1] = sub_10011D6B4;
    return sub_10011F768(v3, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_10011E810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t (*type)(uint64_t, uint64_t);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v96;

  v1 = *(_QWORD *)(v0 + 1648);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574((uint64_t *)&unk_1004911F0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v89 = *(_QWORD *)(v0 + 1424);
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v85 = *(_QWORD *)(v0 + 1432);
      v87 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v83 = *(_QWORD *)(v0 + 1344);
      v79 = *(_QWORD *)(v0 + 1376);
      v81 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v96 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_100019400(v21, v22, &v96);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_100019400(v25, v27, &v96);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v81, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v16, v81);
      *(_QWORD *)(v20 + 24) = sub_100019400(v30, v32, &v96);
      swift_release_n(v17, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v90(v85, v89, v87);
      v33 = (char *)String.init<A>(describing:)(v85, v87);
      *(_QWORD *)(v20 + 34) = sub_100019400(v33, v34, &v96);
      swift_bridgeObjectRelease();
      v35 = type(v89, v87);
      *(_WORD *)(v20 + 42) = 2082;
      v36 = (char *)String.init<A>(describing:)(v35, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_100019400(v36, v37, &v96);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v67 = *(_QWORD *)(v0 + 1424);
      v68 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v67, v68);
    }

    v69 = sub_10012439C();
    *(_QWORD *)(v0 + 1696) = v69;
    v70 = swift_allocError(&_s15ActionableStateO5ErrorON, v69, 0, 0);
    *(_QWORD *)(v0 + 1704) = v70;
    v71 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1712) = v71;
    *v71 = v0;
    v71[1] = sub_10011D470;
    return sub_10011F768(v70, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v38, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain(v6);
    v39 = swift_errorRetain(v1);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v42)
    {
      v84 = *(_QWORD *)(v0 + 1416);
      v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v80 = *(_QWORD *)(v0 + 1432);
      v82 = *(_QWORD *)(v0 + 1400);
      v44 = *(_QWORD *)(v0 + 1392);
      loga = v40;
      v45 = *(_QWORD *)(v0 + 1368);
      v46 = *(_QWORD *)(v0 + 1360);
      v78 = *(_QWORD *)(v0 + 1344);
      v76 = *(_QWORD *)(v0 + 1376);
      v77 = *(_QWORD *)(v0 + 1336);
      v47 = *(_QWORD *)(v0 + 1112);
      typea = v41;
      v48 = *(_QWORD *)(v0 + 1096);
      v49 = *(_WORD *)(v0 + 354);
      v88 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
      v50 = swift_slowAlloc(52, -1);
      v91 = swift_slowAlloc(160, -1);
      v96 = v91;
      *(_DWORD *)v50 = 136447234;
      v51 = (char *)MusicLibrary.ActionableState.description.getter(v48, v49);
      *(_QWORD *)(v50 + 4) = sub_100019400(v51, v52, &v96);
      v53 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v53);
      v54 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v55 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v45, v54);
      v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v44, v45);
      *(_QWORD *)(v50 + 14) = sub_100019400(v55, v57, &v96);
      swift_release_n(v47, 2);
      v58 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v58);
      v59 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v60 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v77, v59);
      v62 = v61;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v46, v77);
      *(_QWORD *)(v50 + 24) = sub_100019400(v60, v62, &v96);
      swift_release_n(v47, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 32) = 2082;
      v86(v80, v84, v82);
      v63 = (char *)String.init<A>(describing:)(v80, v82);
      *(_QWORD *)(v50 + 34) = sub_100019400(v63, v64, &v96);
      swift_bridgeObjectRelease();
      v88(v84, v82);
      *(_WORD *)(v50 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v65 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v50 + 44) = sub_100019400(v65, v66, &v96);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v50,
        0x34u);
      swift_arrayDestroy(v91, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {
      v73 = *(_QWORD *)(v0 + 1416);
      v74 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v43(v73, v74);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v75 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1720) = v75;
    *v75 = v0;
    v75[1] = sub_10011D6B4;
    return sub_10011F768(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t sub_10011EF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t (*type)(uint64_t, uint64_t);
  os_log_type_t typea;
  os_log_t log;
  NSObject *loga;
  uint64_t v96;

  v1 = *(_QWORD *)(v0 + 1680);
  *(_QWORD *)(v0 + 1688) = v1;
  *(_QWORD *)(v0 + 1088) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574((uint64_t *)&unk_1004911F0);
  v3 = swift_dynamicCast(v2, v0 + 1088, v2, &_s15ActionableStateO5ErrorON, 0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
  v5 = *(_QWORD *)(v0 + 1400);
  v6 = *(_QWORD *)(v0 + 1112);
  v7 = *(_QWORD *)(v0 + 1104);
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 1424);
    swift_errorRelease(v1);
    v4(v8, v7, v5);
    v9 = swift_retain_n(v6, 4);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v12)
    {
      v89 = *(_QWORD *)(v0 + 1424);
      v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v85 = *(_QWORD *)(v0 + 1432);
      v87 = *(_QWORD *)(v0 + 1400);
      v14 = *(_QWORD *)(v0 + 1392);
      v15 = *(_QWORD *)(v0 + 1368);
      v16 = *(_QWORD *)(v0 + 1360);
      v83 = *(_QWORD *)(v0 + 1344);
      v79 = *(_QWORD *)(v0 + 1376);
      v81 = *(_QWORD *)(v0 + 1336);
      v17 = *(_QWORD *)(v0 + 1112);
      v18 = *(_QWORD *)(v0 + 1096);
      v19 = *(_WORD *)(v0 + 354);
      type = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1496);
      v20 = swift_slowAlloc(52, -1);
      log = (os_log_t)swift_slowAlloc(160, -1);
      v96 = (uint64_t)log;
      *(_DWORD *)v20 = 136447234;
      v21 = (char *)MusicLibrary.ActionableState.description.getter(v18, v19);
      *(_QWORD *)(v20 + 4) = sub_100019400(v21, v22, &v96);
      v23 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v23);
      v24 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v15, v24);
      v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v14, v15);
      *(_QWORD *)(v20 + 14) = sub_100019400(v25, v27, &v96);
      swift_release_n(v17, 2);
      v28 = swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v28);
      v29 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v30 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v81, v29);
      v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v16, v81);
      *(_QWORD *)(v20 + 24) = sub_100019400(v30, v32, &v96);
      swift_release_n(v17, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 32) = 2082;
      v90(v85, v89, v87);
      v33 = (char *)String.init<A>(describing:)(v85, v87);
      *(_QWORD *)(v20 + 34) = sub_100019400(v33, v34, &v96);
      swift_bridgeObjectRelease();
      v35 = type(v89, v87);
      *(_WORD *)(v20 + 42) = 2082;
      v36 = (char *)String.init<A>(describing:)(v35, &_s15ActionableStateO5ErrorON);
      *(_QWORD *)(v20 + 44) = sub_100019400(v36, v37, &v96);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Attempted to perform unsupported action for state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v20,
        0x34u);
      swift_arrayDestroy(log, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(log, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      v67 = *(_QWORD *)(v0 + 1424);
      v68 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v13(v67, v68);
    }

    v69 = sub_10012439C();
    *(_QWORD *)(v0 + 1696) = v69;
    v70 = swift_allocError(&_s15ActionableStateO5ErrorON, v69, 0, 0);
    *(_QWORD *)(v0 + 1704) = v70;
    v71 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1712) = v71;
    *v71 = v0;
    v71[1] = sub_10011D470;
    return sub_10011F768(v70, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 1416);
    swift_errorRelease(*(_QWORD *)(v0 + 1088));
    v4(v38, v7, v5);
    swift_retain_n(v6, 3);
    swift_errorRetain(v1);
    swift_retain(v6);
    v39 = swift_errorRetain(v1);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = os_log_type_enabled(v40, v41);
    v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
    if (v42)
    {
      v84 = *(_QWORD *)(v0 + 1416);
      v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
      v80 = *(_QWORD *)(v0 + 1432);
      v82 = *(_QWORD *)(v0 + 1400);
      v44 = *(_QWORD *)(v0 + 1392);
      loga = v40;
      v45 = *(_QWORD *)(v0 + 1368);
      v46 = *(_QWORD *)(v0 + 1360);
      v78 = *(_QWORD *)(v0 + 1344);
      v76 = *(_QWORD *)(v0 + 1376);
      v77 = *(_QWORD *)(v0 + 1336);
      v47 = *(_QWORD *)(v0 + 1112);
      typea = v41;
      v48 = *(_QWORD *)(v0 + 1096);
      v49 = *(_WORD *)(v0 + 354);
      v88 = *(void (**)(uint64_t, uint64_t))(v0 + 1496);
      v50 = swift_slowAlloc(52, -1);
      v91 = swift_slowAlloc(160, -1);
      v96 = v91;
      *(_DWORD *)v50 = 136447234;
      v51 = (char *)MusicLibrary.ActionableState.description.getter(v48, v49);
      *(_QWORD *)(v50 + 4) = sub_100019400(v51, v52, &v96);
      v53 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2082;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v53);
      v54 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v55 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v45, v54);
      v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v44, v45);
      *(_QWORD *)(v50 + 14) = sub_100019400(v55, v57, &v96);
      swift_release_n(v47, 2);
      v58 = swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 22) = 2082;
      dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter(v58);
      v59 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
      v60 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v77, v59);
      v62 = v61;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v46, v77);
      *(_QWORD *)(v50 + 24) = sub_100019400(v60, v62, &v96);
      swift_release_n(v47, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 32) = 2082;
      v86(v80, v84, v82);
      v63 = (char *)String.init<A>(describing:)(v80, v82);
      *(_QWORD *)(v50 + 34) = sub_100019400(v63, v64, &v96);
      swift_bridgeObjectRelease();
      v88(v84, v82);
      *(_WORD *)(v50 + 42) = 2082;
      *(_QWORD *)(v0 + 1080) = v1;
      swift_errorRetain(v1);
      v65 = (char *)String.init<A>(describing:)(v0 + 1080, v2);
      *(_QWORD *)(v50 + 44) = sub_100019400(v65, v66, &v96);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, loga, typea, "Action failed for button state: %{public}s,\n\nbased on addStatus: %{public}s,\n\ndownloadStatus: %{public}s,\n\nand item: %{public}s;\n"
        "\n"
        "Error: %{public}s",
        (uint8_t *)v50,
        0x34u);
      swift_arrayDestroy(v91, 5, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {
      v73 = *(_QWORD *)(v0 + 1416);
      v74 = *(_QWORD *)(v0 + 1400);
      swift_release_n(*(_QWORD *)(v0 + 1112), 4);
      v43(v73, v74);
      swift_errorRelease(v1);
      swift_errorRelease(v1);

    }
    v75 = (_QWORD *)swift_task_alloc(dword_10049224C);
    *(_QWORD *)(v0 + 1720) = v75;
    *v75 = v0;
    v75[1] = sub_10011D6B4;
    return sub_10011F768(v1, *(_QWORD *)(v0 + 1096), *(_WORD *)(v0 + 354), *(_QWORD **)(v0 + 1112), *(_QWORD *)(v0 + 1120));
  }
}

uint64_t Logger.libraryActionableState.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.libraryActionableState);
}

uint64_t sub_10011F768(uint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 296) = a4;
  *(_QWORD *)(v5 + 304) = a5;
  *(_WORD *)(v5 + 408) = a3;
  *(_QWORD *)(v5 + 280) = a1;
  *(_QWORD *)(v5 + 288) = a2;
  *(_QWORD *)(v5 + 312) = *a4;
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v5 + 320) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 328) = v7;
  *(_QWORD *)(v5 + 336) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 344) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 352) = v9;
  *(_QWORD *)(v5 + 360) = v10;
  return swift_task_switch(sub_10011F80C, v9, v10);
}

uint64_t sub_10011F80C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  Swift::String v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);
  v5 = *(_WORD *)(v0 + 408);
  _StringGuts.grow(_:)(91);
  v6._countAndFlagsBits = 0xD000000000000032;
  v6._object = (void *)0x80000001003B27C0;
  String.append(_:)(v6);
  *(_QWORD *)(v0 + 256) = v4;
  swift_errorRetain(v4);
  v7 = sub_100005574((uint64_t *)&unk_1004911F0);
  v8._countAndFlagsBits = String.init<A>(describing:)(v0 + 256, v7);
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001003B2800;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  v10._countAndFlagsBits = MusicLibrary.ActionableState.description.getter(v3, v5);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x53206D6574490A0ALL;
  v11._object = (void *)0xEE00203A65746174;
  String.append(_:)(v11);
  *(_QWORD *)(v0 + 264) = v2;
  v12 = type metadata accessor for MusicLibrary.ItemState(0, *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState), *(_QWORD *)(v1 + class metadata base offset for MusicLibrary.ItemState + 8));
  swift_retain(v2);
  v13._countAndFlagsBits = String.init<A>(describing:)(v0 + 264, v12);
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 10;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15 = sub_100098FC4((uint64_t)_swiftEmptyArrayStorage);
  sub_1000DEBBC(0xD00000000000001DLL, 0x80000001003B27A0, 0, 0xE000000000000000, (uint64_t)_swiftEmptyArrayStorage, v15, (uint64_t)_swiftEmptyArrayStorage, 1, v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000149A8(v0 + 72, v0 + 128, &qword_100491208);
  if (*(_QWORD *)(v0 + 136))
  {
    v17 = (__int128 *)(v0 + 184);
    v18 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 200) = v18;
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v20 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 368) = v19;
    *(_QWORD *)(v0 + 376) = v20;
    if (qword_10048C7F8 != -1)
      swift_once(&qword_10048C7F8, sub_100123768);
    v49 = v7;
    v47 = (__int128 *)(v0 + 224);
    v48 = (_OWORD *)(v0 + 240);
    v21 = type metadata accessor for Logger(0, v16);
    v22 = sub_1000086B4(v21, (uint64_t)static Logger.libraryActionableState);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "|—● Presenting Tap-To-Radar alert", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    v26 = *(_QWORD *)(v0 + 336);
    v44 = *(_QWORD *)(v0 + 328);
    v45 = *(_QWORD *)(v0 + 320);
    v27 = *(_QWORD **)(v0 + 304);
    v28 = *(_QWORD *)(v0 + 280);

    v29 = v27[4];
    v46 = v27[3];
    sub_10000ABC8(v27, v46);
    *(_QWORD *)(v0 + 272) = v28;
    swift_errorRetain(v28);
    v30 = String.init<A>(describing:)(v0 + 272, v49);
    v32 = v31;
    *(_QWORD *)(v0 + 384) = v31;
    v33 = sub_100005574(&qword_100493240);
    v34 = swift_allocObject(v33, 144, 7);
    *(_QWORD *)(v0 + 392) = v34;
    *v48 = *(_OWORD *)(v0 + 200);
    v35 = *v17;
    v36 = *(_OWORD *)(v0 + 200);
    *v47 = *v17;
    *(_OWORD *)(v34 + 16) = xmmword_100384A60;
    *(_OWORD *)(v34 + 32) = v35;
    *(_OWORD *)(v34 + 48) = v36;
    *(_QWORD *)(v34 + 64) = *(_QWORD *)(v0 + 216);
    *(_QWORD *)(v34 + 72) = v19;
    *(_QWORD *)(v34 + 80) = v20;
    sub_1000595EC((uint64_t)v47);
    sub_1000595EC((uint64_t)v48);
    sub_10003A434(v19, v20);
    v37 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v38 = UUID.uuidString.getter(v37);
    v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v26, v45);
    *(_QWORD *)(v34 + 88) = v38;
    *(_QWORD *)(v34 + 96) = v40;
    *(_QWORD *)(v34 + 104) = 19279;
    *(_QWORD *)(v34 + 112) = 0xE200000000000000;
    *(_BYTE *)(v34 + 120) = 2;
    *(_QWORD *)(v34 + 128) = 0;
    *(_QWORD *)(v34 + 136) = 0;
    *(_OWORD *)(v0 + 16) = xmmword_100384B60;
    *(_QWORD *)(v0 + 32) = v30;
    *(_QWORD *)(v0 + 40) = v32;
    *(_BYTE *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = v34;
    *(_QWORD *)(v0 + 64) = 0;
    v41 = *(int **)(v29 + 8);
    v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v41 + *v41);
    v42 = (_QWORD *)swift_task_alloc(v41[1]);
    *(_QWORD *)(v0 + 400) = v42;
    *v42 = v0;
    v42[1] = sub_10011FC94;
    return v50(v0 + 16, v46, v29);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(*(_QWORD *)(v0 + 336));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10011FC94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 400));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_10011FD10, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_10011FD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 368);
  v1 = *(_QWORD *)(v0 + 376);
  swift_release(*(_QWORD *)(v0 + 344));
  sub_100052668(v0 + 224);
  sub_100052668(v0 + 240);
  sub_10003A5C8(v2, v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 336));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *MusicLibrary.ActionableStateController.__allocating_init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char *v14;

  v7 = v6;
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v14 = sub_100124438(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 + 80) - 8) + 8))(a1);
  return v14;
}

char *MusicLibrary.ActionableStateController.init(item:library:actionsObserver:onStateUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  char *v9;

  v8 = *v6;
  v9 = sub_100124438(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 80) - 8) + 8))(a1);
  return v9;
}

uint64_t sub_10011FE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v3 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100005574(&qword_100492330);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v10 = result;
    v11 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    v12 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
    sub_100121474((uint64_t)v8, (uint64_t)v5);
    swift_release(v10);
    sub_100008758((uint64_t)v5, &qword_100492328);
    return sub_100008758((uint64_t)v8, &qword_100492330);
  }
  return result;
}

uint64_t MusicLibrary.ActionableStateController.library.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10011FFA4(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  void (*v49)(char *, char *, uint64_t, __n128);
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  _BOOL4 v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t result;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  _QWORD *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129[8];
  char v130[32];

  v116 = a1;
  v2 = *v1;
  v126 = type metadata accessor for Album(0);
  v118 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v125 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v4);
  v121 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_100492330);
  __chkstk_darwin(v6);
  v120 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10048DDC8);
  v9 = __chkstk_darwin(v8);
  v110 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v127 = (uint64_t)&v102 - v11;
  v123 = sub_100005574(&qword_100491250);
  v119 = *(_QWORD *)(v123 - 8);
  v12 = __chkstk_darwin(v123);
  v106 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v109 = (char *)&v102 - v15;
  v16 = __chkstk_darwin(v14);
  v107 = (char *)&v102 - v17;
  v18 = __chkstk_darwin(v16);
  v108 = (char *)&v102 - v19;
  v20 = __chkstk_darwin(v18);
  v112 = (char *)&v102 - v21;
  __chkstk_darwin(v20);
  v117 = (char *)&v102 - v22;
  v23 = sub_100005574(&qword_100491260);
  v24 = __chkstk_darwin(v23);
  v115 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v102 - v26;
  v28 = type metadata accessor for Playlist(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = __chkstk_darwin(v28);
  v111 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v34 = (char *)&v102 - v33;
  v35 = *(_QWORD *)(v2 + 80);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v32);
  v124 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v114 = (char *)&v102 - v40;
  v41 = __chkstk_darwin(v39);
  v43 = (char *)&v102 - v42;
  __chkstk_darwin(v41);
  v45 = (char *)&v102 - v44;
  v46 = *(_QWORD *)(v2 + 128);
  v122 = v1;
  v47 = (char *)v1 + v46;
  v48 = swift_beginAccess(v47, v130, 0, 0);
  v49 = *(void (**)(char *, char *, uint64_t, __n128))(v36 + 16);
  v49(v45, v47, v35, v48);
  v50 = v45;
  v51 = v28;
  v52 = v47;
  dispatch thunk of MusicLibrary.ItemState.item.setter(v50);
  ((void (*)(char *, char *, uint64_t))v49)(v43, v47, v35);
  v53 = swift_dynamicCast(v27, v43, v35, v51, 6);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  if ((v53 & 1) == 0)
  {
    v54(v27, 1, 1, v51);
    sub_100008758((uint64_t)v27, &qword_100491260);
    v63 = v125;
    v62 = v126;
    v64 = v124;
    goto LABEL_22;
  }
  v113 = (void (*)(char *, char *, uint64_t))v49;
  v54(v27, 0, 1, v51);
  v55 = *(uint64_t (**)(char *, char *, uint64_t))(v29 + 32);
  v56 = v55(v34, v27, v51);
  v57 = v127;
  Playlist.entries.getter(v56);
  v58 = v119;
  v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
  v60 = v57;
  v61 = v123;
  if (v59(v60, 1, v123) != 1)
  {
    v104 = v29;
    v105 = v34;
    v65 = v35;
    v66 = v61;
    v67 = v117;
    v103 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 32);
    v103(v117, v127, v66);
    v68 = v114;
    v113(v114, v116, v65);
    v69 = (uint64_t)v115;
    v127 = v65;
    if ((swift_dynamicCast(v115, v68, v65, v51, 6) & 1) == 0)
    {
      v54((char *)v69, 1, 1, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v123);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v51);
      sub_100008758(v69, &qword_100491260);
      v63 = v125;
      v62 = v126;
      v64 = v124;
      v35 = v127;
      goto LABEL_21;
    }
    v70 = v67;
    v71 = v69;
    v72 = v58;
    v116 = v52;
    v54((char *)v71, 0, 1, v51);
    v73 = v111;
    v74 = v55(v111, (char *)v71, v51);
    v75 = (uint64_t)v110;
    Playlist.entries.getter(v74);
    v76 = v123;
    if (v59(v75, 1, v123) == 1)
    {
      v77 = *(void (**)(char *, uint64_t))(v104 + 8);
      v77(v73, v51);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v70, v76);
      v77(v105, v51);
      sub_100008758(v75, &qword_10048DDC8);
LABEL_20:
      v63 = v125;
      v62 = v126;
      v64 = v124;
      v35 = v127;
      v52 = v116;
      goto LABEL_21;
    }
    v103(v112, v75, v76);
    v78 = sub_10002FFB8((unint64_t *)&qword_100491280, &qword_100491250, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(&v128, v76, v78);
    v79 = dispatch thunk of Collection.distance(from:to:)(v129, &v128, v76, v78);
    v80 = v70;
    v81 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v82 = v108;
    v81(v108, v80, v76);
    if (v79)
    {
      v83 = 0;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(&v128, v76, v78);
      v83 = dispatch thunk of Collection.distance(from:to:)(v129, &v128, v76, v78) > 0;
    }
    v84 = v107;
    v85 = *(void (**)(char *, uint64_t))(v72 + 8);
    v85(v82, v76);
    v81(v84, v112, v76);
    v86 = v109;
    v81(v109, v117, v76);
    if (v83)
    {
      v85(v86, v76);
      v85(v84, v76);
      v87 = v117;
LABEL_14:
      v88 = type metadata accessor for MusicLibrary.AddStatus(0);
      v89 = (uint64_t)v120;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v120, 1, 1, v88);
      v90 = type metadata accessor for MusicLibrary.DownloadStatus(0);
      v91 = (uint64_t)v121;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v121, 1, 1, v90);
      sub_100121474(v89, v91);
      sub_100008758(v91, &qword_100492328);
      sub_100008758(v89, &qword_100492330);
      v85(v112, v76);
      v92 = *(void (**)(char *, uint64_t))(v104 + 8);
      v92(v73, v51);
      v85(v87, v76);
      return ((uint64_t (*)(char *, uint64_t))v92)(v105, v51);
    }
    dispatch thunk of Collection.startIndex.getter(v76);
    dispatch thunk of Collection.endIndex.getter(&v128, v76, v78);
    v94 = dispatch thunk of Collection.distance(from:to:)(v129, &v128, v76, v78);
    v95 = v106;
    v81(v106, v86, v76);
    if (v94 < 1)
    {
      v85(v95, v76);
      v85(v86, v76);
      v85(v84, v76);
      v87 = v117;
    }
    else
    {
      dispatch thunk of Collection.startIndex.getter(v76);
      dispatch thunk of Collection.endIndex.getter(&v128, v76, v78);
      v96 = dispatch thunk of Collection.distance(from:to:)(v129, &v128, v76, v78);
      v85(v95, v76);
      v85(v86, v76);
      v85(v84, v76);
      v87 = v117;
      if (!v96)
        goto LABEL_14;
    }
    v85(v112, v76);
    v97 = *(void (**)(char *, uint64_t))(v104 + 8);
    v97(v73, v51);
    v85(v87, v76);
    v97(v105, v51);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v51);
  sub_100008758(v127, &qword_10048DDC8);
  v63 = v125;
  v62 = v126;
  v64 = v124;
LABEL_21:
  v49 = (void (*)(char *, char *, uint64_t, __n128))v113;
LABEL_22:
  ((void (*)(char *, char *, uint64_t))v49)(v64, v52, v35);
  result = swift_dynamicCast(v63, v64, v35, v62, 6);
  if ((_DWORD)result)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v63, v62);
    v98 = type metadata accessor for MusicLibrary.AddStatus(0);
    v99 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v120, 1, 1, v98);
    v100 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    v101 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v121, 1, 1, v100);
    sub_100121474(v99, v101);
    sub_100008758(v101, &qword_100492328);
    return sub_100008758(v99, &qword_100492330);
  }
  return result;
}

uint64_t MusicLibrary.ActionableStateController.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 128);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t MusicLibrary.ActionableStateController.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_10012491C(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*MusicLibrary.ActionableStateController.item.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 128);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_100120B48;
}

void sub_100120B48(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_10012491C((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_10012491C((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  swift_retain(v1[1]);
  return v2;
}

uint64_t MusicLibrary.ActionableStateController.onStateUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_release(v6);
}

uint64_t (*MusicLibrary.ActionableStateController.onStateUpdate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144), a1, 33, 0);
  return j__swift_endAccess;
}

void sub_100120CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  char *v25;
  char *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  uint64_t v42[3];
  _BYTE v43[24];

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + *(_QWORD *)(v10 + 152);
  swift_beginAccess(v11, v43, 0, 0);
  v13 = *(unsigned __int16 *)(v11 + 8);
  switch(v13 >> 8)
  {
    case 2u:
      if ((a2 & 0xFF00) != 0x200)
        goto LABEL_15;
      break;
    case 3u:
      if ((a2 & 0xFF00) != 0x300)
        goto LABEL_15;
      break;
    case 4u:
      if ((a2 & 0xFF00) != 0x400)
        goto LABEL_15;
      break;
    case 5u:
      if ((a2 & 0xFF00) != 0x500)
        goto LABEL_15;
      break;
    default:
      if (BYTE1(a2) - 2 >= 4)
      {
        if ((v13 & 1) != 0)
        {
          if ((a2 & 1) != 0 && (((a2 ^ v13) >> 8) & 1) == 0)
            return;
        }
        else if ((a2 & 1) == 0 && *(double *)v11 == *(double *)&a1 && (((a2 ^ v13) >> 8) & 1) == 0)
        {
          return;
        }
      }
LABEL_15:
      if (qword_10048C7F8 != -1)
        swift_once(&qword_10048C7F8, sub_100123768);
      v14 = type metadata accessor for Logger(0, v12);
      sub_1000086B4(v14, (uint64_t)static Logger.libraryActionableState);
      v15 = swift_retain_n(v2, 4);
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc(32, -1);
        v39 = swift_slowAlloc(96, -1);
        v42[0] = v39;
        *(_DWORD *)v18 = 136446722;
        v19 = (char *)MusicLibrary.ActionableState.description.getter(a1, a2);
        v38 = a1;
        *(_QWORD *)(v18 + 4) = sub_100019400(v19, v20, v42);
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2082;
        v21 = (char *)MusicLibrary.ActionableState.description.getter(*(_QWORD *)v11, *(_WORD *)(v11 + 8));
        *(_QWORD *)(v18 + 14) = sub_100019400(v21, v22, v42);
        swift_release_n(v3, 2);
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 22) = 2082;
        v23 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
        v24 = swift_beginAccess(v23, v40, 0, 0);
        (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v23, v6, v24);
        v25 = (char *)String.init<A>(describing:)(v9, v6);
        *(_QWORD *)(v18 + 24) = sub_100019400(v25, v26, v42);
        swift_release_n(v3, 2);
        swift_bridgeObjectRelease();
        v27 = v17;
        v28 = v38;
        _os_log_impl((void *)&_mh_execute_header, v16, v27, "State updated from: %{public}s to: %{public}s for item: %{public}s)", (uint8_t *)v18, 0x20u);
        v29 = v39;
        swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v18, -1, -1);

      }
      else
      {

        swift_release_n(v3, 4);
        v28 = a1;
      }
      v30 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
      swift_beginAccess(v30, v42, 0, 0);
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))v30;
      v31 = *(_QWORD *)(v30 + 8);
      v33 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 128);
      v34 = swift_beginAccess(v33, v41, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v33, v6, v34);
      v35 = *(_QWORD *)v11;
      v36 = *(unsigned __int16 *)(v11 + 8);
      swift_retain(v31);
      v32(v9, v28, a2, v35, v36);
      v37 = swift_release(v31);
      (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v37);
      break;
  }
}

uint64_t MusicLibrary.ActionableStateController.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_beginAccess(v1, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_100121100(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *(_QWORD *)v5;
  *(_QWORD *)v5 = a1;
  v7 = *(unsigned __int16 *)(v5 + 8);
  *(_WORD *)(v5 + 8) = a2;
  sub_100120CE8(v6, v7);
}

uint64_t MusicLibrary.ActionableStateController.performAction(alertPresenter:noticePresenter:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v6 = *v4;
  v5[22] = *v4;
  v7 = *(_QWORD *)(v6 + 80);
  v5[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[24] = v8;
  v5[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[26] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[27] = v10;
  v5[28] = v11;
  return swift_task_switch(sub_100121204, v10, v11);
}

uint64_t sub_100121204()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t *v9;
  uint64_t Strong;
  uint64_t **v11;
  uint64_t v13;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[23];
  v4 = v0[21];
  v5 = v0[19];
  v6 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 152);
  swift_beginAccess(v6, v0 + 11, 0, 0);
  v13 = *(_QWORD *)v6;
  v7 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 128);
  LOWORD(v6) = *(_WORD *)(v6 + 8);
  v8 = swift_beginAccess(v7, v0 + 14, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 16))(v2, v7, v3, v8);
  v9 = *(uint64_t **)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 136));
  sub_10005173C(v5, (uint64_t)(v0 + 2));
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 24);
  v0[29] = Strong;
  v11 = (uint64_t **)swift_task_alloc(dword_10049223C);
  v0[30] = (uint64_t)v11;
  *v11 = v0;
  v11[1] = (uint64_t *)sub_10012134C;
  return MusicLibrary.performAction<A>(for:on:itemState:alertPresenter:noticePresenter:presentationSource:actionsObserver:metricsReportingContext:)(v13, v6, v0[25], v9, v0[17], v0[18], (uint64_t)(v0 + 2), Strong);
}

uint64_t sub_10012134C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 232);
  v3 = *(_QWORD *)(*v1 + 240);
  v6 = *(_QWORD *)(*v1 + 192);
  v5 = *(_QWORD *)(*v1 + 200);
  v7 = *(_QWORD *)(*v1 + 184);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  sub_100008758(v2 + 16, &qword_10048D950);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v0)
    v8 = sub_100121438;
  else
    v8 = sub_1001213FC;
  return swift_task_switch(v8, *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224));
}

uint64_t sub_1001213FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100121438()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100121474(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  char *v54;
  __n128 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, _QWORD, _QWORD);
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  __n128 v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t, __n128);
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint8_t *v128;
  __int16 v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  _BOOL4 v136;
  uint8_t *v137;
  uint64_t *v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  char *v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int16 v169;
  NSObject *v170;
  os_log_type_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  id result;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  NSObject *v188;
  os_log_type_t v189;
  uint8_t *v190;
  NSObject *v191;
  os_log_type_t v192;
  uint8_t *v193;
  void *v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  uint8_t *v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  NSObject *v207;
  os_log_type_t v208;
  _BOOL4 v209;
  uint8_t *v210;
  uint64_t v211;
  NSObject *v212;
  os_log_type_t v213;
  _BOOL4 v214;
  uint8_t *v215;
  uint8_t *v216;
  uint8_t *v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int v220;
  uint64_t v221;
  uint64_t *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  _QWORD *v240;
  char *v241;
  char *v242;
  uint64_t TupleTypeMetadata2;
  char *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t *v253;
  char v254[8];
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __int16 v259;
  char v260[8];

  v3 = v2;
  v6 = *v2;
  v239 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason(0);
  v234 = *(_QWORD *)(v239 - 8);
  v7 = __chkstk_darwin(v239);
  v235 = (char *)&v218 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v236 = (char *)&v218 - v10;
  v11 = __chkstk_darwin(v9);
  v241 = (char *)&v218 - v12;
  __chkstk_darwin(v11);
  v237 = (char *)&v218 - v13;
  v14 = sub_100005574(&qword_10048DDC8);
  __chkstk_darwin(v14);
  v223 = (char *)&v218 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = type metadata accessor for Playlist(0);
  v229 = *(_QWORD *)(v233 - 8);
  v16 = __chkstk_darwin(v233);
  v228 = (char *)&v218 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v227 = (char *)&v218 - v18;
  v231 = type metadata accessor for Album(0);
  v225 = *(_QWORD *)(v231 - 8);
  v19 = __chkstk_darwin(v231);
  v226 = (char *)&v218 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v230 = (char *)&v218 - v21;
  v22 = *(_QWORD *)(v6 + 80);
  v23 = type metadata accessor for MusicLibrary.AddStatus(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v22, v23, 0, 0);
  v232 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v244 = (char *)&v218 - v24;
  v25 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v25);
  v27 = (char *)&v218 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v245 = (_QWORD *)type metadata accessor for MusicLibrary.DownloadStatus(0);
  v247 = *(v245 - 1);
  v28 = __chkstk_darwin(v245);
  v222 = (uint64_t *)((char *)&v218 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v218 - v31;
  __chkstk_darwin(v30);
  v250 = (char *)&v218 - v33;
  v34 = sub_100005574(&qword_100492330);
  v35 = __chkstk_darwin(v34);
  v240 = (uint64_t *)((char *)&v218 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = *(_QWORD *)(v23 - 8);
  v38 = __chkstk_darwin(v35);
  v224 = (char *)&v218 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v38);
  v242 = (char *)&v218 - v41;
  v42 = __chkstk_darwin(v40);
  v252 = (char *)&v218 - v43;
  v246 = v22;
  v248 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v42);
  v238 = (char *)&v218 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (char *)v3 + *(_QWORD *)(v6 + 152);
  swift_beginAccess(v45, v260, 0, 0);
  v221 = *(_QWORD *)v45;
  v220 = *((unsigned __int16 *)v45 + 4);
  v258 = 0;
  v259 = 512;
  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v47 = type metadata accessor for Logger(0, v46);
  v48 = sub_1000086B4(v47, (uint64_t)static Logger.libraryActionableState);
  v49 = swift_retain_n(v3, 2);
  v251 = v48;
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.default.getter();
  v52 = os_log_type_enabled(v50, v51);
  v253 = v3;
  v249 = v23;
  if (v52)
  {
    v53 = swift_slowAlloc(12, -1);
    v219 = swift_slowAlloc(32, -1);
    v257 = v219;
    *(_DWORD *)v53 = 136446210;
    v54 = (char *)v253 + *(_QWORD *)(*v253 + 128);
    v55 = swift_beginAccess(v54, v254, 0, 0);
    v56 = v27;
    v57 = a1;
    v58 = a2;
    v59 = v37;
    v60 = v32;
    v61 = v238;
    v62 = v54;
    v63 = v246;
    (*(void (**)(char *, char *, uint64_t, __n128))(v248 + 16))(v238, v62, v246, v55);
    v64 = v61;
    v32 = v60;
    v37 = v59;
    a2 = v58;
    a1 = v57;
    v27 = v56;
    v65 = (char *)String.init<A>(describing:)(v64, v63);
    *(_QWORD *)(v53 + 4) = sub_100019400(v65, v66, &v257);
    swift_release_n(v253, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "╭ Updating state for item: %{public}s", (uint8_t *)v53, 0xCu);
    v67 = v219;
    swift_arrayDestroy(v219, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    v68 = v53;
    v23 = v249;
    swift_slowDealloc(v68, -1, -1);

  }
  else
  {

    swift_release_n(v3, 2);
  }
  v69 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v240;
  sub_100014A7C(a1, (uint64_t)v240, &qword_100492330);
  if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v37 + 48))(v69, 1, v23) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
    sub_100008758((uint64_t)v69, &qword_100492330);
  }
  else
  {
    (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v37 + 32))(v252, v69, v23);
  }
  sub_100014A7C(a2, (uint64_t)v27, &qword_100492328);
  v70 = v247;
  v71 = v245;
  if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v247 + 48))(v27, 1, v245) == 1)
  {
    dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter();
    sub_100008758((uint64_t)v27, &qword_100492328);
  }
  else
  {
    (*(void (**)(char *, char *, _QWORD *))(v70 + 32))(v250, v27, v71);
  }
  v72 = v242;
  v73 = *(uint64_t (**)(char *, char *, uint64_t))(v37 + 16);
  v74 = v73(v242, v252, v23);
  v75 = Logger.logObject.getter(v74);
  v76 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = swift_slowAlloc(12, -1);
    v78 = swift_slowAlloc(32, -1);
    v257 = v78;
    *(_DWORD *)v77 = 136446210;
    v79 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v80 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v23, v79);
    *(_QWORD *)(v77 + 4) = sub_100019400(v80, v81, &v257);
    swift_bridgeObjectRelease();
    v242 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t))v242)(v72, v23);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "| Add Status: %{public}s", (uint8_t *)v77, 0xCu);
    swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
    v82 = v78;
    v71 = v245;
    swift_slowDealloc(v82, -1, -1);
    swift_slowDealloc(v77, -1, -1);
  }
  else
  {
    v242 = *(char **)(v37 + 8);
    ((void (*)(char *, uint64_t))v242)(v72, v23);
  }

  v83 = v247;
  v240 = *(_QWORD **)(v247 + 16);
  v84 = ((uint64_t (*)(char *, char *, _QWORD *))v240)(v32, v250, v71);
  v85 = Logger.logObject.getter(v84);
  v86 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v85, v86))
  {
    v87 = swift_slowAlloc(12, -1);
    v88 = swift_slowAlloc(32, -1);
    v257 = v88;
    *(_DWORD *)v87 = 136446210;
    v89 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v90 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v71, v89);
    *(_QWORD *)(v87 + 4) = sub_100019400(v90, v91, &v257);
    swift_bridgeObjectRelease();
    v245 = *(_QWORD **)(v83 + 8);
    ((void (*)(char *, _QWORD *))v245)(v32, v71);
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "| Download Status: %{public}s", (uint8_t *)v87, 0xCu);
    swift_arrayDestroy(v88, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v88, -1, -1);
    swift_slowDealloc(v87, -1, -1);
  }
  else
  {
    v245 = *(_QWORD **)(v83 + 8);
    ((void (*)(char *, _QWORD *))v245)(v32, v71);
  }

  v92 = v244;
  v93 = v241;
  v94 = (char *)v253 + *(_QWORD *)(*v253 + 128);
  v95 = swift_beginAccess(v94, &v257, 0, 0);
  v96 = &v92[*(int *)(TupleTypeMetadata2 + 48)];
  v97 = *(void (**)(char *, char *, uint64_t, __n128))(v248 + 16);
  v98 = v246;
  v97(v92, v94, v246, v95);
  v99 = v249;
  v73(v96, v252, v249);
  v100 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v96, v99);
  if (v100 == enum case for MusicLibrary.AddStatus.addable(_:))
  {
    v258 = 0;
    v259 = 768;
    v101 = (uint64_t (*)(char *, uint64_t))v242;
    ((void (*)(char *, uint64_t))v242)(v96, v99);
    goto LABEL_45;
  }
  if (v100 == enum case for MusicLibrary.AddStatus.unaddable(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 96))(v96, v249);
    v102 = v234;
    v103 = v237;
    v104 = v239;
    (*(void (**)(char *, char *, uint64_t))(v234 + 32))(v237, v96, v239);
    v105 = *(uint64_t (**)(char *, char *, uint64_t))(v102 + 16);
    v106 = v105(v93, v103, v104);
    v107 = Logger.logObject.getter(v106);
    v108 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v107, v108))
    {
      v109 = swift_slowAlloc(12, -1);
      v110 = swift_slowAlloc(32, -1);
      v256 = v110;
      *(_DWORD *)v109 = 136446210;
      v111 = sub_100006924(&qword_10048D9E8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
      v112 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v239, v111);
      *(_QWORD *)(v109 + 4) = sub_100019400(v112, v113, &v256);
      swift_bridgeObjectRelease();
      v114 = v93;
      v115 = *(void (**)(char *, uint64_t))(v102 + 8);
      v115(v114, v239);
      _os_log_impl((void *)&_mh_execute_header, v107, v108, "|—● Item is unaddable: %{public}s", (uint8_t *)v109, 0xCu);
      swift_arrayDestroy(v110, 1, (char *)&type metadata for Any + 8);
      v116 = v110;
      v103 = v237;
      swift_slowDealloc(v116, -1, -1);
      v117 = v109;
      v104 = v239;
      swift_slowDealloc(v117, -1, -1);
    }
    else
    {
      v130 = v93;
      v115 = *(void (**)(char *, uint64_t))(v102 + 8);
      v115(v130, v104);
    }

    v131 = v235;
    v132 = v236;
    v105(v236, v103, v104);
    v133 = (*(uint64_t (**)(char *, uint64_t))(v102 + 88))(v132, v104);
    if ((_DWORD)v133 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      || (_DWORD)v133 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      || (_DWORD)v133 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      v155 = v105(v131, v103, v104);
      v156 = Logger.logObject.getter(v155);
      v157 = v131;
      v158 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v156, v158))
      {
        v159 = v104;
        v160 = swift_slowAlloc(12, -1);
        v161 = swift_slowAlloc(32, -1);
        v256 = v161;
        *(_DWORD *)v160 = 136315138;
        v162 = sub_100006924(&qword_10048D9E8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus.UnaddableReason);
        v163 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v159, v162);
        *(_QWORD *)(v160 + 4) = sub_100019400(v163, v164, &v256);
        swift_bridgeObjectRelease();
        v115(v157, v159);
        swift_arrayDestroy(v161, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v161, -1, -1);
        swift_slowDealloc(v160, -1, -1);

        v165 = v237;
        v166 = v159;
      }
      else
      {

        v115(v157, v104);
        v165 = v103;
        v166 = v104;
      }
      v115(v165, v166);
      v98 = v246;
      v258 = 0;
      v259 = 768;
    }
    else
    {
      v134 = Logger.logObject.getter(v133);
      v135 = static os_log_type_t.default.getter();
      v136 = os_log_type_enabled(v134, v135);
      v98 = v246;
      if (v136)
      {
        v137 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v137 = 0;
        _os_log_impl((void *)&_mh_execute_header, v134, v135, "|—| Reason is not actionable by the user", v137, 2u);
        swift_slowDealloc(v137, -1, -1);
      }

      v115(v103, v104);
      v258 = 0;
      v259 = 512;
      v115(v236, v104);
    }
    v101 = (uint64_t (*)(char *, uint64_t))v242;
    goto LABEL_45;
  }
  if (v100 != enum case for MusicLibrary.AddStatus.added(_:))
  {
    v138 = v253;
    v139 = swift_retain_n(v253, 4);
    v140 = Logger.logObject.getter(v139);
    v141 = static os_log_type_t.error.getter(v140);
    if (os_log_type_enabled(v140, v141))
    {
      v142 = swift_slowAlloc(22, -1);
      v248 = swift_slowAlloc(64, -1);
      v256 = v248;
      *(_DWORD *)v142 = 136446466;
      v143 = v224;
      dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
      v144 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
      v145 = v249;
      v146 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v249, v144);
      v148 = v147;
      v149 = v145;
      v101 = (uint64_t (*)(char *, uint64_t))v242;
      ((void (*)(char *, uint64_t))v242)(v143, v149);
      *(_QWORD *)(v142 + 4) = sub_100019400(v146, v148, &v256);
      swift_release_n(v253, 2);
      swift_bridgeObjectRelease();
      *(_WORD *)(v142 + 12) = 2082;
      v150 = v238;
      v151 = v246;
      ((void (*)(char *, char *, uint64_t))v97)(v238, v94, v246);
      v152 = (char *)String.init<A>(describing:)(v150, v151);
      *(_QWORD *)(v142 + 14) = sub_100019400(v152, v153, &v256);
      swift_release_n(v253, 2);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v140, v141, "| Unhandled add status (%{public}s) for item: %{public}s", (uint8_t *)v142, 0x16u);
      v154 = v248;
      swift_arrayDestroy(v248, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v154, -1, -1);
      swift_slowDealloc(v142, -1, -1);

    }
    else
    {

      swift_release_n(v138, 4);
      v101 = (uint64_t (*)(char *, uint64_t))v242;
    }
    v258 = 0;
    v259 = 512;
    v248 = v232;
    v98 = TupleTypeMetadata2;
    v92 = v244;
    goto LABEL_45;
  }
  v118 = v230;
  v119 = v231;
  v120 = swift_dynamicCast(v230, v92, v98, v231, 0);
  v101 = (uint64_t (*)(char *, uint64_t))v242;
  v121 = v233;
  if (v120)
  {
    v122 = v225;
    v123 = v226;
    (*(void (**)(char *, char *, uint64_t))(v225 + 32))(v226, v118, v119);
    v124 = Album.childrenAddStatus(_:)(v253[2]);
    if (v124 == 1)
    {
      v125 = Logger.logObject.getter(v124);
      v126 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v125, v126))
      {
        v127 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v127 = 0;
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "| Album is already added but has at least 1 addable track", v127, 2u);
        v128 = v127;
        v123 = v226;
        swift_slowDealloc(v128, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v119);
      v258 = 0;
      v129 = 768;
LABEL_56:
      v259 = v129;
      goto LABEL_45;
    }
    (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v119);
  }
  v177 = v227;
  v178 = swift_dynamicCast(v227, v92, v98, v121, 0);
  if ((_DWORD)v178)
  {
    v179 = (*(uint64_t (**)(char *, char *, uint64_t))(v229 + 32))(v228, v177, v121);
    v180 = v223;
    Playlist.entries.getter(v179);
    v181 = (uint64_t)v180;
    v182 = sub_100005574(&qword_100491250);
    v183 = *(_QWORD *)(v182 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48))(v181, 1, v182) == 1)
    {
      sub_100008758(v181, &qword_10048DDC8);
      v101 = (uint64_t (*)(char *, uint64_t))v242;
    }
    else
    {
      v184 = sub_10002FFB8((unint64_t *)&qword_100491280, &qword_100491250, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
      dispatch thunk of Collection.startIndex.getter(v182);
      dispatch thunk of Collection.endIndex.getter(&v255, v182, v184);
      v185 = v255;
      v186 = v256;
      v187 = (*(uint64_t (**)(uint64_t, uint64_t))(v183 + 8))(v181, v182);
      v101 = (uint64_t (*)(char *, uint64_t))v242;
      if (v186 == v185)
      {
        v188 = Logger.logObject.getter(v187);
        v189 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v188, v189))
        {
          v190 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v190 = 0;
          _os_log_impl((void *)&_mh_execute_header, v188, v189, "| Playlist is already added but does not have any tracks", v190, 2u);
          swift_slowDealloc(v190, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v229 + 8))(v228, v121);
        v258 = 0;
        v129 = 512;
        goto LABEL_56;
      }
    }
    v178 = (*(uint64_t (**)(char *, uint64_t))(v229 + 8))(v228, v121);
  }
  v191 = Logger.logObject.getter(v178);
  v192 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v191, v192))
  {
    v193 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v193 = 0;
    _os_log_impl((void *)&_mh_execute_header, v191, v192, "|—● Item is added", v193, 2u);
    swift_slowDealloc(v193, -1, -1);
  }

  result = objc_msgSend((id)objc_opt_self(MPCloudController), "sharedCloudController");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v194 = result;
  v195 = objc_msgSend(result, "canShowCloudDownloadButtons");

  if (!v195)
  {
    v200 = Logger.logObject.getter(v196);
    v201 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v200, v201))
    {
      v202 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v202 = 0;
      _os_log_impl((void *)&_mh_execute_header, v200, v201, "|—| MPCloudController -canShowCloudDownloadButton: NO", v202, 2u);
      swift_slowDealloc(v202, -1, -1);
    }

    goto LABEL_67;
  }
  v197 = v222;
  ((void (*)(uint64_t *, char *, _QWORD *))v240)(v222, v250, v71);
  v198 = v247;
  v199 = (*(uint64_t (**)(uint64_t *, _QWORD *))(v247 + 88))(v197, v71);
  if ((_DWORD)v199 == enum case for MusicLibrary.DownloadStatus.downloading(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v198 + 96))(v197, v71);
    v258 = *v197;
    v259 = 0;
    goto LABEL_45;
  }
  v203 = v199;
  if ((_DWORD)v199 == enum case for MusicLibrary.DownloadStatus.paused(_:))
  {
    (*(void (**)(uint64_t *, _QWORD *))(v247 + 96))(v197, v71);
    v204 = v221;
    if (((v220 >> 8) - 2 < 4) | v220 & 1)
      v204 = 0;
    v258 = v204;
    v259 = ((v220 >> 8) - 2 < 4) | v220 & 1 | 0x100;
    v205 = type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons(0);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v205 - 8) + 8))(v197, v205);
    goto LABEL_45;
  }
  if ((_DWORD)v199 == enum case for MusicLibrary.DownloadStatus.notDownloadable(_:))
  {
LABEL_67:
    v258 = 0;
    v259 = 512;
    goto LABEL_45;
  }
  if ((_DWORD)v199 != enum case for MusicLibrary.DownloadStatus.downloadable(_:))
  {
    if ((_DWORD)v199 == enum case for MusicLibrary.DownloadStatus.downloadWaiting(_:))
    {
      v258 = 0;
      v259 = 1;
      goto LABEL_45;
    }
    if ((_DWORD)v199 == enum case for MusicLibrary.DownloadStatus.downloaded(_:))
    {
      v258 = 0;
      v259 = 1280;
      goto LABEL_45;
    }
    v206 = enum case for MusicLibrary.DownloadStatus.cancelled(_:);
    v207 = Logger.logObject.getter(v199);
    v208 = static os_log_type_t.default.getter();
    v209 = os_log_type_enabled(v207, v208);
    if (v203 != v206)
    {
      v101 = (uint64_t (*)(char *, uint64_t))v242;
      if (v209)
      {
        v216 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v216 = 0;
        _os_log_impl((void *)&_mh_execute_header, v207, v208, "|—| Unhandled case", v216, 2u);
        v217 = v216;
        v197 = v222;
        swift_slowDealloc(v217, -1, -1);
      }

      v258 = 0;
      v259 = 512;
      ((void (*)(uint64_t *, _QWORD *))v245)(v197, v71);
      goto LABEL_45;
    }
    if (v209)
    {
      v210 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v210 = 0;
      swift_slowDealloc(v210, -1, -1);
    }

    v212 = Logger.logObject.getter(v211);
    v213 = static os_log_type_t.default.getter();
    v214 = os_log_type_enabled(v212, v213);
    v101 = (uint64_t (*)(char *, uint64_t))v242;
    if (v214)
    {
      v215 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v215 = 0;
      _os_log_impl((void *)&_mh_execute_header, v212, v213, "|—| 🌚 though we're not sure this is the right thing to do", v215, 2u);
      swift_slowDealloc(v215, -1, -1);
    }

  }
  v258 = 0;
  v259 = 1024;
LABEL_45:
  v167 = (*(uint64_t (**)(char *, uint64_t))(v248 + 8))(v92, v98);
  v168 = v258;
  v169 = v259;
  v170 = Logger.logObject.getter(v167);
  v171 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v170, v171))
  {
    v172 = swift_slowAlloc(12, -1);
    v173 = swift_slowAlloc(32, -1);
    v256 = v173;
    *(_DWORD *)v172 = 136446210;
    v174 = (char *)MusicLibrary.ActionableState.description.getter(v168, v169);
    *(_QWORD *)(v172 + 4) = sub_100019400(v174, v175, &v256);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v170, v171, "╰ Item state resolved to %{public}s", (uint8_t *)v172, 0xCu);
    swift_arrayDestroy(v173, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v173, -1, -1);
    swift_slowDealloc(v172, -1, -1);
  }

  swift_beginAccess(&v258, &v256, 0, 0);
  sub_100121100(v258, v259);
  ((void (*)(char *, _QWORD *))v245)(v250, v71);
  return (id)v101(v252, v249);
}

double sub_100122D9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];
  uint64_t v35;
  char v36[24];

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = sub_100005574(&qword_100492308);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  __chkstk_darwin(v3);
  v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_100492310);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v0 + v2[21]);
  swift_beginAccess(v9, v36, 1, 0);
  *v9 = &_swiftEmptySetSingleton;
  v10 = swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  dispatch thunk of MusicLibrary.ItemState.$addStatus.getter(v10);
  v11 = swift_allocObject(&unk_10044B9D0, 24, 7);
  swift_weakInit(v11 + 16, v1);
  v12 = (_QWORD *)swift_allocObject(&unk_10044B9F8, 56, 7);
  v13 = v2[10];
  v12[2] = v13;
  v14 = v2[11];
  v12[3] = v14;
  v15 = v2[12];
  v12[4] = v15;
  v16 = v2[13];
  v12[5] = v16;
  v12[6] = v11;
  v17 = sub_10002FFB8(&qword_100492318, &qword_100492310, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v18 = Publisher<>.sink(receiveValue:)(sub_100124D80, v12, v6, v17);
  v19 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v8, v6, v19);
  swift_beginAccess(v9, v34, 33, 0);
  sub_100132D98(&v35, v18);
  swift_endAccess(v34);
  v20 = swift_release(v35);
  v21 = v31;
  dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter(v20);
  v22 = swift_allocObject(&unk_10044B9D0, 24, 7);
  swift_weakInit(v22 + 16, v1);
  v23 = (_QWORD *)swift_allocObject(&unk_10044BA20, 56, 7);
  v23[2] = v13;
  v23[3] = v14;
  v23[4] = v15;
  v23[5] = v16;
  v23[6] = v22;
  v24 = sub_10002FFB8(&qword_100492320, &qword_100492308, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v25 = v32;
  v26 = Publisher<>.sink(receiveValue:)(sub_100124D8C, v23, v32, v24);
  v27 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v21, v25, v27);
  swift_beginAccess(v9, v34, 33, 0);
  sub_100132D98(&v35, v26);
  swift_endAccess(v34);
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

uint64_t sub_10012307C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35[3];

  v4 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100492330);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.AddStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2 + 16;
  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v16 = type metadata accessor for Logger(0, v12);
  sub_1000086B4(v16, (uint64_t)static Logger.libraryActionableState);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17 = v34(v14, a1, v10);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v32 = a1;
    v21 = v20;
    v22 = swift_slowAlloc(32, -1);
    v33 = v6;
    v23 = v22;
    v35[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v24 = sub_100006924(&qword_100492250, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v24);
    *(_QWORD *)(v21 + 4) = sub_100019400(v25, v26, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Add status has updated to %{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v27 = v23;
    v6 = v33;
    swift_slowDealloc(v27, -1, -1);
    v28 = v21;
    a1 = v32;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  swift_beginAccess(v15, v35, 0, 0);
  result = swift_weakLoadStrong(v15);
  if (result)
  {
    v30 = result;
    v34(v9, a1, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    v31 = type metadata accessor for MusicLibrary.DownloadStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 1, 1, v31);
    sub_100121474((uint64_t)v9, (uint64_t)v6);
    swift_release(v30);
    sub_100008758((uint64_t)v6, &qword_100492328);
    return sub_100008758((uint64_t)v9, &qword_100492330);
  }
  return result;
}

uint64_t sub_100123398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35[3];

  v4 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100492330);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2 + 16;
  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v16 = type metadata accessor for Logger(0, v12);
  sub_1000086B4(v16, (uint64_t)static Logger.libraryActionableState);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17 = v34(v14, a1, v10);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v32 = v9;
    v21 = v20;
    v22 = swift_slowAlloc(32, -1);
    v33 = a1;
    v23 = v22;
    v35[0] = v22;
    *(_DWORD *)v21 = 136446210;
    v24 = sub_100006924(&qword_100492258, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.DownloadStatus);
    v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v24);
    *(_QWORD *)(v21 + 4) = sub_100019400(v25, v26, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Download status has updated to %{public}s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    v27 = v23;
    a1 = v33;
    swift_slowDealloc(v27, -1, -1);
    v28 = v21;
    v9 = v32;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  swift_beginAccess(v15, v35, 0, 0);
  result = swift_weakLoadStrong(v15);
  if (result)
  {
    v30 = result;
    v31 = type metadata accessor for MusicLibrary.AddStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 1, 1, v31);
    v34(v6, a1, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    sub_100121474((uint64_t)v9, (uint64_t)v6);
    swift_release(v30);
    sub_100008758((uint64_t)v6, &qword_100492328);
    return sub_100008758((uint64_t)v9, &qword_100492330);
  }
  return result;
}

char *MusicLibrary.ActionableStateController.deinit()
{
  char *v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  swift_release(*((_QWORD *)v0 + 2));
  sub_1000FF204((uint64_t)(v0 + 24));
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 128)]);
  swift_release(*(_QWORD *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 136)]);
  swift_release(*(_QWORD *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 144) + 8]);
  swift_release(*(_QWORD *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 160)]);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MusicLibrary.ActionableStateController.__deallocating_deinit()
{
  uint64_t v0;

  MusicLibrary.ActionableStateController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100123768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.libraryActionableState);
  sub_1000086B4(v2, (uint64_t)static Logger.libraryActionableState);
  sub_1000087DC(0, (unint64_t *)&qword_1004904C0, OS_os_log_ptr);
  v3 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000018, 0x80000001003B2820);
  return Logger.init(_:)(v3);
}

uint64_t static Logger.libraryActionableState.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C7F8 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.libraryActionableState);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

uint64_t sub_100123878(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType(a2))
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return sub_100005574((uint64_t *)&unk_100491910);
  else
    return type metadata accessor for _ContiguousArrayStorage(0, a2);
}

uint64_t sub_1001238C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004924C4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100110A28(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123954(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004924E4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100111034(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_1001239E4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_100492564);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_1001115DC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123A74(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_100492544);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1000556CC;
  return sub_100111B84(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123B04(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_100492524);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1000556CC;
  return sub_100112544(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v8;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a4 + 128);
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v9;
  v10 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v10;
  v11 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_100492424);
  *(_QWORD *)(v4 + 152) = v12;
  *v12 = v4;
  v12[1] = sub_10004ED6C;
  return sub_100112F64(a1, a2, a3, (__int128 *)(v4 + 16));
}

uint64_t sub_100123C2C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_100492504);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100113998(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123CBC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_100492484);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100113F40(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123D4C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_10049234C);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_1001144E8(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v5;
  char v10;
  _QWORD *v11;

  v10 = *a5;
  v11 = (_QWORD *)swift_task_alloc(dword_100492364);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10000F894;
  return sub_100114A90(a1, a2, a3, a4, v10);
}

uint64_t sub_100123E5C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_100492444);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_10004F788;
  return sub_1001153F0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123EEC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  v9 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_100492464);
  *(_QWORD *)(v4 + 144) = v12;
  *v12 = v4;
  v12[1] = sub_1000556CC;
  return sub_100115E10(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_100123F7C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004924A4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100116350(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_10012400C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004923A4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_1001168F8(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_10012409C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004923C4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_100050180;
  return sub_100116EA0(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_10012412C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_1004923E4);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100117ACC(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_1001241BC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 112) = a4[6];
  v9 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v9;
  v10 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_100492404);
  *(_QWORD *)(v4 + 128) = v11;
  *v11 = v4;
  v11[1] = sub_1000556C8;
  return sub_100118074(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t sub_10012424C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *v11;

  v8 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  v9 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v9;
  v10 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = (_QWORD *)swift_task_alloc(dword_100492384);
  *(_QWORD *)(v4 + 112) = v11;
  *v11 = v4;
  v11[1] = sub_100050A84;
  return sub_10011861C(a1, a2, a3, (_OWORD *)(v4 + 16));
}

uint64_t _s8MusicKit0A7LibraryC0A4CoreE15ActionableStateO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  switch(HIBYTE(a2))
  {
    case 2:
      return (a4 & 0xFF00) == 0x200;
    case 3:
      return (a4 & 0xFF00) == 0x300;
    case 4:
      return (a4 & 0xFF00) == 0x400;
    case 5:
      return (a4 & 0xFF00) == 0x500;
    default:
      if (HIBYTE(a4) - 2 < 4)
        return 0;
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) == 0)
          return 0;
      }
      else if ((a4 & 1) != 0 || *(double *)&a1 != *(double *)&a3)
      {
        return 0;
      }
      return ((a2 & 0x100) == 0) ^ ((unsigned __int16)(a4 & 0x100) >> 8);
  }
}

unint64_t sub_10012439C()
{
  unint64_t result;

  result = qword_100492240;
  if (!qword_100492240)
  {
    result = swift_getWitnessTable(&unk_10038C908, &_s15ActionableStateO5ErrorON);
    atomic_store(result, &qword_100492240);
  }
  return result;
}

uint64_t sub_1001243E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100124404(uint64_t a1)
{
  sub_100084838(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48));
  return a1;
}

char *sub_100124438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v7 = v6;
  v68 = a1;
  v13 = *(_QWORD *)v7;
  v14 = sub_100005574(&qword_100492328);
  __chkstk_darwin(v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_100492330);
  __chkstk_darwin(v17);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v7 + 4) = 0;
  swift_unknownObjectWeakInit(v7 + 24, 0);
  v20 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 152)];
  *(_QWORD *)v20 = 0;
  *((_WORD *)v20 + 4) = 512;
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 160)] = 0;
  v67 = a3;
  v65 = v16;
  v63 = v7 + 24;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1000D3C48((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v21 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 168)] = v21;
  v22 = *(_QWORD *)(v13 + 80);
  v66 = v13;
  v64 = *(_QWORD *)(v13 + 96);
  v23 = MusicLibrary.state<A>(for:)(v68, v22);
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 136)] = v23;
  v24 = qword_10048C7F8;
  swift_retain(v23);
  if (v24 != -1)
    swift_once(&qword_10048C7F8, sub_100123768);
  v26 = type metadata accessor for Logger(0, v25);
  sub_1000086B4(v26, (uint64_t)static Logger.libraryActionableState);
  v27 = swift_retain_n(v23, 2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = swift_slowAlloc(12, -1);
    v62 = a6;
    v60 = a4;
    v31 = v30;
    v32 = swift_slowAlloc(32, -1);
    v61 = a5;
    v33 = a2;
    v34 = v32;
    v69 = v23;
    v70 = v32;
    *(_DWORD *)v31 = 136446210;
    v35 = (char *)String.init<A>(describing:)(&v69, &type metadata for UnsafeRawPointer);
    *(_QWORD *)(v31 + 4) = sub_100019400(v35, v36, &v70);
    swift_release_n(v23, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Initializing item state: %{public}s", (uint8_t *)v31, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    v37 = v34;
    a2 = v33;
    a5 = v61;
    swift_slowDealloc(v37, -1, -1);
    v38 = v31;
    a4 = v60;
    a6 = v62;
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_release_n(v23, 2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(&v7[*(_QWORD *)(*(_QWORD *)v7 + 128)], v68, v22);
  *((_QWORD *)v7 + 2) = a2;
  *((_QWORD *)v7 + 4) = a4;
  v39 = v67;
  swift_unknownObjectWeakAssign(v63, v67);
  v40 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 144)];
  *(_QWORD *)v40 = a5;
  *((_QWORD *)v40 + 1) = a6;
  v41 = a6;
  v42 = type metadata accessor for MusicLibrary.AddStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v19, 1, 1, v42);
  v43 = type metadata accessor for MusicLibrary.DownloadStatus(0);
  v44 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v65, 1, 1, v43);
  swift_retain(a2);
  swift_retain(v41);
  sub_100121474((uint64_t)v19, v44);
  sub_100008758(v44, &qword_100492328);
  sub_100008758((uint64_t)v19, &qword_100492330);
  v45 = (void *)MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification;
  v46 = (void *)objc_opt_self(MPCloudController);
  v47 = v45;
  v48 = objc_msgSend(v46, "sharedCloudController");
  v49 = swift_allocObject(&unk_10044B9D0, 24, 7);
  swift_weakInit(v49 + 16, v7);
  v50 = a2;
  v51 = (_QWORD *)swift_allocObject(&unk_10044BA48, 56, 7);
  v51[2] = v22;
  v52 = v66;
  v53 = v64;
  v51[3] = *(_QWORD *)(v66 + 88);
  v51[4] = v53;
  v51[5] = *(_QWORD *)(v52 + 104);
  v51[6] = v49;
  v54 = type metadata accessor for NotificationObserver();
  swift_allocObject(v54, 64, 7);
  v55 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v47, (uint64_t)v48, 1, 1, (uint64_t)sub_100124D98, (uint64_t)v51);
  v56 = *(_QWORD *)(*(_QWORD *)v7 + 160);
  v57 = *(_QWORD *)&v7[v56];
  *(_QWORD *)&v7[v56] = v55;
  swift_release(v57);
  sub_100122D9C();
  swift_release(v23);
  swift_release(v50);
  swift_unknownObjectRelease(v39);
  swift_release(v41);
  return v7;
}

uint64_t sub_10012491C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 128);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_10011FFA4(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1001249FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  __int16 v5;
  _BYTE v6[24];

  v3 = *(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 152);
  result = swift_beginAccess(v3, v6, 0, 0);
  v5 = *(_WORD *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_WORD *)(a2 + 8) = v5;
  return result;
}

void sub_100124A54(uint64_t a1)
{
  sub_100121100(*(_QWORD *)a1, *(_WORD *)(a1 + 8));
}

uint64_t sub_100124A80()
{
  return 32;
}

__n128 sub_100124A8C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t _s15ActionableStateOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t _s15ActionableStateOwet(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 9);
  if (v3 < 2)
    return 0;
  v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  result = v4 - 3;
  if (v4 <= 3)
    return 0;
  return result;
}

uint64_t _s15ActionableStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 9) = a2 + 5;
  }
  return result;
}

uint64_t sub_100124B3C(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *(unsigned __int8 *)(a1 + 9);
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

uint64_t sub_100124B58(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 9) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicLibrary.ActionableState()
{
  return &type metadata for MusicLibrary.ActionableState;
}

uint64_t sub_100124B90(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_10038C850;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for () + 64;
    v4[5] = &unk_10038C868;
    v4[6] = &unk_10038C880;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_initClassMetadata2(a1, 0, 8, v4, a1 + 112);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for MusicLibrary.ActionableStateController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for MusicLibrary.ActionableStateController);
}

uint64_t _s15ActionableStateO5ErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100124C94 + 4 * byte_10038C7A4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100124CB4 + 4 * byte_10038C7A9[v4]))();
}

_BYTE *sub_100124C94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100124CB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100124CBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100124CC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100124CCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100124CD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s15ActionableStateO5ErrorOMa()
{
  return &_s15ActionableStateO5ErrorON;
}

unint64_t sub_100124CF4()
{
  unint64_t result;

  result = qword_100492300;
  if (!qword_100492300)
  {
    result = swift_getWitnessTable(&unk_10038C8E0, &_s15ActionableStateO5ErrorON);
    atomic_store(result, (unint64_t *)&qword_100492300);
  }
  return result;
}

uint64_t sub_100124D38()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100124D5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100124D80(uint64_t a1)
{
  return sub_100124DA4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10012307C);
}

uint64_t sub_100124D8C(uint64_t a1)
{
  return sub_100124DA4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100123398);
}

uint64_t sub_100124D98(uint64_t a1)
{
  return sub_100124DA4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10011FE5C);
}

uint64_t sub_100124DA4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100124DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10049233C);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492338 + dword_100492338))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100124E48(uint64_t a1)
{
  uint64_t v1;

  return sub_100119548(a1, v1 + 16, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100124E68()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[9]);
  swift_release(v0[11]);
  swift_release(v0[13]);
  sub_10000682C(v0 + 14);
  swift_bridgeObjectRelease();
  swift_release(v0[23]);
  swift_release(v0[26]);
  swift_release(v0[28]);
  return swift_deallocObject(v0, 233, 7);
}

uint64_t sub_100124EDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492354);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))((char *)&dword_100492350 + dword_100492350))(a1, v4, v5, v1 + 32, (char *)(v1 + 232));
}

uint64_t sub_100124F68(uint64_t a1)
{
  uint64_t v1;

  return sub_100119548(a1, v1 + 16, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100124F8C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_10011972C(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100124FCC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[5]);
  swift_release(v0[7]);
  swift_release(v0[10]);
  swift_release(v0[13]);
  swift_release(v0[15]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100125018(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492374);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492370 + dword_100492370))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10012509C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[6];

  v2 = v1[4];
  v6[2] = v1[3];
  v6[3] = v2;
  v3 = v1[6];
  v6[4] = v1[5];
  v6[5] = v3;
  v4 = v1[2];
  v6[0] = v1[1];
  v6[1] = v4;
  return sub_10011972C(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

_QWORD *sub_1001250DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[6];
  v5 = a1[9];
  swift_release(a1[11]);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t sub_10012514C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492394);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492390 + dword_100492390))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1001251D4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_100110454(a1, (uint64_t)v6, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100125220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004923B4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004923B0 + dword_1004923B0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1001252A4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[7];

  v2 = v1[6];
  v6[4] = v1[5];
  v6[5] = v2;
  v6[6] = v1[7];
  v3 = v1[2];
  v6[0] = v1[1];
  v6[1] = v3;
  v4 = v1[4];
  v6[2] = v1[3];
  v6[3] = v4;
  return sub_100110454(a1, (uint64_t)v6, "%{public}s: waiting for finish to return…");
}

uint64_t sub_1001252F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004923D4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004923D0 + dword_1004923D0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004923F4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004923F0 + dword_1004923F0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125408(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_10011936C(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100125458()
{
  _QWORD *v0;
  void *v1;

  swift_unknownObjectRelease(v0[2]);
  v1 = (void *)v0[4];
  if ((unint64_t)v1 >= 4)

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[15]);
  swift_release(v0[18]);
  swift_release(v0[20]);
  return swift_deallocObject(v0, 168, 7);
}

uint64_t sub_1001254C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492414);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100492410 + dword_100492410))(a1, v4, v5, v1 + 32);
}

uint64_t sub_100125548(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];
  uint64_t v8;

  v2 = *(_OWORD *)(v1 + 128);
  v7[6] = *(_OWORD *)(v1 + 112);
  v7[7] = v2;
  v8 = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  v7[2] = *(_OWORD *)(v1 + 48);
  v7[3] = v3;
  v4 = *(_OWORD *)(v1 + 96);
  v7[4] = *(_OWORD *)(v1 + 80);
  v7[5] = v4;
  v5 = *(_OWORD *)(v1 + 32);
  v7[0] = *(_OWORD *)(v1 + 16);
  v7[1] = v5;
  return sub_10011936C(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100125598()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1001255A8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_10011082C(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_1001255F0()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492434);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492430 + dword_100492430))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125680()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125690(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_10011082C(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_1001256D8()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1001256E8()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1001256F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492454);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492450 + dword_100492450))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125778()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492474);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492470 + dword_100492470))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10012581C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492494);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492490 + dword_100492490))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1001258A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004924B4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004924B0 + dword_1004924B0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004924D4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004924D0 + dword_1004924D0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1001259C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1004924F4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1004924F0 + dword_1004924F0))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125A44()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100125A58(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100110630(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100125AA0()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100125AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492514);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492510 + dword_100492510))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125B34()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_release, (void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100125B48(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100110630(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100125B90()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125BA4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100119190(a1, (uint64_t)v7, "%{public}s: waiting for perform to return…");
}

uint64_t sub_100125BEC()
{
  return sub_100054E5C((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125C00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492534);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492530 + dword_100492530))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100125C80()
{
  return sub_100054D04((void (*)(_QWORD))&_swift_bridgeObjectRelease, (void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100125C94(uint64_t a1)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[8];

  v2 = v1[6];
  v7[4] = v1[5];
  v7[5] = v2;
  v3 = v1[8];
  v7[6] = v1[7];
  v7[7] = v3;
  v4 = v1[2];
  v7[0] = v1[1];
  v7[1] = v4;
  v5 = v1[4];
  v7[2] = v1[3];
  v7[3] = v5;
  return sub_100119190(a1, (uint64_t)v7, "%{public}s: waiting for finish to return…");
}

uint64_t sub_100125CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_100492554);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100492550 + dword_100492550))(a1, v4, v5, (_OWORD *)(v1 + 32));
}

_QWORD *sub_100125D68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[8];
  v6 = a1[11];
  swift_release(a1[13]);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  return a1;
}

uint64_t Library.ContentFilterOption.id.getter(char a1)
{
  if (!a1)
    return 7105633;
  if (a1 == 1)
    return 0x657469726F766166;
  return 0x64616F6C6E776F64;
}

uint64_t sub_100125E70(char *a1, unsigned __int8 *a2)
{
  return sub_100027940(*a1, *a2);
}

unint64_t sub_100125E7C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100125EA8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0x657469726F766166;
  if (v2 != 1)
    v4 = 0x64616F6C6E776F64;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 7105633;
  if (!v5)
    v3 = 0xE900000000000073;
  *a1 = v6;
  a1[1] = v3;
}

Swift::Int sub_100125F08()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = 0x657469726F766166;
  if (v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100125FA8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = 0x657469726F766166;
  if (*v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (*v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (*v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_100126024()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6);
  v2 = 0x657469726F766166;
  if (v1 != 1)
    v2 = 0x64616F6C6E776F64;
  if (v1)
    v3 = v2;
  else
    v3 = 7105633;
  if (v1)
    v4 = 0xE900000000000073;
  else
    v4 = 0xE300000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001260C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10012C338();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10012611C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10012C338();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

void Optional<A>.convertToSet.getter(char a1)
{
  __asm { BR              X10 }
}

void *sub_1001261B0()
{
  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

uint64_t Library.Context.musicLibrary.getter()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t Library.Context.musicLibrary.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release(*v1);
  *v1 = a1;
  return result;
}

uint64_t Library.Context.album.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 20), a1, &qword_10048D9F8);
}

uint64_t Library.Context.album.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 20), &qword_10048D9F8);
}

CFRange (__swiftcall *Library.Context.album.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.artist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 24), a1, &qword_10048F210);
}

uint64_t Library.Context.artist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 24), &qword_10048F210);
}

CFRange (__swiftcall *Library.Context.artist.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.composer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 28), a1, &qword_100492588);
}

uint64_t Library.Context.composer.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 28), &qword_100492588);
}

CFRange (__swiftcall *Library.Context.composer.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.genre.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 32), a1, &qword_100492590);
}

uint64_t Library.Context.genre.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 32), &qword_100492590);
}

CFRange (__swiftcall *Library.Context.genre.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 36), a1, &qword_100491260);
}

uint64_t Library.Context.playlist.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 36), &qword_100491260);
}

CFRange (__swiftcall *Library.Context.playlist.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.tvShow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 40), a1, &qword_10048F388);
}

uint64_t Library.Context.tvShow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 40), &qword_10048F388);
}

CFRange (__swiftcall *Library.Context.tvShow.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.tvSeason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 44), a1, &qword_10048F358);
}

uint64_t Library.Context.tvSeason.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Library.Context(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 44), &qword_10048F358);
}

CFRange (__swiftcall *Library.Context.tvSeason.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.useDownloadedContentOnly.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 48));
}

uint64_t Library.Context.useDownloadedContentOnly.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

CFRange (__swiftcall *Library.Context.useDownloadedContentOnly.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.sortOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 52));
}

uint64_t Library.Context.sortOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

CFRange (__swiftcall *Library.Context.sortOption.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.filterOption.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 56));
}

uint64_t Library.Context.filterOption.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

CFRange (__swiftcall *Library.Context.filterOption.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.text.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Library.Context.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Library.Context.text.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.playlistVariants.getter()
{
  type metadata accessor for Library.Context(0);
  return swift_bridgeObjectRetain();
}

uint64_t Library.Context.playlistVariants.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for Library.Context(0) + 64);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Library.Context.playlistVariants.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.isCompilation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Library.Context(0) + 68));
}

uint64_t Library.Context.isCompilation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

CFRange (__swiftcall *Library.Context.isCompilation.modify())(__C::_NSRange)
{
  type metadata accessor for Library.Context(0);
  return CFRange.init(_:);
}

uint64_t Library.Context.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  type metadata accessor for MusicLibrary(0);
  *a1 = static MusicLibrary.shared.getter();
  v2 = (int *)type metadata accessor for Library.Context(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + v2[6];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)a1 + v2[7];
  v8 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)a1 + v2[8];
  v10 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)a1 + v2[9];
  v12 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (char *)a1 + v2[10];
  v14 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (char *)a1 + v2[11];
  v16 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((_BYTE *)a1 + v2[12]) = 0;
  *((_BYTE *)a1 + v2[13]) = 2;
  *((_BYTE *)a1 + v2[14]) = 3;
  v18 = (_QWORD *)((char *)a1 + v2[15]);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)((char *)a1 + v2[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)a1 + v2[17]) = 2;
  return result;
}

uint64_t Library.Context.with<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a1;
  v41 = type metadata accessor for TVSeason(0);
  v38 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for TVShow(0);
  v39 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Playlist(0);
  v42 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for Genre(0);
  v45 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Composer(0);
  v48 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v52 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Artist(0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Album(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Optional(0, a2);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v35 - v21;
  v55 = a3;
  sub_100129F00(v57, a3);
  v57 = v17;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v23(v22, v56, v16);
  v56 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v22, 1, a2) != 1)
  {
    v36 = v22;
    v37 = v16;
    v23(v20, (uint64_t)v22, v16);
    v24 = v20;
    if (swift_dynamicCast(v15, v20, a2, v12, 0))
    {
      v25 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 20);
      sub_100008758(v25, &qword_10048D9F8);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v25, v15, v12);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
    }
    else
    {
      v26 = v20;
      v27 = v54;
      if (!swift_dynamicCast(v11, v26, a2, v54, 0))
      {
        v31 = v52;
        v30 = v53;
        if (swift_dynamicCast(v52, v24, a2, v53, 0))
        {
          v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 28);
          sub_100008758(v32, &qword_100492588);
          v33 = v48;
        }
        else
        {
          v31 = v49;
          v30 = v50;
          if (swift_dynamicCast(v49, v24, a2, v50, 0))
          {
            v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 32);
            sub_100008758(v32, &qword_100492590);
            v33 = v45;
          }
          else
          {
            v31 = v46;
            v30 = v47;
            if (swift_dynamicCast(v46, v24, a2, v47, 0))
            {
              v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 36);
              sub_100008758(v32, &qword_100491260);
              v33 = v42;
            }
            else
            {
              v31 = v43;
              v30 = v44;
              if (swift_dynamicCast(v43, v24, a2, v44, 0))
              {
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 40);
                sub_100008758(v32, &qword_10048F388);
                v33 = v39;
              }
              else
              {
                v31 = v40;
                v30 = v41;
                if (!swift_dynamicCast(v40, v24, a2, v41, 0))
                  goto LABEL_17;
                v32 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 44);
                sub_100008758(v32, &qword_10048F358);
                v33 = v38;
              }
            }
          }
        }
        (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v32, v31, v30);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v32, 0, 1, v30);
        goto LABEL_17;
      }
      v28 = v55 + *(int *)(type metadata accessor for Library.Context(0) + 24);
      sub_100008758(v28, &qword_10048F210);
      v29 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v28, v11, v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v27);
    }
LABEL_17:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, a2);
    v16 = v37;
    v22 = v36;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v22, v16);
}

uint64_t Library.Context.with(compilation:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  sub_100129F00(v1, a1);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a1 + *(int *)(result + 68)) = 1;
  return result;
}

uint64_t Library.Context.with(sortOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_100129F00(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t Library.Context.with(filterOption:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_100129F00(v2, a2);
  result = type metadata accessor for Library.Context(0);
  *(_BYTE *)(a2 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t Library.Context.with(filterText:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t result;

  sub_100129F00(v3, a3);
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for Library.Context(0) + 60));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = a1;
  v7[1] = a2;
  return result;
}

void Library.Context.SortOption.hash(into:)(uint64_t a1, char a2)
{
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a2 & 1);
}

BOOL static Library.Context.SortOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a1 ^ a2) & 1) == 0;
}

Swift::Int Library.Context.SortOption.hashValue.getter(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(a1 & 1);
  return Hasher._finalize()();
}

Swift::Int sub_1001272D0()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100127320()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;

  v1 = *v0;
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10012735C()
{
  Swift::UInt8 *v0;
  Swift::UInt8 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void Library.Context.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  Swift::UInt8 v75;
  int v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  Swift::UInt v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  Swift::UInt8 v90;
  int *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v3 = type metadata accessor for TVSeason(0);
  v113 = *(_QWORD *)(v3 - 8);
  v114 = v3;
  __chkstk_darwin(v3);
  v97 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048F358);
  __chkstk_darwin(v5);
  v112 = (uint64_t)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TVShow(0);
  v110 = *(_QWORD *)(v7 - 8);
  v111 = v7;
  __chkstk_darwin(v7);
  v96 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10048F388);
  __chkstk_darwin(v9);
  v109 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v107 = *(_QWORD *)(v11 - 8);
  v108 = v11;
  __chkstk_darwin(v11);
  v95 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_100491260);
  __chkstk_darwin(v13);
  v106 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Genre(0);
  v104 = *(_QWORD *)(v15 - 8);
  v105 = v15;
  __chkstk_darwin(v15);
  v94 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_100492590);
  __chkstk_darwin(v17);
  v103 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Composer(0);
  v101 = *(_QWORD *)(v19 - 8);
  v102 = v19;
  __chkstk_darwin(v19);
  v93 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100005574(&qword_100492588);
  __chkstk_darwin(v21);
  v100 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Artist(0);
  v98 = *(_QWORD *)(v23 - 8);
  v99 = v23;
  __chkstk_darwin(v23);
  v92 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005574(&qword_10048F210);
  __chkstk_darwin(v25);
  v27 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Album(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100005574(&qword_10048D9F8);
  __chkstk_darwin(v32);
  v34 = (char *)&v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = *v1;
  v35 = type metadata accessor for MusicLibrary(0);
  v36 = sub_100006924(&qword_100492598, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary, (uint64_t)&protocol conformance descriptor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)(a1, v35, v36);
  v37 = (int *)type metadata accessor for Library.Context(0);
  sub_100014A7C((uint64_t)v1 + v37[5], (uint64_t)v34, &qword_10048D9F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v34, 1, v28) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v34, v28);
    Hasher._combine(_:)(1u);
    v38 = sub_100006924(&qword_1004925A0, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
    dispatch thunk of Hashable.hash(into:)(a1, v28, v38);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  v39 = v1;
  sub_100014A7C((uint64_t)v1 + v37[6], (uint64_t)v27, &qword_10048F210);
  v40 = v98;
  v41 = v99;
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 48))(v27, 1, v99);
  v43 = v111;
  v45 = v102;
  v44 = (uint64_t)v103;
  v46 = (uint64_t)v100;
  if (v42 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v47 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v91 = v37;
    v48 = v92;
    v47(v92, v27, v41);
    Hasher._combine(_:)(1u);
    v49 = sub_100006924(&qword_1004925A8, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
    dispatch thunk of Hashable.hash(into:)(a1, v41, v49);
    v50 = v48;
    v37 = v91;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v50, v41);
  }
  v51 = v105;
  sub_100014A7C((uint64_t)v39 + v37[7], v46, &qword_100492588);
  v52 = v101;
  v53 = v43;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v46, 1, v45) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v54 = v46;
    v55 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v93, v54, v45);
    Hasher._combine(_:)(1u);
    v56 = sub_100006924(&qword_1004925B0, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
    dispatch thunk of Hashable.hash(into:)(a1, v45, v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v45);
  }
  sub_100014A7C((uint64_t)v39 + v37[8], v44, &qword_100492590);
  v57 = v104;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v44, 1, v51) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v58 = v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v94, v44, v51);
    Hasher._combine(_:)(1u);
    v59 = sub_100006924(&qword_1004925B8, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
    dispatch thunk of Hashable.hash(into:)(a1, v51, v59);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v51);
  }
  v60 = v106;
  v61 = v107;
  sub_100014A7C((uint64_t)v39 + v37[9], v106, &qword_100491260);
  v62 = v108;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v60, 1, v108) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v63 = v95;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v95, v60, v62);
    Hasher._combine(_:)(1u);
    v64 = sub_100006924(&qword_1004925C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    dispatch thunk of Hashable.hash(into:)(a1, v62, v64);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v62);
  }
  v65 = v109;
  v66 = v110;
  sub_100014A7C((uint64_t)v39 + v37[10], v109, &qword_10048F388);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v65, 1, v53) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v67 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v96, v65, v53);
    Hasher._combine(_:)(1u);
    v68 = sub_100006924(&qword_1004925C8, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
    dispatch thunk of Hashable.hash(into:)(a1, v53, v68);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v53);
  }
  v69 = v112;
  sub_100014A7C((uint64_t)v39 + v37[11], v112, &qword_10048F358);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v69, 1, v114) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v71 = v113;
    v70 = v114;
    v72 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v97, v69, v114);
    Hasher._combine(_:)(1u);
    v73 = sub_100006924(&qword_1004925D0, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
    dispatch thunk of Hashable.hash(into:)(a1, v70, v73);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  }
  Hasher._combine(_:)(*((_BYTE *)v39 + v37[12]));
  v74 = *((unsigned __int8 *)v39 + v37[13]);
  if (v74 == 2)
  {
    v75 = 0;
  }
  else
  {
    v75 = v74 & 1;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v75);
  v76 = *((unsigned __int8 *)v39 + v37[14]);
  if (v76 == 3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if (v76)
    {
      if (v76 == 1)
        v77 = 0x657469726F766166;
      else
        v77 = 0x64616F6C6E776F64;
      v78 = 0xE900000000000073;
    }
    else
    {
      v78 = 0xE300000000000000;
      v77 = 7105633;
    }
    String.hash(into:)(a1, v77, v78);
    swift_bridgeObjectRelease();
  }
  v79 = (_QWORD *)((char *)v39 + v37[15]);
  v80 = v79[1];
  if (v80)
  {
    v81 = *v79;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v81, v80);
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v82 = *(_QWORD *)((char *)v39 + v37[16]);
  v83 = *(_QWORD *)(v82 + 16);
  Hasher._combine(_:)(v83);
  if (v83)
  {
    v84 = type metadata accessor for Playlist.Variant(0);
    v85 = *(_QWORD *)(v84 - 8);
    v86 = v82 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
    v87 = *(_QWORD *)(v85 + 72);
    v88 = sub_100006924(&qword_1004925D8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    swift_bridgeObjectRetain();
    do
    {
      dispatch thunk of Hashable.hash(into:)(a1, v84, v88);
      v86 += v87;
      --v83;
    }
    while (v83);
    swift_bridgeObjectRelease();
  }
  v89 = *((unsigned __int8 *)v39 + v37[17]);
  if (v89 == 2)
  {
    v90 = 0;
  }
  else
  {
    v90 = v89 & 1;
    Hasher._combine(_:)(1u);
  }
  Hasher._combine(_:)(v90);
}

Swift::Int Library.Context.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Library.Context.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100127EA0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Library.Context.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_100127EDC()
{
  int *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  v0 = (int *)type metadata accessor for Library.Context(0);
  sub_1000086DC((uint64_t)v0, qword_100492568);
  v1 = (_QWORD *)sub_1000086B4((uint64_t)v0, (uint64_t)qword_100492568);
  type metadata accessor for MusicLibrary(0);
  *v1 = static MusicLibrary.shared.getter();
  v2 = (char *)v1 + v0[5];
  v3 = type metadata accessor for Album(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (char *)v1 + v0[6];
  v5 = type metadata accessor for Artist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)v1 + v0[7];
  v7 = type metadata accessor for Composer(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)v1 + v0[8];
  v9 = type metadata accessor for Genre(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)v1 + v0[9];
  v11 = type metadata accessor for Playlist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)v1 + v0[10];
  v13 = type metadata accessor for TVShow(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (char *)v1 + v0[11];
  v15 = type metadata accessor for TVSeason(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *((_BYTE *)v1 + v0[12]) = 0;
  *((_BYTE *)v1 + v0[13]) = 2;
  *((_BYTE *)v1 + v0[14]) = 3;
  v17 = (_QWORD *)((char *)v1 + v0[15]);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)((char *)v1 + v0[16]) = _swiftEmptyArrayStorage;
  *((_BYTE *)v1 + v0[17]) = 2;
  return result;
}

uint64_t sub_1001280B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_10048C800 != -1)
    swift_once(&qword_10048C800, sub_100127EDC);
  v2 = type metadata accessor for Library.Context(0);
  v3 = sub_1000086B4(v2, (uint64_t)qword_100492568);
  return sub_100129F00(v3, a1);
}

uint64_t sub_100128110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_100006924(&qword_1004925F8, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.libraryContext.getter()
{
  unint64_t v0;

  v0 = sub_100129F44();
  return EnvironmentValues.subscript.getter(&_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v0);
}

uint64_t EnvironmentValues.libraryContext.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Library.Context(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129F00(a1, (uint64_t)v4);
  v5 = sub_100129F44();
  EnvironmentValues.subscript.setter(v4, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
  return sub_100129F88(a1);
}

void (*EnvironmentValues.libraryContext.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  unint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Library.Context(0) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v5 = sub_100129F44();
  v3[4] = v5;
  EnvironmentValues.subscript.getter(&_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
  return sub_1001282D4;
}

void sub_1001282D4(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_100129F00((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_100129F00(v3[2], v3[1]);
    EnvironmentValues.subscript.setter(v6, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v5);
    sub_100129F88((uint64_t)v7);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v3[4]);
  }
  sub_100129F88((uint64_t)v4);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t View.libraryContext(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;

  KeyPath = swift_getKeyPath(&unk_10038C968);
  View.environment<A>(_:_:)(KeyPath, a1, a2, a3);
  return swift_release(KeyPath);
}

uint64_t sub_1001283F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for Library.Context(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v10 - v6;
  sub_100129F00(a1, (uint64_t)&v10 - v6);
  sub_100129F00((uint64_t)v7, (uint64_t)v5);
  v8 = sub_100129F44();
  EnvironmentValues.subscript.setter(v5, &_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v8);
  return sub_100129F88((uint64_t)v7);
}

uint64_t MusicLibraryRequest.apply(_:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_retain(*a1);
  MusicLibraryRequest.library.setter(v4, a2);
  v5 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for Library.Context(0) + 48));
  return MusicLibraryRequest.includeOnlyDownloadedContent.setter(v5, a2);
}

uint64_t _s9MusicCore7LibraryO7ContextV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  void (*v81)(char *, uint64_t);
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  int *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char v110;
  void (*v111)(char *, uint64_t);
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char v125;
  void (*v126)(char *, uint64_t);
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char v139;
  void (*v140)(char *, uint64_t);
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  void (*v156)(char *, uint64_t);
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t result;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  int *v170;
  uint64_t v171;
  int v172;
  int v173;
  _BOOL4 v174;
  uint64_t v175;
  int v176;
  int v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  int *v190;
  char v191;
  uint64_t v192;
  int v193;
  int v194;
  _BOOL4 v195;
  int *v196;
  _QWORD *v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;

  v204 = type metadata accessor for TVSeason(0);
  v207 = *(_QWORD *)(v204 - 8);
  __chkstk_darwin(v204);
  v199 = (char *)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100005574(&qword_100492710);
  __chkstk_darwin(v202);
  v217 = (char *)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048F358);
  v7 = __chkstk_darwin(v6);
  v200 = (uint64_t)&v196 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v203 = (uint64_t)&v196 - v10;
  __chkstk_darwin(v9);
  v206 = (uint64_t)&v196 - v11;
  v210 = type metadata accessor for TVShow(0);
  v215 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v201 = (char *)&v196 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100005574(&qword_100492718);
  __chkstk_darwin(v209);
  v212 = (uint64_t)&v196 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F388);
  v15 = __chkstk_darwin(v14);
  v205 = (uint64_t)&v196 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v213 = (uint64_t)&v196 - v18;
  __chkstk_darwin(v17);
  v214 = (uint64_t)&v196 - v19;
  v219 = type metadata accessor for Playlist(0);
  v223 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v208 = (char *)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100005574(&qword_100492720);
  __chkstk_darwin(v218);
  v227 = (char *)&v196 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100005574(&qword_100491260);
  v23 = __chkstk_darwin(v22);
  v211 = (uint64_t)&v196 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v221 = (uint64_t)&v196 - v26;
  __chkstk_darwin(v25);
  v222 = (uint64_t)&v196 - v27;
  v226 = type metadata accessor for Genre(0);
  v230 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin(v226);
  v216 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_100005574(&qword_100492728);
  __chkstk_darwin(v225);
  v238 = (char *)&v196 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100005574(&qword_100492590);
  v31 = __chkstk_darwin(v30);
  v220 = (uint64_t)&v196 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v228 = (uint64_t)&v196 - v34;
  __chkstk_darwin(v33);
  v229 = (uint64_t)&v196 - v35;
  v233 = type metadata accessor for Composer(0);
  v235 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v224 = (char *)&v196 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_100005574(&qword_100492730);
  __chkstk_darwin(v232);
  v244 = (char *)&v196 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100005574(&qword_100492588);
  v39 = __chkstk_darwin(v38);
  v237 = (char *)&v196 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v234 = (uint64_t)&v196 - v42;
  __chkstk_darwin(v41);
  v243 = (char *)&v196 - v43;
  v242 = type metadata accessor for Artist(0);
  v247 = *(_QWORD *)(v242 - 8);
  __chkstk_darwin(v242);
  v231 = (char *)&v196 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = sub_100005574(&qword_100492738);
  __chkstk_darwin(v239);
  v241 = (uint64_t)&v196 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100005574(&qword_10048F210);
  v47 = __chkstk_darwin(v46);
  v248 = (char *)&v196 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v47);
  v246 = (uint64_t)&v196 - v50;
  __chkstk_darwin(v49);
  v240 = (uint64_t)&v196 - v51;
  v52 = type metadata accessor for Album(0);
  v53 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v236 = (char *)&v196 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100005574(&qword_100492740);
  __chkstk_darwin(v55);
  v57 = (char *)&v196 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100005574(&qword_10048D9F8);
  v59 = __chkstk_darwin(v58);
  v245 = (uint64_t)&v196 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __chkstk_darwin(v59);
  v63 = (char *)&v196 - v62;
  __chkstk_darwin(v61);
  v65 = (char *)&v196 - v64;
  type metadata accessor for MusicLibrary(0);
  v66 = a1;
  if ((static MusicLibrary.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v67 = type metadata accessor for Library.Context(0);
  v68 = *(int *)(v67 + 20);
  v197 = v66;
  sub_100014A7C((uint64_t)v66 + v68, (uint64_t)v65, &qword_10048D9F8);
  v196 = (int *)v67;
  v69 = *(int *)(v67 + 20);
  v198 = a2;
  sub_100014A7C((uint64_t)a2 + v69, (uint64_t)v63, &qword_10048D9F8);
  v70 = (uint64_t)&v57[*(int *)(v55 + 48)];
  sub_100014A7C((uint64_t)v65, (uint64_t)v57, &qword_10048D9F8);
  sub_100014A7C((uint64_t)v63, v70, &qword_10048D9F8);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v71((uint64_t)v57, 1, v52) == 1)
  {
    sub_100008758((uint64_t)v63, &qword_10048D9F8);
    sub_100008758((uint64_t)v65, &qword_10048D9F8);
    v72 = v71(v70, 1, v52);
    v73 = (uint64_t)v248;
    if (v72 == 1)
    {
      sub_100008758((uint64_t)v57, &qword_10048D9F8);
      goto LABEL_9;
    }
LABEL_7:
    v76 = &qword_100492740;
    v77 = (uint64_t)v57;
LABEL_50:
    sub_100008758(v77, v76);
    return 0;
  }
  v74 = v245;
  sub_100014A7C((uint64_t)v57, v245, &qword_10048D9F8);
  v75 = v71(v70, 1, v52);
  v73 = (uint64_t)v248;
  if (v75 == 1)
  {
    sub_100008758((uint64_t)v63, &qword_10048D9F8);
    sub_100008758((uint64_t)v65, &qword_10048D9F8);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v74, v52);
    goto LABEL_7;
  }
  v78 = v236;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v236, v70, v52);
  v79 = sub_100006924(&qword_100492778, (uint64_t (*)(uint64_t))&type metadata accessor for Album, (uint64_t)&protocol conformance descriptor for Album);
  v80 = dispatch thunk of static Equatable.== infix(_:_:)(v74, v78, v52, v79);
  v81 = *(void (**)(char *, uint64_t))(v53 + 8);
  v81(v78, v52);
  sub_100008758((uint64_t)v63, &qword_10048D9F8);
  sub_100008758((uint64_t)v65, &qword_10048D9F8);
  v81((char *)v74, v52);
  sub_100008758((uint64_t)v57, &qword_10048D9F8);
  if ((v80 & 1) == 0)
    return 0;
LABEL_9:
  v82 = v196;
  v83 = v240;
  sub_100014A7C((uint64_t)v197 + v196[6], v240, &qword_10048F210);
  v84 = v246;
  sub_100014A7C((uint64_t)v198 + v82[6], v246, &qword_10048F210);
  v85 = v241;
  v86 = v241 + *(int *)(v239 + 48);
  sub_100014A7C(v83, v241, &qword_10048F210);
  sub_100014A7C(v84, v86, &qword_10048F210);
  v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  v88 = v242;
  if (v87(v85, 1, v242) == 1)
  {
    sub_100008758(v84, &qword_10048F210);
    sub_100008758(v83, &qword_10048F210);
    v89 = v87(v86, 1, v88);
    v90 = (uint64_t)v237;
    v91 = (uint64_t)v238;
    v93 = (uint64_t)v243;
    v92 = (uint64_t)v244;
    if (v89 == 1)
    {
      sub_100008758(v85, &qword_10048F210);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  sub_100014A7C(v85, v73, &qword_10048F210);
  v94 = v87(v86, 1, v88);
  v93 = (uint64_t)v243;
  v92 = (uint64_t)v244;
  if (v94 == 1)
  {
    sub_100008758(v246, &qword_10048F210);
    sub_100008758(v83, &qword_10048F210);
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v73, v88);
LABEL_14:
    v76 = &qword_100492738;
    v77 = v85;
    goto LABEL_50;
  }
  v95 = v247;
  v96 = v83;
  v97 = v73;
  v98 = v231;
  (*(void (**)(char *, uint64_t, uint64_t))(v247 + 32))(v231, v86, v88);
  v99 = sub_100006924(&qword_100492770, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  v100 = dispatch thunk of static Equatable.== infix(_:_:)(v97, v98, v88, v99);
  v101 = *(void (**)(char *, uint64_t))(v95 + 8);
  v101(v98, v88);
  sub_100008758(v246, &qword_10048F210);
  sub_100008758(v96, &qword_10048F210);
  v101((char *)v97, v88);
  v91 = (uint64_t)v238;
  sub_100008758(v85, &qword_10048F210);
  v90 = (uint64_t)v237;
  if ((v100 & 1) == 0)
    return 0;
LABEL_16:
  v102 = v196;
  sub_100014A7C((uint64_t)v197 + v196[7], v93, &qword_100492588);
  v103 = v234;
  sub_100014A7C((uint64_t)v198 + v102[7], v234, &qword_100492588);
  v104 = v92 + *(int *)(v232 + 48);
  sub_100014A7C(v93, v92, &qword_100492588);
  sub_100014A7C(v103, v104, &qword_100492588);
  v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48);
  v106 = v233;
  if (v105(v92, 1, v233) == 1)
  {
    sub_100008758(v103, &qword_100492588);
    sub_100008758(v93, &qword_100492588);
    v92 = (uint64_t)v244;
    if (v105(v104, 1, v106) == 1)
    {
      sub_100008758(v92, &qword_100492588);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  sub_100014A7C(v92, v90, &qword_100492588);
  if (v105(v104, 1, v106) == 1)
  {
    sub_100008758(v234, &qword_100492588);
    sub_100008758(v93, &qword_100492588);
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v90, v106);
LABEL_21:
    v76 = &qword_100492730;
    v77 = v92;
    goto LABEL_50;
  }
  v107 = v235;
  v108 = v224;
  (*(void (**)(char *, uint64_t, uint64_t))(v235 + 32))(v224, v104, v106);
  v109 = sub_100006924(&qword_100492768, (uint64_t (*)(uint64_t))&type metadata accessor for Composer, (uint64_t)&protocol conformance descriptor for Composer);
  v110 = dispatch thunk of static Equatable.== infix(_:_:)(v90, v108, v106, v109);
  v111 = *(void (**)(char *, uint64_t))(v107 + 8);
  v111(v108, v106);
  sub_100008758(v234, &qword_100492588);
  sub_100008758(v93, &qword_100492588);
  v111((char *)v90, v106);
  sub_100008758(v92, &qword_100492588);
  if ((v110 & 1) == 0)
    return 0;
LABEL_23:
  v112 = v196;
  v113 = v229;
  sub_100014A7C((uint64_t)v197 + v196[8], v229, &qword_100492590);
  v114 = v228;
  sub_100014A7C((uint64_t)v198 + v112[8], v228, &qword_100492590);
  v115 = v91 + *(int *)(v225 + 48);
  sub_100014A7C(v113, v91, &qword_100492590);
  sub_100014A7C(v114, v115, &qword_100492590);
  v116 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
  v117 = v226;
  if (v116(v91, 1, v226) == 1)
  {
    sub_100008758(v114, &qword_100492590);
    sub_100008758(v113, &qword_100492590);
    v118 = v116(v115, 1, v117);
    v119 = (uint64_t)v227;
    if (v118 == 1)
    {
      sub_100008758(v91, &qword_100492590);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  v120 = v220;
  sub_100014A7C(v91, v220, &qword_100492590);
  v121 = v116(v115, 1, v117);
  v119 = (uint64_t)v227;
  if (v121 == 1)
  {
    sub_100008758(v228, &qword_100492590);
    sub_100008758(v229, &qword_100492590);
    (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v120, v117);
LABEL_28:
    v76 = &qword_100492728;
    v77 = v91;
    goto LABEL_50;
  }
  v122 = v230;
  v123 = v216;
  (*(void (**)(char *, uint64_t, uint64_t))(v230 + 32))(v216, v115, v117);
  v124 = sub_100006924(&qword_100492760, (uint64_t (*)(uint64_t))&type metadata accessor for Genre, (uint64_t)&protocol conformance descriptor for Genre);
  v125 = dispatch thunk of static Equatable.== infix(_:_:)(v120, v123, v117, v124);
  v126 = *(void (**)(char *, uint64_t))(v122 + 8);
  v126(v123, v117);
  sub_100008758(v228, &qword_100492590);
  sub_100008758(v229, &qword_100492590);
  v126((char *)v120, v117);
  sub_100008758(v91, &qword_100492590);
  if ((v125 & 1) == 0)
    return 0;
LABEL_30:
  v127 = v196;
  v128 = v222;
  sub_100014A7C((uint64_t)v197 + v196[9], v222, &qword_100491260);
  v129 = v221;
  sub_100014A7C((uint64_t)v198 + v127[9], v221, &qword_100491260);
  v130 = v119 + *(int *)(v218 + 48);
  sub_100014A7C(v128, v119, &qword_100491260);
  sub_100014A7C(v129, v130, &qword_100491260);
  v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48);
  v132 = v219;
  if (v131(v119, 1, v219) == 1)
  {
    sub_100008758(v129, &qword_100491260);
    v119 = (uint64_t)v227;
    sub_100008758(v128, &qword_100491260);
    if (v131(v130, 1, v132) == 1)
    {
      sub_100008758(v119, &qword_100491260);
      v133 = (uint64_t)v217;
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  v134 = v211;
  sub_100014A7C(v119, v211, &qword_100491260);
  v135 = v131(v130, 1, v132);
  v133 = (uint64_t)v217;
  if (v135 == 1)
  {
    sub_100008758(v221, &qword_100491260);
    sub_100008758(v222, &qword_100491260);
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v134, v132);
LABEL_35:
    v76 = &qword_100492720;
    v77 = v119;
    goto LABEL_50;
  }
  v136 = v223;
  v137 = v208;
  (*(void (**)(char *, uint64_t, uint64_t))(v223 + 32))(v208, v130, v132);
  v138 = sub_100006924(&qword_100492758, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
  v139 = dispatch thunk of static Equatable.== infix(_:_:)(v134, v137, v132, v138);
  v140 = *(void (**)(char *, uint64_t))(v136 + 8);
  v140(v137, v132);
  sub_100008758(v221, &qword_100491260);
  sub_100008758(v222, &qword_100491260);
  v140((char *)v134, v132);
  sub_100008758(v119, &qword_100491260);
  if ((v139 & 1) == 0)
    return 0;
LABEL_37:
  v141 = v196;
  v142 = v214;
  sub_100014A7C((uint64_t)v197 + v196[10], v214, &qword_10048F388);
  v143 = (uint64_t)v198 + v141[10];
  v144 = v213;
  sub_100014A7C(v143, v213, &qword_10048F388);
  v145 = v212;
  v146 = v212 + *(int *)(v209 + 48);
  sub_100014A7C(v142, v212, &qword_10048F388);
  sub_100014A7C(v144, v146, &qword_10048F388);
  v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
  v148 = v210;
  if (v147(v145, 1, v210) == 1)
  {
    sub_100008758(v144, &qword_10048F388);
    sub_100008758(v142, &qword_10048F388);
    v145 = v212;
    if (v147(v146, 1, v148) == 1)
    {
      sub_100008758(v145, &qword_10048F388);
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  v149 = v205;
  sub_100014A7C(v145, v205, &qword_10048F388);
  if (v147(v146, 1, v148) == 1)
  {
    sub_100008758(v213, &qword_10048F388);
    sub_100008758(v214, &qword_10048F388);
    (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v149, v148);
LABEL_42:
    v76 = &qword_100492718;
    v77 = v145;
    goto LABEL_50;
  }
  v150 = v215;
  v151 = v201;
  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v201, v146, v148);
  v152 = sub_100006924(&qword_100492750, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow, (uint64_t)&protocol conformance descriptor for TVShow);
  v153 = v145;
  v154 = v148;
  v155 = dispatch thunk of static Equatable.== infix(_:_:)(v149, v151, v148, v152);
  v156 = *(void (**)(char *, uint64_t))(v150 + 8);
  v156(v151, v154);
  sub_100008758(v213, &qword_10048F388);
  sub_100008758(v214, &qword_10048F388);
  v156((char *)v149, v154);
  sub_100008758(v153, &qword_10048F388);
  if ((v155 & 1) == 0)
    return 0;
LABEL_44:
  v157 = v196;
  v158 = v206;
  sub_100014A7C((uint64_t)v197 + v196[11], v206, &qword_10048F358);
  v159 = v203;
  sub_100014A7C((uint64_t)v198 + v157[11], v203, &qword_10048F358);
  v160 = v133 + *(int *)(v202 + 48);
  sub_100014A7C(v158, v133, &qword_10048F358);
  sub_100014A7C(v159, v160, &qword_10048F358);
  v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
  v162 = v204;
  if (v161(v133, 1, v204) == 1)
  {
    sub_100008758(v159, &qword_10048F358);
    sub_100008758(v158, &qword_10048F358);
    if (v161(v160, 1, v162) == 1)
    {
      sub_100008758(v133, &qword_10048F358);
      goto LABEL_54;
    }
    goto LABEL_49;
  }
  v163 = v200;
  sub_100014A7C(v133, v200, &qword_10048F358);
  if (v161(v160, 1, v162) == 1)
  {
    sub_100008758(v159, &qword_10048F358);
    sub_100008758(v206, &qword_10048F358);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v163, v162);
LABEL_49:
    v76 = &qword_100492710;
    v77 = v133;
    goto LABEL_50;
  }
  v165 = v207;
  v166 = v199;
  (*(void (**)(char *, uint64_t, uint64_t))(v207 + 32))(v199, v160, v162);
  v167 = sub_100006924(&qword_100492748, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason, (uint64_t)&protocol conformance descriptor for TVSeason);
  v168 = dispatch thunk of static Equatable.== infix(_:_:)(v163, v166, v162, v167);
  v169 = *(void (**)(char *, uint64_t))(v165 + 8);
  v169(v166, v162);
  sub_100008758(v159, &qword_10048F358);
  sub_100008758(v206, &qword_10048F358);
  v169((char *)v163, v162);
  sub_100008758(v133, &qword_10048F358);
  if ((v168 & 1) == 0)
    return 0;
LABEL_54:
  v170 = v196;
  if (*((unsigned __int8 *)v197 + v196[12]) != *((unsigned __int8 *)v198 + v196[12]))
    return 0;
  v171 = v196[13];
  v172 = *((unsigned __int8 *)v197 + v171);
  v173 = *((unsigned __int8 *)v198 + v171);
  if (v172 == 2)
  {
    if (v173 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v174 = (v172 & 1) == 0;
    if (v173 == 2 || ((v174 ^ v173) & 1) == 0)
      return result;
  }
  v175 = v196[14];
  v176 = *((unsigned __int8 *)v197 + v175);
  v177 = *((unsigned __int8 *)v198 + v175);
  if (v176 == 3)
  {
    if (v177 != 3)
      return 0;
  }
  else
  {
    if (v177 == 3)
      return 0;
    v178 = 0xE900000000000073;
    v179 = 7105633;
    if (v176)
    {
      if (v176 == 1)
        v180 = 0x657469726F766166;
      else
        v180 = 0x64616F6C6E776F64;
      v181 = 0xE900000000000073;
    }
    else
    {
      v181 = 0xE300000000000000;
      v180 = 7105633;
    }
    if (v177)
    {
      if (v177 == 1)
        v179 = 0x657469726F766166;
      else
        v179 = 0x64616F6C6E776F64;
    }
    else
    {
      v178 = 0xE300000000000000;
    }
    if (v180 == v179 && v181 == v178)
    {
      swift_bridgeObjectRelease_n(v181, 2);
      v170 = v196;
    }
    else
    {
      v182 = _stringCompareWithSmolCheck(_:_:expecting:)(v180, v181, v179, v178, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      v170 = v196;
      if ((v182 & 1) == 0)
        return result;
    }
  }
  v183 = v170[15];
  v184 = (_QWORD *)((char *)v197 + v183);
  v185 = *(_QWORD *)((char *)v197 + v183 + 8);
  v186 = (_QWORD *)((char *)v198 + v183);
  v187 = v186[1];
  if (!v185)
  {
    v188 = v198;
    v189 = v197;
    v190 = v196;
    if (!v187)
      goto LABEL_86;
    return 0;
  }
  if (!v187)
    return 0;
  v188 = v198;
  v189 = v197;
  v190 = v196;
  if (*v184 == *v186 && v185 == v187
    || (v191 = _stringCompareWithSmolCheck(_:_:expecting:)(*v184, v185, *v186, v187, 0), result = 0, (v191 & 1) != 0))
  {
LABEL_86:
    if ((sub_1000B28B0(*(_QWORD *)((char *)v189 + v190[16]), *(_QWORD *)((char *)v188 + v190[16])) & 1) != 0)
    {
      v192 = v196[17];
      v193 = *((unsigned __int8 *)v197 + v192);
      v194 = *((unsigned __int8 *)v198 + v192);
      if (v193 == 2)
      {
        if (v194 == 2)
          return 1;
      }
      else
      {
        v195 = (v193 & 1) == 0;
        if (v194 != 2 && ((v195 ^ v194) & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t _s9MusicCore7LibraryO19ContentFilterOptionO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043E910, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t type metadata accessor for Library.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_100492658;
  if (!qword_100492658)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Library.Context);
  return result;
}

uint64_t sub_100129EBC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100005574(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100129F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100129F44()
{
  unint64_t result;

  result = qword_1004925E0;
  if (!qword_1004925E0)
  {
    result = swift_getWitnessTable(&unk_10038CC14, &_s17LibraryContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_1004925E0);
  }
  return result;
}

uint64_t sub_100129F88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Library.Context(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100129FC4()
{
  unint64_t v0;

  v0 = sub_100129F44();
  return EnvironmentValues.subscript.getter(&_s17LibraryContextKeyVN, &_s17LibraryContextKeyVN, v0);
}

unint64_t sub_10012A008()
{
  unint64_t result;

  result = qword_1004925E8;
  if (!qword_1004925E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_1004925E8);
  }
  return result;
}

unint64_t sub_10012A050()
{
  unint64_t result;

  result = qword_1004925F0;
  if (!qword_1004925F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Context.SortOption, &type metadata for Library.Context.SortOption);
    atomic_store(result, (unint64_t *)&qword_1004925F0);
  }
  return result;
}

uint64_t sub_10012A094()
{
  return sub_100006924(&qword_1004925F8, type metadata accessor for Library.Context, (uint64_t)&protocol conformance descriptor for Library.Context);
}

ValueMetadata *type metadata accessor for Library()
{
  return &type metadata for Library;
}

uint64_t storeEnumTagSinglePayload for Library.ContentFilterOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10012A11C + 4 * byte_10038C959[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10012A150 + 4 * byte_10038C954[v4]))();
}

uint64_t sub_10012A150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012A158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10012A160);
  return result;
}

uint64_t sub_10012A16C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10012A174);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10012A178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012A180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.ContentFilterOption()
{
  return &type metadata for Library.ContentFilterOption;
}

_QWORD *initializeBufferWithCopyOfBuffer for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Album(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain(v4);
    if (v13(v10, 1, v11))
    {
      v14 = sub_100005574(&qword_10048D9F8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[6];
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for Artist(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = sub_100005574(&qword_10048F210);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = a3[7];
    v22 = (char *)v7 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for Composer(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_100005574(&qword_100492588);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = a3[8];
    v28 = (char *)v7 + v27;
    v29 = (char *)a2 + v27;
    v30 = type metadata accessor for Genre(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = sub_100005574(&qword_100492590);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = a3[9];
    v34 = (char *)v7 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for Playlist(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = sub_100005574(&qword_100491260);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = a3[10];
    v40 = (char *)v7 + v39;
    v41 = (char *)a2 + v39;
    v42 = type metadata accessor for TVShow(0);
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = sub_100005574(&qword_10048F388);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v45 = a3[11];
    v46 = (char *)v7 + v45;
    v47 = (char *)a2 + v45;
    v48 = type metadata accessor for TVSeason(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = sub_100005574(&qword_10048F358);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v51 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *((_BYTE *)v7 + v51) = *((_BYTE *)a2 + v51);
    v52 = a3[15];
    *((_BYTE *)v7 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    v53 = (_QWORD *)((char *)v7 + v52);
    v54 = (_QWORD *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = a3[17];
    *(_QWORD *)((char *)v7 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
    *((_BYTE *)v7 + v56) = *((_BYTE *)a2 + v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for Library.Context(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  swift_release(*a1);
  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v7 = (char *)a1 + a2[6];
  v8 = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  v10 = (char *)a1 + a2[7];
  v11 = type metadata accessor for Composer(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  v13 = (char *)a1 + a2[8];
  v14 = type metadata accessor for Genre(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v16 = (char *)a1 + a2[9];
  v17 = type metadata accessor for Playlist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  v19 = (char *)a1 + a2[10];
  v20 = type metadata accessor for TVShow(0);
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  v22 = (char *)a1 + a2[11];
  v23 = type metadata accessor for TVSeason(0);
  v24 = *(_QWORD *)(v23 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[15] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[16]));
}

_QWORD *initializeWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain(v6);
  if (v12(v9, 1, v10))
  {
    v13 = sub_100005574(&qword_10048D9F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for Artist(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = sub_100005574(&qword_10048F210);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Composer(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100005574(&qword_100492588);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Genre(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = sub_100005574(&qword_100492590);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Playlist(0);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = sub_100005574(&qword_100491260);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v38 = a3[10];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = type metadata accessor for TVShow(0);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = sub_100005574(&qword_10048F388);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for TVSeason(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = sub_100005574(&qword_10048F358);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  v51 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v52 = (_QWORD *)((char *)a1 + v51);
  v53 = (_QWORD *)((char *)a2 + v51);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Album(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100005574(&qword_10048D9F8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Artist(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = sub_100005574(&qword_10048F210);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_13:
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Composer(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
LABEL_18:
    v34 = sub_100005574(&qword_100492588);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
LABEL_19:
  v35 = a3[8];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = type metadata accessor for Genre(0);
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
LABEL_24:
    v43 = sub_100005574(&qword_100492590);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_25:
  v44 = a3[9];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for Playlist(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
LABEL_30:
    v52 = sub_100005574(&qword_100491260);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
LABEL_31:
  v53 = a3[10];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = type metadata accessor for TVShow(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58(v54, 1, v56);
  v60 = v58(v55, 1, v56);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v56);
LABEL_36:
    v61 = sub_100005574(&qword_10048F388);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v54, v55, v56);
LABEL_37:
  v62 = a3[11];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = type metadata accessor for TVSeason(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_42;
  }
  if (v69)
  {
LABEL_42:
    v70 = sub_100005574(&qword_10048F358);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_43:
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v71 = a3[15];
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

_QWORD *initializeWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Album(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_10048D9F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100005574(&qword_10048F210);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for Composer(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100005574(&qword_100492588);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = type metadata accessor for Genre(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_100005574(&qword_100492590);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Playlist(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = sub_100005574(&qword_100491260);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[10];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = type metadata accessor for TVShow(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = sub_100005574(&qword_10048F388);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[11];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for TVSeason(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_100005574(&qword_10048F358);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  v49 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v49) = *(_OWORD *)((char *)a2 + v49);
  v50 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  return a1;
}

_QWORD *assignWithTake for Library.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Album(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = sub_100005574(&qword_10048D9F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Artist(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
LABEL_12:
    v24 = sub_100005574(&qword_10048F210);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_13:
  v25 = a3[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Composer(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
LABEL_18:
    v33 = sub_100005574(&qword_100492588);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_19:
  v34 = a3[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for Genre(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(v35, 1, v37);
  v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
LABEL_24:
    v42 = sub_100005574(&qword_100492590);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v35, v36, v37);
LABEL_25:
  v43 = a3[9];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for Playlist(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
LABEL_30:
    v51 = sub_100005574(&qword_100491260);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v44, v45, v46);
LABEL_31:
  v52 = a3[10];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = type metadata accessor for TVShow(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
LABEL_36:
    v60 = sub_100005574(&qword_10048F388);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
LABEL_37:
  v61 = a3[11];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = type metadata accessor for TVSeason(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v62, v63, v64);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_42;
  }
  if (v68)
  {
LABEL_42:
    v69 = sub_100005574(&qword_10048F358);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_43:
  v70 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  *((_BYTE *)a1 + v70) = *((_BYTE *)a2 + v70);
  v71 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  v75 = *v73;
  v74 = v73[1];
  *v72 = v75;
  v72[1] = v74;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012BD00);
}

uint64_t sub_10012BD00(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10048D9F8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10048F210);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_100005574(&qword_100492588);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          v14 = sub_100005574(&qword_100492590);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[8];
          }
          else
          {
            v15 = sub_100005574(&qword_100491260);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
            {
              v10 = v15;
              v11 = a3[9];
            }
            else
            {
              v16 = sub_100005574(&qword_10048F388);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
              {
                v10 = v16;
                v11 = a3[10];
              }
              else
              {
                v10 = sub_100005574(&qword_10048F358);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a3[11];
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012BE7C);
}

char *sub_10012BE7C(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10048D9F8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10048F210);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_100005574(&qword_100492588);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v14 = sub_100005574(&qword_100492590);
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[8];
          }
          else
          {
            v15 = sub_100005574(&qword_100491260);
            v9 = *(_QWORD *)(v15 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v15;
              v11 = a4[9];
            }
            else
            {
              v16 = sub_100005574(&qword_10048F388);
              v9 = *(_QWORD *)(v16 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                v10 = v16;
                v11 = a4[10];
              }
              else
              {
                v10 = sub_100005574(&qword_10048F358);
                v9 = *(_QWORD *)(v10 - 8);
                v11 = a4[11];
              }
            }
          }
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_10012BFE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[14];

  v16[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100084498(319, &qword_100492668, (uint64_t (*)(uint64_t))&type metadata accessor for Album);
  if (v3 <= 0x3F)
  {
    v16[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100084498(319, &qword_100492670, (uint64_t (*)(uint64_t))&type metadata accessor for Artist);
    if (v5 <= 0x3F)
    {
      v16[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100084498(319, &qword_100492678, (uint64_t (*)(uint64_t))&type metadata accessor for Composer);
      if (v7 <= 0x3F)
      {
        v16[3] = *(_QWORD *)(v6 - 8) + 64;
        sub_100084498(319, &qword_100492680, (uint64_t (*)(uint64_t))&type metadata accessor for Genre);
        if (v9 <= 0x3F)
        {
          v16[4] = *(_QWORD *)(v8 - 8) + 64;
          sub_100084498(319, &qword_100492688, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist);
          if (v11 <= 0x3F)
          {
            v16[5] = *(_QWORD *)(v10 - 8) + 64;
            sub_100084498(319, &qword_100492690, (uint64_t (*)(uint64_t))&type metadata accessor for TVShow);
            if (v13 <= 0x3F)
            {
              v16[6] = *(_QWORD *)(v12 - 8) + 64;
              sub_100084498(319, (unint64_t *)&unk_100492698, (uint64_t (*)(uint64_t))&type metadata accessor for TVSeason);
              if (v15 <= 0x3F)
              {
                v16[7] = *(_QWORD *)(v14 - 8) + 64;
                v16[8] = &unk_10038CB90;
                v16[9] = &unk_10038CBA8;
                v16[10] = &unk_10038CBC0;
                v16[11] = &unk_10038CBD8;
                v16[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
                v16[13] = &unk_10038CBA8;
                swift_initStructMetadata(a1, 256, 14, v16, a1 + 16);
              }
            }
          }
        }
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for Library.Context.SortOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10012C1FC + 4 * byte_10038C963[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10012C230 + 4 * byte_10038C95E[v4]))();
}

uint64_t sub_10012C230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012C238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10012C240);
  return result;
}

uint64_t sub_10012C24C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10012C254);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10012C258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012C260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Context.SortOption()
{
  return &type metadata for Library.Context.SortOption;
}

uint64_t sub_10012C27C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100005600(&qword_1004926F8);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_10012C2DC();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_10012C2DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100492700;
  if (!qword_100492700)
  {
    v1 = sub_100005600(&qword_1004926F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100492700);
  }
  return result;
}

ValueMetadata *_s17LibraryContextKeyVMa()
{
  return &_s17LibraryContextKeyVN;
}

unint64_t sub_10012C338()
{
  unint64_t result;

  result = qword_100492708;
  if (!qword_100492708)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.ContentFilterOption, &type metadata for Library.ContentFilterOption);
    atomic_store(result, (unint64_t *)&qword_100492708);
  }
  return result;
}

uint64_t sub_10012C380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  Swift::String v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (char *)_swiftEmptyArrayStorage;
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v13 = *v12;
    v14 = (void *)v12[1];
    swift_bridgeObjectRetain();
    v15._countAndFlagsBits = v13;
    v15._object = v14;
    v16 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v15);
    result = swift_bridgeObjectRelease();
    if (v16 <= 0xC)
    {
      result = swift_isUniquelyReferenced_nonNull_native(v9);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_10003E894(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v9 = (char *)result;
      }
      v20 = v9;
      v21 = *((_QWORD *)v9 + 2);
      v22 = (uint64_t)v20;
      v23 = *((_QWORD *)v20 + 3);
      if (v21 >= v23 >> 1)
      {
        result = (uint64_t)sub_10003E894((char *)(v23 > 1), v21 + 1, 1, (char *)v22);
        v22 = result;
      }
      *(_QWORD *)(v22 + 16) = v21 + 1;
      v24 = v22 + v21;
      v9 = (char *)v22;
      *(_BYTE *)(v24 + 32) = v16;
      if (v5)
        goto LABEL_4;
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v6)
      goto LABEL_29;
    v18 = *(_QWORD *)(v2 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v6)
        goto LABEL_29;
      v18 = *(_QWORD *)(v2 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v6)
          goto LABEL_29;
        v18 = *(_QWORD *)(v2 + 8 * v8);
        if (!v18)
        {
          v8 = v17 + 3;
          if (v17 + 3 >= v6)
            goto LABEL_29;
          v18 = *(_QWORD *)(v2 + 8 * v8);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 >= v6)
  {
LABEL_29:
    swift_release(a1);
    return (uint64_t)v9;
  }
  v18 = *(_QWORD *)(v2 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v18 = *(_QWORD *)(v2 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_10012C598(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  char v17;

  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v17 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v12);
    sub_100131524((uint64_t)&v17, a2);
    if (v2)
      goto LABEL_24;
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v10);
  if (v14)
  {
LABEL_17:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_5;
  }
  v15 = v10 + 1;
  if (v10 + 1 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 2;
  if (v10 + 2 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
    goto LABEL_16;
  v15 = v10 + 3;
  if (v10 + 3 >= v9)
    goto LABEL_24;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_16:
    v10 = v15;
    goto LABEL_17;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v9)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v16);
  v10 += 4;
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_24;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v14)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

Swift::Int sub_10012C708(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    Hasher.init(_seed:)(v21);
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == (_DWORD)v16)
      goto LABEL_7;
  }
}

uint64_t sub_10012C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v15;
  _QWORD v16[10];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v15 = (unint64_t)(v3 + 63) >> 6;
    if (v5)
    {
      v6 = __clz(__rbit64(v5));
      goto LABEL_21;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_20;
      v8 = 2;
      if ((unint64_t)(v3 + 63) >> 6 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_20;
      v8 = 3;
      if ((unint64_t)(v3 + 63) >> 6 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
      {
LABEL_20:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_21:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v16);
        v11 = Library.Menu.Identifier.rawValue.getter(v10);
        String.hash(into:)(v16, v11, v12);
        swift_bridgeObjectRelease();
        v13 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 4;
      if (v15 > 4)
      {
        v7 = *(_QWORD *)(a1 + 88);
        if (v7)
        {
          v8 = 4;
          goto LABEL_20;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x10012CD90);
          }
          if (v8 >= v15)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_20;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_10012CDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  _QWORD v17[9];

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v3 = *(_QWORD *)(a1 + 56);
    v4 = 1 << *(_BYTE *)(a1 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v16 = (unint64_t)(v4 + 63) >> 6;
    if ((v5 & v3) != 0)
    {
      v6 = __clz(__rbit64(v5 & v3));
      goto LABEL_23;
    }
    if ((unint64_t)(v4 + 63) >> 6 > 1)
    {
      v7 = *(_QWORD *)(a1 + 64);
      v8 = 1;
      if (v7)
        goto LABEL_22;
      v8 = 2;
      if (v16 <= 2)
        return 1;
      v7 = *(_QWORD *)(a1 + 72);
      if (v7)
        goto LABEL_22;
      v8 = 3;
      if (v16 <= 3)
        return 1;
      v7 = *(_QWORD *)(a1 + 80);
      if (v7)
        goto LABEL_22;
      v8 = 4;
      if (v16 <= 4)
        return 1;
      v7 = *(_QWORD *)(a1 + 88);
      if (v7)
      {
LABEL_22:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_23:
        v10 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
        Hasher.init(_seed:)(v17);
        v11 = ApplicationCapabilities.Service.rawValue.getter(v10);
        v13 = v12;
        String.hash(into:)(v17, v11, v12);
        swift_bridgeObjectRelease(v13);
        v14 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v9 = 5;
      if (v16 > 5)
      {
        v7 = *(_QWORD *)(a1 + 96);
        if (v7)
        {
          v8 = 5;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            JUMPOUT(0x10012D31CLL);
          }
          if (v8 >= v16)
            break;
          v7 = *(_QWORD *)(a1 + 56 + 8 * v8);
          ++v9;
          if (v7)
            goto LABEL_22;
        }
      }
    }
  }
  return 1;
}

uint64_t Library.Menu.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL Library.Menu.selectionState(for:)(unsigned __int8 a1)
{
  uint64_t v1;

  return (sub_1000C704C(a1, *(_QWORD *)(v1 + 40)) & 1) == 0;
}

uint64_t Library.Menu.setSelectionState(_:for:)(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unsigned __int8 v4;

  v2 = a1 & 1;
  if ((a1 & 1) != 0)
    sub_1000EF16C(a2);
  else
    sub_100133060(&v4, a2);
  return v2;
}

char *Library.Menu.move(_:to:)(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  char *result;
  int64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  __n128 v24;
  unint64_t v25;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_1000F2594(a1, v6);
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v17 = v3[2];
    v18 = v3[3];
    v10 = v3[4];
    v19 = v3[5];
    v20 = sub_1001392E8();
    swift_allocError(&_s4MenuV9MoveErrorVN, v20, 0, 0);
    *(_QWORD *)v21 = v17;
LABEL_14:
    *(_QWORD *)(v21 + 8) = v18;
    *(_QWORD *)(v21 + 16) = v10;
    *(_QWORD *)(v21 + 24) = v19;
    *(_BYTE *)(v21 + 32) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (char *)swift_willThrow(v24);
  }
  v10 = v3[4];
  swift_bridgeObjectRetain();
  v25 = sub_1000F2594(a1, v10);
  v12 = v11;
  result = (char *)swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v22 = v3[2];
    v18 = v3[3];
LABEL_13:
    v19 = v3[5];
    v23 = sub_1001392E8();
    swift_allocError(&_s4MenuV9MoveErrorVN, v23, 0, 0);
    *(_QWORD *)v21 = v22;
    goto LABEL_14;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(v6 + 16) <= a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  a1 = *(unsigned __int8 *)(v6 + a2 + 32);
  swift_bridgeObjectRetain();
  v14 = sub_1000F2594(a1, v10);
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v22 = v3[2];
    v18 = v3[3];
    LOBYTE(a1) = a1 | 0x80;
    goto LABEL_13;
  }
  result = sub_1000FAC4C(v7);
  if (*(_QWORD *)(*v3 + 16) < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_10003FF5C((char *)a2, a2, (char)result);
  result = sub_1000FAC4C(v25);
  if (*(_QWORD *)(v3[4] + 16) >= v14)
  {
    if ((v14 & 0x8000000000000000) == 0)
      return sub_10003FF5C((char *)v14, v14, (char)result);
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

Swift::Void __swiftcall Library.Menu.persist()()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = (void *)v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSUserDefaults.libraryMenuRevision.setter(v1, v2, v3, v4);
}

uint64_t NSUserDefaults.libraryMenuRevision.setter(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;

  v8 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = JSONEncoder.init()();
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v10 = sub_10013932C();
  v11 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v17, &type metadata for Library.Menu.Revision, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(v9);
  v20 = &type metadata for Data;
  v17 = v11;
  v18 = v13;
  v16[0] = 0x4D7972617262694CLL;
  v16[1] = 0xEB00000000756E65;
  sub_1000516F8(v11, v13);
  v14 = sub_10000D478();
  NSUserDefaults.subscript.setter((uint64_t)&v17, (uint64_t)v16, (uint64_t)&type metadata for String, v14);
  return sub_1000067E8(v11, v13);
}

char *Library.Menu.Request.label.unsafeMutableAddressor()
{
  return static Library.Menu.Request.label;
}

uint64_t static Library.Menu.Request.label.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(static Library.Menu.Request.label, v2, 0, 0);
  v0 = *(_QWORD *)static Library.Menu.Request.label;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static Library.Menu.Request.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(static Library.Menu.Request.label, v6, 1, 0);
  v4 = *(_QWORD *)&static Library.Menu.Request.label[8];
  *(_QWORD *)static Library.Menu.Request.label = a1;
  *(_QWORD *)&static Library.Menu.Request.label[8] = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*static Library.Menu.Request.label.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static Library.Menu.Request.label, a1, 33, 0);
  return j__swift_endAccess;
}

id Library.Menu.Request.init()@<X0>(uint64_t a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = &_swiftEmptySetSingleton;
    *(_WORD *)(a1 + 40) = 257;
    *(_BYTE *)(a1 + 42) = 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id static Library.Menu.Request.with(_:)@<X0>(uint64_t (*a1)(id *)@<X0>, uint64_t a2@<X8>)
{
  id result;
  char v5;
  void *v6;
  char v7;
  char v8;
  char v9;
  __int128 v10;
  id v11;
  char v12;
  __int128 v13;
  void *v14;
  __int16 v15;
  char v16;

  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    v11 = result;
    v12 = 0;
    v13 = 0uLL;
    v14 = &_swiftEmptySetSingleton;
    v15 = 257;
    v16 = 1;
    result = (id)a1(&v11);
    v5 = v12;
    v6 = v14;
    v7 = v15;
    v8 = HIBYTE(v15);
    v9 = v16;
    v10 = v13;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 32) = v6;
    *(_BYTE *)(a2 + 40) = v7;
    *(_BYTE *)(a2 + 41) = v8;
    *(_BYTE *)(a2 + 42) = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Library.Menu.Request.MediaLibrarySource.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_10013A360(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_10012DB74(uint64_t a1, uint64_t a2)
{
  return sub_10013A360(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void *Library.Menu.Request.librarySource.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  sub_10013A438(*(void **)v0, *(_BYTE *)(v0 + 8));
  return v1;
}

void Library.Menu.Request.librarySource.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_10013A444(*(void **)v2, *(_BYTE *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
}

uint64_t Library.Menu.Request.filteringOptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t Library.Menu.Request.excludedIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t Library.Menu.Request.filtersToAvailableContentGroups.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Library.Menu.Request.filtersToAvailableContentGroups.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t Library.Menu.Request.filtersToSelectedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 41) = result;
  return result;
}

CFRange (__swiftcall *Library.Menu.Request.filtersToSelectedIdentifiers.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t Library.Menu.Request.sortedByUserOrderedIdentifiers.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 42) = result;
  return result;
}

CFRange (__swiftcall *Library.Menu.Request.sortedByUserOrderedIdentifiers.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double Library.Menu.Request.perform(_:_:)@<D0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  void **v3;
  void **v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  char v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  double result;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  _QWORD *v59;
  _QWORD aBlock[5];
  uint64_t v61;

  v4 = v3;
  v51 = a1;
  v52 = a2;
  v6 = type metadata accessor for DispatchQoS.QoSClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v3;
  LOBYTE(v12) = *((_BYTE *)v4 + 8);
  v57 = v6;
  v58 = a3;
  v55 = v9;
  v56 = v7;
  v53 = v11;
  v54 = v13;
  if ((v12 & 1) != 0)
  {
    v15 = swift_retain(v14);
    v16 = (id)MusicLibrary.mediaLibrary.getter(v15);
    sub_10013A444(v14, 1);
  }
  else
  {
    v16 = v14;
  }
  v17 = v4[2];
  v18 = swift_allocObject(&unk_10044C560, 17, 7);
  v20 = v4[3];
  v19 = v4[4];
  *(_BYTE *)(v18 + 16) = v20 != 0;
  v21 = *((_BYTE *)v4 + 40);
  v22 = *((_BYTE *)v4 + 41);
  v23 = (void *)objc_opt_self(NSUserDefaults);
  v50 = v20;
  swift_bridgeObjectRetain();
  v24 = objc_msgSend(v23, "standardUserDefaults");
  v25 = (_QWORD *)swift_allocObject(&unk_10044C588, 48, 7);
  v26 = NSUserDefaults.libraryMenuRevision.getter();
  v25[2] = v26;
  v25[3] = v28;
  v25[4] = v27;
  v25[5] = v29;
  if ((*((_BYTE *)v4 + 42) & 1) != 0)
    v30 = v27;
  else
    v30 = v26;
  swift_bridgeObjectRetain();
  v31 = swift_allocObject(&unk_10044C5B0, 104, 7);
  *(_QWORD *)(v31 + 16) = v25;
  *(_QWORD *)(v31 + 24) = v24;
  *(_QWORD *)(v31 + 32) = v20;
  *(_QWORD *)(v31 + 40) = v30;
  *(_QWORD *)(v31 + 48) = v16;
  *(_QWORD *)(v31 + 56) = v17;
  *(_QWORD *)(v31 + 64) = v19;
  *(_BYTE *)(v31 + 72) = v22;
  *(_BYTE *)(v31 + 73) = v21;
  v32 = v51;
  v33 = v52;
  *(_QWORD *)(v31 + 80) = v18;
  *(_QWORD *)(v31 + 88) = v32;
  *(_QWORD *)(v31 + 96) = v33;
  aBlock[4] = sub_10013A4F8;
  v61 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BED80;
  aBlock[3] = &unk_10044C5C8;
  v34 = _Block_copy(aBlock);
  v59 = _swiftEmptyArrayStorage;
  v35 = sub_100006924((unint64_t *)&qword_1004921B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v51 = v50;
  swift_retain(v25);
  v36 = v24;
  v37 = v16;
  swift_retain(v18);
  swift_retain(v33);
  v38 = sub_100005574(&qword_100490838);
  v39 = sub_10002FFB8((unint64_t *)&qword_1004921C0, &qword_100490838, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v38, v39, v53, v35);
  v41 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = DispatchWorkItem.init(flags:block:)(v40, v34);
  swift_release(v61);
  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v44 = v55;
  v43 = v56;
  v45 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, enum case for DispatchQoS.QoSClass.userInteractive(_:), v57);
  v46 = (void *)static OS_dispatch_queue.global(qos:)(v44);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  OS_dispatch_queue.async(execute:)(v42);

  v47 = v58;
  v58[3] = v41;
  v47[4] = (uint64_t)&protocol witness table for DispatchWorkItem;

  *v47 = v42;
  swift_release(v18);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t NSUserDefaults.libraryMenuRevision.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;

  sub_100131DE8();
  v15 = 0x4D7972617262694CLL;
  v16 = 0xEB00000000756E65;
  v0 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)&v15, (uint64_t)&type metadata for String, v0, &v17);
  if (v18)
  {
    if ((swift_dynamicCast(&v15, &v17, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v2 = v15;
      v3 = v16;
      v4 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
      v5 = JSONDecoder.init()();
      v6 = sub_10013A558();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Library.Menu.Revision, v2, v3, &type metadata for Library.Menu.Revision, v6);
      sub_1000067E8(v2, v3);
      swift_release(v5);
      return v17;
    }
  }
  else
  {
    sub_100098B58((uint64_t)&v17);
  }
  if (qword_10048C810 != -1)
    swift_once(&qword_10048C810, sub_1001323E0);
  v7 = type metadata accessor for Logger(0, v1);
  v8 = sub_1000086B4(v7, (uint64_t)static Logger.libraryMenu);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "No edits found — Returning stock menu revision", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  if (qword_10048C808 != -1)
    swift_once(&qword_10048C808, sub_100131DB8);
  v12 = qword_100492790;
  v13 = *(_QWORD *)algn_100492798;
  swift_bridgeObjectRetain_n(qword_100492790, 2);
  swift_bridgeObjectRetain_n(v13, 2);
  return v12;
}

void sub_10012E44C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  id v40;
  _BYTE v44[24];
  uint64_t v45;

  v8 = (uint64_t)(a1 + 2);
  if (qword_10048C808 != -1)
    goto LABEL_69;
  while (1)
  {
    v10 = qword_100492790;
    v9 = *(_QWORD *)algn_100492798;
    swift_beginAccess(v8, &v45, 33, 0);
    v11 = a1[3];
    if ((sub_1000B28CC(a1[2], v10) & 1) != 0 && (sub_10012C8E8(v11, v9) & 1) != 0)
    {
      swift_endAccess(&v45);
    }
    else
    {
      sub_100130548(v10, v9);
      swift_endAccess(&v45);
      swift_beginAccess(v8, v44, 0, 0);
      v12 = a1[2];
      v13 = a1[3];
      v8 = a1[4];
      v14 = (void *)a1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSUserDefaults.libraryMenuRevision.setter(v12, v13, v8, v14);
    }
    if (a3)
      break;
    v27 = *(_QWORD *)(a4 + 16);
    if (!v27)
    {
      v29 = 0;
      goto LABEL_65;
    }
    v28 = 0;
    v29 = 0;
    v30 = v27 - 1;
    while (2)
    {
      switch(*(_BYTE *)(a4 + 32 + v28))
      {
        case 0:
          v29 |= 0x41uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 1:
          v29 |= 0xC0uLL;
          goto LABEL_13;
        case 2:
          v29 |= 2uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 3:
          v29 |= 1uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 4:
          v29 |= 0x80uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 5:
          v29 |= 0x400uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 6:
          v29 |= 0x20uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 7:
          v29 |= 0x10uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 8:
          v29 |= 4uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 9:
          v29 |= 8uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        case 0xA:
          v29 |= 0x300uLL;
          if (v30 == v28)
            goto LABEL_65;
          goto LABEL_14;
        default:
LABEL_13:
          if (v30 == v28)
            goto LABEL_65;
LABEL_14:
          if (!__OFADD__(++v28, 1))
            continue;
          __break(1u);
          break;
      }
      break;
    }
LABEL_69:
    swift_once(&qword_10048C808, sub_100131DB8);
  }
  v15 = (void *)objc_opt_self(NSBundle);
  v16 = a3;
  v17 = objc_msgSend(v15, "mainBundle");
  v18 = NSBundle.exportedTypeDeclarations.getter();

  if (v18)
  {
    v19 = objc_msgSend(v16, "typeIdentifiers");
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String);

    v21 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRelease();
    if (v21)
    {
      v22 = objc_msgSend(v16, "typeIdentifiers");
      v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for String);

      swift_bridgeObjectRetain();
      v24 = sub_1000EB8D0(v23, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v18, 2);
      sub_1000EB46C((uint64_t)v24);
      v26 = v25;
      swift_bridgeObjectRelease();
LABEL_39:
      v40 = v16;
      v31 = *((_QWORD *)v26 + 2);
      v29 = 0;
      if (!v31)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        if (objc_msgSend(v40, "selectionMode") == (id)2)
        {

        }
        else
        {
          v36 = objc_msgSend(v40, "selectionMode");

          if (v36 != (id)3)
            goto LABEL_65;
        }
        v29 &= 0xFFFFFFFFFFFFFC5FLL;
LABEL_65:
        objc_msgSend(a5, "filterAvailableContentGroups:withOptions:", v29, a6);
        if (qword_10048C658 != -1)
          swift_once(&qword_10048C658, sub_1000B3BEC);
        v37 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_10038D1C8);
        v39 = swift_getKeyPath(&unk_10038D1F0);
        static Published.subscript.getter(&v45, v37, KeyPath, v39);
        swift_release(KeyPath);
        swift_release(v39);
        __asm { BR              X10 }
      }
      v32 = v26 + 40;
      while (1)
      {
        v33 = *(v32 - 1);
        v34 = *v32;
        if (v33 == 0xD000000000000014 && v34 == 0x80000001003B1930
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014, 0x80000001003B1930, *(v32 - 1), *v32, 0) & 1) != 0)
        {
          v35 = 1247;
        }
        else if (v33 == 0xD00000000000001BLL && v34 == 0x80000001003B1910
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x80000001003B1910, v33, v34, 0) & 1) != 0)
        {
          v35 = 32;
        }
        else if (v33 == 0xD00000000000001ALL && v34 == 0x80000001003B28F0
               || (_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001ALL, 0x80000001003B28F0, v33, v34, 0) & 1) != 0)
        {
          v35 = 256;
        }
        else
        {
          if ((v33 != 0xD000000000000015 || v34 != 0x80000001003B2910)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000015, 0x80000001003B2910, v33, v34, 0) & 1) == 0)
          {
            goto LABEL_46;
          }
          v35 = 512;
        }
        v29 |= v35;
LABEL_46:
        v32 += 2;
        if (!--v31)
          goto LABEL_60;
      }
    }
    swift_bridgeObjectRelease();
    if (objc_msgSend(v16, "mediaTypes"))
    {
      v26 = sub_1000E630C((__int16)objc_msgSend(v16, "mediaTypes"));
      goto LABEL_39;
    }
  }
  v26 = (char *)_swiftEmptyArrayStorage;
  goto LABEL_39;
}

uint64_t Logger.libraryMenu.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C810 != -1)
    swift_once(&qword_10048C810, sub_1001323E0);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.libraryMenu);
}

uint64_t Library.Menu.Identifier.contentGroups.getter(unsigned __int8 a1)
{
  if (a1 > 0xAu)
    return 0;
  else
    return qword_10038D430[(char)a1];
}

double sub_10012F2B0@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  double result;

  v6 = swift_allocObject(&unk_10044CB78, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain(a2);
  Library.Menu.Request.perform(_:_:)(sub_10013D5E0, v6, a3);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10012F320(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 11) = *(__int128 *)((char *)a1 + 27);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 11) = *(__int128 *)((char *)a2 + 27);
  return _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t Library.Menu.Identifier.symbolName(for:)(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10012F3A8 + 4 * byte_10038CC50[a2]))(0x732E657261757173, 0xEC0000006B636174);
}

uint64_t sub_10012F3A8()
{
  return 0x6B636F6C63;
}

uint64_t sub_10012F3BC@<X0>(char a1@<W8>)
{
  if (a1 == 2)
    return 0x6F6E2E636973756DLL;
  else
    return 0x672E657261757173;
}

uint64_t sub_10012F410()
{
  return 0x696D2E636973756DLL;
}

uint64_t sub_10012F42C()
{
  return 0x6F6E2E636973756DLL;
}

uint64_t sub_10012F474()
{
  return 0x73726174697567;
}

unint64_t sub_10012F48C()
{
  return 0xD00000000000001ALL;
}

void sub_10012F4A4()
{
  JUMPOUT(0x10012F4B8);
}

uint64_t sub_10012F4C4()
{
  return 30324;
}

unint64_t sub_10012F4D0()
{
  return 0xD000000000000011;
}

unint64_t sub_10012F4EC()
{
  unint64_t v0;

  v0 = sub_10008928C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v0) & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000016;
}

void Library.Menu.Identifier.name(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = type metadata accessor for Locale(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __asm { BR              X10 }
}

uint64_t sub_10012F62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (v5 != 2 && (v5 & 1) != 0)
  {
    v7 = 0x80000001003B28D0;
    v6 = 0xD000000000000013;
  }
  else
  {
    v6 = 0x796C746E65636552;
    v7 = 0xEE00646564644120;
  }
  String.LocalizationValue.init(stringLiteral:)(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v8 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v9 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v8, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v9;
}

uint64_t Library.Menu.Identifier.description.getter(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v1 = Library.Menu.Identifier.rawValue.getter(a1);
  v7[2] = v1;
  v7[3] = v2;
  v7[0] = 46;
  v7[1] = 0xE100000000000000;
  v3 = sub_10000D478();
  v4 = StringProtocol.components<A>(separatedBy:)(v7, &type metadata for String, &type metadata for String, v3, v3);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v1 = *(_QWORD *)(v4 + 16 * v5 + 16);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Library.Menu.Identifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10012F9A4 + 4 * byte_10038CC6A[a1]))(0xD000000000000029, 0x80000001003ABF60);
}

uint64_t sub_10012F9A4()
{
  uint64_t v0;

  return v0 + 4;
}

_UNKNOWN **static Library.Menu.Identifier.allCases.getter()
{
  return &off_10043E978;
}

uint64_t sub_10012FA84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = Library.Menu.Identifier.rawValue.getter(*a1);
  v5 = v4;
  v6 = Library.Menu.Identifier.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_10012FB0C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = Library.Menu.Identifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10012FB6C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = Library.Menu.Identifier.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10012FBAC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = Library.Menu.Identifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10012FC08@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10012FC34@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = Library.Menu.Identifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10012FC5C(_QWORD *a1@<X8>)
{
  *a1 = &off_10043E978;
}

uint64_t sub_10012FC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10013D578();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10012FCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10013D578();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10012FD14()
{
  unsigned __int8 *v0;

  return Library.Menu.Identifier.description.getter(*v0);
}

char *Library.Menu.Revision.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  char *result;
  uint64_t v3;

  result = sub_10013BB60(a1);
  if (v1)
    return (char *)v3;
  return result;
}

uint64_t Library.Menu.Revision.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;

  v24 = a3;
  v25 = a5;
  v9 = sub_100005574(&qword_1004927B8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v13 = a1[4];
  sub_10000ABC8(a1, v14);
  v15 = sub_10013C084();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v15, v14, v13);
  v26[0] = a4;
  v27 = 1;
  v16 = sub_100005574(&qword_1004927C8);
  v17 = sub_10008FE98(&qword_1004927D0, &qword_1004927C8, (void (*)(void))sub_10013C0C8, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v16, v17);
  if (!v5)
  {
    v18 = a2;
    v19 = v24;
    v26[0] = v25;
    v27 = 0;
    v20 = sub_100005574(&qword_1004927E0);
    v21 = sub_10008FE98(&qword_1004927E8, &qword_1004927E0, (void (*)(void))sub_10013C0C8, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, v20, v21);
    v26[0] = v18;
    v26[1] = v19;
    v27 = 2;
    v22 = sub_10013C10C();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v26, &v27, v9, &_s4MenuV8RevisionV7VersionVN, v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10012FF2C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v7 = sub_100005574(&qword_100492860);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  sub_10000ABC8(a1, v11);
  v13 = sub_10013D1D4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v13, v11, v12);
  v21 = a2;
  v20 = 0;
  v14 = sub_100005574(&qword_1004927C8);
  v15 = sub_10008FE98(&qword_1004927D0, &qword_1004927C8, (void (*)(void))sub_10013C0C8, (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v14, v15);
  if (!v3)
  {
    v21 = a3;
    v20 = 1;
    v16 = sub_100005574(&qword_1004927E0);
    v17 = sub_10008FE98(&qword_1004927E8, &qword_1004927E0, (void (*)(void))sub_10013C0C8, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v7, v16, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001300CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100027A40(*a1, *a2);
}

Swift::Int sub_1001300D8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100130170(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (*v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001301E4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE300000000000000;
  v3 = 7105633;
  if (v1 != 1)
  {
    v3 = 0x6E6F6973726576;
    v2 = 0xE700000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x64657463656C6573;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100130278@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10013D18C(*a1);
  *a2 = result;
  return result;
}

void sub_1001302A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE300000000000000;
  v5 = 7105633;
  if (v2 != 1)
  {
    v5 = 0x6E6F6973726576;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x64657463656C6573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1001302FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7105633;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 0x64657463656C6573;
}

unint64_t sub_100130350@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10013D18C(a1);
  *a2 = result;
  return result;
}

void sub_100130374(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100130380(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10013C084();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001303A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10013C084();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001303D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x64657463656C6573;
  else
    return 0x696669746E656469;
}

uint64_t sub_100130414@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10013D218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100130438(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10013D1D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100130460(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10013D1D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100130488@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_10013D320(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1001304B0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_10012FF2C(a1, *v1, v1[1]);
}

uint64_t sub_1001304C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1000B28CC(*a1, *a2) & 1) != 0)
    return sub_10012C8E8(v2, v3);
  else
    return 0;
}

uint64_t MPCPlaybackEngine.Configuration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MPCPlaybackEngine.Configuration.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t Library.Menu.Revision.selected.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_100130548(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  __n128 v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v3 = v2;
  v5 = (_QWORD *)*v2;
  v6 = v2[1];
  v7 = qword_10048C810;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once(&qword_10048C810, sub_1001323E0);
  v9 = type metadata accessor for Logger(0, v8);
  v58 = sub_1000086B4(v9, (uint64_t)static Logger.libraryMenu);
  v10 = Logger.logObject.getter(v58);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "╭ ⏩ Begin Migration", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  v57 = v2;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v63 = v17;
    *(_DWORD *)v16 = 136315138;
    v61 = v5;
    v62 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = (char *)String.init<A>(describing:)(&v61, &_s4MenuV8RevisionV7VersionVN);
    *(_QWORD *)(v16 + 4) = sub_100019400(v18, v19, &v63);
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "╞< %s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v20 = v16;
    v3 = v2;
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease_n(v5, 2);
  }
  swift_bridgeObjectRetain_n(a1, 2);
  v21 = swift_bridgeObjectRetain_n(a2, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v63 = v25;
    *(_DWORD *)v24 = 136315138;
    v61 = (_QWORD *)a1;
    v62 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = (char *)String.init<A>(describing:)(&v61, &_s4MenuV8RevisionV7VersionVN);
    *(_QWORD *)(v24 + 4) = sub_100019400(v26, v27, &v63);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "╞> %s", (uint8_t *)v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a1, 2);
  }
  v28 = v3[2];
  v29 = swift_bridgeObjectRetain();
  v30 = sub_1000F00DC(v29);
  swift_bridgeObjectRelease();
  v31 = swift_bridgeObjectRetain();
  v32 = sub_1000F00DC(v31);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v32 + 16) <= *(_QWORD *)(v30 + 16) >> 3)
  {
    v61 = (_QWORD *)v30;
    swift_bridgeObjectRetain();
    sub_100139370(v32);
    v33 = v61;
  }
  else
  {
    swift_bridgeObjectRetain();
    v33 = sub_1001394D0(v32, v30);
  }
  if (*(_QWORD *)(v30 + 16) <= *(_QWORD *)(v32 + 16) >> 3)
  {
    v61 = (_QWORD *)v32;
    sub_100139370(v30);
    v34 = v61;
  }
  else
  {
    v34 = sub_1001394D0(v30, v32);
  }
  v63 = v28;
  v35 = *(_QWORD *)(v28 + 16);
  v36 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v35 != v36)
  {
    v37 = *(_QWORD *)(v28 + 16);
    if (v37)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v37; ++i)
      {
        v39 = *(_BYTE *)(v28 + i + 32);
        LOBYTE(v61) = v39;
        sub_100130F70((unsigned __int8 *)&v61, &v63);
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_10012C598((uint64_t)v33, &v63);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10013B148((uint64_t)v34, a1, &v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(&v63, &v61, 0, 0);
  v41 = v63;
  if (v40 == *(_QWORD *)(v63 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v57[2] = v41;
    v42 = v57[3];
    if (v33[2] <= *(_QWORD *)(v42 + 16) >> 3)
    {
      v60 = (void *)v57[3];
      swift_bridgeObjectRetain();
      sub_100139370((uint64_t)v33);
      swift_bridgeObjectRelease();
      v43 = v60;
    }
    else
    {
      swift_bridgeObjectRetain();
      v43 = sub_1001394D0((uint64_t)v33, v42);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v54 = a2;
    v55 = sub_10013B460((uint64_t)v34, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = sub_100131C18(v55, (uint64_t)v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57[3] = v56;
    v51 = v57;
    v52 = a1;
    v53 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = a2;
    v45 = *v57;
    v46 = v57[1];
    v47 = v57[3];
    v48 = sub_10013D7C4();
    swift_allocError(&_s4MenuV8RevisionV16MigrationFailureON, v48, 0, 0);
    *v49 = v45;
    v49[1] = v46;
    v49[2] = v28;
    v49[3] = v47;
    v49[4] = a1;
    v49[5] = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow(v50);
    swift_bridgeObjectRelease();
    v51 = v57;
    v52 = a1;
    v53 = v44;
  }
  sub_100130C0C(v51, v52, v53);
}

void sub_100130C0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *a1 = a2;
  a1[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v4 = a1[3];
  v6 = qword_10048C810;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once(&qword_10048C810, sub_1001323E0);
  v8 = type metadata accessor for Logger(0, v7);
  v9 = sub_1000086B4(v8, (uint64_t)static Logger.libraryMenu);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "╞ ✅ Migration ended with", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v32 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = swift_bridgeObjectRetain();
    v19 = (char *)Array.description.getter(v18, &type metadata for Library.Menu.Identifier);
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 4) = sub_100019400(v19, v21, &v32);
    swift_bridgeObjectRelease_n(v5, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "╞  - Ordered: %{public}s)", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v5, 2);
  }
  v22 = swift_bridgeObjectRetain();
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v32 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = sub_1000F014C();
    v28 = swift_bridgeObjectRetain();
    v29 = (char *)Set.description.getter(v28, &type metadata for Library.Menu.Identifier, v27);
    v31 = v30;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 4) = sub_100019400(v29, v31, &v32);
    swift_bridgeObjectRelease_n(v4, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "╞  - Selected: %{public}s)", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v4, 2);
  }
}

uint64_t sub_100130F70(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[32];

  v3 = *a1;
  swift_beginAccess(a2, v13, 0, 0);
  swift_beginAccess(a2, v12, 0, 0);
  swift_beginAccess(a2, v11, 0, 0);
  swift_beginAccess(a2, v10, 1, 0);
  v4 = *a2;
  swift_bridgeObjectRetain();
  sub_1000F2594(v3, v4);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    v8 = *a2;
    v9 = *(_QWORD *)(*a2 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      if (v9 <= *(_QWORD *)(v8 + 16))
        __asm { BR              X9 }
      __break(1u);
      JUMPOUT(0x1001314B8);
    }
  }
  return result;
}

uint64_t sub_100131524(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _BYTE v5[24];
  uint64_t *v6;

  swift_beginAccess(a2, v5, 33, 0);
  v6 = a2;
  v3 = *a2;
  if (*(_QWORD *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  sub_10004006C(0, 0);
  return swift_endAccess(v5);
}

uint64_t sub_100131C18(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unsigned __int8 v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_100133060(&v14, *(_BYTE *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_100131D70@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;
  char *v5;
  char *v6;
  char *v7;

  result = sub_10013BB60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100131D9C(_QWORD *a1)
{
  uint64_t *v1;

  return Library.Menu.Revision.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

void *sub_100131DB8()
{
  void *result;

  result = sub_1000D413C((uint64_t)&off_10043E9A8);
  qword_100492790 = (uint64_t)&off_10043E978;
  *(_QWORD *)algn_100492798 = result;
  return result;
}

void sub_100131DE8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[2];
  __int128 v25;
  __int128 v26;

  LOBYTE(v24[0]) = 0;
  v1 = sub_10013D780();
  v2 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, &v25);
  if (!*((_QWORD *)&v26 + 1))
    goto LABEL_8;
  v3 = sub_100005574(&qword_10048E158);
  if ((swift_dynamicCast(v24, &v25, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    return;
  v4 = v24[0];
  LOBYTE(v24[0]) = 1;
  NSUserDefaults.subscript.getter((uint64_t)&_s9LegacyKeyON, v1, v2, &v25);
  if (!*((_QWORD *)&v26 + 1))
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    sub_100098B58((uint64_t)&v25);
    return;
  }
  if ((swift_dynamicCast(v24, &v25, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v5 = v24[0];
  v24[0] = 0x4D7972617262694CLL;
  v24[1] = 0xEB00000000756E65;
  NSUserDefaults.subscript.getter((uint64_t)v24, (uint64_t)&type metadata for String, v2, &v25);
  if (*((_QWORD *)&v26 + 1))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100098B58((uint64_t)&v25);
  if (qword_10048C808 != -1)
    swift_once(&qword_10048C808, sub_100131DB8);
  v6 = sub_10013B684(v4, v5, qword_100492790, *(uint64_t *)algn_100492798);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10048C810 != -1)
      swift_once(&qword_10048C810, sub_1001323E0);
    v11 = type metadata accessor for Logger(0, v10);
    sub_1000086B4(v11, (uint64_t)static Logger.libraryMenu);
    swift_errorRetain(v0);
    v12 = swift_errorRetain(v0);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v16 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v15 = 138412290;
      *(_QWORD *)&v25 = v0;
      swift_errorRetain(v0);
      v17 = sub_100005574((uint64_t *)&unk_1004911F0);
      String.init<A>(describing:)(&v25, v17);
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 4) = v18;
      *v16 = v18;
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to migrate legacy library menu: %@", (uint8_t *)v15, 0xCu);
      v19 = sub_100005574(&qword_100494910);
      swift_arrayDestroy(v16, 1, v19);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      swift_errorRelease(v0);
    }
    else
    {
      swift_errorRelease(v0);
      swift_errorRelease(v0);
      swift_errorRelease(v0);

    }
  }
  else
  {
    v20 = v6;
    v21 = v7;
    v22 = v8;
    v23 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSUserDefaults.libraryMenuRevision.setter(v20, v21, v22, v23);
    v25 = 0u;
    v26 = 0u;
    LOBYTE(v24[0]) = 0;
    NSUserDefaults.subscript.setter((uint64_t)&v25, (uint64_t)v24, (uint64_t)&_s9LegacyKeyON, v1, v2);
    v25 = 0u;
    v26 = 0u;
    LOBYTE(v24[0]) = 1;
    NSUserDefaults.subscript.setter((uint64_t)&v25, (uint64_t)v24, (uint64_t)&_s9LegacyKeyON, v1, v2);
  }
}

void (*NSUserDefaults.libraryMenuRevision.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  *v3 = NSUserDefaults.libraryMenuRevision.getter();
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  return sub_100132214;
}

void sub_100132214(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *a1;
  v4 = **a1;
  v3 = (*a1)[1];
  v5 = (*a1)[2];
  v6 = (void *)(*a1)[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSUserDefaults.libraryMenuRevision.setter(v4, v3, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSUserDefaults.libraryMenuRevision.setter(**a1, v3, v5, v6);
  }
  free(v2);
}

uint64_t sub_1001322C4(char *a1, char *a2)
{
  return sub_1000275D4(*a1, *a2);
}

Swift::Int sub_1001322D0()
{
  char *v0;

  return sub_1000BE4B8(*v0);
}

uint64_t sub_1001322D8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  if (*v1)
    v3 = 0x80000001003ACD60;
  else
    v3 = 0x80000001003ACD40;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100132338(uint64_t a1)
{
  char *v1;

  return sub_1000BED00(a1, *v1);
}

uint64_t sub_100132340@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043EA38, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_10013239C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD00000000000001CLL;
  else
    v2 = 0xD00000000000001DLL;
  v3 = 0x80000001003ACD40;
  if (*v1)
    v3 = 0x80000001003ACD60;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1001323E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.libraryMenu);
  sub_1000086B4(v2, (uint64_t)static Logger.libraryMenu);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x4D7972617262694CLL, 0xEB00000000756E65);
}

uint64_t static Logger.libraryMenu.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C810 != -1)
    swift_once(&qword_10048C810, sub_1001323E0);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.libraryMenu);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

uint64_t sub_1001324CC(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  _QWORD v14[9];

  v4 = *v2;
  Hasher.init(_seed:)(v14);
  v5 = ApplicationCapabilities.Service.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v14, v5, v7);
  swift_bridgeObjectRelease(v7);
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v14[0] = *v12;
  *v12 = 0x8000000000000000;
  sub_100135CD8(a2, v8, isUniquelyReferenced_nonNull_native);
  v10 = *v12;
  *v12 = v14[0];
  swift_bridgeObjectRelease(v10);
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_100132914(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100006924(&qword_100491618, v12, (uint64_t)&protocol conformance descriptor for AudioVariant);
  swift_bridgeObjectRetain();
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100006924(&qword_100491620, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v31;
        a1 = v32;
        v26 = v34;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v21);
    v25(v35, v6);
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_100136180((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v36;
    swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v28, v6);
    return 1;
  }
}

uint64_t sub_100132B70(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  void *v33;
  id v34;
  _QWORD v35[9];

  v3 = v2;
  v6 = *v2;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v9 = v8;
  Hasher.init(_seed:)(v35);
  swift_bridgeObjectRetain();
  String.hash(into:)(v35, v7, v9);
  v10 = Hasher._finalize()();
  swift_bridgeObjectRelease(v9);
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v35[0] = *v3;
    *v3 = 0x8000000000000000;
    v30 = a2;
    sub_100136384((uint64_t)v30, v12, isUniquelyReferenced_nonNull_native);
    v31 = *v3;
    *v3 = v35[0];
    swift_bridgeObjectRelease(v31);
    *a1 = v30;
    return 1;
  }
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12));
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v13 == v16 && v15 == v17)
  {
LABEL_16:
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
    {
      v21 = ~v11;
      do
      {
        v12 = (v12 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          goto LABEL_15;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12));
        v15 = v23;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
        if (v22 == v24 && v15 == v25)
          goto LABEL_16;
        v27 = v25;
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v15, v24, v25, 0);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v27);
      }
      while ((v28 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease(v6);
  v33 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v12);
  *a1 = v33;
  v34 = v33;
  return 0;
}

uint64_t sub_100132D98(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v31 = a2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = swift_retain(a2);
    v9 = __CocoaSet.member(for:)(v8, v7);
    v10 = swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_release(a2);
      v29 = v9;
      v11 = type metadata accessor for AnyCancellable(0);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
      *a1 = v30;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v10);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v24 = sub_10013380C(v7, result + 1);
    v30 = v24;
    v25 = *(_QWORD *)(v24 + 16);
    if (*(_QWORD *)(v24 + 24) <= v25)
    {
      v28 = v25 + 1;
      swift_retain(a2);
      sub_1001344D4(v28);
      v26 = v30;
    }
    else
    {
      v26 = v24;
      swift_retain(a2);
    }
    sub_100135490(a2, v26);
    *v3 = v26;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = *(_QWORD *)(v6 + 40);
  v14 = type metadata accessor for AnyCancellable(0);
  v15 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  swift_bridgeObjectRetain();
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v13, v14, v15);
  v17 = -1 << *(_BYTE *)(v6 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v22 = v31;
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v23 = swift_retain(v22);
    sub_1001365B0(v23, v18, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
    swift_bridgeObjectRelease();
    *a1 = v22;
    return 1;
  }
  v19 = ~v17;
  v20 = sub_100006924(&qword_100491610, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  while (1)
  {
    v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18);
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v30, &v31, v14, v20) & 1) != 0)
      break;
    v18 = (v18 + 1) & v19;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_11;
  }
  swift_release(a2);
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v18);
  *a1 = v27;
  swift_retain(v27);
  return 0;
}

uint64_t sub_100133060(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _QWORD *v11;
  _QWORD v13[10];

  v4 = *v2;
  Hasher.init(_seed:)(v13);
  v5 = Library.Menu.Identifier.rawValue.getter(a2);
  v7 = v6;
  swift_bridgeObjectRetain();
  String.hash(into:)(v13, v5, v7);
  swift_bridgeObjectRelease();
  v8 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  v13[0] = *v11;
  *v11 = 0x8000000000000000;
  sub_100136758(a2, v8, isUniquelyReferenced_nonNull_native);
  *v11 = v13[0];
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_10013343C(unsigned __int8 *a1, unsigned __int8 a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v13[9];

  v5 = *v2;
  Hasher.init(_seed:)(v13);
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v13[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_100136BA8(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13[0];
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  a2 = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100133558(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_100136D04(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_100133650(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v23[9];

  v7 = *v3;
  Hasher.init(_seed:)(v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)(v23, a2, a3);
  swift_bridgeObjectRelease();
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v23[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100136E24(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10013380C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    sub_100005574(&qword_100491600);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v25 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for AnyCancellable(0);
      do
      {
        v23 = v7;
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        if (*(_QWORD *)(v25 + 24) <= v18)
        {
          sub_1001344D4(v18 + 1);
          v4 = v25;
        }
        v9 = v24;
        v23 = v24;
        v10 = *(_QWORD *)(v4 + 40);
        v11 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
        result = dispatch thunk of Hashable._rawHashValue(seed:)(v10, v8, v11);
        v13 = v4 + 56;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 56 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v19 = 0;
          v20 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v20 && (v19 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v21 = v16 == v20;
            if (v16 == v20)
              v16 = 0;
            v19 |= v21;
            v22 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v22 == -1);
          v17 = __clz(__rbit64(~v22)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_100133A2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004928A0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x100133E2CLL);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_100133E58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_1004928F8);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v39 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v37 = v2;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  swift_retain(v7);
  v15 = 0;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_26;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v19 >= v38)
      goto LABEL_35;
    v20 = v39[v19];
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v38)
        goto LABEL_35;
      v20 = v39[v15];
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v38)
          goto LABEL_35;
        v20 = v39[v15];
        if (!v20)
          break;
      }
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_26:
    v22 = v7;
    v23 = *(_QWORD *)(v7 + 48);
    v24 = *(_QWORD *)(v40 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
    v25(v6, v23 + v24 * v18, v4);
    v26 = *(_QWORD *)(v9 + 40);
    v27 = sub_100006924(&qword_100491618, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v28 = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v4, v27);
    v29 = -1 << *(_BYTE *)(v9 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      v16 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v25((char *)(*(_QWORD *)(v9 + 48) + v16 * v24), (unint64_t)v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v22;
  }
  v21 = v19 + 3;
  if (v21 < v38)
  {
    v20 = v39[v21];
    if (!v20)
    {
      while (1)
      {
        v15 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_41;
        if (v15 >= v38)
          goto LABEL_35;
        v20 = v39[v15];
        ++v21;
        if (v20)
          goto LABEL_25;
      }
    }
    v15 = v21;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v37;
  v36 = 1 << *(_BYTE *)(v7 + 32);
  if (v36 > 63)
    bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v39 = -1 << v36;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release(v7);
  *v2 = v9;
}

void sub_1001341C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100492898);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v31 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v32 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v32)
          goto LABEL_36;
        v16 = v33[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_36;
          v16 = v33[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_36;
            v16 = v33[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_36:
                swift_release(v3);
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v32)
                    goto LABEL_36;
                  v16 = v33[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;
      Hasher.init(_seed:)(v34);
      String.hash(into:)(v34, v19, v21);
      v22 = Hasher._finalize()();
      swift_bridgeObjectRelease(v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1001344D4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100491600);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v31 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v11 << 6);
      }
      else
      {
        v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v15 >= v31)
          goto LABEL_36;
        v16 = v32[v15];
        ++v11;
        if (!v16)
        {
          v11 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_36;
          v16 = v32[v11];
          if (!v16)
          {
            v11 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_36;
            v16 = v32[v11];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_36:
                swift_release(v3);
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v11 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_42;
                  if (v11 >= v31)
                    goto LABEL_36;
                  v16 = v32[v11];
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v11 = v17;
            }
          }
        }
LABEL_26:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      v19 = *(_QWORD *)(v6 + 40);
      v20 = type metadata accessor for AnyCancellable(0);
      v21 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        v12 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1001347E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004915F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v16 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v15 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v15 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v15 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v15 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v15 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x100134C48);
              }
              if (v11 >= v15)
                break;
              v10 = v16[v11];
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v17);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release(v3);
  v14 = 1 << *(_BYTE *)(v3 + 32);
  if (v14 > 63)
    bzero(v16, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v16 = -1 << v14;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release(v3);
  *v2 = v5;
}

void sub_100134C7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004915D8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v31);
      Hasher._combine(_:)(v20);
      v21 = Hasher._finalize()();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100134F24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004928B8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_1001351A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100492890);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34);
      swift_bridgeObjectRetain();
      String.hash(into:)(v34, v21, v22);
      swift_bridgeObjectRelease();
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

unint64_t sub_100135490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = type metadata accessor for AnyCancellable(0);
  v6 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  result = _HashTable.nextHole(atOrAfter:)(v7 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_10013555C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;

  v8 = type metadata accessor for AudioVariant(0);
  __chkstk_darwin(v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release(a4);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v40 = v9;
  sub_100005574(&qword_1004928F8);
  result = static _SetStorage.allocate(capacity:)(a3);
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v39)
      {
LABEL_37:
        swift_release(a4);
        return v12;
      }
      v21 = v38[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v39)
          goto LABEL_37;
        v21 = v38[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v39)
            goto LABEL_37;
          v21 = v38[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v39)
              goto LABEL_37;
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v39)
                  goto LABEL_37;
                v21 = v38[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    v26 = *(_QWORD *)(v12 + 40);
    v27 = sub_100006924(&qword_100491618, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v26, v8, v27);
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      v17 = v40;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      v17 = v40;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v31 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_10013585C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v17[10];

  v4 = a4;
  if (!a3)
  {
    v7 = &_swiftEmptySetSingleton;
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    sub_100005574(&qword_1004915F0);
    v7 = (void *)static _SetStorage.allocate(capacity:)(a3);
    v15 = a2;
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (v15 > 1)
    {
      v10 = a1[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (v15 > 2)
      {
        v10 = a1[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (v15 > 3)
        {
          v10 = a1[3];
          if (!v10)
          {
            v12 = 4;
            if (v15 > 4)
            {
              v10 = a1[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x100135CA4);
                }
                if (v11 >= v15)
                  break;
                v10 = a1[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v9);
          Hasher.init(_seed:)(v17);
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release(v4);
    return v7;
  }
  return (void *)v4;
}

void sub_100135CD8(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  _QWORD v19[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100133A2C(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10013754C(&qword_1004928A0);
        goto LABEL_10;
      }
      sub_100137A18(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v19);
    v10 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v12 = v11;
    String.hash(into:)(v19, v10, v11);
    swift_bridgeObjectRelease(v12);
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v18;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x10013610CLL);
  }
  *(_QWORD *)(v13 + 16) = v16;
}

uint64_t sub_100136180(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for AudioVariant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100133E58(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100136FCC();
      goto LABEL_12;
    }
    sub_100137E10(v12);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100006924(&qword_100491618, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100006924(&qword_100491620, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100136384(uint64_t a1, unint64_t a2, char a3)
{
  Swift::Int v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD v34[9];

  v4 = (uint64_t *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1001341C4(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1001371F0();
LABEL_22:
      v30 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v30 + 48) + 8 * a2) = a1;
      v31 = *(_QWORD *)(v30 + 16);
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (!v32)
      {
        *(_QWORD *)(v30 + 16) = v33;
        return;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_100138138(v9);
  }
  v10 = *(_QWORD *)v3;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v13 = v12;
  Hasher.init(_seed:)(v34);
  String.hash(into:)(v34, v11, v13);
  v3 = Hasher._finalize()();
  swift_bridgeObjectRelease(v13);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v3 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
  v3 = v16;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v15 == v17 && v3 == v18)
  {
LABEL_25:
    swift_bridgeObjectRelease_n(v3, 2);
    goto LABEL_26;
  }
  v20 = v18;
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v3, v17, v18, 0);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 1) == 0)
  {
    v22 = ~v14;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2));
      v3 = v24;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
      if (v23 == v25 && v3 == v26)
        goto LABEL_25;
      v28 = v26;
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v3, v25, v26, 0);
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(v28);
    }
    while ((v29 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for Name(0);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1001365B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1001344D4(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100137398();
      goto LABEL_12;
    }
    sub_100138414(v9);
  }
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v4 = type metadata accessor for AnyCancellable(0);
  v12 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
  v13 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v4, v12);
  v14 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = sub_100006924(&qword_100491610, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    do
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
      if ((dispatch thunk of static Equatable.== infix(_:_:)(&v21, &v22, v4, v16) & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (!v19)
  {
    *(_QWORD *)(v17 + 16) = v20;
    return;
  }
  __break(1u);
LABEL_15:
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v4);
  __break(1u);
}

void sub_100136758(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  _QWORD v18[10];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1001347E4(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_10013754C(&qword_1004915F0);
        goto LABEL_10;
      }
      sub_1001386F8(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v18);
    v10 = Library.Menu.Identifier.rawValue.getter(a1);
    String.hash(into:)(v18, v10, v11);
    swift_bridgeObjectRelease();
    a2 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v12 = *v16;
  *(_QWORD *)(*v16 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v17;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x100136B24);
  }
  *(_QWORD *)(v12 + 16) = v15;
}

void sub_100136BA8(unsigned __int8 a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v5 = a1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100134C7C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_10013754C(&qword_1004915D8);
      goto LABEL_14;
    }
    sub_100138B58(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(v5);
  v10 = Hasher._finalize()();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MPCPlaybackEngine.Option);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v12 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = v5;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_100136D04(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100134F24(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1001376D4();
      goto LABEL_14;
    }
    sub_100138DD0(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_100136E24(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_1001351A4(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100137868();
      goto LABEL_22;
    }
    sub_100139030(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29);
  swift_bridgeObjectRetain();
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease();
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_100136FCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for AudioVariant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004928F8);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release(v6);
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release(v6);
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_1001371F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100005574(&qword_100492898);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100137398()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100005574(&qword_100491600);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    swift_retain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100137540()
{
  sub_10013754C(&qword_1004915F0);
}

void sub_10013754C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  sub_100005574(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1001376D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_100005574(&qword_1004928B8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100137868()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100005574(&qword_100492890);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100137A18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004928A0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x100137DE4);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_100137E10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;

  v2 = v1;
  v4 = type metadata accessor for AudioVariant(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_1004928F8);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release(v8);
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v35 = v2;
  v36 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  swift_retain(v8);
  v16 = 0;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v20 >= v37)
      goto LABEL_35;
    v21 = *(_QWORD *)(v36 + 8 * v20);
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v37)
        goto LABEL_35;
      v21 = *(_QWORD *)(v36 + 8 * v16);
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v37)
          goto LABEL_35;
        v21 = *(_QWORD *)(v36 + 8 * v16);
        if (!v21)
          break;
      }
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v23 * v19, v4);
    v24 = *(_QWORD *)(v10 + 40);
    v25 = sub_100006924(&qword_100491618, (uint64_t (*)(uint64_t))&type metadata accessor for AudioVariant, (uint64_t)&protocol conformance descriptor for AudioVariant);
    v26 = dispatch thunk of Hashable._rawHashValue(seed:)(v24, v4, v25);
    v27 = -1 << *(_BYTE *)(v10 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v15 + 8 * v29);
      }
      while (v33 == -1);
      v17 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v17 * v23, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v22 = v20 + 3;
  if (v22 >= v37)
  {
LABEL_35:
    swift_release_n(v8, 2);
    v2 = v35;
    goto LABEL_37;
  }
  v21 = *(_QWORD *)(v36 + 8 * v22);
  if (v21)
  {
    v16 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v16 >= v37)
      goto LABEL_35;
    v21 = *(_QWORD *)(v36 + 8 * v16);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_100138138(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100492898);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v31 = v2;
  v32 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v33 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v33)
        goto LABEL_36;
      v16 = *(_QWORD *)(v32 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v33)
          goto LABEL_36;
        v16 = *(_QWORD *)(v32 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v14);
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;
    Hasher.init(_seed:)(v34);
    v22 = v18;
    String.hash(into:)(v34, v19, v21);
    v23 = Hasher._finalize()();
    swift_bridgeObjectRelease(v21);
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v10 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v26);
      }
      while (v30 == -1);
      v12 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v33)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v33)
      goto LABEL_36;
    v16 = *(_QWORD *)(v32 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100138414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100491600);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v30 = v2;
  v31 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v32 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_36;
      v16 = *(_QWORD *)(v31 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_36;
        v16 = *(_QWORD *)(v31 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_26:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v14);
    v19 = *(_QWORD *)(v6 + 40);
    v20 = type metadata accessor for AnyCancellable(0);
    v21 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    swift_retain(v18);
    v22 = dispatch thunk of Hashable._rawHashValue(seed:)(v19, v20, v21);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v6 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v16 = *(_QWORD *)(v31 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v32)
      goto LABEL_36;
    v16 = *(_QWORD *)(v31 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1001386F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15[10];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004915F0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
    goto LABEL_26;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    v9 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v14 > 1)
  {
    v10 = *(_QWORD *)(v3 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_22;
    v11 = 2;
    if (v14 > 2)
    {
      v10 = *(_QWORD *)(v3 + 72);
      if (v10)
        goto LABEL_22;
      v11 = 3;
      if (v14 > 3)
      {
        v10 = *(_QWORD *)(v3 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v14 > 4)
          {
            v10 = *(_QWORD *)(v3 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x100138B24);
              }
              if (v11 >= v14)
                break;
              v10 = *(_QWORD *)(v3 + 56 + 8 * v11);
              ++v12;
              if (v10)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_23:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v9);
        Hasher.init(_seed:)(v15);
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3, 2);
LABEL_26:
  *v2 = v5;
}

void sub_100138B58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004915D8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v30);
    Hasher._combine(_:)(v20);
    v21 = Hasher._finalize()();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100138DD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_1004928B8);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release(v3);
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100139030(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100005574(&qword_100492890);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33);
    swift_bridgeObjectRetain_n(v22, 2);
    String.hash(into:)(v33, v21, v22);
    swift_bridgeObjectRelease();
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

unint64_t sub_1001392E8()
{
  unint64_t result;

  result = qword_1004927A0;
  if (!qword_1004927A0)
  {
    result = swift_getWitnessTable(&unk_10038D188, &_s4MenuV9MoveErrorVN);
    atomic_store(result, (unint64_t *)&qword_1004927A0);
  }
  return result;
}

unint64_t sub_10013932C()
{
  unint64_t result;

  result = qword_1004927A8;
  if (!qword_1004927A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_1004927A8);
  }
  return result;
}

void sub_100139370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_1000EF16C(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_1001394D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v14;
  _QWORD v15[9];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = (_QWORD *)(a1 + 56);
    v5 = -1 << *(_BYTE *)(a1 + 32);
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(a1 + 56);
    v14 = (unint64_t)(63 - v5) >> 6;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      goto LABEL_22;
    }
    if (v14 > 1)
    {
      v9 = v4[1];
      v10 = 1;
      if (v9)
        goto LABEL_21;
      v10 = 2;
      if (v14 > 2)
      {
        v9 = v4[2];
        if (v9)
          goto LABEL_21;
        v10 = 3;
        if (v14 > 3)
        {
          v9 = v4[3];
          if (v9)
            goto LABEL_21;
          v10 = 4;
          if (v14 > 4)
          {
            v9 = v4[4];
            if (!v9)
            {
              v11 = 5;
              if (v14 > 5)
              {
                v9 = v4[5];
                if (v9)
                {
                  v10 = 5;
                  goto LABEL_21;
                }
                while (1)
                {
                  v10 = v11 + 1;
                  if (__OFADD__(v11, 1))
                    __break(1u);
                  if (v10 >= v14)
                    break;
                  v9 = v4[v10];
                  ++v11;
                  if (v9)
                    goto LABEL_21;
                }
              }
              goto LABEL_25;
            }
LABEL_21:
            v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_22:
            v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v8);
            Hasher.init(_seed:)(v15);
            __asm { BR              X8 }
          }
        }
      }
    }
LABEL_25:
    sub_1000F38AC(a1);
    return (void *)v2;
  }
  swift_release(a2);
  return &_swiftEmptySetSingleton;
}

void *sub_100139D24(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v20;
  _QWORD v22[12];

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v22[11] = a3 + 56;
  v20 = v6 - 1;
  v8 = a5[3];
  v7 = a5[4];
  if (v7)
  {
    v9 = (v7 - 1) & v7;
    v10 = __clz(__rbit64(v7)) | (v8 << 6);
    goto LABEL_13;
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    JUMPOUT(0x10013A2C0);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 >= v12)
  {
    v11 = a5[3];
  }
  else
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
    {
LABEL_12:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v11 << 6);
      v8 = v11;
LABEL_13:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v10);
      a5[3] = v8;
      a5[4] = v9;
      Hasher.init(_seed:)(v22);
      __asm { BR              X8 }
    }
    v15 = v8 + 2;
    if (v8 + 2 < v12)
    {
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
      {
LABEL_8:
        v11 = v15;
        goto LABEL_12;
      }
      if (v8 + 3 < v12)
      {
        v14 = *(_QWORD *)(v13 + 8 * (v8 + 3));
        if (v14)
        {
          v11 = v8 + 3;
          goto LABEL_12;
        }
        v15 = v8 + 4;
        if (v8 + 4 >= v12)
        {
          v11 = v8 + 3;
          goto LABEL_23;
        }
        v14 = *(_QWORD *)(v13 + 8 * v15);
        if (v14)
          goto LABEL_8;
        v11 = v8 + 5;
        if (v8 + 5 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v11);
          if (!v14)
          {
            v11 = v12 - 1;
            v17 = v8 + 6;
            do
            {
              if (v12 == v17)
                goto LABEL_23;
              v14 = *(_QWORD *)(v13 + 8 * v17++);
            }
            while (!v14);
            v11 = v17 - 1;
          }
          goto LABEL_12;
        }
      }
      v11 = v15;
    }
  }
LABEL_23:
  a5[3] = v11;
  a5[4] = 0;
  swift_retain(a3);
  return sub_10013585C(a1, a2, v20, a3);
}

uint64_t sub_10013A360(void *a1, char a2, void *a3, char a4)
{
  char v7;
  char v8;
  char v9;

  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0)
    {
      sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
      sub_10013A438(a1, 0);
      sub_10013A438(a3, 0);
      v7 = static NSObject.== infix(_:_:)(a1, a3);
      goto LABEL_6;
    }
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_7;
  type metadata accessor for MusicLibrary(0);
  sub_10013A438(a1, 1);
  sub_10013A438(a3, 1);
  v7 = static MusicLibrary.== infix(_:_:)(a1, a3);
LABEL_6:
  v8 = v7;
  v9 = a2 & 1;
  sub_10013A444(a3, v9);
  sub_10013A444(a1, v9);
  return v8 & 1;
}

id sub_10013A438(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    return (id)swift_retain(a1);
  else
    return a1;
}

void sub_10013A444(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_release(a1);
  else

}

uint64_t sub_10013A450()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10013A460()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013A49C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_10013A4F8()
{
  uint64_t v0;

  sub_10012E44C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_10013A540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10013A550(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10013A558()
{
  unint64_t result;

  result = qword_1004927B0;
  if (!qword_1004927B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Revision, &type metadata for Library.Menu.Revision);
    atomic_store(result, (unint64_t *)&qword_1004927B0);
  }
  return result;
}

uint64_t _s9MusicCore7LibraryO4MenuV7RequestV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  char v14;
  uint64_t v16[2];
  uint64_t v17[2];
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  sub_10013D710((uint64_t *)a1, (uint64_t)v17);
  sub_10013D710((uint64_t *)a2, (uint64_t)v16);
  sub_10013D710(v17, (uint64_t)&v18);
  v4 = v18;
  if ((v19 & 1) != 0)
  {
    sub_10013D710(v16, (uint64_t)&v20);
    if ((v21 & 1) == 0)
      goto LABEL_16;
    v5 = v20;
    type metadata accessor for MusicLibrary(0);
    sub_10013D728((uint64_t)v17);
    sub_10013D728((uint64_t)v16);
    v6 = static MusicLibrary.== infix(_:_:)(v4, v5);
  }
  else
  {
    sub_10013D710(v16, (uint64_t)&v20);
    if ((v21 & 1) != 0)
      goto LABEL_16;
    v7 = v20;
    sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
    sub_10013D728((uint64_t)v17);
    sub_10013D728((uint64_t)v16);
    v6 = static NSObject.== infix(_:_:)(v4, v7);
  }
  v8 = v6;
  sub_10013D754((uint64_t)v16);
  sub_10013D754((uint64_t)v17);
  if ((v8 & 1) == 0 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    goto LABEL_16;
  v9 = *(void **)(a1 + 24);
  v10 = *(void **)(a2 + 24);
  if (v9)
  {
    if (!v10)
      goto LABEL_16;
    sub_1000087DC(0, &qword_1004928D8, MPMediaPickerConfiguration_ptr);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      goto LABEL_16;
  }
  else if (v10)
  {
    goto LABEL_16;
  }
  if ((sub_10012C8E8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
    && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) == 0)
  {
    v14 = ((*(_BYTE *)(a1 + 42) & 1) == 0) ^ *(_BYTE *)(a2 + 42);
    return v14 & 1;
  }
LABEL_16:
  v14 = 0;
  return v14 & 1;
}

char *sub_10013A768(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  uint64_t v11;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v24[24];
  _BYTE v25[24];
  int v26;
  int v27;

  v26 = a3;
  v27 = a5;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess(a4, v25, 0, 0);
    swift_beginAccess(a6, v24, 0, 0);
    v16 = 0;
    v17 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      v18 = *(unsigned __int8 *)(a1 + v16 + 32);
      if ((sub_1000C704C(*(_BYTE *)(a1 + v16 + 32), a2) & 1) == 0)
      {
        if ((v26 & 1) != 0)
        {
          v19 = *(_QWORD *)(a4 + 24);
          swift_bridgeObjectRetain();
          v20 = sub_1000C704C(v18, v19);
          swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
          {
            if ((v20 & 1) != 0)
              goto LABEL_11;
            goto LABEL_4;
          }
        }
        else if ((v27 & 1) != 0)
        {
LABEL_11:
          __asm { BR              X9 }
        }
        if (((_DWORD)v18 != 5) | a10 & a11 & 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_10003E894(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
          v22 = *((_QWORD *)v17 + 2);
          v21 = *((_QWORD *)v17 + 3);
          if (v22 >= v21 >> 1)
            v17 = sub_10003E894((char *)(v21 > 1), v22 + 1, 1, v17);
          *((_QWORD *)v17 + 2) = v22 + 1;
          v17[v22 + 32] = v18;
        }
      }
LABEL_4:
      if (v11 == ++v16)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
  }
  return (char *)_swiftEmptyArrayStorage;
}

unint64_t _s9MusicCore7LibraryO4MenuV10IdentifierO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

void sub_10013AC68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  int64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v13[24];

  v4 = a3 >> 1;
  if (a3 >> 1 != a2)
  {
    swift_beginAccess(a4, v13, 0, 0);
    v8 = v4;
    while (!__OFSUB__(v8--, 1))
    {
      if (v8 < a2 || v8 >= v4)
        goto LABEL_10;
      v10 = *a4;
      v11 = *(unsigned __int8 *)(a1 + v8);
      swift_bridgeObjectRetain();
      v12 = sub_1000AA3E0(v11, v10);
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0 || v8 == a2)
        return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_10013AD48(uint64_t result, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  _BYTE v10[24];

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 - 1 <= result)
    return 13;
  v4 = result;
  if ((result & 0x8000000000000000) == 0)
  {
    if (v3 != result)
    {
      swift_bridgeObjectRetain();
      swift_beginAccess(a3, v10, 0, 0);
      while (1)
      {
        v5 = *(unsigned __int8 *)(a2 + v4 + 32);
        v8 = *a3;
        swift_bridgeObjectRetain();
        v9 = sub_1000AA3E0(v5, v8);
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          break;
        if (v3 == ++v4)
        {
          v5 = 13;
          break;
        }
      }
      swift_bridgeObjectRelease();
      return v5;
    }
    return 13;
  }
  __break(1u);
  return result;
}

void sub_10013AE1C(unsigned __int8 *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t *v17;
  char *v18;
  int64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[24];
  _BYTE v42[24];
  _BYTE v43[24];

  v6 = *a1;
  swift_bridgeObjectRetain();
  v7 = sub_1000F2594(v6, a2);
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_48;
  if (v7 < 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (*(_QWORD *)(a2 + 16) < (unint64_t)v7)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v10 = a2 + 32;
  swift_bridgeObjectRetain();
  sub_10013AC68(a2 + 32, 0, (2 * v7) | 1, a3);
  if ((v12 & 1) != 0)
  {
    v10 = 13;
    goto LABEL_11;
  }
  if (v11 < 0 || v11 >= v7)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!v3)
    v10 = *(unsigned __int8 *)(v10 + v11);
LABEL_11:
  swift_bridgeObjectRelease();
  v13 = sub_10013AD48(v7, a2, a3);
  v14 = v13;
  if (v10 == 13)
  {
    v15 = v13;
    v16 = v43;
    v17 = a3;
    if (v15 == 13)
    {
      swift_beginAccess(a3, v43, 1, 0);
      v18 = 0;
      v19 = 0;
LABEL_37:
      sub_10003FF5C(v18, v19, v6);
      return;
    }
    goto LABEL_20;
  }
  v20 = v13;
  v21 = v43;
  v22 = a3;
  if (v20 != 13)
    goto LABEL_24;
  swift_beginAccess(a3, v43, 0, 0);
  v23 = *a3;
  swift_bridgeObjectRetain();
  v24 = sub_1000F2594(v10, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v27 = __OFADD__(v24, 1);
  v14 = v24 + 1;
  if (v27)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_36:
    v18 = (char *)v14;
    v19 = v14;
    goto LABEL_37;
  }
  __break(1u);
LABEL_20:
  swift_beginAccess(v17, v16, 0, 0);
  v28 = *a3;
  swift_bridgeObjectRetain();
  v14 = sub_1000F2594(v14, v28);
  v10 = v29;
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  swift_beginAccess(a3, v42, 1, 0);
  if (*(_QWORD *)(*a3 + 16) < v14)
    goto LABEL_42;
  if ((v14 & 0x8000000000000000) == 0)
    goto LABEL_36;
  __break(1u);
LABEL_24:
  swift_beginAccess(v22, v21, 0, 0);
  v30 = *a3;
  swift_bridgeObjectRetain();
  v31 = sub_1000F2594(v10, v30);
  v33 = v32;
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  swift_beginAccess(a3, v42, 0, 0);
  v34 = *a3;
  swift_bridgeObjectRetain();
  v35 = sub_1000F2594(v14, v34);
  v37 = v36;
  swift_bridgeObjectRelease();
  if ((v37 & 1) == 0)
  {
    if (v35 <= v31)
      v38 = v31;
    else
      v38 = v35;
    if (v35 >= v31)
      v39 = v31;
    else
      v39 = v35;
    v27 = __OFSUB__(v38, v39);
    v40 = v38 - v39;
    if (!v27)
    {
      v14 = v39 + v40 / 2;
      if (!__OFADD__(v39, v40 / 2))
      {
        swift_beginAccess(a3, v41, 1, 0);
        if (*(_QWORD *)(*a3 + 16) >= v14)
        {
          if ((v14 & 0x8000000000000000) == 0)
            goto LABEL_36;
          goto LABEL_47;
        }
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    goto LABEL_43;
  }
LABEL_52:
  __break(1u);
}

void sub_10013B148(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unsigned __int8 v19;

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v14);
    sub_10013AE1C(&v19, a2, a3);
    if (v3)
      goto LABEL_24;
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_17:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    goto LABEL_24;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v18 = v12 + 4;
  if (v12 + 4 >= v11)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v16 = *(_QWORD *)(v7 + 8 * v18);
  v12 += 4;
  if (v16)
    goto LABEL_17;
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v11)
      goto LABEL_24;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v18;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_10013B2C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v6 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v8 << 6);
      goto LABEL_5;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_24;
      v17 = *(_QWORD *)(v9 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_24;
        v17 = *(_QWORD *)(v9 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    result = sub_1000C704C(*(_BYTE *)(*(_QWORD *)(a3 + 48) + v15), a4);
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v6 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain(a3);
        return (uint64_t)sub_10013585C(v6, a2, v7, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_24;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_24;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10013B460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v15;

  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  swift_bridgeObjectRetain_n(a2, 2);
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a3, 2);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v9, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_10013B2C8((uint64_t)&v15 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a3);
    swift_release(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v9, -1);
    bzero(v13, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_10013B2C8((uint64_t)v13, v8, a1, a3);
    swift_release(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_slowDealloc(v13, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10013B684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  void **v6;
  char *v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v28;
  char v29[24];
  _QWORD v30[2];
  char *v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (void **)(swift_bridgeObjectRetain() + 40);
    v7 = (char *)_swiftEmptyArrayStorage;
    do
    {
      v8 = (uint64_t)*(v6 - 1);
      v9 = *v6;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v8;
      v10._object = v9;
      v11 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v10);
      swift_bridgeObjectRelease();
      if (v11 <= 0xC)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          v7 = sub_10003E894(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
        v13 = *((_QWORD *)v7 + 2);
        v12 = *((_QWORD *)v7 + 3);
        if (v13 >= v12 >> 1)
          v7 = sub_10003E894((char *)(v12 > 1), v13 + 1, 1, v7);
        *((_QWORD *)v7 + 2) = v13 + 1;
        v7[v13 + 32] = v11;
      }
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(a2 + 16);
    if (v14)
      goto LABEL_11;
LABEL_21:
    v16 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  v7 = (char *)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a2 + 16);
  if (!v14)
    goto LABEL_21;
LABEL_11:
  swift_bridgeObjectRetain();
  v15 = (void **)(a2 + 40);
  v16 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v17 = (uint64_t)*(v15 - 1);
    v18 = *v15;
    swift_bridgeObjectRetain();
    v19._countAndFlagsBits = v17;
    v19._object = v18;
    v20 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v19);
    swift_bridgeObjectRelease();
    if (v20 <= 0xC)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = sub_10003E894(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
      v22 = *((_QWORD *)v16 + 2);
      v21 = *((_QWORD *)v16 + 3);
      if (v22 >= v21 >> 1)
        v16 = sub_10003E894((char *)(v21 > 1), v22 + 1, 1, v16);
      *((_QWORD *)v16 + 2) = v22 + 1;
      v16[v22 + 32] = v20;
    }
    v15 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
LABEL_22:
  v23 = sub_1000F00DC((uint64_t)v16);
  swift_bridgeObjectRelease();
  v30[0] = v7;
  v30[1] = v23;
  v31 = v7;
  v32 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100130548(a3, a4);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess(v30, v29, 0, 0);
    v25 = v31;
    if (*((_QWORD *)v31 + 2))
    {
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
    return v30[0];
  }
}

char *sub_10013BB60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v3 = sub_100005574(&qword_1004928C0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v7);
  v9 = sub_10013C084();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV10CodingKeysON, &_s4MenuV8RevisionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v10 = sub_100005574(&qword_10048E158);
    v45 = 1;
    v11 = sub_10013D674(&qword_1004928C8, &qword_10048E158, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, v10, &v45, v3, v10, v11);
    v38 = v11;
    v39 = v10;
    v40 = v4;
    v41 = a1;
    v42 = v6;
    v43 = v3;
    v13 = v44;
    v14 = *(_QWORD *)(v44 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (void **)(v13 + 40);
      v16 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v18 = (uint64_t)*(v15 - 1);
        v17 = *v15;
        swift_bridgeObjectRetain();
        v19._countAndFlagsBits = v18;
        v19._object = v17;
        v20 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v19);
        swift_bridgeObjectRelease();
        if (v20 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
            v16 = sub_10003E894(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
          v22 = *((_QWORD *)v16 + 2);
          v21 = *((_QWORD *)v16 + 3);
          if (v22 >= v21 >> 1)
            v16 = sub_10003E894((char *)(v21 > 1), v22 + 1, 1, v16);
          *((_QWORD *)v16 + 2) = v22 + 1;
          v16[v22 + 32] = v20;
        }
        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v23 = sub_100005574(&qword_100490258);
    v45 = 0;
    v24 = sub_10013D674(&qword_100490358, &qword_100490258, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    v25 = v42;
    v26 = v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, v23, &v45, v43, v23, v24);
    v27 = sub_10012C380(v44);
    swift_bridgeObjectRelease();
    v28 = sub_1000F00DC(v27);
    swift_bridgeObjectRelease();
    v45 = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v44, v39, &v45, v26, v39, v38);
    v29 = v44;
    v30 = *(_QWORD *)(v44 + 16);
    if (v30)
    {
      v39 = v28;
      swift_bridgeObjectRetain();
      v38 = v29;
      v31 = (void **)(v29 + 40);
      v6 = (char *)_swiftEmptyArrayStorage;
      do
      {
        v32 = (uint64_t)*(v31 - 1);
        v33 = *v31;
        swift_bridgeObjectRetain();
        v34._countAndFlagsBits = v32;
        v34._object = v33;
        v35 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043CAD0, v34);
        swift_bridgeObjectRelease();
        if (v35 <= 0xC)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_10003E894(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
          v37 = *((_QWORD *)v6 + 2);
          v36 = *((_QWORD *)v6 + 3);
          if (v37 >= v36 >> 1)
            v6 = sub_10003E894((char *)(v36 > 1), v37 + 1, 1, v6);
          *((_QWORD *)v6 + 2) = v37 + 1;
          v6[v37 + 32] = v35;
        }
        v31 += 2;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
      v25 = v42;
      v26 = v43;
    }
    else
    {
      v6 = (char *)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v26);
    swift_bridgeObjectRetain();
    sub_10000682C(v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

unint64_t sub_10013C084()
{
  unint64_t result;

  result = qword_1004927C0;
  if (!qword_1004927C0)
  {
    result = swift_getWitnessTable(&unk_10038D138, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1004927C0);
  }
  return result;
}

unint64_t sub_10013C0C8()
{
  unint64_t result;

  result = qword_1004927D8;
  if (!qword_1004927D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1004927D8);
  }
  return result;
}

unint64_t sub_10013C10C()
{
  unint64_t result;

  result = qword_1004927F0;
  if (!qword_1004927F0)
  {
    result = swift_getWitnessTable(&unk_10038D110, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_1004927F0);
  }
  return result;
}

unint64_t sub_10013C154()
{
  unint64_t result;

  result = qword_1004927F8;
  if (!qword_1004927F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.SelectionState, &type metadata for Library.Menu.SelectionState);
    atomic_store(result, (unint64_t *)&qword_1004927F8);
  }
  return result;
}

unint64_t sub_10013C198(uint64_t a1)
{
  unint64_t result;

  result = sub_10013C1BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10013C1BC()
{
  unint64_t result;

  result = qword_100492830;
  if (!qword_100492830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Request, &type metadata for Library.Menu.Request);
    atomic_store(result, (unint64_t *)&qword_100492830);
  }
  return result;
}

unint64_t sub_10013C204()
{
  unint64_t result;

  result = qword_100492838;
  if (!qword_100492838)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_100492838);
  }
  return result;
}

uint64_t sub_10013C248()
{
  return sub_10002FFB8(&qword_100492840, &qword_1004927C8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s4MenuVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

_QWORD *_s4MenuVwcp(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a2[1];
  v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  v7 = v5;

  v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = a2[5];
  v12 = a1[5];
  a1[5] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v12);
  return a1;
}

_QWORD *_s4MenuVwta(_QWORD *a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu()
{
  return &type metadata for Library.Menu;
}

ValueMetadata *type metadata accessor for Library.Menu.SelectionState()
{
  return &type metadata for Library.Menu.SelectionState;
}

uint64_t _s4MenuV7RequestVwxx(uint64_t a1)
{
  sub_10013A444(*(void **)a1, *(_BYTE *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t _s4MenuV7RequestVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  id v7;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10013A438(*(void **)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v7 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4MenuV7RequestVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_10013A438(*(void **)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10013A444(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  return a1;
}

__n128 _s4MenuV7RequestVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV7RequestVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_10013A444(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_BYTE *)(a1 + 41) = *((_BYTE *)a2 + 41);
  *(_BYTE *)(a1 + 42) = *((_BYTE *)a2 + 42);
  return a1;
}

uint64_t _s4MenuV7RequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 43))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV7RequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 42) = 0;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 43) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 43) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Request()
{
  return &type metadata for Library.Menu.Request;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10013A438(*(void **)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void _s4MenuV7RequestV18MediaLibrarySourceOwxx(uint64_t a1)
{
  sub_10013A444(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwca(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10013A438(*(void **)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10013A444(v5, v6);
  return a1;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_10013A444(v5, v6);
  return a1;
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s4MenuV7RequestV18MediaLibrarySourceOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10013C85C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10013C864(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Request.MediaLibrarySource()
{
  return &type metadata for Library.Menu.Request.MediaLibrarySource;
}

uint64_t _s4MenuV10IdentifierOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4MenuV10IdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_10013C95C + 4 * byte_10038CCB9[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_10013C990 + 4 * byte_10038CCB4[v4]))();
}

uint64_t sub_10013C990(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013C998(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013C9A0);
  return result;
}

uint64_t sub_10013C9AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013C9B4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_10013C9B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013C9C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier()
{
  return &type metadata for Library.Menu.Identifier;
}

uint64_t _s4MenuV10IdentifierO8LocationOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10013CA2C + 4 * byte_10038CCBE[v4]))();
  }
}

uint64_t _s4MenuV10IdentifierO8LocationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10013CAE4 + 4 * byte_10038CCC8[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10013CB18 + 4 * byte_10038CCC3[v5]))();
}

uint64_t sub_10013CB18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CB20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013CB28);
  return result;
}

uint64_t sub_10013CB34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013CB3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10013CB40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CB48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Library.Menu.Identifier.Location()
{
  return &type metadata for Library.Menu.Identifier.Location;
}

_QWORD *_s4MenuV8RevisionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *_s4MenuV8RevisionVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Library.Menu.Revision()
{
  return &type metadata for Library.Menu.Revision;
}

uint64_t _s4MenuV8RevisionV7VersionVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

_QWORD *_s4MenuV8RevisionV7VersionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionV7VersionVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a2[1];
  v6 = a1[1];
  a1[1] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

_QWORD *_s4MenuV8RevisionV7VersionVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *_s4MenuV8RevisionV7VersionVMa()
{
  return &_s4MenuV8RevisionV7VersionVN;
}

uint64_t _s4MenuV8RevisionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10013CE00 + 4 * byte_10038CCD2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10013CE34 + 4 * byte_10038CCCD[v4]))();
}

uint64_t sub_10013CE34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CE3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013CE44);
  return result;
}

uint64_t sub_10013CE50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013CE58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10013CE5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CE64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV10CodingKeysON;
}

uint64_t _s4MenuV8RevisionVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

uint64_t _s4MenuV9MoveErrorVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV9MoveErrorVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

__n128 _s4MenuV9MoveErrorVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s4MenuV9MoveErrorVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s4MenuV9MoveErrorVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4MenuV9MoveErrorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorVMa()
{
  return &_s4MenuV9MoveErrorVN;
}

unint64_t sub_10013D0B8()
{
  unint64_t result;

  result = qword_100492848;
  if (!qword_100492848)
  {
    result = swift_getWitnessTable(&unk_10038D098, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492848);
  }
  return result;
}

unint64_t sub_10013D100()
{
  unint64_t result;

  result = qword_100492850;
  if (!qword_100492850)
  {
    result = swift_getWitnessTable(&unk_10038CFD0, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492850);
  }
  return result;
}

unint64_t sub_10013D148()
{
  unint64_t result;

  result = qword_100492858;
  if (!qword_100492858)
  {
    result = swift_getWitnessTable(&unk_10038CFF8, &_s4MenuV8RevisionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492858);
  }
  return result;
}

unint64_t sub_10013D18C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043E9D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_10013D1D4()
{
  unint64_t result;

  result = qword_100492868;
  if (!qword_100492868)
  {
    result = swift_getWitnessTable(&unk_10038D3D8, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492868);
  }
  return result;
}

uint64_t sub_10013D218(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x64657463656C6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64657463656C6573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10013D320(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = sub_100005574(&qword_100492870);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_10000ABC8(a1, v7);
  v9 = sub_10013D1D4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s4MenuV8RevisionV7VersionV10CodingKeysON, &_s4MenuV8RevisionV7VersionV10CodingKeysON, v9, v7, v8);
  if (v1)
  {
    sub_10000682C(a1);
  }
  else
  {
    v10 = sub_100005574(&qword_1004927C8);
    HIBYTE(v15) = 0;
    v11 = sub_10008FE98(&qword_100492878, &qword_1004927C8, (void (*)(void))sub_10013D534, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = sub_100005574(&qword_1004927E0);
    HIBYTE(v15) = 1;
    v14 = sub_10008FE98(&qword_100492888, &qword_1004927E0, (void (*)(void))sub_10013D534, (uint64_t)&protocol conformance descriptor for <> Set<A>);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000682C(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_10013D534()
{
  unint64_t result;

  result = qword_100492880;
  if (!qword_100492880)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_100492880);
  }
  return result;
}

unint64_t sub_10013D578()
{
  unint64_t result;

  result = qword_1004928A8;
  if (!qword_1004928A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Library.Menu.Identifier, &type metadata for Library.Menu.Identifier);
    atomic_store(result, (unint64_t *)&qword_1004928A8);
  }
  return result;
}

uint64_t sub_10013D5BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013D5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_BYTE *, uint64_t, uint64_t);
  _BYTE v8[56];

  v6 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  sub_10013D62C(a1, (uint64_t)v8);
  return v6(v8, a2, a3);
}

uint64_t sub_10013D62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004928B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013D674(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100005600(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10013D6CC()
{
  unint64_t result;

  result = qword_1004928D0;
  if (!qword_1004928D0)
  {
    result = swift_getWitnessTable(&unk_10038D0E8, &_s4MenuV8RevisionV7VersionVN);
    atomic_store(result, (unint64_t *)&qword_1004928D0);
  }
  return result;
}

uint64_t sub_10013D710(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

uint64_t sub_10013D728(uint64_t a1)
{
  sub_10013A438(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_10013D754(uint64_t a1)
{
  sub_10013A444(*(void **)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

unint64_t sub_10013D780()
{
  unint64_t result;

  result = qword_1004928E0;
  if (!qword_1004928E0)
  {
    result = swift_getWitnessTable(&unk_10038D3A0, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_1004928E0);
  }
  return result;
}

unint64_t sub_10013D7C4()
{
  unint64_t result;

  result = qword_1004928E8;
  if (!qword_1004928E8)
  {
    result = swift_getWitnessTable(&unk_10038D360, &_s4MenuV8RevisionV16MigrationFailureON);
    atomic_store(result, (unint64_t *)&qword_1004928E8);
  }
  return result;
}

uint64_t sub_10013D810()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10013D83C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013D860()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10013D88C()
{
  uint64_t v0;

  return sub_1001AC7D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t _s4MenuV8RevisionV16MigrationFailureOwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s4MenuV8RevisionV16MigrationFailureOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = a2[5];
  v10 = a1[5];
  a1[5] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

_QWORD *_s4MenuV8RevisionV16MigrationFailureOwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(a1[4]);
  v6 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *_s4MenuV8RevisionV16MigrationFailureOMa()
{
  return &_s4MenuV8RevisionV16MigrationFailureON;
}

ValueMetadata *_s9LegacyKeyOMa()
{
  return &_s9LegacyKeyON;
}

uint64_t _s4MenuV14SelectionStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10013DAE4 + 4 * byte_10038CCDC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10013DB18 + 4 * byte_10038CCD7[v4]))();
}

uint64_t sub_10013DB18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013DB20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013DB28);
  return result;
}

uint64_t sub_10013DB34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013DB3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10013DB40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013DB48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4MenuV8RevisionV7VersionV10CodingKeysOMa()
{
  return &_s4MenuV8RevisionV7VersionV10CodingKeysON;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xF)
    goto LABEL_17;
  if (a2 + 241 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 241) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 241;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 241;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 241;
  }
LABEL_17:
  v6 = ((*a1 >> 3) & 0xE | (*a1 >> 7)) ^ 0xF;
  if (v6 >= 0xE)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s4MenuV9MoveErrorV7FailureOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 241 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 241) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE)
    return ((uint64_t (*)(void))((char *)&loc_10013DC50 + 4 * byte_10038CCE6[v4]))();
  *a1 = a2 - 15;
  return ((uint64_t (*)(void))((char *)sub_10013DC84 + 4 * byte_10038CCE1[v4]))();
}

uint64_t sub_10013DC84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013DC8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10013DC94);
  return result;
}

uint64_t sub_10013DCAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10013DCB4);
  *(_BYTE *)result = 16 * (((-a2 >> 1) & 7) - 8 * a2);
  return result;
}

uint64_t sub_10013DCB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013DCC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013DCCC(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_10013DCD8(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_10013DCE8(_BYTE *result, char a2)
{
  *result = *result & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *_s4MenuV9MoveErrorV7FailureOMa()
{
  return &_s4MenuV9MoveErrorV7FailureON;
}

unint64_t sub_10013DD10()
{
  unint64_t result;

  result = qword_100492900;
  if (!qword_100492900)
  {
    result = swift_getWitnessTable(&unk_10038D2D0, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492900);
  }
  return result;
}

unint64_t sub_10013DD58()
{
  unint64_t result;

  result = qword_100492908;
  if (!qword_100492908)
  {
    result = swift_getWitnessTable(&unk_10038D338, &_s9LegacyKeyON);
    atomic_store(result, (unint64_t *)&qword_100492908);
  }
  return result;
}

unint64_t sub_10013DDA0()
{
  unint64_t result;

  result = qword_100492910;
  if (!qword_100492910)
  {
    result = swift_getWitnessTable(&unk_10038D240, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492910);
  }
  return result;
}

unint64_t sub_10013DDE8()
{
  unint64_t result;

  result = qword_100492918;
  if (!qword_100492918)
  {
    result = swift_getWitnessTable(&unk_10038D268, &_s4MenuV8RevisionV7VersionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100492918);
  }
  return result;
}

void sub_10013DE30()
{
  qword_1004A2180 = (uint64_t)&off_10043EA88;
}

uint64_t SortOptions.SortType.localizedTitle.getter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_10013DEB0(a1);
  v1 = v6;
  v2 = v7;
  sub_10000ABC8(v5, v6);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  sub_10000682C(v5);
  return v3;
}

void sub_10013DEB0(char a1)
{
  __asm { BR              X10 }
}

void sub_10013DEDC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = &type metadata for PlaylistOrderSort;
  *(_QWORD *)(v0 + 32) = &off_10044D5D8;
  *(_BYTE *)v0 = 1;
}

id SortOptions.SortType.image.getter(char a1)
{
  id v1;
  id v2;
  NSString v3;
  id v4;
  NSString v5;

  v1 = 0;
  if (((1 << a1) & 0x1FC) == 0)
  {
    if (((1 << a1) & 0xC01) != 0)
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v3 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v3);

      if (v4)
        goto LABEL_6;
    }
    else
    {
      v2 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", 1);
      v5 = String._bridgeToObjectiveC()();
      v4 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

      if (v4)
      {
LABEL_6:
        v1 = objc_msgSend(v4, "imageWithConfiguration:", v2);

        return v1;
      }
    }

    return 0;
  }
  return v1;
}

uint64_t SortOptions.SortType.sortDescriptors(for:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_10013DEB0(a2);
  v3 = v8;
  v4 = v9;
  sub_10000ABC8(v7, v8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
  sub_10000682C(v7);
  return v5;
}

uint64_t sub_10013E22C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  LOBYTE(a1) = sub_1000C73B0(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t SortOptions.SortType.reversed.getter(char a1)
{
  return byte_10038D9B2[a1];
}

uint64_t SortOptions.SortType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10013E2CC + 4 * byte_10038D49D[a1]))(0xD000000000000018, 0x80000001003ACD80);
}

uint64_t sub_10013E2CC()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_10013E3DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = SortOptions.SortType.rawValue.getter(*a1);
  v5 = v4;
  v6 = SortOptions.SortType.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_10013E464()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.SortType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10013E4C4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = SortOptions.SortType.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10013E504()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.SortType.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10013E560@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10013E58C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = SortOptions.SortType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void SortOptions.ContentType.localizedTitle.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __asm { BR              X10 }
}

uint64_t sub_10013E674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x695620636973754DLL, 0xEC000000736F6564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v5 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

_QWORD *SortOptions.ContentType.availableSortTypes(withSelectedType:)()
{
  uint64_t v0;

  if (qword_10048C818 != -1)
    swift_once(&qword_10048C818, sub_10013DE30);
  v0 = qword_1004A2180;
  if (*(_QWORD *)(qword_1004A2180 + 16))
  {
    swift_bridgeObjectRetain_n(qword_1004A2180, 2);
    __asm { BR              X8 }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t SortOptions.ContentType.defaultSortType.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10013ED9C + 4 * byte_10038D4D5[a1 >> 6]))(8);
}

uint64_t sub_10013ED9C@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 6;
}

uint64_t sub_10013EDB8@<X0>(char a1@<W8>)
{
  return 0x206u >> (8 * (a1 + 64));
}

uint64_t sub_10013EDD0(unsigned __int8 a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::String v8;
  Swift::Int v10;
  _QWORD v11[9];

  v2 = 0x676E6F5374726F73;
  v3 = a1 >> 6;
  if (a1 != 192 || v3 != 3)
  {
    Hasher.init(_seed:)(v11);
    v4 = SortOptions.ContentType.identifier.getter(a1);
    v6 = v5;
    String.hash(into:)(v11, v4, v5);
    swift_bridgeObjectRelease();
    v7 = Hasher._finalize()();
    Hasher.init(_seed:)(v11);
    String.hash(into:)(v11, 0x73676E6F73, 0xE500000000000000);
    if (v7 != Hasher._finalize()())
    {
      v2 = 0x75626C4174726F53;
      if (v3 != 1)
      {
        Hasher.init(_seed:)(v11);
        String.hash(into:)(v11, v4, v6);
        swift_bridgeObjectRelease();
        v10 = Hasher._finalize()();
        Hasher.init(_seed:)(v11);
        String.hash(into:)(v11, 0x736D75626C61, 0xE600000000000000);
        if (v10 == Hasher._finalize()())
          return v2;
        goto LABEL_6;
      }
      if ((a1 & 0x3F) != 0)
      {
LABEL_6:
        v11[0] = v4;
        v11[1] = v6;
        swift_bridgeObjectRetain();
        v8._countAndFlagsBits = 0x6570795474726F53;
        v8._object = (void *)0xE800000000000000;
        String.append(_:)(v8);
        swift_bridgeObjectRelease();
        return v11[0];
      }
    }
  }
  return v2;
}

uint64_t SortOptions.ContentType.identifier.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_10013EF9C + 4 * byte_10038D4D9[a1 >> 6]))();
}

uint64_t sub_10013EF9C@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0x646956636973756DLL;
}

uint64_t sub_10013EFE4@<X0>(char a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10013F010 + 4 * byte_10038D4DD[a1 & 0x3F]))(0x736D75626C61, 0xE600000000000000);
}

uint64_t sub_10013F010()
{
  return 0x6C41747369747261;
}

uint64_t sub_10013F030@<X0>(char a1@<W8>)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000018;
  else
    return 0x7473696C79616C70;
}

uint64_t sub_10013F074@<X0>(int a1@<W8>)
{
  uint64_t v1;

  v1 = 0x736569766F6DLL;
  if (a1 != 193)
    v1 = 0x7473696C79616C70;
  if (a1 == 192)
    return 0x73676E6F73;
  else
    return v1;
}

unint64_t sub_10013F0D0()
{
  return 0xD000000000000016;
}

uint64_t sub_10013F0F0()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_10013F114()
{
  return 0x626C4165726E6567;
}

Swift::String __swiftcall SortOptions.ContentType.storageKey(using:)(Swift::String_optional using)
{
  unsigned __int8 v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  void *v8;
  Swift::String result;
  uint64_t v10;
  void *v11;

  if (using.value._object)
  {
    object = using.value._object;
    countAndFlagsBits = using.value._countAndFlagsBits;
    v10 = sub_10013EDD0(v1);
    v11 = v4;
    swift_bridgeObjectRetain();
    v5._countAndFlagsBits = 45;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v6._countAndFlagsBits = countAndFlagsBits;
    v6._object = object;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    v7 = v10;
    v8 = v11;
  }
  else
  {
    v7 = sub_10013EDD0(v1);
  }
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

void SortOptions.ContentType.hash(into:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_10013F1FC@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  unint64_t v2;
  unint64_t v3;

  if ((a2 & 1) != 0)
    v2 = 0xD000000000000011;
  else
    v2 = 0x646956636973756DLL;
  if ((a2 & 1) != 0)
    v3 = 0x80000001003B0630;
  else
    v3 = 0xEB00000000736F65;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

void sub_10013F344()
{
  JUMPOUT(0x10013F32CLL);
}

void sub_10013F364()
{
  JUMPOUT(0x10013F32CLL);
}

void sub_10013F388()
{
  JUMPOUT(0x10013F32CLL);
}

Swift::Int SortOptions.ContentType.hashValue.getter(unsigned __int8 a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(a1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_10013F40C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10013F46C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = SortOptions.ContentType.identifier.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10013F4AC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = SortOptions.ContentType.identifier.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10013F508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t static SortOptions.ViewType.Albums.preferredItemSortDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B00;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 1);

  *(_QWORD *)(v1 + 32) = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v5 = objc_allocWithZone((Class)NSSortDescriptor);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, 1);

  *(_QWORD *)(v1 + 40) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1);

  *(_QWORD *)(v1 + 48) = v10;
  specialized Array._endMutation()(v11);
  return v1;
}

uint64_t sub_10013F698(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = sub_100005574((uint64_t *)&unk_100491910);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100384730;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistEntryPosition);
    v5 = objc_allocWithZone((Class)NSSortDescriptor);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, a2 & 1);

    *(_QWORD *)(v4 + 32) = v7;
    specialized Array._endMutation()(v8);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 336, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10013F7C0(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x7473696C79616C50, 0xEE00726564724F20);
}

void *sub_10013F7E4()
{
  return sub_1000D4650((uint64_t)&off_10043EB58);
}

uint64_t sub_10013F7F0(unsigned __int8 a1)
{
  char *v1;

  return sub_10013F698(a1, *v1);
}

uint64_t sub_10013F7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B70;
  v2 = sub_100005574((uint64_t *)&unk_100491700);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A60;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v3 + 56) = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self(MPModelSortDescriptor);
  v9 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v9;
  v10 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100384A40;
  *(_QWORD *)(v10 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v10 + 40) = v11;
  *(_QWORD *)(v10 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v10 + 72) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v8, "sortDescriptorWithKeyPath:ascending:", v14, 1);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_1004A2188 = v1;
  return result;
}

uint64_t sub_10013F9B4(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x656C746954, 0xE500000000000000);
}

void *sub_10013F9C8()
{
  return sub_1000D4650((uint64_t)&off_10043EC50);
}

uint64_t sub_10013F9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B80;
  v2 = sub_100005574((uint64_t *)&unk_100491700);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A40;
  v4 = MPModelRelationshipSongAlbum;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100384A60;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1);

  *(_QWORD *)(v1 + 40) = v15;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v16 = objc_allocWithZone((Class)NSSortDescriptor);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, "initWithKey:ascending:", v17, 1);

  *(_QWORD *)(v1 + 48) = v18;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v19 = objc_allocWithZone((Class)NSSortDescriptor);
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, "initWithKey:ascending:", v20, 1);

  *(_QWORD *)(v1 + 56) = v21;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v22 = objc_allocWithZone((Class)NSSortDescriptor);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v24 = objc_msgSend(v22, "initWithKey:ascending:", v23, 1);

  *(_QWORD *)(v1 + 64) = v24;
  result = specialized Array._endMutation()(v25);
  qword_1004A2190 = v1;
  return result;
}

uint64_t sub_10013FCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class isa;
  id v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B70;
  v2 = sub_100005574((uint64_t *)&unk_100491700);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A60;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 56) = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(MPModelSortDescriptor), "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  v8 = objc_allocWithZone((Class)NSSortDescriptor);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, "initWithKey:ascending:", v9, 1);

  *(_QWORD *)(v1 + 40) = v10;
  result = specialized Array._endMutation()(v11);
  qword_1004A2198 = v1;
  return result;
}

uint64_t sub_10013FE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B00;
  v2 = sub_100005574((uint64_t *)&unk_100491700);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A40;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100384A40;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v11 + 56) = v13;
  *(_QWORD *)(v11 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v11 + 72) = v14;
  v15 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v15, 1);

  *(_QWORD *)(v1 + 40) = v16;
  v17 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100384A60;
  *(_QWORD *)(v17 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(v17 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v17 + 56) = v19;
  v20 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v20, 1);

  *(_QWORD *)(v1 + 48) = v21;
  result = specialized Array._endMutation()(v22);
  qword_1004A21A0 = v1;
  return result;
}

uint64_t sub_10014006C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x747369747241, 0xE600000000000000);
}

void *sub_100140080()
{
  return sub_1000D4650((uint64_t)&off_10043EB08);
}

uint64_t sub_100140090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B70;
  v2 = sub_100005574((uint64_t *)&unk_100491700);
  v3 = swift_allocObject(v2, 80, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A40;
  v4 = MPModelRelationshipPlaylistEntrySong;
  *(_QWORD *)(v3 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v3 + 40) = v5;
  *(_QWORD *)(v3 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v3 + 56) = v6;
  *(_QWORD *)(v3 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v3 + 72) = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v9 = (void *)objc_opt_self(MPModelSortDescriptor);
  v10 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", isa, 1);

  *(_QWORD *)(v1 + 32) = v10;
  v11 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100384A60;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  *(_QWORD *)(v11 + 56) = v13;
  v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v9, "sortDescriptorWithKeyPath:ascending:", v14, 1);

  *(_QWORD *)(v1 + 40) = v15;
  result = specialized Array._endMutation()(v16);
  qword_1004A21A8 = v1;
  return result;
}

uint64_t sub_10014024C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x6D75626C41, 0xE500000000000000);
}

void *sub_100140260()
{
  return sub_1000D4650((uint64_t)&off_10043EC28);
}

uint64_t sub_100140270()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t result;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384B80;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0);

  *(_QWORD *)(v1 + 32) = v4;
  v5 = MPModelPropertySongDiscNumber;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongDiscNumber);
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 1);

  *(_QWORD *)(v1 + 40) = v8;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = objc_allocWithZone((Class)NSSortDescriptor);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, "initWithKey:ascending:", v10, 1);

  *(_QWORD *)(v1 + 48) = v11;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTrackNumber);
  v12 = objc_allocWithZone((Class)NSSortDescriptor);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, "initWithKey:ascending:", v13, 1);

  *(_QWORD *)(v1 + 56) = v14;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  v15 = objc_allocWithZone((Class)NSSortDescriptor);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, 1);

  *(_QWORD *)(v1 + 64) = v17;
  result = specialized Array._endMutation()(v18);
  qword_1004A21B0 = v1;
  return result;
}

uint64_t sub_1001404B8(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x796C746E65636552, 0xEE00646564644120);
}

void *sub_1001404DC()
{
  return sub_1000D4650((uint64_t)&off_10043EB80);
}

uint64_t sub_1001404EC(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x796C746E65636552, 0xEF646579616C5020);
}

void *sub_100140510()
{
  return sub_1000D4650((uint64_t)&off_10043EBB0);
}

uint64_t sub_10014051C(char a1)
{
  return sub_100141BD8(a1, &MPModelPropertyPlaylistLastDevicePlaybackDate, 516);
}

uint64_t sub_10014053C(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 0x7473696C79616C50, 0xED00006570795420);
}

void *sub_100140560()
{
  return sub_1000D4650((uint64_t)&off_10043EB30);
}

void *sub_10014056C(char a1)
{
  void *result;

  if ((a1 & 0xC0) == 0x80)
    return &_swiftEmptyArrayStorage;
  result = (void *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 538, 0);
  __break(1u);
  return result;
}

void *sub_1001405E0()
{
  return sub_1000D4650((uint64_t)&off_10043EBD8);
}

uint64_t sub_1001405EC(char a1)
{
  return sub_100141BD8(a1, &MPModelPropertyPlaylistLastModifiedDateComponents, 560);
}

uint64_t sub_10014060C(unsigned __int8 a1, char a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t result;

  v3 = a1 >> 6;
  if (!(a1 >> 6))
  {
    v10 = sub_100005574((uint64_t *)&unk_100491910);
    v5 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100384B70;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongYear);
    v11 = objc_allocWithZone((Class)NSSortDescriptor);
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v11, "initWithKey:ascending:", v12, a2 & 1);

    *(_QWORD *)(v5 + 32) = v13;
    v9 = &MPModelPropertySongTitle;
    goto LABEL_8;
  }
  if (v3 == 1)
  {
    v4 = sub_100005574((uint64_t *)&unk_100491910);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100384B70;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumYear);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, a2 & 1);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = &MPModelPropertyAlbumTitle;
LABEL_8:
    static String._unconditionallyBridgeFromObjectiveC(_:)(*v9);
    v18 = objc_allocWithZone((Class)NSSortDescriptor);
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, "initWithKey:ascending:", v19, 1);

    *(_QWORD *)(v5 + 40) = v20;
    specialized Array._endMutation()(v21);
    return v5;
  }
  if (v3 == 3 && a1 == 193)
  {
    v14 = sub_100005574((uint64_t *)&unk_100491910);
    v5 = swift_allocObject(v14, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100384B70;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyMovieReleaseDate);
    v15 = objc_allocWithZone((Class)NSSortDescriptor);
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v15, "initWithKey:ascending:", v16, a2 & 1);

    *(_QWORD *)(v5 + 32) = v17;
    v9 = &MPModelPropertyMovieTitle;
    goto LABEL_8;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 598, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001408E0(uint64_t a1, uint64_t a2)
{
  return sub_10005A328(a1, a2, 1918985561, 0xE400000000000000);
}

void *sub_1001408F0()
{
  return sub_1000D4650((uint64_t)&off_10043EC00);
}

uint64_t sub_1001408FC(unsigned __int8 a1)
{
  char *v1;

  return sub_10014060C(a1, *v1);
}

uint64_t sub_100140904()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0x20657361656C6552, 0xEC00000065746144);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t Gradient.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100140A7C(unsigned __int8 a1)
{
  char *v1;

  return sub_1001417E8(a1, *v1);
}

unint64_t NSUserDefaults.sortType(for:keyDomain:)(unsigned __int8 a1, uint64_t a2, void *a3)
{
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  void *object;
  void *v11;
  unint64_t v12;
  unint64_t result;
  Swift::String v14;
  __int128 v15;
  uint64_t v16;

  if (a3)
  {
    v14._countAndFlagsBits = sub_10013EDD0(a1);
    v14._object = v6;
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 45;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = a2;
    v8._object = a3;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    countAndFlagsBits = v14._countAndFlagsBits;
    object = v14._object;
  }
  else
  {
    countAndFlagsBits = sub_10013EDD0(a1);
    object = v11;
  }
  v14._countAndFlagsBits = countAndFlagsBits;
  v14._object = object;
  v12 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)&v14, (uint64_t)&type metadata for String, v12, &v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    sub_100098B58((uint64_t)&v15);
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v14, &v15, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0
    || (result = _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(v14), result == 13))
  {
LABEL_9:
    __asm { BR              X10 }
  }
  return result;
}

void NSUserDefaults.setSortType(_:for:keyDomain:)(unsigned __int8 a1, unsigned __int8 a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  __CFNotificationCenter *v29;
  __CFString *v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  if (a4)
  {
    v32 = sub_10013EDD0(a2);
    v33 = v8;
    swift_bridgeObjectRetain();
    v9._countAndFlagsBits = 45;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = a3;
    v10._object = a4;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v11 = v32;
    v12 = v33;
  }
  else
  {
    v11 = sub_10013EDD0(a2);
    v12 = v13;
  }
  if ((a2 & 0xC0) == 0x40)
  {
    v14 = (a2 & 0x3F) == 0;
    if (a4)
      goto LABEL_12;
  }
  else
  {
    Hasher.init(_seed:)(&v32);
    v15 = SortOptions.ContentType.identifier.getter(a2);
    String.hash(into:)(&v32, v15, v16);
    swift_bridgeObjectRelease();
    v17 = Hasher._finalize()();
    Hasher.init(_seed:)(&v32);
    String.hash(into:)(&v32, 0x736D75626C61, 0xE600000000000000);
    v14 = v17 == Hasher._finalize()();
    if (a4)
    {
LABEL_12:
      v23 = SortOptions.SortType.rawValue.getter(a1);
      v24 = v26;
      v25 = 0;
      goto LABEL_14;
    }
  }
  if (!v14)
    goto LABEL_12;
  v18 = NSUserDefaults.sortType(for:keyDomain:)(a2, a3, 0);
  v19 = SortOptions.SortType.rawValue.getter(v18);
  v21 = v20;
  v23 = SortOptions.SortType.rawValue.getter(a1);
  v24 = v22;
  if (v19 == v23 && v21 == v22)
  {
    swift_bridgeObjectRelease_n(v21, 2);
    v25 = 0;
  }
  else
  {
    v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v22, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v27 ^ 1;
  }
LABEL_14:
  v34 = &type metadata for String;
  v32 = v23;
  v33 = v24;
  v31[0] = v11;
  v31[1] = v12;
  v28 = sub_10000D478();
  NSUserDefaults.subscript.setter((uint64_t)&v32, (uint64_t)v31, (uint64_t)&type metadata for String, v28);
  if ((v25 & 1) != 0)
  {
    v29 = CFNotificationCenterGetDarwinNotifyCenter();
    v30 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterPostNotification(v29, v30, 0, 0, 1u);

  }
}

id MPModelPlaylist.canBeSorted.getter()
{
  void *v0;
  id result;

  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyAlbumLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyMovieLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertySongLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVEpisodeLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  if ((objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyTVSeasonLibraryAdded) & 1) != 0)
    return objc_msgSend(v0, "isLibraryAdded");
  result = objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyArtistLibraryAdded);
  if ((_DWORD)result)
    return objc_msgSend(v0, "isLibraryAdded");
  return result;
}

uint64_t MPModelPlaylist.sortStorageKeyDomain.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD v12[2];
  _QWORD v13[4];

  v1 = objc_msgSend(v0, "identifiers");
  v2 = objc_msgSend(v1, "universalStore");

  if (!v2)
    goto LABEL_8;
  v3 = objc_msgSend(v2, "globalPlaylistID");
  swift_unknownObjectRelease(v2);
  if (!v3)
    goto LABEL_8;
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v10 = objc_msgSend(v0, "identifiers");
    v9 = MPIdentifierSet.bestLibraryIdentifier.getter();

    return v9;
  }
  v13[2] = v4;
  v13[3] = v6;
  v13[0] = 46;
  v13[1] = 0xE100000000000000;
  v12[0] = 45;
  v12[1] = 0xE100000000000000;
  v8 = sub_10000D478();
  v9 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v13, v12, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v8, v8, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MPModelPlaylist.preferredTracklistSortDescriptors.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  if ((MPModelPlaylist.canBeSorted.getter() & 1) == 0)
    return 0;
  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = objc_msgSend(v0, "sortStorageKeyDomain");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v8 = NSUserDefaults.sortType(for:keyDomain:)(0xC2u, v4, v6);

  swift_bridgeObjectRelease();
  sub_10013DEB0(v8);
  v9 = v13;
  v10 = v14;
  sub_10000ABC8(v12, v13);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(194, v9, v10);
  sub_10000682C(v12);
  return v7;
}

uint64_t sub_100141288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.sortOptions);
  sub_1000086B4(v2, (uint64_t)static Logger.sortOptions);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x6974704F74726F53, 0xEB00000000736E6FLL);
}

uint64_t Logger.sortOptions.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C850 != -1)
    swift_once(&qword_10048C850, sub_100141288);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.sortOptions);
}

uint64_t static Logger.sortOptions.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C850 != -1)
    swift_once(&qword_10048C850, sub_100141288);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.sortOptions);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

uint64_t _s9MusicCore11SortOptionsV11ContentTypeO2eeoiySbAE_AEtFZ_0(int a1, int a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  int v4;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[9];

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 6;
  if (a1 >> 6)
  {
    if (v4 == 1)
    {
      if ((a2 & 0xC0) == 0x40)
        return ((a2 ^ a1) & 0x3F) == 0;
    }
    else if (v4 == 3 && a1 == 192 && a2 == 192)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return ((a2 ^ a1) & 1) == 0;
  }
  Hasher.init(_seed:)(v12);
  v7 = SortOptions.ContentType.identifier.getter(v3);
  String.hash(into:)(v12, v7, v8);
  swift_bridgeObjectRelease();
  v9 = Hasher._finalize()();
  Hasher.init(_seed:)(v12);
  v10 = SortOptions.ContentType.identifier.getter(v2);
  String.hash(into:)(v12, v10, v11);
  swift_bridgeObjectRelease();
  return v9 == Hasher._finalize()();
}

uint64_t sub_1001414D8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v13[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003B2A00);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v10 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v2, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t sub_100141644(unsigned __int8 a1)
{
  int v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = a1 >> 6;
  if (!(a1 >> 6))
    goto LABEL_8;
  if (v1 == 1)
  {
    if (qword_10048C830 != -1)
      swift_once(&qword_10048C830, sub_10013FCB0);
    v2 = qword_1004A2198;
LABEL_11:
    swift_bridgeObjectRetain();
    return v2;
  }
  if (v1 != 3)
    goto LABEL_22;
  if (a1 == 192)
  {
LABEL_8:
    if (qword_10048C828 != -1)
      swift_once(&qword_10048C828, sub_10013F9D8);
    v2 = qword_1004A2190;
    goto LABEL_11;
  }
  if (a1 == 194)
  {
    if (qword_10048C838 != -1)
      swift_once(&qword_10048C838, sub_10013FE1C);
    v2 = qword_1004A21A0;
    if (!((unint64_t)qword_1004A21A0 >> 62))
    {
      v4 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
      sub_100142898();
      return v2;
    }
    if (qword_1004A21A0 < 0)
      v5 = qword_1004A21A0;
    else
      v5 = qword_1004A21A0 & 0xFFFFFFFFFFFFFF8;
    v6 = sub_100142898();
    swift_bridgeObjectRetain();
    v7 = _bridgeCocoaArray<A>(_:)(v5, v6);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
LABEL_22:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 423, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001417E8(unsigned __int8 a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  id v18;
  uint64_t v19;
  uint64_t result;

  if (a1 == 194)
  {
    v3 = sub_100005574((uint64_t *)&unk_100491910);
    v4 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100384B70;
    v5 = sub_100005574((uint64_t *)&unk_100491700);
    v6 = swift_allocObject(v5, 80, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100384A40;
    v7 = MPModelRelationshipPlaylistEntrySong;
    *(_QWORD *)(v6 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
    *(_QWORD *)(v6 + 40) = v8;
    *(_QWORD *)(v6 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
    *(_QWORD *)(v6 + 56) = v9;
    *(_QWORD *)(v6 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumReleaseDateComponents);
    *(_QWORD *)(v6 + 72) = v10;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v12 = (void *)objc_opt_self(MPModelSortDescriptor);
    v13 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", isa, a2 & 1);

    *(_QWORD *)(v4 + 32) = v13;
    v14 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100384A60;
    *(_QWORD *)(v14 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    *(_QWORD *)(v14 + 40) = v15;
    *(_QWORD *)(v14 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
    *(_QWORD *)(v14 + 56) = v16;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v12, "sortDescriptorWithKeyPath:ascending:", v17, 1);

    *(_QWORD *)(v4 + 40) = v18;
    specialized Array._endMutation()(v19);
    return v4;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 622, 0);
    __break(1u);
  }
  return result;
}

void sub_1001419F8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_100141A28()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;

  v0 = sub_100005574((uint64_t *)&unk_100491910);
  v1 = swift_allocObject(v0, 40, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384730;
  static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumLibraryAddedDate);
  v2 = objc_allocWithZone((Class)NSSortDescriptor);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, "initWithKey:ascending:", v3, 0);

  *(_QWORD *)(v1 + 32) = v4;
  specialized Array._endMutation()(v5);
  return v1;
}

uint64_t sub_100141BD8(char a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t result;

  if ((a1 & 0xC0) == 0x80)
  {
    v4 = sub_100005574((uint64_t *)&unk_100491910);
    v5 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100384730;
    static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0);

    *(_QWORD *)(v5 + 32) = v8;
    specialized Array._endMutation()(v9);
    return v5;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, a3, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100141CEC(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (a1 == 194)
  {
    if (qword_10048C840 != -1)
      swift_once(&qword_10048C840, sub_100140090);
    v1 = qword_1004A21A8;
    if ((unint64_t)qword_1004A21A8 >> 62)
    {
      if (qword_1004A21A8 < 0)
        v4 = qword_1004A21A8;
      else
        v4 = qword_1004A21A8 & 0xFFFFFFFFFFFFFF8;
      v5 = sub_100142898();
      swift_bridgeObjectRetain();
      v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
      swift_bridgeObjectRelease();
      return v6;
    }
    else
    {
      v2 = swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
      sub_100142898();
      return v1;
    }
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001003B29D0, "MusicCore/SortOptions.swift", 27, 2, 449, 0);
    __break(1u);
  }
  return result;
}

_QWORD *sub_100141E00(unsigned __int8 a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = a1 >> 6;
  if (v1 < 2)
    return _swiftEmptyArrayStorage;
  if (v1 == 2)
  {
    v2 = sub_100005574((uint64_t *)&unk_100491910);
    v3 = swift_allocObject(v2, 40, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100384730;
    static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
    v4 = objc_allocWithZone((Class)NSSortDescriptor);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, "initWithKey:ascending:", v5, 1);

    *(_QWORD *)(v3 + 32) = v6;
    specialized Array._endMutation()(v7);
    return (_QWORD *)v3;
  }
  if ((a1 & 0xFE) == 0xC0)
    return _swiftEmptyArrayStorage;
  if (qword_10048C820 != -1)
    swift_once(&qword_10048C820, sub_10013F7F8);
  v3 = qword_1004A2188;
  if (!((unint64_t)qword_1004A2188 >> 62))
  {
    v9 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    sub_100142898();
    return (_QWORD *)v3;
  }
  if (qword_1004A2188 < 0)
    v10 = qword_1004A2188;
  else
    v10 = qword_1004A2188 & 0xFFFFFFFFFFFFFF8;
  v11 = sub_100142898();
  swift_bridgeObjectRetain();
  v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
  swift_bridgeObjectRelease();
  return (_QWORD *)v12;
}

unint64_t _s9MusicCore11SortOptionsV0C4TypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043EC80, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xD)
    return 13;
  else
    return v3;
}

unint64_t sub_100141FD4()
{
  unint64_t result;

  result = qword_100492920;
  if (!qword_100492920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.SortType, &type metadata for SortOptions.SortType);
    atomic_store(result, (unint64_t *)&qword_100492920);
  }
  return result;
}

unint64_t sub_10014201C()
{
  unint64_t result;

  result = qword_100492928;
  if (!qword_100492928)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ContentType, &type metadata for SortOptions.ContentType);
    atomic_store(result, (unint64_t *)&qword_100492928);
  }
  return result;
}

unint64_t sub_100142064()
{
  unint64_t result;

  result = qword_100492930;
  if (!qword_100492930)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Albums, &type metadata for SortOptions.ViewType.Albums);
    atomic_store(result, (unint64_t *)&qword_100492930);
  }
  return result;
}

unint64_t sub_1001420AC()
{
  unint64_t result;

  result = qword_100492938;
  if (!qword_100492938)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.MusicVideos, &type metadata for SortOptions.ViewType.MusicVideos);
    atomic_store(result, (unint64_t *)&qword_100492938);
  }
  return result;
}

unint64_t sub_1001420F4()
{
  unint64_t result;

  result = qword_100492940;
  if (!qword_100492940)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Playlists, &type metadata for SortOptions.ViewType.Playlists);
    atomic_store(result, (unint64_t *)&qword_100492940);
  }
  return result;
}

unint64_t sub_10014213C()
{
  unint64_t result;

  result = qword_100492948;
  if (!qword_100492948)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SortOptions.ViewType.Detail, &type metadata for SortOptions.ViewType.Detail);
    atomic_store(result, (unint64_t *)&qword_100492948);
  }
  return result;
}

ValueMetadata *type metadata accessor for SortOptions()
{
  return &type metadata for SortOptions;
}

uint64_t storeEnumTagSinglePayload for SortOptions.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1001421DC + 4 * byte_10038D4F8[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_100142210 + 4 * byte_10038D4F3[v4]))();
}

uint64_t sub_100142210(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100142218(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100142220);
  return result;
}

uint64_t sub_10014222C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100142234);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100142238(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100142240(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.SortType()
{
  return &type metadata for SortOptions.SortType;
}

uint64_t getEnumTagSinglePayload for SortOptions.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1D)
    goto LABEL_17;
  if (a2 + 227 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 227) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 227;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 227;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 227;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ContentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 227 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 227) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1C)
    return ((uint64_t (*)(void))((char *)&loc_100142348 + 4 * byte_10038D502[v4]))();
  *a1 = a2 - 29;
  return ((uint64_t (*)(void))((char *)sub_10014237C + 4 * byte_10038D4FD[v4]))();
}

uint64_t sub_10014237C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100142384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10014238CLL);
  return result;
}

uint64_t sub_1001423A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001423ACLL);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_1001423B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001423B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001423C4(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = v1 >> 6;
  v3 = (v1 & 7) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_1001423E0(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1001423F0(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = (a2 + 5) & 7 | 0xC0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ContentType()
{
  return &type metadata for SortOptions.ContentType;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType()
{
  return &type metadata for SortOptions.ViewType;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Albums(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10014248C + 4 * byte_10038D50C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001424C0 + 4 * byte_10038D507[v4]))();
}

uint64_t sub_1001424C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001424C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001424D0);
  return result;
}

uint64_t sub_1001424DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001424E4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001424E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001424F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Albums()
{
  return &type metadata for SortOptions.ViewType.Albums;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.MusicVideos()
{
  return &type metadata for SortOptions.ViewType.MusicVideos;
}

uint64_t _s9MusicCore11SortOptionsV8ViewTypeV11MusicVideosOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10014256C + 4 * byte_10038D516[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001425A0 + 4 * byte_10038D511[v4]))();
}

uint64_t sub_1001425A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001425A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001425B0);
  return result;
}

uint64_t sub_1001425BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001425C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001425C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001425D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Playlists()
{
  return &type metadata for SortOptions.ViewType.Playlists;
}

uint64_t storeEnumTagSinglePayload for SortOptions.ViewType.Detail(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10014262C + 4 * byte_10038D51B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10014264C + 4 * byte_10038D520[v4]))();
}

_BYTE *sub_10014262C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10014264C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100142654(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10014265C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100142664(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10014266C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SortOptions.ViewType.Detail()
{
  return &type metadata for SortOptions.ViewType.Detail;
}

ValueMetadata *type metadata accessor for TitleSort()
{
  return &type metadata for TitleSort;
}

ValueMetadata *type metadata accessor for ArtistSort()
{
  return &type metadata for ArtistSort;
}

ValueMetadata *type metadata accessor for AlbumSort()
{
  return &type metadata for AlbumSort;
}

ValueMetadata *type metadata accessor for PlaylistOrderSort()
{
  return &type metadata for PlaylistOrderSort;
}

ValueMetadata *type metadata accessor for PlaylistTypeSort()
{
  return &type metadata for PlaylistTypeSort;
}

ValueMetadata *type metadata accessor for RecentlyAddedSort()
{
  return &type metadata for RecentlyAddedSort;
}

ValueMetadata *type metadata accessor for RecentlyPlayedSort()
{
  return &type metadata for RecentlyPlayedSort;
}

ValueMetadata *type metadata accessor for RecentlyUpdatedSort()
{
  return &type metadata for RecentlyUpdatedSort;
}

uint64_t _s9MusicCore17PlaylistOrderSortVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10014275C + 4 * byte_10038D52A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100142790 + 4 * byte_10038D525[v4]))();
}

uint64_t sub_100142790(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100142798(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001427A0);
  return result;
}

uint64_t sub_1001427AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001427B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001427B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001427C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YearSort()
{
  return &type metadata for YearSort;
}

uint64_t initializeBufferWithCopyOfBuffer for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t assignWithTake for ReleaseDateSort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

ValueMetadata *type metadata accessor for ReleaseDateSort()
{
  return &type metadata for ReleaseDateSort;
}

unint64_t sub_100142898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100490B70;
  if (!qword_100490B70)
  {
    v1 = objc_opt_self(NSSortDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100490B70);
  }
  return result;
}

id MPModelPlaylist.preferredArtworkCatalog.getter()
{
  void *v0;
  unint64_t v1;
  id result;
  id v3;

  if (!objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
    goto LABEL_8;
  v1 = (unint64_t)objc_msgSend(v0, "type");
  if (v1 > 8)
    goto LABEL_8;
  if (((1 << v1) & 0x173) != 0)
  {
    result = MPModelPlaylist.coverArtworkCatalog.getter();
    if (!result)
    {
      result = objc_msgSend(v0, "artworkCatalog");
      if (!result)
      {
        if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistTracksTiledArtwork))
        {
          v3 = objc_msgSend(v0, "tracksTiledArtworkCatalogWithRows:columns:", 2, 2);
          return v3;
        }
        return 0;
      }
    }
    return result;
  }
  if (v1 == 3)
    return 0;
  if (v1 != 7
    || !objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistEditorialArtwork)
    || (result = objc_msgSend(v0, "editorialArtworkCatalog")) == 0)
  {
LABEL_8:
    v3 = objc_msgSend(v0, "artworkCatalog");
    return v3;
  }
  return result;
}

uint64_t static MPModelPlaylist.artworkPlaceholderSystemImageName(for:)(uint64_t a1, char a2)
{
  uint64_t result;
  unint64_t v4;

  result = 0x6F6E2E636973756DLL;
  if ((a2 & 1) == 0)
  {
    v4 = a1 - 1;
    if (v4 <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * v4];
  }
  return result;
}

uint64_t MPModelPlaylist.artworkPlaceholderImage.getter()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v1 = 0x6F6E2E636973756DLL;
  if (objc_msgSend(v0, "hasLoadedValueForKey:", MPModelPropertyPlaylistType))
  {
    v2 = (char *)objc_msgSend(v0, "type");
    if ((unint64_t)(v2 - 1) <= 2)
      return *(_QWORD *)&aGearshapgenius[8 * (_QWORD)(v2 - 1)];
  }
  return v1;
}

char *ModelObjectBackedStoreItemMetadata.__allocating_init(modelObject:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ModelObjectBackedStoreItemMetadata.init(modelObject:)(a1);
}

char *ModelObjectBackedStoreItemMetadata.init(modelObject:)(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  uint64_t ObjectType;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void **v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26[24];
  objc_super v27;

  v3 = OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  objc_opt_self(MPModelGenericObject);
  v5 = swift_dynamicCastObjCClass(a1);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = v1;
    v8 = objc_msgSend(v6, "anyObject");
    goto LABEL_5;
  }
  objc_opt_self(MPModelStoreBrowseContentItem);
  v9 = (void *)swift_dynamicCastObjCClass(a1);
  v10 = v1;
  if (v9)
  {
    v8 = objc_msgSend(v9, "innerObject");
LABEL_5:
    v11 = v8;
    if (v11)
      goto LABEL_7;
  }
  v11 = a1;
LABEL_7:
  ObjectType = swift_getObjectType();
  v13 = objc_msgSend(v11, "identifiers");
  v14 = sub_10009ACF0(ObjectType, 2, 0, v13);
  v16 = v15;

  if (v16)
  {

    v27.receiver = v1;
    v27.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
    v17 = (char *)objc_msgSendSuper2(&v27, "init");
    v18 = (void **)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v26, 1, 0);
    v19 = *v18;
    *v18 = a1;

    v20 = (uint64_t *)&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
    swift_beginAccess(&v17[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v25, 1, 0);
    v21 = v20[1];
    *v20 = v14;
    v20[1] = v16;
    swift_bridgeObjectRelease(v21);
  }
  else
  {

    v22 = *((_QWORD *)v4 + 1);
    swift_bridgeObjectRelease(v22);
    v23 = type metadata accessor for ModelObjectBackedStoreItemMetadata();
    swift_deallocPartialClassInstance(v1, v23, 32, 7);
    return 0;
  }
  return v17;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_1001434F8(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(downloadAssetDictionary:)(uint64_t a1)
{
  return sub_100143584(a1, (SEL *)&selRef_initWithDownloadAssetDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_1001434F8(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:)(uint64_t a1)
{
  return sub_100143584(a1, (SEL *)&selRef_initWithStorePlatformDictionary_);
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:)(uint64_t a1, void *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, "initWithStorePlatformDictionary:parentStoreItemMetadata:", isa, a2);

  return v6;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  objc_class *v3;
  NSDictionary v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;

  v3 = v2;
  v6.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  }
  v10 = objc_msgSend(objc_allocWithZone(v3), "initWithStorePlatformDictionary:expirationDate:", v6.super.isa, isa);

  return v10;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:expirationDate:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  NSDictionary v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  objc_class *v13;
  id v14;
  objc_super v16;

  v3 = v2;
  v5 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v8 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000C1F58(a2, (uint64_t)v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  v13 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v16.receiver = v3;
  v16.super_class = v13;
  v14 = objc_msgSendSuper2(&v16, "initWithStorePlatformDictionary:expirationDate:", v9.super.isa, isa);

  sub_100008758(a2, &qword_100490730);
  return v14;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  NSDictionary v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v4 = v3;
  v8.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a3, 1, v9) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  }
  v12 = objc_msgSend(objc_allocWithZone(v4), "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v8.super.isa, a2, isa);

  return v12;
}

id ModelObjectBackedStoreItemMetadata.init(storePlatformDictionary:parentStoreItemMetadata:expirationDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v4;

  v4 = sub_10014B478(a1, (uint64_t)a2, a3);

  return v4;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_1001434F8(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_1001434F8(uint64_t a1, SEL *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, *a2, isa);

  return v7;
}

id ModelObjectBackedStoreItemMetadata.init(storeMusicAPIDictionary:)(uint64_t a1)
{
  return sub_100143584(a1, (SEL *)&selRef_initWithStoreMusicAPIDictionary_);
}

id sub_100143584(uint64_t a1, SEL *a2)
{
  char *v2;
  char *v4;
  Class isa;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v4 = &v2[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v6 = objc_msgSendSuper2(&v8, *a2, isa);

  return v6;
}

id sub_10014362C(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  char *v6;
  Class isa;
  id v8;
  objc_super v10;

  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  *(_QWORD *)&a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v6 = &a1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v8 = objc_msgSendSuper2(&v10, *a4, isa);

  return v8;
}

id UIStackView.SpacerView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void ModelObjectBackedStoreItemMetadata.init(coder:)()
{
  char *v0;
  char *v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v1 = &v0[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 49, 0);
  __break(1u);
}

void *ModelObjectBackedStoreItemMetadata.modelObject.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void ModelObjectBackedStoreItemMetadata.modelObject.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObject.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ModelObjectBackedStoreItemMetadata.modelObjectStoreID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*ModelObjectBackedStoreItemMetadata.modelObjectStoreID.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *ModelObjectBackedStoreItemMetadata.appending(_:)(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  char v15[24];
  char v16[24];
  char v17[24];
  objc_super v18;

  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v3 = (char *)objc_msgSendSuper2(&v18, "metadataByAppendingMetadata:", a1);
  v4 = (void **)&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v17, 0, 0);
  v5 = *v4;
  v6 = (void **)&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject], v16, 1, 0);
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

  v9 = &v1[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(v9, v15, 0, 0);
  v11 = *(_QWORD *)v9;
  v10 = *((_QWORD *)v9 + 1);
  v12 = &v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  swift_beginAccess(&v3[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID], &v14, 1, 0);
  *(_QWORD *)v12 = v11;
  *((_QWORD *)v12 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

void ModelObjectBackedStoreItemMetadata.artistName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044D720, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044D748, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B600;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B0290;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044D760;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 64, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100143CAC(uint64_t a1, _QWORD *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _BYTE v26[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v26, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "artist");
      v10 = v9;
      if (v9)
        goto LABEL_7;
      goto LABEL_9;
    }
    objc_opt_self(MPModelSong);
    v11 = swift_dynamicCastObjCClass(v5);
    if (v11)
    {
      v12 = (void *)v11;
      v8 = v5;
      v9 = objc_msgSend(v12, "artist");
      v10 = v9;
      if (v9)
      {
LABEL_7:
        v13 = objc_msgSend(v9, "name");

        if (v13)
        {
          v10 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
          v15 = v14;

LABEL_12:
          v16 = a2[1];
          *a2 = v10;
          a2[1] = v15;
          return swift_bridgeObjectRelease(v16);
        }

        v10 = 0;
LABEL_11:
        v15 = 0;
        goto LABEL_12;
      }
LABEL_9:

      goto LABEL_11;
    }
    objc_opt_self(MPModelTVEpisode);
    result = swift_dynamicCastObjCClass(v5);
    if (result)
    {
      v17 = (void *)result;
      v18 = v5;
      v19 = objc_msgSend(v17, "show");
      if (v19)
        goto LABEL_17;
      v25 = objc_msgSend(v17, "season");
      v22 = v25;
      if (!v25)
      {

        goto LABEL_25;
      }
      v19 = objc_msgSend(v25, "show");

      if (v19)
      {
LABEL_17:
        v20 = objc_msgSend(v19, "title");
        if (v20)
        {
          v21 = v20;
          v22 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v24 = v23;

LABEL_26:
          v16 = a2[1];
          *a2 = v22;
          a2[1] = v24;
          return swift_bridgeObjectRelease(v16);
        }

      }
      v22 = 0;
LABEL_25:
      v24 = 0;
      goto LABEL_26;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.artistStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  char isEscapingClosureAtFileLocation;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t ObjectType;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  void *v27;

  v27 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_10044D798, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v27;
  v5 = swift_allocObject(&unk_10044D7C0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10014B630;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1000B04E0;
  v26 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044D7D8;
  v6 = _Block_copy(aBlock);
  v7 = v26;
  v8 = v1;
  swift_retain(v5);
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 84, 49, 1, v9);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v11 = v27;
    if (!v27)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v12 = swift_dynamicCastObjCClass(v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = v11;
      v15 = objc_msgSend(v13, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v16 = (void *)swift_dynamicCastObjCClass(v11);
      v17 = v11;
      if (!v16)
      {
LABEL_8:
        v18 = v11;
LABEL_9:
        ObjectType = swift_getObjectType();
        v20 = objc_msgSend(v18, "identifiers");
        v21 = sub_10009ACF0(ObjectType, 2, 0, v20);
        v23 = v22;

        if (v23)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v21;
          *(_QWORD *)(a1 + 8) = v23;
LABEL_12:
          v24 = v27;
          swift_release(v4);

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v15 = objc_msgSend(v16, "innerObject");
    }
    v18 = v15;
    if (v18)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10014417C(uint64_t a1, void **a2)
{
  void **v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v14, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5 || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "artist");
LABEL_5:
      v7 = *a2;
      *a2 = v6;

      return;
    }
    objc_opt_self(MPModelTVEpisode);
    v8 = swift_dynamicCastObjCClass(v4);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v4;
      v11 = objc_msgSend(v9, "show");
      if (v11)
      {
        v6 = v11;

      }
      else
      {
        v12 = objc_msgSend(v9, "season");
        if (v12)
        {
          v13 = v12;
          v6 = objc_msgSend(v12, "show");

        }
        else
        {

          v6 = 0;
        }
      }
      goto LABEL_5;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.audioTraits.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  _QWORD *v11;

  v11 = _swiftEmptyArrayStorage;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044D810, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044D838, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B648;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044D850;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 104, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_10014447C(uint64_t a1, char **a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  char *v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v65, 0, 0);
  v4 = *v3;
  if (!v4)
    return;
  objc_opt_self(MPModelAlbum);
  v5 = swift_dynamicCastObjCClass(v4);
  if (v5)
    goto LABEL_3;
  objc_opt_self(MPModelPlaylist);
  v28 = swift_dynamicCastObjCClass(v4);
  if (!v28)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (!v5)
      return;
LABEL_3:
    v6 = (void *)v5;
    v7 = v4;
    if ((objc_msgSend(v6, "traits") & 0x10) != 0)
    {
      v8 = *a2;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_10003DE28(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        *a2 = v8;
      }
      v10 = *((_QWORD *)v8 + 2);
      v11 = *((_QWORD *)v8 + 3);
      v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        v62 = v10 + 1;
        v50 = v8;
        v51 = *((_QWORD *)v8 + 2);
        v52 = sub_10003DE28((char *)(v11 > 1), v10 + 1, 1, v50);
        v10 = v51;
        v12 = v62;
        v8 = v52;
        *a2 = v52;
      }
      *((_QWORD *)v8 + 2) = v12;
      v13 = &v8[16 * v10];
      *((_QWORD *)v13 + 4) = 0x736F6D7461;
      *((_QWORD *)v13 + 5) = 0xE500000000000000;
    }
    if ((objc_msgSend(v6, "traits", v62) & 4) != 0)
    {
      v14 = *a2;
      v15 = swift_isUniquelyReferenced_nonNull_native(*a2);
      *a2 = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_10003DE28(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
        *a2 = v14;
      }
      v16 = *((_QWORD *)v14 + 2);
      v17 = *((_QWORD *)v14 + 3);
      v18 = v16 + 1;
      if (v16 >= v17 >> 1)
      {
        v63 = v16 + 1;
        v53 = v14;
        v54 = *((_QWORD *)v14 + 2);
        v55 = sub_10003DE28((char *)(v17 > 1), v16 + 1, 1, v53);
        v16 = v54;
        v18 = v63;
        v14 = v55;
        *a2 = v55;
      }
      *((_QWORD *)v14 + 2) = v18;
      v19 = &v14[16 * v16];
      *((_QWORD *)v19 + 4) = 0x6C2D7365722D6968;
      *((_QWORD *)v19 + 5) = 0xEF7373656C73736FLL;
    }
    if ((objc_msgSend(v6, "traits", v63) & 2) == 0)
      goto LABEL_29;
    v20 = *a2;
    v21 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v20;
    if ((v21 & 1) == 0)
    {
      v20 = sub_10003DE28(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      *a2 = v20;
    }
    v22 = *((_QWORD *)v20 + 2);
    v23 = *((_QWORD *)v20 + 3);
    v24 = v22 + 1;
    if (v22 >= v23 >> 1)
    {
      v62 = v22 + 1;
      v56 = v20;
      v57 = *((_QWORD *)v20 + 2);
      v58 = sub_10003DE28((char *)(v23 > 1), v22 + 1, 1, v56);
      v22 = v57;
      v24 = v62;
      v20 = v58;
      *a2 = v58;
    }
    *((_QWORD *)v20 + 2) = v24;
    v25 = &v20[16 * v22];
    v26 = 0x7373656C73736F6CLL;
    v27 = 0xE800000000000000;
    goto LABEL_28;
  }
  v6 = (void *)v28;
  v29 = v4;
  if ((objc_msgSend(v6, "traits") & 0x10) != 0)
  {
    v30 = *a2;
    v31 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v30;
    if ((v31 & 1) == 0)
    {
      v30 = sub_10003DE28(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
      *a2 = v30;
    }
    v32 = *((_QWORD *)v30 + 2);
    v33 = *((_QWORD *)v30 + 3);
    v34 = v32 + 1;
    if (v32 >= v33 >> 1)
    {
      v62 = v32 + 1;
      v59 = v30;
      v60 = *((_QWORD *)v30 + 2);
      v61 = sub_10003DE28((char *)(v33 > 1), v32 + 1, 1, v59);
      v32 = v60;
      v34 = v62;
      v30 = v61;
      *a2 = v61;
    }
    *((_QWORD *)v30 + 2) = v34;
    v25 = &v30[16 * v32];
    v26 = 0x736F6D7461;
    v27 = 0xE500000000000000;
LABEL_28:
    *((_QWORD *)v25 + 4) = v26;
    *((_QWORD *)v25 + 5) = v27;
  }
LABEL_29:
  if ((objc_msgSend(v6, "traits", v62) & 8) != 0)
  {
    v35 = *a2;
    v36 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v35;
    if ((v36 & 1) == 0)
    {
      v35 = sub_10003DE28(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
      *a2 = v35;
    }
    v37 = *((_QWORD *)v35 + 2);
    v38 = *((_QWORD *)v35 + 3);
    v39 = v37 + 1;
    if (v37 >= v38 >> 1)
    {
      v64 = v37 + 1;
      v47 = v35;
      v48 = *((_QWORD *)v35 + 2);
      v49 = sub_10003DE28((char *)(v38 > 1), v37 + 1, 1, v47);
      v37 = v48;
      v39 = v64;
      v35 = v49;
      *a2 = v49;
    }
    *((_QWORD *)v35 + 2) = v39;
    v40 = &v35[16 * v37];
    *((_QWORD *)v40 + 4) = 0x6C616974617073;
    *((_QWORD *)v40 + 5) = 0xE700000000000000;
  }
  if ((objc_msgSend(v6, "traits", v64) & 0x20) != 0)
  {
    v41 = *a2;
    v42 = swift_isUniquelyReferenced_nonNull_native(*a2);
    *a2 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_10003DE28(0, *((_QWORD *)v41 + 2) + 1, 1, v41);
      *a2 = v41;
    }
    v44 = *((_QWORD *)v41 + 2);
    v43 = *((_QWORD *)v41 + 3);
    v45 = v44 + 1;
    if (v44 >= v43 >> 1)
    {
      v41 = sub_10003DE28((char *)(v43 > 1), v45, 1, v41);
      *a2 = v41;
      v45 = v44 + 1;
    }
    *((_QWORD *)v41 + 2) = v45;
    v46 = &v41[16 * v44];
    *((_QWORD *)v46 + 4) = 0x646E756F72727573;
    *((_QWORD *)v46 + 5) = 0xE800000000000000;
  }

}

void ModelObjectBackedStoreItemMetadata.isBeats1.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044D888, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044D8B0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B660;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044D8C8;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 166, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.collectionName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044D900, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044D928, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B698;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044D940;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 181, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.collectionStoreID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  char isEscapingClosureAtFileLocation;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t ObjectType;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD aBlock[5];
  uint64_t v26;
  void *v27;

  v27 = 0;
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_10044D978, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = &v27;
  v5 = swift_allocObject(&unk_10044D9A0, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10014B6D0;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1000B04E0;
  v26 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044D9B8;
  v6 = _Block_copy(aBlock);
  v7 = v26;
  v8 = v1;
  swift_retain(v5);
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 196, 49, 1, v9);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v11 = v27;
    if (!v27)
      goto LABEL_11;
    objc_opt_self(MPModelGenericObject);
    v12 = swift_dynamicCastObjCClass(v11);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = v11;
      v15 = objc_msgSend(v13, "anyObject");
    }
    else
    {
      objc_opt_self(MPModelStoreBrowseContentItem);
      v16 = (void *)swift_dynamicCastObjCClass(v11);
      v17 = v11;
      if (!v16)
      {
LABEL_8:
        v18 = v11;
LABEL_9:
        ObjectType = swift_getObjectType();
        v20 = objc_msgSend(v18, "identifiers");
        v21 = sub_10009ACF0(ObjectType, 2, 0, v20);
        v23 = v22;

        if (v23)
        {
          *(_QWORD *)(a1 + 24) = &type metadata for String;
          *(_QWORD *)a1 = v21;
          *(_QWORD *)(a1 + 8) = v23;
LABEL_12:
          v24 = v27;
          swift_release(v4);

          return;
        }
LABEL_11:
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        goto LABEL_12;
      }
      v15 = objc_msgSend(v16, "innerObject");
    }
    v18 = v15;
    if (v18)
      goto LABEL_9;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_100144E70(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char **v6;
  id v7;
  void *v8;
  _BYTE v9[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v9, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = &selRef_album;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      v5 = (void *)swift_dynamicCastObjCClass(v4);
      if (!v5)
        return;
      v6 = &selRef_season;
    }
    v7 = objc_msgSend(v5, *v6);
    v8 = *a2;
    *a2 = v7;

  }
}

void ModelObjectBackedStoreItemMetadata.isCompilation.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044D9F0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DA18, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B6E8;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DA30;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 214, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.composerName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DA68, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DA90, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B720;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DAA8;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 229, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_1001451EC(uint64_t a1, uint64_t *a2, SEL *a3, SEL *a4)
{
  void **v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(MPModelSong);
    result = swift_dynamicCastObjCClass(v9);
    if (result)
    {
      v10 = (void *)result;
      v11 = v9;
      v12 = objc_msgSend(v10, *a3);
      v13 = v12;
      if (v12)
      {
        v14 = objc_msgSend(v12, *a4);

        if (v14)
        {
          v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
          v13 = v16;

        }
        else
        {

          v15 = 0;
          v13 = 0;
        }
      }
      else
      {

        v15 = 0;
      }
      v17 = a2[1];
      *a2 = v15;
      a2[1] = (uint64_t)v13;
      return swift_bridgeObjectRelease(v17);
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.copyrightText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DAE0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DB08, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B758;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DB20;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 244, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.curatorName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DB58, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DB80, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B79C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DB98;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 261, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_1001455AC(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v19, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelPlaylist);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "curator");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "name");
        if (v10)
        {
          v11 = v10;
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
          v14 = v13;

        }
        else
        {
          v15 = objc_msgSend(v9, "shortName");
          if (v15)
          {
            v16 = v15;
            v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
            v14 = v17;

          }
          else
          {

            v12 = 0;
            v14 = 0;
          }
        }
        v18 = a2[1];
        *a2 = v12;
        a2[1] = v14;
        swift_bridgeObjectRelease(v18);
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.descriptionText.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DBD0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DBF8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B7B4;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DC10;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 278, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100145850(uint64_t a1, uint64_t *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char v20[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v20, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "descriptionText");
      if (!v9)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v10 = swift_dynamicCastObjCClass(v5);
      if (v10)
      {
        v11 = (void *)v10;
        v8 = v5;
        v9 = objc_msgSend(v11, "descriptionText");
        if (!v9)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v12 = swift_dynamicCastObjCClass(v5);
        if (v12)
        {
          v13 = (void *)v12;
          v8 = v5;
          v9 = objc_msgSend(v13, "descriptionText");
          if (!v9)
          {
LABEL_13:

            v15 = 0;
            v17 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelTVSeason);
          result = swift_dynamicCastObjCClass(v5);
          if (!result)
            return result;
          v18 = (void *)result;
          v8 = v5;
          v9 = objc_msgSend(v18, "descriptionText");
          if (!v9)
            goto LABEL_13;
        }
      }
    }
    v14 = v9;
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v17 = v16;

LABEL_14:
    v19 = a2[1];
    *a2 = v15;
    a2[1] = v17;
    return swift_bridgeObjectRelease(v19);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.discCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DC48, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DC70, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B7CC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DC88;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 299, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.discNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DCC0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DCE8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B804;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DD00;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 314, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.duration.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DD38, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DD60, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B83C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DD78;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 329, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_100145E64(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result
      || (objc_opt_self(MPModelSong), (result = (id)swift_dynamicCastObjCClass(v5)) != 0)
      || (objc_opt_self(MPModelTVEpisode), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "duration");
      *a2 = v6;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.editorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DDB0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DDD8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B854;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DDF0;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 348, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100146068(uint64_t a1, uint64_t *a2, SEL *a3)
{
  void **v5;
  uint64_t result;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char v22[24];

  v5 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v22, 0, 0);
  v7 = *v5;
  if (v7)
  {
    objc_opt_self(MPModelAlbum);
    v8 = swift_dynamicCastObjCClass(v7);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = v7;
      v11 = objc_msgSend(v9, *a3);
      if (!v11)
        goto LABEL_13;
    }
    else
    {
      objc_opt_self(MPModelCurator);
      v12 = swift_dynamicCastObjCClass(v7);
      if (v12)
      {
        v13 = (void *)v12;
        v10 = v7;
        v11 = objc_msgSend(v13, *a3);
        if (!v11)
          goto LABEL_13;
      }
      else
      {
        objc_opt_self(MPModelPlaylist);
        v14 = swift_dynamicCastObjCClass(v7);
        if (v14)
        {
          v15 = (void *)v14;
          v10 = v7;
          v11 = objc_msgSend(v15, *a3);
          if (!v11)
          {
LABEL_13:

            v17 = 0;
            v19 = 0;
            goto LABEL_14;
          }
        }
        else
        {
          objc_opt_self(MPModelRadioStation);
          result = swift_dynamicCastObjCClass(v7);
          if (!result)
            return result;
          v20 = (void *)result;
          v10 = v7;
          v11 = objc_msgSend(v20, *a3);
          if (!v11)
            goto LABEL_13;
        }
      }
    }
    v16 = v11;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v19 = v18;

LABEL_14:
    v21 = a2[1];
    *a2 = v17;
    a2[1] = v19;
    return swift_bridgeObjectRelease(v21);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.shortEditorNotes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DE28, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044DE50, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B884;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044DE68;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 369, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.episodeCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DEA0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DEC8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B8B4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DEE0;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 392, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.explicitRating.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DF18, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044DF40, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B8EC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DF58;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 407, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_100146640(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelMovie);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelTVEpisode), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "explicitRating");
      *a2 = result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.genreNames.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v19;
  id v20;

  v20 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044DF90, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v20;
  v3 = swift_allocObject(&unk_10044DFB8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B904;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v19 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044DFD0;
  v4 = _Block_copy(aBlock);
  v5 = v19;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 424, 49, 1, v7);
  *(_QWORD *)&v9 = swift_release(v3).n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v20)
    {
      v10 = objc_msgSend(v20, "name", v9);
      v11 = v10;
      if (v10)
      {
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v14 = v13;

        v15 = sub_100005574(&qword_1004904D8);
        v16 = swift_allocObject(v15, 64, 7);
        *(_OWORD *)(v16 + 16) = xmmword_100384A80;
        *(_QWORD *)(v16 + 56) = &type metadata for String;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v14;
      }
    }
    v17 = v20;
    swift_release(v2);

  }
}

void sub_1001468F0(uint64_t a1, void **a2)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  _BYTE v8[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v8, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    v5 = (void *)swift_dynamicCastObjCClass(v4);
    if (v5
      || (objc_opt_self(MPModelArtist), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0)
      || (objc_opt_self(MPModelSong), (v5 = (void *)swift_dynamicCastObjCClass(v4)) != 0))
    {
      v6 = objc_msgSend(v5, "genre");
      v7 = *a2;
      *a2 = v6;

    }
  }
}

void ModelObjectBackedStoreItemMetadata.handle.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E008, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044E030, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B91C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044E048;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 447, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.hasArtistBiography.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E080, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E0A8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B954;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E0C0;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 462, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.hasLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E0F8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E120, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B98C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E138;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 477, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_100146DEC(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasStoreLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E170, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E198, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B9A4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E1B0;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 494, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_10014702C(uint64_t a1, unsigned __int8 *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelSong);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "lyrics");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "hasTimeSyncedLyrics");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.hasSocialPosts.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E1E8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E210, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B9BC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E228;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 508, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_100147260(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelArtist);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelCurator), (result = (id)swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = objc_msgSend(result, "hasSocialPosts");
      *a2 = (_BYTE)result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isExplicitContent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E260, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E288, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B9D4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E2A0;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 525, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_100147468(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (!result)
    {
      objc_opt_self(MPModelRadioStation);
      result = (id)swift_dynamicCastObjCClass(v5);
      if (!result)
      {
        objc_opt_self(MPModelSong);
        result = (id)swift_dynamicCastObjCClass(v5);
        if (result)
        {
          v6 = &selRef_isExplicitSong;
          goto LABEL_5;
        }
        objc_opt_self(MPModelTVSeason);
        result = (id)swift_dynamicCastObjCClass(v5);
        if (!result)
          return result;
      }
    }
    v6 = &selRef_hasExplicitContent;
LABEL_5:
    result = objc_msgSend(result, *v6);
    *a2 = (_BYTE)result;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isMasteredForiTunes.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E2D8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E300, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014B9EC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E318;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 546, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_1001476BC(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    result = swift_dynamicCastObjCClass(v5);
    if (result || (objc_opt_self(MPModelSong), (result = swift_dynamicCastObjCClass(v5)) != 0))
    {
      result = (uint64_t)objc_msgSend((id)result, "traits");
      *a2 = result & 1;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.isPreorder.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E350, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E378, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BA04;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E390;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 563, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.isPrivatePerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E3C8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E3F0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BA3C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E408;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 578, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.isVerifiedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E440, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E468, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BA74;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E480;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 593, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.isOnboardedPerson.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E4B8, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E4E0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BAAC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E4F8;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 608, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100147D24(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v6, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelSocialPerson);
    result = swift_dynamicCastObjCClass(v5);
    if (result)
    {
      result = (uint64_t)objc_msgSend((id)result, "hasLightweightProfile");
      *a2 = result ^ 1;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.itemKind.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E530, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044E558, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BAC4;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044E570;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 623, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_100147EF4(uint64_t a1, uint64_t *a2)
{
  void **v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  unsigned int v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  char v29[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelAlbum);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindAlbum;
LABEL_6:
      *a2 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v5);
      a2[1] = v6;
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    }
    objc_opt_self(MPModelArtist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindArtist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelCurator);
    v7 = swift_dynamicCastObjCClass(v4);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = v4;
      v10 = objc_msgSend(v8, "curatorKind");
      switch((unint64_t)v10)
      {
        case 0uLL:

          return;
        case 1uLL:
          v11 = &MPStoreItemMetadataItemKindiTunesBrand;
          goto LABEL_20;
        case 2uLL:
          v11 = &MPStoreItemMetadataItemKindBrand;
          goto LABEL_20;
        case 3uLL:
          v11 = &MPStoreItemMetadataItemKindActivity;
          goto LABEL_20;
        case 4uLL:
          v11 = &MPStoreItemMetadataItemKindEditorial;
LABEL_20:
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v11);
          v14 = v13;

          goto LABEL_21;
        default:
          v27 = 0;
          v28 = 0xE000000000000000;
          v21 = v10;
          _StringGuts.grow(_:)(24);
          v22._countAndFlagsBits = 0xD000000000000013;
          v22._object = (void *)0x80000001003AF0E0;
          String.append(_:)(v22);
          v23._object = (void *)0x80000001003B2DF0;
          v23._countAndFlagsBits = 0xD000000000000012;
          String.append(_:)(v23);
          v24._countAndFlagsBits = 32;
          v24._object = (void *)0xE100000000000000;
          String.append(_:)(v24);
          v26 = v21;
          type metadata accessor for MPModelCuratorKind(0);
          _print_unlocked<A, B>(_:_:)(&v26, &v27, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
          _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v27, v28, "MusicCore/ModelObjectBackedStoreItemMetadata.swift", 50, 2, 644, 0);
          __break(1u);
          return;
      }
    }
    objc_opt_self(MPModelMovie);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindMovie;
      goto LABEL_6;
    }
    objc_opt_self(MPModelPlaylist);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindPlaylist;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindSocialProfile;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRadioStation);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRadioStation;
      goto LABEL_6;
    }
    objc_opt_self(MPModelSong);
    v15 = swift_dynamicCastObjCClass(v4);
    if (v15)
    {
      v16 = (void *)v15;
      v9 = v4;
      v17 = objc_msgSend(v16, "isArtistUploadedContent");
      v18 = objc_msgSend(v16, "hasVideo");
      if (v17)
      {
        if (v18)
          v19 = &MPStoreItemMetadataItemKindUploadedVideo;
        else
          v19 = &MPStoreItemMetadataItemKindUploadedAudio;
      }
      else if (v18)
      {
        v19 = &MPStoreItemMetadataItemKindMusicVideo;
      }
      else
      {
        v19 = &MPStoreItemMetadataItemKindSong;
      }
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v19);
      v14 = v20;
LABEL_21:

      *a2 = v12;
      a2[1] = v14;
      goto LABEL_7;
    }
    objc_opt_self(MPModelTVEpisode);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVEpisode;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVSeason);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVSeason;
      goto LABEL_6;
    }
    objc_opt_self(MPModelTVShow);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindTVShow;
      goto LABEL_6;
    }
    objc_opt_self(MPModelRecordLabel);
    if (swift_dynamicCastObjCClass(v4))
    {
      v5 = &MPStoreItemMetadataItemKindRecordLabel;
      goto LABEL_6;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.lastModifiedDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_10044E5A8, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_10044E5D0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10014BADC;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000B04E0;
  v16 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E5E8;
  v10 = _Block_copy(aBlock);
  v11 = v16;
  v12 = v1;
  swift_retain(v9);
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 688, 49, 1, v13);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000149A8((uint64_t)v5, a1, &qword_100490730);
    swift_release(v8);
  }
}

void sub_1001484E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];

  v30 = a2;
  v29 = type metadata accessor for Calendar(0);
  v3 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100492988);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DateComponents(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v28 - v17;
  v19 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v19, v31, 0, 0);
  v20 = *v19;
  if (v20)
  {
    objc_opt_self(MPModelPlaylist);
    v21 = swift_dynamicCastObjCClass(v20);
    if (v21)
    {
      v22 = (void *)v21;
      v23 = v20;
      v24 = objc_msgSend(v22, "lastModifiedDateComponents");
      if (v24)
      {
        v25 = v24;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v24);

        v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v26(v11, v16, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v26(v18, v11, v12);
          v27 = objc_msgSend((id)objc_opt_self(MPStoreItemMetadata), "storeServerCalendar");
          static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

          Calendar.date(from:)(v18);
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v29);
          (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
          sub_100129EBC((uint64_t)v8, v30, &qword_100490730);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }

      sub_100008758((uint64_t)v11, &qword_100492988);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.movementCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E620, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E648, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BAF4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E660;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 699, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.movementName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E698, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044E6C0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BB2C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044E6D8;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 714, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.movementNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E710, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E738, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BB64;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E750;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 729, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void ModelObjectBackedStoreItemMetadata.name.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E788, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044E7B0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BB9C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044E7C8;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 744, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_100148D34(uint64_t a1, _QWORD *a2)
{
  void **v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _BYTE v37[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v37, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelAlbum);
    v6 = swift_dynamicCastObjCClass(v5);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v5;
      v9 = objc_msgSend(v7, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelArtist);
    v10 = swift_dynamicCastObjCClass(v5);
    if (v10)
    {
      v11 = (void *)v10;
      v8 = v5;
      v9 = objc_msgSend(v11, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelCurator);
    v12 = swift_dynamicCastObjCClass(v5);
    if (v12)
    {
      v13 = (void *)v12;
      v8 = v5;
      v9 = objc_msgSend(v13, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelMovie);
    v14 = swift_dynamicCastObjCClass(v5);
    if (v14)
    {
      v15 = (void *)v14;
      v8 = v5;
      v9 = objc_msgSend(v15, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelPlaylist);
    v16 = swift_dynamicCastObjCClass(v5);
    if (v16)
    {
      v17 = (void *)v16;
      v8 = v5;
      v9 = objc_msgSend(v17, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSocialPerson);
    v18 = swift_dynamicCastObjCClass(v5);
    if (v18)
    {
      v19 = (void *)v18;
      v8 = v5;
      v9 = objc_msgSend(v19, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelRadioStation);
    v20 = swift_dynamicCastObjCClass(v5);
    if (v20)
    {
      v21 = (void *)v20;
      v8 = v5;
      v9 = objc_msgSend(v21, "name");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelSong);
    v22 = swift_dynamicCastObjCClass(v5);
    if (v22)
    {
      v23 = (void *)v22;
      v8 = v5;
      v9 = objc_msgSend(v23, "title");
      if (!v9)
        goto LABEL_38;
      goto LABEL_28;
    }
    objc_opt_self(MPModelTVEpisode);
    v24 = swift_dynamicCastObjCClass(v5);
    if (v24)
    {
      v25 = (void *)v24;
      v8 = v5;
      v9 = objc_msgSend(v25, "title");
      if (v9)
      {
LABEL_28:
        v26 = v9;
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v29 = v28;

LABEL_40:
        v36 = a2[1];
        *a2 = v27;
        a2[1] = v29;
        return swift_bridgeObjectRelease(v36);
      }
    }
    else
    {
      objc_opt_self(MPModelTVSeason);
      v30 = swift_dynamicCastObjCClass(v5);
      if (!v30)
      {
        objc_opt_self(MPModelTVShow);
        result = swift_dynamicCastObjCClass(v5);
        if (!result)
          return result;
        v35 = (void *)result;
        v8 = v5;
        v9 = objc_msgSend(v35, "title");
        if (!v9)
          goto LABEL_38;
        goto LABEL_28;
      }
      v31 = (void *)v30;
      v8 = v5;
      v32 = objc_msgSend(v31, "show");
      v27 = v32;
      if (!v32)
      {

LABEL_39:
        v29 = 0;
        goto LABEL_40;
      }
      v33 = objc_msgSend(v32, "title");

      if (v33)
      {
        v27 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v29 = v34;

        goto LABEL_40;
      }

    }
LABEL_38:

    v27 = 0;
    goto LABEL_39;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.nameRaw.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E800, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044E828, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BBB4;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044E840;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 779, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_1001492A8(void *a1, uint64_t a2, uint64_t *a3, void (*a4)(void), uint64_t (*a5)(_QWORD), uint64_t (*a6)(void))
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;

  v10 = sub_100005574(a3);
  __chkstk_darwin(v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  a4();

  v14 = a5(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
  {
    v16 = (void *)a6();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }
  return v16;
}

void ModelObjectBackedStoreItemMetadata.releaseDate.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_10044E878, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_10044E8A0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10014BBEC;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000B04E0;
  v16 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E8B8;
  v10 = _Block_copy(aBlock);
  v11 = v16;
  v12 = v1;
  swift_retain(v9);
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 794, 49, 1, v13);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000149A8((uint64_t)v5, a1, &qword_100490730);
    swift_release(v8);
  }
}

void sub_10014952C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void **v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72[24];

  v71 = a2;
  v3 = type metadata accessor for DateComponents(0);
  v70 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_100492988);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v67 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v67 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v67 - v15;
  v17 = sub_100005574(&qword_100490730);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v67 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v67 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v67 - v27;
  v29 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v29, v72, 0, 0);
  v30 = *v29;
  if (v30)
  {
    v68 = v3;
    objc_opt_self(MPModelAlbum);
    v31 = swift_dynamicCastObjCClass(v30);
    if (v31)
    {
      v32 = (void *)v31;
      v33 = v30;
      v34 = objc_msgSend(v32, "releaseDateComponents");
      if (v34)
      {
        v35 = v34;
        static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v34);

        v36 = 0;
      }
      else
      {
        v36 = 1;
      }
      v43 = v68;
      v44 = v70;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v14, v36, 1, v68);
      sub_1000149A8((uint64_t)v14, (uint64_t)v16, &qword_100492988);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v16, 1, v43))
      {

        sub_100008758((uint64_t)v16, &qword_100492988);
        v45 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v28, 1, 1, v45);
      }
      else
      {
        v46 = v69;
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v69, v16, v43);
        v47 = sub_100008758((uint64_t)v16, &qword_100492988);
        DateComponents.date.getter(v47);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
      }
    }
    else
    {
      objc_opt_self(MPModelPlaylist);
      v37 = swift_dynamicCastObjCClass(v30);
      if (v37)
      {
        v38 = (void *)v37;
        v39 = v30;
        v40 = objc_msgSend(v38, "releaseDateComponents");
        if (v40)
        {
          v41 = v40;
          static DateComponents._unconditionallyBridgeFromObjectiveC(_:)(v40);

          v42 = 0;
        }
        else
        {
          v42 = 1;
        }
        v54 = v68;
        v55 = v70;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v8, v42, 1, v68);
        sub_1000149A8((uint64_t)v8, (uint64_t)v11, &qword_100492988);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v11, 1, v54))
        {

          sub_100008758((uint64_t)v11, &qword_100492988);
          v56 = type metadata accessor for Date(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v26, 1, 1, v56);
        }
        else
        {
          v57 = v69;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v69, v11, v54);
          v58 = sub_100008758((uint64_t)v11, &qword_100492988);
          DateComponents.date.getter(v58);

          (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
        }
        v28 = v26;
      }
      else
      {
        objc_opt_self(MPModelTVEpisode);
        v48 = swift_dynamicCastObjCClass(v30);
        if (v48)
        {
          v49 = (void *)v48;
          v50 = v30;
          v51 = objc_msgSend(v49, "releaseDate");
          if (v51)
          {
            v52 = v51;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

            v53 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v23, 0, 1, v53);
          }
          else
          {

            v65 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v23, 1, 1, v65);
          }
          v28 = v23;
        }
        else
        {
          objc_opt_self(MPModelMovie);
          v59 = swift_dynamicCastObjCClass(v30);
          if (!v59)
            return;
          v60 = (void *)v59;
          v61 = v30;
          v62 = objc_msgSend(v60, "releaseDate");
          if (v62)
          {
            v63 = v62;
            static Date._unconditionallyBridgeFromObjectiveC(_:)(v62);

            v64 = type metadata accessor for Date(0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v20, 0, 1, v64);
          }
          else
          {

            v66 = type metadata accessor for Date(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v20, 1, 1, v66);
          }
          v28 = v20;
        }
      }
    }
    sub_100129EBC((uint64_t)v28, v71, &qword_100490730);
  }
}

id sub_100149AF4(void *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr))
{
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  v4 = a1;
  a3(v12);

  v5 = v13;
  if (!v13)
    return 0;
  v6 = sub_10000ABC8(v12, v13);
  v7 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  sub_10000682C(v12);
  return v10;
}

void ModelObjectBackedStoreItemMetadata.socialProfileID.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  char isEscapingClosureAtFileLocation;
  _QWORD v11[5];
  uint64_t v12;
  _OWORD v13[2];

  memset(v13, 0, sizeof(v13));
  v3 = (void *)objc_opt_self(MPModelObject);
  v4 = swift_allocObject(&unk_10044E8F0, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v13;
  v5 = swift_allocObject(&unk_10044E918, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_10014BC04;
  *(_QWORD *)(v5 + 24) = v4;
  v11[4] = sub_1000B04E0;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100009BD0;
  v11[3] = &unk_10044E930;
  v6 = _Block_copy(v11);
  v7 = v12;
  v8 = v1;
  swift_retain(v5);
  objc_msgSend(v3, "performWithoutEnforcement:", v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v5, "", 147, 814, 49, 1, v9);
  swift_release(v5);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000149A8((uint64_t)v13, a1, &qword_100491B90);
    swift_release(v4);
  }
}

void sub_100149D2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  __int128 v10;
  __int128 v11;
  _BYTE v12[24];

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v12, 0, 0);
  v5 = *v4;
  if (v5)
  {
    objc_opt_self(MPModelSocialPerson);
    if (swift_dynamicCastObjCClass(v5))
    {
      v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
      swift_beginAccess(v6, v9, 0, 0);
      v7 = v6[1];
      if (v7)
      {
        v8 = *v6;
        *((_QWORD *)&v11 + 1) = &type metadata for String;
        *(_QWORD *)&v10 = v8;
        *((_QWORD *)&v10 + 1) = v7;
      }
      else
      {
        v10 = 0u;
        v11 = 0u;
      }
      swift_bridgeObjectRetain();
      sub_100129EBC((uint64_t)&v10, a2, &qword_100491B90);
    }
  }
}

void ModelObjectBackedStoreItemMetadata.seasonNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E968, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044E990, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BC1C;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044E9A8;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 829, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_100149F74(uint64_t a1, _QWORD *a2)
{
  void **v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _BYTE v11[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v11, 0, 0);
  v4 = *v3;
  if (v4)
  {
    objc_opt_self(MPModelTVEpisode);
    v5 = swift_dynamicCastObjCClass(v4);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = v4;
      v8 = objc_msgSend(v6, "season");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "number");

        *a2 = v10;
      }
      else
      {

      }
    }
  }
}

void ModelObjectBackedStoreItemMetadata.shortName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044E9E0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044EA08, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BC34;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044EA20;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 846, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_10014A194(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4, _QWORD *a5, SEL *a6)
{
  void **v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29[24];

  v11 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v29, 0, 0);
  v13 = *v11;
  if (v13)
  {
    objc_opt_self(*a3);
    v14 = swift_dynamicCastObjCClass(v13);
    if (v14)
    {
      v15 = (void *)v14;
      v16 = v13;
      v17 = objc_msgSend(v15, *a4);
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

      }
      else
      {

        v19 = 0;
        v21 = 0;
      }
      v28 = a2[1];
      *a2 = v19;
    }
    else
    {
      objc_opt_self(*a5);
      result = swift_dynamicCastObjCClass(v13);
      if (!result)
        return result;
      v22 = (void *)result;
      v23 = v13;
      v24 = objc_msgSend(v22, *a6);
      if (v24)
      {
        v25 = v24;
        v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
        v21 = v27;

      }
      else
      {

        v26 = 0;
        v21 = 0;
      }
      v28 = a2[1];
      *a2 = v26;
    }
    a2[1] = v21;
    return swift_bridgeObjectRelease(v28);
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.shortURL.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_10044EA58, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_10044EA80, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10014BC7C;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000B04E0;
  v16 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044EA98;
  v10 = _Block_copy(aBlock);
  v11 = v16;
  v12 = v1;
  swift_retain(v9);
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 863, 49, 1, v13);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000149A8((uint64_t)v5, a1, &qword_10048D510);
    swift_release(v8);
  }
}

void ModelObjectBackedStoreItemMetadata.showComposer.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044EAD0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044EAF8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BCAC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044EB10;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 878, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_10014A62C(uint64_t a1, _BYTE *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  id result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = (id)swift_dynamicCastObjCClass(v9);
    if (result)
    {
      result = objc_msgSend(result, *a4);
      *a2 = (_BYTE)result;
    }
  }
  return result;
}

uint64_t ModelObjectBackedStoreItemMetadata.storeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    *(_QWORD *)(a1 + 24) = &type metadata for String;
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_bridgeObjectRetain();
}

void ModelObjectBackedStoreItemMetadata.isStoreRedownloadable.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  char v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044EB48, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044EB70, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BCE4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044EB88;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 897, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

void sub_10014A90C(uint64_t a1, _BYTE *a2)
{
  void **v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  id v11;
  char v12;
  _BYTE v13[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v13, 0, 0);
  v4 = *v3;
  if (v4)
  {
    ObjectType = swift_getObjectType(v4);
    v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
    if (v6)
      v7 = v6;
    else
      v7 = 0;
    if (v6)
      v8 = v4;
    else
      v8 = 0;
    if (v8)
    {
      v9 = swift_getObjectType(v8);
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
      v11 = v4;
      v12 = v10(v9, v7);

      *a2 = v12 & 1;
    }
  }
}

void ModelObjectBackedStoreItemMetadata.trackCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044EBC0, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044EBE8, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BCFC;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044EC00;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 907, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_10014AB40(uint64_t a1, _QWORD *a2, _QWORD *a3, SEL *a4)
{
  uint64_t *v7;
  id result;
  uint64_t v9;
  _BYTE v10[24];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v10, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = (id)swift_dynamicCastObjCClass(v9);
    if (result)
    {
      result = objc_msgSend(result, *a4);
      *a2 = result;
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.trackNumber.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v11 = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044EC38, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v11;
  v3 = swift_allocObject(&unk_10044EC60, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BD34;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1000B04E0;
  v10 = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044EC78;
  v4 = _Block_copy(aBlock);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 922, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

id sub_10014AD34(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  id result;
  uint64_t v5;
  char **v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = (id)swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v7, 0, 0);
  v5 = *v3;
  if (v5)
  {
    objc_opt_self(MPModelSong);
    result = (id)swift_dynamicCastObjCClass(v5);
    if (result)
    {
      v6 = &selRef_trackNumber;
    }
    else
    {
      objc_opt_self(MPModelTVEpisode);
      result = (id)swift_dynamicCastObjCClass(v5);
      if (!result)
        return result;
      v6 = &selRef_episodeNumber;
    }
    result = objc_msgSend(result, *v6);
    *a2 = result;
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.url.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v3);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (void *)objc_opt_self(MPModelObject);
  v8 = swift_allocObject(&unk_10044ECB0, 32, 7);
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = v5;
  v9 = swift_allocObject(&unk_10044ECD8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_10014BD4C;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1000B04E0;
  v16 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009BD0;
  aBlock[3] = &unk_10044ECF0;
  v10 = _Block_copy(aBlock);
  v11 = v16;
  v12 = v1;
  swift_retain(v9);
  objc_msgSend(v7, "performWithoutEnforcement:", v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 147, 939, 49, 1, v13);
  swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1000149A8((uint64_t)v5, a1, &qword_10048D510);
    swift_release(v8);
  }
}

void sub_10014AFAC(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void **v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v6 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v6);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  swift_beginAccess(v9, v19, 0, 0);
  v10 = *v9;
  if (v10)
  {
    objc_opt_self(MPModelPlaylist);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = v10;
      v14 = objc_msgSend(v12, *a3);
      if (v14)
      {
        v15 = v14;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v14);

        v16 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 0, 1, v16);
      }
      else
      {

        v17 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
      }
      sub_100129EBC((uint64_t)v8, a2, &qword_10048D510);
    }
  }
}

id sub_10014B110(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void ModelObjectBackedStoreItemMetadata.workName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  __n128 v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[5];
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v1 = (void *)objc_opt_self(MPModelObject);
  v2 = swift_allocObject(&unk_10044ED28, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = v11;
  v3 = swift_allocObject(&unk_10044ED50, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_10014BD7C;
  *(_QWORD *)(v3 + 24) = v2;
  v9[4] = sub_1000B04E0;
  v10 = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100009BD0;
  v9[3] = &unk_10044ED68;
  v4 = _Block_copy(v9);
  v5 = v10;
  v6 = v0;
  swift_retain(v3);
  objc_msgSend(v1, "performWithoutEnforcement:", v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 147, 954, 49, 1, v7);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    swift_release(v2);
}

uint64_t sub_10014B2C0(uint64_t a1, uint64_t *a2, _QWORD *a3, SEL *a4)
{
  void **v7;
  uint64_t result;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18[24];

  v7 = (void **)(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject);
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject, v18, 0, 0);
  v9 = *v7;
  if (v9)
  {
    objc_opt_self(*a3);
    result = swift_dynamicCastObjCClass(v9);
    if (result)
    {
      v10 = (void *)result;
      v11 = v9;
      v12 = objc_msgSend(v10, *a4);
      if (v12)
      {
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

      }
      else
      {

        v14 = 0;
        v16 = 0;
      }
      v17 = a2[1];
      *a2 = v14;
      a2[1] = v16;
      return swift_bridgeObjectRelease(v17);
    }
  }
  return result;
}

void ModelObjectBackedStoreItemMetadata.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ModelObjectBackedStoreItemMetadata", 44, "init()", 6, 0);
  __break(1u);
}

id ModelObjectBackedStoreItemMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ModelObjectBackedStoreItemMetadata()
{
  return objc_opt_self(_TtC9MusicCore34ModelObjectBackedStoreItemMetadata);
}

id sub_10014B478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSDictionary v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  objc_class *v15;
  id v16;
  objc_super v18;

  v4 = v3;
  v7 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObject] = 0;
  v10 = &v4[OBJC_IVAR____TtC9MusicCore34ModelObjectBackedStoreItemMetadata_modelObjectStoreID];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000C1F58(a3, (uint64_t)v9);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  v15 = (objc_class *)type metadata accessor for ModelObjectBackedStoreItemMetadata();
  v18.receiver = v4;
  v18.super_class = v15;
  v16 = objc_msgSendSuper2(&v18, "initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:", v11.super.isa, a2, isa);

  sub_100008758(a3, &qword_100490730);
  return v16;
}

uint64_t sub_10014B5DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B600()
{
  uint64_t v0;

  return sub_100143CAC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014B608()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10014B628(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10014B630()
{
  uint64_t v0;

  sub_10014417C(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_10014B638()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B648()
{
  uint64_t v0;

  sub_10014447C(*(_QWORD *)(v0 + 16), *(char ***)(v0 + 24));
}

uint64_t sub_10014B650()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B660()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelRadioStation_ptr, (SEL *)&selRef_isBeats1);
}

uint64_t sub_10014B688()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B698()
{
  uint64_t v0;

  return sub_1001451EC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_album, (SEL *)&selRef_title);
}

uint64_t sub_10014B6C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B6D0()
{
  uint64_t v0;

  sub_100144E70(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_10014B6D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B6E8()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isCompilation);
}

uint64_t sub_10014B710()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B720()
{
  uint64_t v0;

  return sub_1001451EC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_composer, (SEL *)&selRef_name);
}

uint64_t sub_10014B748()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B758()
{
  uint64_t v0;

  return sub_10014A194(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_copyrightText, MPModelSong_ptr, (SEL *)&selRef_copyrightText);
}

uint64_t sub_10014B78C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B79C()
{
  uint64_t v0;

  sub_1001455AC(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_10014B7A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B7B4()
{
  uint64_t v0;

  return sub_100145850(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_10014B7BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B7CC()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_discCount);
}

uint64_t sub_10014B7F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B804()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_discNumber);
}

uint64_t sub_10014B82C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B83C()
{
  uint64_t v0;

  return sub_100145E64(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014B844()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B854()
{
  uint64_t v0;

  return sub_100146068(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_editorNotes);
}

uint64_t sub_10014B874()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B884()
{
  uint64_t v0;

  return sub_100146068(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), (SEL *)&selRef_shortEditorNotes);
}

uint64_t sub_10014B8A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B8B4()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelTVShow_ptr, (SEL *)&selRef_episodesCount);
}

uint64_t sub_10014B8DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B8EC()
{
  uint64_t v0;

  return sub_100146640(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014B8F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B904()
{
  uint64_t v0;

  sub_1001468F0(*(_QWORD *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_10014B90C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B91C()
{
  uint64_t v0;

  return sub_10014B2C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_handle);
}

uint64_t sub_10014B944()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B954()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelArtist_ptr, (SEL *)&selRef_hasBiography);
}

uint64_t sub_10014B97C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B98C()
{
  uint64_t v0;

  sub_100146DEC(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_10014B994()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014B9A4()
{
  uint64_t v0;

  sub_10014702C(*(_QWORD *)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_10014B9AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B9BC()
{
  uint64_t v0;

  return sub_100147260(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_10014B9C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014B9D4()
{
  uint64_t v0;

  return sub_100147468(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_10014B9DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014B9EC()
{
  uint64_t v0;

  return sub_1001476BC(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_10014B9F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BA04()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_isPreorder);
}

uint64_t sub_10014BA2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BA3C()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isPrivate);
}

uint64_t sub_10014BA64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BA74()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_isVerified);
}

uint64_t sub_10014BA9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BAAC()
{
  uint64_t v0;

  return sub_100147D24(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_10014BAB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BAC4()
{
  uint64_t v0;

  sub_100147EF4(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_10014BACC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BADC()
{
  uint64_t v0;

  sub_1001484E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10014BAE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BAF4()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementCount);
}

uint64_t sub_10014BB1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BB2C()
{
  uint64_t v0;

  return sub_10014B2C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovement);
}

uint64_t sub_10014BB54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BB64()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalMovementNumber);
}

uint64_t sub_10014BB8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BB9C()
{
  uint64_t v0;

  return sub_100148D34(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014BBA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BBB4()
{
  uint64_t v0;

  return sub_10014B2C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSocialPerson_ptr, (SEL *)&selRef_uncensoredName);
}

uint64_t sub_10014BBDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BBEC()
{
  uint64_t v0;

  sub_10014952C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10014BBF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BC04()
{
  uint64_t v0;

  sub_100149D2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10014BC0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BC1C()
{
  uint64_t v0;

  sub_100149F74(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014BC24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BC34()
{
  uint64_t v0;

  return sub_10014A194(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelCurator_ptr, (SEL *)&selRef_shortName, MPModelTVShow_ptr, (SEL *)&selRef_shortTitle);
}

uint64_t sub_10014BC6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BC7C()
{
  uint64_t v0;

  sub_10014AFAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareShortURL);
}

uint64_t sub_10014BC9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BCAC()
{
  uint64_t v0;

  return sub_10014A62C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_shouldShowComposer);
}

uint64_t sub_10014BCD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BCE4()
{
  uint64_t v0;

  sub_10014A90C(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_10014BCEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BCFC()
{
  uint64_t v0;

  return sub_10014AB40(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), MPModelAlbum_ptr, (SEL *)&selRef_trackCount);
}

uint64_t sub_10014BD24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014BD34()
{
  uint64_t v0;

  return sub_10014AD34(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_10014BD3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014BD4C()
{
  uint64_t v0;

  sub_10014AFAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_shareURL);
}

uint64_t sub_10014BD6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BD7C()
{
  uint64_t v0;

  return sub_10014B2C0(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), MPModelSong_ptr, (SEL *)&selRef_classicalWork);
}

uint64_t sub_10014BDA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014BDB4(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for String - 1) + 8))();
  return a1;
}

uint64_t MotionMode.allowsMotion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  int v9;
  uint64_t result;
  id v11;
  id v12;
  unint64_t v13;
  Swift::String v14;
  unint64_t v15;
  unint64_t v16;

  v1 = type metadata accessor for MotionMode(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v15 - v6;
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v8((char *)&v15 - v6, v0, v1);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v9 == enum case for MotionMode.off(_:))
    return 0;
  if (v9 == enum case for MotionMode.wifiOnly(_:))
  {
    v11 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v12 = objc_msgSend(v11, "networkType");

    return ICEnvironmentNetworkTypeIsWiFi(v12);
  }
  else if (v9 == enum case for MotionMode.on(_:))
  {
    return 1;
  }
  else
  {
    v8(v5, v0, v1);
    v15 = 0;
    v16 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    v15 = 0xD00000000000001ELL;
    v16 = 0x80000001003B2E30;
    v13 = sub_10014C200();
    v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v13);
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v15, v16, "MusicCore/MotionMode.swift", 26, 2, 18, 0);
    __break(1u);
  }
  return result;
}

unint64_t sub_10014C200()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100492990;
  if (!qword_100492990)
  {
    v1 = type metadata accessor for MotionMode(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MotionMode, v1);
    atomic_store(result, (unint64_t *)&qword_100492990);
  }
  return result;
}

uint64_t sub_10014C248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(uint64_t *);
  _QWORD v28[3];
  double v29;

  v8 = sub_100005574(&qword_1004929A0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static Edge.Set.top.getter(v9);
  *(double *)&v28[1] = a4;
  v28[2] = a2;
  v13 = sub_100005574(&qword_1004929A8);
  State.wrappedValue.getter(&v29, v13);
  v14 = EdgeInsets.init(_all:)(v29 * -0.5);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = sub_100005574(&qword_1004929B0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v11, a1, v21);
  v22 = &v11[*(int *)(v8 + 36)];
  *v22 = v12;
  *((double *)v22 + 1) = v14;
  *((_QWORD *)v22 + 2) = v16;
  *((_QWORD *)v22 + 3) = v18;
  *((_QWORD *)v22 + 4) = v20;
  v22[40] = 0;
  v23 = sub_10014C76C();
  v24 = swift_allocObject(&unk_10044EE20, 32, 7);
  *(double *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a2;
  sub_10014CA98((uint64_t)v11, a3);
  v25 = sub_100005574(&qword_1004929B8);
  *(_QWORD *)(a3 + *(int *)(v25 + 52)) = v23;
  v26 = (void (**)(uint64_t *))(a3 + *(int *)(v25 + 56));
  *v26 = sub_10014CA8C;
  v26[1] = (void (*)(uint64_t *))v24;
  swift_retain(a2);
  return sub_100008758((uint64_t)v11, &qword_1004929A0);
}

void sub_10014C3DC(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  v5 = *a1;
  v6 = static Animation.easeInOut(duration:)(0.25);
  *(double *)&v7[2] = a3;
  v7[3] = a2;
  v7[4] = v5;
  withAnimation<A>(_:_:)(v6, sub_10014CAE0, v7, (char *)&type metadata for () + 8);
  swift_release(v6);
}

uint64_t sub_10014C458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10014C248(a1, *(_QWORD *)(v2 + 8), a2, *(double *)v2);
}

uint64_t View.keyboardReactive()(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __chkstk_darwin(a1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v7 = 0;
  State.init(wrappedValue:)(&v8, &v7, &type metadata for CGFloat);
  return ModifiedContent.init(content:modifier:)(v3, &v8, a1, &type metadata for KeyboardObserverModifier);
}

uint64_t sub_10014C518(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for KeyboardObserverModifier);
  sub_10014C56C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_10014C56C()
{
  unint64_t result;

  result = qword_100492998;
  if (!qword_100492998)
  {
    result = swift_getWitnessTable(&unk_10038DA7C, &type metadata for KeyboardObserverModifier);
    atomic_store(result, (unint64_t *)&qword_100492998);
  }
  return result;
}

_QWORD *assignWithCopy for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a1[1];
  v4 = a2[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

_QWORD *assignWithTake for KeyboardObserverModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a1[1];
  a1[1] = a2[1];
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for KeyboardObserverModifier()
{
  return &type metadata for KeyboardObserverModifier;
}

uint64_t sub_10014C638(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003DC0F0, 1);
}

void sub_10014C648(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  *a2 = sub_10014C670(a1);
}

CGFloat sub_10014C670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD v8[2];
  CGRect v9;
  __int128 v10;
  __int128 v11;

  v1 = Notification.userInfo.getter(a1);
  if (!v1)
  {
    v10 = 0u;
    v11 = 0u;
LABEL_10:
    sub_100008758((uint64_t)&v10, &qword_100491B90);
    return 0.0;
  }
  v2 = v1;
  v8[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v8[1] = v3;
  AnyHashable.init<A>(_:)(&v9, v8, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_1000A580C((uint64_t)&v9), (v5 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v2 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10009B178((uint64_t)&v9);
  if (!*((_QWORD *)&v11 + 1))
    goto LABEL_10;
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast(&v9, &v10, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    return CGRectGetHeight(v9);
  return 0.0;
}

uint64_t sub_10014C76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v0 = sub_100005574(&qword_1004929C0);
  v1 = *(_QWORD *)(v0 - 8);
  v35 = v0;
  v36 = v1;
  __chkstk_darwin(v0);
  v34 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_1004929C8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  v14 = (void *)objc_opt_self(NSNotificationCenter);
  v15 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillShowNotification, 0);

  v16 = sub_10014CB38();
  Publisher.map<A>(_:)(sub_10014C648, 0, v3, &type metadata for CGFloat, v16);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  v18 = objc_msgSend(v14, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIKeyboardWillHideNotification, 0);

  Publisher.map<A>(_:)(sub_10000BFA4, 0, v3, &type metadata for CGFloat, v16);
  v17(v6, v3);
  v19 = sub_100005574(&qword_1004929D8);
  v20 = *(_QWORD *)(v8 + 72);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject(v19, v22 + 2 * v20, v21 | 7);
  *(_OWORD *)(v23 + 16) = xmmword_100384A60;
  v24 = v23 + v22;
  v25 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
  v25(v24, v13, v7);
  v25(v24 + v20, v11, v7);
  v26 = sub_10002FFB8(&qword_1004929E0, &qword_1004929C8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v27 = v34;
  Publishers.MergeMany.init(_:)(v23, v7, v26);
  v28 = sub_10002FFB8(&qword_1004929E8, &qword_1004929C0, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
  v29 = v35;
  v30 = Publisher.eraseToAnyPublisher()(v35, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v11, v7);
  v31(v13, v7);
  return v30;
}

uint64_t sub_10014CA68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10014CA8C(uint64_t *a1)
{
  uint64_t v1;

  sub_10014C3DC(a1, *(_QWORD *)(v1 + 24), *(double *)(v1 + 16));
}

uint64_t sub_10014CA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004929A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014CAE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];

  v1 = v0[2];
  v2 = v0[3];
  v5[0] = v0[4];
  v5[1] = v1;
  v5[2] = v2;
  v3 = sub_100005574(&qword_1004929A8);
  return State.wrappedValue.setter(v5, v3);
}

unint64_t sub_10014CB38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004929D0;
  if (!qword_1004929D0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1004929D0);
  }
  return result;
}

uint64_t sub_10014CB80()
{
  return sub_10002FFB8(qword_1004929F0, &qword_1004929B8, (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
}

uint64_t sub_10014CBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  Published.init(initialValue:)(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t property wrapper backing initializer of OptionalObservableObject.output(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = type metadata accessor for Optional(0, a2);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v8 - v5, a1, v3);
  sub_10014CBAC((uint64_t)v6, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

uint64_t OptionalObservableObject.output.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10038DAD0);
  v4 = swift_getKeyPath(&unk_10038DB08);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_10014CD68@<X0>(_QWORD *a1@<X8>)
{
  return OptionalObservableObject.output.getter(a1);
}

uint64_t sub_10014CD88(uint64_t a1)
{
  return sub_10014D4D0(a1);
}

uint64_t sub_10014CDA8()
{
  return 8;
}

_QWORD *sub_10014CDB4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t OptionalObservableObject.output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_10014D4D0(a1);
  v4 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*OptionalObservableObject.output.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10038DAD0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10038DB08);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10014CEA0;
}

void sub_10014CEA0(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t OptionalObservableObject.$output.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 88), v5, 33, 0);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(v1 + 80));
  v3 = type metadata accessor for Published(0, v2);
  Published.projectedValue.getter(v3);
  return swift_endAccess(v5);
}

uint64_t OptionalObservableObject.$output.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  sub_10014D5AC(a1);
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(v3 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

void (*OptionalObservableObject.$output.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v5 = type metadata accessor for Published.Publisher(0, v4);
  v3[1] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  OptionalObservableObject.$output.getter();
  return sub_10014D048;
}

void sub_10014D048(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_10014D5AC((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_10014D5AC(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OptionalObservableObject.__allocating_init(publisher:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  OptionalObservableObject.init(publisher:)(a1);
  return v3;
}

uint64_t *OptionalObservableObject.init(publisher:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for Published(0, v6);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v25 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v25 - v12;
  v14 = (uint64_t)v2 + *(_QWORD *)(v4 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))((char *)&v25 - v12, 1, 1, v5);
  property wrapper backing initializer of OptionalObservableObject.output((uint64_t)v13, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14, v11, v7);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = 0;
  v15 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  if (!*(_QWORD *)(a1 + 24))
  {
    v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)v15 = *(_OWORD *)a1;
    *(_OWORD *)(v15 + 16) = v19;
    *(_QWORD *)(v15 + 32) = *(_QWORD *)(a1 + 32);
LABEL_8:
    v20 = *(_OWORD *)(a1 + 16);
    v25 = *(_OWORD *)a1;
    v26 = v20;
    v27 = *(_QWORD *)(a1 + 32);
    v16 = *((_QWORD *)&v20 + 1);
    if (!*((_QWORD *)&v20 + 1))
      goto LABEL_4;
LABEL_9:
    v21 = v27;
    sub_10000ABC8(&v25, v16);
    swift_retain(v2);
    v18 = Publisher.sink(receiveCompletion:receiveValue:)(CFRange.init(_:), 0, sub_10014D674, v2, v16, v21);
    swift_release(v2);
    if (*(_QWORD *)(a1 + 24))
      sub_10000682C((_QWORD *)a1);
    goto LABEL_11;
  }
  sub_1000244B0(a1, v15);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_8;
  sub_1000244B0(a1, (uint64_t)&v25);
  v16 = *((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
    goto LABEL_9;
LABEL_4:
  v17 = *(_QWORD *)(a1 + 24);
  if (v17)
  {
    sub_10000682C((_QWORD *)a1);
    v18 = 0;
    v17 = 0;
    if (*((_QWORD *)&v26 + 1))
    {
LABEL_11:
      sub_10000682C(&v25);
      v17 = v18;
    }
  }
  v22 = *(_QWORD *)(*v2 + 104);
  v23 = *(uint64_t *)((char *)v2 + v22);
  *(uint64_t *)((char *)v2 + v22) = v17;
  swift_release(v23);
  return v2;
}

uint64_t sub_10014D330(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_10014D4D0((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t *OptionalObservableObject.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (uint64_t)v0 + *(_QWORD *)(*v0 + 88);
  v2 = type metadata accessor for Optional(255, *(_QWORD *)(*v0 + 80));
  v3 = type metadata accessor for Published(0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = *v0;
  v5 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 96));
  if (v5[3])
  {
    sub_10000682C(v5);
    v4 = *v0;
  }
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(v4 + 104)));
  return v0;
}

uint64_t OptionalObservableObject.__deallocating_deinit()
{
  uint64_t v0;

  OptionalObservableObject.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10014D490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = type metadata accessor for OptionalObservableObject(0, *(_QWORD *)(a1 + 80), a2, a3);
  result = ObservableObject<>.objectWillChange.getter(v5);
  *a4 = result;
  return result;
}

uint64_t sub_10014D4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v11[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = type metadata accessor for Optional(0, v3);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v11 - v6;
  v11[2] = v3;
  KeyPath = swift_getKeyPath(&unk_10038DAD0);
  v11[0] = v3;
  v9 = swift_getKeyPath(&unk_10038DB08);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain(v1);
  return static Published.subscript.setter(v7, v1, KeyPath, v9);
}

uint64_t sub_10014D5AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = type metadata accessor for Optional(255, *(_QWORD *)(*(_QWORD *)v1 + 80));
  v4 = type metadata accessor for Published.Publisher(0, v3);
  __chkstk_darwin(v4);
  v6 = &v11[-v5 - 8];
  (*(void (**)(_BYTE *, uint64_t))(v7 + 16))(&v11[-v5 - 8], a1);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), v11, 33, 0);
  v8 = type metadata accessor for Published(0, v3);
  Published.projectedValue.setter(v6, v8);
  return swift_endAccess(v11);
}

uint64_t sub_10014D674(uint64_t a1)
{
  uint64_t v1;

  return sub_10014D330(a1, v1);
}

uint64_t sub_10014D67C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v2 = type metadata accessor for Optional(255, *(_QWORD *)(a1 + 80));
  result = type metadata accessor for Published(319, v2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = "(";
    v5[2] = &unk_10038DBA8;
    result = swift_initClassMetadata2(a1, 0, 3, v5, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for OptionalObservableObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalObservableObject);
}

uint64_t PrivacyAcknowledgementObserver.__allocating_init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 56, 7);
  PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(a1, a2, a3);
  return v7;
}

uint64_t PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD v16[5];
  uint64_t v17;

  v5 = (void *)ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 16) = ICPrivacyIdentifierMusic;
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  v6 = (void *)objc_opt_self(ICPrivacyInfo);
  v7 = v5;
  swift_retain(a3);
  v8 = objc_msgSend(v6, "sharedPrivacyInfo");
  v9 = swift_allocObject(&unk_10044EF90, 24, 7);
  swift_weakInit(v9 + 16, v3);
  v16[4] = sub_10014D9E4;
  v17 = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10014D9EC;
  v16[3] = &unk_10044EFA8;
  v10 = _Block_copy(v16);
  v11 = v17;
  v12 = v7;
  v13 = objc_msgSend(v8, "beginObservingPrivacyAcknowledgementForIdentifier:handler:", v12, v10, swift_release(v11).n128_f64[0]);
  swift_release(a3);
  _Block_release(v10);

  v14 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = v13;
  swift_unknownObjectRelease(v14);
  return v3;
}

uint64_t sub_10014D8BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_10014D8E0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    if (*(_BYTE *)(Strong + 32) == 1)
    {
      sub_1000651F0();
      v8 = swift_allocObject(&unk_10044EF90, 24, 7);
      swift_weakInit(v8 + 16, v7);
      v9 = swift_allocObject(&unk_10044EFE0, 25, 7);
      *(_QWORD *)(v9 + 16) = v8;
      *(_BYTE *)(v9 + 24) = a2 & 1;
      swift_retain(v8);
      static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10014DC54, v9);
      swift_release(v7);
      swift_release(v8);
      v10 = v9;
    }
    else
    {
      (*(void (**)(_QWORD))(Strong + 40))(a2 & 1);
      v10 = v7;
    }
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

double sub_10014D9E4(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_10014D8E0(a1, a2, v2);
}

void sub_10014D9EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_10014DA48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10014DA58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t PrivacyAcknowledgementObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v3, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t PrivacyAcknowledgementObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = (void *)objc_opt_self(ICPrivacyInfo);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "sharedPrivacyInfo");
    objc_msgSend(v3, "endObservingPrivacyAcknowledgementForIdentifier:withToken:", *(_QWORD *)(v0 + 16), v1);
    swift_unknownObjectRelease(v1);

  }
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for PrivacyAcknowledgementObserver()
{
  return objc_opt_self(_TtC9MusicCore30PrivacyAcknowledgementObserver);
}

uint64_t sub_10014DBB8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_QWORD);
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v7 = *(void (**)(_QWORD))(result + 40);
    v6 = *(_QWORD *)(result + 48);
    swift_retain(v6);
    v7(a2 & 1);
    swift_release(v5);
    return swift_release(v6);
  }
  return result;
}

uint64_t sub_10014DC30()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10014DC54()
{
  uint64_t v0;

  return sub_10014DBB8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10014DC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v61 = sub_100005574(&qword_100492D28);
  v3 = __chkstk_darwin(v61);
  v60 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v59 = (char *)v50 - v6;
  v7 = __chkstk_darwin(v5);
  v58 = (char *)v50 - v8;
  v9 = __chkstk_darwin(v7);
  v57 = (char *)v50 - v10;
  __chkstk_darwin(v9);
  v56 = (char *)v50 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    return (uint64_t)v13;
  v50[1] = v1;
  v65 = _swiftEmptyArrayStorage;
  sub_10007736C(0, v12, 0);
  result = sub_10015099C(a1);
  v16 = result;
  v17 = 0;
  v18 = a1 + 64;
  v19 = *(_BYTE *)(a1 + 32);
  v51 = a1 + 80;
  v52 = v12;
  v54 = a1 + 64;
  v55 = a1;
  v53 = v15;
  v20 = v61;
  v21 = (uint64_t)v58;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << v19)
  {
    v24 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v62 = v17;
    v63 = 1 << v16;
    v25 = (uint64_t)v56;
    v26 = (uint64_t)&v56[*(int *)(v20 + 48)];
    v27 = *(_QWORD *)(a1 + 48);
    v28 = type metadata accessor for UUID(0);
    v64 = *(_QWORD *)(v28 - 8);
    v29 = v27 + *(_QWORD *)(v64 + 72) * v16;
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
    v30(v25, v29, v28);
    v31 = *(_QWORD *)(a1 + 56);
    v32 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    sub_10014E8A0(v31 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v16, v26);
    v33 = (uint64_t)v57;
    v30((uint64_t)v57, v25, v28);
    sub_10014E8A0(v26, v33 + *(int *)(v20 + 48));
    sub_1000149A8(v33, v21, &qword_100492D28);
    sub_100008758(v25, &qword_100492D28);
    v34 = *(int *)(v20 + 48);
    v35 = v59;
    v36 = (uint64_t)&v59[v34];
    v37 = v21 + v34;
    v30((uint64_t)v59, v21, v28);
    sub_10014E8A0(v37, v36);
    v38 = (uint64_t)v60;
    v39 = &v60[*(int *)(v20 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v35, v28);
    sub_10009B38C(v36, (uint64_t)v39);
    v41 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    swift_bridgeObjectRetain();
    sub_100008758(v38, &qword_100492D28);
    sub_100008758(v21, &qword_100492D28);
    v13 = v65;
    result = swift_isUniquelyReferenced_nonNull_native(v65);
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_10007736C(0, v13[2] + 1, 1);
      v13 = v65;
    }
    v43 = v13[2];
    v42 = v13[3];
    if (v43 >= v42 >> 1)
    {
      result = (uint64_t)sub_10007736C((char *)(v42 > 1), v43 + 1, 1);
      v13 = v65;
    }
    v13[2] = v43 + 1;
    v44 = &v13[2 * v43];
    v44[4] = v41;
    v44[5] = v40;
    a1 = v55;
    v19 = *(_BYTE *)(v55 + 32);
    v22 = 1 << v19;
    if (v16 >= 1 << v19)
      goto LABEL_27;
    v18 = v54;
    v45 = *(_QWORD *)(v54 + 8 * v24);
    if ((v45 & v63) == 0)
      goto LABEL_28;
    LODWORD(v15) = v53;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v53)
      goto LABEL_29;
    v46 = v45 & (-2 << (v16 & 0x3F));
    if (v46)
    {
      v22 = __clz(__rbit64(v46)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v23 = v52;
    }
    else
    {
      v47 = v24 + 1;
      v48 = (v22 + 63) >> 6;
      v23 = v52;
      if (v24 + 1 < v48)
      {
        v49 = *(_QWORD *)(v54 + 8 * v47);
        if (v49)
        {
LABEL_22:
          v22 = __clz(__rbit64(v49)) + (v47 << 6);
        }
        else
        {
          while (v48 - 2 != v24)
          {
            v49 = *(_QWORD *)(v51 + 8 * v24++);
            if (v49)
            {
              v47 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v62 + 1;
    v16 = v22;
    if (v62 + 1 == v23)
      return (uint64_t)v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10014E080(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_100005574(&qword_100492B58);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_100008758(a1, &qword_100492B58);
    sub_100180E48(a2, (uint64_t)v8);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_100008758((uint64_t)v8, &qword_100492B58);
  }
  else
  {
    sub_10009B38C(a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_10009A23C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_10014E1F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_100005574(&qword_100492D38);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100492D40);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_100008758(a1, &qword_100492D38);
    sub_1001810D0(a2, (uint64_t)v8);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_100008758((uint64_t)v8, &qword_100492D38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_10009A784((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t PushNotificationObserver.register(for:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = sub_100005574(&qword_100492B58);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v6[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[14] = v9;
  v6[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014E414, v5, 0);
}

uint64_t sub_10014E414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  Class isa;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 88);
  if (*(_QWORD *)(v1 + 120))
  {
    v2 = *(_QWORD *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 120);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_OWORD *)(v0 + 64);
    *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
    *(_OWORD *)(v7 + 8) = v8;
    *(_QWORD *)(v7 + 24) = v6;
    v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v10 = v7 + *(int *)(v9 + 24);
    swift_bridgeObjectRetain();
    swift_retain(v6);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v10, v5);
    sub_10014E8A0(v7, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
    swift_beginAccess(v1 + 112, v0 + 16, 33, 0);
    sub_10014E080(v4, v3);
    swift_endAccess(v0 + 16);
    v11 = *(void **)(v1 + 120);
    if (v11)
    {
      v12 = *(_QWORD **)(v0 + 88);
      v14 = v12[16];
      v13 = v12[17];
      v15 = v11;
      swift_bridgeObjectRetain();
      v16 = v15;
      sub_10000F824(v11, v14, v13);
      if (v12[19])
      {
        v17 = swift_bridgeObjectRetain();
        sub_10014DC60(v17);
        swift_bridgeObjectRelease();
      }
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v16, "_setEnabledTopics:", isa);

    }
    v21 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v18 = (_QWORD *)swift_task_alloc(dword_100492B64);
    *(_QWORD *)(v0 + 128) = v18;
    *v18 = v0;
    v18[1] = sub_10014E638;
    return sub_10014F26C();
  }
}

uint64_t sub_10014E638()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_task_switch(sub_10014E690, v1, 0);
}

uint64_t sub_10014E690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)v7 = *(_QWORD *)(v0 + 56);
  *(_OWORD *)(v7 + 8) = v8;
  *(_QWORD *)(v7 + 24) = v5;
  v9 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v10 = v7 + *(int *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_retain(v5);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v10, v4);
  sub_10014E8A0(v7, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 0, 1, v9);
  swift_beginAccess(v6 + 112, v0 + 16, 33, 0);
  sub_10014E080(v3, v2);
  swift_endAccess(v0 + 16);
  v11 = *(void **)(v6 + 120);
  if (v11)
  {
    v12 = *(_QWORD **)(v0 + 88);
    v14 = v12[16];
    v13 = v12[17];
    v15 = v11;
    swift_bridgeObjectRetain();
    v16 = v15;
    sub_10000F824(v11, v14, v13);
    if (v12[19])
    {
      v17 = swift_bridgeObjectRetain();
      sub_10014DC60(v17);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v16, "_setEnabledTopics:", isa);

  }
  v19 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PushNotificationObserver.RegisteredHandler(uint64_t a1)
{
  uint64_t result;

  result = qword_100492C60;
  if (!qword_100492C60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PushNotificationObserver.RegisteredHandler);
  return result;
}

uint64_t sub_10014E8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PushNotificationObserver.unregister(registeredHandler:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[24];

  v2 = v1;
  v4 = sub_100005574(&qword_100492B58);
  __chkstk_darwin(v4);
  v6 = v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a1 + *(int *)(v11 + 24), v7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  swift_beginAccess(v2 + 14, v24, 33, 0);
  sub_10014E080((uint64_t)v6, (uint64_t)v10);
  swift_endAccess(v24);
  v13 = (void **)(v2 + 15);
  v12 = (void *)v2[15];
  if (v12)
  {
    v15 = v2[16];
    v14 = v2[17];
    v16 = v12;
    swift_bridgeObjectRetain();
    v17 = v16;
    sub_10000F824(v12, v15, v14);
    if (v2[19])
    {
      v18 = swift_bridgeObjectRetain();
      sub_10014DC60(v18);
      swift_bridgeObjectRelease();
    }
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v17, "_setEnabledTopics:", isa);

  }
  if (!*(_QWORD *)(v2[14] + 16))
  {
    v20 = *v13;
    if (*v13)
    {
      objc_msgSend(v20, "setDelegate:", 0);
      v20 = *v13;
      if (*v13)
      {
        objc_msgSend(v20, "shutdown");
        v20 = *v13;
      }
    }
    v21 = v2[16];
    v22 = v2[17];
    *v13 = 0;
    v2[16] = 0;
    v2[17] = 0;
    sub_10000F824(v20, v21, v22);
  }
}

void PushNotificationObserver.connection(_:didReceiveMessageForTopic:userInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject(&unk_10044F008, 64, 7);
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v4;
    v12[5] = a2;
    v12[6] = a3;
    v12[7] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v4);
    v13 = sub_1000C66A8((uint64_t)v10, (uint64_t)&unk_100492B78, (uint64_t)v12);
    swift_release(v13);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10014EC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch(sub_10014EC78, 0, 0);
}

uint64_t sub_10014EC78()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
    return swift_task_switch(sub_10014EC98, *(_QWORD *)(v0 + 16), 0);
  __break(1u);
  return result;
}

uint64_t sub_10014EC98()
{
  uint64_t v0;

  sub_10014EE34(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10014EE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];

  v41 = a3;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100492D20);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v35 - v13;
  swift_beginAccess(v3 + 112, v44, 0, 0);
  v15 = *(_QWORD *)(v3 + 112);
  v16 = *(_QWORD *)(v15 + 64);
  v39 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  v36 = v20 - 1;
  swift_bridgeObjectRetain();
  v21 = 0;
  v40 = v20;
  v37 = v15 + 104;
  v38 = v20 - 5;
  v42 = a2;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_8;
    }
    v29 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v29 >= v40)
    {
      v31 = v21;
    }
    else
    {
      v30 = *(_QWORD *)(v39 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v21 + 1;
      if ((uint64_t)(v21 + 2) < v40)
      {
        v30 = *(_QWORD *)(v39 + 8 * (v21 + 2));
        if (v30)
        {
          v29 = v21 + 2;
          goto LABEL_12;
        }
        v31 = v21 + 2;
        if ((uint64_t)(v21 + 3) < v40)
        {
          v30 = *(_QWORD *)(v39 + 8 * (v21 + 3));
          if (v30)
          {
            v29 = v21 + 3;
LABEL_12:
            v19 = (v30 - 1) & v30;
            v24 = __clz(__rbit64(v30)) + (v29 << 6);
            v21 = v29;
LABEL_8:
            v25 = *(_QWORD *)(v15 + 48);
            v26 = type metadata accessor for UUID(0);
            (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v12, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, v26);
            v27 = *(_QWORD *)(v15 + 56) + *(_QWORD *)(v43 + 72) * v24;
            v28 = sub_100005574(&qword_100492D28);
            sub_10014E8A0(v27, (uint64_t)&v12[*(int *)(v28 + 48)]);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v12, 0, 1, v28);
            a2 = v42;
            goto LABEL_15;
          }
          v29 = v21 + 4;
          v31 = v21 + 3;
          if ((uint64_t)(v21 + 4) < v40)
          {
            v30 = *(_QWORD *)(v39 + 8 * v29);
            if (v30)
              goto LABEL_12;
            while (v38 != v21)
            {
              v30 = *(_QWORD *)(v37 + 8 * v21++);
              if (v30)
              {
                v29 = v21 + 4;
                goto LABEL_12;
              }
            }
            v31 = v36;
          }
        }
      }
    }
    v32 = sub_100005574(&qword_100492D28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v12, 1, 1, v32);
    v19 = 0;
    v21 = v31;
LABEL_15:
    sub_1000149A8((uint64_t)v12, (uint64_t)v14, &qword_100492D20);
    v33 = sub_100005574(&qword_100492D28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v14, 1, v33) == 1)
    {
      swift_release(v15);
      return;
    }
    sub_10009B38C((uint64_t)&v14[*(int *)(v33 + 48)], (uint64_t)v8);
    v34 = *((_QWORD *)v8 + 1);
    if (*(_QWORD *)v8 == a1 && v34 == a2
      || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v8, v34, a1, a2, 0) & 1) != 0)
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v8 + 2))(a1, a2, v41);
    }
    sub_10015073C((uint64_t)v8);
    v22 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v14, v22);
  }
  __break(1u);
}

void *sub_10014F1E8(id a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v7 = (void *)v3[15];
  if (v7)
  {
    objc_msgSend(v7, "setDelegate:", 0);
    v8 = (void *)v3[15];
    if (v8)
      objc_msgSend(v8, "shutdown");
  }
  if (a1)
    objc_msgSend(a1, "setDelegate:", v3);
  v9 = (void *)v3[15];
  v10 = v3[16];
  v11 = v3[17];
  v3[15] = a1;
  v3[16] = a2;
  v3[17] = a3;
  return sub_10000F824(v9, v10, v11);
}

uint64_t sub_10014F26C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v1 + 32) = v0;
  v2 = sub_100150830();
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 40) = v3;
  *v3 = v1;
  v3[1] = sub_10014F308;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, v0, v2, 0xD000000000000017, 0x80000001003B2F90, sub_10014F604, 0, &type metadata for PushNotificationObserver.PushConfiguration);
}

uint64_t sub_10014F308()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_10014F35C, v1, 0);
}

uint64_t sub_10014F35C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  NSString v15;
  NSString v16;
  id v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v1 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 152);
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 144);
    v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0)
      v4 = v3 & 0xFFFFFFFFFFFFLL;
    if (v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(APSConnectionOverrideNamedDelegatePort);
      sub_1000651F0();
      v5 = swift_bridgeObjectRetain_n(v2, 2);
      v13 = (void *)static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
      v14 = objc_allocWithZone((Class)APSConnection);
      v15 = String._bridgeToObjectiveC()();
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v14, "initWithEnvironmentName:namedDelegatePort:queue:", v15, v16, v13);
      swift_bridgeObjectRelease();

      if (v17)
        goto LABEL_10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v3 = 0;
    v2 = 0;
  }
  else
  {
    v17 = 0;
    v3 = 0;
  }
LABEL_10:
  v18 = *(_QWORD *)(v0 + 32);
  v19 = *(void **)(v18 + 120);
  if (!v19)
  {
    if (!v17)
      goto LABEL_25;
    swift_bridgeObjectRetain();
LABEL_19:
    if (!v2)
      goto LABEL_25;
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v18 + 128);
  v20 = *(_QWORD *)(v18 + 136);
  sub_100150874(*(void **)(v18 + 120));
  swift_bridgeObjectRetain();
  sub_10000F824(v19, v21, v20);
  if (!v17)
  {
    if (!v20)
      goto LABEL_25;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_19;
  if (!v2)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (v21 == v3 && v20 == v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    sub_10000F824(v17, v3, v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, v3, v2, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    goto LABEL_25;
LABEL_23:
  sub_10014F1E8(v17, v3, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014F58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_100492B74);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000F894;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_10014EC78, 0, 0);
}

uint64_t sub_10014F604(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  void *v26;

  v2 = sub_100005574(&qword_100492D58);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  v6 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - v7;
  if (qword_10048C720 != -1)
    swift_once(&qword_10048C720, sub_1000C378C);
  v9 = static BagProvider.shared;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v10(v6, (uint64_t)v8, v2);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_10044F1C0, v12 + v4, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v8, v2);
  sub_100005574(&qword_100490BA0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000D460);
  v14 = v26;
  if (v26)
  {
    sub_10014F890(v26);

  }
  else
  {
    v15 = type metadata accessor for BagProvider.Observer();
    v16 = swift_allocObject(v15, 40, 7);
    v17 = swift_weakInit(v16 + 16, 0);
    *(_QWORD *)(v16 + 24) = 0;
    *(_QWORD *)(v16 + 32) = 0;
    swift_weakAssign(v17, v9);
    v18 = swift_allocObject(&unk_10044F1E8, 24, 7);
    swift_weakInit(v18 + 16, v9);
    v19 = (_QWORD *)swift_allocObject(&unk_10044F210, 48, 7);
    v19[2] = sub_100150904;
    v19[3] = v13;
    v19[4] = v18;
    v19[5] = v16;
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v16 + 24) = sub_1000BC3D8;
    *(_QWORD *)(v16 + 32) = v19;
    swift_retain(v13);
    swift_retain(v16);
    v22 = sub_10003A5C8(v20, v21);
    __chkstk_darwin(v22);
    *(&v25 - 2) = v9;
    *(&v25 - 1) = v16;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000BC3E4);
    sub_1000C3B6C(0);
    swift_release(v16);
  }
  v23 = swift_release(v13);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v23);
}

uint64_t sub_10014F890(void *a1)
{
  NSString v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyPushNotifications);
  v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(a1, "dictionaryForBagKey:", v2);

  if (!v3)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v14 = 0x6D6E6F7269766E65;
  v15 = 0xEB00000000746E65;
  AnyHashable.init<A>(_:)(&v16, &v14, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1000A580C((uint64_t)&v16), (v6 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10009B178((uint64_t)&v16);
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_100008758((uint64_t)&v18, &qword_100491B90);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(&v14, &v18, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_13:
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(APSEnvironmentProduction);
    v17 = v11;
    goto LABEL_14;
  }
  v8 = v14;
  v7 = v15;
  v9 = (void *)objc_opt_self(APSConnection);
  v10 = String._bridgeToObjectiveC()();
  LODWORD(v9) = objc_msgSend(v9, "isValidEnvironment:", v10);

  if (!(_DWORD)v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v16 = v8;
  v17 = v7;
LABEL_14:
  v12 = sub_100005574(&qword_100492D58);
  return CheckedContinuation.resume(returning:)(&v16, v12);
}

id PushNotificationObserver.__allocating_init()()
{
  objc_class *v0;
  uint64_t v1;
  double v2;
  objc_super v4;

  v1 = swift_allocObject(v0, 160, 15);
  swift_defaultActor_initialize(v1);
  swift_retain(v1);
  *(_QWORD *)(v1 + 112) = sub_100099470((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_QWORD *)(v1 + 152) = 0;
  *(_QWORD *)&v2 = swift_release(v1).n128_u64[0];
  v4.receiver = (id)v1;
  v4.super_class = v0;
  return objc_msgSendSuper2(&v4, "init", v2);
}

id PushNotificationObserver.init()()
{
  uint64_t v0;
  objc_super v2;

  swift_defaultActor_initialize(v0);
  swift_retain(v0);
  *(_QWORD *)(v0 + 112) = sub_100099470((uint64_t)_swiftEmptyArrayStorage);
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_QWORD *)(v0 + 152) = 0;
  swift_release(v0);
  v2.receiver = (id)v0;
  v2.super_class = (Class)type metadata accessor for PushNotificationObserver();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for PushNotificationObserver()
{
  return objc_opt_self(_TtC9MusicCore24PushNotificationObserver);
}

uint64_t PushNotificationObserver.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10000F824(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t PushNotificationObserver.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10000F824(*(void **)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t SequentialVocalCommandsFilter.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

_QWORD *initializeBufferWithCopyOfBuffer for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PushNotificationObserver.RegisteredHandler(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = a2[3];
  v8 = a1[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *initializeWithTake for PushNotificationObserver.RegisteredHandler(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014FF98);
}

uint64_t sub_10014FF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.RegisteredHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100150020);
}

uint64_t sub_100150020(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100150094(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10038DD08;
  v4[1] = (char *)&value witness table for () + 64;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100150114(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t *sub_100150180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain(v8);
  }
  return v3;
}

uint64_t sub_1001501F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_100150220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_100150250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_100150280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1001502B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100150360 + 4 * byte_10038DC60[(v7 - 1)]))();
}

void sub_1001503B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for PushNotificationObserver.UncheckedSendableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PushNotificationObserver.UncheckedSendableWrapper);
}

uint64_t getEnumTagSinglePayload for PushNotificationObserver.PushConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PushNotificationObserver.PushConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.PushConfiguration()
{
  return &type metadata for PushNotificationObserver.PushConfiguration;
}

uint64_t destroy for PushNotificationObserver.Connection(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore24PushNotificationObserverC10ConnectionVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PushNotificationObserver.Connection(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

uint64_t assignWithTake for PushNotificationObserver.Connection(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PushNotificationObserver.Connection()
{
  return &type metadata for PushNotificationObserver.Connection;
}

uint64_t sub_10015073C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10015077C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001507B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_100492B74);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000EA88;
  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 16) = v6;
  return swift_task_switch(sub_10014EC78, 0, 0);
}

unint64_t sub_100150830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100492D48;
  if (!qword_100492D48)
  {
    v1 = type metadata accessor for PushNotificationObserver();
    result = swift_getWitnessTable(&protocol conformance descriptor for PushNotificationObserver, v1);
    atomic_store(result, (unint64_t *)&qword_100492D48);
  }
  return result;
}

void *sub_100150874(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001508A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574(&qword_100492D58);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100150904(void *a1)
{
  sub_100005574(&qword_100492D58);
  return sub_10014F890(a1);
}

uint64_t sub_100150944()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100150968()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10015099C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t MPCPlaybackEngine.Configuration.playerID.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void *MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;

  v5 = a4;
  return a4;
}

uint64_t sub_100150A7C(uint64_t a1, uint64_t a2)
{
  return _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
}

_UNKNOWN **static MPCPlaybackEngine.Option.allCases.getter()
{
  return &off_10043EE28;
}

void sub_100150AA4(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EE50;
}

id MPCPlaybackEngine.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  NSString v7;
  id v8;
  id v9;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithPlayerID:", v7);

  v9 = v8;
  sub_1001538F0(a3, (uint64_t)a4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t MPCPlaybackEngine.configuration.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = v0;
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_10015380C(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

void MPCPlaybackEngine.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1001538F0(a3, (uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

void (*MPCPlaybackEngine.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1;
  v5 = objc_msgSend(v4, "playerID");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = sub_10015380C(v4);
  v10 = objc_msgSend(v4, "fallbackPlaybackIntent");

  *v3 = v6;
  v3[1] = v8;
  v3[2] = v9;
  v3[3] = v10;
  return sub_100150CF0;
}

void sub_100150CF0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v4 = v3;
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    sub_1001538F0(v5, (uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v3 = (void *)v2[3];
  }
  else
  {
    sub_1001538F0(*(_QWORD *)(*(_QWORD *)a1 + 16), (uint64_t)v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v2);
}

void sub_100150D8C()
{
  Swift::Int v0;
  id v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v0 = sub_1000D2A6C((uint64_t)&off_10043CD68);
  v1 = objc_msgSend(objc_allocWithZone((Class)MPModelLibraryRequest), "init");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setLabel:", v2);

  v3 = (void *)objc_opt_self(MPModelSong);
  v4 = v1;
  v5 = objc_msgSend(v3, "kindWithVariants:", 3);
  objc_msgSend(v4, "setItemKind:", v5);

  v6 = objc_msgSend(v4, "playbackIntentWithStartItemIdentifiers:", 0);
  v7 = v6;
  if (v6)
  {
    v8 = v6;
    objc_msgSend(v8, "setShuffleMode:", 1);

  }
  static MPCPlaybackEngine.Configuration.systemMusic = 0x636973754DLL;
  *(_QWORD *)algn_1004A21D8 = 0xE500000000000000;
  qword_1004A21E0 = v0;
  unk_1004A21E8 = v7;
}

uint64_t *MPCPlaybackEngine.Configuration.systemMusic.unsafeMutableAddressor()
{
  if (qword_10048C858 != -1)
    swift_once(&qword_10048C858, sub_100150D8C);
  return &static MPCPlaybackEngine.Configuration.systemMusic;
}

uint64_t static MPCPlaybackEngine.Configuration.systemMusic.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (qword_10048C858 != -1)
    swift_once(&qword_10048C858, sub_100150D8C);
  v0 = static MPCPlaybackEngine.Configuration.systemMusic;
  v1 = (void *)unk_1004A21E8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = v1;
  return v0;
}

void *MPCPlayerRequestTracklistRange.nowPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nowPlayingItem;
}

void *MPCPlayerRequestTracklistRange.nextPlayingItem.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.nextPlayingItem;
}

void *MPCPlayerRequestTracklistRange.upNextPlayingItems.unsafeMutableAddressor()
{
  return &static MPCPlayerRequestTracklistRange.upNextPlayingItems;
}

uint64_t static MPCPlayerRequestTracklistRange.upNextPlayingItems.getter()
{
  return 0;
}

BOOL static MPCPlayerRequestTracklistRange.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_100150FCC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void MPCPlayerRequestTracklistRange.hash(into:)(int a1, Swift::UInt a2, Swift::UInt a3)
{
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
}

Swift::Int MPCPlayerRequestTracklistRange.hashValue.getter(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_100151070()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1001510C8()
{
  Swift::UInt *v0;
  Swift::UInt v1;

  v1 = v0[1];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_100151100()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100151154()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  Class isa;
  Class v7;
  id v8;
  uint64_t v9;

  v0 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v0, &v9);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  sub_100098EAC(inited);
  v5 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v7 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v5, "initWithProperties:relationships:", isa, v7);

  static MPCPlayerResponse.playStateSectionProperties = (uint64_t)v8;
}

uint64_t *MPCPlayerResponse.playStateSectionProperties.unsafeMutableAddressor()
{
  if (qword_10048C860 != -1)
    swift_once(&qword_10048C860, sub_100151154);
  return &static MPCPlayerResponse.playStateSectionProperties;
}

id static MPCPlayerResponse.playStateSectionProperties.getter()
{
  if (qword_10048C860 != -1)
    swift_once(&qword_10048C860, sub_100151154);
  return (id)static MPCPlayerResponse.playStateSectionProperties;
}

id sub_10015132C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_100492D60);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v22 - v6;
  v8 = objc_msgSend(v1, "tracklist");
  v9 = objc_msgSend(v8, "playingItem");

  if (!v9)
    return 0;
  v10 = objc_msgSend(v9, "metadataObject");

  if (v10)
  {
    v11 = objc_msgSend(v1, "tracklist");
    v12 = objc_msgSend(v11, "playingItemIndexPath");

    if (v12)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v12);

      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 0, 1, v13);
    }
    else
    {
      v13 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
    sub_100154004((uint64_t)v5, (uint64_t)v7);
    type metadata accessor for IndexPath(0);
    v15 = *(_QWORD *)(v13 - 8);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v13);
    if ((_DWORD)v16 != 1)
    {
      v18 = IndexPath.section.getter(v16);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v13);
      v19 = objc_msgSend(v1, "tracklist");
      v20 = objc_msgSend(v19, "items");

      v21 = objc_msgSend(v20, "sectionAtIndex:", v18);
      v14 = objc_msgSend(v21, "metadataObject");

      objc_msgSend(v1, "state");
      return v14;
    }

    sub_1001539C8((uint64_t)v7);
    return 0;
  }
  return 0;
}

uint64_t MPCPlayerResponse.playState(for:in:)(void *a1, void *a2)
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  unsigned int v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = sub_10015132C();
  if (!v5)
    return 0;
  v7 = v4;
  v8 = v5;
  v9 = v6;
  v10 = objc_msgSend(v5, "identifiers");
  v11 = objc_msgSend(a1, "identifiers");
  v12 = objc_msgSend(v10, "intersectsSet:", v11);

  if (!v12)
    goto LABEL_9;
  if (v7)
  {
    if (!a2)
    {

      return 0;
    }
    v13 = a2;
    v14 = v7;
    v15 = v13;
    v7 = v14;
    if (objc_msgSend(v7, "type") != (id)2
      || (v16 = objc_msgSend(v7, "album")) == 0)
    {

      goto LABEL_14;
    }
    v17 = v16;
    v18 = objc_msgSend(v16, "identifiers");
    v19 = objc_msgSend(v15, "identifiers");
    v20 = objc_msgSend(v18, "intersectsSet:", v19);

    if ((v20 & 1) != 0)
    {

      return v9;
    }
LABEL_9:

LABEL_14:
    return 0;
  }

  if (a2)
    return 0;
  return v9;
}

{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  unsigned __int8 v19;

  v4 = sub_10015132C();
  if (v5)
  {
    v7 = v4;
    v8 = v5;
    v9 = v6;
    v10 = objc_msgSend(v5, "innermostModelObject");
    v11 = objc_msgSend(v10, "identifiers");

    v12 = objc_msgSend(v8, "identifiers");
    v13 = objc_msgSend(v11, "unionSet:", v12);

    v14 = objc_msgSend(a1, "identifiers");
    LODWORD(v12) = objc_msgSend(v13, "intersectsSet:", v14);

    if ((_DWORD)v12)
    {
      if (!v7)
      {
        v9 = 0;
        v7 = v8;
        goto LABEL_12;
      }
      v7 = v7;
      if (objc_msgSend(v7, "type") != (id)4
        || (v15 = objc_msgSend(v7, "playlist")) == 0)
      {

        goto LABEL_11;
      }
      v16 = v15;
      v17 = objc_msgSend(v15, "identifiers");
      v18 = objc_msgSend(a2, "identifiers");
      v19 = objc_msgSend(v17, "intersectsSet:", v18);

      if ((v19 & 1) != 0)
      {

        v7 = v8;
LABEL_12:

        return v9;
      }
    }

LABEL_11:
    v9 = 0;
    goto LABEL_12;
  }
  return 0;
}

uint64_t MPCPlayerResponseItem.isLiveContent.getter()
{
  void *v0;
  unsigned __int8 v2;

  objc_msgSend(v0, "duration");
  return v2;
}

uint64_t MPCPlayerResponseTracklist.playingItemSupportsTimeSyncedLyrics.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  void *v13;
  id v14;
  void *v15;
  void (*v16)(_BYTE *, _BYTE *, uint64_t);
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  _BYTE v24[64];

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_100492D60);
  __chkstk_darwin(v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v24[-v10];
  result = (uint64_t)objc_msgSend(v1, "playingItem");
  if (result)
  {
    v13 = (void *)result;
    objc_msgSend((id)result, "duration");
    if (v24[56] == 1)
    {
LABEL_3:

      return 0;
    }
    v14 = objc_msgSend(v1, "playingItemIndexPath");
    if (v14)
    {
      v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v14);

      v16 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32);
      v16(v4, v9, v5);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v16(v11, v4, v5);
        v17 = objc_msgSend(v1, "items");
        v18 = objc_msgSend(v17, "sectionAtIndex:", IndexPath.section.getter(v17));

        v19 = objc_msgSend(v18, "metadataObject");
        if (v19)
        {
          v20 = objc_msgSend(v19, "innermostModelObject");
          objc_opt_self(MPModelRadioStation);
          v21 = (void *)swift_dynamicCastObjCClass(v20);
          if (v21)
          {
            v22 = v21;
            if (objc_msgSend(v21, "type") == (id)4)
            {
              (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);

              goto LABEL_3;
            }
            v23 = objc_msgSend(v22, "subtype");

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
            if (v23 == (id)1)
              return 0;
          }
          else
          {

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
          }
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);

        }
        return 1;
      }
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }

    sub_1001539C8((uint64_t)v4);
    return 1;
  }
  return result;
}

void MPCPlayerResponseTracklist.currentPlayEvent.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;
  char v28;

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_100492D60);
  __chkstk_darwin(v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&aBlock[-1] - v10;
  v12 = objc_msgSend(v1, "playingItemIndexPath");
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_8;
  }
  v13 = v12;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v12);

  v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_8:
    sub_1001539C8((uint64_t)v4);
    return;
  }
  v14(v11, v4, v5);
  v15 = objc_msgSend(v1, "items");
  v16 = objc_msgSend(v15, "sectionAtIndex:", IndexPath.section.getter(v15));

  v17 = objc_msgSend(v16, "metadataObject");
  if (v17)
  {
    v28 = 0;
    v18 = objc_msgSend(v17, "identifiers");
    __chkstk_darwin(v18);
    *(&v25 - 2) = (uint64_t)v17;
    *(&v25 - 1) = (uint64_t)&v28;
    v19 = objc_allocWithZone((Class)MPModelPlayEvent);
    v20 = swift_allocObject(&unk_10044F250, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_100153A08;
    *(_QWORD *)(v20 + 24) = &v25 - 4;
    aBlock[4] = sub_100009BB0;
    v27 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000E776C;
    aBlock[3] = &unk_10044F268;
    v21 = _Block_copy(aBlock);
    swift_retain(v20);
    v22 = objc_msgSend(v19, "initWithIdentifiers:block:", v18, v21);

    _Block_release(v21);
    v23 = swift_release(v27);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 0, 0, 0, 1, v23);

    v24 = swift_release(v20);
    if ((v18 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v11, v5, v24);
      if (v28 == 1)

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

void sub_100151FE0(void *a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v6 = objc_opt_self(MPModelPlayEvent);
  v7 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v6, 0, 0, 0);
  v19 = a1;
  v8 = objc_msgSend(a2, "anyObject");
  v9 = v19;
  if (v8)
  {
    objc_opt_self(MPModelAlbum);
    v10 = swift_dynamicCastObjCClass(v8);
    if (v10)
    {
      v11 = v10;
      v12 = v8;
      objc_msgSend(v7, "setAlbum:", v11);
LABEL_10:

      return;
    }
    objc_opt_self(MPModelPlaylist);
    v13 = swift_dynamicCastObjCClass(v8);
    if (v13)
    {
      v14 = v13;
      v12 = v8;
      objc_msgSend(v7, "setPlaylist:", v14);
      goto LABEL_10;
    }
    objc_opt_self(MPModelArtist);
    v15 = swift_dynamicCastObjCClass(v8);
    if (v15)
    {
      v16 = v15;
      v12 = v8;
      objc_msgSend(v7, "setArtist:", v16);
      goto LABEL_10;
    }
    objc_opt_self(MPModelRadioStation);
    v17 = swift_dynamicCastObjCClass(v8);
    if (v17)
    {
      v18 = v17;
      v12 = v8;
      objc_msgSend(v7, "setRadioStation:", v18);
      goto LABEL_10;
    }

    v9 = v19;
  }

  *a3 = 1;
}

id MPCVocalsControlCommand.isTrulyActive.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, "isActive");
  if ((_DWORD)result)
    return (id)(objc_msgSend(v0, "isDisabled") ^ 1);
  return result;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(playerResponse:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  if (!a1)
    return 0;
  v2 = objc_msgSend(a1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (v4)
    {
      v5 = (void *)v4;
      ObjectType = swift_getObjectType();
      v7 = sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
      if (!swift_dynamicCastMetatype(ObjectType, v7))
        v5 = 0;
      if (v5)
      {
        v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
        v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
        MPCPlayerResponse.VideoContext.init(output:)(v5);
        goto LABEL_8;
      }
    }
    swift_unknownObjectRelease(v3);

    return 0;
  }
LABEL_8:

  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.__allocating_init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  MPCPlayerResponse.VideoContext.init(output:)(a1);
  return v3;
}

uint64_t MPCPlayerResponse.VideoContext.init(output:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[112];
  _QWORD v26[4];
  _BYTE v27[24];

  v2 = v1;
  v3 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output) = a1;
  v4 = a1;
  objc_msgSend(v4, "videoBounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, v27, 33, 0);
  v26[0] = v6;
  v26[1] = v8;
  v26[2] = v10;
  v26[3] = v12;
  type metadata accessor for CGRect(0);
  Published.init(initialValue:)(v26, v13);
  swift_endAccess(v27);
  v14 = objc_msgSend(v4, "isReadyForDisplay");
  swift_beginAccess(v2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, v26, 33, 0);
  v27[0] = v14;
  Published.init(initialValue:)(v27, &type metadata for Bool);
  swift_endAccess(v26);
  v15 = sub_100005574(&qword_100490BF0);
  inited = swift_initStackObject(v15, v25);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  KeyPath = swift_getKeyPath(&unk_10038DDC8);
  *(_QWORD *)(inited + 56) = sub_100005574(&qword_100492D90);
  *(_QWORD *)(inited + 64) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = KeyPath;
  v18 = swift_getKeyPath(&unk_10038DDF8);
  *(_QWORD *)(inited + 96) = sub_100005574(&qword_100492D98);
  *(_QWORD *)(inited + 104) = &protocol witness table for KeyValueObservationTrigger<A, B>;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = v18;
  v19 = swift_allocObject(&unk_10044F2A0, 24, 7);
  swift_weakInit(v19 + 16, v2);
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = v4;
  v22 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 0, (uint64_t)sub_100153B14, v19);
  v23 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = v22;
  swift_release(v23);
  return v2;
}

uint64_t property wrapper backing initializer of MPCPlayerResponse.VideoContext.videoBounds(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  _QWORD v6[4];

  *(double *)v6 = a1;
  *(double *)&v6[1] = a2;
  *(double *)&v6[2] = a3;
  *(double *)&v6[3] = a4;
  type metadata accessor for CGRect(0);
  return Published.init(initialValue:)(v6, v4);
}

uint64_t MPCPlayerResponse.VideoContext.videoBounds.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[4];

  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v10 = swift_getKeyPath(&unk_10038DE48);
  *(double *)v12 = a1;
  *(double *)&v12[1] = a2;
  *(double *)&v12[2] = a3;
  *(double *)&v12[3] = a4;
  swift_retain(v4);
  return static Published.subscript.setter(v12, v4, KeyPath, v10);
}

uint64_t property wrapper backing initializer of MPCPlayerResponse.VideoContext.isReadyForDisplay(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Bool);
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_10038DE68);
  v4 = swift_getKeyPath(&unk_10038DE90);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void sub_100152644(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  unsigned int v13;
  uint64_t KeyPath;
  uint64_t v15;
  double Width;
  uint64_t v17;
  uint64_t v18;
  double Height;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  CGRect v28;
  _BYTE v29[24];
  _BYTE v30[24];
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (id *)(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
    swift_beginAccess(Strong + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v29, 0, 0);
    objc_msgSend(*v4, "videoBounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = objc_msgSend(*v4, "isReadyForDisplay");
    KeyPath = swift_getKeyPath(&unk_10038DE20);
    v15 = swift_getKeyPath(&unk_10038DE48);
    static Published.subscript.getter(&v28, v3, KeyPath, v15);
    swift_release(v15);
    swift_release(KeyPath);
    v31.origin.x = v6;
    v31.origin.y = v8;
    v31.size.width = v10;
    v31.size.height = v12;
    if (!CGRectEqualToRect(v31, v28))
    {
      v32.origin.x = v6;
      v32.origin.y = v8;
      v32.size.width = v10;
      v32.size.height = v12;
      Width = CGRectGetWidth(v32);
      v17 = swift_getKeyPath(&unk_10038DE20);
      v18 = swift_getKeyPath(&unk_10038DE48);
      static Published.subscript.getter(&v28, v3, v17, v18);
      swift_release(v18);
      swift_release(v17);
      if (vabdd_f64(Width, CGRectGetWidth(v28)) > 1.0)
      {
        v33.origin.x = v6;
        v33.origin.y = v8;
        v33.size.width = v10;
        v33.size.height = v12;
        Height = CGRectGetHeight(v33);
        v20 = swift_getKeyPath(&unk_10038DE20);
        v21 = swift_getKeyPath(&unk_10038DE48);
        static Published.subscript.getter(&v28, v3, v20, v21);
        swift_release(v21);
        swift_release(v20);
        if (vabdd_f64(Height, CGRectGetHeight(v28)) > 1.0)
        {
          v22 = swift_getKeyPath(&unk_10038DE20);
          v23 = swift_getKeyPath(&unk_10038DE48);
          v28.origin.x = v6;
          v28.origin.y = v8;
          v28.size.width = v10;
          v28.size.height = v12;
          swift_retain(v3);
          static Published.subscript.setter(&v28, v3, v22, v23);
        }
      }
    }
    v24 = swift_getKeyPath(&unk_10038DE68);
    v25 = swift_getKeyPath(&unk_10038DE90);
    static Published.subscript.getter(&v28, v3, v24, v25);
    swift_release(v25);
    swift_release(v24);
    if (v13 == LOBYTE(v28.origin.x))
    {
      swift_release(v3);
    }
    else
    {
      v26 = swift_getKeyPath(&unk_10038DE68);
      v27 = swift_getKeyPath(&unk_10038DE90);
      LOBYTE(v28.origin.x) = v13;
      static Published.subscript.setter(&v28, v3, v26, v27);
    }
  }
}

uint64_t MPCPlayerResponse.VideoContext.isReadyForDisplay.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10038DE68);
  v2 = swift_getKeyPath(&unk_10038DE90);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100152994(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038DE68);
  v5 = swift_getKeyPath(&unk_10038DE90);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100152A10(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038DE68);
  v5 = swift_getKeyPath(&unk_10038DE90);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void (*MPCPlayerResponse.VideoContext.isReadyForDisplay.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10038DE68);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10038DE90);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_100492DA0);
}

uint64_t MPCPlayerResponse.VideoContext.$isReadyForDisplay.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_100492DA8, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay, &qword_100492DA0);
}

void (*MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_100492DA8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_100492DA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

double MPCPlayerResponse.VideoContext.videoBounds.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v2 = swift_getKeyPath(&unk_10038DE48);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_100152C6C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  _OWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v5 = swift_getKeyPath(&unk_10038DE48);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)v8;
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_100152CE8(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v6 = swift_getKeyPath(&unk_10038DE48);
  v9 = v8;
  v10 = v2;
  v11 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v9, v4, KeyPath, v6);
}

void (*MPCPlayerResponse.VideoContext.videoBounds.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10038DE48);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_100492DB0);
}

uint64_t sub_100152DFC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = sub_100005574(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t MPCPlayerResponse.VideoContext.$videoBounds.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_100492DB8, &OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds, &qword_100492DB0);
}

uint64_t sub_100152E7C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = sub_100005574(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_beginAccess(v4 + *a3, v15, 33, 0);
  v12 = sub_100005574(a4);
  Published.projectedValue.setter(v11, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*MPCPlayerResponse.VideoContext.$videoBounds.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_100492DB8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_100492DB0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

void sub_10015301C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

id MPCPlayerResponse.VideoContext.output.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v3, 0, 0);
  return *v1;
}

void MPCPlayerResponse.VideoContext.output.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*MPCPlayerResponse.VideoContext.output.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, a1, 33, 0);
  return j__swift_endAccess;
}

unint64_t MPCPlayerResponse.VideoContext.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v5;
  uint64_t v7;
  _QWORD v8[3];
  unint64_t v9;
  unint64_t v10;

  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000026;
  v10 = 0x80000001003B2FD0;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v8, 0, 0);
  v2 = *v1;
  ObjectType = swift_getObjectType();
  v7 = v2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  v5._countAndFlagsBits = sub_100030D00((uint64_t)&v7, ObjectType, WitnessTable);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t MPCPlayerResponse.VideoContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = sub_100005574(&qword_100492DA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = sub_100005574(&qword_100492DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding));
  return v0;
}

uint64_t MPCPlayerResponse.VideoContext.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__isReadyForDisplay;
  v2 = sub_100005574(&qword_100492DA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext__videoBounds;
  v4 = sub_100005574(&qword_100492DB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_binding));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

unint64_t sub_100153408()
{
  return MPCPlayerResponse.VideoContext.description.getter();
}

uint64_t sub_100153428(uint64_t *a1, uint64_t *a2)
{
  return _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t MPCPlayerResponse.videoContext.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  __objc2_prot *v10;

  v1 = v0;
  v2 = objc_msgSend(v1, "videoOutput");
  v3 = (uint64_t)v2;
  if (v2)
  {
    v10 = &OBJC_PROTOCOL___MPCVideoOutput;
    v4 = swift_dynamicCastObjCProtocolConditional(v2, 1, &v10);
    if (!v4)
      goto LABEL_8;
    v5 = (void *)v4;
    ObjectType = swift_getObjectType();
    v7 = sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
    if (!swift_dynamicCastMetatype(ObjectType, v7))
      v5 = 0;
    if (!v5)
    {
LABEL_8:
      swift_unknownObjectRelease(v3);

      return 0;
    }
    v8 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
    v3 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    MPCPlayerResponse.VideoContext.init(output:)(v5);
  }

  return v3;
}

uint64_t _sSo17MPCPlaybackEngineC9MusicCoreE13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, Swift::Int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  char v12;
  uint64_t result;
  id v14;
  id v15;
  char v16;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if ((sub_10012C708(a3, a7) & 1) != 0)
    {
      if (a4)
      {
        if (a8)
        {
          sub_1000087DC(0, (unint64_t *)&unk_100492F50, MPCPlaybackIntent_ptr);
          v14 = a8;
          v15 = a4;
          v16 = static NSObject.== infix(_:_:)(v15, v14);

          if ((v16 & 1) != 0)
            return 1;
        }
      }
      else if (!a8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _sSo17MPCPlayerResponseC9MusicCoreE12VideoContextC2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void **v4;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t KeyPath;
  uint64_t v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CGRect v24;
  _BYTE v25[24];
  _BYTE v26[24];
  CGRect v27;

  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  v4 = (void **)(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a1 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v26, 0, 0);
  v5 = *v4;
  v6 = (void **)(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output);
  swift_beginAccess(a2 + OBJC_IVAR____TtCE9MusicCoreCSo17MPCPlayerResponse12VideoContext_output, v25, 0, 0);
  v7 = *v6;
  v8 = v5;
  v9 = v7;
  v10 = static NSObject.== infix(_:_:)(v8, v9);

  if ((v10 & 1) == 0)
    return 0;
  KeyPath = swift_getKeyPath(&unk_10038DE20);
  v12 = swift_getKeyPath(&unk_10038DE48);
  static Published.subscript.getter(&v24, a1, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  x = v24.origin.x;
  y = v24.origin.y;
  width = v24.size.width;
  height = v24.size.height;
  v17 = swift_getKeyPath(&unk_10038DE20);
  v18 = swift_getKeyPath(&unk_10038DE48);
  static Published.subscript.getter(&v24, a2, v17, v18);
  swift_release(v17);
  swift_release(v18);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  result = CGRectEqualToRect(v27, v24);
  if (!(_DWORD)result)
    return result;
  v20 = swift_getKeyPath(&unk_10038DE68);
  v21 = swift_getKeyPath(&unk_10038DE90);
  static Published.subscript.getter(&v24, a1, v20, v21);
  swift_release(v20);
  swift_release(v21);
  if (LOBYTE(v24.origin.x) != 1)
    return 0;
  v22 = swift_getKeyPath(&unk_10038DE68);
  v23 = swift_getKeyPath(&unk_10038DE90);
  static Published.subscript.getter(&v24, a2, v22, v23);
  swift_release(v22);
  swift_release(v23);
  return LOBYTE(v24.origin.x);
}

void *sub_10015380C(void *a1)
{
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  void *v8;

  v8 = &_swiftEmptySetSingleton;
  if (objc_msgSend(a1, "isSystemMusicApplication"))
    sub_10013343C(&v3, 0);
  if (objc_msgSend(a1, "isAudioAnalyzerEnabled"))
    sub_10013343C(&v4, 1u);
  if (objc_msgSend(a1, "isPictureInPictureSupported"))
    sub_10013343C(&v5, 2u);
  if (objc_msgSend(a1, "isVideoSupported"))
    sub_10013343C(&v6, 3u);
  if (objc_msgSend(a1, "isStateRestorationSupported"))
    sub_10013343C(&v7, 4u);
  return v8;
}

id sub_1001538F0(uint64_t a1, uint64_t a2)
{
  void *v2;

  objc_msgSend(v2, "setSystemMusicApplication:", sub_1000C792C(0, a1));
  objc_msgSend(v2, "setAudioAnalyzerEnabled:", sub_1000C792C(1u, a1));
  objc_msgSend(v2, "setPictureInPictureSupported:", sub_1000C792C(2u, a1));
  objc_msgSend(v2, "setVideoSupported:", sub_1000C792C(3u, a1));
  objc_msgSend(v2, "setStateRestorationSupported:", sub_1000C792C(4u, a1));
  return objc_msgSend(v2, "setFallbackPlaybackIntent:", a2);
}

uint64_t sub_1001539C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574((uint64_t *)&unk_100492D60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100153A08(void *a1)
{
  uint64_t v1;

  sub_100151FE0(a1, *(void **)(v1 + 16), *(_BYTE **)(v1 + 24));
}

uint64_t sub_100153A10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100153A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100153A30(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for MPCPlayerResponse.VideoContext(uint64_t a1)
{
  uint64_t result;

  result = qword_100492E08;
  if (!qword_100492E08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MPCPlayerResponse.VideoContext);
  return result;
}

const char *sub_100153A74()
{
  return "isReadyForDisplay";
}

id sub_100153A80@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isReadyForDisplay");
  *a2 = (_BYTE)result;
  return result;
}

const char *sub_100153AB0()
{
  return "videoBounds";
}

id sub_100153ABC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*a1, "videoBounds");
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_100153AF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100153B14()
{
  uint64_t v0;

  sub_100152644(v0);
}

unint64_t sub_100153B30()
{
  unint64_t result;

  result = qword_100492DC0;
  if (!qword_100492DC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlaybackEngine.Option, &type metadata for MPCPlaybackEngine.Option);
    atomic_store(result, (unint64_t *)&qword_100492DC0);
  }
  return result;
}

unint64_t sub_100153B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100492DC8;
  if (!qword_100492DC8)
  {
    v1 = sub_100005600(&qword_100492DD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100492DC8);
  }
  return result;
}

unint64_t sub_100153BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100492DD8;
  if (!qword_100492DD8)
  {
    type metadata accessor for MPCPlayerRequestTracklistRange(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MPCPlayerRequestTracklistRange, v1);
    atomic_store(result, (unint64_t *)&qword_100492DD8);
  }
  return result;
}

void _s13ConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));

}

_QWORD *_s13ConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *_s13ConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a1[3];
  v7 = (void *)a2[3];
  a1[3] = v7;
  v8 = v7;

  return a1;
}

_QWORD *_s13ConfigurationVwta(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t _s13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Configuration()
{
  return &type metadata for MPCPlaybackEngine.Configuration;
}

uint64_t _s6OptionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100153E38 + 4 * byte_10038DD75[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100153E6C + 4 * asc_10038DD70[v4]))();
}

uint64_t sub_100153E6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100153E74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100153E7CLL);
  return result;
}

uint64_t sub_100153E88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100153E90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100153E94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100153E9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MPCPlaybackEngine.Option()
{
  return &type metadata for MPCPlaybackEngine.Option;
}

uint64_t sub_100153EB8()
{
  return type metadata accessor for MPCPlayerResponse.VideoContext(0);
}

void sub_100153EC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  sub_100153F5C();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100153FB0(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = &unk_10038E088;
      swift_updateClassMetadata2(a1, 256, 4, v6, a1 + 80);
    }
  }
}

void sub_100153F5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_100492E18)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_100492E18);
  }
}

void sub_100153FB0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100492E20)
  {
    type metadata accessor for CGRect(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100492E20);
  }
}

uint64_t sub_100154004(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_100492D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Player.SnapshotController.windowScene.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t Player.SnapshotController.player.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

uint64_t Player.SnapshotController.__allocating_init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 81, 7);
  Player.SnapshotController.init(windowScene:player:)(a1, a2);
  return v5;
}

uint64_t Player.SnapshotController.init(windowScene:player:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  CFRange v12;
  CFRange v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  NSString *v17;
  uint64_t v18;
  CFRange v19;
  uint64_t v20;
  NSString *v21;
  uint64_t v22;
  CFRange v23;
  uint64_t v24;
  NSString *v25;
  uint64_t v26;
  _BYTE v29[72];
  _BYTE v30[72];
  _BYTE v31[112];
  _BYTE v32[32];

  v3 = v2;
  v6 = v2 + 16;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_BYTE *)(v3 + 64) = 0;
  *(_BYTE *)(v3 + 80) = 1;
  swift_beginAccess(v7, v32, 1, 0);
  swift_unknownObjectWeakAssign(v6, a1);
  *(_QWORD *)(v3 + 24) = a2;
  v8 = sub_100005574((uint64_t *)&unk_100491910);
  v9 = swift_allocObject(v8, 56, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100384B00;
  v10 = sub_100005574(&qword_100490BF0);
  inited = swift_initStackObject(v10, v31);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  v12 = CFRange.init(_:)((__C::_NSRange)(unint64_t)UISceneDidEnterBackgroundNotification);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 32) = v12;
  v13 = CFRange.init(_:)((__C::_NSRange)(unint64_t)UISceneWillEnterForegroundNotification);
  *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 72) = v13;
  v14 = swift_allocObject(&unk_10044F448, 24, 7);
  swift_weakInit(v14 + 16, v3);
  v15 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v15, 48, 7);
  swift_retain(a2);
  v16 = UISceneDidEnterBackgroundNotification;
  v17 = UISceneWillEnterForegroundNotification;
  *(_QWORD *)(v9 + 32) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_100154484, v14);
  v18 = swift_initStackObject(v10, v30);
  *(_OWORD *)(v18 + 16) = xmmword_100384A80;
  v19 = CFRange.init(_:)((__C::_NSRange)(unint64_t)UIScreenBrightnessDidChangeNotification);
  *(_QWORD *)(v18 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v18 + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(v18 + 32) = v19;
  v20 = swift_allocObject(&unk_10044F448, 24, 7);
  swift_weakInit(v20 + 16, v3);
  swift_allocObject(v15, 48, 7);
  v21 = UIScreenBrightnessDidChangeNotification;
  *(_QWORD *)(v9 + 40) = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v18, 1, (uint64_t)sub_100154A70, v20);
  v22 = swift_initStackObject(v10, v29);
  *(_OWORD *)(v22 + 16) = xmmword_100384A80;
  v23 = CFRange.init(_:)((__C::_NSRange)(unint64_t)UIApplicationProtectedDataDidBecomeAvailable);
  *(_QWORD *)(v22 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v22 + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(v22 + 32) = v23;
  v24 = swift_allocObject(&unk_10044F448, 24, 7);
  swift_weakInit(v24 + 16, v3);
  swift_allocObject(v15, 48, 7);
  v25 = UIApplicationProtectedDataDidBecomeAvailable;
  v26 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v22, 1, (uint64_t)sub_1001550DC, v24);
  *(_QWORD *)(v9 + 48) = v26;
  specialized Array._endMutation()(v26);

  swift_release(a2);
  *(_QWORD *)(v3 + 32) = v9;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10015440C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100154430(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    sub_10015448C();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

double sub_100154484()
{
  uint64_t v0;

  return sub_100154430(v0);
}

double sub_10015448C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *Strong;
  uint64_t v18;
  void *v19;
  id v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  int v62;
  os_log_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71[3];
  char v72[24];

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v2);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_1004938D0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_100493038);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_100493040);
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100005574(&qword_100493048);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v67 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + 16;
  swift_beginAccess(v16, v72, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v16);
  if (Strong && (v19 = Strong, v20 = objc_msgSend(Strong, "activationState"), v19, v20 == (id)2))
  {
    if (*(_QWORD *)(v1 + 40))
      return result;
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v64 = v14;
    v22 = type metadata accessor for Logger(0, v18);
    v23 = sub_1000086B4(v22, (uint64_t)qword_1004A2230);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      v63 = v24;
      v27 = v26;
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v25, "[📸👁️] App is backgrounded: Observing for now playing changes", v26, 2u);
      v28 = v27;
      v24 = v63;
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = *(_QWORD *)(v1 + 24);
    KeyPath = swift_getKeyPath(&unk_10038E108);
    v31 = swift_getKeyPath(&unk_10038E130);
    static Published.subscript.getter(v71, v29, KeyPath, v31);
    swift_release(KeyPath);
    swift_release(v31);
    v32 = *(void **)(v1 + 48);
    *(id *)(v1 + 48) = v71[0];

    swift_beginAccess(v29 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v71, 33, 0);
    v33 = sub_100005574((uint64_t *)&unk_1004933B0);
    Published.projectedValue.getter(v33);
    swift_endAccess(v71);
    v34 = sub_10002FFB8((unint64_t *)&qword_100493050, &qword_1004938D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    Publisher.dropFirst(_:)(1, v4, v34);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v35 = sub_10002FFB8(&qword_100493058, &qword_100493038, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    v36 = sub_100155A9C();
    v37 = v64;
    Publisher<>.removeDuplicates()(v8, v35, v36);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v38 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
    v71[0] = (id)static OS_dispatch_queue.main.getter(v38, v39, v40, v41, v42, v43, v44, v45);
    v46 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v47 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v69, 1, 1, v46);
    v48 = sub_10002FFB8(&qword_100493078, &qword_100493040, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    sub_100155B20((unint64_t *)&qword_100493850, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v49 = v66;
    v50 = v67;
    Publisher.receive<A>(on:options:)(v71, v47, v66, v38, v48);
    sub_100008758(v47, (uint64_t *)&unk_1004962D0);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v49);
    v51 = swift_allocObject(&unk_10044F448, 24, 7);
    swift_weakInit(v51 + 16, v1);
    v52 = sub_10002FFB8(&qword_100493080, &qword_100493048, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v53 = v70;
    v54 = Publisher<>.sink(receiveValue:)(sub_100155B60, v51, v70, v52);
    v55 = swift_release(v51);
    (*(void (**)(char *, uint64_t, __n128))(v68 + 8))(v50, v53, v55);
    v56 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 40) = v54;
  }
  else
  {
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v57 = type metadata accessor for Logger(0, v18);
    v58 = sub_1000086B4(v57, (uint64_t)qword_1004A2230);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "[📸👁️] App is foregrounded: Stopping now playing changes observation", v61, 2u);
      swift_slowDealloc(v61, -1, -1);
    }

    v62 = *(unsigned __int8 *)(v1 + 64);
    *(_BYTE *)(v1 + 64) = 0;
    if (v62 == 1)
    {
      *(_QWORD *)(v1 + 72) = 0;
      *(_BYTE *)(v1 + 80) = 1;
    }
    v56 = *(_QWORD *)(v1 + 40);
    *(_QWORD *)(v1 + 40) = 0;
  }
  *(_QWORD *)&result = swift_release(v56).n128_u64[0];
  return result;
}

double sub_100154A70()
{
  uint64_t v0;

  return sub_100155080(v0, 0);
}

void sub_100154A8C(char a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  void *Strong;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unsigned int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  NSObject *oslog;
  char v48;
  uint64_t v49;
  uint64_t v50[3];

  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v3 = (void *)objc_opt_self(UIApplication);
    v4 = objc_msgSend(v3, "sharedApplication");
    v5 = objc_msgSend(v4, "isProtectedDataAvailable");

    if (v5)
    {
      swift_beginAccess(v1 + 16, v50, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + 16);
      if (Strong
        && (v9 = Strong,
            v10 = objc_msgSend(Strong, "screen"),
            v9,
            objc_msgSend(v10, "brightness"),
            v12 = v11,
            v10,
            v12 > 0.0))
      {
        v13 = *(unsigned __int8 *)(v1 + 64);
        *(_BYTE *)(v1 + 64) = 0;
        if (v13 == 1)
        {
          *(_QWORD *)(v1 + 72) = 0;
          *(_BYTE *)(v1 + 80) = 1;
        }
        if (qword_10048C880 != -1)
          swift_once(&qword_10048C880, sub_100170054);
        v14 = type metadata accessor for Logger(0, v8);
        v15 = sub_1000086B4(v14, (uint64_t)qword_1004A2230);
        v16 = Logger.logObject.getter(v15);
        v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = swift_slowAlloc(22, -1);
          v19 = swift_slowAlloc(32, -1);
          v49 = v19;
          *(_DWORD *)v18 = 134349314;
          *(double *)(v18 + 4) = v12;
          *(_WORD *)(v18 + 12) = 2080;
          v20 = objc_msgSend(v3, "sharedApplication");
          v21 = objc_msgSend(v20, "isProtectedDataAvailable");

          if (v21)
            v22 = 0x64656B636F6C6E75;
          else
            v22 = 0x64656B636F6CLL;
          if (v21)
            v23 = (char *)0xE800000000000000;
          else
            v23 = (char *)0xE600000000000000;
          *(_QWORD *)(v18 + 14) = sub_100019400((char *)v22, v23, &v49);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "[📸] Brightness is at %{public}f, device is %s", (uint8_t *)v18, 0x16u);
          swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v19, -1, -1);
          swift_slowDealloc(v18, -1, -1);
        }

        v25 = Logger.logObject.getter(v24);
        v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = swift_slowAlloc(12, -1);
          v28 = swift_slowAlloc(32, -1);
          v49 = v28;
          *(_DWORD *)v27 = 136446210;
          v48 = a1;
          v29 = (char *)String.init<A>(describing:)(&v48, &_s18SnapshotControllerC6ReasonON);
          *(_QWORD *)(v27 + 4) = sub_100019400(v29, v30, &v49);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "[📸✅:%{public}s] Taking Snapshot!", (uint8_t *)v27, 0xCu);
          swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v28, -1, -1);
          swift_slowDealloc(v27, -1, -1);
        }

        v31 = objc_msgSend(v3, "sharedApplication");
        objc_msgSend(v31, "_updateSnapshotForBackgroundApplication:", 0);

      }
      else
      {
        if (qword_10048C880 != -1)
          swift_once(&qword_10048C880, sub_100170054);
        v39 = type metadata accessor for Logger(0, v8);
        v40 = sub_1000086B4(v39, (uint64_t)qword_1004A2230);
        v41 = Logger.logObject.getter(v40);
        v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc(12, -1);
          v44 = swift_slowAlloc(32, -1);
          v49 = v44;
          *(_DWORD *)v43 = 136446210;
          v48 = a1;
          v45 = (char *)String.init<A>(describing:)(&v48, &_s18SnapshotControllerC6ReasonON);
          *(_QWORD *)(v43 + 4) = sub_100019400(v45, v46, &v49);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "[📸❌:%{public}s] Skipping: Screen brightness is 0", (uint8_t *)v43, 0xCu);
          swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(v43, -1, -1);
        }

      }
    }
    else
    {
      if (qword_10048C880 != -1)
        swift_once(&qword_10048C880, sub_100170054);
      v32 = type metadata accessor for Logger(0, v6);
      v33 = sub_1000086B4(v32, (uint64_t)qword_1004A2230);
      oslog = Logger.logObject.getter(v33);
      v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v34))
      {
        v35 = swift_slowAlloc(12, -1);
        v36 = swift_slowAlloc(32, -1);
        v50[0] = v36;
        *(_DWORD *)v35 = 136446210;
        LOBYTE(v49) = a1;
        v37 = (char *)String.init<A>(describing:)(&v49, &_s18SnapshotControllerC6ReasonON);
        *(_QWORD *)(v35 + 4) = sub_100019400(v37, v38, v50);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, oslog, v34, "[📸❌:%{public}s] Skipping Snapshot Request: Device is locked", (uint8_t *)v35, 0xCu);
        swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);

      }
      else
      {

      }
    }
  }
}

double sub_100155080(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_100154A8C(a2);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_1001550DC()
{
  uint64_t v0;

  return sub_100155080(v0, 1);
}

void sub_1001550F8(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  id v33;

  v5 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + 48);
  v33 = v8;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v2 + 48) = a1;
    v9 = a1;

    return;
  }
  if (v8)
  {
    v10 = objc_msgSend(v8, "tracklist");
    v11 = objc_msgSend(v10, "playingItem");

    if (!a1)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      if (!v11)
        goto LABEL_25;
      goto LABEL_9;
    }
  }
  else
  {
    v11 = 0;
    v13 = 0;
    v14 = 0;
    if (!a1)
      goto LABEL_25;
  }
  v15 = objc_msgSend(a1, "tracklist");
  v12 = objc_msgSend(v15, "playingItem");

  if (!v11)
  {
    v13 = 0;
    v19 = 0;
    v17 = 0;
    v14 = 0;
    if (!v12)
      goto LABEL_25;
    goto LABEL_12;
  }
LABEL_9:
  v16 = objc_msgSend(v11, "contentItemIdentifier");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  if (!v12)
  {
    v14 = 0;
    v13 = v11;
    if (!v19)
      goto LABEL_25;
    goto LABEL_22;
  }
  v13 = v11;
LABEL_12:
  v20 = objc_msgSend(v12, "contentItemIdentifier");
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  if (!v19)
  {
    v14 = v12;
    if (!v23)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (!v23)
  {
    v11 = v13;
LABEL_22:
    v13 = v11;
LABEL_23:
    v24 = swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v17 == v21 && v19 == v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v12;
    goto LABEL_25;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
  swift_bridgeObjectRelease();
  v24 = swift_bridgeObjectRelease();
  v14 = v12;
  if ((v25 & 1) == 0)
  {
LABEL_27:
    static TaskPriority.userInitiated.getter(v24);
    v26 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 0, 1, v26);
    v27 = swift_allocObject(&unk_10044F480, 32, 7);
    *(_QWORD *)(v27 + 16) = &unk_100493090;
    *(_QWORD *)(v27 + 24) = v2;
    swift_retain(v2);
    v28 = static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_1004930A0, v27, (uint64_t)&type metadata for () + 8, 1.0);
    swift_release(v27);
    sub_100008758((uint64_t)v7, (uint64_t *)&unk_100493720);
    v29 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)(v2 + 56) = v28;
    swift_retain(v28);
    if (v29)
    {
      sub_100005574((uint64_t *)&unk_1004911F0);
      Task.cancel()();
      swift_release(v29);
    }
    swift_release(v28);

    goto LABEL_31;
  }
LABEL_25:
  v24 = sub_1001554D8(v13, v14);
  if ((v24 & 1) != 0)
  {
    v12 = v14;
    goto LABEL_27;
  }

LABEL_31:
  v30 = *(void **)(v2 + 48);
  *(_QWORD *)(v2 + 48) = a1;
  v31 = a1;

}

double sub_100155478(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_1001550F8(v2, 0);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001554D8(void *a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  unsigned int v8;
  id v10;
  void *v11;

  if (a1)
  {
    v3 = objc_msgSend(a1, "metadataObject");
    if (v3)
    {
      v4 = v3;
      v5 = objc_msgSend(v3, "innermostModelObject");

      if (!a2)
        goto LABEL_4;
LABEL_8:
      v10 = objc_msgSend(a2, "metadataObject");
      if (v10)
      {
        v11 = v10;
        a2 = objc_msgSend(v10, "innermostModelObject");

        if (v5)
          goto LABEL_5;
      }
      else
      {
        a2 = 0;
        if (v5)
          goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
  v5 = 0;
  if (a2)
    goto LABEL_8;
LABEL_4:
  if (v5)
  {
LABEL_5:
    if (a2)
    {
      v6 = objc_msgSend(v5, "identifiers");
      v7 = objc_msgSend(a2, "identifiers");
      v8 = objc_msgSend(v6, "intersectsSet:", v7);

      return v8 ^ 1;
    }

    return 1;
  }
LABEL_10:
  if (a2)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_10015561C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100155688, v3, v4);
}

uint64_t sub_100155688()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  if ((static Task<>.isCancelled.getter(v1) & 1) == 0)
    sub_1001556CC(2, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001556CC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t aBlock[5];
  uint64_t v19;

  if ((*(_BYTE *)(v2 + 64) & 1) == 0)
  {
    v3 = v2;
    *(_BYTE *)(v2 + 64) = 1;
    *(_QWORD *)(v2 + 72) = 0;
    *(_BYTE *)(v2 + 80) = 1;
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v5 = type metadata accessor for Logger(0, a2);
    v6 = sub_1000086B4(v5, (uint64_t)qword_1004A2230);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      aBlock[0] = v10;
      *(_DWORD *)v9 = 136446210;
      v17 = a1;
      v11 = (char *)String.init<A>(describing:)(&v17, &_s18SnapshotControllerC6ReasonON);
      *(_QWORD *)(v9 + 4) = sub_100019400(v11, v12, aBlock);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[📸] Set Needs Snapshot for Reason=%{public}s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);
    }

    v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v14 = swift_allocObject(&unk_10044F4A8, 25, 7);
    *(_QWORD *)(v14 + 16) = v3;
    *(_BYTE *)(v14 + 24) = a1;
    aBlock[4] = (uint64_t)sub_100155C68;
    v19 = v14;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000BED80;
    aBlock[3] = (uint64_t)&unk_10044F4C0;
    v15 = _Block_copy(aBlock);
    v16 = v19;
    swift_retain(v3);
    objc_msgSend(v13, "_performBlockAfterCATransactionCommits:", v15, swift_release(v16).n128_f64[0]);
    _Block_release(v15);

  }
}

uint64_t sub_1001558F8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_100013F98;
  return v5();
}

uint64_t Player.SnapshotController.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t Player.SnapshotController.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 81, 7);
}

uint64_t sub_1001559DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_100155A28(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 16;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t type metadata accessor for Player.SnapshotController()
{
  return objc_opt_self(_TtCC9MusicCore6Player18SnapshotController);
}

unint64_t sub_100155A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100493060;
  if (!qword_100493060)
  {
    v1 = sub_100005600(&qword_100493790);
    sub_100155B20(&qword_100493068, &qword_100493070, MPCPlayerResponse_ptr, (uint64_t)&protocol conformance descriptor for NSObject);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100493060);
  }
  return result;
}

uint64_t sub_100155B20(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1000087DC(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

double sub_100155B60(void **a1)
{
  uint64_t v1;

  return sub_100155478(a1, v1);
}

uint64_t sub_100155B68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_10049308C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_10000EA88;
  return sub_10015561C(v0);
}

uint64_t sub_100155BB0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100155BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049309C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100493098 + dword_100493098))(a1, v4);
}

uint64_t sub_100155C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_100155C68()
{
  uint64_t v0;

  sub_100154A8C(*(_BYTE *)(v0 + 24));
}

uint64_t sub_100155C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100155CA0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t _s18SnapshotControllerC6ReasonOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100155CF4 + 4 * byte_10038E0A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100155D28 + 4 * byte_10038E0A0[v4]))();
}

uint64_t sub_100155D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100155D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100155D38);
  return result;
}

uint64_t sub_100155D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100155D4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100155D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100155D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18SnapshotControllerC6ReasonOMa()
{
  return &_s18SnapshotControllerC6ReasonON;
}

unint64_t sub_100155D78()
{
  unint64_t result;

  result = qword_1004930A8;
  if (!qword_1004930A8)
  {
    result = swift_getWitnessTable(&unk_10038E198, &_s18SnapshotControllerC6ReasonON);
    atomic_store(result, (unint64_t *)&qword_1004930A8);
  }
  return result;
}

uint64_t PlaybackController.insert(_:location:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = type metadata accessor for UUID(0);
  v3[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[20] = v5;
  v3[21] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v3[22] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v3[23] = v7;
  v3[24] = v8;
  return swift_task_switch(sub_100155E54, v7, v8);
}

uint64_t sub_100155E54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t KeyPath;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  _QWORD *v35;
  uint64_t v37;

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[19];
  v4 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v5 = (char *)UUID.uuidString.getter(v4);
  v7 = v6;
  v0[25] = v5;
  v0[26] = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v9 = (void *)v0[16];
  v10 = type metadata accessor for Logger(0, v8);
  v0[27] = sub_1000086B4(v10, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v7, 2);
  v11 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v14 = (void *)v0[16];
  if (v13)
  {
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v37 = v16;
    *(_DWORD *)v15 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v15 + 4) = sub_100019400(v5, v7, &v37);
    swift_bridgeObjectRelease_n(v7, 3);
    *(_WORD *)(v15 + 12) = 2082;
    v17 = v14;
    v18 = objc_msgSend(v17, "description", v37);
    v19 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

    *(_QWORD *)(v15 + 14) = sub_100019400(v19, v21, &v37);
    swift_bridgeObjectRelease(v21);

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "⤵️ Inserting new intent with ID=%{public}s, intent=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v7, 2);

  }
  v22 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v22, v0 + 7, 0, 0);
  v23 = *v22;
  v25 = (void *)v0[16];
  v24 = (void *)v0[17];
  if (!v23)
  {
    v31 = v25;
    sub_1000528E4(v24);
    goto LABEL_10;
  }
  KeyPath = swift_getKeyPath(&unk_10038E1D0);
  v27 = swift_getKeyPath(&unk_10038E1F8);
  v28 = v25;
  swift_retain(v23);
  sub_1000528E4(v24);
  static Published.subscript.getter(v0 + 14, v23, KeyPath, v27);
  swift_release(v27);
  swift_release(KeyPath);
  swift_release(v23);
  v29 = (void *)v0[14];
  if (!v29)
  {
LABEL_10:
    v30 = 0;
    goto LABEL_11;
  }

  v30 = 1;
LABEL_11:
  v33 = (void *)v0[16];
  v32 = (void *)v0[17];
  MPCPlaybackIntent.isInGroupSession.setter(v30);
  v0[5] = &type metadata for Player.InsertCommand;
  v0[6] = &protocol witness table for Player.InsertCommand;
  v0[2] = v33;
  v0[3] = v32;
  v34 = v33;
  sub_1000528E4(v32);
  v35 = (_QWORD *)swift_task_alloc(dword_1004930DC);
  v0[28] = v35;
  *v35 = v0;
  v35[1] = sub_1001561A0;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)(v0 + 2), 0, 0, (uint64_t)v33);
}

uint64_t sub_1001561A0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_10015639C;
  }
  else
  {

    sub_10000682C(v4 + 2);
    v6 = v4[23];
    v7 = v4[24];
    v8 = sub_100156220;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100156220()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  swift_release(*(_QWORD *)(v0 + 176));
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 208);
  if (v4)
  {
    v6 = *(char **)(v0 + 200);
    v8 = *(void **)(v0 + 128);
    v7 = *(void **)(v0 + 136);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v13 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v9 + 4) = sub_100019400(v6, v5, &v13);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "✅ Successfully inserted intent with ID=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    sub_100052658(v7);
  }
  else
  {
    v11 = *(void **)(v0 + 136);

    sub_100052658(v11);
    swift_bridgeObjectRelease_n(v5, 2);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015639C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  void *v31;
  void *v32;
  unint64_t v33;
  _QWORD *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37[2];

  v1 = *(_QWORD *)(v0 + 232);
  sub_10000682C((_QWORD *)(v0 + 16));
  *(_QWORD *)(v0 + 120) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (!swift_dynamicCast(v0 + 80, v0 + 120, v2, &type metadata for Player.PlaybackError, 0))
  {
    v15 = *(_QWORD *)(v0 + 208);
    v16 = *(_QWORD *)(v0 + 176);
    v17 = *(void **)(v0 + 136);

    sub_100052658(v17);
    swift_release(v16);
    swift_bridgeObjectRelease(v15);
LABEL_12:
    v36 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 240) = v4;
  *(_QWORD *)(v0 + 248) = v3;
  v5 = (void *)_convertErrorToNSError(_:)(v4);
  v6 = objc_msgSend(v5, "code");

  if (v6 != (id)3)
  {
    swift_release(*(_QWORD *)(v0 + 176));
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain(v4);
    v18 = swift_bridgeObjectRetain();
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    v21 = os_log_type_enabled(v19, v20);
    v22 = *(char **)(v0 + 208);
    if (v21)
    {
      v23 = *(char **)(v0 + 200);
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      v37[0] = v25;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v24 + 4) = sub_100019400(v23, v22, v37);
      swift_bridgeObjectRelease_n(v22, 3);
      *(_WORD *)(v24 + 12) = 2082;
      *(_QWORD *)(v0 + 96) = v4;
      *(_QWORD *)(v0 + 104) = v3;
      swift_errorRetain(v4);
      swift_bridgeObjectRetain();
      v26 = (char *)String.init<A>(describing:)(v0 + 96, &type metadata for Player.PlaybackError);
      v28 = v27;
      *(_QWORD *)(v24 + 14) = sub_100019400(v26, v27, v37);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "❌ Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
      swift_errorRelease(v4);
      swift_bridgeObjectRelease(v3);
    }

    v32 = *(void **)(v0 + 128);
    v31 = *(void **)(v0 + 136);
    v33 = sub_10016AD54();
    swift_allocError(&type metadata for Player.PlaybackError, v33, 0, 0);
    *v34 = v4;
    v34[1] = v3;
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_willThrow(v35);

    sub_100052658(v31);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v3);
    goto LABEL_12;
  }
  v7 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 208), 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(char **)(v0 + 208);
  if (v10)
  {
    v12 = *(char **)(v0 + 200);
    v13 = swift_slowAlloc(22, -1);
    v14 = swift_slowAlloc(64, -1);
    v37[0] = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 4) = sub_100019400(v12, v11, v37);
    swift_bridgeObjectRelease_n(v11, 3);
    *(_WORD *)(v13 + 12) = 2082;
    *(_QWORD *)(v13 + 14) = sub_100019400((char *)0xD00000000000001FLL, (char *)0x80000001003B3140, v37);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "❌ Insert failed for intent with ID=%{public}s, error=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 208), 2);
  }

  v29 = (_QWORD *)swift_task_alloc(dword_1004930F4);
  *(_QWORD *)(v0 + 256) = v29;
  *v29 = v0;
  v29[1] = sub_10015682C;
  return sub_10015949C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
}

uint64_t sub_10015682C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  v3 = v2[26];
  if (v0)
  {
    swift_errorRelease(v0);
    swift_bridgeObjectRelease(v3);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_10016DA28;
  }
  else
  {
    swift_bridgeObjectRelease(v2[26]);
    v4 = v2[23];
    v5 = v2[24];
    v6 = sub_1001568B0;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001568B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 248);
  v4 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 176));
  v5 = sub_10016AD98();
  swift_allocError(&type metadata for PlaybackController.CommandError, v5, 0, 0);
  *(_QWORD *)v6 = 3;
  *(_BYTE *)(v6 + 8) = 2;
  swift_willThrow(v7);

  sub_100052658(v3);
  swift_errorRelease(v1);
  swift_bridgeObjectRelease(v2);
  v8 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PlaybackController.add(_:route:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  v4 = type metadata accessor for CocoaError.Code(0);
  v3[21] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[22] = v5;
  v3[23] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3[24] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[25] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[26] = swift_task_alloc(v8);
  v3[27] = swift_task_alloc(v8);
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v3[28] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[29] = swift_task_alloc(v10);
  v3[30] = swift_task_alloc(v10);
  v11 = type metadata accessor for PlaybackIntentDescriptor(0);
  v3[31] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v12);
  v3[33] = swift_task_alloc(v12);
  v13 = type metadata accessor for UUID(0);
  v3[34] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v3[35] = v14;
  v3[36] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v3[37] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v3[38] = v16;
  v3[39] = v17;
  return swift_task_switch(sub_100156ACC, v16, v17);
}

uint64_t sub_100156ACC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v51;
  uint64_t v52;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v4 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v4, v0 + 2, 1, 0);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[4] = 0;
  sub_10016ADDC(v5, v6, v7, v8, v9);
  v10 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v11 = UUID.uuidString.getter(v10);
  v13 = v12;
  v0[40] = v11;
  v0[41] = v12;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v15 = v0 + 5;
  v16 = v0[33];
  v17 = v0[18];
  v18 = type metadata accessor for Logger(0, v14);
  v0[42] = v18;
  v0[43] = sub_1000086B4(v18, (uint64_t)static Logger.playbackController);
  sub_100082248(v17, v16, type metadata accessor for PlaybackIntentDescriptor);
  v19 = swift_bridgeObjectRetain_n(v13, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = os_log_type_enabled(v20, v21);
  v23 = v0[33];
  if (v22)
  {
    v24 = v0[31];
    v25 = v0[32];
    v26 = swift_slowAlloc(22, -1);
    v51 = (char *)v11;
    v52 = swift_slowAlloc(64, -1);
    v27 = v52;
    *(_DWORD *)v26 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v26 + 4) = sub_100019400(v51, v13, &v52);
    swift_bridgeObjectRelease_n(v13, 3);
    *(_WORD *)(v26 + 12) = 2082;
    sub_100082248(v23, v25, type metadata accessor for PlaybackIntentDescriptor);
    v28 = v25;
    v15 = v0 + 5;
    v29 = (char *)String.init<A>(describing:)(v28, v24);
    v31 = v30;
    *(_QWORD *)(v26 + 14) = sub_100019400(v29, v30, &v52);
    swift_bridgeObjectRelease(v31);
    sub_100006798(v23, type metadata accessor for PlaybackIntentDescriptor);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "➕ Adding new playback intent with ID=%{public}s, descriptor=%{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
    v32 = v27;
    v11 = (uint64_t)v51;
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v13, 2);
    sub_100006798(v23, type metadata accessor for PlaybackIntentDescriptor);
  }

  v33 = v0[30];
  v34 = v0[28];
  sub_100082248(v0[18], v33, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v33, v34);
  v36 = (void **)v0[30];
  if (EnumCaseMultiPayload == 1)
  {
    v37 = v0[27];
    v38 = v0[24];
    v39 = v0[25];
    v40 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v39 + 32))(v37, v36, v38);
    v41 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v40);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
  }
  else
  {
    v41 = *v36;
  }
  v42 = (uint64_t *)(v0[20] + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v42, v15, 0, 0);
  v43 = *v42;
  if (!*v42)
    goto LABEL_12;
  KeyPath = swift_getKeyPath(&unk_10038E1D0);
  v45 = swift_getKeyPath(&unk_10038E1F8);
  v46 = swift_retain(v43);
  static Published.subscript.getter(v0 + 14, v46, KeyPath, v45);
  swift_release(v45);
  swift_release(KeyPath);
  swift_release(v43);
  v47 = (void *)v0[14];
  if (v47)
  {

    v48 = 1;
  }
  else
  {
LABEL_12:
    v48 = 0;
  }
  MPCPlaybackIntent.isInGroupSession.setter(v48);

  v49 = (_QWORD *)swift_task_alloc(dword_100493114);
  v0[44] = v49;
  *v49 = v0;
  v49[1] = sub_100156E98;
  return sub_10015A66C(v0[18], v11, (uint64_t)v13, v0[19]);
}

uint64_t sub_100156E98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1001575E0;
  else
    v4 = sub_100156EF8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 304), *(_QWORD *)(v2 + 312));
}

uint64_t sub_100156EF8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 328), 2);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v27 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v7 + 4) = sub_100019400(v6, v5, &v27);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "✅ Successfully added intent with ID=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
  }

  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 144);
  _s9MusicCore9AppReviewO16recordSongPlayedyyFZ_0();
  if (*(_BYTE *)(v10 + *(int *)(v9 + 32)) == 1)
  {
    v11 = (_QWORD *)swift_task_alloc(dword_10049312C);
    *(_QWORD *)(v0 + 368) = v11;
    *v11 = v0;
    v11[1] = sub_1001571BC;
    return sub_10015F508();
  }
  v13 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v13 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v14);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 232);
    sub_100082248(v13, v16, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v16, v15) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v17 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v17;
      *v17 = v0;
      v17[1] = sub_100157370;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v18);
    sub_100006798(v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v20 = *(_QWORD *)(v0 + 256);
  v21 = *(_QWORD *)(v0 + 264);
  v23 = *(_QWORD *)(v0 + 232);
  v22 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v21);
  swift_task_dealloc(v20);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001571BC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 368));
  return swift_task_switch(sub_100157208, *(_QWORD *)(v1 + 304), *(_QWORD *)(v1 + 312));
}

uint64_t sub_100157208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 144);
  if ((*(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 248) + 36)) & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 328);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 232);
    sub_100082248(v1, v4, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v4, v3) == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 192));
      v5 = (_QWORD *)swift_task_alloc(async function pointer to MusicPlaybackIntentDescriptor.donate()[1]);
      *(_QWORD *)(v0 + 376) = v5;
      *v5 = v0;
      v5[1] = sub_100157370;
      return MusicPlaybackIntentDescriptor.donate()();
    }
    v7 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 232);
    swift_release(*(_QWORD *)(v0 + 296));
    swift_bridgeObjectRelease(v7);
    sub_100006798(v8, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  }
  v9 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 232);
  v11 = *(_QWORD *)(v0 + 240);
  v14 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v10);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100157370()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 376);
  *(_QWORD *)(*(_QWORD *)v1 + 384) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(v2[41]);
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_100157F50;
  }
  else
  {
    v4 = v2[38];
    v5 = v2[39];
    v6 = sub_1001573DC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001573DC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_10048C878 != -1)
    swift_once(&qword_10048C878, sub_10016A2EC);
  sub_1000086B4(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  v1 = swift_bridgeObjectRetain();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(char **)(v0 + 328);
  if (v4)
  {
    v6 = *(char **)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v23 = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v10 + 4) = sub_100019400(v6, v5, &v23);
    swift_bridgeObjectRelease_n(v5, 3);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Successfully donated intent with ID=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 192);

    swift_bridgeObjectRelease_n(v5, 2);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v15 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 264);
  v18 = *(_QWORD *)(v0 + 232);
  v17 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 208);
  v19 = *(_QWORD *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001575E0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  __n128 v57;
  id v58;
  os_log_type_t v59;
  _BOOL4 v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  os_log_type_t v69;
  _BOOL4 v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85[2];

  v1 = *(_QWORD *)(v0 + 360);
  swift_release(*(_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 96) = v1;
  v2 = (_QWORD *)(v0 + 96);
  swift_errorRetain(v1);
  v3 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (swift_dynamicCast(v0 + 80, v0 + 96, v3, &type metadata for PlaybackController.CommandError, 0))
  {
    v4 = *(void **)(v0 + 80);
    v5 = *(unsigned __int8 *)(v0 + 88);
    if (*(_BYTE *)(v0 + 88))
    {
      if (v5 != 3)
      {
LABEL_7:
        sub_10016AE0C(*(id *)(v0 + 80), v5);
        goto LABEL_8;
      }
      if (v4)
      {
        if (v4 == (void *)2)
        {
          swift_errorRelease(*v2);
          goto LABEL_9;
        }
        goto LABEL_7;
      }
      v68 = swift_bridgeObjectRetain();
      v37 = Logger.logObject.getter(v68);
      v69 = static os_log_type_t.error.getter();
      v70 = os_log_type_enabled(v37, v69);
      v71 = *(char **)(v0 + 328);
      if (v70)
      {
        v72 = *(char **)(v0 + 320);
        v73 = swift_slowAlloc(12, -1);
        v74 = swift_slowAlloc(32, -1);
        v85[0] = v74;
        *(_DWORD *)v73 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v73 + 4) = sub_100019400(v72, v71, v85);
        swift_bridgeObjectRelease_n(v71, 3);
        _os_log_impl((void *)&_mh_execute_header, v37, v69, "❌ Intent id=%{public}s) — Missing player", (uint8_t *)v73, 0xCu);
        swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v74, -1, -1);
        swift_slowDealloc(v73, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      }
    }
    else
    {
      sub_10016AE40(*(id *)(v0 + 80), v5);
      swift_bridgeObjectRetain();
      v36 = sub_10016AE40(v4, 0);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter();
      v39 = os_log_type_enabled(v37, v38);
      v40 = *(char **)(v0 + 328);
      if (v39)
      {
        v41 = *(char **)(v0 + 320);
        v42 = swift_slowAlloc(22, -1);
        v43 = swift_slowAlloc(64, -1);
        v85[0] = v43;
        *(_DWORD *)v42 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 4) = sub_100019400(v41, v40, v85);
        swift_bridgeObjectRelease_n(v40, 3);
        *(_WORD *)(v42 + 12) = 2082;
        *(_QWORD *)(v0 + 128) = v4;
        sub_10016AE64(v4);
        v44 = (char *)String.init<A>(describing:)(v0 + 128, &type metadata for PlaybackController.CommandError.AlertKind);
        v46 = v45;
        *(_QWORD *)(v42 + 14) = sub_100019400(v44, v45, v85);
        swift_bridgeObjectRelease(v46);
        sub_10016AE0C(v4, 0);
        sub_10016AE0C(v4, 0);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "❌ Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        sub_10016AE0C(v4, 0);
LABEL_35:
        v75 = *v2;
LABEL_38:
        swift_errorRelease(v75);
        goto LABEL_39;
      }
      sub_10016AE0C(v4, 0);
      swift_bridgeObjectRelease_n(v40, 2);
      sub_10016AE0C(v4, 0);
      sub_10016AE0C(v4, 0);
    }

    goto LABEL_35;
  }
LABEL_8:
  v6 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v9 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 96));
  v10 = swift_errorRetain(v6);
  static CocoaError.userCancelled.getter(v10);
  v11 = sub_100006924(&qword_100493118, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v12 = static _ErrorCodeProtocol.~= infix(_:_:)(v7, v6, v9, v11);
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  if ((v12 & 1) == 0)
  {
    v24 = *(_QWORD *)(v0 + 360);
    *(_QWORD *)(v0 + 104) = v24;
    swift_errorRetain(v24);
    if (swift_dynamicCast(v0 + 64, v0 + 104, v3, &type metadata for PlaybackController.CommandError, 0))
    {
      v25 = *(void **)(v0 + 64);
      v26 = *(unsigned __int8 *)(v0 + 72);
      if (v26 == 1)
      {
        swift_bridgeObjectRetain();
        v58 = sub_10016AE40(v25, 1);
        v28 = Logger.logObject.getter(v58);
        v59 = static os_log_type_t.error.getter();
        v60 = os_log_type_enabled(v28, v59);
        v61 = *(char **)(v0 + 328);
        if (!v60)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          sub_10016AE0C(v25, 1);
          sub_10016AE0C(v25, 1);
          goto LABEL_37;
        }
        v62 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(22, -1);
        v63 = swift_slowAlloc(64, -1);
        v85[0] = v63;
        *(_DWORD *)v33 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_100019400(v62, v61, v85);
        swift_bridgeObjectRelease_n(v61, 3);
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        v64 = sub_100005574(&qword_100493120);
        v65 = (char *)Array.description.getter(v25, v64);
        v67 = v66;
        sub_10016AE0C(v25, 1);
        *(_QWORD *)(v33 + 14) = sub_100019400(v65, v67, v85);
        swift_bridgeObjectRelease(v67);
        sub_10016AE0C(v25, 1);
        sub_10016AE0C(v25, 1);
        _os_log_impl((void *)&_mh_execute_header, v28, v59, "❌ Intent id=%{public}s) — Could not produce playback commands=%{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy(v63, 2, (char *)&type metadata for Any + 8);
        v35 = v63;
LABEL_29:
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v33, -1, -1);
LABEL_37:

        v75 = *(_QWORD *)(v0 + 104);
        goto LABEL_38;
      }
      if (v26 == 3 && v25 == (void *)1)
      {
        v27 = swift_bridgeObjectRetain();
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.error.getter();
        v30 = os_log_type_enabled(v28, v29);
        v31 = *(char **)(v0 + 328);
        if (!v30)
        {
          swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
          goto LABEL_37;
        }
        v32 = *(char **)(v0 + 320);
        v33 = swift_slowAlloc(12, -1);
        v34 = swift_slowAlloc(32, -1);
        v85[0] = v34;
        *(_DWORD *)v33 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v33 + 4) = sub_100019400(v32, v31, v85);
        swift_bridgeObjectRelease_n(v31, 3);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "❌ Intent id=%{public}s) — Could not playback, subscription needed", (uint8_t *)v33, 0xCu);
        swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
        v35 = v34;
        goto LABEL_29;
      }
      sub_10016AE0C(*(id *)(v0 + 64), v26);
    }
    v47 = *(_QWORD *)(v0 + 360);
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRetain(v47);
    swift_bridgeObjectRetain();
    v48 = swift_errorRetain(v47);
    v14 = Logger.logObject.getter(v48);
    v49 = static os_log_type_t.error.getter();
    v50 = os_log_type_enabled(v14, v49);
    v51 = *(_QWORD *)(v0 + 360);
    v52 = *(char **)(v0 + 328);
    if (!v50)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
      swift_errorRelease(v51);
      swift_errorRelease(v51);
      goto LABEL_25;
    }
    v53 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(22, -1);
    v20 = swift_slowAlloc(64, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_100019400(v53, v52, v85);
    swift_bridgeObjectRelease_n(v52, 3);
    *(_WORD *)(v19 + 12) = 2082;
    *(_QWORD *)(v0 + 120) = v51;
    swift_errorRetain(v51);
    v54 = (char *)String.init<A>(describing:)(v0 + 120, v3);
    v56 = v55;
    *(_QWORD *)(v19 + 14) = sub_100019400(v54, v55, v85);
    swift_bridgeObjectRelease(v56);
    swift_errorRelease(v51);
    swift_errorRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v14, v49, "❌ Intent id=%{public}s) — Failed to add with error=%{public}s", (uint8_t *)v19, 0x16u);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 2;
    goto LABEL_23;
  }
LABEL_9:
  v13 = swift_bridgeObjectRetain();
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(char **)(v0 + 328);
  if (v16)
  {
    v18 = *(char **)(v0 + 320);
    v19 = swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v85[0] = v20;
    *(_DWORD *)v19 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 4) = sub_100019400(v18, v17, v85);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "❌ Intent id=%{public}s) — User cancelled", (uint8_t *)v19, 0xCu);
    v21 = (char *)&type metadata for Any + 8;
    v22 = v20;
    v23 = 1;
LABEL_23:
    swift_arrayDestroy(v22, v23, v21);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 328), 2);
LABEL_25:

LABEL_39:
  v76 = *(_QWORD *)(v0 + 288);
  v78 = *(_QWORD *)(v0 + 256);
  v77 = *(_QWORD *)(v0 + 264);
  v80 = *(_QWORD *)(v0 + 232);
  v79 = *(_QWORD *)(v0 + 240);
  v82 = *(_QWORD *)(v0 + 208);
  v81 = *(_QWORD *)(v0 + 216);
  v83 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v57);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100157F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  swift_release(*(_QWORD *)(v0 + 296));
  if (qword_10048C878 != -1)
    swift_once(&qword_10048C878, sub_10016A2EC);
  v1 = *(_QWORD *)(v0 + 384);
  sub_1000086B4(*(_QWORD *)(v0 + 336), (uint64_t)static Logger.siriIntents);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 200);
  v7 = *(_QWORD *)(v0 + 208);
  v9 = *(_QWORD *)(v0 + 192);
  if (v5)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v24 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 136) = v6;
    swift_errorRetain(v6);
    v12 = sub_100005574((uint64_t *)&unk_1004911F0);
    v13 = (char *)String.init<A>(describing:)(v0 + 136, v12);
    v15 = v14;
    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v24);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Donation error=%{public}s)", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
  }
  swift_errorRelease(v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v16 = *(_QWORD *)(v0 + 256);
  v17 = *(_QWORD *)(v0 + 264);
  v19 = *(_QWORD *)(v0 + 232);
  v18 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = *(_QWORD *)(v0 + 184);
  swift_task_dealloc(*(_QWORD *)(v0 + 288));
  swift_task_dealloc(v17);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100158184(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  void *v39;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = sub_1000087DC(0, &qword_100493438, UISceneSession_ptr);
    v7 = sub_10016D380();
    v8 = Set.Iterator.init(_cocoa:)(v38, v5, v6, v7);
    v3 = v38[0];
    v35 = v38[1];
    v9 = v38[2];
    v10 = v38[3];
    v11 = v38[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v13 = ~v12;
    v14 = -v12;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v11 = v15 & *(_QWORD *)(a1 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v9 = v13;
    v10 = 0;
  }
  v33 = v9;
  v34 = (unint64_t)(v9 + 64) >> 6;
  v36 = *a2;
  if ((v3 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v16 = __CocoaSet.Iterator.next()(v8);
  if (!v16)
    goto LABEL_39;
  v17 = v16;
  v37 = v16;
  v18 = sub_1000087DC(0, &qword_100493438, UISceneSession_ptr);
  swift_unknownObjectRetain(v17);
  swift_dynamicCast(&v39, &v37, (char *)&type metadata for Swift.AnyObject + 8, v18, 7);
  v19 = v39;
  swift_unknownObjectRelease(v17);
  v20 = v10;
  v21 = v11;
  if (!v19)
    goto LABEL_39;
  while (1)
  {
    v26 = objc_msgSend(v19, "role", v33);
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    if (v27 == v31 && v29 == v30)
    {

      swift_bridgeObjectRelease_n(v29, 2);
      goto LABEL_39;
    }
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
      goto LABEL_39;

    v10 = v20;
    v11 = v21;
    if (v3 < 0)
      goto LABEL_11;
LABEL_14:
    if (!v11)
      break;
    v21 = (v11 - 1) & v11;
    v22 = __clz(__rbit64(v11)) | (v10 << 6);
    v20 = v10;
LABEL_32:
    v19 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v22);
    if (!v19)
      goto LABEL_39;
  }
  v23 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    return;
  }
  if (v23 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v23);
  v20 = v10 + 1;
  if (v24)
    goto LABEL_31;
  v20 = v10 + 2;
  if (v10 + 2 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v10 + 3;
  if (v10 + 3 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v10 + 4;
  if (v10 + 4 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
    goto LABEL_31;
  v20 = v10 + 5;
  if (v10 + 5 >= v34)
    goto LABEL_39;
  v24 = *(_QWORD *)(v35 + 8 * v20);
  if (v24)
  {
LABEL_31:
    v21 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_32;
  }
  v25 = v10 + 6;
  while (v34 != v25)
  {
    v24 = *(_QWORD *)(v35 + 8 * v25++);
    if (v24)
    {
      v20 = v25 - 1;
      goto LABEL_31;
    }
  }
LABEL_39:
  sub_1000F38AC(v3);
}

id PlaybackController.__allocating_init(coordinator:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return PlaybackController.init(coordinator:)(a1);
}

id PlaybackController.init(coordinator:)(_QWORD *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_player] = 0;
  v4 = &v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented] = 0;
  v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented] = 0;
  sub_1000244B0((uint64_t)a1, (uint64_t)&v1[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator]);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "init");
  sub_10000682C(a1);
  return v5;
}

uint64_t PlaybackController.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000244B0(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, a1);
}

double sub_100158614(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  double result;
  char v24[24];
  char v25[24];
  _BYTE v26[24];
  char v27[24];
  char v28[24];

  v2 = v1;
  v4 = sub_100005574(&qword_1004938D0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_beginAccess(a1 + 24, v25, 0, 0);
    v8 = *(char **)(a1 + 24);
    if (v8 && v8 == v2)
    {
      swift_beginAccess(a1 + 24, v24, 1, 0);
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = 0;
      swift_unknownObjectRelease(v10);
      objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(a1 + 24));
    }
  }
  v11 = &v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v28, 0, 0);
  v12 = *(_QWORD *)v11;
  if (!*(_QWORD *)v11)
    goto LABEL_11;
  swift_beginAccess(v12 + 24, v27, 1, 0);
  v13 = *(_QWORD *)(v12 + 24);
  *(_QWORD *)(v12 + 24) = v2;
  v14 = v2;
  swift_retain(v12);
  swift_unknownObjectRelease(v13);
  objc_msgSend(*(id *)(v12 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v12 + 24));
  swift_release(v12);

  v15 = *(_QWORD *)v11;
  if (*(_QWORD *)v11)
  {
    swift_beginAccess(v15 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v26, 33, 0);
    swift_retain(v15);
    v16 = sub_100005574((uint64_t *)&unk_1004933B0);
    Published.projectedValue.getter(v16);
    swift_endAccess(v26);
    swift_release(v15);
    v17 = swift_allocObject(&unk_10044FA28, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v14);
    v18 = sub_10016D288();
    v19 = Publisher<>.sink(receiveValue:)(sub_10016D280, v17, v4, v18);
    v20 = swift_release(v17);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  }
  else
  {
LABEL_11:
    v19 = 0;
  }
  v21 = *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription];
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingSubscription] = v19;
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100158850(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v17[24];

  v4 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor(0);
    v11 = v7;
    v12 = v9;
    v13 = static MainActor.shared.getter(v12);
    v14 = (_QWORD *)swift_allocObject(&unk_10044FDF0, 48, 7);
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v12;
    v14[5] = v7;
    v15 = sub_1000C66A8((uint64_t)v6, (uint64_t)&unk_1004933C8, (uint64_t)v14);
    swift_release(v15);

  }
}

uint64_t sub_100158974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001589E0, v7, v8);
}

uint64_t sub_1001589E0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_100158A1C(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100158A1C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  void *v69;
  id v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD *, uint64_t, uint64_t);
  void *v75;
  id v76;
  _QWORD v77[7];
  char v78;
  __objc2_prot *v79;
  char v80[24];

  v2 = v1;
  if (!a1)
    goto LABEL_8;
  v4 = objc_msgSend(a1, "tracklist");
  if (!v4)
    goto LABEL_8;
  v5 = v4;
  v6 = objc_msgSend(v4, "playingItem");
  if (!v6)
  {
    v7 = v5;
    goto LABEL_7;
  }
  v7 = v6;
  if ((objc_msgSend(v6, "isPlaceholder") & 1) != 0)
  {

LABEL_7:
LABEL_8:
    v8 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v77, 1, 0);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[2];
    v12 = v8[3];
    v13 = v8[4];
    *(_OWORD *)v8 = 0u;
    *((_OWORD *)v8 + 1) = 0u;
    v8[4] = 0;
    sub_10016ADDC(v9, v10, v11, v12, v13);
    return;
  }
  v14 = objc_msgSend(v5, "uniqueIdentifier");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_nowPlayingPresentationDescriptor, v80, 1, 0);
  if (!v18[2])
  {
    swift_bridgeObjectRelease();
LABEL_16:
    v22 = objc_msgSend(v7, "contentItemIdentifier");
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26 = objc_msgSend(v5, "uniqueIdentifier");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    v30 = *v18;
    v31 = v18[1];
    v32 = v18[2];
    v33 = v18[3];
    v34 = v18[4];
    *v18 = 1;
    v18[1] = v23;
    v18[2] = v25;
    v18[3] = v27;
    v18[4] = v29;
    sub_10016ADDC(v30, v31, v32, v33, v34);
    goto LABEL_17;
  }
  v19 = v18[3];
  v20 = v18[4];
  if (v15 == v19 && v17 == v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v20, 0);
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
    goto LABEL_16;
LABEL_17:
  v35 = objc_msgSend(v7, "contentItemIdentifier");
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v38 = v37;

  v39 = v18[2];
  if (v39)
  {
    v40 = v18[1];
    if (v36 == v40 && v38 == v39)
      v41 = 1;
    else
      v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);
  }
  else
  {
    v41 = 0;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess(v18, v77, 32, 0);
  if (v18[2])
    v42 = *(_BYTE *)v18;
  else
    v42 = 0;
  swift_endAccess(v77);
  v43 = a1;
  v44 = objc_msgSend(v43, "videoOutput");
  if (!v44)
  {

    return;
  }
  v45 = v44;
  v79 = &OBJC_PROTOCOL___MPCVideoOutput;
  v46 = swift_dynamicCastObjCProtocolConditional(v44, 1, &v79);
  if (!v46)
    goto LABEL_38;
  v47 = (void *)v46;
  ObjectType = swift_getObjectType();
  v49 = sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if (!swift_dynamicCastMetatype(ObjectType, v49))
    v47 = 0;
  if (!v47)
  {
LABEL_38:

    swift_unknownObjectRelease(v45);
    return;
  }
  v50 = type metadata accessor for MPCPlayerResponse.VideoContext(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = MPCPlayerResponse.VideoContext.init(output:)(v47);

  if ((v42 & 1) == 0 || (v41 & 1) == 0 || objc_msgSend(v43, "state") != (id)2)
  {
    swift_release(v51);
    goto LABEL_41;
  }
  v76 = (id)objc_opt_self(UIApplication);
  v52 = objc_msgSend(v76, "sharedApplication");
  v53 = objc_msgSend(v52, "openSessions");

  v54 = sub_1000087DC(0, &qword_100493438, UISceneSession_ptr);
  v55 = sub_10016D380();
  v56 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v53, v54, v55);

  sub_100158184(v56, (uint64_t *)&UIWindowSceneSessionRoleApplication);
  v58 = v57;
  swift_bridgeObjectRelease();
  if (!v58)
  {

    swift_release(v51);
    return;
  }
  v59 = objc_msgSend(v58, "scene");
  v60 = v58;
  if (!v59)
  {
    swift_release(v51);

    goto LABEL_41;
  }
  v61 = v59;
  v75 = v60;
  v62 = objc_msgSend(v59, "activationState");

  if (v62)
  {
    swift_release(v51);

LABEL_41:
    return;
  }
  v63 = objc_msgSend(v76, "sharedApplication");
  v64 = objc_msgSend(v63, "openSessions");

  v65 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v64, v54, v55);
  sub_100158184(v65, &_UIWindowSceneSessionRoleCarPlay);
  v67 = v66;
  swift_bridgeObjectRelease();
  if (!v67
    || (v68 = objc_msgSend(v67, "scene")) != 0
    && (v69 = v68, v70 = objc_msgSend(v68, "activationState"), v69, v70 == (id)-1))
  {
    swift_beginAccess(v18, v77, 33, 0);
    if (v18[2])
      *(_BYTE *)v18 = 0;
    swift_endAccess(v77);
    v71 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v72 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v73 = v71[4];
    sub_10000ABC8(v71, v72);
    v77[0] = v51;
    v78 = 1;
    v74 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v73 + 8);
    swift_retain(v51);
    v74(v77, v72, v73);
    swift_release(v51);

    sub_10016B358(v77);
  }
  else
  {
    swift_release(v51);

  }
}

uint64_t PlaybackController.player.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v3, 0, 0);
  return swift_retain(*v1);
}

double PlaybackController.player.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain(a1);
  sub_100158614(v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void (*PlaybackController.player.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *v5;
  v3[3] = *v5;
  swift_retain(v6);
  return sub_100159160;
}

void sub_100159160(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v4 = (uint64_t *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(_QWORD *)(v6 + v5);
  *(_QWORD *)(v6 + v5) = *v4;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_100158614(v7);
    swift_release(v3);
    swift_release(v7);
    v7 = *v4;
  }
  else
  {
    swift_retain(v3);
    sub_100158614(v7);
    swift_release(v3);
  }
  swift_release(v7);
  free(v2);
}

uint64_t Logger.playbackController.unsafeMutableAddressor()
{
  return sub_1000F04E4(&qword_10048C868, (uint64_t)static Logger.playbackController, (uint64_t)sub_10016A1D0);
}

uint64_t PlaybackController.perform(_:options:route:intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[8] = v7;
  v5[9] = v8;
  return swift_task_switch(sub_100159284, v7, v8);
}

{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[19] = a4;
  v5[20] = v4;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  v6 = type metadata accessor for Player.CommandOptions(0);
  v5[21] = v6;
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[23] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[24] = v8;
  v5[25] = v9;
  return swift_task_switch(sub_100160590, v8, v9);
}

uint64_t sub_100159284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = sub_100005574((uint64_t *)&unk_1004940F0);
  v3 = swift_allocObject(v2, 72, 7);
  v0[10] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  sub_1000244B0(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_100493164);
  v0[11] = v4;
  *v4 = v0;
  v4[1] = sub_100159310;
  return PlaybackController.perform(_:options:route:intent:)(v3, v0[3], v0[4], v0[5]);
}

uint64_t sub_100159310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_10015945C;
  }
  else
  {
    swift_bridgeObjectRelease(v3[10]);
    v5 = v3[8];
    v6 = v3[9];
    v7 = sub_100159384;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_100159384()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 56));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 96);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 96);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 96);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 96));
    v3 = *(_QWORD *)(v0 + 96);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_10015945C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10015949C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[25] = a3;
  v4[26] = v3;
  v4[23] = a1;
  v4[24] = a2;
  v5 = type metadata accessor for CocoaError.Code(0);
  v4[27] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[28] = v6;
  v4[29] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Player.CommandOptions(0);
  v4[30] = v7;
  v4[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100159524, 0, 0);
}

uint64_t sub_100159524(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v3 = v2[25];
  v4 = type metadata accessor for Logger(0, a2);
  v2[32] = sub_1000086B4(v4, (uint64_t)static Logger.playbackController);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = (char *)v2[25];
  if (v8)
  {
    v10 = (char *)v2[24];
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v17 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v11 + 4) = sub_100019400(v10, v9, &v17);
    swift_bridgeObjectRelease_n(v9, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Intent id=%{public}s) — Offering play local option to user", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v2[25], 2);
  }

  v13 = type metadata accessor for MainActor(0);
  v2[33] = v13;
  v2[34] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v2[35] = v14;
  v2[36] = v15;
  return swift_task_switch(sub_1001596F0, v14, v15);
}

uint64_t sub_1001596F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 296) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_100159758, v4, v6);
}

uint64_t sub_100159758()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)v0[26];
  v0[7] = (char *)v0 + 153;
  v0[2] = v0;
  v0[3] = sub_1001597B0;
  v2 = swift_continuation_init(v0 + 2, 0);
  sub_100162A00(v2, v1);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1001597B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 296);
  *(_BYTE *)(*v0 + 154) = *(_BYTE *)(*v0 + 153);
  swift_release(v2);
  return swift_task_switch(sub_100159804, *(_QWORD *)(v1 + 280), *(_QWORD *)(v1 + 288));
}

uint64_t sub_100159804()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_100159840, 0, 0);
}

uint64_t sub_100159840()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  _BOOL4 v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53[2];

  if (*(_BYTE *)(v0 + 154) == 1)
  {
    v1 = (_QWORD *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v2 = v1[3];
    v3 = v1[4];
    sub_10000ABC8(v1, v2);
    *(_QWORD *)(v0 + 304) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
    v4 = (_QWORD *)swift_task_alloc(dword_100495A94);
    *(_QWORD *)(v0 + 312) = v4;
    *v4 = v0;
    v4[1] = sub_100159E78;
    return GroupActivitiesManager.leave(performLeaveCommand:)(0);
  }
  v6 = (_QWORD *)(v0 + 176);
  v7 = sub_10016AD98();
  v8 = swift_allocError(&type metadata for PlaybackController.CommandError, v7, 0, 0);
  *(_QWORD *)v9 = 2;
  *(_BYTE *)(v9 + 8) = 3;
  swift_willThrow(v10);
  *(_QWORD *)(v0 + 176) = v8;
  swift_errorRetain(v8);
  v11 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (swift_dynamicCast(v0 + 144, v0 + 176, v11, &type metadata for PlaybackController.CommandError, 0))
  {
    v12 = *(void **)(v0 + 144);
    v13 = *(unsigned __int8 *)(v0 + 152);
    if (!*(_BYTE *)(v0 + 152))
    {
      swift_bridgeObjectRetain();
      sub_10016AE40(v12, 0);
      swift_bridgeObjectRetain();
      v42 = sub_10016AE40(v12, 0);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.error.getter();
      v45 = os_log_type_enabled(v43, v44);
      v46 = *(char **)(v0 + 200);
      if (v45)
      {
        v47 = *(char **)(v0 + 192);
        v48 = swift_slowAlloc(22, -1);
        v49 = swift_slowAlloc(64, -1);
        v53[0] = v49;
        *(_DWORD *)v48 = 136446466;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v48 + 4) = sub_100019400(v47, v46, v53);
        swift_bridgeObjectRelease_n(v46, 3);
        *(_WORD *)(v48 + 12) = 2082;
        *(_QWORD *)(v0 + 168) = v12;
        sub_10016AE64(v12);
        v50 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
        v52 = v51;
        *(_QWORD *)(v48 + 14) = sub_100019400(v50, v51, v53);
        swift_bridgeObjectRelease(v52);
        sub_10016AE0C(v12, 0);
        sub_10016AE0C(v12, 0);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v49, -1, -1);
        swift_slowDealloc(v48, -1, -1);

        sub_10016AE0C(v12, 0);
      }
      else
      {
        sub_10016AE0C(v12, 0);
        swift_bridgeObjectRelease_n(v46, 2);
        sub_10016AE0C(v12, 0);
        sub_10016AE0C(v12, 0);

      }
      swift_errorRelease(*v6);
      goto LABEL_18;
    }
    if (v13 == 3 && v12 == (void *)2)
    {
      swift_errorRelease(*v6);
      goto LABEL_10;
    }
    sub_10016AE0C(*(id *)(v0 + 144), v13);
  }
  v15 = *(_QWORD *)(v0 + 224);
  v14 = *(_QWORD *)(v0 + 232);
  v16 = *(_QWORD *)(v0 + 216);
  swift_errorRelease(*(_QWORD *)(v0 + 176));
  v17 = swift_errorRetain(v8);
  static CocoaError.userCancelled.getter(v17);
  v18 = sub_100006924(&qword_100493118, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
  v19 = static _ErrorCodeProtocol.~= infix(_:_:)(v14, v8, v16, v18);
  swift_errorRelease(v8);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_errorRetain(v8);
    swift_bridgeObjectRetain();
    v29 = swift_errorRetain(v8);
    v21 = Logger.logObject.getter(v29);
    v30 = static os_log_type_t.error.getter();
    v31 = os_log_type_enabled(v21, v30);
    v32 = *(char **)(v0 + 200);
    if (!v31)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      goto LABEL_17;
    }
    v33 = *(char **)(v0 + 192);
    v34 = swift_slowAlloc(22, -1);
    v35 = swift_slowAlloc(64, -1);
    v53[0] = v35;
    *(_DWORD *)v34 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v34 + 4) = sub_100019400(v33, v32, v53);
    swift_bridgeObjectRelease_n(v32, 3);
    *(_WORD *)(v34 + 12) = 2082;
    *(_QWORD *)(v0 + 160) = v8;
    swift_errorRetain(v8);
    v36 = (char *)String.init<A>(describing:)(v0 + 160, v11);
    v38 = v37;
    *(_QWORD *)(v34 + 14) = sub_100019400(v36, v37, v53);
    swift_bridgeObjectRelease(v38);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v21, v30, "Intent id=%{public}s) — Failed to insert with error=%{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    v28 = v34;
    goto LABEL_14;
  }
LABEL_10:
  v20 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(char **)(v0 + 200);
  if (!v23)
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
    goto LABEL_17;
  }
  v25 = *(char **)(v0 + 192);
  v26 = swift_slowAlloc(12, -1);
  v27 = swift_slowAlloc(32, -1);
  v53[0] = v27;
  *(_DWORD *)v26 = 136446210;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v26 + 4) = sub_100019400(v25, v24, v53);
  swift_bridgeObjectRelease_n(v24, 3);
  _os_log_impl((void *)&_mh_execute_header, v21, v22, "Intent id=%{public}s) — User cancelled", (uint8_t *)v26, 0xCu);
  swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v27, -1, -1);
  v28 = v26;
LABEL_14:
  swift_slowDealloc(v28, -1, -1);
LABEL_17:

LABEL_18:
  v40 = *(_QWORD *)(v0 + 248);
  v41 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100159E78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 312));
  swift_release(v1);
  return swift_task_switch(sub_100159ED4, 0, 0);
}

uint64_t sub_100159ED4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 208) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 120, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 320) = v2;
  if (v2)
  {
    v4 = *(int **)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 248);
    v5 = *(void **)(v0 + 184);
    *(_QWORD *)(v0 + 104) = &type metadata for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 112) = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = 3;
    v6 = v5;
    swift_retain(v2);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v7 = (_QWORD *)(v3 + v4[5]);
    *v7 = 0;
    v7[1] = 0;
    *(_QWORD *)(v3 + v4[6]) = 0;
    *(_BYTE *)(v3 + v4[7]) = 0;
    *(_QWORD *)(v3 + v4[8]) = 0;
    v8 = (_QWORD *)swift_task_alloc(dword_10049395C);
    *(_QWORD *)(v0 + 328) = v8;
    *v8 = v0;
    v8[1] = sub_100159FF0;
    return sub_1001759C8(v0 + 80, *(_QWORD *)(v0 + 248));
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 248));
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100159FF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 328);
  *(_QWORD *)(*(_QWORD *)v2 + 336) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[40];
    sub_100006798(v4[31], type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v7 = sub_10015A0F0;
  }
  else
  {
    v8 = v4 + 10;
    v9 = v4[40];
    v10 = v4[31];
    swift_release(v9);

    sub_100006798(v10, type metadata accessor for Player.CommandOptions);
    sub_10000682C(v8);
    v7 = sub_10015A0A8;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10015A0A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015A0F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _BOOL4 v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45[2];

  sub_10000682C((_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 336);
  *(_QWORD *)(v0 + 176) = v1;
  v2 = (_QWORD *)(v0 + 176);
  swift_errorRetain(v1);
  v3 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (!swift_dynamicCast(v0 + 144, v0 + 176, v3, &type metadata for PlaybackController.CommandError, 0))
    goto LABEL_7;
  v4 = *(void **)(v0 + 144);
  v5 = *(unsigned __int8 *)(v0 + 152);
  if (*(_BYTE *)(v0 + 152))
  {
    if (v5 == 3 && v4 == (void *)2)
    {
      swift_errorRelease(*v2);
      goto LABEL_8;
    }
    sub_10016AE0C(*(id *)(v0 + 144), v5);
LABEL_7:
    v7 = *(_QWORD *)(v0 + 224);
    v6 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 216);
    swift_errorRelease(*(_QWORD *)(v0 + 176));
    v9 = swift_errorRetain(v1);
    static CocoaError.userCancelled.getter(v9);
    v10 = sub_100006924(&qword_100493118, (uint64_t (*)(uint64_t))&type metadata accessor for CocoaError.Code, (uint64_t)&protocol conformance descriptor for CocoaError.Code);
    v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v6, v1, v8, v10);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if ((v11 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_errorRetain(v1);
      swift_bridgeObjectRetain();
      v21 = swift_errorRetain(v1);
      v13 = Logger.logObject.getter(v21);
      v22 = static os_log_type_t.error.getter();
      v23 = os_log_type_enabled(v13, v22);
      v24 = *(char **)(v0 + 200);
      if (!v23)
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
        swift_errorRelease(v1);
        swift_errorRelease(v1);
        goto LABEL_15;
      }
      v25 = *(char **)(v0 + 192);
      v18 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v45[0] = v26;
      *(_DWORD *)v18 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_100019400(v25, v24, v45);
      swift_bridgeObjectRelease_n(v24, 3);
      *(_WORD *)(v18 + 12) = 2082;
      *(_QWORD *)(v0 + 160) = v1;
      swift_errorRetain(v1);
      v27 = (char *)String.init<A>(describing:)(v0 + 160, v3);
      v29 = v28;
      *(_QWORD *)(v18 + 14) = sub_100019400(v27, v28, v45);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v13, v22, "Intent id=%{public}s) — Failed to insert with error=%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      v20 = v26;
      goto LABEL_12;
    }
LABEL_8:
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 200);
    if (!v15)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 200), 2);
      goto LABEL_15;
    }
    v17 = *(char **)(v0 + 192);
    v18 = swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v45[0] = v19;
    *(_DWORD *)v18 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 4) = sub_100019400(v17, v16, v45);
    swift_bridgeObjectRelease_n(v16, 3);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Intent id=%{public}s) — User cancelled", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v20 = v19;
LABEL_12:
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v18, -1, -1);
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  sub_10016AE40(v4, 0);
  swift_bridgeObjectRetain();
  v34 = sub_10016AE40(v4, 0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter();
  v37 = os_log_type_enabled(v35, v36);
  v38 = *(char **)(v0 + 200);
  if (v37)
  {
    v39 = *(char **)(v0 + 192);
    v40 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(64, -1);
    v45[0] = v41;
    *(_DWORD *)v40 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v40 + 4) = sub_100019400(v39, v38, v45);
    swift_bridgeObjectRelease_n(v38, 3);
    *(_WORD *)(v40 + 12) = 2082;
    *(_QWORD *)(v0 + 168) = v4;
    sub_10016AE64(v4);
    v42 = (char *)String.init<A>(describing:)(v0 + 168, &type metadata for PlaybackController.CommandError.AlertKind);
    v44 = v43;
    *(_QWORD *)(v40 + 14) = sub_100019400(v42, v43, v45);
    swift_bridgeObjectRelease(v44);
    sub_10016AE0C(v4, 0);
    sub_10016AE0C(v4, 0);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Intent id=%{public}s) — Could not present alertKind=%{public}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    sub_10016AE0C(v4, 0);
  }
  else
  {
    sub_10016AE0C(v4, 0);
    swift_bridgeObjectRelease_n(v38, 2);
    sub_10016AE0C(v4, 0);
    sub_10016AE0C(v4, 0);

  }
  swift_errorRelease(*v2);
LABEL_16:
  v31 = *(_QWORD *)(v0 + 248);
  v32 = *(_QWORD *)(v0 + 232);
  swift_willThrow(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015A66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5[109] = v4;
  v5[108] = a4;
  v5[107] = a3;
  v5[106] = a2;
  v5[105] = a1;
  v6 = type metadata accessor for UUID(0);
  v5[110] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[111] = v7;
  v5[112] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Locale(0);
  v5[113] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v5[114] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[115] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[116] = swift_task_alloc(v11);
  v5[117] = swift_task_alloc(v11);
  v12 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5[118] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[119] = v13;
  v5[120] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v5[121] = v14;
  v15 = (*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[122] = swift_task_alloc(v15);
  v5[123] = swift_task_alloc(v15);
  v5[124] = swift_task_alloc(v15);
  v5[125] = swift_task_alloc(v15);
  v5[126] = swift_task_alloc(v15);
  v5[127] = swift_task_alloc(v15);
  v5[128] = swift_task_alloc(v15);
  v5[129] = swift_task_alloc(v15);
  v5[130] = swift_task_alloc(v15);
  v16 = type metadata accessor for PlaybackIntentDescriptor(0);
  v5[131] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[132] = swift_task_alloc(v17);
  v5[133] = swift_task_alloc(v17);
  v5[134] = swift_task_alloc(v17);
  v5[135] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[136] = v18;
  v5[137] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v5[138] = v19;
  v5[139] = v20;
  return swift_task_switch(sub_10015A86C, v19, v20);
}

uint64_t sub_10015A86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 872);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 1120) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 536, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 1128) = *v3;
  if (v4)
  {
    v5 = (_BYTE *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v4 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v0 + 560, 0, 0);
    if (*v5 == 2)
    {
      swift_retain(v4);
    }
    else
    {
      v19 = qword_10048C868;
      swift_retain(v4);
      if (v19 != -1)
        swift_once(&qword_10048C868, sub_10016A1D0);
      v21 = *(_QWORD *)(v0 + 856);
      v22 = type metadata accessor for Logger(0, v20);
      sub_1000086B4(v22, (uint64_t)static Logger.playbackController);
      v23 = swift_bridgeObjectRetain_n(v21, 2);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      v26 = os_log_type_enabled(v24, v25);
      v27 = *(char **)(v0 + 856);
      if (v26)
      {
        v28 = *(char **)(v0 + 848);
        v29 = swift_slowAlloc(12, -1);
        v30 = swift_slowAlloc(32, -1);
        v40 = v30;
        *(_DWORD *)v29 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v29 + 4) = sub_100019400(v28, v27, &v40);
        swift_bridgeObjectRelease_n(v27, 3);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Intent id=%{public}s) — Awaiting for engine to start", (uint8_t *)v29, 0xCu);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v29, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
      }

    }
    v31 = (_QWORD *)swift_task_alloc(dword_100493874);
    *(_QWORD *)(v0 + 1136) = v31;
    *v31 = v0;
    v31[1] = sub_10015ABDC;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 0;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v8);
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1064);
    v11 = *(_QWORD *)(v0 + 1056);
    v12 = *(_QWORD *)(v0 + 1040);
    v13 = *(_QWORD *)(v0 + 1032);
    v14 = *(_QWORD *)(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = *(_QWORD *)(v0 + 1008);
    v17 = *(_QWORD *)(v0 + 1000);
    v32 = *(_QWORD *)(v0 + 992);
    v33 = *(_QWORD *)(v0 + 984);
    v34 = *(_QWORD *)(v0 + 976);
    v35 = *(_QWORD *)(v0 + 960);
    v36 = *(_QWORD *)(v0 + 936);
    v37 = *(_QWORD *)(v0 + 928);
    v38 = *(_QWORD *)(v0 + 904);
    v39 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10015ABDC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 1136));
  return swift_task_switch(sub_10015AC2C, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_10015AC2C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  double v5;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  id v13;
  int v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(id *)(v0 + 864);
  if (!v1)
  {
    v2 = *(_QWORD *)(v0 + 1128);
    KeyPath = swift_getKeyPath(&unk_10038E3A0);
    v4 = swift_getKeyPath(&unk_10038E3C8);
    static Published.subscript.getter((_QWORD *)(v0 + 832), v2, KeyPath, v4);
    swift_release(v4);
    *(_QWORD *)&v5 = swift_release(KeyPath).n128_u64[0];
    v6 = *(void **)(v0 + 832);
    v1 = objc_msgSend(v6, "route", v5);

  }
  *(_QWORD *)(v0 + 1144) = v1;
  v7 = *(_QWORD *)(v0 + 1080);
  v8 = *(int **)(v0 + 1048);
  v9 = *(_QWORD *)(v0 + 840);
  *(_QWORD *)(v0 + 1152) = *(_QWORD *)(v9 + v8[5]);
  v10 = *(_QWORD *)(v9 + v8[6]);
  v11 = *(unsigned __int8 *)(v9 + v8[9]);
  sub_100082248(v9, v7, type metadata accessor for PlaybackIntentDescriptor);
  v12 = *(_QWORD *)(v0 + 1080);
  if (v11 == 1)
  {
    v13 = *(id *)(v0 + 864);
    sub_100006798(v12, type metadata accessor for PlaybackIntentDescriptor);
LABEL_6:
    v10 = 1;
    goto LABEL_7;
  }
  v14 = *(unsigned __int8 *)(v12 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
  v15 = *(id *)(v0 + 864);
  sub_100006798(v12, type metadata accessor for PlaybackIntentDescriptor);
  if (v14 == 1)
    goto LABEL_6;
LABEL_7:
  *(_QWORD *)(v0 + 1160) = v10;
  v16 = *(_QWORD *)(v0 + 1088);
  *(_QWORD *)(v0 + 1168) = static MainActor.shared.getter(v1);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  *(_QWORD *)(v0 + 1176) = v17;
  *(_QWORD *)(v0 + 1184) = v18;
  return swift_task_switch(sub_10015ADA8, v17, v18);
}

uint64_t sub_10015ADA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1192) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_10015AE10, v4, v6);
}

uint64_t sub_10015AE10()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[143];
  v2 = v0[109];
  v0[23] = (char *)v0 + 265;
  v0[18] = v0;
  v0[19] = sub_10015AE78;
  v3 = swift_continuation_init(v0 + 18, 1);
  sub_100162F9C(v3, v2, v1);
  return swift_continuation_await(v0 + 18);
}

uint64_t sub_10015AE78(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 176);
  *(_QWORD *)(*v1 + 1200) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_10015BA24;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 1192);
    *(_BYTE *)(v2 + 267) = *(_BYTE *)(v2 + 265);
    swift_release(v7);
    v4 = *(_QWORD *)(v2 + 1184);
    v5 = *(_QWORD *)(v2 + 1176);
    v6 = sub_10015AEFC;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10015AEFC()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[143];
  swift_release(v0[146]);

  return swift_task_switch(sub_10015AF40, v0[138], v0[139]);
}

uint64_t sub_10015AF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  char *v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  double v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  _BOOL4 v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  void **v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  unsigned __int8 v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v3 = *(unsigned __int8 *)(v2 + 267);
  if (v3 == 2)
  {
    v4 = *(void **)(v2 + 1144);
    v5 = *(_QWORD *)(v2 + 1128);
    swift_release(*(_QWORD *)(v2 + 1096));

    swift_release(v5);
    v6 = *(_QWORD *)(v2 + 1072);
    v7 = *(_QWORD *)(v2 + 1064);
    v8 = *(_QWORD *)(v2 + 1056);
    v9 = *(_QWORD *)(v2 + 1040);
    v10 = *(_QWORD *)(v2 + 1032);
    v11 = *(_QWORD *)(v2 + 1024);
    v12 = *(_QWORD *)(v2 + 1016);
    v13 = *(_QWORD *)(v2 + 1008);
    v14 = *(_QWORD *)(v2 + 1000);
    v127 = *(_QWORD *)(v2 + 992);
    v128 = *(_QWORD *)(v2 + 984);
    v129 = *(_QWORD *)(v2 + 976);
    v130 = *(_QWORD *)(v2 + 960);
    v131 = *(_QWORD *)(v2 + 936);
    v132 = *(_QWORD *)(v2 + 928);
    v133 = *(_QWORD *)(v2 + 904);
    v134 = *(_QWORD *)(v2 + 896);
    swift_task_dealloc(*(_QWORD *)(v2 + 1080));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v16 = *(_QWORD *)(v2 + 856);
  v17 = type metadata accessor for Logger(0, a2);
  *(_QWORD *)(v2 + 1208) = sub_1000086B4(v17, (uint64_t)static Logger.playbackController);
  v18 = swift_bridgeObjectRetain_n(v16, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(char **)(v2 + 856);
  if (v21)
  {
    v23 = v3 & 1;
    v24 = *(char **)(v2 + 848);
    v25 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(64, -1);
    v135 = v26;
    *(_DWORD *)v25 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v25 + 4) = sub_100019400(v24, v22, &v135);
    swift_bridgeObjectRelease_n(v22, 3);
    *(_WORD *)(v25 + 12) = 2082;
    *(_BYTE *)(v2 + 266) = v23;
    v27 = (char *)String.init<A>(describing:)(v2 + 266, &type metadata for PlaybackController.PlayabilityOption);
    v29 = v28;
    *(_QWORD *)(v25 + 14) = sub_100019400(v27, v28, &v135);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Intent id=%{public}s) — Resolved Playability Options=%{public}s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v2 + 856), 2);
  }

  v30 = *(_QWORD *)(v2 + 1040);
  v31 = *(_QWORD *)(v2 + 968);
  sub_100082248(*(_QWORD *)(v2 + 840), v30, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v30, v31);
  v33 = *(void ***)(v2 + 1040);
  if (EnumCaseMultiPayload == 1)
  {
    v34 = *(_QWORD *)(v2 + 960);
    v35 = *(_QWORD *)(v2 + 952);
    v36 = *(_QWORD *)(v2 + 944);
    v37 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v35 + 32))(v34, v33, v36);
    v38 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v37);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  }
  else
  {
    v38 = *v33;
  }
  v39 = objc_msgSend(v38, "sharedListeningProperties");

  if (v39)
  {
    v40 = *(_QWORD *)(v2 + 1128);
    KeyPath = swift_getKeyPath(&unk_10038E3E8);
    v42 = swift_getKeyPath(&unk_10038E410);
    static Published.subscript.getter((_QWORD *)(v2 + 816), v40, KeyPath, v42);
    swift_release(v42);
    *(_QWORD *)&v43 = swift_release(KeyPath).n128_u64[0];
    v44 = *(void **)(v2 + 816);
    v45 = *(_QWORD *)(v2 + 1072);
    v46 = *(_QWORD *)(v2 + 840);
    if (v44)
    {
      v47 = objc_msgSend(*(id *)(v2 + 816), "isSharedListeningSession", v43);

      sub_100082248(v46, v45, type metadata accessor for PlaybackIntentDescriptor);
      if (v47)
      {
        v48 = *(_QWORD *)(v2 + 1024);
        v49 = *(_QWORD *)(v2 + 968);
        sub_100082248(*(_QWORD *)(v2 + 1072), v48, type metadata accessor for PlaybackIntentDescriptor.IntentType);
        v50 = swift_getEnumCaseMultiPayload(v48, v49);
        v51 = *(void ***)(v2 + 1024);
        if (v50 == 1)
        {
          v52 = *(_QWORD *)(v2 + 960);
          v53 = *(_QWORD *)(v2 + 952);
          v54 = *(_QWORD *)(v2 + 944);
          v55 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v53 + 32))(v52, v51, v54);
          v56 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v55);
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
        }
        else
        {
          v56 = *v51;
        }
        v97 = *(_QWORD *)(v2 + 1072);
        v98 = objc_msgSend(v56, "tracklistSource");

        sub_100006798(v97, type metadata accessor for PlaybackIntentDescriptor);
        if (v98 != (id)100)
        {
          v99 = swift_bridgeObjectRetain_n(*(_QWORD *)(v2 + 856), 2);
          v100 = Logger.logObject.getter(v99);
          v101 = static os_log_type_t.default.getter(v100);
          v102 = os_log_type_enabled(v100, v101);
          v103 = *(char **)(v2 + 856);
          if (v102)
          {
            v104 = *(char **)(v2 + 848);
            v105 = swift_slowAlloc(12, -1);
            v106 = swift_slowAlloc(32, -1);
            v135 = v106;
            *(_DWORD *)v105 = 136446210;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v105 + 4) = sub_100019400(v104, v103, &v135);
            swift_bridgeObjectRelease_n(v103, 3);
            _os_log_impl((void *)&_mh_execute_header, v100, v101, "Intent id=%{public}s) — Offering Shared Listening options", (uint8_t *)v105, 0xCu);
            swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v106, -1, -1);
            swift_slowDealloc(v105, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(*(_QWORD *)(v2 + 856), 2);
          }

          v107 = (_QWORD *)swift_task_alloc(dword_10049347C);
          *(_QWORD *)(v2 + 1240) = v107;
          *v107 = v2;
          v107[1] = sub_10015C414;
          return sub_100161104(*(_QWORD *)(v2 + 840), *(_QWORD *)(v2 + 848), *(_QWORD *)(v2 + 856));
        }
LABEL_20:
        *(int8x16_t *)(v2 + 1272) = vextq_s8(*(int8x16_t *)(v2 + 1152), *(int8x16_t *)(v2 + 1152), 8uLL);
        v66 = *(_QWORD *)(v2 + 1128);
        v67 = swift_getKeyPath(&unk_10038E3A0);
        v68 = swift_getKeyPath(&unk_10038E3C8);
        static Published.subscript.getter((_QWORD *)(v2 + 808), v66, v67, v68);
        swift_release(v68);
        *(_QWORD *)&v69 = swift_release(v67).n128_u64[0];
        v70 = *(void **)(v2 + 808);
        v71 = objc_msgSend(v70, "route", v69);
        *(_QWORD *)(v2 + 1288) = v71;

        if (!v71)
        {
          v78 = *(void **)(v2 + 1144);
          goto LABEL_27;
        }
        objc_opt_self(MPAVEndpointRoute);
        v72 = (void *)swift_dynamicCastObjCClass(v71);
        *(_QWORD *)(v2 + 1296) = v72;
        if (!v72)
          goto LABEL_24;
        v73 = v72;
        if (objc_msgSend(v72, "isDeviceRoute"))
          goto LABEL_24;
        v74 = *(_QWORD *)(v2 + 1128);
        v75 = swift_getKeyPath(&unk_10038E1D0);
        v76 = swift_getKeyPath(&unk_10038E1F8);
        static Published.subscript.getter((_QWORD *)(v2 + 824), v74, v75, v76);
        swift_release(v76);
        swift_release(v75);
        v77 = *(void **)(v2 + 824);

        if (v77)
        {
LABEL_24:
          v78 = *(void **)(v2 + 1144);
LABEL_25:

LABEL_27:
          *(_QWORD *)(v2 + 1328) = v78;
          v79 = *(_QWORD *)(v2 + 1008);
          v80 = *(_QWORD *)(v2 + 968);
          sub_100082248(*(_QWORD *)(v2 + 840), v79, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v81 = swift_getEnumCaseMultiPayload(v79, v80);
          v82 = *(uint64_t **)(v2 + 1008);
          if (v81 == 1)
          {
            v83 = *(_QWORD *)(v2 + 960);
            v84 = *(_QWORD *)(v2 + 952);
            v85 = *(_QWORD *)(v2 + 944);
            v86 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v84 + 32))(v83, v82, v85);
            v87 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v86);
            (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
          }
          else
          {
            v87 = *v82;
          }
          *(_QWORD *)(v2 + 1336) = v87;
          v88 = dword_10049344C;
          v89 = v78;
          v90 = (_QWORD *)swift_task_alloc(v88);
          *(_QWORD *)(v2 + 1344) = v90;
          *v90 = v2;
          v90[1] = sub_10015CB9C;
          return sub_10016AE74(v87, *(_QWORD *)(v2 + 848), *(_QWORD *)(v2 + 856), *(_QWORD *)(v2 + 1280), *(_QWORD *)(v2 + 1272), (uint64_t)v78);
        }
        v108 = *(unsigned __int8 *)(v2 + 267);
        sub_100082248(*(_QWORD *)(v2 + 840), *(_QWORD *)(v2 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v109 = *(_QWORD *)(v2 + 1064);
        if ((v108 & 1) != 0)
        {
          sub_100006798(v109, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v110 = *(_QWORD *)(v2 + 1016);
          v111 = *(_QWORD *)(v2 + 968);
          sub_100082248(v109, v110, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v112 = swift_getEnumCaseMultiPayload(v110, v111);
          v113 = *(void ***)(v2 + 1016);
          if (v112 == 1)
          {
            v114 = *(_QWORD *)(v2 + 960);
            v115 = *(_QWORD *)(v2 + 952);
            v116 = *(_QWORD *)(v2 + 944);
            v117 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v115 + 32))(v114, v113, v116);
            v118 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v117);
            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v116);
          }
          else
          {
            v118 = *v113;
          }
          v119 = *(_QWORD *)(v2 + 1064);
          v120 = objc_msgSend(v118, "prefersEnqueuingUsingAirPlay");

          sub_100006798(v119, type metadata accessor for PlaybackIntentDescriptor);
          if ((v120 & 1) == 0)
          {
            v122 = *(_QWORD *)(v2 + 1056);
            v123 = *(_QWORD *)(v2 + 840);
            v124 = objc_msgSend(v73, "supportsRemoteControl");
            sub_100082248(v123, v122, type metadata accessor for PlaybackIntentDescriptor);
            if ((v124 & 1) != 0)
            {
              v125 = *(_QWORD *)(v2 + 1056);
              v126 = *(_BYTE *)(v125 + *(int *)(*(_QWORD *)(v2 + 1048) + 32));
              sub_100006798(v125, type metadata accessor for PlaybackIntentDescriptor);
              if ((v126 & 1) == 0)
              {
                v78 = *(void **)(v2 + 1144);
                if ((objc_msgSend(*(id *)(v2 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v2 + 1296), "establishGroup");
                goto LABEL_25;
              }
LABEL_47:
              v121 = (_QWORD *)swift_task_alloc(dword_10049388C);
              *(_QWORD *)(v2 + 1304) = v121;
              *v121 = v2;
              v121[1] = sub_10015C9F4;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_46:
            sub_100006798(*(_QWORD *)(v2 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_47;
          }
        }
        sub_100082248(*(_QWORD *)(v2 + 840), *(_QWORD *)(v2 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_46;
      }
    }
    else
    {
      sub_100082248(*(_QWORD *)(v2 + 840), *(_QWORD *)(v2 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    }
    sub_100006798(*(_QWORD *)(v2 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_20;
  }
  v57 = *(_QWORD *)(v2 + 1032);
  v58 = *(_QWORD *)(v2 + 968);
  sub_100082248(*(_QWORD *)(v2 + 840), v57, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v59 = swift_getEnumCaseMultiPayload(v57, v58);
  v60 = *(void ***)(v2 + 1032);
  if (v59 == 1)
  {
    v61 = *(_QWORD *)(v2 + 960);
    v62 = *(_QWORD *)(v2 + 952);
    v63 = *(_QWORD *)(v2 + 944);
    v64 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v62 + 32))(v61, v60, v63);
    v65 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v64);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
  }
  else
  {
    v65 = *v60;
  }
  *(_QWORD *)(v2 + 1216) = v65;
  v91 = (_QWORD *)(*(_QWORD *)(v2 + 872) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v92 = v91[3];
  v93 = v91[4];
  sub_10000ABC8(v91, v92);
  *(_QWORD *)(v2 + 1224) = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 40))(v92, v93);
  v94 = dword_100495A6C;
  v95 = v65;
  v96 = (_QWORD *)swift_task_alloc(v94);
  *(_QWORD *)(v2 + 1232) = v96;
  *v96 = v2;
  v96[1] = sub_10015BBC8;
  return GroupActivitiesManager.initiateSession(with:)((uint64_t)v65);
}

uint64_t sub_10015BA24()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[149];
  v2 = (void *)v0[143];
  swift_release(v0[146]);
  swift_release(v1);

  return swift_task_switch(sub_10015BA74, v0[138], v0[139]);
}

uint64_t sub_10015BA74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015BBC8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1232);
  v4 = *(_QWORD *)(*v1 + 1224);
  v5 = *(void **)(*v1 + 1216);
  *(_BYTE *)(*v1 + 268) = a1;
  swift_task_dealloc(v3);

  swift_release(v4);
  return swift_task_switch(sub_10015BC40, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_10015BC40()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unsigned __int8 v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v1 = *(unsigned __int8 *)(v0 + 268);

  if (v1 == 1)
  {
    v2 = *(void **)(v0 + 1144);
    v3 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));

    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 1072);
    v5 = *(_QWORD *)(v0 + 1064);
    v6 = *(_QWORD *)(v0 + 1056);
    v7 = *(_QWORD *)(v0 + 1040);
    v8 = *(_QWORD *)(v0 + 1032);
    v9 = *(_QWORD *)(v0 + 1024);
    v10 = *(_QWORD *)(v0 + 1016);
    v11 = *(_QWORD *)(v0 + 1008);
    v12 = *(_QWORD *)(v0 + 1000);
    v86 = *(_QWORD *)(v0 + 992);
    v87 = *(_QWORD *)(v0 + 984);
    v88 = *(_QWORD *)(v0 + 976);
    v89 = *(_QWORD *)(v0 + 960);
    v90 = *(_QWORD *)(v0 + 936);
    v91 = *(_QWORD *)(v0 + 928);
    v92 = *(_QWORD *)(v0 + 904);
    v93 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_10038E3E8);
  v16 = swift_getKeyPath(&unk_10038E410);
  static Published.subscript.getter((_QWORD *)(v0 + 816), v14, KeyPath, v16);
  swift_release(v16);
  *(_QWORD *)&v17 = swift_release(KeyPath).n128_u64[0];
  v18 = *(void **)(v0 + 816);
  v19 = *(_QWORD *)(v0 + 1072);
  v20 = *(_QWORD *)(v0 + 840);
  if (!v18)
  {
    sub_100082248(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_8;
  }
  v21 = objc_msgSend(*(id *)(v0 + 816), "isSharedListeningSession", v17);

  sub_100082248(v20, v19, type metadata accessor for PlaybackIntentDescriptor);
  if (!v21)
  {
LABEL_8:
    sub_100006798(*(_QWORD *)(v0 + 1072), type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_9;
  }
  v22 = *(_QWORD *)(v0 + 1024);
  v23 = *(_QWORD *)(v0 + 968);
  sub_100082248(*(_QWORD *)(v0 + 1072), v22, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
  v25 = *(void ***)(v0 + 1024);
  if (EnumCaseMultiPayload == 1)
  {
    v26 = *(_QWORD *)(v0 + 960);
    v27 = *(_QWORD *)(v0 + 952);
    v28 = *(_QWORD *)(v0 + 944);
    v29 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v27 + 32))(v26, v25, v28);
    v30 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v29);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  else
  {
    v30 = *v25;
  }
  v56 = *(_QWORD *)(v0 + 1072);
  v57 = objc_msgSend(v30, "tracklistSource");

  sub_100006798(v56, type metadata accessor for PlaybackIntentDescriptor);
  if (v57 != (id)100)
  {
    v58 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter(v59);
    v61 = os_log_type_enabled(v59, v60);
    v62 = *(char **)(v0 + 856);
    if (v61)
    {
      v63 = *(char **)(v0 + 848);
      v64 = swift_slowAlloc(12, -1);
      v65 = swift_slowAlloc(32, -1);
      v94 = v65;
      *(_DWORD *)v64 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v64 + 4) = sub_100019400(v63, v62, &v94);
      swift_bridgeObjectRelease_n(v62, 3);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Intent id=%{public}s) — Offering Shared Listening options", (uint8_t *)v64, 0xCu);
      swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v66 = (_QWORD *)swift_task_alloc(dword_10049347C);
    *(_QWORD *)(v0 + 1240) = v66;
    *v66 = v0;
    v66[1] = sub_10015C414;
    return sub_100161104(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
LABEL_9:
  *(int8x16_t *)(v0 + 1272) = vextq_s8(*(int8x16_t *)(v0 + 1152), *(int8x16_t *)(v0 + 1152), 8uLL);
  v31 = *(_QWORD *)(v0 + 1128);
  v32 = swift_getKeyPath(&unk_10038E3A0);
  v33 = swift_getKeyPath(&unk_10038E3C8);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v31, v32, v33);
  swift_release(v33);
  *(_QWORD *)&v34 = swift_release(v32).n128_u64[0];
  v35 = *(void **)(v0 + 808);
  v36 = objc_msgSend(v35, "route", v34);
  *(_QWORD *)(v0 + 1288) = v36;

  if (!v36)
  {
    v43 = *(void **)(v0 + 1144);
    goto LABEL_16;
  }
  objc_opt_self(MPAVEndpointRoute);
  v37 = (void *)swift_dynamicCastObjCClass(v36);
  *(_QWORD *)(v0 + 1296) = v37;
  if (v37)
  {
    v38 = v37;
    if (!objc_msgSend(v37, "isDeviceRoute"))
    {
      v39 = *(_QWORD *)(v0 + 1128);
      v40 = swift_getKeyPath(&unk_10038E1D0);
      v41 = swift_getKeyPath(&unk_10038E1F8);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v39, v40, v41);
      swift_release(v41);
      swift_release(v40);
      v42 = *(void **)(v0 + 824);

      if (!v42)
      {
        v67 = *(unsigned __int8 *)(v0 + 267);
        sub_100082248(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v68 = *(_QWORD *)(v0 + 1064);
        if ((v67 & 1) != 0)
        {
          sub_100006798(v68, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v69 = *(_QWORD *)(v0 + 1016);
          v70 = *(_QWORD *)(v0 + 968);
          sub_100082248(v68, v69, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          v71 = swift_getEnumCaseMultiPayload(v69, v70);
          v72 = *(void ***)(v0 + 1016);
          if (v71 == 1)
          {
            v73 = *(_QWORD *)(v0 + 960);
            v74 = *(_QWORD *)(v0 + 952);
            v75 = *(_QWORD *)(v0 + 944);
            v76 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v74 + 32))(v73, v72, v75);
            v77 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v76);
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
          }
          else
          {
            v77 = *v72;
          }
          v78 = *(_QWORD *)(v0 + 1064);
          v79 = objc_msgSend(v77, "prefersEnqueuingUsingAirPlay");

          sub_100006798(v78, type metadata accessor for PlaybackIntentDescriptor);
          if ((v79 & 1) == 0)
          {
            v81 = *(_QWORD *)(v0 + 1056);
            v82 = *(_QWORD *)(v0 + 840);
            v83 = objc_msgSend(v38, "supportsRemoteControl");
            sub_100082248(v82, v81, type metadata accessor for PlaybackIntentDescriptor);
            if ((v83 & 1) != 0)
            {
              v84 = *(_QWORD *)(v0 + 1056);
              v85 = *(_BYTE *)(v84 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_100006798(v84, type metadata accessor for PlaybackIntentDescriptor);
              if ((v85 & 1) == 0)
              {
                v43 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_14;
              }
LABEL_34:
              v80 = (_QWORD *)swift_task_alloc(dword_10049388C);
              *(_QWORD *)(v0 + 1304) = v80;
              *v80 = v0;
              v80[1] = sub_10015C9F4;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_33:
            sub_100006798(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_34;
          }
        }
        sub_100082248(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_33;
      }
    }
  }
  v43 = *(void **)(v0 + 1144);
LABEL_14:

LABEL_16:
  *(_QWORD *)(v0 + 1328) = v43;
  v44 = *(_QWORD *)(v0 + 1008);
  v45 = *(_QWORD *)(v0 + 968);
  sub_100082248(*(_QWORD *)(v0 + 840), v44, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v46 = swift_getEnumCaseMultiPayload(v44, v45);
  v47 = *(uint64_t **)(v0 + 1008);
  if (v46 == 1)
  {
    v48 = *(_QWORD *)(v0 + 960);
    v49 = *(_QWORD *)(v0 + 952);
    v50 = *(_QWORD *)(v0 + 944);
    v51 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v49 + 32))(v48, v47, v50);
    v52 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v51);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
  }
  else
  {
    v52 = *v47;
  }
  *(_QWORD *)(v0 + 1336) = v52;
  v53 = dword_10049344C;
  v54 = v43;
  v55 = (_QWORD *)swift_task_alloc(v53);
  *(_QWORD *)(v0 + 1344) = v55;
  *v55 = v0;
  v55[1] = sub_10015CB9C;
  return sub_10016AE74(v52, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v43);
}

uint64_t sub_10015C414(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v8 = *v4;
  v9 = *(_QWORD *)(*v4 + 1240);
  *(_QWORD *)(*v4 + 1248) = v3;
  swift_task_dealloc(v9);
  if (v3)
  {
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_10015E294;
  }
  else
  {
    *(_BYTE *)(v8 + 269) = a3;
    *(_QWORD *)(v8 + 1256) = a2;
    *(_QWORD *)(v8 + 1264) = a1;
    v10 = *(_QWORD *)(v8 + 1112);
    v11 = *(_QWORD *)(v8 + 1104);
    v12 = sub_10015C4A8;
  }
  return swift_task_switch(v12, v11, v10);
}

uint64_t sub_10015C4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  unsigned __int8 v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  if ((*(_BYTE *)(v0 + 269) & 1) != 0)
  {
    v14 = *(void **)(v0 + 1144);
    v15 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v16 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v16, 0, 0);
    *(_QWORD *)v17 = 2;
    *(_BYTE *)(v17 + 8) = 3;
    swift_willThrow(v18);
    swift_release(v15);

    v19 = *(_QWORD *)(v0 + 1072);
    v20 = *(_QWORD *)(v0 + 1064);
    v21 = *(_QWORD *)(v0 + 1056);
    v22 = *(_QWORD *)(v0 + 1040);
    v23 = *(_QWORD *)(v0 + 1032);
    v24 = *(_QWORD *)(v0 + 1024);
    v25 = *(_QWORD *)(v0 + 1016);
    v26 = *(_QWORD *)(v0 + 1008);
    v27 = *(_QWORD *)(v0 + 1000);
    v60 = *(_QWORD *)(v0 + 992);
    v61 = *(_QWORD *)(v0 + 984);
    v62 = *(_QWORD *)(v0 + 976);
    v63 = *(_QWORD *)(v0 + 960);
    v64 = *(_QWORD *)(v0 + 936);
    v65 = *(_QWORD *)(v0 + 928);
    v66 = *(_QWORD *)(v0 + 904);
    v67 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_OWORD *)(v0 + 1272) = *(_OWORD *)(v0 + 1256);
  v1 = *(_QWORD *)(v0 + 1128);
  KeyPath = swift_getKeyPath(&unk_10038E3A0);
  v3 = swift_getKeyPath(&unk_10038E3C8);
  static Published.subscript.getter((_QWORD *)(v0 + 808), v1, KeyPath, v3);
  swift_release(v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = *(void **)(v0 + 808);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 1288) = v6;

  if (!v6)
  {
    v13 = *(void **)(v0 + 1144);
    goto LABEL_10;
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = (void *)swift_dynamicCastObjCClass(v6);
  *(_QWORD *)(v0 + 1296) = v7;
  if (v7)
  {
    v8 = v7;
    if (!objc_msgSend(v7, "isDeviceRoute"))
    {
      v9 = *(_QWORD *)(v0 + 1128);
      v10 = swift_getKeyPath(&unk_10038E1D0);
      v11 = swift_getKeyPath(&unk_10038E1F8);
      static Published.subscript.getter((_QWORD *)(v0 + 824), v9, v10, v11);
      swift_release(v11);
      swift_release(v10);
      v12 = *(void **)(v0 + 824);

      if (!v12)
      {
        v41 = *(unsigned __int8 *)(v0 + 267);
        sub_100082248(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1064), type metadata accessor for PlaybackIntentDescriptor);
        v42 = *(_QWORD *)(v0 + 1064);
        if ((v41 & 1) != 0)
        {
          sub_100006798(v42, type metadata accessor for PlaybackIntentDescriptor);
        }
        else
        {
          v43 = *(_QWORD *)(v0 + 1016);
          v44 = *(_QWORD *)(v0 + 968);
          sub_100082248(v42, v43, type metadata accessor for PlaybackIntentDescriptor.IntentType);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v43, v44);
          v46 = *(void ***)(v0 + 1016);
          if (EnumCaseMultiPayload == 1)
          {
            v47 = *(_QWORD *)(v0 + 960);
            v48 = *(_QWORD *)(v0 + 952);
            v49 = *(_QWORD *)(v0 + 944);
            v50 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v48 + 32))(v47, v46, v49);
            v51 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v50);
            (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
          }
          else
          {
            v51 = *v46;
          }
          v52 = *(_QWORD *)(v0 + 1064);
          v53 = objc_msgSend(v51, "prefersEnqueuingUsingAirPlay");

          sub_100006798(v52, type metadata accessor for PlaybackIntentDescriptor);
          if ((v53 & 1) == 0)
          {
            v55 = *(_QWORD *)(v0 + 1056);
            v56 = *(_QWORD *)(v0 + 840);
            v57 = objc_msgSend(v8, "supportsRemoteControl");
            sub_100082248(v56, v55, type metadata accessor for PlaybackIntentDescriptor);
            if ((v57 & 1) != 0)
            {
              v58 = *(_QWORD *)(v0 + 1056);
              v59 = *(_BYTE *)(v58 + *(int *)(*(_QWORD *)(v0 + 1048) + 32));
              sub_100006798(v58, type metadata accessor for PlaybackIntentDescriptor);
              if ((v59 & 1) == 0)
              {
                v13 = *(void **)(v0 + 1144);
                if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
                  objc_msgSend(*(id *)(v0 + 1296), "establishGroup");
                goto LABEL_7;
              }
LABEL_22:
              v54 = (_QWORD *)swift_task_alloc(dword_10049388C);
              *(_QWORD *)(v0 + 1304) = v54;
              *v54 = v0;
              v54[1] = sub_10015C9F4;
              return Player.prepareForBufferedAirPlay()();
            }
LABEL_21:
            sub_100006798(*(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
            goto LABEL_22;
          }
        }
        sub_100082248(*(_QWORD *)(v0 + 840), *(_QWORD *)(v0 + 1056), type metadata accessor for PlaybackIntentDescriptor);
        goto LABEL_21;
      }
    }
  }
  v13 = *(void **)(v0 + 1144);
LABEL_7:

LABEL_10:
  *(_QWORD *)(v0 + 1328) = v13;
  v29 = *(_QWORD *)(v0 + 1008);
  v30 = *(_QWORD *)(v0 + 968);
  sub_100082248(*(_QWORD *)(v0 + 840), v29, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v31 = swift_getEnumCaseMultiPayload(v29, v30);
  v32 = *(uint64_t **)(v0 + 1008);
  if (v31 == 1)
  {
    v33 = *(_QWORD *)(v0 + 960);
    v34 = *(_QWORD *)(v0 + 952);
    v35 = *(_QWORD *)(v0 + 944);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v34 + 32))(v33, v32, v35);
    v37 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v36);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  }
  else
  {
    v37 = *v32;
  }
  *(_QWORD *)(v0 + 1336) = v37;
  v38 = dword_10049344C;
  v39 = v13;
  v40 = (_QWORD *)swift_task_alloc(v38);
  *(_QWORD *)(v0 + 1344) = v40;
  *v40 = v0;
  v40[1] = sub_10015CB9C;
  return sub_10016AE74(v37, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v13);
}

uint64_t sub_10015C9F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 1304);
  *(_QWORD *)(*(_QWORD *)v2 + 1312) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_10015E3E8;
  }
  else
  {
    v4[165] = a1;
    v6 = v4[139];
    v7 = v4[138];
    v8 = sub_10015CA70;
  }
  return swift_task_switch(v8, v7, v6);
}

uint64_t sub_10015CA70()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 1320);
  if ((objc_msgSend(*(id *)(v0 + 1296), "canModifyGroupMembership") & 1) == 0)
    objc_msgSend(*(id *)(v0 + 1296), "establishGroup");

  *(_QWORD *)(v0 + 1328) = v1;
  v2 = *(_QWORD *)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 968);
  sub_100082248(*(_QWORD *)(v0 + 840), v2, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v3);
  v5 = *(uint64_t **)(v0 + 1008);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1336) = v10;
  v11 = dword_10049344C;
  v12 = v1;
  v13 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 1344) = v13;
  *v13 = v0;
  v13[1] = sub_10015CB9C;
  return sub_10016AE74(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v1);
}

uint64_t sub_10015CB9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1344);
  *(_QWORD *)(*v1 + 1352) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_10015CD64;
  }
  else
  {
    v7 = *(void **)(v2 + 1328);

    v4 = *(_QWORD *)(v2 + 1112);
    v5 = *(_QWORD *)(v2 + 1104);
    v6 = sub_10015CC18;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10015CC18()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1328);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015CD64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t KeyPath;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  void **v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  _OWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  _OWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  void *v133;
  id v134;
  unint64_t v135;
  _QWORD *v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(void);
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  NSObject *v156;
  os_log_type_t v157;
  _BOOL4 v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236[2];

  v1 = *(_QWORD *)(v0 + 1352);
  v2 = *(void **)(v0 + 1328);

  *(_QWORD *)(v0 + 800) = v1;
  swift_errorRetain(v1);
  v3 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (!swift_dynamicCast(v0 + 584, v0 + 800, v3, &type metadata for Player.PlaybackError, 0))
  {
    v20 = *(void **)(v0 + 1328);
    v21 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    swift_errorRelease(*(_QWORD *)(v0 + 800));
    swift_willThrow(v22);
    swift_release(v21);

LABEL_75:
    v138 = *(_QWORD *)(v0 + 1072);
    v139 = *(_QWORD *)(v0 + 1064);
    v140 = *(_QWORD *)(v0 + 1056);
    v141 = *(_QWORD *)(v0 + 1040);
    v142 = *(_QWORD *)(v0 + 1032);
    v143 = *(_QWORD *)(v0 + 1024);
    v144 = *(_QWORD *)(v0 + 1016);
    v145 = *(_QWORD *)(v0 + 1008);
    v146 = *(_QWORD *)(v0 + 1000);
    v208 = *(_QWORD *)(v0 + 992);
    v211 = *(_QWORD *)(v0 + 984);
    v214 = *(_QWORD *)(v0 + 976);
    v217 = *(_QWORD *)(v0 + 960);
    v221 = *(_QWORD *)(v0 + 936);
    v224 = *(_QWORD *)(v0 + 928);
    v228 = *(_QWORD *)(v0 + 904);
    v231 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v208);
    swift_task_dealloc(v211);
    swift_task_dealloc(v214);
    swift_task_dealloc(v217);
    swift_task_dealloc(v221);
    swift_task_dealloc(v224);
    swift_task_dealloc(v228);
    swift_task_dealloc(v231);
    v147 = *(uint64_t (**)(void))(v0 + 8);
    return v147();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 1352));
  v4 = *(_QWORD *)(v0 + 584);
  *(_QWORD *)(v0 + 1360) = v4;
  v5 = *(_QWORD *)(v0 + 592);
  *(_QWORD *)(v0 + 1368) = v5;
  v6 = (void *)_convertErrorToNSError(_:)(v4);
  *(_QWORD *)(v0 + 1376) = v6;
  _s3__C4CodeOMa_0(0);
  v8 = v7;
  *(_QWORD *)(v0 + 760) = 1;
  v9 = sub_100006924(&qword_10048D720, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_100386E00);
  v10 = v6;
  v11 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 760, v10, v8, v9);

  if ((v11 & 1) != 0)
  {
    v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(char **)(v0 + 856);
    if (v15)
    {
      v17 = *(char **)(v0 + 848);
      v18 = swift_slowAlloc(12, -1);
      v19 = swift_slowAlloc(32, -1);
      v236[0] = v19;
      *(_DWORD *)v18 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v18 + 4) = sub_100019400(v17, v16, v236);
      swift_bridgeObjectRelease_n(v16, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Intent id=%{public}s) — Offering replace intent options to user", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
    }

    v35 = *(_QWORD *)(v0 + 1088);
    *(_QWORD *)(v0 + 1384) = static MainActor.shared.getter(v36);
    v37 = dispatch thunk of Actor.unownedExecutor.getter(v35, &protocol witness table for MainActor);
    *(_QWORD *)(v0 + 1392) = v37;
    *(_QWORD *)(v0 + 1400) = v38;
    return swift_task_switch(sub_10015E544, v37, v38);
  }
  *(_QWORD *)(v0 + 728) = 5;
  v23 = v10;
  v24 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 728, v23, v8, v9);

  if ((v24 & 1) != 0)
  {
    v226 = *(void **)(v0 + 1328);
    v229 = v5;
    v25 = *(_QWORD *)(v0 + 1128);
    v26 = *(_QWORD *)(v0 + 1048);
    v27 = *(_QWORD *)(v0 + 872);
    v28 = *(_QWORD *)(v0 + 840);
    swift_release(*(_QWORD *)(v0 + 1096));
    v29 = v4;
    v30 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v31 = *(_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    sub_10000ABC8((_QWORD *)(v27 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v30);
    sub_10016D3E8(v28 + *(int *)(v26 + 28), v0 + 272);
    *(_BYTE *)(v0 + 328) = 2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8))(v0 + 272, v30, v31);
    sub_10016B358((_QWORD *)(v0 + 272));
    v32 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v32, 0, 0);
    *(_QWORD *)v33 = 1;
    *(_BYTE *)(v33 + 8) = 3;
    swift_willThrow(v34);
    swift_release(v25);
    swift_errorRelease(v29);
    swift_bridgeObjectRelease(v229);

LABEL_74:
    swift_errorRelease(*(_QWORD *)(v0 + 800));
    goto LABEL_75;
  }
  *(_QWORD *)(v0 + 720) = 3;
  v40 = v23;
  v41 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 720, v40, v8, v9);

  if ((v41 & 1) != 0)
  {
    v42 = *(_QWORD *)(v0 + 992);
    v43 = *(_QWORD *)(v0 + 968);
    sub_100082248(*(_QWORD *)(v0 + 840), v42, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v42, v43);
    v45 = *(uint64_t **)(v0 + 992);
    if (EnumCaseMultiPayload == 1)
    {
      v46 = *(_QWORD *)(v0 + 960);
      v47 = *(_QWORD *)(v0 + 952);
      v48 = *(_QWORD *)(v0 + 944);
      v49 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v47 + 32))(v46, v45, v48);
      v50 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v49);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    }
    else
    {
      v50 = *v45;
    }
    *(_QWORD *)(v0 + 1448) = v50;
    v65 = (_QWORD *)swift_task_alloc(dword_1004930F4);
    *(_QWORD *)(v0 + 1456) = v65;
    *v65 = v0;
    v65[1] = sub_10015EC84;
    return sub_10015949C(v50, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856));
  }
  type metadata accessor for Code(0);
  v52 = v51;
  *(_QWORD *)(v0 + 680) = 1001;
  v53 = sub_100006924(&qword_10048D748, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100386DC4);
  v54 = v40;
  v55 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 680, v54, v52, v53);

  if ((v55 & 1) == 0)
  {
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_73:
    v135 = sub_10016AD54();
    swift_allocError(&type metadata for Player.PlaybackError, v135, 0, 0);
    *v136 = v4;
    v136[1] = v5;
    swift_errorRetain(v4);
    swift_bridgeObjectRetain();
    swift_willThrow(v137);
    swift_release(v67);
    swift_errorRelease(v4);
    swift_bridgeObjectRelease(v5);

    goto LABEL_74;
  }
  v56 = *(_QWORD *)(v0 + 984);
  v57 = *(_QWORD *)(v0 + 968);
  sub_100082248(*(_QWORD *)(v0 + 840), v56, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  v58 = swift_getEnumCaseMultiPayload(v56, v57);
  v59 = *(void ***)(v0 + 984);
  if (v58 == 1)
  {
    v60 = *(_QWORD *)(v0 + 960);
    v61 = *(_QWORD *)(v0 + 952);
    v62 = *(_QWORD *)(v0 + 944);
    v63 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(v61 + 32))(v60, v59, v62);
    v64 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v63);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  }
  else
  {
    v64 = *v59;
  }
  v68 = objc_msgSend(v64, "sharedListeningProperties");

  if (!v68)
    goto LABEL_31;
  v69 = objc_msgSend(v54, "userInfo");
  v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v73 = v72;
  if (*(_QWORD *)(v70 + 16) && (v74 = sub_10009ABAC(v71, v72), (v75 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v70 + 56) + 32 * v74, v0 + 504);
  }
  else
  {
    *(_OWORD *)(v0 + 504) = 0u;
    *(_OWORD *)(v0 + 520) = 0u;
  }
  swift_bridgeObjectRelease(v70);
  swift_bridgeObjectRelease(v73);
  if (!*(_QWORD *)(v0 + 528))
  {
    swift_release(*(_QWORD *)(v0 + 1096));
    sub_100008758(v0 + 504, &qword_100491B90);
    goto LABEL_45;
  }
  type metadata accessor for MPCPlayerRequestError(0);
  v77 = v76;
  if ((swift_dynamicCast(v0 + 736, v0 + 504, (char *)&type metadata for Any + 8, v76, 6) & 1) == 0)
  {
LABEL_31:
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_45:
    v99 = *(_QWORD *)(*(_QWORD *)(v0 + 872) + *(_QWORD *)(v0 + 1120));
    if (!v99)
      goto LABEL_72;
    KeyPath = swift_getKeyPath(&unk_10038E1D0);
    v101 = swift_getKeyPath(&unk_10038E1F8);
    v102 = swift_retain(v99);
    static Published.subscript.getter((_QWORD *)(v0 + 640), v102, KeyPath, v101);
    swift_release(v101);
    swift_release(KeyPath);
    swift_release(v99);
    v103 = *(void **)(v0 + 640);
    if (!v103)
      goto LABEL_72;

    v104 = objc_msgSend(v54, "userInfo");
    v105 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v104, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v106 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    v108 = v107;
    if (*(_QWORD *)(v105 + 16) && (v109 = sub_10009ABAC(v106, v107), (v110 & 1) != 0))
    {
      sub_10000684C(*(_QWORD *)(v105 + 56) + 32 * v109, v0 + 376);
    }
    else
    {
      *(_OWORD *)(v0 + 376) = 0u;
      *(_OWORD *)(v0 + 392) = 0u;
    }
    swift_bridgeObjectRelease(v105);
    swift_bridgeObjectRelease(v108);
    if (!*(_QWORD *)(v0 + 400))
    {
      sub_100008758(v0 + 376, &qword_100491B90);
      goto LABEL_72;
    }
    v111 = (void **)(v0 + 616);
    type metadata accessor for MPCMusicBehaviorError(0);
    v113 = v112;
    if ((swift_dynamicCast(v0 + 616, v0 + 376, (char *)&type metadata for Any + 8, v112, 6) & 1) != 0)
    {
      v114 = *v111;
      *(_QWORD *)(v0 + 632) = *v111;
      v115 = sub_100006924(&qword_10048D690, (uint64_t (*)(uint64_t))type metadata accessor for MPCMusicBehaviorError, (uint64_t)&unk_100386CB4);
      _BridgedStoredNSError.code.getter(v113, v115);
      if (*(_QWORD *)(v0 + 624) != 6)
      {

        goto LABEL_72;
      }
      v234 = v4;
      v116 = (_OWORD *)(v0 + 408);
      v223 = v114;
      v227 = v0;
      *(_QWORD *)(v0 + 648) = v114;
      v117 = _BridgedStoredNSError.userInfo.getter(v113, v115);
      v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
      v120 = v119;
      if (*(_QWORD *)(v117 + 16) && (v121 = sub_10009ABAC(v118, v119), (v122 & 1) != 0))
      {
        sub_10000684C(*(_QWORD *)(v117 + 56) + 32 * v121, v0 + 408);
      }
      else
      {
        *v116 = 0u;
        *(_OWORD *)(v0 + 424) = 0u;
      }
      swift_bridgeObjectRelease(v117);
      swift_bridgeObjectRelease(v120);
      if (!*(_QWORD *)(v0 + 432))
      {

        sub_100008758((uint64_t)v116, &qword_100491B90);
        goto LABEL_72;
      }
      v123 = sub_100005574(&qword_100493458);
      if ((swift_dynamicCast(v0 + 656, v116, (char *)&type metadata for Any + 8, v123, 6) & 1) != 0)
      {
        v124 = *(_QWORD *)(v0 + 656);
        if (*(_QWORD *)(v124 + 16))
        {
          v125 = *(id *)(v124 + 32);
          swift_bridgeObjectRelease(v124);
          *(_QWORD *)(v0 + 672) = v125;
          _BridgedStoredNSError.code.getter(v113, v115);
          if (*(_QWORD *)(v0 + 664) != 4)
          {
LABEL_88:

            goto LABEL_72;
          }
          v126 = (_OWORD *)(v0 + 440);
          *(_QWORD *)(v0 + 688) = v125;
          v127 = _BridgedStoredNSError.userInfo.getter(v113, v115);
          v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
          v130 = v129;
          v220 = v125;
          v230 = v5;
          if (*(_QWORD *)(v127 + 16) && (v131 = sub_10009ABAC(v128, v129), (v132 & 1) != 0))
          {
            sub_10000684C(*(_QWORD *)(v127 + 56) + 32 * v131, v0 + 440);
          }
          else
          {
            *v126 = 0u;
            *(_OWORD *)(v0 + 456) = 0u;
          }
          swift_bridgeObjectRelease(v127);
          swift_bridgeObjectRelease(v130);
          if (*(_QWORD *)(v0 + 464))
          {
            v148 = (_QWORD *)(v0 + 696);
            v149 = sub_100005574((uint64_t *)&unk_100493460);
            if ((swift_dynamicCast(v0 + 696, v126, (char *)&type metadata for Any + 8, v149, 6) & 1) != 0)
            {
              v150 = *v148;
              if (*(_QWORD *)(*v148 + 16))
              {
                v151 = *(id *)(v150 + 32);
                swift_bridgeObjectRelease(v150);
                *(_QWORD *)(v0 + 712) = v151;
                type metadata accessor for MPCError(0);
                v153 = v152;
                v154 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
                _BridgedStoredNSError.code.getter(v153, v154);

                if (*(_QWORD *)(v0 + 704) == 61)
                {
                  v155 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
                  v156 = Logger.logObject.getter(v155);
                  v157 = static os_log_type_t.default.getter(v156);
                  v158 = os_log_type_enabled(v156, v157);
                  v159 = *(char **)(v0 + 856);
                  if (v158)
                  {
                    v160 = *(char **)(v0 + 848);
                    v161 = swift_slowAlloc(12, -1);
                    v162 = swift_slowAlloc(32, -1);
                    v236[0] = v162;
                    *(_DWORD *)v161 = 136446210;
                    swift_bridgeObjectRetain();
                    *(_QWORD *)(v161 + 4) = sub_100019400(v160, v159, v236);
                    swift_bridgeObjectRelease_n(v159, 3);
                    _os_log_impl((void *)&_mh_execute_header, v156, v157, "Intent id=%{public}s) — SharePlayTogether content not available in host's storefront", (uint8_t *)v161, 0xCu);
                    swift_arrayDestroy(v162, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v162, -1, -1);
                    swift_slowDealloc(v161, -1, -1);
                  }
                  else
                  {
                    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
                  }

                  v163 = *(_QWORD *)(v0 + 936);
                  v164 = *(_QWORD *)(v0 + 928);
                  v165 = *(_QWORD *)(v0 + 920);
                  v166 = *(_QWORD *)(v227 + 912);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003B3430);
                  v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
                  v167(v164, v163, v166);
                  if (qword_10048C570 != -1)
                    swift_once(&qword_10048C570, sub_10000AD54);
                  v215 = *(_QWORD *)(v227 + 1128);
                  v218 = *(void **)(v227 + 1328);
                  v168 = *(_QWORD *)(v227 + 936);
                  v169 = *(_QWORD *)(v227 + 928);
                  v170 = *(_QWORD *)(v227 + 920);
                  v171 = *(_QWORD *)(v227 + 912);
                  v172 = *(_QWORD *)(v227 + 904);
                  v204 = *(_QWORD *)(v227 + 896);
                  v207 = *(_QWORD *)(v227 + 888);
                  v209 = *(_QWORD *)(v227 + 880);
                  v212 = *(_QWORD *)(v227 + 872);
                  v173 = qword_1004A1DA0;
                  static Locale.current.getter((id)qword_1004A1DA0);
                  v174 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v173, v172, 0, 0, 256);
                  v205 = v175;
                  v206 = v174;
                  v176 = *(void (**)(uint64_t, uint64_t))(v170 + 8);
                  v176(v168, v171);
                  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x80000001003B3450);
                  v167(v169, v168, v171);
                  v177 = qword_1004A1DA0;
                  static Locale.current.getter((id)qword_1004A1DA0);
                  v178 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v177, v172, 0, 0, 256);
                  v202 = v179;
                  v203 = v178;
                  v176(v168, v171);
                  v180 = sub_100005574(&qword_100493240);
                  v181 = swift_allocObject(v180, 88, 7);
                  *(_OWORD *)(v181 + 16) = xmmword_100384A80;
                  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
                  v167(v169, v168, v171);
                  v182 = qword_1004A1DA0;
                  static Locale.current.getter((id)qword_1004A1DA0);
                  v183 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v182, v172, 0, 0, 256);
                  v185 = v184;
                  v176(v168, v171);
                  v186 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
                  v187 = UUID.uuidString.getter(v186);
                  v189 = v188;
                  (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v204, v209);
                  *(_QWORD *)(v181 + 32) = v187;
                  *(_QWORD *)(v181 + 40) = v189;
                  *(_QWORD *)(v181 + 48) = v183;
                  *(_QWORD *)(v181 + 56) = v185;
                  *(_BYTE *)(v181 + 64) = 2;
                  *(_QWORD *)(v181 + 72) = 0;
                  *(_QWORD *)(v181 + 80) = 0;
                  v190 = *(_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
                  v191 = *(_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
                  sub_10000ABC8((_QWORD *)(v212 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v190);
                  *(_QWORD *)(v227 + 208) = v206;
                  *(_QWORD *)(v227 + 216) = v205;
                  *(_QWORD *)(v227 + 224) = v203;
                  *(_QWORD *)(v227 + 232) = v202;
                  *(_BYTE *)(v227 + 240) = 0;
                  *(_QWORD *)(v227 + 248) = v181;
                  *(_QWORD *)(v227 + 256) = 0;
                  *(_BYTE *)(v227 + 264) = 0;
                  v192 = *(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v192(v227 + 208, v190, v191);
                  swift_release(v215);
                  swift_bridgeObjectRelease(v205);
                  swift_bridgeObjectRelease(v202);
                  swift_bridgeObjectRelease(v181);

                  swift_errorRelease(v234);
                  swift_bridgeObjectRelease(v230);

                  sub_10016B358((_QWORD *)(v227 + 208));
                  swift_errorRelease(*(_QWORD *)(v227 + 800));
                  v193 = *(_QWORD *)(v227 + 1072);
                  v194 = *(_QWORD *)(v227 + 1064);
                  v195 = *(_QWORD *)(v227 + 1056);
                  v196 = *(_QWORD *)(v227 + 1040);
                  v197 = *(_QWORD *)(v227 + 1032);
                  v198 = *(_QWORD *)(v227 + 1024);
                  v199 = *(_QWORD *)(v227 + 1016);
                  v200 = *(_QWORD *)(v227 + 1008);
                  v201 = *(_QWORD *)(v227 + 1000);
                  v210 = *(_QWORD *)(v227 + 992);
                  v213 = *(_QWORD *)(v227 + 984);
                  v216 = *(_QWORD *)(v227 + 976);
                  v219 = *(_QWORD *)(v227 + 960);
                  v222 = *(_QWORD *)(v227 + 936);
                  v225 = *(_QWORD *)(v227 + 928);
                  v232 = *(_QWORD *)(v227 + 904);
                  v235 = *(_QWORD *)(v227 + 896);
                  swift_task_dealloc(*(_QWORD *)(v227 + 1080));
                  swift_task_dealloc(v193);
                  swift_task_dealloc(v194);
                  swift_task_dealloc(v195);
                  swift_task_dealloc(v196);
                  swift_task_dealloc(v197);
                  swift_task_dealloc(v198);
                  swift_task_dealloc(v199);
                  swift_task_dealloc(v200);
                  swift_task_dealloc(v201);
                  swift_task_dealloc(v210);
                  swift_task_dealloc(v213);
                  swift_task_dealloc(v216);
                  swift_task_dealloc(v219);
                  swift_task_dealloc(v222);
                  swift_task_dealloc(v225);
                  swift_task_dealloc(v232);
                  swift_task_dealloc(v235);
                  v147 = *(uint64_t (**)(void))(v227 + 8);
                  return v147();
                }
              }
              else
              {
                swift_bridgeObjectRelease(*v148);
              }
            }
            goto LABEL_88;
          }

          sub_100008758((uint64_t)v126, &qword_100491B90);
          goto LABEL_72;
        }
        swift_bridgeObjectRelease(v124);
      }

    }
LABEL_72:
    v66 = *(void **)(v0 + 1328);
    v67 = *(_QWORD *)(v0 + 1128);
    goto LABEL_73;
  }
  v233 = v4;
  v78 = *(void **)(v0 + 736);
  *(_QWORD *)(v0 + 1472) = v78;
  *(_QWORD *)(v0 + 752) = v78;
  v79 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  _BridgedStoredNSError.code.getter(v77, v79);
  if (*(_QWORD *)(v0 + 744) != 1000)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    v4 = v233;
    goto LABEL_45;
  }
  v80 = (_OWORD *)(v0 + 472);
  *(_QWORD *)(v0 + 768) = v78;
  v81 = _BridgedStoredNSError.userInfo.getter(v77, v79);
  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v84 = v83;
  if (*(_QWORD *)(v81 + 16))
  {
    v85 = sub_10009ABAC(v82, v83);
    if ((v86 & 1) != 0)
    {
      sub_10000684C(*(_QWORD *)(v81 + 56) + 32 * v85, v0 + 472);
    }
    else
    {
      *v80 = 0u;
      *(_OWORD *)(v0 + 488) = 0u;
    }
  }
  else
  {
    *v80 = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
  }
  v4 = v233;
  swift_bridgeObjectRelease(v81);
  swift_bridgeObjectRelease(v84);
  if (!*(_QWORD *)(v0 + 496))
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    sub_100008758(v0 + 472, &qword_100491B90);
    goto LABEL_45;
  }
  type metadata accessor for MPCError(0);
  v88 = v87;
  if ((swift_dynamicCast(v0 + 776, v0 + 472, (char *)&type metadata for Any + 8, v87, 6) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 1096));
LABEL_44:

    goto LABEL_45;
  }
  v89 = *(void **)(v0 + 776);
  *(_QWORD *)(v0 + 1480) = v89;
  *(_QWORD *)(v0 + 792) = v89;
  v90 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
  _BridgedStoredNSError.code.getter(v88, v90);
  if (*(_QWORD *)(v0 + 784) != 58)
  {
    swift_release(*(_QWORD *)(v0 + 1096));

    goto LABEL_44;
  }
  v91 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 856), 2);
  v92 = Logger.logObject.getter(v91);
  v93 = static os_log_type_t.default.getter(v92);
  v94 = os_log_type_enabled(v92, v93);
  v95 = *(char **)(v0 + 856);
  if (v94)
  {
    v96 = *(char **)(v0 + 848);
    v97 = swift_slowAlloc(12, -1);
    v98 = swift_slowAlloc(32, -1);
    v236[0] = v98;
    *(_DWORD *)v97 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v97 + 4) = sub_100019400(v96, v95, v236);
    swift_bridgeObjectRelease_n(v95, 3);
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Intent id=%{public}s) — SharedListening requires system route", (uint8_t *)v97, 0xCu);
    swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1, -1);
    swift_slowDealloc(v97, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 856), 2);
  }

  v133 = (void *)objc_opt_self(MPAVRoutingController);
  *(_QWORD *)(v0 + 1488) = v133;
  v134 = objc_msgSend(v133, "systemRoute");
  *(_QWORD *)(v0 + 1496) = v134;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10015ECF0;
  *(_QWORD *)(v0 + 368) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 336) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 344) = 0x40000000;
  *(_QWORD *)(v0 + 352) = sub_1000A40C0;
  *(_QWORD *)(v0 + 360) = &unk_10044FE08;
  objc_msgSend(v133, "setActiveRoute:completion:", v134, v0 + 336);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_10015E294()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 1144);
  v2 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v2);
  v3 = *(_QWORD *)(v0 + 1072);
  v4 = *(_QWORD *)(v0 + 1064);
  v5 = *(_QWORD *)(v0 + 1056);
  v6 = *(_QWORD *)(v0 + 1040);
  v7 = *(_QWORD *)(v0 + 1032);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 1016);
  v10 = *(_QWORD *)(v0 + 1008);
  v11 = *(_QWORD *)(v0 + 1000);
  v13 = *(_QWORD *)(v0 + 992);
  v14 = *(_QWORD *)(v0 + 984);
  v15 = *(_QWORD *)(v0 + 976);
  v16 = *(_QWORD *)(v0 + 960);
  v17 = *(_QWORD *)(v0 + 936);
  v18 = *(_QWORD *)(v0 + 928);
  v19 = *(_QWORD *)(v0 + 904);
  v20 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015E3E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 1288);
  v2 = *(void **)(v0 + 1144);
  v3 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v3);
  v4 = *(_QWORD *)(v0 + 1072);
  v5 = *(_QWORD *)(v0 + 1064);
  v6 = *(_QWORD *)(v0 + 1056);
  v7 = *(_QWORD *)(v0 + 1040);
  v8 = *(_QWORD *)(v0 + 1032);
  v9 = *(_QWORD *)(v0 + 1024);
  v10 = *(_QWORD *)(v0 + 1016);
  v11 = *(_QWORD *)(v0 + 1008);
  v12 = *(_QWORD *)(v0 + 1000);
  v14 = *(_QWORD *)(v0 + 992);
  v15 = *(_QWORD *)(v0 + 984);
  v16 = *(_QWORD *)(v0 + 976);
  v17 = *(_QWORD *)(v0 + 960);
  v18 = *(_QWORD *)(v0 + 936);
  v19 = *(_QWORD *)(v0 + 928);
  v20 = *(_QWORD *)(v0 + 904);
  v21 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015E544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 1408) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_10015E5AC, v4, v6);
}

uint64_t sub_10015E5AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[109];
  v0[15] = v0 + 75;
  v0[10] = v0;
  v0[11] = sub_10015E604;
  v2 = swift_continuation_init(v0 + 10, 0);
  sub_100162144(v2, v1);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_10015E604()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 1408);
  *(_QWORD *)(v1 + 1416) = *(_QWORD *)(v1 + 600);
  *(_BYTE *)(v1 + 270) = *(_BYTE *)(v1 + 608);
  swift_release(v2);
  return swift_task_switch(sub_10015E664, *(_QWORD *)(v1 + 1392), *(_QWORD *)(v1 + 1400));
}

uint64_t sub_10015E664()
{
  _QWORD *v0;

  swift_release(v0[173]);
  return swift_task_switch(sub_10015E6A0, v0[138], v0[139]);
}

uint64_t sub_10015E6A0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if ((*(_BYTE *)(v0 + 270) & 1) != 0)
  {
    v1 = *(void **)(v0 + 1376);
    v2 = *(_QWORD *)(v0 + 1368);
    v3 = *(_QWORD *)(v0 + 1360);
    v4 = *(void **)(v0 + 1328);
    v5 = *(_QWORD *)(v0 + 1128);
    swift_release(*(_QWORD *)(v0 + 1096));
    v6 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v6, 0, 0);
    *(_QWORD *)v7 = 2;
    *(_BYTE *)(v7 + 8) = 3;
    swift_willThrow(v8);
    swift_release(v5);
    swift_errorRelease(v3);
    swift_bridgeObjectRelease(v2);

    swift_errorRelease(*(_QWORD *)(v0 + 800));
    v9 = *(_QWORD *)(v0 + 1072);
    v10 = *(_QWORD *)(v0 + 1064);
    v11 = *(_QWORD *)(v0 + 1056);
    v12 = *(_QWORD *)(v0 + 1040);
    v13 = *(_QWORD *)(v0 + 1032);
    v14 = *(_QWORD *)(v0 + 1024);
    v15 = *(_QWORD *)(v0 + 1016);
    v16 = *(_QWORD *)(v0 + 1008);
    v17 = *(_QWORD *)(v0 + 1000);
    v29 = *(_QWORD *)(v0 + 992);
    v30 = *(_QWORD *)(v0 + 984);
    v31 = *(_QWORD *)(v0 + 976);
    v32 = *(_QWORD *)(v0 + 960);
    v33 = *(_QWORD *)(v0 + 936);
    v34 = *(_QWORD *)(v0 + 928);
    v35 = *(_QWORD *)(v0 + 904);
    v36 = *(_QWORD *)(v0 + 896);
    swift_task_dealloc(*(_QWORD *)(v0 + 1080));
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 1000);
    v20 = *(_QWORD *)(v0 + 968);
    sub_100082248(*(_QWORD *)(v0 + 840), v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    v22 = *(uint64_t **)(v0 + 1000);
    if (EnumCaseMultiPayload == 1)
    {
      v23 = *(_QWORD *)(v0 + 960);
      v24 = *(_QWORD *)(v0 + 952);
      v25 = *(_QWORD *)(v0 + 944);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v24 + 32))(v23, v22, v25);
      v27 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v26);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    }
    else
    {
      v27 = *v22;
    }
    *(_QWORD *)(v0 + 1424) = v27;
    v28 = (_QWORD *)swift_task_alloc(dword_10049344C);
    *(_QWORD *)(v0 + 1432) = v28;
    *v28 = v0;
    v28[1] = sub_10015E928;
    return sub_10016AE74(v27, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1416), 0);
  }
}

uint64_t sub_10015E928()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1432);
  *(_QWORD *)(*v1 + 1440) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_10015EB08;
  else
    v4 = sub_10015E994;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_10015E994()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015EB08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015EC84()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1456);
  *(_QWORD *)(*v1 + 1464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_10015F1F0;
  else
    v4 = sub_10016DA24;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_10015ECF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 1504) = v2;
  if (v2)
    v3 = sub_10015F36C;
  else
    v3 = sub_10015ED50;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 1104), *(_QWORD *)(v1 + 1112));
}

uint64_t sub_10015ED50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 976);
  v2 = *(_QWORD *)(v0 + 968);
  v3 = *(_QWORD *)(v0 + 840);

  sub_100082248(v3, v1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  v5 = *(uint64_t **)(v0 + 976);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = *(_QWORD *)(v0 + 960);
    v7 = *(_QWORD *)(v0 + 952);
    v8 = *(_QWORD *)(v0 + 944);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v6, v5, v8);
    v10 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v9);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    v10 = *v5;
  }
  *(_QWORD *)(v0 + 1512) = v10;
  v11 = objc_msgSend(*(id *)(v0 + 1488), "systemRoute");
  *(_QWORD *)(v0 + 1520) = v11;
  v12 = (_QWORD *)swift_task_alloc(dword_10049344C);
  *(_QWORD *)(v0 + 1528) = v12;
  *v12 = v0;
  v12[1] = sub_10015EE64;
  return sub_10016AE74(v10, *(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 1280), *(_QWORD *)(v0 + 1272), (uint64_t)v11);
}

uint64_t sub_10015EE64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1528);
  *(_QWORD *)(*v1 + 1536) = v0;
  swift_task_dealloc(v3);
  v4 = *(void **)(v2 + 1512);

  if (v0)
    v5 = sub_10015F064;
  else
    v5 = sub_10015EEE0;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 1104), *(_QWORD *)(v2 + 1112));
}

uint64_t sub_10015EEE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015F064()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 1480);
  v2 = *(void **)(v0 + 1472);
  v3 = *(void **)(v0 + 1376);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1360);
  v6 = *(void **)(v0 + 1328);
  v7 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));

  swift_release(v7);
  swift_errorRelease(v5);
  swift_bridgeObjectRelease(v4);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v8 = *(_QWORD *)(v0 + 1072);
  v9 = *(_QWORD *)(v0 + 1064);
  v10 = *(_QWORD *)(v0 + 1056);
  v11 = *(_QWORD *)(v0 + 1040);
  v12 = *(_QWORD *)(v0 + 1032);
  v13 = *(_QWORD *)(v0 + 1024);
  v14 = *(_QWORD *)(v0 + 1016);
  v15 = *(_QWORD *)(v0 + 1008);
  v16 = *(_QWORD *)(v0 + 1000);
  v18 = *(_QWORD *)(v0 + 992);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 976);
  v21 = *(_QWORD *)(v0 + 960);
  v22 = *(_QWORD *)(v0 + 936);
  v23 = *(_QWORD *)(v0 + 928);
  v24 = *(_QWORD *)(v0 + 904);
  v25 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015F1F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(void **)(v0 + 1376);
  v2 = *(_QWORD *)(v0 + 1368);
  v3 = *(_QWORD *)(v0 + 1360);
  v4 = *(void **)(v0 + 1328);
  v5 = *(_QWORD *)(v0 + 1128);
  swift_release(*(_QWORD *)(v0 + 1096));
  swift_release(v5);
  swift_errorRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v6 = *(_QWORD *)(v0 + 1072);
  v7 = *(_QWORD *)(v0 + 1064);
  v8 = *(_QWORD *)(v0 + 1056);
  v9 = *(_QWORD *)(v0 + 1040);
  v10 = *(_QWORD *)(v0 + 1032);
  v11 = *(_QWORD *)(v0 + 1024);
  v12 = *(_QWORD *)(v0 + 1016);
  v13 = *(_QWORD *)(v0 + 1008);
  v14 = *(_QWORD *)(v0 + 1000);
  v16 = *(_QWORD *)(v0 + 992);
  v17 = *(_QWORD *)(v0 + 984);
  v18 = *(_QWORD *)(v0 + 976);
  v19 = *(_QWORD *)(v0 + 960);
  v20 = *(_QWORD *)(v0 + 936);
  v21 = *(_QWORD *)(v0 + 928);
  v22 = *(_QWORD *)(v0 + 904);
  v23 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015F36C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(void **)(v0 + 1496);
  v2 = *(void **)(v0 + 1480);
  v3 = *(void **)(v0 + 1472);
  v4 = *(void **)(v0 + 1376);
  v5 = *(_QWORD *)(v0 + 1368);
  v6 = *(_QWORD *)(v0 + 1360);
  v7 = *(void **)(v0 + 1328);
  v8 = *(_QWORD *)(v0 + 1128);
  v9 = swift_release(*(_QWORD *)(v0 + 1096));
  swift_willThrow(v9);
  swift_release(v8);

  swift_errorRelease(v6);
  swift_bridgeObjectRelease(v5);

  swift_errorRelease(*(_QWORD *)(v0 + 800));
  v10 = *(_QWORD *)(v0 + 1072);
  v11 = *(_QWORD *)(v0 + 1064);
  v12 = *(_QWORD *)(v0 + 1056);
  v13 = *(_QWORD *)(v0 + 1040);
  v14 = *(_QWORD *)(v0 + 1032);
  v15 = *(_QWORD *)(v0 + 1024);
  v16 = *(_QWORD *)(v0 + 1016);
  v17 = *(_QWORD *)(v0 + 1008);
  v18 = *(_QWORD *)(v0 + 1000);
  v20 = *(_QWORD *)(v0 + 992);
  v21 = *(_QWORD *)(v0 + 984);
  v22 = *(_QWORD *)(v0 + 976);
  v23 = *(_QWORD *)(v0 + 960);
  v24 = *(_QWORD *)(v0 + 936);
  v25 = *(_QWORD *)(v0 + 928);
  v26 = *(_QWORD *)(v0 + 904);
  v27 = *(_QWORD *)(v0 + 896);
  swift_task_dealloc(*(_QWORD *)(v0 + 1080));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015F508()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[29] = v0;
  v2 = type metadata accessor for Player.CommandOptions(0);
  v1[30] = v2;
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[31] = swift_task_alloc(v3);
  v1[32] = swift_task_alloc(v3);
  v4 = type metadata accessor for MainActor(0);
  v1[33] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[34] = v5;
  v1[35] = v6;
  return swift_task_switch(sub_10015F5A8, v5, v6);
}

uint64_t sub_10015F5A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t DynamicType;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  int *v30;
  _QWORD *v31;
  _QWORD *v32;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 200, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 288) = *v1;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 264));
    v22 = *(_QWORD *)(v0 + 248);
    swift_task_dealloc(*(_QWORD *)(v0 + 256));
    swift_task_dealloc(v22);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 104) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 112) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 84) = 1;
  *(_DWORD *)(v0 + 80) = 0;
  v3 = sub_10000ABC8((_QWORD *)(v0 + 80), (uint64_t)&type metadata for Player.VocalsCommand);
  DynamicType = swift_getDynamicType(v3, &type metadata for Player.VocalsCommand, 1);
  v5 = *(_QWORD *)(v0 + 112);
  swift_retain(v2);
  v6 = sub_100178360(DynamicType, v5);
  if (!v6)
  {
    sub_10000682C((_QWORD *)(v0 + 80));
    goto LABEL_11;
  }
  v7 = (void *)v6;
  v8 = MPCPlayerResponse.canPerform(_:)(v0 + 80);

  sub_10000682C((_QWORD *)(v0 + 80));
  if (!v8)
  {
LABEL_11:
    if (qword_10048C868 != -1)
      swift_once(&qword_10048C868, sub_10016A1D0);
    v24 = type metadata accessor for Logger(0, v9);
    v25 = sub_1000086B4(v24, (uint64_t)static Logger.playbackController);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Auto-Sing] Preparing VA…", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }
    v29 = *(_QWORD *)(v0 + 256);
    v30 = *(int **)(v0 + 240);

    *(_QWORD *)(v0 + 144) = &type metadata for Player.VocalsCommand.Prepare;
    *(_QWORD *)(v0 + 152) = &protocol witness table for Player.VocalsCommand.Prepare;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v31 = (_QWORD *)(v29 + v30[5]);
    *v31 = 0;
    v31[1] = 0;
    *(_QWORD *)(v29 + v30[6]) = 0;
    *(_BYTE *)(v29 + v30[7]) = 0;
    *(_QWORD *)(v29 + v30[8]) = 0;
    v32 = (_QWORD *)swift_task_alloc(dword_100493954);
    *(_QWORD *)(v0 + 296) = v32;
    *v32 = v0;
    v32[1] = sub_10015F918;
    v19 = *(_QWORD *)(v0 + 256);
    v20 = 5.0;
    v21 = v0 + 120;
    return sub_100174324(v21, v19, v20);
  }
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v10 = type metadata accessor for Logger(0, v9);
  v11 = sub_1000086B4(v10, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v0 + 312) = v11;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Auto-Sing] Awaiting for Vocals Command…", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }
  v16 = *(int **)(v0 + 240);
  v15 = *(_QWORD *)(v0 + 248);

  *(_QWORD *)(v0 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v0 + 164) = 1;
  *(_DWORD *)(v0 + 160) = 0;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v17 = (_QWORD *)(v15 + v16[5]);
  *v17 = 0;
  v17[1] = 0;
  *(_QWORD *)(v15 + v16[6]) = 0;
  *(_BYTE *)(v15 + v16[7]) = 0;
  *(_QWORD *)(v15 + v16[8]) = 0;
  v18 = (_QWORD *)swift_task_alloc(dword_100493954);
  *(_QWORD *)(v0 + 320) = v18;
  *v18 = v0;
  v18[1] = sub_10015FB24;
  v19 = *(_QWORD *)(v0 + 248);
  v20 = 5.0;
  v21 = v0 + 160;
  return sub_100174324(v21, v19, v20);
}

uint64_t sub_10015F918(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 296);
  *(_QWORD *)(*(_QWORD *)v2 + 304) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_100006798(v4[32], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_10015FCE0;
  }
  else
  {
    v9 = v4[32];

    sub_100006798(v9, type metadata accessor for Player.CommandOptions);
    sub_10000682C(v4 + 15);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_10015F9BC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10015F9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  _QWORD *v11;

  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.playbackController);
  *(_QWORD *)(v2 + 312) = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[Auto-Sing] Awaiting for Vocals Command…", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v9 = *(int **)(v2 + 240);
  v8 = *(_QWORD *)(v2 + 248);

  *(_QWORD *)(v2 + 184) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v2 + 192) = &protocol witness table for Player.VocalsCommand;
  *(_WORD *)(v2 + 164) = 1;
  *(_DWORD *)(v2 + 160) = 0;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v10 = (_QWORD *)(v8 + v9[5]);
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)(v8 + v9[6]) = 0;
  *(_BYTE *)(v8 + v9[7]) = 0;
  *(_QWORD *)(v8 + v9[8]) = 0;
  v11 = (_QWORD *)swift_task_alloc(dword_100493954);
  *(_QWORD *)(v2 + 320) = v11;
  *v11 = v2;
  v11[1] = sub_10015FB24;
  return sub_100174324(v2 + 160, *(_QWORD *)(v2 + 248), 5.0);
}

uint64_t sub_10015FB24(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 320);
  *(_QWORD *)(*(_QWORD *)v2 + 328) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    sub_100006798(v4[31], type metadata accessor for Player.CommandOptions);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_10015FF18;
  }
  else
  {
    v9 = v4[31];

    sub_100006798(v9, type metadata accessor for Player.CommandOptions);
    sub_10000682C(v4 + 20);
    v6 = v4[34];
    v7 = v4[35];
    v8 = sub_10015FBC8;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10015FBC8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 264));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[Auto-Sing] Vocals command performed", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = *(_QWORD *)(v0 + 288);
  v6 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v7 = v6[3];
  v8 = v6[4];
  sub_10000ABC8(v6, v7);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v0 + 16, v7, v8);
  swift_release(v5);
  sub_10016B358((_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015FCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  swift_release(*(_QWORD *)(v0 + 264));
  sub_10000682C((_QWORD *)(v0 + 120));
  v2 = *(_QWORD *)(v0 + 304);
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v19 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 224) = v2;
    swift_errorRetain(v2);
    v9 = sub_100005574((uint64_t *)&unk_1004911F0);
    v10 = (char *)String.init<A>(describing:)(v0 + 224, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 4) = sub_100019400(v10, v11, &v19);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  v13 = *(_QWORD *)(v0 + 288);
  v14 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v15 = v14[3];
  v16 = v14[4];
  sub_10000ABC8(v14, v15);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v0 + 16, v15, v16);
  swift_release(v13);
  sub_10016B358((_QWORD *)(v0 + 16));
  v17 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015FF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  swift_release(*(_QWORD *)(v0 + 264));
  sub_10000682C((_QWORD *)(v0 + 160));
  v2 = *(_QWORD *)(v0 + 328);
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)static Logger.playbackController);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v19 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 224) = v2;
    swift_errorRetain(v2);
    v9 = sub_100005574((uint64_t *)&unk_1004911F0);
    v10 = (char *)String.init<A>(describing:)(v0 + 224, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 4) = sub_100019400(v10, v11, &v19);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[Auto-Sing] Failed with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  v13 = *(_QWORD *)(v0 + 288);
  v14 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v15 = v14[3];
  v16 = v14[4];
  sub_10000ABC8(v14, v15);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(v0 + 16, v15, v16);
  swift_release(v13);
  sub_10016B358((_QWORD *)(v0 + 16));
  v17 = *(_QWORD *)(v0 + 248);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Logger.siriIntents.unsafeMutableAddressor()
{
  return sub_1000F04E4(&qword_10048C878, (uint64_t)static Logger.siriIntents, (uint64_t)sub_10016A2EC);
}

BOOL PlaybackController.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  _BYTE v10[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v10, 0, 0);
  v4 = *v3;
  if (v4)
  {
    v5 = a1[3];
    v6 = a1[4];
    v7 = sub_10000ABC8(a1, v5);
    swift_retain(v4);
    v8 = sub_100181FF4((uint64_t)v7, v4, v5, v6);
    swift_release(v4);
  }
  else
  {
    return 0;
  }
  return v8;
}

uint64_t PlaybackController.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v14[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v14, 0, 0);
  v6 = *v5;
  if (!v6)
    goto LABEL_13;
  swift_retain(v6);
  v7 = sub_100178360(a1, a2);
  if (!v7)
  {
    swift_release(v6);
LABEL_13:
    v12 = 0;
    return v12 & 1;
  }
  v8 = (void *)v7;
  v9 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = a1;
  else
    v11 = 0;
  if (!v11)
  {
    swift_release(v6);

    goto LABEL_13;
  }
  v12 = (*(uint64_t (**)(void *))(v10 + 16))(v8);
  swift_release(v6);

  return v12 & 1;
}

uint64_t PlaybackController.performWhenAvailable(_:options:timeout:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 64) = v3;
  *(double *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 72) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 80) = v6;
  *(_QWORD *)(v4 + 88) = v7;
  return swift_task_switch(sub_100160358, v6, v7);
}

uint64_t sub_100160358()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __n128 v6;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    v3 = dword_100493954;
    swift_retain(v2);
    v4 = (_QWORD *)swift_task_alloc(v3);
    *(_QWORD *)(v0 + 104) = v4;
    *v4 = v0;
    v4[1] = sub_100160404;
    return sub_100174324(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(double *)(v0 + 56));
  }
  else
  {
    v6 = swift_release(*(_QWORD *)(v0 + 72));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v6);
  }
}

uint64_t sub_100160404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)(*(_QWORD *)v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_1001604B8;
  }
  else
  {
    swift_release(v4[12]);
    v4[15] = a1;
    v6 = v4[10];
    v7 = v4[11];
    v8 = sub_100160480;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100160480()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(_QWORD *)(v0 + 120), v1);
}

uint64_t sub_1001604B8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 72));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100160590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC9MusicCore18PlaybackController_player;
  v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess(v1 + v2, v0 + 80, 0, 0);
  v4 = *v3;
  *(_QWORD *)(v0 + 216) = v4;
  if (v4)
  {
    v6 = *(int **)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 136);
    v7 = *(void **)(v0 + 144);
    swift_retain(v4);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v9 = (_QWORD *)(v5 + v6[5]);
    *v9 = 0;
    v9[1] = 0;
    v10 = v6[6];
    *(_QWORD *)(v5 + v10) = 0;
    v11 = v6[7];
    *(_BYTE *)(v5 + v11) = 0;
    v12 = v6[8];
    *(_QWORD *)(v5 + v10) = v8;
    *(_BYTE *)(v5 + v11) = 1;
    *(_QWORD *)(v5 + v12) = v7;
    v13 = dword_100493964;
    v14 = v7;
    v15 = (_QWORD *)swift_task_alloc(v13);
    *(_QWORD *)(v0 + 224) = v15;
    *v15 = v0;
    v15[1] = sub_1001606A8;
    return sub_100175C4C(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 176));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1001606A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 224);
  *(_QWORD *)(*(_QWORD *)v2 + 232) = v1;
  swift_task_dealloc(v5);
  v6 = v4[27];
  v7 = v4[22];
  if (v1)
  {
    sub_100006798(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_100160B28;
  }
  else
  {
    v4[30] = a1;
    sub_100006798(v7, type metadata accessor for Player.CommandOptions);
    swift_release(v6);
    v8 = v4[24];
    v9 = v4[25];
    v10 = sub_10016074C;
  }
  return swift_task_switch(v10, v8, v9);
}

uint64_t sub_10016074C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t *v39;
  void *v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 184));
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(void **)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v1);
    goto LABEL_18;
  }
  if (v1 >= 0)
    v34 = v1 & 0xFFFFFFFFFFFFFF8;
  else
    v34 = v1;
  swift_bridgeObjectRetain();
  v2 = (void *)_CocoaArrayWrapper.endIndex.getter(v34);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    v3 = *(id *)(v1 + 32);
  }
  v2 = v3;
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "dialog");
  if (!v4)
  {

LABEL_18:
    sub_10016B32C(0, 0);
    goto LABEL_19;
  }
  v39 = (uint64_t *)(v0 + 16);
  v40 = v4;
  if (qword_10048C868 != -1)
LABEL_22:
    swift_once(&qword_10048C868, sub_10016A1D0);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v7, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v6, 2);
  v8 = v2;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  v11 = os_log_type_enabled(v9, v10);
  v12 = *(_QWORD *)(v0 + 128);
  v38 = v8;
  if (v11)
  {
    v13 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v41 = v36;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    v14 = sub_100005574(&qword_100493120);
    v15 = (char *)Array.description.getter(v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease(v12);
    *(_QWORD *)(v13 + 4) = sub_100019400(v15, v17, &v41);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease_n(v12, 2);
    *(_WORD *)(v13 + 12) = 2082;
    v18 = v8;
    v19 = objc_msgSend(v18, "description");
    v20 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    *(_QWORD *)(v13 + 14) = sub_100019400(v20, v22, &v41);
    swift_bridgeObjectRelease(v22);

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "⤵️ 🛑 Commands %{public}s — Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v12, 2);

  }
  v23 = *(_QWORD *)(v0 + 208);
  v24 = *(void **)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 160);
  v26 = (_QWORD *)(v25 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v28 = *(_QWORD *)(v25 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8((_QWORD *)(v25 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v27);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 40);
  v37 = v24;
  v30 = v29(v27, v28);
  v31 = *(_QWORD *)(v25 + v23);
  v33 = v26[3];
  v32 = v26[4];
  sub_10000ABC8(v26, v33);
  swift_retain(v31);
  MPCPlayerCommandDialog.alert(context:completion:)(v24, v30, v31, 0, 0, v39);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 8))(v39, v33, v32);
  sub_10016B358(v39);

  swift_release(v30);
  swift_release(v31);

LABEL_19:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100160B28()
{
  uint64_t v0;
  uint64_t v1;
  char **v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  __n128 v52;
  uint64_t v54;
  id v55;
  uint64_t *v56;
  void *v57;
  uint64_t v58;
  id v59;
  uint64_t v60[2];

  v3 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 184));
  *(_QWORD *)(v0 + 120) = v3;
  v4 = (_QWORD *)(v0 + 120);
  swift_errorRetain(v3);
  v5 = sub_100005574((uint64_t *)&unk_1004911F0);
  if ((swift_dynamicCast(v0 + 104, v0 + 120, v5, &type metadata for Player.PlaybackError, 0) & 1) == 0)
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
LABEL_29:
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_errorRelease(*(_QWORD *)(v0 + 232));
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = (void *)((unint64_t)v6 >> 62);
  if (!((unint64_t)v6 >> 62))
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_4;
LABEL_27:
    swift_bridgeObjectRelease(v6);
    goto LABEL_28;
  }
  if (v6 < 0)
    v49 = *(_QWORD *)(v0 + 112);
  else
    v49 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v49))
    goto LABEL_27;
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_32;
    }
    v10 = *(id *)(v6 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease(v6);
  v2 = &selRef_count;
  v12 = objc_msgSend(v11, "dialog");

  if (!v12)
  {
LABEL_28:
    v50 = sub_10016AD54();
    swift_allocError(&type metadata for Player.PlaybackError, v50, 0, 0);
    *v51 = v7;
    v51[1] = v6;
    swift_willThrow(v52);
    swift_errorRelease(*v4);
    goto LABEL_29;
  }

  v13 = *v4;
  swift_bridgeObjectRetain();
  swift_errorRelease(v13);
  v1 = v6 & 0xFFFFFFFFFFFFFF8;
  if (!v8)
  {
    v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_10;
LABEL_36:
    swift_bridgeObjectRelease(v6);
    goto LABEL_37;
  }
LABEL_32:
  if (v6 >= 0)
    v54 = v1;
  else
    v54 = v6;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v54))
    goto LABEL_36;
LABEL_10:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)(v1 + 16))
    {
      __break(1u);
      goto LABEL_41;
    }
    v15 = *(id *)(v6 + 32);
  }
  v8 = v15;
  swift_bridgeObjectRelease(v6);
  v59 = objc_msgSend(v8, v2[336]);
  if (!v59)
  {

LABEL_37:
    sub_10016B32C(v7, v6);
    goto LABEL_38;
  }
  v56 = (uint64_t *)(v0 + 16);
  if (qword_10048C868 != -1)
LABEL_41:
    swift_once(&qword_10048C868, sub_10016A1D0);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = type metadata accessor for Logger(0, v16);
  sub_1000086B4(v18, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v17, 2);
  v19 = v8;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 128);
  v57 = v19;
  v58 = v7;
  if (v22)
  {
    v24 = swift_slowAlloc(22, -1);
    v25 = swift_slowAlloc(64, -1);
    v60[0] = v25;
    *(_DWORD *)v24 = 136446466;
    swift_bridgeObjectRetain();
    v26 = sub_100005574(&qword_100493120);
    v27 = (char *)Array.description.getter(v23, v26);
    v29 = v28;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v24 + 4) = sub_100019400(v27, v29, v60);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease_n(v23, 2);
    *(_WORD *)(v24 + 12) = 2082;
    v30 = v19;
    v31 = objc_msgSend(v30, "description");
    v32 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    *(_QWORD *)(v24 + 14) = sub_100019400(v32, v34, v60);
    swift_bridgeObjectRelease(v34);

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "⤵️ 🛑 Commands %{public}s — Perform error -> Presenting dialog for status=%{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v23, 2);

  }
  v35 = *(_QWORD *)(v0 + 208);
  v36 = *(void **)(v0 + 152);
  v37 = *(_QWORD *)(v0 + 160);
  v38 = (_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v39 = *(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v40 = *(_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8((_QWORD *)(v37 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v39);
  v41 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 40);
  v55 = v36;
  v42 = v41(v39, v40);
  v43 = *(_QWORD *)(v37 + v35);
  v44 = v38[3];
  v45 = v38[4];
  sub_10000ABC8(v38, v44);
  swift_retain(v43);
  MPCPlayerCommandDialog.alert(context:completion:)(v36, v42, v43, 0, 0, v56);
  *(_BYTE *)(v0 + 72) = 0;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v45 + 8))(v56, v44, v45);
  sub_10016B358(v56);
  if (v58)
  {
    v46 = sub_10016AD54();
    swift_allocError(&type metadata for Player.PlaybackError, v46, 0, 0);
    *v47 = v58;
    v47[1] = v6;
    swift_errorRetain(v58);
    swift_bridgeObjectRetain();
    swift_willThrow(v48);

    swift_errorRelease(v58);
    swift_release(v42);
    swift_release(v43);

    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_29;
  }

  swift_release(v42);
  swift_release(v43);

LABEL_38:
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_100161104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v5 = type metadata accessor for Locale(0);
  v4[42] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[43] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[44] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[45] = swift_task_alloc(v8);
  v4[46] = swift_task_alloc(v8);
  v9 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4[47] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[48] = v10;
  v4[49] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v4[50] = v11;
  v4[51] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v4[52] = v12;
  v4[53] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v4[54] = v13;
  v4[55] = v14;
  return swift_task_switch(sub_10016121C, v13, v14);
}

uint64_t sub_10016121C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t DynamicType;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v48;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = type metadata accessor for PlaybackIntentDescriptor(0);
  sub_10016D3E8(v1 + *(int *)(v2 + 28), v0 + 160);
  sub_10016D3E8(v0 + 160, v0 + 240);
  v3 = *(_QWORD *)(v0 + 264);
  if (!v3)
  {
    sub_100008758(v0 + 240, &qword_100493470);
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_QWORD *)(v0 + 152) = 0;
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(v0 + 272);
  sub_10000ABC8((_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264));
  sub_10016388C(v3, v4, v0 + 120);
  sub_10000682C((_QWORD *)(v0 + 240));
  if (!*(_QWORD *)(v0 + 144))
  {
LABEL_12:
    sub_100008758(v0 + 120, &qword_100493470);
    goto LABEL_13;
  }
  sub_1000137C8((__int128 *)(v0 + 120), v0 + 80);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = sub_10000ABC8((_QWORD *)(v0 + 80), v5);
  DynamicType = swift_getDynamicType(v6, v5, 1);
  if (qword_10048C970 != -1)
    swift_once(&qword_10048C970, sub_1001D623C);
  v8 = *((_QWORD *)off_1004964D8 + 2);
  if (!v8)
  {
LABEL_9:
    v10 = *(_QWORD *)(v0 + 400);
    v11 = *(_QWORD *)(v0 + 408);
    sub_100082248(*(_QWORD *)(v0 + 304), v11, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v10);
    v13 = *(uint64_t **)(v0 + 408);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = *(_QWORD *)(v0 + 384);
      v14 = *(_QWORD *)(v0 + 392);
      v16 = *(_QWORD *)(v0 + 376);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v15 + 32))(v14, v13, v16);
      v18 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    else
    {
      v18 = *v13;
    }
    *(_QWORD *)(v0 + 448) = v18;
    v48 = (_QWORD *)swift_task_alloc(dword_1004930F4);
    *(_QWORD *)(v0 + 456) = v48;
    *v48 = v0;
    v48[1] = sub_100161654;
    return sub_10015949C(v18, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 320));
  }
  v9 = (_QWORD *)((char *)off_1004964D8 + 32);
  while (*v9 != DynamicType)
  {
    v9 += 2;
    if (!--v8)
      goto LABEL_9;
  }
  sub_10000682C((_QWORD *)(v0 + 80));
LABEL_13:
  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v20 = type metadata accessor for Logger(0, v19);
  v21 = sub_1000086B4(v20, (uint64_t)static Logger.sharedListening);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Offering SharePlay options (Play Now/Next/Last)", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  sub_10016D3E8(v0 + 160, v0 + 200);
  v25 = *(_QWORD *)(v0 + 224);
  if (v25)
  {
    v26 = *(_QWORD *)(v0 + 232);
    sub_10000ABC8((_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 224));
    v27 = sub_100163BAC(v25, v26);
    v29 = v28;
    v30 = sub_10000682C((_QWORD *)(v0 + 200));
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 360);
    v32 = *(_QWORD *)(v0 + 368);
    v33 = *(_QWORD *)(v0 + 344);
    v34 = *(_QWORD *)(v0 + 352);
    sub_100008758(v0 + 200, &qword_100493470);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x80000001003B34A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v31, v32, v33);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v35 = *(_QWORD *)(v0 + 360);
    v36 = *(_QWORD *)(v0 + 368);
    v37 = *(_QWORD *)(v0 + 344);
    v38 = *(_QWORD *)(v0 + 352);
    v39 = *(_QWORD *)(v0 + 336);
    v40 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v27 = String.init(localized:table:bundle:locale:comment:)(v35, 0, 0, v40, v39, 0, 0, 256);
    v29 = v41;
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  }
  *(_QWORD *)(v0 + 472) = v29;
  *(_QWORD *)(v0 + 480) = v27;
  v42 = static MainActor.shared.getter(v30);
  *(_QWORD *)(v0 + 488) = v42;
  if (v42)
  {
    ObjectType = swift_getObjectType();
    v44 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v46 = v45;
  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  return swift_task_switch(sub_10016175C, v44, v46);
}

uint64_t sub_100161654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v5)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 448);
  v3 = *(_QWORD *)(*v1 + 456);
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v5 = sub_1001618EC;
  else
    v5 = sub_1001616C0;
  return swift_task_switch(v5, *(_QWORD *)(v2 + 432), *(_QWORD *)(v2 + 440));
}

uint64_t sub_1001616C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release(*(_QWORD *)(v0 + 424));
  sub_10000682C((_QWORD *)(v0 + 80));
  sub_100008758(v0 + 160, &qword_100493470);
  v1 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v0 + 8))(0, 0, 1);
}

uint64_t sub_10016175C()
{
  _QWORD *v0;
  uint64_t v1;
  ValueMetadata *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (ValueMetadata *)v0[59];
  v1 = v0[60];
  v3 = v0[41];
  v4 = v0[38];
  v0[7] = v0 + 35;
  v0[2] = v0;
  v0[3] = sub_1001617D8;
  v5 = swift_continuation_init(v0 + 2, 0);
  sub_1001644B4(v5, v4, v3, v1, v2);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1001617D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *v0 + 280;
  v3 = *(_QWORD *)(*v0 + 488);
  v4 = *(_QWORD *)(*v0 + 472);
  *(_OWORD *)(v1 + 496) = *(_OWORD *)v2;
  *(_BYTE *)(v1 + 297) = *(_BYTE *)(v2 + 16);
  swift_release(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_100161844, *(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440));
}

uint64_t sub_100161844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 424));
  sub_100008758(v0 + 160, &qword_100493470);
  v1 = *(unsigned __int8 *)(v0 + 297);
  v3 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 504);
  v4 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 360);
  v5 = *(_QWORD *)(v0 + 368);
  v7 = *(_QWORD *)(v0 + 336);
  swift_task_dealloc(*(_QWORD *)(v0 + 408));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v3, v2, v1);
}

uint64_t sub_1001618EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 368);
  v5 = *(_QWORD *)(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 424));
  sub_10000682C((_QWORD *)(v0 + 80));
  sub_100008758(v0 + 160, &qword_100493470);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_100161990(id a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *result;
  id v10;
  _QWORD *v11;
  uint64_t DynamicType;
  _UNKNOWN **v13;
  id v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  id v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _UNKNOWN **v25;
  id v26;
  uint64_t v27;
  void *v28;
  BOOL v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t inited;
  _QWORD *v35;
  uint64_t v36;
  _UNKNOWN **v37;
  uint64_t v38;
  void *v39;
  BOOL v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  BOOL v45;
  id v46;
  _QWORD *v47;
  uint64_t v48;
  _UNKNOWN **v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  unint64_t v53;
  id v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  BOOL v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  __int128 v72;
  ValueMetadata *v73;
  _UNKNOWN **v74;
  _QWORD v75[5];
  uint64_t v76;
  __int128 v77;
  ValueMetadata *v78;
  _UNKNOWN **v79;
  _QWORD *v80;
  char v81[32];

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v7, v81, 0, 0);
  v8 = *v7;
  result = _swiftEmptyArrayStorage;
  if (*v7)
  {
    v80 = _swiftEmptyArrayStorage;
    if ((a2 & 2) != 0)
    {
      v78 = &type metadata for Player.ReplaceCommand;
      v79 = &protocol witness table for Player.ReplaceCommand;
      *(_QWORD *)&v77 = a1;
      *((_QWORD *)&v77 + 1) = a3;
      v11 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.ReplaceCommand);
      DynamicType = swift_getDynamicType(v11, &type metadata for Player.ReplaceCommand, 1);
      v13 = v79;
      v14 = a1;
      swift_retain(v8);
      v15 = sub_100178360(DynamicType, (uint64_t)v13);
      if (v15)
      {
        v16 = (void *)v15;
        v17 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

        sub_10000682C(&v77);
        if (v17)
        {
          v18 = v14;
          v19 = _swiftEmptyArrayStorage;
          if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
            v19 = sub_10003E2D4(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
          v21 = v19[2];
          v20 = v19[3];
          v22 = v21 + 1;
          if (v21 >= v20 >> 1)
            v19 = sub_10003E2D4((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
          v78 = &type metadata for Player.ReplaceCommand;
          v79 = &protocol witness table for Player.ReplaceCommand;
          *(_QWORD *)&v77 = v18;
          *((_QWORD *)&v77 + 1) = a3;
          goto LABEL_36;
        }
      }
      else
      {
        sub_10000682C(&v77);

      }
    }
    else
    {
      v10 = a1;
      swift_retain(v8);
    }
    if ((a2 & 1) == 0)
    {
      if ((a2 & 4) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        v77 = (unint64_t)a1;
        v23 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v24 = swift_getDynamicType(v23, &type metadata for Player.InsertCommand, 1);
        v25 = v79;
        v26 = a1;
        v27 = sub_100178360(v24, (uint64_t)v25);
        if (v27)
        {
          v28 = (void *)v27;
          v29 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          sub_10000682C(&v77);
          if (v29)
          {
            v18 = v26;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_10003E2D4(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v31 = v19[2];
            v30 = v19[3];
            if (v31 >= v30 >> 1)
              v19 = sub_10003E2D4((_QWORD *)(v30 > 1), v31 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            v77 = (unint64_t)v18;
            v19[2] = v31 + 1;
            v32 = &v19[5 * v31];
            goto LABEL_37;
          }
        }
        else
        {
          sub_10000682C(&v77);

        }
      }
      if ((a2 & 8) != 0)
      {
        v78 = &type metadata for Player.InsertCommand;
        v79 = &protocol witness table for Player.InsertCommand;
        *(_QWORD *)&v77 = a1;
        *((_QWORD *)&v77 + 1) = 1;
        v47 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.InsertCommand);
        v48 = swift_getDynamicType(v47, &type metadata for Player.InsertCommand, 1);
        v49 = v79;
        a1 = a1;
        v50 = sub_100178360(v48, (uint64_t)v49);
        if (v50)
        {
          v51 = (void *)v50;
          v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          sub_10000682C(&v77);
          if (v52)
          {
            v18 = a1;
            v19 = _swiftEmptyArrayStorage;
            if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
              v19 = sub_10003E2D4(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
            v21 = v19[2];
            v53 = v19[3];
            v22 = v21 + 1;
            if (v21 >= v53 >> 1)
              v19 = sub_10003E2D4((_QWORD *)(v53 > 1), v21 + 1, 1, v19);
            v78 = &type metadata for Player.InsertCommand;
            v79 = &protocol witness table for Player.InsertCommand;
            *(_QWORD *)&v77 = v18;
            *((_QWORD *)&v77 + 1) = 1;
LABEL_36:
            v19[2] = v22;
            v32 = &v19[5 * v21];
LABEL_37:
            sub_1000137C8(&v77, (uint64_t)(v32 + 4));
            swift_release(v8);

            return v19;
          }
        }
        else
        {
          sub_10000682C(&v77);

        }
      }
LABEL_53:
      swift_release(v8);

      return v80;
    }
    v33 = sub_100005574((uint64_t *)&unk_1004940F0);
    inited = swift_initStackObject(v33, &v76);
    *(_OWORD *)(inited + 16) = xmmword_100384A60;
    *(_QWORD *)(inited + 56) = &type metadata for Player.InsertCommand;
    *(_QWORD *)(inited + 64) = &protocol witness table for Player.InsertCommand;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = 0;
    *(_QWORD *)(inited + 96) = &type metadata for Player.ChangeCommand;
    *(_QWORD *)(inited + 104) = &protocol witness table for Player.ChangeCommand;
    *(_BYTE *)(inited + 72) = 1;
    v78 = &type metadata for Player.InsertCommand;
    v79 = &protocol witness table for Player.InsertCommand;
    v77 = (unint64_t)a1;
    v35 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.InsertCommand);
    v36 = swift_getDynamicType(v35, &type metadata for Player.InsertCommand, 1);
    v37 = v79;
    a1 = a1;
    v38 = sub_100178360(v36, (uint64_t)v37);
    if (v38)
    {
      v39 = (void *)v38;
      v40 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      sub_10000682C(&v77);
      if (v40)
      {
        v78 = &type metadata for Player.ChangeCommand;
        v79 = &protocol witness table for Player.ChangeCommand;
        LOBYTE(v77) = 1;
        v41 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.ChangeCommand);
        v42 = swift_getDynamicType(v41, &type metadata for Player.ChangeCommand, 1);
        v43 = sub_100178360(v42, (uint64_t)v79);
        if (v43)
        {
          v44 = (void *)v43;
          v45 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

          sub_10000682C(&v77);
          if (v45)
          {
            sub_10008A554((_QWORD *)inited);
            v78 = &type metadata for Player.ReplaceCommand;
            v79 = &protocol witness table for Player.ReplaceCommand;
            *(_QWORD *)&v77 = a1;
            *((_QWORD *)&v77 + 1) = a3;
            v46 = a1;
            goto LABEL_45;
          }
        }
        else
        {
          sub_10000682C(&v77);
        }
      }
    }
    else
    {
      sub_10000682C(&v77);

    }
    swift_bridgeObjectRelease(inited);
    v78 = &type metadata for Player.ReplaceCommand;
    v79 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v77 = a1;
    *((_QWORD *)&v77 + 1) = a3;
    sub_1000244B0((uint64_t)&v77, (uint64_t)v75);
    v54 = a1;
    v55 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
    {
      v55 = sub_10003E2D4(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      v80 = v55;
    }
    v57 = v55[2];
    v56 = v55[3];
    if (v57 >= v56 >> 1)
    {
      v55 = sub_10003E2D4((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
      v80 = v55;
    }
    v58 = sub_10016D740((uint64_t)v75, v75[3]);
    __chkstk_darwin(v58);
    v60 = (uint64_t *)((char *)&v72 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v61 + 16))(v60);
    v62 = *v60;
    v63 = v60[1];
    v73 = &type metadata for Player.ReplaceCommand;
    v74 = &protocol witness table for Player.ReplaceCommand;
    *(_QWORD *)&v72 = v62;
    *((_QWORD *)&v72 + 1) = v63;
    v55[2] = v57 + 1;
    sub_1000137C8(&v72, (uint64_t)&v55[5 * v57 + 4]);
    sub_10000682C(v75);
LABEL_45:
    sub_10000682C(&v77);
    v78 = &type metadata for Player.PlaybackCommand;
    v79 = &protocol witness table for Player.PlaybackCommand;
    LOBYTE(v77) = 0;
    v64 = sub_10000ABC8(&v77, (uint64_t)&type metadata for Player.PlaybackCommand);
    v65 = swift_getDynamicType(v64, &type metadata for Player.PlaybackCommand, 1);
    v66 = sub_100178360(v65, (uint64_t)v79);
    if (v66)
    {
      v67 = (void *)v66;
      v68 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v77);

      sub_10000682C(&v77);
      if (v68)
      {
        v69 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
          v69 = sub_10003E2D4(0, v69[2] + 1, 1, v69);
        v71 = v69[2];
        v70 = v69[3];
        if (v71 >= v70 >> 1)
          v69 = sub_10003E2D4((_QWORD *)(v70 > 1), v71 + 1, 1, v69);
        v78 = &type metadata for Player.PlaybackCommand;
        v79 = &protocol witness table for Player.PlaybackCommand;
        LOBYTE(v77) = 0;
        v69[2] = v71 + 1;
        sub_1000137C8(&v77, (uint64_t)&v69[5 * v71 + 4]);
        swift_release(v8);

        return v69;
      }
    }
    else
    {
      sub_10000682C(&v77);
    }
    goto LABEL_53;
  }
  return result;
}

_QWORD *sub_100162144(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[4];
  char v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v60 = (char *)a2;
  v56 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v49 - v14;
  String.LocalizationValue.init(stringLiteral:)(1885693259, 0xE400000000000000);
  v62 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v62(v13, v15, v9);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v16 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v57 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v16, v8, 0, 0, 256);
  v65 = v17;
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  v59 = swift_allocObject(&unk_10044FED0, 24, 7);
  v19 = v56;
  *(_QWORD *)(v59 + 16) = v56;
  v20 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v55 = UUID.uuidString.getter(v20);
  v61 = v21;
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v5, v2);
  String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
  v62(v13, v15, v9);
  v23 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v54 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v23, v8, 0, 0, 256);
  v64 = v24;
  v18(v15, v9);
  v58 = swift_allocObject(&unk_10044FEF8, 24, 7);
  *(_QWORD *)(v58 + 16) = v19;
  v25 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v53 = UUID.uuidString.getter(v25);
  v63 = v26;
  v22(v5, v2);
  v27 = v2;
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v28 = qword_1004A2C90;
  v52 = static String.cancelButtonTitle;
  v51 = swift_allocObject(&unk_10044FF20, 24, 7);
  *(_QWORD *)(v51 + 16) = v19;
  swift_bridgeObjectRetain();
  v29 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v56 = UUID.uuidString.getter(v29);
  v31 = v30;
  v22(v5, v27);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003B3620);
  v62(v13, v15, v9);
  v32 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v62 = (void (*)(char *, char *, uint64_t))String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v32, v8, 0, 0, 256);
  v49 = v33;
  v18(v15, v9);
  v34 = sub_100005574(&qword_100493240);
  v35 = swift_allocObject(v34, 200, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100384A40;
  v36 = v61;
  *(_QWORD *)(v35 + 32) = v55;
  *(_QWORD *)(v35 + 40) = v36;
  v37 = v65;
  *(_QWORD *)(v35 + 48) = v57;
  *(_QWORD *)(v35 + 56) = v37;
  *(_BYTE *)(v35 + 64) = 2;
  v39 = v58;
  v38 = v59;
  *(_QWORD *)(v35 + 72) = &unk_1004934D8;
  *(_QWORD *)(v35 + 80) = v38;
  v40 = v63;
  *(_QWORD *)(v35 + 88) = v53;
  *(_QWORD *)(v35 + 96) = v40;
  v41 = v64;
  *(_QWORD *)(v35 + 104) = v54;
  *(_QWORD *)(v35 + 112) = v41;
  *(_BYTE *)(v35 + 120) = 2;
  *(_QWORD *)(v35 + 128) = &unk_1004934E8;
  *(_QWORD *)(v35 + 136) = v39;
  *(_QWORD *)(v35 + 144) = v56;
  *(_QWORD *)(v35 + 152) = v31;
  *(_QWORD *)(v35 + 160) = v52;
  *(_QWORD *)(v35 + 168) = v28;
  v50 = v28;
  *(_BYTE *)(v35 + 176) = 2;
  v42 = v51;
  *(_QWORD *)(v35 + 184) = &unk_1004934F8;
  *(_QWORD *)(v35 + 192) = v42;
  v43 = &v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator];
  v44 = *(_QWORD *)&v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32];
  v60 = *(char **)&v60[OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24];
  v57 = sub_10000ABC8(v43, (uint64_t)v60);
  v66[0] = 0;
  v66[1] = 0;
  v45 = v49;
  v66[2] = v62;
  v66[3] = v49;
  v67 = 0;
  v68 = v35;
  v69 = 0;
  v70 = 0;
  v62 = *(void (**)(char *, char *, uint64_t))(v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v65;
  swift_bridgeObjectRetain();
  swift_retain(v38);
  swift_bridgeObjectRetain();
  v47 = v64;
  swift_bridgeObjectRetain();
  swift_retain(v39);
  swift_bridgeObjectRetain();
  swift_retain(v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62((char *)v66, v60, v44);
  swift_release(v38);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v61);
  swift_release(v39);
  swift_bridgeObjectRelease(v47);
  swift_bridgeObjectRelease(v63);
  swift_release(v42);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(0);
  return sub_10016B358(v66);
}

uint64_t sub_1001626D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_1001626F0, 0, 0);
}

uint64_t sub_1001626F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 2;
  *(_BYTE *)(v0 + 24) = 0;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_100493500);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100162748(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_100162760, 0, 0);
}

uint64_t sub_100162760()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 1;
  *(_BYTE *)(v0 + 24) = 0;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_100493500);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001627B8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch(sub_1001627D0, 0, 0);
}

uint64_t sub_1001627D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_100493500);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100162828(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  if (!a1)
    goto LABEL_6;
  if (objc_msgSend(a1, "isHomePodRoute"))
  {
    v12 = 0x80000001003B37A0;
    v13 = 0xD000000000000056;
    goto LABEL_8;
  }
  if (objc_msgSend(a1, "isAppleTVRoute"))
  {
    v13 = 0xD000000000000057;
    v14 = "If you AirPlay this, Apple TV will stop playing when your (device) is no longer nearby.";
  }
  else
  {
LABEL_6:
    v13 = 0xD00000000000005ALL;
    v14 = "If you AirPlay this, this device will stop playing when your (device) is no longer nearby.";
  }
  v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
LABEL_8:
  String.LocalizationValue.init(stringLiteral:)(v13, v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v15 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v16 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

_QWORD *sub_100162A00(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, _QWORD *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD v59[4];
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v55 = a2;
  v57 = (_QWORD *)type metadata accessor for UUID(0);
  v3 = *(v57 - 1);
  __chkstk_darwin(v57);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v44 - v14;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003B3800);
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v16(v13, v15, v9);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v17 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v52 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v17, v8, 0, 0, 256);
  v54 = v18;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v15, v9);
  v53 = swift_allocObject(&unk_10044FF98, 24, 7);
  *(_QWORD *)(v53 + 16) = a1;
  v20 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v51 = UUID.uuidString.getter(v20);
  v58 = v21;
  v22 = a1;
  v23 = *(void (**)(char *, _QWORD *))(v3 + 8);
  v23(v5, v57);
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v50 = static String.cancelButtonTitle;
  v56 = qword_1004A2C90;
  v49 = swift_allocObject(&unk_10044FFC0, 24, 7);
  *(_QWORD *)(v49 + 16) = v22;
  swift_bridgeObjectRetain();
  v24 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v48 = UUID.uuidString.getter(v24);
  v26 = v25;
  v23(v5, v57);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003B3430);
  v16(v13, v15, v9);
  v27 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v57 = (_QWORD *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v27, v8, 0, 0, 256);
  v47 = v28;
  v19(v15, v9);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x80000001003B3450);
  v16(v13, v15, v9);
  v29 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v46 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v29, v8, 0, 0, 256);
  v31 = v30;
  v19(v15, v9);
  v32 = sub_100005574(&qword_100493240);
  v33 = swift_allocObject(v32, 144, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100384A60;
  v34 = v58;
  *(_QWORD *)(v33 + 32) = v51;
  *(_QWORD *)(v33 + 40) = v34;
  v35 = v53;
  v36 = v54;
  *(_QWORD *)(v33 + 48) = v52;
  *(_QWORD *)(v33 + 56) = v36;
  *(_BYTE *)(v33 + 64) = 2;
  *(_QWORD *)(v33 + 72) = &unk_100493538;
  *(_QWORD *)(v33 + 80) = v35;
  *(_QWORD *)(v33 + 88) = v48;
  *(_QWORD *)(v33 + 96) = v26;
  v45 = v26;
  v37 = v49;
  v38 = v56;
  *(_QWORD *)(v33 + 104) = v50;
  *(_QWORD *)(v33 + 112) = v38;
  *(_BYTE *)(v33 + 120) = 2;
  *(_QWORD *)(v33 + 128) = &unk_100493548;
  *(_QWORD *)(v33 + 136) = v37;
  v39 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v40 = *(_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  v55 = sub_10000ABC8((_QWORD *)((char *)v55 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v39);
  v41 = v47;
  v59[0] = v57;
  v59[1] = v47;
  v59[2] = v46;
  v59[3] = v31;
  v60 = 0;
  v61 = v33;
  v62 = 0;
  v63 = 0;
  v57 = *(_QWORD **)(v40 + 8);
  swift_bridgeObjectRetain();
  v42 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v35);
  swift_bridgeObjectRetain();
  swift_retain(v37);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(_QWORD *, uint64_t, uint64_t))v57)(v59, v39, v40);
  swift_release(v35);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v42);
  swift_release(v37);
  swift_bridgeObjectRelease(v56);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v41);
  return sub_10016B358(v59);
}

uint64_t sub_100162EF0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100162F08, 0, 0);
}

uint64_t sub_100162F08()
{
  uint64_t v0;

  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 64) + 40) = 1;
  swift_continuation_resume();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100162F48(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100162F60, 0, 0);
}

uint64_t sub_100162F60()
{
  uint64_t v0;

  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 64) + 40) = 0;
  swift_continuation_resume();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_100162F9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  void *v57;
  void *v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(id *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81[4];
  char v82;
  char *v83;
  uint64_t v84;
  char v85;
  char v86[32];

  v79 = a1;
  v80 = a3;
  v4 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v78 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v72 - v14;
  v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v86, 0, 0);
  v17 = *v16;
  if (!v17)
    goto LABEL_4;
  KeyPath = swift_getKeyPath(&unk_10038E1D0);
  v19 = swift_getKeyPath(&unk_10038E1F8);
  v20 = swift_retain(v17);
  static Published.subscript.getter(v81, v20, KeyPath, v19);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v19);
  v21 = v81[0];

  if (v21)
  {
    v22 = 0;
  }
  else
  {
LABEL_4:
    v23 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
    v22 = sub_1001636E0((uint64_t)v80);

  }
  v24 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v25 = objc_msgSend(v24, "applicationState");

  if (!v22)
  {
LABEL_12:
    LOBYTE(v81[0]) = 0;
    v32 = v79;
    sub_1000149A8((uint64_t)v81, *(_QWORD *)(*(_QWORD *)(v79 + 64) + 40), &qword_100493528);
    return (_QWORD *)swift_continuation_throwingResume(v32);
  }
  if (v25 == (id)2)
  {
    if (qword_10048C868 != -1)
      swift_once(&qword_10048C868, sub_10016A1D0);
    v27 = type metadata accessor for Logger(0, v26);
    v28 = sub_1000086B4(v27, (uint64_t)static Logger.playbackController);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Music is background so bypass the requires subscription alert and use buffered AirPlay", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    goto LABEL_12;
  }
  v75 = v10;
  v76 = a2;
  v74 = v9;
  if (v80)
  {
    String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
    v34 = v78;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v15, v10);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v35 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v73 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v35, v9, 0, 0, 256);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v10);
    v38 = swift_allocObject(&unk_10044FF70, 24, 7);
    *(_QWORD *)(v38 + 16) = v79;
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v72 = UUID.uuidString.getter(v39);
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v6, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v38);
    v42 = sub_10003DCE4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    v44 = *((_QWORD *)v42 + 2);
    v43 = *((_QWORD *)v42 + 3);
    if (v44 >= v43 >> 1)
      v42 = sub_10003DCE4((char *)(v43 > 1), v44 + 1, 1, v42);
    *((_QWORD *)v42 + 2) = v44 + 1;
    v45 = &v42[56 * v44];
    *((_QWORD *)v45 + 4) = v72;
    *((_QWORD *)v45 + 5) = v41;
    *((_QWORD *)v45 + 6) = v73;
    *((_QWORD *)v45 + 7) = v37;
    v45[64] = 2;
    *((_QWORD *)v45 + 9) = &unk_100493520;
    *((_QWORD *)v45 + 10) = v38;
    swift_release(v38);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v42 = (char *)_swiftEmptyArrayStorage;
  }
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v46 = static String.cancelButtonTitle;
  v47 = (void *)qword_1004A2C90;
  v48 = swift_allocObject(&unk_10044FF48, 24, 7);
  *(_QWORD *)(v48 + 16) = v79;
  swift_bridgeObjectRetain();
  v49 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v50 = UUID.uuidString.getter(v49);
  v51 = v6;
  v53 = v52;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v48);
  if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
    v42 = sub_10003DCE4(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
  v55 = *((_QWORD *)v42 + 2);
  v54 = *((_QWORD *)v42 + 3);
  if (v55 >= v54 >> 1)
    v42 = sub_10003DCE4((char *)(v54 > 1), v55 + 1, 1, v42);
  *((_QWORD *)v42 + 2) = v55 + 1;
  v56 = &v42[56 * v55];
  *((_QWORD *)v56 + 4) = v50;
  *((_QWORD *)v56 + 5) = v53;
  *((_QWORD *)v56 + 6) = v46;
  *((_QWORD *)v56 + 7) = v47;
  v56[64] = 2;
  *((_QWORD *)v56 + 9) = &unk_100493510;
  *((_QWORD *)v56 + 10) = v48;
  v57 = (void *)sub_100162828(v80);
  v59 = v58;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000005ELL, 0x80000001003B3680);
  v80 = v47;
  v60 = v15;
  v61 = v78;
  v62 = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v60, v75);
  v79 = v53;
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v63 = qword_1004A1DA0;
  v64 = (id)qword_1004A1DA0;
  v65 = v74;
  static Locale.current.getter(v64);
  v66 = (void *)String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v63, v65, 0, 0, 256);
  v68 = v67;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
  v69 = *(_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v70 = *(_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8((_QWORD *)(v76 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v69);
  v81[0] = v57;
  v81[1] = v59;
  v81[2] = v66;
  v81[3] = v68;
  v82 = 0;
  v83 = v42;
  v84 = 0;
  v85 = 0;
  v71 = *(void (**)(id *, uint64_t, uint64_t))(v70 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v71(v81, v69, v70);
  swift_release(v48);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v59);
  return sub_10016B358(v81);
}

uint64_t sub_1001636E0(uint64_t result)
{
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  id v6;
  unsigned int v7;

  if (result)
  {
    if ((objc_msgSend((id)result, "isDeviceRoute") & 1) != 0)
    {
      return 0;
    }
    else
    {
      v2 = objc_msgSend(v1, "musicSubscriptionStatus");
      if (!v2
        || (v3 = v2,
            v4 = objc_msgSend(v2, "capabilities"),
            v5 = objc_msgSend(v3, "capabilities"),
            v3,
            result = (v5 & 2) == 0,
            (v5 & 2) == 0)
        && (v4 & 1) != 0)
      {
        v6 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v7 = objc_msgSend(v6, "isCloudLibraryEnabled");

        if (v7)
          return 0;
        else
          return 2;
      }
    }
  }
  return result;
}

uint64_t sub_1001637B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001637CC, 0, 0);
}

uint64_t sub_1001637CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 1;
  sub_1000149A8(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_100493528);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100163820(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100163838, 0, 0);
}

uint64_t sub_100163838()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 24) = 2;
  sub_1000149A8(v0 + 24, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_100493528);
  swift_continuation_throwingResume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016388C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v4 = v3;
  v42 = a2;
  v53 = (_QWORD *)a3;
  v51 = type metadata accessor for GenericMusicItem(0);
  v43 = *(_QWORD *)(v51 - 8);
  v6 = __chkstk_darwin(v51);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (char *)&v40 - v8;
  v9 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v48 = *(_QWORD *)(v9 - 8);
  v49 = v9;
  __chkstk_darwin(v9);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for Playlist.Entry(0);
  v46 = *(_QWORD *)(v52 - 8);
  v11 = __chkstk_darwin(v52);
  v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v40 - v13;
  v15 = type metadata accessor for Track(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v40 - v21;
  v23 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v20);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v44 = v4;
  v26(v25, v4, a1);
  if (swift_dynamicCast(v22, v25, a1, v15, 0))
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v22, v15);
    Track.musicItem.getter((uint64_t)v53);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    v28 = v52;
    v27 = v53;
    if (swift_dynamicCast(v14, v25, a1, v52, 0))
    {
      v30 = v45;
      v29 = v46;
      v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v45, v14, v28);
      v32 = v47;
      Playlist.Entry.internalItem.getter(v31);
      Playlist.Entry.InternalItem.musicItem.getter(v27);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v49);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
    else
    {
      v34 = v50;
      v33 = v51;
      if (swift_dynamicCast(v50, v25, a1, v51, 0))
      {
        v35 = v43;
        v36 = v41;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v34, v33);
        GenericMusicItem.innerMusicItem.getter((uint64_t)v27);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
      }
      else
      {
        v37 = v42;
        v27[3] = a1;
        v27[4] = v37;
        v38 = (char *)sub_1000207D4(v27);
        v26(v38, v44, a1);
      }
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, a1);
}

uint64_t sub_100163BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  id v53;
  char *v54;
  _QWORD v56[2];
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD v73[6];
  _BYTE v74[24];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v58 = type metadata accessor for Station(0);
  v56[0] = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for MusicMovie(0);
  v56[1] = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TVEpisode(0);
  v59 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for Playlist(0);
  v64 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for Album(0);
  v65 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for MusicVideo(0);
  v68 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)v56 - v18;
  v20 = type metadata accessor for Song(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016388C(a1, a2, (uint64_t)v74);
  if (!v75)
    goto LABEL_31;
  v24 = v17;
  sub_10016D3E8((uint64_t)v74, (uint64_t)v73);
  v25 = sub_100005574(&qword_100493480);
  if (swift_dynamicCast(v23, v73, v25, v20, 0))
  {
    v26 = v19;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000035, 0x80000001003B35E0);
    v27 = v24;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v26, v13);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v28 = qword_1004A1DA0;
    v29 = (id)qword_1004A1DA0;
    v30 = v72;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    goto LABEL_20;
  }
  v32 = v71;
  if (swift_dynamicCast(v10, v73, v25, v71, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x80000001003B3520);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v33 = qword_1004A1DA0;
    v34 = (id)qword_1004A1DA0;
    v35 = v72;
    static Locale.current.getter(v34);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v33, v35, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v68;
    goto LABEL_19;
  }
  v10 = v69;
  v32 = v70;
  if (swift_dynamicCast(v69, v73, v25, v70, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x80000001003B35A0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v37 = qword_1004A1DA0;
    v38 = (id)qword_1004A1DA0;
    v39 = v72;
    static Locale.current.getter(v38);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v37, v39, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v36 = v65;
    goto LABEL_19;
  }
  v10 = v66;
  v32 = v67;
  if (swift_dynamicCast(v66, v73, v25, v67, 0))
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x80000001003B3560);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v40 = qword_1004A1DA0;
    v41 = (id)qword_1004A1DA0;
    v42 = v72;
    static Locale.current.getter(v41);
    v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v40, v42, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    v43 = &v79;
LABEL_18:
    v36 = *(v43 - 32);
LABEL_19:
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v32);
LABEL_20:
    sub_10000682C(v73);
    sub_100008758((uint64_t)v74, &qword_100493470);
    return v31;
  }
  v44 = v62;
  v45 = v63;
  if (!swift_dynamicCast(v62, v73, v25, v63, 0))
  {
    v44 = v60;
    v45 = v61;
    if (swift_dynamicCast(v60, v73, v25, v61, 0))
    {
      v46 = &v77;
      goto LABEL_25;
    }
    v10 = v57;
    v32 = v58;
    if (swift_dynamicCast(v57, v73, v25, v58, 0))
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x80000001003B34E0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v49 = qword_1004A1DA0;
      v50 = (id)qword_1004A1DA0;
      v51 = v72;
      static Locale.current.getter(v50);
      v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v49, v51, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      v43 = &v76;
      goto LABEL_18;
    }
    sub_10000682C(v73);
LABEL_31:
    sub_100008758((uint64_t)v74, &qword_100493470);
    v48 = 0xD000000000000030;
    v47 = 0x80000001003B34A0;
    goto LABEL_32;
  }
  v46 = &v78;
LABEL_25:
  (*(void (**)(char *, uint64_t))(*(v46 - 32) + 8))(v44, v45);
  sub_10000682C(v73);
  sub_100008758((uint64_t)v74, &qword_100493470);
  v47 = 0x80000001003B3520;
  v48 = 0xD000000000000036;
LABEL_32:
  String.LocalizationValue.init(stringLiteral:)(v48, v47);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v52 = qword_1004A1DA0;
  v53 = (id)qword_1004A1DA0;
  v54 = v72;
  static Locale.current.getter(v53);
  v31 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v52, v54, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  return v31;
}

_QWORD *sub_1001644B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t DynamicType;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  BOOL v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  void **v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  void *v81;
  BOOL v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  ValueMetadata *v112;
  void (*v113)(id *, uint64_t, uint64_t);
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  uint64_t v119;
  void **v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  ValueMetadata *v125;
  char *v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  ValueMetadata *v138;
  _UNKNOWN **v139;
  char *v140;
  uint64_t v141;
  char v142;
  char v143[24];

  v125 = a5;
  v124 = a4;
  v132 = a2;
  v133 = a3;
  v134 = a1;
  v123 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v122 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v6 = __chkstk_darwin(v131);
  v120 = (void **)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v9 = (id *)((char *)&v115 - v8);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v115 - v22;
  String.LocalizationValue.init(stringLiteral:)(0x776F4E2079616C50, 0xE800000000000000);
  v117 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v117(v21, v23, v17);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v24 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v126 = v21;
  v118 = v16;
  v130 = (id)String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v24, v16, 0, 0, 256);
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v127 = v23;
  v119 = v17;
  v116 = v27;
  v27(v23, v17);
  v28 = swift_allocObject(&unk_10044FE30, 24, 7);
  *(_QWORD *)(v28 + 16) = v134;
  v29 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v30 = UUID.uuidString.getter(v29);
  v32 = v31;
  v128 = *(void (**)(char *, uint64_t))(v11 + 8);
  v129 = v10;
  v128(v13, v10);
  v33 = sub_10003DCE4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  v35 = *((_QWORD *)v33 + 2);
  v34 = *((_QWORD *)v33 + 3);
  v36 = v13;
  if (v35 >= v34 >> 1)
    v33 = sub_10003DCE4((char *)(v34 > 1), v35 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v35 + 1;
  v37 = &v33[56 * v35];
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v32;
  *((_QWORD *)v37 + 6) = v130;
  *((_QWORD *)v37 + 7) = v26;
  v37[64] = 2;
  *((_QWORD *)v37 + 9) = &unk_100493490;
  *((_QWORD *)v37 + 10) = v28;
  sub_100082248(v132, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v9, v131) == 1)
  {
    v38 = v122;
    v39 = v121;
    v40 = v123;
    v41 = (*(uint64_t (**)(char *, id *, uint64_t))(v122 + 32))(v121, v9, v123);
    v130 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
  else
  {
    v130 = *v9;
  }
  v42 = v127;
  v43 = (uint64_t *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v143, 0, 0);
  v44 = *v43;
  if (*v43)
  {
    v138 = &type metadata for Player.InsertCommand;
    v139 = &protocol witness table for Player.InsertCommand;
    v45 = v130;
    v135 = v130;
    v136 = 0;
    v46 = sub_10000ABC8(&v135, (uint64_t)&type metadata for Player.InsertCommand);
    DynamicType = swift_getDynamicType(v46, &type metadata for Player.InsertCommand, 1);
    v48 = (uint64_t)v139;
    v49 = v45;
    swift_retain(v44);
    v50 = sub_100178360(DynamicType, v48);
    if (v50)
    {
      v51 = (void *)v50;
      v52 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v135);

      sub_10000682C(&v135);
      swift_release(v44);
      v53 = v126;
      if (!v52)
        goto LABEL_16;
      String.LocalizationValue.init(stringLiteral:)(0x78654E2079616C50, 0xE900000000000074);
      v54 = v119;
      v117(v53, v42, v119);
      v55 = qword_1004A1DA0;
      v56 = (id)qword_1004A1DA0;
      v57 = v53;
      v58 = v118;
      static Locale.current.getter(v56);
      v115 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v55, v58, 0, 0, 256);
      v60 = v59;
      v116(v42, v54);
      v61 = swift_allocObject(&unk_10044FEA8, 24, 7);
      *(_QWORD *)(v61 + 16) = v134;
      v62 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v63 = UUID.uuidString.getter(v62);
      v65 = v64;
      v128(v13, v129);
      v67 = *((_QWORD *)v33 + 2);
      v66 = *((_QWORD *)v33 + 3);
      if (v67 >= v66 >> 1)
        v33 = sub_10003DCE4((char *)(v66 > 1), v67 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v67 + 1;
      v68 = &v33[56 * v67];
      *((_QWORD *)v68 + 4) = v63;
      *((_QWORD *)v68 + 5) = v65;
      *((_QWORD *)v68 + 6) = v115;
      *((_QWORD *)v68 + 7) = v60;
      v68[64] = 2;
      *((_QWORD *)v68 + 9) = &unk_1004934C0;
      *((_QWORD *)v68 + 10) = v61;
      v42 = v127;
    }
    else
    {
      sub_10000682C(&v135);

      swift_release(v44);
    }
  }
  v53 = v126;
LABEL_16:
  v69 = v120;
  sub_100082248(v132, (uint64_t)v120, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v69, v131) == 1)
  {
    v70 = v122;
    v71 = v121;
    v72 = v123;
    v73 = (*(uint64_t (**)(char *, void **, uint64_t))(v122 + 32))(v121, v69, v123);
    v74 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v73);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  else
  {
    v74 = *v69;
    v75 = *v43;
    if (!v75)
      goto LABEL_26;
  }
  v138 = &type metadata for Player.InsertCommand;
  v139 = &protocol witness table for Player.InsertCommand;
  v135 = v74;
  v136 = 1;
  v76 = sub_10000ABC8(&v135, (uint64_t)&type metadata for Player.InsertCommand);
  v77 = swift_getDynamicType(v76, &type metadata for Player.InsertCommand, 1);
  v78 = (uint64_t)v139;
  v79 = v74;
  swift_retain(v75);
  v80 = sub_100178360(v77, v78);
  if (v80)
  {
    v81 = (void *)v80;
    v82 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v135);

    sub_10000682C(&v135);
    swift_release(v75);
    if (v82)
    {
      String.LocalizationValue.init(stringLiteral:)(0x73614C2079616C50, 0xE900000000000074);
      v83 = v53;
      v84 = v53;
      v85 = v119;
      v117(v83, v42, v119);
      v86 = qword_1004A1DA0;
      v87 = (id)qword_1004A1DA0;
      v88 = v118;
      static Locale.current.getter(v87);
      v89 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v86, v88, 0, 0, 256);
      v91 = v90;
      v116(v42, v85);
      v92 = swift_allocObject(&unk_10044FE80, 24, 7);
      *(_QWORD *)(v92 + 16) = v134;
      v93 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v94 = UUID.uuidString.getter(v93);
      v96 = v95;
      v128(v13, v129);
      v98 = *((_QWORD *)v33 + 2);
      v97 = *((_QWORD *)v33 + 3);
      if (v98 >= v97 >> 1)
        v33 = sub_10003DCE4((char *)(v97 > 1), v98 + 1, 1, v33);
      *((_QWORD *)v33 + 2) = v98 + 1;
      v99 = &v33[56 * v98];
      *((_QWORD *)v99 + 4) = v94;
      *((_QWORD *)v99 + 5) = v96;
      *((_QWORD *)v99 + 6) = v89;
      *((_QWORD *)v99 + 7) = v91;
      v99[64] = 2;
      *((_QWORD *)v99 + 9) = &unk_1004934B0;
      *((_QWORD *)v99 + 10) = v92;
    }
  }
  else
  {
    sub_10000682C(&v135);

    swift_release(v75);
  }
LABEL_26:
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v101 = static String.cancelButtonTitle;
  v100 = qword_1004A2C90;
  v102 = swift_allocObject(&unk_10044FE58, 24, 7);
  *(_QWORD *)(v102 + 16) = v134;
  swift_bridgeObjectRetain();
  v103 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v104 = UUID.uuidString.getter(v103);
  v106 = v105;
  v128(v36, v129);
  v108 = *((_QWORD *)v33 + 2);
  v107 = *((_QWORD *)v33 + 3);
  if (v108 >= v107 >> 1)
    v33 = sub_10003DCE4((char *)(v107 > 1), v108 + 1, 1, v33);
  *((_QWORD *)v33 + 2) = v108 + 1;
  v109 = &v33[56 * v108];
  *((_QWORD *)v109 + 4) = v104;
  *((_QWORD *)v109 + 5) = v106;
  *((_QWORD *)v109 + 6) = v101;
  *((_QWORD *)v109 + 7) = v100;
  v109[64] = 2;
  *((_QWORD *)v109 + 9) = &unk_1004934A0;
  *((_QWORD *)v109 + 10) = v102;
  v110 = *(_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v111 = *(_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8((_QWORD *)(v133 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v110);
  v135 = 0;
  v136 = 0;
  v112 = v125;
  v137 = v124;
  v138 = v125;
  LOBYTE(v139) = 0;
  v140 = v33;
  v141 = 0;
  v142 = 0;
  v113 = *(void (**)(id *, uint64_t, uint64_t))(v111 + 8);
  swift_bridgeObjectRetain_n(v125, 2);
  swift_bridgeObjectRetain();
  v113(&v135, v110, v111);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v112);
  swift_bridgeObjectRelease(0);

  return sub_10016B358(&v135);
}

uint64_t sub_100164E98(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_100164EB0, 0, 0);
}

uint64_t sub_100164EB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(int64x2_t *)(v0 + 16) = vdupq_n_s64(2uLL);
  *(_BYTE *)(v0 + 32) = 0;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1004934C8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100164F0C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_100164F24, 0, 0);
}

uint64_t sub_100164F24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 16) = xmmword_100384B90;
  *(_BYTE *)(v0 + 32) = 0;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1004934C8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100164F80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_100164F98, 0, 0);
}

uint64_t sub_100164F98()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 16) = xmmword_100384BA0;
  *(_BYTE *)(v0 + 32) = 0;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1004934C8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100164FF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_task_switch(sub_10016500C, 0, 0);
}

uint64_t sub_10016500C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_1000149A8(v0 + 16, *(_QWORD *)(*(_QWORD *)(v1 + 64) + 40), &qword_1004934C8);
  swift_continuation_resume(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id PlaybackController.requestedPropertySet(for:)()
{
  if (qword_10048C960 != -1)
    swift_once(&qword_10048C960, sub_1001D5D24);
  return (id)static SharedListening.Event.properties;
}

uint64_t PlaybackController.engine(_:didReceive:)(uint64_t a1, void *a2)
{
  return sub_10016B384(a2, (uint64_t)a2);
}

double PlaybackController.engine(_:didEndSharedListeningSessionWithError:)(uint64_t a1, uint64_t a2)
{
  return sub_10016B614(a2);
}

uint64_t sub_10016519C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_100165208, v6, v7);
}

uint64_t sub_100165208()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)(v0[2] + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v2 = v1[3];
  v3 = v1[4];
  sub_10000ABC8(v1, v2);
  v0[6] = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(dword_100495A94);
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_100165294;
  return GroupActivitiesManager.leave(performLeaveCommand:)(0);
}

uint64_t sub_100165294()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release(v2);
  return swift_task_switch(sub_100092F44, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

_QWORD *sub_1001652E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v41 = a1;
  v1 = type metadata accessor for UUID(0);
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v36 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003B33B0);
  v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v11, v13, v7);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v15 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v38 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v6, 0, 0, 256);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000057, 0x80000001003B33D0);
  v14(v11, v13, v7);
  v19 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v37 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v19, v6, 0, 0, 256);
  v21 = v20;
  v18(v13, v7);
  v22 = sub_100005574(&qword_100493240);
  v23 = swift_allocObject(v22, 88, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100384A80;
  String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
  v14(v11, v13, v7);
  v24 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v25 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v24, v6, 0, 0, 256);
  v27 = v26;
  v18(v13, v7);
  v28 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v29 = UUID.uuidString.getter(v28);
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v40);
  *(_QWORD *)(v23 + 32) = v29;
  *(_QWORD *)(v23 + 40) = v31;
  *(_QWORD *)(v23 + 48) = v25;
  *(_QWORD *)(v23 + 56) = v27;
  *(_BYTE *)(v23 + 64) = 0;
  *(_QWORD *)(v23 + 72) = 0;
  *(_QWORD *)(v23 + 80) = 0;
  v32 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v33 = *(_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8((_QWORD *)(v41 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v32);
  v42[0] = v38;
  v42[1] = v17;
  v42[2] = v37;
  v42[3] = v21;
  v43 = 0;
  v44 = v23;
  v45 = 0;
  v46 = 0;
  v34 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v42, v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10016B358(v42);
}

void PlaybackController.engine(_:didPauseForLeaseEndWithError:)(uint64_t a1, void *a2)
{
  sub_10016B8BC(a2, (uint64_t)a2);
}

void sub_1001656C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];

  v16 = &type metadata for String;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(a3 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v5 = a3 + 16 * a1;
  v6 = *(_QWORD *)(v5 + 40);
  v7 = a4 + 16;
  *(_QWORD *)&v15 = *(_QWORD *)(v5 + 32);
  *((_QWORD *)&v15 + 1) = v6;
  sub_10009B168(&v15, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v18 = a2;
  sub_10009A3BC(v19, 0x79546E6F69746361, 0xEA00000000006570, isUniquelyReferenced_nonNull_native);
  v9 = v18;
  swift_bridgeObjectRelease();
  swift_beginAccess(v7, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v11 = (void *)Strong;
    sub_1000244B0(Strong + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v15);

    v12 = v16;
    v13 = v17;
    sub_10000ABC8(&v15, (uint64_t)v16);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v13 + 24))(v9, v12, v13);
    swift_bridgeObjectRelease();
    sub_10000682C(&v15);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess(v7, &v15, 0, 0);
  v14 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v7);
  if (v14)
  {
    v14[OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented] = 0;

  }
}

void sub_10016583C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;

  v4 = v3;
  v54 = a1;
  v55 = a2;
  v6 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  __chkstk_darwin(v6);
  v51 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v3, "buttons");
  v9 = sub_1000087DC(0, &qword_1004932A0, ICStoreDialogResponseButton_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v34 = v10;
    else
      v34 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_3;
LABEL_21:
    swift_bridgeObjectRelease();
    v13 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
    goto LABEL_21;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  v46 = v4;
  v47 = a3;
  v12 = 0;
  v48 = v10 & 0xC000000000000001;
  v13 = (char *)_swiftEmptyArrayStorage;
  v49 = v11;
  v50 = v10;
  do
  {
    if (v48)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
    else
      v14 = *(id *)(v10 + 8 * v12 + 32);
    v15 = v14;
    v56 = objc_msgSend(v14, "type") != (id)2;
    v16 = objc_msgSend(v15, "title");
    if (v16)
    {
      v17 = v16;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v20 = v19;

    }
    else
    {
      v18 = 0;
      v20 = 0xE000000000000000;
    }
    v21 = (_QWORD *)swift_allocObject(&unk_10044FBB8, 48, 7);
    v23 = v54;
    v22 = v55;
    v21[2] = v15;
    v21[3] = v23;
    v21[4] = v22;
    v21[5] = v12;
    v24 = v15;
    sub_10003A434(v23, v22);
    v25 = v51;
    v26 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v27 = UUID.uuidString.getter(v26);
    v29 = v28;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v21);
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_10003DCE4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v31 = *((_QWORD *)v13 + 2);
    v30 = *((_QWORD *)v13 + 3);
    if (v31 >= v30 >> 1)
      v13 = sub_10003DCE4((char *)(v30 > 1), v31 + 1, 1, v13);
    ++v12;
    v32 = 2 * v56;
    *((_QWORD *)v13 + 2) = v31 + 1;
    v33 = &v13[56 * v31];
    *((_QWORD *)v33 + 4) = v27;
    *((_QWORD *)v33 + 5) = v29;
    *((_QWORD *)v33 + 6) = v18;
    *((_QWORD *)v33 + 7) = v20;
    v33[64] = v32;
    *((_QWORD *)v33 + 9) = &unk_1004932B0;
    *((_QWORD *)v33 + 10) = v21;
    swift_release(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v50;
  }
  while (v49 != v12);
  swift_bridgeObjectRelease();
  v4 = v46;
  a3 = v47;
LABEL_22:
  v35 = objc_msgSend(v4, "message");
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = objc_msgSend(v4, "explanation");
  if (v40)
  {
    v41 = v40;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0;
  }
  *(_QWORD *)a3 = v37;
  *(_QWORD *)(a3 + 8) = v39;
  *(_QWORD *)(a3 + 16) = v42;
  *(_QWORD *)(a3 + 24) = v44;
  *(_BYTE *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = v13;
  *(_QWORD *)(a3 + 48) = 0;
}

_QWORD *sub_100165BC8(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_OWORD *, uint64_t, uint64_t);
  _OWORD v13[3];
  uint64_t v14;
  char v15;
  _OWORD v16[3];
  uint64_t v17;

  if ((*((_BYTE *)result + OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented) & 1) == 0)
  {
    v6 = result;
    *((_BYTE *)result + OBJC_IVAR____TtC9MusicCore18PlaybackController_isLeaseEndAlertPresented) = 1;
    v7 = swift_allocObject(&unk_10044FA28, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16, v6);
    v8 = (_QWORD *)swift_allocObject(&unk_10044FD78, 40, 7);
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain(v7);
    sub_10016583C((uint64_t)sub_10016D068, (uint64_t)v8, (uint64_t)v16);
    swift_release(v7);
    swift_release(v8);
    v9 = (_QWORD *)((char *)v6 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v10 = *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v11 = v9[4];
    sub_10000ABC8(v9, v10);
    v13[0] = v16[0];
    v13[1] = v16[1];
    v13[2] = v16[2];
    v14 = v17;
    v15 = 0;
    v12 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v11 + 8);
    sub_1000847E8((uint64_t)v16);
    v12(v13, v10, v11);
    sub_1000149EC(v16);
    return sub_10016B358(v13);
  }
  return result;
}

double PlaybackController.engine(_:didFailToPlayFirstItem:withError:)(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  _QWORD *v6;
  id v7;
  id v8;
  double result;

  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v6 = (_QWORD *)swift_allocObject(&unk_10044F5D0, 40, 7);
  v6[2] = a3;
  v6[3] = v3;
  v6[4] = a2;
  swift_errorRetain(a3);
  v7 = a2;
  v8 = v3;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10016BD5C, (uint64_t)v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_100165DF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char **v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  id v40;
  Class isa;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  void *v73;
  id v74;
  __n128 v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  __n128 v81;
  int v82;
  void *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  _BYTE *v91;
  id v92;
  char *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  _QWORD *v114;
  id v115;
  _BYTE *v116;
  char *v117;
  uint64_t *v118;
  void *v119;
  uint64_t v120;
  unsigned __int8 *v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  unint64_t v130;
  unint64_t v131;
  char *v132;
  _BYTE *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(_QWORD, _QWORD, _QWORD);
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  void *v149;
  id v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  id v160;
  id v161;
  void *v162;
  id v163;
  uint64_t v164;
  id v165;
  void *v166;
  id v167;
  id v168;
  id v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  id v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD v185[2];
  uint64_t v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  id v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  unsigned __int8 *v205;
  _BYTE *v206;
  id v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  char *v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD v217[4];
  unsigned __int8 v218;
  uint64_t v219;
  void *v220;
  _QWORD v221[4];
  unsigned __int8 v222;
  void *v223;
  void *v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  _DWORD v232[5];

  v196 = a3;
  v201 = a2;
  v4 = sub_100005574((uint64_t *)&unk_100493270);
  __chkstk_darwin(v4);
  v6 = (char *)v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_10048F2F8);
  __chkstk_darwin(v7);
  v10 = (char *)v185 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v11 = type metadata accessor for Logger(0, v8);
  sub_1000086B4(v11, (uint64_t)static Logger.playbackController);
  swift_errorRetain(a1);
  v12 = swift_errorRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  v15 = os_log_type_enabled(v13, v14);
  v207 = v10;
  if (v15)
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v208 = v17;
    *(_DWORD *)v16 = 136446210;
    v225 = (void *)a1;
    swift_errorRetain(a1);
    v18 = sub_100005574((uint64_t *)&unk_1004911F0);
    v19 = (char *)String.init<A>(describing:)(&v225, v18);
    *(_QWORD *)(v16 + 4) = sub_100019400(v19, v20, (uint64_t *)&v208);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "didFailToPlayFirstItem with error=%{public}s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  if ((*(_BYTE *)(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented) & 1) == 0)
  {
    v186 = OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented;
    v21 = &selRef_isEnabled;
    v192 = (id)_convertErrorToNSError(_:)(a1);
    v22 = objc_msgSend(v192, "userInfo");
    v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    if (*(_QWORD *)(v23 + 16) && (v24 = sub_10009ABAC(0x676F6C616964, 0xE600000000000000), (v25 & 1) != 0))
    {
      sub_10000684C(*(_QWORD *)(v23 + 56) + 32 * v24, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease();
    v204 = a1;
    if (*((_QWORD *)&v209 + 1))
    {
      v26 = sub_100005574((uint64_t *)&unk_100490B50);
      if ((swift_dynamicCast(&v225, &v208, (char *)&type metadata for Any + 8, v26, 6) & 1) != 0)
      {
        v27 = (uint64_t)v225;
        v28 = swift_bridgeObjectRetain_n(v225, 2);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc(12, -1);
          v32 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v208 = v32;
          *(_DWORD *)v31 = 136446210;
          v33 = swift_bridgeObjectRetain();
          v34 = v6;
          v35 = Dictionary.description.getter(v33, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
          v37 = v36;
          swift_bridgeObjectRelease();
          v38 = (char *)v35;
          v6 = v34;
          *(_QWORD *)(v31 + 4) = sub_100019400(v38, v37, (uint64_t *)&v208);
          swift_bridgeObjectRelease_n(v27, 2);
          a1 = v204;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Found an error dialog=%{public}s", (uint8_t *)v31, 0xCu);
          swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
          v39 = v32;
          v21 = &selRef_isEnabled;
          swift_slowDealloc(v39, -1, -1);
          swift_slowDealloc(v31, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v27, 2);
        }
        v40 = objc_allocWithZone((Class)ICStoreDialogResponse);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v42 = objc_msgSend(v40, "initWithResponseDictionary:", isa);

        sub_10016583C(0, 0, (uint64_t)v217);
        v199 = v217[3];
        v200 = v217[1];
        v193 = v218;
        v194 = v217[0];
        v197 = v217[2];
        v198 = (id)v219;
        v195 = v220;

        goto LABEL_19;
      }
    }
    else
    {
      sub_100008758((uint64_t)&v208, &qword_100491B90);
    }
    v193 = 0;
    v194 = 0;
    v199 = 0;
    v200 = 0;
    v197 = 0;
    v198 = 0;
    v195 = 0;
LABEL_19:
    v43 = objc_msgSend(v192, v21[463]);
    v44 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v43, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
    if (*(_QWORD *)(v44 + 16) && (v47 = sub_10009ABAC(v45, v46), (v48 & 1) != 0))
    {
      sub_10000684C(*(_QWORD *)(v44 + 56) + 32 * v47, (uint64_t)&v208);
    }
    else
    {
      v208 = 0u;
      v209 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v202 = v6;
    if (*((_QWORD *)&v209 + 1))
    {
      v49 = sub_1000087DC(0, (unint64_t *)&qword_100491C10, NSError_ptr);
      if (swift_dynamicCast(&v225, &v208, (char *)&type metadata for Any + 8, v49, 6))
      {
        v50 = v225;
        goto LABEL_28;
      }
    }
    else
    {
      sub_100008758((uint64_t)&v208, &qword_100491B90);
    }
    v50 = 0;
LABEL_28:
    v51 = swift_allocObject(&unk_10044FAC8, 17, 7);
    *(_BYTE *)(v51 + 16) = 0;
    v52 = (unsigned __int8 *)(v51 + 16);
    v53 = swift_allocObject(&unk_10044FAC8, 17, 7);
    *(_BYTE *)(v53 + 16) = 0;
    v206 = (_BYTE *)(v53 + 16);
    v54 = swift_allocObject(&unk_10044FAC8, 17, 7);
    *(_BYTE *)(v54 + 16) = 0;
    v203 = (char *)(v54 + 16);
    sub_100167310(a1, v53, v54, v51);
    if (v50)
    {
      v55 = v50;
      sub_100167310((uint64_t)v55, v53, v54, v51);

    }
    v190 = v51;
    v191 = v50;
    v188 = v53;
    v189 = v54;
    if (!v196)
    {
      v62 = 0;
      goto LABEL_54;
    }
    v205 = (unsigned __int8 *)(v51 + 16);
    v56 = v196;
    v57 = objc_msgSend(v56, "stationStringID");
    if (v57)
    {
      v58 = v57;
      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
      v61 = v60;

    }
    else
    {
      v59 = 0;
      v61 = 0;
    }
    v63 = (unint64_t)objc_msgSend(v56, "stationID");
    v64 = objc_msgSend(v56, "stationHash");
    if (v64)
    {
      v65 = v64;
      v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v62 = v67;

      if (v61)
        goto LABEL_37;
    }
    else
    {
      v66 = 0;
      v62 = 0;
      if (v61)
      {
LABEL_37:
        v68 = HIBYTE(v61) & 0xF;
        if ((v61 & 0x2000000000000000) == 0)
          v68 = v59 & 0xFFFFFFFFFFFFLL;
        if (v68 | v63)
        {
LABEL_47:
          sub_1000087DC(0, &qword_100495B00, MPModelRadioStationKind_ptr);
          v70 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "identityKind");
          __chkstk_darwin(v70);
          v185[-6] = v59;
          v185[-5] = v61;
          v185[-4] = v63;
          v185[-3] = v66;
          v185[-2] = v62;
          v71 = objc_allocWithZone((Class)MPIdentifierSet);
          v72 = swift_allocObject(&unk_10044FB18, 32, 7);
          *(_QWORD *)(v72 + 16) = sub_10016CB98;
          *(_QWORD *)(v72 + 24) = &v185[-8];
          v210 = sub_10016CBB4;
          v211 = (char *)v72;
          *(_QWORD *)&v208 = _NSConcreteStackBlock;
          *((_QWORD *)&v208 + 1) = 1107296256;
          *(_QWORD *)&v209 = sub_1000E776C;
          *((_QWORD *)&v209 + 1) = &unk_10044FB30;
          v73 = _Block_copy(&v208);
          swift_retain(v72);
          v74 = objc_msgSend(v71, "initWithModelKind:block:", v70, v73);

          _Block_release(v73);
          v75 = swift_release(v211);
          LOBYTE(v70) = swift_isEscapingClosureAtFileLocation(v72, "", 0, 0, 0, 1, v75);
          swift_release(v72);
          swift_bridgeObjectRelease();
          v76 = swift_bridgeObjectRelease();
          if ((v70 & 1) != 0)
          {
            __break(1u);
          }
          else
          {
            __chkstk_darwin(v76);
            v185[-2] = v56;
            v77 = objc_allocWithZone((Class)MPModelRadioStation);
            v78 = swift_allocObject(&unk_10044FB68, 32, 7);
            *(_QWORD *)(v78 + 16) = sub_10016CBBC;
            *(_QWORD *)(v78 + 24) = &v185[-4];
            v210 = sub_10016CBB4;
            v211 = (char *)v78;
            *(_QWORD *)&v208 = _NSConcreteStackBlock;
            *((_QWORD *)&v208 + 1) = 1107296256;
            *(_QWORD *)&v209 = sub_1000E776C;
            *((_QWORD *)&v209 + 1) = &unk_10044FB80;
            v79 = _Block_copy(&v208);
            swift_retain(v78);
            v80 = objc_msgSend(v77, "initWithIdentifiers:block:", v74, v79);

            _Block_release(v79);
            v81 = swift_release(v211);
            LOBYTE(v77) = swift_isEscapingClosureAtFileLocation(v78, "", 0, 0, 0, 1, v81);

            swift_release(v78);
            if ((v77 & 1) == 0)
            {
              v51 = v190;
              v50 = v191;
              v53 = v188;
              v54 = v189;
              v62 = (unint64_t)v80;
LABEL_53:
              v52 = v205;
LABEL_54:
              swift_beginAccess(v52, &v216, 0, 0);
              v82 = *v52;
              v83 = (void *)v62;
              v187 = (void *)v62;
              if (v82 == 1)
              {
                if (v62)
                {
                  sub_1000244B0(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v225);
                  v84 = (void *)v62;
                  v85 = v228;
                  v86 = v229;
                  sub_10000ABC8(&v225, v228);
                  v87 = type metadata accessor for Station(0);
                  v88 = v84;
                  v89 = v207;
                  dispatch thunk of LegacyModelObjectConvertible.init(_:)(v88);
                  v90 = *(_QWORD *)(v87 - 8);
                  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v90 + 48))(v89, 1, v87) == 1)
                  {
                    sub_100008758((uint64_t)v89, &qword_10048F2F8);
                    v208 = 0u;
                    v209 = 0u;
                    v210 = 0;
                  }
                  else
                  {
                    *((_QWORD *)&v209 + 1) = v87;
                    v210 = &protocol witness table for Station;
                    v114 = sub_1000207D4(&v208);
                    (*(void (**)(_QWORD *, id, uint64_t))(v90 + 32))(v114, v89, v87);
                  }
                  v96 = v194;
                  v100 = v195;
                  v213 = 2;
                  (*(void (**)(__int128 *, uint64_t, uint64_t))(v86 + 8))(&v208, v85, v86);
                  sub_10016B358(&v208);
                  sub_10000682C(&v225);
LABEL_68:
                  v105 = v198;
                  v50 = v191;
LABEL_69:
                  if (!v105)
                  {
                    v198 = 0;
                    if (v50)
                      goto LABEL_81;
                    goto LABEL_92;
                  }
                  v115 = v100;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v198 = v105;
                  v101 = (uint64_t)v105;
LABEL_71:
                  v116 = *(_BYTE **)(v101 + 16);
                  v195 = v100;
                  if (v116)
                  {
                    v194 = v96;
                    swift_bridgeObjectRetain();
                    v117 = (char *)_swiftEmptyArrayStorage;
                    v185[1] = v101;
                    v118 = (uint64_t *)(v101 + 80);
                    do
                    {
                      v206 = v116;
                      v119 = (void *)*(v118 - 6);
                      v120 = *(v118 - 5);
                      v121 = (unsigned __int8 *)*(v118 - 4);
                      v202 = (char *)*(v118 - 3);
                      v203 = v117;
                      v122 = *((unsigned __int8 *)v118 - 16);
                      v124 = *(v118 - 1);
                      v123 = *v118;
                      v125 = swift_allocObject(&unk_10044FA28, 24, 7);
                      swift_unknownObjectWeakInit(v125 + 16, v201);
                      v126 = swift_allocObject(&unk_10044FAF0, 80, 7);
                      v207 = v119;
                      *(_QWORD *)(v126 + 16) = v119;
                      *(_QWORD *)(v126 + 24) = v120;
                      v205 = v121;
                      *(_QWORD *)(v126 + 32) = v121;
                      v127 = v124;
                      v128 = v202;
                      *(_QWORD *)(v126 + 40) = v202;
                      LODWORD(v204) = v122;
                      *(_BYTE *)(v126 + 48) = v122;
                      *(_DWORD *)(v126 + 49) = v232[0];
                      *(_DWORD *)(v126 + 52) = *(_DWORD *)((char *)v232 + 3);
                      *(_QWORD *)(v126 + 56) = v127;
                      *(_QWORD *)(v126 + 64) = v123;
                      *(_QWORD *)(v126 + 72) = v125;
                      v129 = v203;
                      swift_bridgeObjectRetain_n(v120, 2);
                      swift_bridgeObjectRetain_n(v128, 2);
                      sub_10003A434(v127, v123);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      sub_10003A434(v127, v123);
                      if ((swift_isUniquelyReferenced_nonNull_native(v129) & 1) == 0)
                        v129 = sub_10003DCE4(0, *((_QWORD *)v129 + 2) + 1, 1, v129);
                      v131 = *((_QWORD *)v129 + 2);
                      v130 = *((_QWORD *)v129 + 3);
                      v132 = v129;
                      v133 = v206;
                      if (v131 >= v130 >> 1)
                        v132 = sub_10003DCE4((char *)(v130 > 1), v131 + 1, 1, v129);
                      v118 += 7;
                      *((_QWORD *)v132 + 2) = v131 + 1;
                      v117 = v132;
                      v134 = &v132[56 * v131];
                      *((_QWORD *)v134 + 4) = v207;
                      *((_QWORD *)v134 + 5) = v120;
                      *((_QWORD *)v134 + 6) = v205;
                      *((_QWORD *)v134 + 7) = v128;
                      v134[64] = v204;
                      *((_QWORD *)v134 + 9) = &unk_100493288;
                      *((_QWORD *)v134 + 10) = v126;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_10003A5C8(v127, v123);
                      v116 = v133 - 1;
                    }
                    while (v116);
                    swift_bridgeObjectRelease();
                    v96 = v194;
                  }
                  else
                  {
                    v117 = (char *)_swiftEmptyArrayStorage;
                  }
                  v135 = v201;
                  *(_BYTE *)(v201 + v186) = 1;
                  v136 = *(_QWORD *)(v135 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
                  v137 = *(_QWORD *)(v135 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
                  sub_10000ABC8((_QWORD *)(v135 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v136);
                  v139 = v199;
                  v138 = v200;
                  *(_QWORD *)&v208 = v96;
                  *((_QWORD *)&v208 + 1) = v200;
                  *(_QWORD *)&v209 = v197;
                  *((_QWORD *)&v209 + 1) = v199;
                  LOBYTE(v210) = 0;
                  v211 = v117;
                  v212 = 0;
                  v213 = 0;
                  v140 = *(void (**)(_QWORD, _QWORD, _QWORD))(v137 + 8);
                  swift_bridgeObjectRetain_n(v199, 2);
                  swift_bridgeObjectRetain_n(v138, 2);
                  swift_bridgeObjectRetain();
                  v140(&v208, v136, v137);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n(v139, 2);
                  swift_bridgeObjectRelease_n(v138, 2);
                  v100 = v195;

                  sub_10016B358(&v208);
                  v50 = v191;
                  if (v191)
                  {
LABEL_81:
                    v141 = objc_msgSend(v50, "domain");
                    v142 = static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
                    v144 = v143;

                    v145 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
                    if (v144)
                    {
                      if (v142 == v145 && v144 == v146)
                      {
                        swift_bridgeObjectRelease_n(v144, 2);
                        v147 = (uint64_t)v198;
LABEL_86:
                        if (objc_msgSend(v50, "code") == (id)40)
                        {
                          v149 = v187;
                          if (!v196)
                          {
                            v154 = 0;
                            v156 = 0;
                            v152 = 0;
                            v153 = v193;
LABEL_113:
                            sub_100168FA4(v154, v156, 0, 0);

                            swift_bridgeObjectRelease();
                            sub_100084838(v96, v200, v197, v199, v153, (uint64_t)v198, v100);
                            swift_release(v188);
                            swift_release(v189);

                            v50 = v191;
                            goto LABEL_95;
                          }
                          v150 = objc_msgSend(v196, "modelGenericObject");
                          if (v150)
                          {
                            v151 = v150;
                            v152 = objc_msgSend(v150, "flattenedGenericObject");

                            v153 = v193;
                            if (v152)
                            {
                              v154 = MPModelObject.bestIdentifier(for:)(2, 1u);
                              v156 = v155;
                            }
                            else
                            {
                              v154 = 0;
                              v156 = 0;
                            }
                            goto LABEL_113;
                          }
LABEL_131:
                          __break(1u);
                          return;
                        }

                        sub_100084838(v96, v200, v197, v199, v193, v147, v100);
                        swift_release(v188);
                        swift_release(v189);
                        v149 = v187;
LABEL_95:

                        swift_release(v190);
                        return;
                      }
                      v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v142, v144, v145, v146, 0);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v147 = (uint64_t)v198;
                      if ((v148 & 1) != 0)
                        goto LABEL_86;

                      v157 = v193;
LABEL_94:
                      v149 = v187;
                      sub_100084838(v96, v200, v197, v199, v157, v147, v100);
                      swift_release(v188);
                      swift_release(v189);
                      goto LABEL_95;
                    }
LABEL_93:

                    swift_bridgeObjectRelease();
                    v157 = v193;
                    v147 = (uint64_t)v198;
                    goto LABEL_94;
                  }
LABEL_92:
                  static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorDomain);
                  goto LABEL_93;
                }
                v83 = 0;
              }
              v91 = v206;
              swift_beginAccess(v206, &v215, 0, 0);
              if ((*v91 & 1) != 0)
              {
                v92 = (id)v62;
                sub_1000DEF58(v83, &v225);
LABEL_63:
                v96 = (uint64_t)v225;
                v95 = v226;
                v97 = v227;
                v98 = v228;
                v99 = v229;
                v101 = v230;
                v100 = v231;

                sub_100084838(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                sub_1000847E8((uint64_t)&v225);
                v199 = v98;
                v200 = v95;
                v197 = v97;
                v198 = (id)v101;
                v193 = v99;
                goto LABEL_71;
              }
              v93 = v203;
              swift_beginAccess(v203, &v214, 0, 0);
              if (*v93 == 1)
              {
                v94 = (id)v62;
                sub_1000DFB18((uint64_t)v83, (uint64_t *)&v225);
                goto LABEL_63;
              }
              v205 = v52;
              v207 = (id)v62;

              v102 = v204;
              swift_errorRetain(v204);
              v103 = v196;
              v104 = (void *)_convertErrorToNSError(_:)(v102);
              swift_errorRelease(v102);
              v105 = objc_msgSend((id)objc_opt_self(MPUPlaybackAlertController), "playbackAlertControllerForItem:contentType:error:dismissalBlock:", v103, 0, v104, 0);

              v106 = v103;
              if (v105)
              {
                sub_100167660((uint64_t)v221);
                v107 = v221[0];
                v108 = v221[1];
                v109 = v221[2];
                v110 = v221[3];
                v111 = v222;
                v113 = v223;
                v112 = v224;
                sub_100084838(v194, v200, v197, v199, v193, (uint64_t)v198, v195);

                v193 = v111;
                v194 = v107;
                v199 = v110;
                v200 = v108;
                v197 = v109;
                v53 = v188;
                v54 = v189;
                v51 = v190;
                v50 = v191;
                v105 = v113;
                v102 = v204;
                v195 = v112;
              }
              else
              {
                sub_100084838(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                v193 = 0;
                v194 = 0;
                v199 = 0;
                v200 = 0;
                v197 = 0;
                v195 = 0;
              }
              sub_100167A04(v102, v51, v54, v53);
              if (v50)
              {
                v158 = v105;
                v159 = v50;
                sub_100167A04((uint64_t)v159, v51, v54, v53);

                v105 = v158;
              }
              v96 = v194;
              v100 = v195;
              if (!v196)
                goto LABEL_69;
              v198 = v105;
              v160 = v106;
              v161 = objc_msgSend(v160, "modelGenericObject");
              if (v161)
              {
                v162 = v161;
                v163 = objc_msgSend(v161, "innermostModelObject");

                v164 = (uint64_t)v202;
                if ((*v205 & 1) != 0)
                {
                  v165 = objc_msgSend(v160, "modelPlayEvent");
                  if (!v165)
                  {
LABEL_122:
                    sub_1000244B0(v201 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator, (uint64_t)&v225);
                    v179 = v228;
                    v180 = v229;
                    sub_10000ABC8(&v225, v228);
                    v181 = v163;
                    GenericMusicItem.init(_:)();
                    v182 = type metadata accessor for GenericMusicItem(0);
                    v183 = *(_QWORD *)(v182 - 8);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48))(v164, 1, v182) == 1)
                    {
                      sub_100008758(v164, (uint64_t *)&unk_100493270);
                      v208 = 0u;
                      v209 = 0u;
                      v210 = 0;
                    }
                    else
                    {
                      *((_QWORD *)&v209 + 1) = v182;
                      v210 = (void *)sub_100006924((unint64_t *)&unk_100493290, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
                      v184 = sub_1000207D4(&v208);
                      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v183 + 32))(v184, v164, v182);
                    }
                    v213 = 2;
                    (*(void (**)(__int128 *, uint64_t, uint64_t))(v180 + 8))(&v208, v179, v180);

                    sub_10016B358(&v208);
                    sub_10000682C(&v225);
                    v96 = v194;
                    v100 = v195;
                    goto LABEL_68;
                  }
                  v166 = v165;
                  v167 = objc_msgSend(v165, "itemType");
                  if (v167 == (id)3)
                  {
                    v168 = objc_msgSend(v166, "playlist");
                  }
                  else
                  {
                    if (v167 != (id)1)
                    {

                      goto LABEL_122;
                    }
                    v168 = objc_msgSend(v166, "album");
                  }
                  v178 = v168;

                  if (v178)
                  {
                    v163 = v178;
                    goto LABEL_122;
                  }

LABEL_127:
                  v96 = v194;
                  v100 = v195;
                  v105 = v198;
                  goto LABEL_69;
                }
                if (*v206 == 1)
                {
                  v169 = v163;
                  sub_1000DEF58(v163, &v225);
                }
                else
                {
                  if (*v203 != 1)
                  {

                    goto LABEL_127;
                  }
                  v170 = v163;
                  sub_1000DFB18((uint64_t)v163, (uint64_t *)&v225);
                }
                v172 = (uint64_t)v225;
                v171 = v226;
                v174 = v227;
                v173 = v228;
                v175 = v229;
                v101 = v230;
                v176 = v231;

                sub_100084838(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
                v177 = v176;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v96 = v172;
                v199 = v173;
                v200 = v171;
                v197 = v174;
                v198 = (id)v101;
                v193 = v175;
                v100 = v176;
                goto LABEL_71;
              }
LABEL_130:

              sub_100084838(v194, v200, v197, v199, v193, (uint64_t)v198, v195);
              __break(1u);
              goto LABEL_131;
            }
          }
          __break(1u);
          goto LABEL_130;
        }
LABEL_43:
        if (v62)
        {
          v69 = HIBYTE(v62) & 0xF;
          if ((v62 & 0x2000000000000000) == 0)
            v69 = v66 & 0xFFFFFFFFFFFFLL;
          if (v69)
            goto LABEL_47;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = 0;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        v54 = v189;
        v51 = v190;
        v53 = v188;
        goto LABEL_53;
      }
    }
    if (v63)
      goto LABEL_47;
    goto LABEL_43;
  }
}

void sub_100167310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  uint64_t Category;
  _BYTE *v10;
  _BYTE v11[24];

  v7 = (void *)_convertErrorToNSError(_:)(a1);
  v8 = (void *)_convertErrorToNSError(_:)(v7);
  Category = MPCRadioPlaybackErrorGetCategory();

  switch(Category)
  {
    case 3:
      v10 = (_BYTE *)(a4 + 16);
      break;
    case 2:
      v10 = (_BYTE *)(a3 + 16);
      break;
    case 1:
      v10 = (_BYTE *)(a2 + 16);
      break;
    default:
      return;
  }
  swift_beginAccess(v10, v11, 1, 0);
  *v10 = 1;
}

void sub_1001673B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  _QWORD v17[5];
  uint64_t v18;

  v12 = (_QWORD *)swift_allocObject(&unk_10044FC60, 56, 7);
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v13 = swift_allocObject(&unk_10044FC88, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_10016CE3C;
  *(_QWORD *)(v13 + 24) = v12;
  v17[4] = sub_100009BB0;
  v18 = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000E7710;
  v17[3] = &unk_10044FCA0;
  v14 = _Block_copy(v17);
  v15 = v18;
  swift_bridgeObjectRetain();
  swift_retain(v13);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, "setRadioIdentifiersWithBlock:", v14, swift_release(v15).n128_f64[0]);
  _Block_release(v14);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v13, "", 128, 848, 61, 1, v16);
  swift_release(v12);
  swift_release(v13);
  if ((a1 & 1) != 0)
    __break(1u);
}

void sub_10016750C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v9;
  NSString v10;
  id v11;

  if (a3)
    v9 = String._bridgeToObjectiveC()();
  else
    v9 = 0;
  objc_msgSend(a1, "setStationStringID:", v9);

  objc_msgSend(a1, "setStationID:", a4);
  if (a6)
    v10 = String._bridgeToObjectiveC()();
  else
    v10 = 0;
  v11 = v10;
  objc_msgSend(a1, "setStationHash:");

}

void sub_1001675C8(void *a1, void *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v4 = objc_opt_self(MPModelRadioStation);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = a1;
  v7 = objc_msgSend(a2, "stationName");
  objc_msgSend(v5, "setName:", v7);

}

void sub_100167660(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t (*v14)();
  uint64_t v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  __chkstk_darwin(v4);
  v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, "actions");
  v7 = sub_1000087DC(0, &qword_100493348, UIAlertAction_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v32 = v8;
    else
      v32 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_3;
LABEL_24:
    swift_bridgeObjectRelease();
    v52 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_24;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  v43 = v2;
  v44 = a1;
  v10 = 0;
  v11 = (char *)_swiftEmptyArrayStorage;
  v45 = v8 & 0xC000000000000001;
  v46 = v9;
  v47 = v8;
  do
  {
    if (v45)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
    else
      v12 = *(id *)(v8 + 8 * v10 + 32);
    v13 = v12;
    v14 = (uint64_t (*)())objc_msgSend(v12, "handler", v43, v44);
    if (v14)
    {
      v15 = swift_allocObject(&unk_10044FD00, 24, 7);
      *(_QWORD *)(v15 + 16) = v14;
      v14 = sub_10016CF34;
    }
    else
    {
      v15 = 0;
    }
    v16 = objc_msgSend(v13, "title");
    if (v16)
    {
      v17 = v16;
      v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

    }
    else
    {
      v51 = 0;
      v19 = 0xE000000000000000;
    }
    v20 = (_QWORD *)swift_allocObject(&unk_10044FCD8, 40, 7);
    v20[2] = v14;
    v20[3] = v15;
    v20[4] = v13;
    sub_10003A434((uint64_t)v14, v15);
    v21 = v13;
    v22 = v48;
    v23 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v24 = UUID.uuidString.getter(v23);
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v50);
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10003DCE4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v52 = v11;
    if (v28 >= v27 >> 1)
      v52 = sub_10003DCE4((char *)(v27 > 1), v28 + 1, 1, v52);
    ++v10;
    v30 = v51;
    v29 = v52;
    *((_QWORD *)v52 + 2) = v28 + 1;
    v11 = v29;
    v31 = &v29[56 * v28];
    *((_QWORD *)v31 + 4) = v24;
    *((_QWORD *)v31 + 5) = v26;
    *((_QWORD *)v31 + 6) = v30;
    *((_QWORD *)v31 + 7) = v19;
    v31[64] = 2;
    *((_QWORD *)v31 + 9) = &unk_100493358;
    *((_QWORD *)v31 + 10) = v20;
    sub_10003A5C8((uint64_t)v14, v15);

    v8 = v47;
  }
  while (v46 != v10);
  swift_bridgeObjectRelease();
  v2 = v43;
  a1 = v44;
LABEL_25:
  v33 = objc_msgSend(v2, "title");
  if (v33)
  {
    v34 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v37 = v36;

  }
  else
  {
    v35 = 0;
    v37 = 0;
  }
  v38 = objc_msgSend(v2, "message");
  if (v38)
  {
    v39 = v38;
    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  *(_QWORD *)a1 = v35;
  *(_QWORD *)(a1 + 8) = v37;
  *(_QWORD *)(a1 + 16) = v40;
  *(_QWORD *)(a1 + 24) = v42;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v52;
  *(_QWORD *)(a1 + 48) = 0;
}

void sub_100167A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v13[3];
  void *v14;

  v13[0] = a1;
  swift_errorRetain(a1);
  v7 = sub_100005574((uint64_t *)&unk_1004911F0);
  type metadata accessor for MPCError(0);
  v9 = v8;
  if (swift_dynamicCast(&v14, v13, v7, v8, 6))
  {
    v10 = v14;
    v13[0] = v14;
    v11 = sub_100006924(&qword_10048D6F0, (uint64_t (*)(uint64_t))type metadata accessor for MPCError, (uint64_t)&unk_100386E68);
    _BridgedStoredNSError.code.getter(v9, v11);

    if (v14 == (void *)10)
    {
      v12 = (_BYTE *)(a4 + 16);
    }
    else if (v14 == (void *)11)
    {
      v12 = (_BYTE *)(a3 + 16);
    }
    else
    {
      if (v14 != (void *)17)
        return;
      v12 = (_BYTE *)(a2 + 16);
    }
    swift_beginAccess(v12, v13, 1, 0);
    *v12 = 1;
  }
}

uint64_t sub_100167B08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_100005574((uint64_t *)&unk_100493720);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100167B64, 0, 0);
}

uint64_t sub_100167B64()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *Strong;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(__int128 **)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80) + 16;
  v4 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = swift_allocObject(&unk_10044FD28, 88, 7);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  *(_QWORD *)(v5 + 80) = *((_QWORD *)v2 + 6);
  *(_OWORD *)(v5 + 48) = v7;
  *(_OWORD *)(v5 + 64) = v8;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v0 + 40) = *v2;
  *(_OWORD *)(v0 + 56) = v2[1];
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 6);
  sub_1000595EC(v0 + 40);
  sub_1000595EC(v0 + 56);
  sub_10003A434(v9, v10);
  v11 = sub_1000C66C8(v1, (uint64_t)&unk_100493368, v5);
  swift_release(v11);
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9MusicCore18PlaybackController_isErrorAlertPresented] = 0;

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100167C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100167CAC, 0, 0);
}

uint64_t sub_100167CAC()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(*(_QWORD *)(v0 + 24) + 40);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc(v1[1]);
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_100167D30;
    return v4();
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100167D30()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return swift_task_switch(sub_100167D84, 0, 0);
}

uint64_t sub_100167D84()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double PlaybackController.engine(_:requiresAuthorizationToPlay:reason:authorizationHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  _QWORD *v10;
  id v11;
  id v12;
  double result;

  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v10 = (_QWORD *)swift_allocObject(&unk_10044F5F8, 56, 7);
  v10[2] = a3;
  v10[3] = v5;
  v10[4] = a2;
  v10[5] = a4;
  v10[6] = a5;
  v11 = v5;
  v12 = a2;
  swift_retain(a5);
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10016BD6C, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

void sub_100167F24(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD, _QWORD), void *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void (*v42)(_QWORD, _QWORD);
  void *v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(__int128 *, uint64_t, uint64_t);
  void *v73;
  id v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  id v88;
  id v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(_QWORD *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(_QWORD, _QWORD);
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  id v123;
  _QWORD v124[3];
  __int128 v125;
  void (*v126)(_QWORD, _QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(_QWORD, _QWORD);
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;

  v123 = a3;
  v9 = type metadata accessor for UUID(0);
  v120 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v118 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v119 - 8);
  v15 = __chkstk_darwin(v119);
  v117 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v106 - v18;
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v20 = type metadata accessor for Logger(0, v17);
  v21 = sub_1000086B4(v20, (uint64_t)static Logger.playbackController);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v122 = v9;
  v121 = v11;
  v116 = v14;
  if (v24)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v125 = v26;
    *(_DWORD *)v25 = 136446210;
    v124[0] = a1;
    type metadata accessor for MPCExplicitContentAuthorizationReason(0);
    v28 = (char *)String.init<A>(describing:)(v124, v27);
    *(_QWORD *)(v25 + 4) = sub_100019400(v28, v29, (uint64_t *)&v125);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "requiresAuthorizationToPlay with reason=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  if (a1 == 2)
  {
    v30 = objc_msgSend(v123, "modelGenericObject");
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, "flattenedGenericObject");

      if (v32)
      {
        v33 = MPModelObject.bestIdentifier(for:)(2, 1u);
        v35 = v34;
      }
      else
      {
        v33 = 0;
        v35 = 0;
      }
      sub_100168FA4(v33, v35, a4, (uint64_t)a5);

      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    return;
  }
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v36 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10038E348);
  v38 = swift_getKeyPath(&unk_10038E370);
  static Published.subscript.getter(&v125, v36, KeyPath, v38);
  swift_release(KeyPath);
  swift_release(v38);
  v39 = v131;
  v40 = v133;
  v41 = v134;
  v114 = v127;
  v113 = v128;
  v112 = v135;
  v111 = v136;
  if (!v131 || !v133)
  {
    v110 = a2;
    v107 = a4;
    v108 = v133;
    v115 = v131;
    v109 = v134;
    v123 = a5;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v49 = v116;
    v50 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    v51 = v117;
    v52 = v119;
    v50(v117, v19, v119);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v53 = qword_1004A1DA0;
    v54 = (id)qword_1004A1DA0;
    v55 = v118;
    static Locale.current.getter(v54);
    v106 = String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, v53, v55, 0, 0, 256);
    v57 = v56;
    v58 = *(void (**)(char *, uint64_t))(v49 + 8);
    v58(v19, v52);
    v59 = v121;
    v60 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v61 = UUID.uuidString.getter(v60);
    v63 = v62;
    (*(void (**)(_QWORD *, uint64_t))(v120 + 8))(v59, v122);
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000003FLL, 0x80000001003B0800);
    v50(v51, v19, v52);
    v64 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v65 = String.init(localized:table:bundle:locale:comment:)(v51, 0, 0, v64, v55, 0, 0, 256);
    v67 = v66;
    v58(v19, v52);
    v68 = sub_100005574(&qword_100493240);
    v69 = swift_allocObject(v68, 88, 7);
    *(_OWORD *)(v69 + 16) = xmmword_100384A80;
    *(_QWORD *)(v69 + 32) = v61;
    *(_QWORD *)(v69 + 40) = v63;
    *(_QWORD *)(v69 + 48) = v106;
    *(_QWORD *)(v69 + 56) = v57;
    *(_BYTE *)(v69 + 64) = 2;
    *(_QWORD *)(v69 + 72) = 0;
    *(_QWORD *)(v69 + 80) = 0;
    v70 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v71 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    sub_10000ABC8((_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v70);
    *(_QWORD *)&v125 = v65;
    *((_QWORD *)&v125 + 1) = v67;
    v126 = 0;
    v127 = 0;
    LOBYTE(v128) = 0;
    v129 = v69;
    v130 = 0;
    LOBYTE(v131) = 0;
    v72 = *(void (**)(__int128 *, uint64_t, uint64_t))(v71 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72(&v125, v70, v71);
    sub_10016B358(&v125);
    v107(0, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v106 = v130;
  v42 = v132;
  v43 = (void *)objc_opt_self(NSUserDefaults);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = objc_msgSend(v43, "standardUserDefaults");
  v124[0] = 0xD000000000000012;
  v124[1] = 0x80000001003B3330;
  v45 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)v124, (uint64_t)&type metadata for String, v45, &v125);

  v107 = v42;
  if (!v127)
  {
    sub_100008758((uint64_t)&v125, &qword_100491B90);
    goto LABEL_22;
  }
  v46 = sub_100005574(&qword_10048E158);
  if (!swift_dynamicCast(v124, &v125, (char *)&type metadata for Any + 8, v46, 6))
  {
LABEL_22:
    v48 = v123;
    v47 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  v47 = (_QWORD *)v124[0];
  v48 = v123;
LABEL_23:
  v73 = v48;
  v74 = objc_msgSend(v48, "cloudUniversalLibraryID");
  if (v74)
  {
    v108 = v40;

    v75 = objc_msgSend(v73, "cloudUniversalLibraryID");
    if (!v75)
      goto LABEL_34;
    v76 = v75;
    v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v79 = v78;

    LOBYTE(v76) = sub_1000AA2B8(v77, v79, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v108;
    if ((v76 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a4(1, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v115 = v39;
  v109 = v41;
  v110 = a2;
  String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
  v80 = v116;
  v81 = v117;
  v82 = v119;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v117, v19, v119);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v83 = qword_1004A1DA0;
  v84 = (id)qword_1004A1DA0;
  v85 = v118;
  static Locale.current.getter(v84);
  v117 = (char *)String.init(localized:table:bundle:locale:comment:)(v81, 0, 0, v83, v85, 0, 0, 256);
  v118 = v86;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v19, v82);
  v87 = (_QWORD *)swift_allocObject(&unk_10044FA78, 40, 7);
  v88 = v123;
  v87[2] = v123;
  v87[3] = a4;
  v87[4] = a5;
  v89 = v88;
  swift_retain(a5);
  v90 = v121;
  v91 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v116 = UUID.uuidString.getter(v91);
  v119 = v92;
  v93 = *(void (**)(_QWORD *, uint64_t))(v120 + 8);
  v94 = v122;
  v93(v90, v122);
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  v120 = static String.cancelButtonTitle;
  v123 = (id)qword_1004A2C90;
  v95 = swift_allocObject(&unk_10044FAA0, 32, 7);
  *(_QWORD *)(v95 + 16) = a4;
  *(_QWORD *)(v95 + 24) = a5;
  swift_retain(a5);
  swift_bridgeObjectRetain();
  v96 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v97 = UUID.uuidString.getter(v96);
  v99 = v98;
  v93(v90, v94);
  v100 = sub_100005574(&qword_100493240);
  v101 = swift_allocObject(v100, 144, 7);
  *(_OWORD *)(v101 + 16) = xmmword_100384A60;
  v102 = v119;
  *(_QWORD *)(v101 + 32) = v116;
  *(_QWORD *)(v101 + 40) = v102;
  v103 = v118;
  *(_QWORD *)(v101 + 48) = v117;
  *(_QWORD *)(v101 + 56) = v103;
  *(_BYTE *)(v101 + 64) = 2;
  *(_QWORD *)(v101 + 72) = &unk_100493250;
  *(_QWORD *)(v101 + 80) = v87;
  *(_QWORD *)(v101 + 88) = v97;
  *(_QWORD *)(v101 + 96) = v99;
  v104 = v123;
  *(_QWORD *)(v101 + 104) = v120;
  *(_QWORD *)(v101 + 112) = v104;
  *(_BYTE *)(v101 + 120) = 2;
  *(_QWORD *)(v101 + 128) = &unk_100493260;
  *(_QWORD *)(v101 + 136) = v95;
  v105 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  v122 = *(_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v121 = sub_10000ABC8((_QWORD *)(v110 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v122);
  *(_QWORD *)&v125 = v106;
  *((_QWORD *)&v125 + 1) = v115;
  v126 = v107;
  v127 = v40;
  LOBYTE(v128) = 0;
  v129 = v101;
  v130 = 0;
  LOBYTE(v131) = 0;
  v120 = *(_QWORD *)(v105 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain(v87);
  swift_bridgeObjectRetain();
  swift_retain(v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(__int128 *, uint64_t, uint64_t))v120)(&v125, v122, v105);
  swift_release(v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n(v40, 2);
  swift_bridgeObjectRelease_n(v115, 2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10016B358(&v125);
}

uint64_t sub_100168B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch(sub_100168BB8, 0, 0);
}

uint64_t sub_100168BB8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  id v15;
  char *v17;
  _QWORD v18[4];

  v1 = objc_msgSend(*(id *)(v0 + 64), "cloudUniversalLibraryID");
  if (!v1)
    goto LABEL_14;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = (void *)objc_opt_self(NSUserDefaults);
  v7 = objc_msgSend(v6, "standardUserDefaults");
  *(_QWORD *)(v0 + 48) = 0xD000000000000012;
  *(_QWORD *)(v0 + 56) = 0x80000001003B3330;
  v8 = sub_10000D478();
  NSUserDefaults.subscript.getter(v0 + 48, (uint64_t)&type metadata for String, v8, (_OWORD *)(v0 + 16));

  if (!*(_QWORD *)(v0 + 40))
  {
    sub_100008758(v0 + 16, &qword_100491B90);
    goto LABEL_6;
  }
  v9 = sub_100005574(&qword_10048E158);
  if (!swift_dynamicCast(v0 + 48, v0 + 16, (char *)&type metadata for Any + 8, v9, 6))
  {
LABEL_6:
    v10 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_7;
  }
  v10 = *(char **)(v0 + 48);
LABEL_7:
  v17 = v10;
  v11 = *((_QWORD *)v10 + 2);
  if (v11 >= 0x3E8)
    sub_100040628(0, v11 - 999);
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_10003DE28(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v13 = *((_QWORD *)v10 + 2);
  v12 = *((_QWORD *)v10 + 3);
  if (v13 >= v12 >> 1)
    v10 = sub_10003DE28((char *)(v12 > 1), v13 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v13 + 1;
  v14 = &v10[16 * v13];
  *((_QWORD *)v14 + 4) = v3;
  *((_QWORD *)v14 + 5) = v5;
  v15 = objc_msgSend(v6, "standardUserDefaults", v17);
  v18[3] = sub_100005574(&qword_10048E158);
  v18[0] = v10;
  *(_QWORD *)(v0 + 16) = 0xD000000000000012;
  *(_QWORD *)(v0 + 24) = 0x80000001003B3330;
  NSUserDefaults.subscript.setter((uint64_t)v18, v0 + 16, (uint64_t)&type metadata for String, v8);

LABEL_14:
  (*(void (**)(uint64_t, _QWORD))(v0 + 72))(1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100168DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_100168E0C, 0, 0);
}

uint64_t sub_100168E0C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100168F4C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_100168FA4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  const char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t inited;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void *, char);
  uint64_t v74;
  uint64_t v75;
  void (**v76)(void *, char);
  uint64_t v77;
  uint64_t v78;
  void *v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_QWORD, _QWORD);
  char v96[64];
  uint64_t v97[3];
  uint64_t v98;
  void *v99;

  v5 = v4;
  v93 = a4;
  v9 = sub_100005574(&qword_10048D510);
  v10 = __chkstk_darwin(v9);
  v89 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v86 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v88 = (char *)&v86 - v20;
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v94 = type metadata accessor for Logger(0, v19);
  sub_1000086B4(v94, (uint64_t)static Logger.playbackController);
  v21 = swift_bridgeObjectRetain_n(a2, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  v24 = os_log_type_enabled(v22, v23);
  v95 = a3;
  v91 = v14;
  v92 = v5;
  v90 = v15;
  v87 = v18;
  if (v24)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v97[0] = v26;
    *(_DWORD *)v25 = 136446210;
    swift_bridgeObjectRetain();
    v27 = (char *)Optional<A>.description.getter(a1, a2);
    v29 = v28;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 4) = sub_100019400(v27, v29, v97);
    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Presenting Age Verification with model identifier=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v30 = a1;
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v31 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10038E348);
  v33 = swift_getKeyPath(&unk_10038E370);
  static Published.subscript.getter(v97, v31, KeyPath, v33);
  swift_release(KeyPath);
  swift_release(v33);
  v34 = BYTE1(v97[0]);
  v35 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v34 != 1)
  {
    v46 = *(_QWORD *)(v92 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v47 = *(_QWORD *)(v92 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
    sub_10000ABC8((_QWORD *)(v92 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator), v46);
    sub_1000DFFDC((uint64_t)v97);
    LOBYTE(v98) = 0;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v47 + 8))(v97, v46, v47);
    sub_10016B358(v97);
    if (qword_10048C870 != -1)
      swift_once(&qword_10048C870, sub_10016A26C);
    v48 = sub_1000086B4(v94, (uint64_t)qword_1004930B0);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter(v49);
    if (!os_log_type_enabled(v49, v50))
      goto LABEL_26;
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    v52 = "Device is offline. Age Verification cannot proceed. Displaying fallback alert instead.";
    goto LABEL_25;
  }
  if (qword_10048CF38 != -1)
    swift_once(&qword_10048CF38, sub_1001F0920);
  v36 = static ExplicitRestrictionsController.shared;
  v37 = swift_beginAccess(static ExplicitRestrictionsController.shared + 24, v97, 0, 0);
  v38 = *(void **)(v36 + 24);
  v39 = v91;
  v40 = v90;
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v90 + 56))(v13, 1, 1, v91, v37);
    goto LABEL_21;
  }
  v41 = v30;
  v42 = objc_msgSend(v38, "verificationURL", v37.n128_f64[0]);
  if (v42)
  {
    v43 = v42;
    v44 = (uint64_t)v89;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v42);

    v45 = 0;
  }
  else
  {
    v45 = 1;
    v44 = (uint64_t)v89;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v44, v45, 1, v39);
  sub_1000149A8(v44, (uint64_t)v13, &qword_10048D510);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v13, 1, v39) == 1)
  {
LABEL_21:
    sub_100008758((uint64_t)v13, &qword_10048D510);
    if (qword_10048C870 != -1)
      swift_once(&qword_10048C870, sub_10016A26C);
    v53 = sub_1000086B4(v94, (uint64_t)qword_1004930B0);
    v49 = Logger.logObject.getter(v53);
    v50 = static os_log_type_t.error.getter(v49);
    if (!os_log_type_enabled(v49, v50))
      goto LABEL_26;
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    v52 = "accountVerificationURL is missing. Age Verification cannot proceed.";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v49, v50, v52, v51, 2u);
    swift_slowDealloc(v51, -1, -1);
LABEL_26:

    if (v95)
      v95(0, 0);
    return;
  }
  v54 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v55 = v88;
  v54(v88, v13, v39);
  v56 = qword_10048C870;
  if (a2)
  {
    swift_bridgeObjectRetain();
    if (v56 != -1)
      swift_once(&qword_10048C870, sub_10016A26C);
    v57 = sub_1000086B4(v94, (uint64_t)qword_1004930B0);
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "modelObjectIdentifier parameters found for age verification context", v60, 2u);
      swift_slowDealloc(v60, -1, -1);
    }

    v61 = sub_100005574(&qword_1004904C8);
    inited = swift_initStackObject(v61, v96);
    *(_OWORD *)(inited + 16) = xmmword_100384A80;
    *(_QWORD *)(inited + 32) = 0x64496D616461;
    *(_QWORD *)(inited + 40) = 0xE600000000000000;
    *(_QWORD *)(inited + 48) = v41;
    *(_QWORD *)(inited + 56) = a2;
    v63 = sub_100098C3C(inited);
    v64 = (uint64_t)v87;
    URL.parametrize(_:)(v63, (uint64_t)v87);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v39);
    v54(v55, (char *)v64, v39);
  }
  else
  {
    if (qword_10048C870 != -1)
      swift_once(&qword_10048C870, sub_10016A26C);
    v65 = sub_1000086B4(v94, (uint64_t)qword_1004930B0);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "modelObjectIdentifier parameters missing for age verification context", v68, 2u);
      swift_slowDealloc(v68, -1, -1);
    }

  }
  v69 = v55;
  v70 = (char *)objc_msgSend(objc_allocWithZone((Class)_s22AgeVerificationWrapperCMa()), "init");
  v71 = swift_allocObject(&unk_10044FA28, 24, 7);
  v72 = v92;
  swift_unknownObjectWeakInit(v71 + 16, v92);
  v73 = (void (*)(void *, char))swift_allocObject(&unk_10044FA50, 40, 7);
  v74 = (uint64_t)v95;
  v75 = v93;
  *((_QWORD *)v73 + 2) = v95;
  *((_QWORD *)v73 + 3) = v75;
  *((_QWORD *)v73 + 4) = v71;
  v76 = (void (**)(void *, char))&v70[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  v77 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  v78 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion
                      + 8];
  *v76 = sub_10016C9CC;
  v76[1] = v73;
  sub_10003A434(v74, v75);
  sub_10003A5C8(v77, v78);
  v79 = *(void **)(v72 + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper);
  *(_QWORD *)(v72 + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper) = v70;
  v80 = v70;

  v81 = (_QWORD *)(v72 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
  v82 = *(_QWORD *)(v72 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
  v83 = *(_QWORD *)(v72 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 32);
  sub_10000ABC8(v81, v82);
  v84 = *(void (**)(char *, char *, uint64_t, uint64_t))(v83 + 16);
  v85 = v80;
  v84(v69, v85, v82, v83);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v69, v39);
}

void sub_1001698D8(id a1, char a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  char *v12;
  void *v13;
  uint64_t v14;
  char v15[24];

  if (a3)
    a3(a2 & 1, 0);
  if (a1)
  {
    v7 = a5 + 16;
    swift_beginAccess(a5 + 16, v15, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = *(void **)(Strong + OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper);
      v11 = v10;

      if (v10)
      {

        if (a1 == v11)
        {
          swift_beginAccess(v7, &v14, 0, 0);
          v12 = (char *)swift_unknownObjectWeakLoadStrong(v7);
          if (v12)
          {
            v13 = *(void **)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper];
            *(_QWORD *)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_ageVerificationWrapper] = 0;

          }
        }
      }
    }
  }
}

uint64_t PlaybackController.displayAgeVerification(modelObject:completion:)(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    a1 = MPModelObject.bestIdentifier(for:)(2, 1u);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  sub_100168FA4(a1, v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t PlaybackController.displayAgeVerification(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch(sub_100169A88, v4, v5);
}

uint64_t sub_100169A88(uint64_t a1)
{
  int8x16_t *v1;
  uint64_t v2;
  int8x16_t *v3;
  int8x16_t **v4;
  int8x16_t v6;

  v6 = v1[1];
  v2 = static MainActor.shared.getter(a1);
  v1[4].i64[0] = v2;
  v3 = (int8x16_t *)swift_task_alloc(32);
  v1[4].i64[1] = (uint64_t)v3;
  v3[1] = vextq_s8(v6, v6, 8uLL);
  v4 = (int8x16_t **)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v1[5].i64[0] = (uint64_t)v4;
  *v4 = v1;
  v4[1] = (int8x16_t *)sub_100169B48;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x80000001003B3160, sub_10016BD70, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100169B48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_100169BBC;
  }
  else
  {
    v7 = v2[9];
    swift_release(v2[8]);
    swift_task_dealloc(v7);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_10003C450;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100169BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100169C04(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = sub_100005574((uint64_t *)&unk_100491650);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = a3[3];
  v9 = a3[4];
  sub_10000ABC8(a3, v8);
  v10 = dispatch thunk of MusicItem.id.getter(v8, v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_10044FA00, v14 + v7, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_100168FA4(v10, v12, (void (*)(_QWORD, _QWORD))sub_10016C91C, v15);
  swift_release(v15);
  return swift_bridgeObjectRelease();
}

void PlaybackController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.PlaybackController", 28, "init()", 6, 0);
  __break(1u);
}

id sub_100169DF4()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  void (*v3)(_QWORD, _QWORD);
  uint64_t v4;
  objc_super v6;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = *(void (**)(_QWORD, _QWORD))&v0[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion];
  if (v3)
  {
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion
                      + 8];
    swift_retain(v4);
    v3(0, 0);
    sub_10003A5C8((uint64_t)v3, v4);
  }
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

double sub_100169F1C(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;
  id v9;
  id v10;
  double result;

  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v8 = (_QWORD *)swift_allocObject(&unk_10044F960, 48, 7);
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a1;
  swift_retain(a3);
  v9 = a4;
  v10 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10016C7EC, (uint64_t)v8);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_100169FB8(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  id v9;
  _QWORD v10[5];
  _QWORD *v11;

  v1 = (_QWORD *)(result
                + OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion);
  v2 = *(_QWORD *)(result
                 + OBJC_IVAR____TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper_completion);
  if (v2)
  {
    v3 = (void *)result;
    v4 = v1[1];
    *v1 = 0;
    v1[1] = 0;
    swift_retain(v4);
    sub_10003A5C8(v2, v4);
    v5 = objc_msgSend((id)objc_opt_self(ICAgeVerificationManager), "defaultManager");
    v6 = (_QWORD *)swift_allocObject(&unk_10044F910, 40, 7);
    v6[2] = v2;
    v6[3] = v4;
    v6[4] = v3;
    v10[4] = sub_10016C794;
    v11 = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100093320;
    v10[3] = &unk_10044F928;
    v7 = _Block_copy(v10);
    v8 = v11;
    sub_10003A434(v2, v4);
    v9 = v3;
    objc_msgSend(v5, "getAgeVerificationStateWithCompletion:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);

    return sub_10003A5C8(v2, v4);
  }
  return result;
}

uint64_t sub_10016A1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.playbackController);
  sub_1000086B4(v2, (uint64_t)static Logger.playbackController);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000012, 0x800000010038E270);
}

uint64_t static Logger.playbackController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F05D8(&qword_10048C868, (uint64_t)static Logger.playbackController, (uint64_t)sub_10016A1D0, a1);
}

uint64_t sub_10016A26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_1004930B0);
  sub_1000086B4(v2, (uint64_t)qword_1004930B0);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x6669726556656741, 0xEF6E6F6974616369);
}

uint64_t sub_10016A2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.siriIntents);
  sub_1000086B4(v2, (uint64_t)static Logger.siriIntents);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x65746E4969726953, 0xEB0000000073746ELL);
}

uint64_t static Logger.siriIntents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F05D8(&qword_10048C878, (uint64_t)static Logger.siriIntents, (uint64_t)sub_10016A2EC, a1);
}

uint64_t sub_10016A384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_10016A3A0, 0, 0);
}

uint64_t sub_10016A3A0()
{
  uint64_t v0;
  void (*v1)(_QWORD);

  v1 = *(void (**)(_QWORD))(v0 + 16);
  if (v1)
    v1(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016A3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100005574((uint64_t *)&unk_100493720);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10048D510);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v4[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[9] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v4[10] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[11] = swift_task_alloc(v10);
  v4[12] = swift_task_alloc(v10);
  return swift_task_switch(sub_10016A498, 0, 0);
}

uint64_t sub_10016A498()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(_QWORD, __n128);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;

  v1 = objc_msgSend(*(id *)(v0 + 16), "action");
  v2 = objc_msgSend(v1, "type");

  if (v2 == (id)2)
  {
    v3 = objc_msgSend(*(id *)(v0 + 16), "action");
    v4 = objc_msgSend(v3, "URLString");

    if (v4)
    {
      v5 = *(_QWORD *)(v0 + 64);
      v6 = *(_QWORD *)(v0 + 72);
      v7 = *(_QWORD *)(v0 + 56);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v10 = v9;

      URL.init(string:)(v8, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) != 1)
      {
        v27 = *(_QWORD *)(v0 + 88);
        v26 = *(_QWORD *)(v0 + 96);
        v29 = *(_QWORD *)(v0 + 72);
        v28 = *(_QWORD *)(v0 + 80);
        v30 = *(_QWORD *)(v0 + 64);
        v31 = *(_QWORD *)(v0 + 48);
        v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
        v32(v26, *(_QWORD *)(v0 + 56), v30);
        v33 = type metadata accessor for TaskPriority(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 1, 1, v33);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v26, v30);
        v34 = *(unsigned __int8 *)(v29 + 80);
        v35 = (v34 + 32) & ~v34;
        v36 = swift_allocObject(&unk_10044FC08, v35 + v28, v34 | 7);
        *(_QWORD *)(v36 + 16) = 0;
        *(_QWORD *)(v36 + 24) = 0;
        v32(v36 + v35, v27, v30);
        v37 = sub_1000C66E4(v31, (uint64_t)&unk_1004932D8, v36);
        v38 = swift_release(v37);
        (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v26, v30, v38);
        v21 = *(void (**)(_QWORD, __n128))(v0 + 24);
        if (!v21)
          goto LABEL_7;
        goto LABEL_6;
      }
      sub_100008758(*(_QWORD *)(v0 + 56), &qword_10048D510);
    }
  }
  v11 = *(_QWORD *)(v0 + 48);
  v12 = *(void **)(v0 + 16);
  v13 = objc_msgSend(objc_allocWithZone((Class)ICStoreDialogResponseHandler), "init");
  v14 = objc_msgSend((id)objc_opt_self(ICUserIdentity), "activeAccount");
  v15 = objc_msgSend(objc_allocWithZone((Class)ICStoreRequestContext), "initWithIdentity:", v14);

  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject(&unk_10044FBE0, 56, 7);
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = v13;
  v17[5] = v12;
  v17[6] = v15;
  v18 = v12;
  v19 = sub_1000C6850(v11, (uint64_t)&unk_1004932C8, (uint64_t)v17);
  v20 = swift_release(v19);
  v21 = *(void (**)(_QWORD, __n128))(v0 + 24);
  if (v21)
LABEL_6:
    v21(*(_QWORD *)(v0 + 40), v20);
LABEL_7:
  v22 = *(_QWORD *)(v0 + 88);
  v24 = *(_QWORD *)(v0 + 48);
  v23 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016A770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch(sub_10016A788, 0, 0);
}

uint64_t sub_10016A788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 136) = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10016A800, v2, v3);
}

uint64_t sub_10016A800()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = objc_msgSend(*(id *)(v0 + 136), "sharedApplication", swift_release(*(_QWORD *)(v0 + 144)).n128_f64[0]);
  return swift_task_switch(sub_10016A858, 0, 0);
}

uint64_t sub_10016A858@<X0>(NSURL *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;

  v2 = v1;
  v3 = v1 + 2;
  v4 = (void *)v2[19];
  URL._bridgeToObjectiveC()(a1);
  v6 = v5;
  v2[20] = v5;
  sub_100098E90((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100006924((unint64_t *)&qword_1004932E0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100386F78);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v2[21] = isa;
  swift_bridgeObjectRelease();
  v2[7] = v2 + 22;
  v2[2] = v2;
  v2[3] = sub_10016A97C;
  v8 = swift_continuation_init(v3, 0);
  v2[10] = _NSConcreteStackBlock;
  v2 += 10;
  v2[1] = 0x40000000;
  v2[2] = sub_10016AA10;
  v2[3] = &unk_10044FC20;
  v2[4] = v8;
  objc_msgSend(v4, "openURL:options:completionHandler:", v6, isa, v2);
  return swift_continuation_await(v3);
}

uint64_t sub_10016A97C()
{
  return swift_task_switch(sub_10016A9C8, 0, 0);
}

uint64_t sub_10016A9C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  **(_BYTE **)(v0 + 120) = *(_BYTE *)(v0 + 176);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016AA10(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_10016AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a1;
  v6[16] = a4;
  return swift_task_switch(sub_10016AA40, 0, 0);
}

uint64_t sub_10016AA40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void **)(v0 + 128);
  v4 = objc_msgSend(*(id *)(v0 + 136), "action");
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 56) = v0 + 168;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_10016AB0C;
  v5 = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_10016ABFC;
  v6[3] = &unk_10044FC38;
  v6[4] = v5;
  objc_msgSend(v3, "handleButtonAction:usingRequestContext:withCompletionHandler:", v4, v2, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_10016AB0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 160) = v1;
  if (v1)
    v2 = sub_10016ABA8;
  else
    v2 = sub_10016AB6C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10016AB6C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 168);

  **(_BYTE **)(v0 + 120) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10016ABA8(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  **(_BYTE **)(v1 + 120) = 2;
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_10016ABFC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100005574((uint64_t *)&unk_1004911F0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    swift_continuation_throwingResume(v3);
  }
}

void sub_10016AC7C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038E1D0);
  v5 = swift_getKeyPath(&unk_10038E1F8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_10016ACF8(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_10017258C(v1);
}

void sub_10016AD28(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_10017258C(v1);
}

unint64_t sub_10016AD54()
{
  unint64_t result;

  result = qword_1004930E8;
  if (!qword_1004930E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.PlaybackError, &type metadata for Player.PlaybackError);
    atomic_store(result, &qword_1004930E8);
  }
  return result;
}

unint64_t sub_10016AD98()
{
  unint64_t result;

  result = qword_1004930F8;
  if (!qword_1004930F8)
  {
    result = swift_getWitnessTable(&unk_10038E308, &type metadata for PlaybackController.CommandError);
    atomic_store(result, (unint64_t *)&qword_1004930F8);
  }
  return result;
}

uint64_t sub_10016ADDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a5);
  }
  return result;
}

void sub_10016AE0C(id a1, char a2)
{
  if (a2 == 2)
  {
LABEL_4:
    sub_10016AE30(a1);
    return;
  }
  if (a2 != 1)
  {
    if (a2)
      return;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease(a1);
}

void sub_10016AE30(id a1)
{
  if ((unint64_t)a1 >= 5)

}

id sub_10016AE40(id result, char a2)
{
  if (a2 == 2)
    return sub_10016AE64(result);
  if (a2 != 1)
  {
    if (a2)
      return result;
    return sub_10016AE64(result);
  }
  return (id)swift_bridgeObjectRetain();
}

id sub_10016AE64(id result)
{
  if ((unint64_t)result >= 5)
    return result;
  return result;
}

uint64_t sub_10016AE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[10] = a6;
  v7[11] = v6;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  v7[5] = a1;
  v8 = type metadata accessor for MainActor(0);
  v7[12] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[13] = v9;
  v7[14] = v10;
  return swift_task_switch(sub_10016AEEC, v9, v10);
}

uint64_t sub_10016AEEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32[2];

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  *(_QWORD *)(v0 + 120) = *v1;
  if (!v2)
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v22 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v22, 0, 0);
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 3;
    swift_willThrow(v24);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v25);
  }
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(void **)(v0 + 40);
  swift_retain(v2);
  v7 = sub_100161990(v5, v4, v3);
  *(_QWORD *)(v0 + 128) = v7;
  if (!v7[2])
  {
    swift_release(*(_QWORD *)(v0 + 96));
    v26 = sub_10016AD98();
    swift_allocError(&type metadata for PlaybackController.CommandError, v26, 0, 0);
    *(_QWORD *)v27 = v7;
    *(_BYTE *)(v27 + 8) = 1;
    swift_willThrow(v28);
    v25 = swift_release(v2);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v25);
  }
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v8 = *(_QWORD *)(v0 + 56);
  v9 = type metadata accessor for Logger(0, v6);
  sub_1000086B4(v9, (uint64_t)static Logger.playbackController);
  swift_bridgeObjectRetain_n(v8, 2);
  v10 = swift_bridgeObjectRetain_n(v7, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(char **)(v0 + 56);
  if (v13)
  {
    v15 = *(char **)(v0 + 48);
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v32[0] = v17;
    *(_DWORD *)v16 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v16 + 4) = sub_100019400(v15, v14, v32);
    swift_bridgeObjectRelease_n(v14, 3);
    *(_WORD *)(v16 + 12) = 2082;
    swift_bridgeObjectRetain();
    v18 = sub_100005574(&qword_100493120);
    v19 = (char *)Array.description.getter(v7, v18);
    v21 = v20;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v16 + 14) = sub_100019400(v19, v21, v32);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease_n(v7, 2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Intent id=%{public}s) — Performing the following commands: %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 56), 2);
    swift_bridgeObjectRelease_n(v7, 2);
  }

  v30 = *(_QWORD *)(v0 + 40);
  v31 = (_QWORD *)swift_task_alloc(dword_100493164);
  *(_QWORD *)(v0 + 136) = v31;
  *v31 = v0;
  v31[1] = sub_10016B220;
  return PlaybackController.perform(_:options:route:intent:)((uint64_t)v7, 0x10000, *(_QWORD *)(v0 + 80), v30);
}

uint64_t sub_10016B220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 136);
  *(_QWORD *)(*(_QWORD *)v2 + 144) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_10016B2E4;
  }
  else
  {
    v9 = v4[16];
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v9);
    v6 = v4[13];
    v7 = v4[14];
    v8 = sub_10016B2A4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_10016B2A4()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 120);
  swift_release(*(_QWORD *)(v0 + 96));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10016B2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(v2);
  v3 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_10016B32C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_errorRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

_QWORD *sub_10016B358(_QWORD *a1)
{
  destroy for PresentationKind(a1);
  return a1;
}

uint64_t sub_10016B384(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  _BYTE v27[56];
  _BYTE v28[56];
  uint64_t v29[8];

  v3 = v2;
  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v5 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v5, (uint64_t)static Logger.sharedListening);
  v6 = a1;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v29[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = v6;
    v12 = objc_msgSend(v11, "description");
    v13 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    *(_QWORD *)(v9 + 4) = sub_100019400(v13, v15, v29);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received MPCSharedListeningEvent=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  v16 = v6;
  sub_1001D71B8(v16, (uint64_t)v27);
  result = sub_1000149A8((uint64_t)v27, (uint64_t)v28, (uint64_t *)&unk_1004933A0);
  if (v28[48] != 255)
  {
    sub_10016D138((uint64_t)v28, (uint64_t)v29);
    v18 = (_QWORD *)(v3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator);
    v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_coordinator + 24);
    v20 = v18[4];
    sub_10000ABC8(v18, v19);
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    v22 = objc_msgSend(v16, "participant");
    v23 = objc_msgSend(v22, "externalIdentifier");

    v24 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    GroupActivitiesManager.postEvent(_:participantID:)((uint64_t)v29, v24, v26);
    swift_release(v21);
    swift_bridgeObjectRelease();
    return sub_10016D174((uint64_t)v27);
  }
  return result;
}

double sub_10016B614(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v8 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v8, (uint64_t)static Logger.sharedListening);
  swift_errorRetain(a1);
  v9 = swift_errorRetain(a1);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v25 = a1;
    v26 = v13;
    *(_DWORD *)v12 = 136446210;
    swift_errorRetain(a1);
    v14 = sub_100005574(&qword_100494190);
    v15 = (char *)String.init<A>(describing:)(&v25, v14);
    *(_QWORD *)(v12 + 4) = sub_100019400(v15, v16, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Receiving didEndSharedListeningSessionWithError=%{public}s", (uint8_t *)v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  type metadata accessor for MainActor(0);
  v18 = v2;
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_10044FDA0, 40, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v18;
  v21 = sub_1000C66A8((uint64_t)v7, (uint64_t)&unk_100493398, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  if (a1)
  {
    sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
    v23 = swift_allocObject(&unk_10044FDC8, 24, 7);
    *(_QWORD *)(v23 + 16) = v18;
    v24 = v18;
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10016D130, v23);
    *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  }
  return result;
}

void sub_10016B8BC(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  id v38;
  id v39;
  id v40;
  __int128 v41;
  __int128 v42;

  v3 = v2;
  if (qword_10048C868 != -1)
    swift_once(&qword_10048C868, sub_10016A1D0);
  v5 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v5, (uint64_t)static Logger.playbackController);
  swift_errorRetain(a1);
  v6 = swift_errorRetain(a1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v40 = a1;
    *(_QWORD *)&v41 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_errorRetain(a1);
    v11 = sub_100005574(&qword_100494190);
    v12 = (char *)String.init<A>(describing:)(&v40, v11);
    *(_QWORD *)(v9 + 4) = sub_100019400(v12, v13, (uint64_t *)&v41);
    swift_bridgeObjectRelease();
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "didPauseForLeaseEndWithError with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    if (!a1)
      return;
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    if (!a1)
      return;
  }
  v14 = (void *)_convertErrorToNSError(_:)(a1);
  v15 = objc_msgSend(v14, "userInfo");
  v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorUserInfoKeyLeaseStatus);
  if (*(_QWORD *)(v16 + 16) && (v19 = sub_10009ABAC(v17, v18), (v20 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v16 + 56) + 32 * v19, (uint64_t)&v41);
  }
  else
  {
    v41 = 0u;
    v42 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v42 + 1))
  {
    v21 = sub_1000087DC(0, &qword_100493378, ICMusicSubscriptionLeaseStatus_ptr);
    if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
    {

      return;
    }
    v22 = v40;
    v23 = objc_msgSend(v40, "stateReasonDialog");
    if (!v23)
    {

      return;
    }
    v24 = v23;
    v25 = objc_msgSend(v14, "userInfo");
    v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v25, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCErrorUserInfoKeyMetricsDictionary);
    if (*(_QWORD *)(v26 + 16) && (v29 = sub_10009ABAC(v27, v28), (v30 & 1) != 0))
    {
      sub_10000684C(*(_QWORD *)(v26 + 56) + 32 * v29, (uint64_t)&v41);
    }
    else
    {
      v41 = 0u;
      v42 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v42 + 1))
    {
      v31 = sub_100005574((uint64_t *)&unk_100493380);
      if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v31, 6) & 1) != 0)
      {
        v32 = v40;
        if (!*((_QWORD *)v40 + 2) || (v33 = sub_10009ABAC(0x736E6F6974706FLL, 0xE700000000000000), (v34 & 1) == 0))
        {

          swift_bridgeObjectRelease();
          return;
        }
        sub_10000684C(v32[7] + 32 * v33, (uint64_t)&v41);
        v35 = sub_100005574(&qword_10048E158);
        if ((swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v35, 6) & 1) != 0)
        {
          v36 = v40;
          sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
          v37 = (_QWORD *)swift_allocObject(&unk_10044FD50, 48, 7);
          v37[2] = v3;
          v37[3] = v24;
          v37[4] = v32;
          v37[5] = v36;
          v38 = v3;
          v39 = v24;
          static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_10016D028, (uint64_t)v37);

          swift_release(v37);
          return;
        }

        swift_bridgeObjectRelease();
      }
      else
      {

      }
      return;
    }

  }
  sub_100008758((uint64_t)&v41, &qword_100491B90);
}

void sub_10016BD5C()
{
  uint64_t v0;

  sub_100165DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10016BD70(uint64_t a1)
{
  uint64_t v1;

  return sub_100169C04(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void destroy for PresentationKind(_QWORD *a1)
{
  unsigned int v2;

  v2 = *((unsigned __int8 *)a1 + 56);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 2)
  {
    if (a1[3] >= 0xFFFFFFFFuLL)
      sub_10000682C(a1);
  }
  else if (v2 == 1)
  {
    swift_release(*a1);
  }
  else
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[5]);

  }
}

uint64_t initializeWithCopy for PresentationKind(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __int128 v11;

  v3 = *((unsigned __int8 *)a2 + 56);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v5 = a2[3];
    if (v5 < 0xFFFFFFFF)
    {
      v11 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    else
    {
      v6 = a2[4];
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v6;
      (**(void (***)(uint64_t))(v5 - 8))(a1);
    }
    *(_BYTE *)(a1 + 56) = 2;
  }
  else if (v3 == 1)
  {
    v4 = *a2;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 56) = 1;
    swift_retain(v4);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = (void *)a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v9;
  }
  return a1;
}

__int128 *assignWithCopy for PresentationKind(__int128 *a1, __int128 *a2, __n128 a3)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;

  if (a1 != a2)
  {
    v5 = *((unsigned __int8 *)a1 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a1 + 3;
    if (v5 == 2)
    {
      if (*((_QWORD *)a1 + 3) >= 0xFFFFFFFFuLL)
        sub_10000682C(a1);
    }
    else if (v5 == 1)
    {
      a3 = swift_release(*(_QWORD *)a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v6 = *((unsigned __int8 *)a2 + 56);
    if (v6 >= 3)
      v6 = *(_DWORD *)a2 + 3;
    if (v6 == 2)
    {
      v8 = *((_QWORD *)a2 + 3);
      if (v8 < 0xFFFFFFFF)
      {
        v11 = *a2;
        v12 = a2[1];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *a1 = v11;
        a1[1] = v12;
      }
      else
      {
        *((_QWORD *)a1 + 3) = v8;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        (**(void (***)(__int128 *, __int128 *, __n128))(v8 - 8))(a1, a2, a3);
      }
      *((_BYTE *)a1 + 56) = 2;
    }
    else if (v6 == 1)
    {
      v7 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + 56) = 1;
      swift_retain(v7);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      v9 = (void *)*((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 6) = v9;
      *((_BYTE *)a1 + 56) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = v9;
    }
  }
  return a1;
}

__n128 initializeWithTake for PresentationKind(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for PresentationKind(_QWORD *a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;
  __int128 v8;

  if (a1 != (_QWORD *)a2)
  {
    v4 = *((unsigned __int8 *)a1 + 56);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {
      if (a1[3] >= 0xFFFFFFFFuLL)
        sub_10000682C(a1);
    }
    else if (v4 == 1)
    {
      swift_release(*a1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      a1[4] = *(_QWORD *)(a2 + 32);
      v6 = 2;
    }
    else if (v5 == 1)
    {
      *a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v8;
      *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
      a1[6] = *(_QWORD *)(a2 + 48);
    }
    *((_BYTE *)a1 + 56) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PresentationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_10016C21C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_10016C238(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationKind()
{
  return &type metadata for PresentationKind;
}

uint64_t *initializeBufferWithCopyOfBuffer for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t *assignWithTake for PresentationKind.NowPlayingDestination(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PresentationKind.NowPlayingDestination()
{
  return &type metadata for PresentationKind.NowPlayingDestination;
}

uint64_t type metadata accessor for PlaybackController()
{
  return objc_opt_self(_TtC9MusicCore18PlaybackController);
}

uint64_t _s22AgeVerificationWrapperCMa()
{
  return objc_opt_self(_TtCC9MusicCore30ExplicitRestrictionsControllerP33_49A4F392108DD8BCF77701E27C86571422AgeVerificationWrapper);
}

uint64_t initializeWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.NowPlayingPresentationDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.NowPlayingPresentationDescriptor()
{
  return &type metadata for PlaybackController.NowPlayingPresentationDescriptor;
}

uint64_t getEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlaybackController.CommandError.AlertKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError.AlertKind()
{
  return &type metadata for PlaybackController.CommandError.AlertKind;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10016AE40(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for PlaybackController.CommandError(uint64_t a1)
{
  sub_10016AE0C(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10016AE40(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10016AE0C(v5, v6);
  return a1;
}

uint64_t assignWithTake for PlaybackController.CommandError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10016AE0C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackController.CommandError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.CommandError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10016C720(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10016C738(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.CommandError()
{
  return &type metadata for PlaybackController.CommandError;
}

uint64_t sub_10016C760()
{
  uint64_t v0;

  return sub_100169FB8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10016C768()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

double sub_10016C794(void *a1)
{
  uint64_t v1;

  return sub_100169F1C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10016C7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10016C7B0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10016C7B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016C7EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, id))(v0 + 16))(*(_QWORD *)(v0 + 32), objc_msgSend(*(id *)(v0 + 40), "isExplicitContentAllowed"));
}

void sub_10016C830(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_100168F4C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_10016C83C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_10016C870()
{
  uint64_t v0;

  sub_100167F24(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(_QWORD, _QWORD))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10016C884()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016C8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100005574((uint64_t *)&unk_100491650);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10016C91C(uint64_t a1, uint64_t a2)
{
  sub_100005574((uint64_t *)&unk_100491650);
  return sub_1000CC0D4(a1, a2);
}

uint64_t sub_10016C974()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016C998()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10016C9CC(void *a1, char a2)
{
  uint64_t v2;

  sub_1001698D8(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_10016C9D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016CA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_10049324C);
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000F894;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v4;
  return swift_task_switch(sub_100168BB8, 0, 0);
}

uint64_t sub_10016CA6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016CA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10049325C);
  v3 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000F894;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_100168E0C, 0, 0);
}

uint64_t sub_10016CAF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10016CB00()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  if (v0[7])
    swift_release(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10016CB44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 16;
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)swift_task_alloc(dword_100493284);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000F894;
  return sub_100167B08(v2, v3);
}

uint64_t sub_10016CB98(uint64_t a1)
{
  return sub_10016CE48(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001673B4);
}

uint64_t sub_10016CBA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016CBB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1000E774C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_10016CBBC(void *a1)
{
  uint64_t v1;

  sub_1001675C8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10016CBC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016CBD4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016CC08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1004932AC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000F894;
  return sub_10016A3D8(v2, v3, v5, v4);
}

uint64_t sub_10016CC6C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10016CCA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1004932C4);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10000F894;
  *(_QWORD *)(v5 + 144) = v4;
  *(_OWORD *)(v5 + 128) = v6;
  *(_QWORD *)(v5 + 120) = a1;
  return swift_task_switch(sub_10016AA40, 0, 0);
}

uint64_t sub_10016CD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10016CD94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc(dword_1004932D4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000F894;
  v6[15] = a1;
  v6[16] = v5;
  return swift_task_switch(sub_10016A788, 0, 0);
}

uint64_t sub_10016CE10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10016CE3C(uint64_t a1)
{
  return sub_10016CE48(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016750C);
}

uint64_t sub_10016CE48(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10016CE5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016CE6C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016CEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_100493354);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000F894;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return swift_task_switch(sub_10016A3A0, 0, 0);
}

uint64_t sub_10016CF10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016CF34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10016CF44()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  if (v0[9])
    swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10016CF88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc(dword_100493364);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_10000F894;
  v4[2] = a1;
  v4[3] = v1 + 32;
  return swift_task_switch(sub_100167CAC, 0, 0);
}

uint64_t sub_10016CFEC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

_QWORD *sub_10016D028()
{
  uint64_t v0;

  return sub_100165BC8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10016D034()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_10016D068(unint64_t a1)
{
  uint64_t *v1;

  sub_1001656C8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10016D074()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10016D0A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100493394);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_10016519C(a1, v4, v5, v6);
}

uint64_t sub_10016D10C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_10016D130()
{
  uint64_t v0;

  return sub_1001652E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10016D138(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ComponentRenderEventSignposts(a2, a1);
  return a2;
}

uint64_t sub_10016D174(uint64_t a1)
{
  sub_10016D1AC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

void sub_10016D1AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1)
    sub_10016D1C0(a1, a2, a3, a4, a5, a6, a7);
}

void sub_10016D1C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:

      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 2:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    case 4:
      sub_10016D24C((uint64_t)a1, a2, a3, a4);
      break;
    default:
      return;
  }
}

uint64_t sub_10016D24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void sub_10016D280(void **a1)
{
  uint64_t v1;

  sub_100158850(a1, v1);
}

unint64_t sub_10016D288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100493050;
  if (!qword_100493050)
  {
    v1 = sub_100005600(&qword_1004938D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_100493050);
  }
  return result;
}

uint64_t sub_10016D2D4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016D308(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004933C4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_100158974(a1, v4, v5, v7, v6);
}

unint64_t sub_10016D380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100493440;
  if (!qword_100493440)
  {
    v1 = sub_1000087DC(255, &qword_100493438, UISceneSession_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, &qword_100493440);
  }
  return result;
}

uint64_t sub_10016D3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100493470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016D430()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10049348C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[5] = v2;
  return swift_task_switch(sub_100164EB0, 0, 0);
}

uint64_t sub_10016D4A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10049349C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[5] = v2;
  return swift_task_switch(sub_10016500C, 0, 0);
}

uint64_t sub_10016D510()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004934AC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[5] = v2;
  return swift_task_switch(sub_100164F98, 0, 0);
}

uint64_t sub_10016D580()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004934BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[5] = v2;
  return swift_task_switch(sub_100164F24, 0, 0);
}

uint64_t sub_10016D5F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004934D4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[4] = v2;
  return swift_task_switch(sub_1001626F0, 0, 0);
}

uint64_t sub_10016D660()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004934E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[4] = v2;
  return swift_task_switch(sub_100162760, 0, 0);
}

uint64_t sub_10016D6D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_1004934F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[4] = v2;
  return swift_task_switch(sub_1001627D0, 0, 0);
}

uint64_t sub_10016D740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10016D768()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10049350C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[2] = v2;
  return swift_task_switch(sub_100163838, 0, 0);
}

uint64_t sub_10016D7D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_10049351C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[2] = v2;
  return swift_task_switch(sub_1001637CC, 0, 0);
}

uint64_t sub_10016D848()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_100493534);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[2] = v2;
  return swift_task_switch(sub_100162F08, 0, 0);
}

uint64_t sub_10016D8B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016D8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc(dword_100493544);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000EA88;
  v3[2] = v2;
  return swift_task_switch(sub_100162F60, 0, 0);
}

uint64_t storeEnumTagSinglePayload for PlaybackController.PlayabilityOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10016D974 + 4 * byte_10038E1CA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10016D9A8 + 4 * byte_10038E1C5[v4]))();
}

uint64_t sub_10016D9A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016D9B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10016D9B8);
  return result;
}

uint64_t sub_10016D9C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016D9CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10016D9D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016D9D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackController.PlayabilityOption()
{
  return &type metadata for PlaybackController.PlayabilityOption;
}

void MusicPlaybackIntentDescriptor.playActivityFeatureName.setter(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, "setPlayActivityFeatureName:", v4);

}

void MusicPlaybackIntentDescriptor.playActivityRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  void *v4;
  Class isa;

  v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  if (a2 >> 60 == 15)
  {
    isa = 0;
    objc_msgSend(v4, "setPlayActivityRecommendationData:", 0);
  }
  else
  {
    sub_1000516F8(a1, a2);
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1000067D4(a1, a2);
    objc_msgSend(v4, "setPlayActivityRecommendationData:", isa);
  }
  sub_1000067D4(a1, a2);

}

uint64_t PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, objc_class *a10)
{
  int *v17;
  uint64_t v18;
  UIViewController_optional v22;

  v17 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v18 = a9 + v17[7];
  *(_QWORD *)(v18 + 32) = 0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_BYTE *)(a9 + v17[8]) = 0;
  *(_BYTE *)(a9 + v17[9]) = 0;
  sub_100082248(a1, a9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if ((a6 & 1) == 0)
    sub_10016DEF4(a5, 0, (SEL *)&selRef_setShuffleMode_);
  if ((a8 & 1) == 0)
    sub_10016DEF4(a7, 0, (SEL *)&selRef_setRepeatMode_);
  sub_100064864(a2, v18);
  *(_QWORD *)(a9 + v17[5]) = a3;
  *(_QWORD *)(a9 + v17[6]) = a4;
  v22.value.super.super.isa = a10;
  PlaybackIntentDescriptor.configureForPlayActivity(using:)(v22);

  sub_100008758(a2, &qword_100493470);
  return sub_100006798(a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor(uint64_t a1)
{
  return sub_1000091AC(a1, qword_100493618, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor);
}

uint64_t type metadata accessor for PlaybackIntentDescriptor.IntentType(uint64_t a1)
{
  return sub_1000091AC(a1, qword_1004936D0, (uint64_t)&nominal type descriptor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) != 1)
    return *(_QWORD *)v8;
  v10 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v11 = MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

id sub_10016DD90()
{
  return sub_10016DDB4((SEL *)&selRef_shuffleMode);
}

void sub_10016DD9C(uint64_t a1, char a2)
{
  sub_10016DEF4(a1, a2, (SEL *)&selRef_setShuffleMode_);
}

id sub_10016DDA8()
{
  return sub_10016DDB4((SEL *)&selRef_repeatMode);
}

id sub_10016DDB4(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v3 = v1;
  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100082248(v3, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = (*(uint64_t (**)(char *, id *, uint64_t))(v5 + 32))(v7, v10, v4);
    v13 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v12);
    v14 = objc_msgSend(v13, *a1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v15 = *v10;
    v14 = objc_msgSend(*v10, *a1);

  }
  return v14;
}

void sub_10016DEE8(uint64_t a1, char a2)
{
  sub_10016DEF4(a1, a2, (SEL *)&selRef_setRepeatMode_);
}

void sub_10016DEF4(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;

  v5 = v3;
  v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v12);
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v16 = (id *)((char *)&v21 - v15);
  if ((a2 & 1) != 0)
    v17 = -1;
  else
    v17 = a1;
  sub_100082248(v5, (uint64_t)&v21 - v15, v13);
  if (swift_getEnumCaseMultiPayload(v16, v12) == 1)
  {
    v18 = (*(uint64_t (**)(char *, id *, uint64_t))(v9 + 32))(v11, v16, v8);
    v19 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v18);
    objc_msgSend(v19, *a3, v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v20 = *v16;
    objc_msgSend(*v16, *a3, v17);

  }
}

Swift::Void __swiftcall PlaybackIntentDescriptor.configureForPlayActivity(using:)(UIViewController_optional using)
{
  uint64_t v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  objc_class *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v21;
  NSString v22;
  Class v23;
  objc_class *v24;
  uint64_t v25;

  isa = using.value.super.super.isa;
  v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v7);
  v9 = (void **)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (isa)
  {
    v10 = isa;
    v11 = -[objc_class combinedPlayActivityFeatureName](v10, "combinedPlayActivityFeatureName");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v24 = v10;
    v14 = UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
    v16 = v15;
    sub_100082248(v1, (uint64_t)v9, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v9, v7) == 1)
    {
      v17 = (*(uint64_t (**)(char *, void **, uint64_t))(v4 + 32))(v6, v9, v3);
      v18 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v17);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      v18 = *v9;
    }
    v20 = v24;
    v19 = v25;
    swift_bridgeObjectRetain();
    sub_1000516E4(v14, v16);
    sub_1000067D4(v14, v16);
    swift_bridgeObjectRelease();
    v21 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0)
      v21 = v19 & 0xFFFFFFFFFFFFLL;
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1000516E4(v14, v16);
      sub_1000067D4(v14, v16);
      v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v18, "setPlayActivityFeatureName:", v22);

    swift_bridgeObjectRetain();
    sub_1000516E4(v14, v16);
    swift_bridgeObjectRelease();
    if (v16 >> 60 == 15)
    {
      v23 = 0;
    }
    else
    {
      v23 = Data._bridgeToObjectiveC()().super.isa;
      sub_1000067D4(v14, v16);
    }
    objc_msgSend(v18, "setPlayActivityRecommendationData:", v23);
    swift_bridgeObjectRelease();

    sub_1000067D4(v14, v16);
  }
}

uint64_t PlaybackIntentDescriptor.intentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100082248(v1, a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
}

uint64_t PlaybackIntentDescriptor.intentOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 20));
}

uint64_t PlaybackIntentDescriptor.intentOptions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.intentOptions.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.replaceIntent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 24));
}

uint64_t PlaybackIntentDescriptor.replaceIntent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.replaceIntent.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.representedObject.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_10016D3E8(v3, a1);
}

uint64_t PlaybackIntentDescriptor.representedObject.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 28);
  return sub_10016F090(a1, v3);
}

CFRange (__swiftcall *PlaybackIntentDescriptor.representedObject.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.autoSing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 32));
}

uint64_t PlaybackIntentDescriptor.autoSing.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.autoSing.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlaybackIntentDescriptor(0) + 36));
}

uint64_t PlaybackIntentDescriptor.isSiriIntent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

CFRange (__swiftcall *PlaybackIntentDescriptor.isSiriIntent.modify())(__C::_NSRange)
{
  type metadata accessor for PlaybackIntentDescriptor(0);
  return CFRange.init(_:);
}

uint64_t MusicPlaybackIntentDescriptor.playActivityFeatureName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
  v1 = objc_msgSend(v0, "playActivityFeatureName");

  if (!v1)
    return 0;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

void (*MusicPlaybackIntentDescriptor.playActivityFeatureName.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityFeatureName");

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_10016E628;
}

void sub_10016E628(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString v5;
  void *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v3);
    v7 = v4;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v4 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, "setPlayActivityFeatureName:", v5);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v6 = (void *)((uint64_t (*)(void))MusicPlaybackIntentDescriptor.playbackIntent.getter)();
    v7 = v6;
    if (v2)
    {
      v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v2);
      v6 = v7;
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v6, "setPlayActivityFeatureName:", v5);
  }

}

uint64_t MusicPlaybackIntentDescriptor.playActivityRecommendationData.getter(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v2 = objc_msgSend(v1, "playActivityRecommendationData");

  if (!v2)
    return 0;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

void (*MusicPlaybackIntentDescriptor.playActivityRecommendationData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  a1[2] = v1;
  v3 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
  v4 = objc_msgSend(v3, "playActivityRecommendationData");

  if (v4)
  {
    v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_10016E7E8;
}

void sub_10016E7E8(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  Class isa;
  Class v7;
  id v8;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    v4 = sub_1000516E4(*a1, v3);
    v5 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v4);
    if (v3 >> 60 == 15)
    {
      isa = 0;
    }
    else
    {
      sub_1000516F8(v2, v3);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000067D4(v2, v3);
    }
    objc_msgSend(v5, "setPlayActivityRecommendationData:", isa);
    sub_1000067D4(v2, v3);

    sub_1000067D4(v2, v3);
  }
  else
  {
    v8 = (id)MusicPlaybackIntentDescriptor.playbackIntent.getter(a1);
    if (v3 >> 60 == 15)
    {
      v7 = 0;
    }
    else
    {
      sub_1000516F8(v2, v3);
      v7 = Data._bridgeToObjectiveC()().super.isa;
      sub_1000067D4(v2, v3);
    }
    objc_msgSend(v8, "setPlayActivityRecommendationData:", v7);
    sub_1000067D4(v2, v3);

  }
}

unint64_t PlaybackIntentDescriptor.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  int *v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  uint64_t v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  unint64_t v41;
  unint64_t v42;

  v1 = v0;
  v2 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = 0xD000000000000019;
  v42 = 0x80000001003B3820;
  strcpy((char *)&v40, "intent=");
  v40._object = (void *)0xE700000000000000;
  sub_100082248(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v11 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v11 = *v8;
  }
  v12 = objc_msgSend(v11, "description");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);

  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 8236;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "shuffleMode=");
  BYTE5(v40._object) = 0;
  HIWORD(v40._object) = -5120;
  v38._countAndFlagsBits = (uint64_t)sub_10016DDB4((SEL *)&selRef_shuffleMode);
  LOBYTE(v38._object) = 0;
  v18 = sub_100005574(&qword_1004935B0);
  v19._countAndFlagsBits = String.init<A>(describing:)(&v38, v18);
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "repeatMode=");
  HIDWORD(v40._object) = -352321536;
  v38._countAndFlagsBits = (uint64_t)sub_10016DDB4((SEL *)&selRef_repeatMode);
  LOBYTE(v38._object) = 0;
  v21 = sub_100005574(&qword_1004935B8);
  v22._countAndFlagsBits = String.init<A>(describing:)(&v38, v21);
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 8236;
  v23._object = (void *)0xE200000000000000;
  String.append(_:)(v23);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  strcpy((char *)&v40, "options=");
  BYTE1(v40._object) = 0;
  WORD1(v40._object) = 0;
  HIDWORD(v40._object) = -402653184;
  v24 = (int *)type metadata accessor for PlaybackIntentDescriptor(0);
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[5]);
  type metadata accessor for MPCPlaybackIntentOptions(0);
  v26._countAndFlagsBits = String.init<A>(describing:)(&v38, v25);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 0x206563616C706572;
  v40._object = (void *)0xEF3D746E65746E69;
  v38._countAndFlagsBits = *(_QWORD *)(v1 + v24[6]);
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v29._countAndFlagsBits = String.init<A>(describing:)(&v38, v28);
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 8236;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v31._object = (void *)0x80000001003B3840;
  v31._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v31);
  sub_10016D3E8(v1 + v24[7], (uint64_t)&v38);
  if (v39)
  {
    sub_1000137C8((__int128 *)&v38._countAndFlagsBits, (uint64_t)&v40);
    sub_1000244B0((uint64_t)&v40, (uint64_t)&v38);
    v32 = sub_100005574(&qword_100493480);
    v38._countAndFlagsBits = String.init<A>(describing:)(&v38, v32);
    v38._object = v33;
    v34._countAndFlagsBits = 8236;
    v34._object = (void *)0xE200000000000000;
    String.append(_:)(v34);
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    sub_10000682C(&v40);
  }
  else
  {
    sub_100008758((uint64_t)&v38, &qword_100493470);
    v35._countAndFlagsBits = 0x2C20656E6F6ELL;
    v35._object = (void *)0xE600000000000000;
    String.append(_:)(v35);
  }
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return v41;
}

uint64_t _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void **v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void *v28;
  void *v29;
  char *v31;
  uint64_t v32;

  v4 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
  v32 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - v7;
  v9 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (void **)((char *)&v31 - v13);
  v15 = sub_100005574(&qword_100493708);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (void **)&v18[*(int *)(v16 + 48)];
  sub_100082248(a1, (uint64_t)v18, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  sub_100082248(a2, (uint64_t)v19, type metadata accessor for PlaybackIntentDescriptor.IntentType);
  if (swift_getEnumCaseMultiPayload(v18, v9) == 1)
  {
    sub_100082248((uint64_t)v18, (uint64_t)v12, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(v19, v9) == 1)
    {
      v20 = v32;
      v21 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v21(v8, v12, v4);
      v22 = v31;
      v21(v31, (char *)v19, v4);
      v23 = sub_1000B0AE0();
      v24 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v23);
      v25 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter(v24);
      v26 = static NSObject.== infix(_:_:)(v24, v25);

      v27 = *(void (**)(char *, uint64_t))(v20 + 8);
      v27(v22, v4);
      v27(v8, v4);
LABEL_9:
      sub_100006798((uint64_t)v18, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      return v26 & 1;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v4);
  }
  else
  {
    sub_100082248((uint64_t)v18, (uint64_t)v14, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v28 = *v14;
    if (swift_getEnumCaseMultiPayload(v19, v9) != 1)
    {
      v29 = *v19;
      sub_1000B0AE0();
      v26 = static NSObject.== infix(_:_:)(v28, v29);

      goto LABEL_9;
    }

  }
  sub_100008758((uint64_t)v18, &qword_100493708);
  v26 = 0;
  return v26 & 1;
}

uint64_t sub_10016F090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100493470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s9MusicCore24PlaybackIntentDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v22;

  v4 = type metadata accessor for PlaybackIntentDescriptor(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v22 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v22 - v14;
  v16 = _s9MusicCore24PlaybackIntentDescriptorV0D4TypeO2eeoiySbAE_AEtFZ_0(a1, a2);
  sub_100082248(a1, (uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_100082248(a2, (uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
  if ((v16 & 1) == 0)
  {
    sub_100006798((uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
    sub_100006798((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    sub_100082248(a1, (uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
    sub_100082248(a2, (uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
    goto LABEL_5;
  }
  v17 = *(int *)(v4 + 20);
  v18 = *(_QWORD *)&v15[v17];
  v19 = *(_QWORD *)&v13[v17];
  sub_100006798((uint64_t)v13, type metadata accessor for PlaybackIntentDescriptor);
  sub_100006798((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
  sub_100082248(a1, (uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
  sub_100082248(a2, (uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
  if (v18 != v19)
  {
LABEL_5:
    v20 = 0;
    goto LABEL_6;
  }
  v20 = *(_QWORD *)&v10[*(int *)(v4 + 24)] == *(_QWORD *)&v7[*(int *)(v4 + 24)];
LABEL_6:
  sub_100006798((uint64_t)v7, type metadata accessor for PlaybackIntentDescriptor);
  sub_100006798((uint64_t)v10, type metadata accessor for PlaybackIntentDescriptor);
  return v20;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *(_QWORD *)a1 = *a2;
      v14 = v13;
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v15 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(char **)((char *)a2 + a3[5]);
    *(_QWORD *)&a1[v15] = *(char **)((char *)a2 + v15);
    v16 = a3[7];
    v17 = &a1[v16];
    v18 = (char *)a2 + v16;
    v19 = *(uint64_t *)((char *)a2 + v16 + 24);
    if (v19)
    {
      v20 = *((_QWORD *)v18 + 4);
      *((_QWORD *)v17 + 3) = v19;
      *((_QWORD *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }
    else
    {
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
    }
    v22 = a3[9];
    a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
    a1[v22] = *((_BYTE *)a2 + v22);
  }
  return a1;
}

_QWORD *destroy for PlaybackIntentDescriptor(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;

  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {

  }
  result = (id *)((char *)a1 + *(int *)(a2 + 28));
  if (result[3])
    return (_QWORD *)sub_10000682C(result);
  return result;
}

void **initializeWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    v12 = v11;
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v13 = a3[6];
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + v13) = *(void **)((char *)a2 + v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      v12 = v11;
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *(void **)((char *)a1 + a3[5]) = *(void **)((char *)a2 + a3[5]);
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t *)((char *)a2 + v13 + 24);
  if (!*(void **)((char *)a1 + v13 + 24))
  {
    if (v16)
    {
      *((_QWORD *)v14 + 3) = v16;
      *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      (**(void (***)(char *, char *))(v16 - 8))(v14, v15);
      goto LABEL_13;
    }
LABEL_12:
    v17 = *(_OWORD *)v15;
    v18 = *((_OWORD *)v15 + 1);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *(_OWORD *)v14 = v17;
    *((_OWORD *)v14 + 1) = v18;
    goto LABEL_13;
  }
  if (!v16)
  {
    sub_10000682C(v14);
    goto LABEL_12;
  }
  sub_100020AF8(v14, v15);
LABEL_13:
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

char *initializeWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = a3[8];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *(_OWORD *)v12;
  v14 = *((_OWORD *)v12 + 1);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  a1[v10] = a2[v10];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *assignWithTake for PlaybackIntentDescriptor(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  if (*(_QWORD *)&a1[v9 + 24])
    sub_10000682C(&a1[v9]);
  v11 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)v10 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v10 + 1) = v11;
  *((_QWORD *)v10 + 4) = *(_QWORD *)&a2[v9 + 32];
  v12 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016F8A8);
}

uint64_t sub_10016F8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016F940);
}

uint64_t sub_10016F940(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = a2;
  return result;
}

uint64_t sub_10016F9BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for PlaybackIntentDescriptor.IntentType(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = "(";
    v4[4] = &unk_10038E518;
    v4[5] = &unk_10038E518;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PlaybackIntentDescriptor.IntentType(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void destroy for PlaybackIntentDescriptor.IntentType(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    v3 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {

  }
}

void **initializeWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **assignWithCopy for PlaybackIntentDescriptor.IntentType(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

void *initializeWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlaybackIntentDescriptor.IntentType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10016FDBC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for MusicPlaybackIntentDescriptor(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *Player.state<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v3;
  v8 = MPCPlaybackEngine.state<A>(for:)();
  type metadata accessor for MusicItemState(0, a2, a3, v9);
  swift_retain(v3);
  v11 = sub_1001828D8(a1, v8, v3, v10);
  swift_release(v8);
  swift_release(v4);
  return v11;
}

uint64_t type metadata accessor for MusicItemState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MusicItemState);
}

uint64_t sub_10016FECC(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = sub_1000A58F8((uint64_t)a1);
      if ((v8 & 1) != 0)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v7);
        swift_unknownObjectRetain(v6);
        return v6;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = __CocoaDictionary.lookup(_:)();

  if (!v4)
    return 0;
  v10 = v4;
  swift_unknownObjectRetain(v4);
  v5 = sub_100005574(&qword_1004940E8);
  swift_dynamicCast(&v11, &v10, (char *)&type metadata for Swift.AnyObject + 8, v5, 7);
  v6 = v11;
  swift_unknownObjectRelease(v4);
  return v6;
}

uint64_t sub_10016FF94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_10016FFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_100006924((unint64_t *)&qword_1004921B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_100005574(&qword_100490838);
  v3 = sub_10002FFB8((unint64_t *)&qword_1004921C0, &qword_100490838, (uint64_t)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t sub_100170054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_1004A2230);
  sub_1000086B4(v2, (uint64_t)qword_1004A2230);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x726579616C50, 0xE600000000000000);
}

uint64_t Player.configuration.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine);
  v2 = objc_msgSend(v1, "playerID");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  sub_10015380C(v1);
  v4 = objc_msgSend(v1, "fallbackPlaybackIntent");

  return v3;
}

id Player.audioAnalyzer.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engine), "audioAnalyzer");
}

_QWORD *Player.sampleReceiver.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v3 = type metadata accessor for SampleReceiver();
    v2 = (_QWORD *)swift_allocObject(v3, 40, 7);
    v2[3] = 0;
    v2[4] = 0;
    v2[2] = 0;
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

double Player.sampleReceiver.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

double (*Player.sampleReceiver.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Player.sampleReceiver.getter();
  return sub_10017022C;
}

double sub_10017022C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t Player.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  Player.init()();
  return v1;
}

_QWORD *Player.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  NSString v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void *v43;
  char *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  NSString v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  id aBlock;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  uint64_t v142;

  v1 = v0;
  v125 = *v0;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v2);
  v136 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v4);
  v135 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_100493730);
  v127 = *(_QWORD *)(v6 - 8);
  v128 = v6;
  __chkstk_darwin(v6);
  v126 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100005574(&qword_100493738);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v129 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574((uint64_t *)&unk_100493740);
  v133 = *(_QWORD *)(v9 - 8);
  v134 = v9;
  __chkstk_darwin(v9);
  v131 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100005574(&qword_100492DA0);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100005574(&qword_100493750);
  v119 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v118 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100005574((uint64_t *)&unk_100493758);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100005574((uint64_t *)&unk_1004933B0);
  v114 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_100493768);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = 0;
  v0[3] = 0;
  v124 = (id)objc_opt_self(MPAVRoutingController);
  v21 = objc_msgSend(v124, "systemRoute");
  v22 = (void *)objc_opt_self(MPCPlayerPath);
  if (qword_10048C858 != -1)
    swift_once(&qword_10048C858, sub_100150D8C);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "systemMusicPathWithRoute:playerID:", v21, v23);

  if (objc_msgSend(v21, "isDeviceRoute"))
    v25 = v24;
  else
    v25 = objc_msgSend(v22, "pathWithRoute:bundleID:playerID:", v21, 0, 0);

  v26 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__path;
  aBlock = v24;
  v27 = sub_1000087DC(0, &qword_100490368, MPCPlayerPath_ptr);
  Published.init(initialValue:)(&aBlock, v27);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = 0;
  v28 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  aBlock = 0;
  v29 = sub_100005574(&qword_100493790);
  Published.init(initialValue:)(&aBlock, v29);
  v30 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
  v31 = v123;
  v30(v28, v16, v123);
  v32 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  aBlock = 0;
  v33 = sub_100005574(&qword_1004937A0);
  v34 = v115;
  Published.init(initialValue:)(&aBlock, v33);
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v32, v34, v117);
  v35 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  aBlock = 0;
  v36 = sub_100005574(&qword_1004937B0);
  v37 = v118;
  Published.init(initialValue:)(&aBlock, v36);
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v35, v37, v120);
  v38 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
  v40 = v122;
  v39(v38, v12, v122);
  v41 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession;
  LOBYTE(aBlock) = 0;
  Published.init(initialValue:)(&aBlock, &type metadata for Bool);
  v39(v41, v12, v40);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = 0;
  v42 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  if (qword_10048C888 != -1)
    swift_once(&qword_10048C888, sub_10017DC64);
  v43 = (void *)qword_100493710;
  *v42 = qword_100493710;
  v42[1] = v43;
  v42[2] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_routingController) = 0;
  *((_BYTE *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engineState) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady) = _swiftEmptyArrayStorage;
  v44 = (char *)v1 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
  aBlock = 0;
  v45 = v43;
  Published.init(initialValue:)(&aBlock, v29);
  v30(v44, v16, v31);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = 0;
  v46 = OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers;
  *(_QWORD *)((char *)v1 + v46) = sub_100099620((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = 0;
  v47 = OBJC_IVAR____TtC9MusicCore6Player_lock;
  v48 = type metadata accessor for UnfairLock();
  swift_allocObject(v48, 24, 7);
  *(_QWORD *)((char *)v1 + v47) = UnfairLock.init()();
  v49 = qword_1004A21E0;
  v50 = (void *)unk_1004A21E8;
  v51 = objc_allocWithZone((Class)MPCPlaybackEngine);
  v52 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v53 = String._bridgeToObjectiveC()();
  v54 = objc_msgSend(v51, "initWithPlayerID:", v53);

  v55 = v54;
  sub_1001538F0(v49, (uint64_t)v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine) = v55;
  objc_msgSend(v55, "becomeActive");
  v56 = v55;

  v57 = sub_10015380C(v56);
  v58 = objc_msgSend(v56, "fallbackPlaybackIntent");

  LOBYTE(v56) = sub_1000C792C(4u, (uint64_t)v57);
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
  {
    v59 = *(void **)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_engine);
    v141 = sub_1001710E4;
    v142 = 0;
    aBlock = _NSConcreteStackBlock;
    v138 = 1107296256;
    v139 = sub_1000CC138;
    v140 = &unk_100450190;
    v60 = _Block_copy(&aBlock);
    v61 = v59;
    objc_msgSend(v61, "restoreStateWithCompletion:", v60);
    _Block_release(v60);

  }
  v62 = v124;
  v63 = objc_msgSend(v124, "systemRoute");
  v64 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v63, 0);
  v65 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
  objc_msgSend(v65, "setActiveDataSource:", v64);

  v66 = swift_allocObject(&unk_1004500D8, 32, 7);
  v67 = v125;
  *(_QWORD *)(v66 + 16) = v1;
  *(_QWORD *)(v66 + 24) = v67;
  v68 = swift_allocObject(&unk_100450100, 32, 7);
  *(_QWORD *)(v68 + 16) = sub_100182954;
  *(_QWORD *)(v68 + 24) = v66;
  v141 = sub_10018295C;
  v142 = v68;
  aBlock = _NSConcreteStackBlock;
  v138 = 1107296256;
  v139 = sub_1000F7EF4;
  v140 = &unk_100450118;
  v69 = _Block_copy(&aBlock);
  v70 = v142;
  swift_retain(v1);
  swift_retain(v66);
  swift_release(v70);
  objc_msgSend(v62, "getActiveRouteWithTimeout:completion:", v69, 1.0);
  swift_release(v66);
  _Block_release(v69);
  v71 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  v72 = swift_allocObject(&unk_100450150, 24, 7);
  swift_weakInit(v72 + 16, v1);
  v73 = type metadata accessor for NotificationObserver();
  swift_allocObject(v73, 64, 7);
  v74 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v71, 0, 1, 1, (uint64_t)sub_10018297C, v72);
  v75 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver) = v74;
  swift_release(v75);
  v76 = (void *)MRAVEndpointGroupSessionInfoDidChangeNotification;
  v77 = swift_allocObject(&unk_100450150, 24, 7);
  swift_weakInit(v77 + 16, v1);
  swift_allocObject(v73, 64, 7);
  v78 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v76, 0, 1, 1, (uint64_t)sub_100182994, v77);
  v79 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver) = v78;
  swift_release(v79);
  v80 = (void *)MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification;
  v81 = swift_allocObject(&unk_100450150, 24, 7);
  swift_weakInit(v81 + 16, v1);
  swift_allocObject(v73, 64, 7);
  v82 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v80, 0, 1, 1, (uint64_t)sub_1001829BC, v81);
  v83 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver) = v82;
  swift_release(v83);
  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &aBlock, 33, 0);
  v84 = sub_100005574((uint64_t *)&unk_100490920);
  v85 = v126;
  Published.projectedValue.getter(v84);
  swift_endAccess(&aBlock);
  v86 = sub_10002FFB8((unint64_t *)&unk_100493838, &qword_100493730, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v87 = v128;
  v88 = v129;
  Publisher.map<A>(_:)(sub_100171658, 0, v128, &type metadata for ApplicationCapabilities.RatingWarning, v86);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v85, v87);
  v89 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  aBlock = (id)static OS_dispatch_queue.main.getter(v89, v90, v91, v92, v93, v94, v95, v96);
  v97 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v98 = (uint64_t)v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v135, 1, 1, v97);
  v99 = sub_10002FFB8(&qword_100493848, &qword_100493738, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  sub_1001829E4();
  v101 = v131;
  v100 = v132;
  Publisher.receive<A>(on:options:)(&aBlock, v98, v132, v89, v99);
  sub_100008758(v98, (uint64_t *)&unk_1004962D0);

  (*(void (**)(char *, uint64_t))(v130 + 8))(v88, v100);
  v102 = sub_10002FFB8(&qword_100493858, (uint64_t *)&unk_100493740, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v103 = v134;
  v104 = Publisher<>.sink(receiveValue:)(sub_100171694, 0, v134, v102);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v101, v103);
  v105 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription);
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription) = v104;
  swift_release(v105);
  v106 = (uint64_t)v136;
  static TaskPriority.userInitiated.getter(v107);
  v108 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v106, 0, 1, v108);
  type metadata accessor for MainActor(0);
  v109 = swift_retain(v1);
  v110 = static MainActor.shared.getter(v109);
  v111 = (_QWORD *)swift_allocObject(&unk_100450178, 40, 7);
  v111[2] = v110;
  v111[3] = &protocol witness table for MainActor;
  v111[4] = v1;
  v112 = sub_10002DE80(v106, (uint64_t)&unk_100493868, (uint64_t)v111);
  swift_release(v112);
  sub_100008758(v106, (uint64_t *)&unk_100493720);
  return v1;
}

uint64_t property wrapper backing initializer of Player.path(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_1000087DC(0, &qword_100490368, MPCPlayerPath_ptr);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t property wrapper backing initializer of Player.playerResponse(uint64_t a1)
{
  return sub_1001710A4(a1, &qword_100493790);
}

uint64_t property wrapper backing initializer of Player.nowPlayingPath(uint64_t a1)
{
  return sub_1001710A4(a1, &qword_1004937A0);
}

uint64_t property wrapper backing initializer of Player.sharePlayTogetherSession(uint64_t a1)
{
  return sub_1001710A4(a1, &qword_1004937B0);
}

uint64_t sub_1001710A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1;
  v2 = sub_100005574(a2);
  return Published.init(initialValue:)(&v4, v2);
}

void sub_1001710E4(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if ((a1 & 1) == 0)
  {
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v3 = type metadata accessor for Logger(0, a2);
    sub_1000086B4(v3, (uint64_t)qword_1004A2230);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v12 = a2;
      v13 = v7;
      *(_DWORD *)v6 = 136446210;
      swift_errorRetain(a2);
      v8 = sub_100005574(&qword_100494190);
      v9 = (char *)String.init<A>(describing:)(&v12, v8);
      *(_QWORD *)(v6 + 4) = sub_100019400(v9, v10, &v13);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Restoration Failed with error=%{public}s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_100171294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100171300, v6, v7);
}

uint64_t sub_100171300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v2 = type metadata accessor for Logger(0, v1);
  v3 = sub_1000086B4(v2, (uint64_t)static Logger.sharePlayTogether);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Got MRAVEndpointGroupSessionInfoDidChange notification", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 16);

  if (v7)
    sub_10017D030();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001713F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  _BYTE v18[24];

  v7 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  v12 = type metadata accessor for MainActor(0);
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = Strong;
  v15 = sub_1000C66A8((uint64_t)v9, a4, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1001714F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100171564, v6, v7);
}

uint64_t sub_100171564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(v0 + 24));
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v2 = type metadata accessor for Logger(0, v1);
  v3 = sub_1000086B4(v2, (uint64_t)static Logger.sharePlayTogether);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Got MRAVEndpointGroupSessionHostingEligibilityDidChangeNotification notification", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
  v7 = *(_QWORD *)(v0 + 16);

  if (v7)
    sub_10017D030();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100171658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_100171694(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = *a1;
  v2 = (void *)objc_opt_self(MPRestrictionsMonitor);
  v3 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v3, "setMaximumMovieRatingForAgeGate:", v1);

  v4 = objc_msgSend(v2, "sharedRestrictionsMonitor");
  objc_msgSend(v4, "setMaximumTVShowRatingForAgeGate:", v1);

}

uint64_t sub_100171728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  v6 = (_QWORD *)swift_task_alloc(dword_100493874);
  v4[5] = v6;
  *v6 = v4;
  v6[1] = sub_100171790;
  return Player.startEngineIfNeeded()();
}

uint64_t sub_100171790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100171800, v2, v3);
}

uint64_t sub_100171800()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  sub_10017D030();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.startEngineIfNeeded()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[13] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[14] = v2;
  v1[15] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[16] = v3;
  v1[17] = v4;
  return swift_task_switch(sub_1001718A8, v3, v4);
}

uint64_t sub_1001718A8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v1, v0 + 80, 1, 0);
  if (*v1 == 2)
  {
    v8 = swift_release(*(_QWORD *)(v0 + 120));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
  else
  {
    if (!*v1)
    {
      *v1 = 1;
      sub_100179E70(0);
    }
    v3 = static MainActor.shared.getter(v2);
    *(_QWORD *)(v0 + 144) = v3;
    if (v3)
    {
      ObjectType = swift_getObjectType();
      v5 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v7 = v6;
    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    return swift_task_switch(sub_100171974, v5, v7);
  }
}

uint64_t sub_100171974()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = v0 + 2;
  v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_100171A74;
  v3 = swift_continuation_init(v0 + 2, 0);
  v4 = swift_allocObject(&unk_1004501C8, 24, 7);
  *(_QWORD *)(v4 + 16) = v3;
  v5 = OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady;
  v6 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore6Player__onEngineIsReady);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *(_QWORD *)(v2 + v5) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_10003E2C8(0, v6[2] + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_10003E2C8((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *(_QWORD *)(v2 + v5) = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = sub_100182ABC;
  v10[5] = v4;
  return swift_continuation_await(v1);
}

uint64_t sub_100171A74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release(*(_QWORD *)(*v0 + 144));
  return swift_task_switch(sub_100171AC0, *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t sub_100171AC0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t Player.engineDelegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 24, v2, 0, 0);
  return swift_unknownObjectRetain(*(_QWORD *)(v0 + 24));
}

uint64_t Player.engineDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 24, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v3);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(v1 + 24));
  return swift_unknownObjectRelease(a1);
}

id (*Player.engineDelegate.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 24, a1, 33, 0);
  return sub_100171BE0;
}

id sub_100171BE0(uint64_t a1, char a2)
{
  id result;

  result = (id)swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC9MusicCore6Player_engine), "setDelegate:", *(_QWORD *)(*(_QWORD *)(a1 + 24) + 24));
  return result;
}

void sub_100171C30(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v5 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

double sub_100171CAC(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v5 = swift_getKeyPath(&unk_10038E588);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v8, v3, KeyPath, v5);
  return sub_100171D24();
}

double sub_100171D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  void *v15;

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10017A4D0();
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v7 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(&v15, v1, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  sub_10017D978(v15);

  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  type metadata accessor for MainActor(0);
  v9 = swift_retain(v1);
  v10 = static MainActor.shared.getter(v9);
  v11 = (_QWORD *)swift_allocObject(&unk_100450858, 40, 7);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  v12 = sub_1000C66A8((uint64_t)v4, (uint64_t)&unk_100494188, (uint64_t)v11);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_100171E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100171ED0, v6, v7);
}

uint64_t sub_100171ED0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_10017D030();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.path.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10038E560);
  v2 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t Player.$path.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__path, &qword_100493768);
}

uint64_t Player.nowPlayingObserver.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  }
  else
  {
    v4 = v0;
    v5 = type metadata accessor for Player.NowPlayingObserver(0);
    v3 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v6 = swift_retain(v4);
    Player.NowPlayingObserver.init(player:)(v6);
    v7 = *(_QWORD *)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain(v3);
    swift_release(v7);
    v2 = 0;
  }
  swift_retain(v2);
  return v3;
}

uint64_t Player.NowPlayingObserver.__allocating_init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  Player.NowPlayingObserver.init(player:)(a1);
  return v3;
}

uint64_t Player.nowPlaying.getter()
{
  return sub_100172524((uint64_t)&unk_10038E5A8, (uint64_t)&unk_10038E5D0);
}

uint64_t Player.$nowPlaying.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004933B0);
}

void sub_10017206C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038E5F0);
  v5 = swift_getKeyPath(&unk_10038E618);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001720E8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038E5F0);
  v5 = swift_getKeyPath(&unk_10038E618);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Player.nowPlayingPath.getter()
{
  return sub_100172524((uint64_t)&unk_10038E5F0, (uint64_t)&unk_10038E618);
}

uint64_t Player.$nowPlayingPath.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_100493758);
}

uint64_t sub_100172184(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE *v26;

  v2 = v1;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_8;
  KeyPath = swift_getKeyPath(&unk_10038E638);
  v8 = swift_getKeyPath(&unk_10038E660);
  v9 = a1;
  static Published.subscript.getter(&v26, v2, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  v10 = v26;
  if (v26)
  {
    type metadata accessor for SharePlayTogetherSession(0);
    v11 = v9;
    v12 = static NSObject.== infix(_:_:)(v11, v10);

    if ((v12 & 1) != 0)
      goto LABEL_7;
  }
  else
  {

  }
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  type metadata accessor for MainActor(0);
  v14 = v9;
  v15 = swift_retain(v2);
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(&unk_100450718, 48, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v2;
  v17[5] = v14;
  v18 = sub_1000C66A8((uint64_t)v6, (uint64_t)&unk_1004940D8, (uint64_t)v17);
  swift_release(v18);
LABEL_7:

LABEL_8:
  v19 = swift_getKeyPath(&unk_10038E638);
  v20 = swift_getKeyPath(&unk_10038E660);
  static Published.subscript.getter(&v26, v2, v19, v20);
  swift_release(v20);
  swift_release(v19);
  if (v26)
  {
    v21 = v26[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost];

  }
  else
  {
    v21 = 0;
  }
  v22 = swift_getKeyPath(&unk_10038E680);
  v23 = swift_getKeyPath(&unk_10038E6A8);
  LOBYTE(v26) = v21;
  swift_retain(v2);
  return static Published.subscript.setter(&v26, v2, v22, v23);
}

uint64_t sub_1001723B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100172424, v7, v8);
}

uint64_t sub_100172424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  KeyPath = swift_getKeyPath(&unk_10038E638);
  v3 = swift_getKeyPath(&unk_10038E660);
  static Published.subscript.getter((_QWORD *)(v0 + 16), v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = *(void **)(v0 + 16);
  if (!v4)
    goto LABEL_5;
  if ((SharePlayTogetherSession.isEquivalent(to:)(*(_QWORD *)(v0 + 16)) & 1) == 0)
  {

LABEL_5:
    SharePlayTogetherSession.cleanup(notifyObservers:)(1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Player.sharePlayTogetherSession.getter()
{
  return sub_100172524((uint64_t)&unk_10038E638, (uint64_t)&unk_10038E660);
}

uint64_t sub_100172524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

void sub_10017258C(void *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  KeyPath = swift_getKeyPath(&unk_10038E638);
  v4 = swift_getKeyPath(&unk_10038E660);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_10038E638);
  v7 = swift_getKeyPath(&unk_10038E660);
  v9 = a1;
  v8 = a1;
  swift_retain(v1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_100172184(v5);

}

uint64_t Player.$sharePlayTogetherSession.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_100493750);
}

void sub_100172674(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10038E680, (uint64_t)&unk_10038E6A8, a2);
}

uint64_t sub_100172688(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10038E680, (uint64_t)&unk_10038E6A8);
}

uint64_t Player.isHostingSharePlayTogetherSession.getter()
{
  return sub_1001727E4((uint64_t)&unk_10038E680, (uint64_t)&unk_10038E6A8);
}

uint64_t Player.$isHostingSharePlayTogetherSession.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_100492DA0);
}

void sub_1001726C4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10038E6C8, (uint64_t)&unk_10038E6F0, a2);
}

void sub_1001726D8(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  *a4 = v9;
}

uint64_t sub_100172750(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10038E6C8, (uint64_t)&unk_10038E6F0);
}

uint64_t sub_100172764(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t Player.isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_1001727E4((uint64_t)&unk_10038E6C8, (uint64_t)&unk_10038E6F0);
}

uint64_t sub_1001727E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_10017284C(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(*a1 + *a4, v8, 33, 0);
  v6 = sub_100005574(a5);
  Published.projectedValue.getter(v6);
  return swift_endAccess(v8);
}

uint64_t sub_1001728B8(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v11 = sub_100005574(a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v17 = &v23[-v16 - 8];
  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v18(&v23[-v16 - 8], a1, v11);
  v19 = *a2;
  v18(v15, v17, v11);
  swift_beginAccess(v19 + *a6, v23, 33, 0);
  v20 = sub_100005574(a7);
  Published.projectedValue.setter(v15, v20);
  swift_endAccess(v23);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t Player.$isEligibleForHostingSharePlayTogetherSession.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_100492DA0);
}

id Player.supportsDelegation.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v13;

  KeyPath = swift_getKeyPath(&unk_10038E560);
  v2 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  v5 = objc_msgSend(v13, "route", v3);

  if (!v5)
    return 0;
  objc_opt_self(MPAVEndpointRoute);
  v6 = (void *)swift_dynamicCastObjCClass(v5);
  if (!v6)
    goto LABEL_12;
  result = objc_msgSend(v6, "endpointObject");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v8 = result;
  v9 = objc_msgSend(result, "externalDevice");

  if (!v9 || (v10 = objc_msgSend(v9, "deviceInfo"), v9, !v10))
  {
LABEL_12:

    return 0;
  }
  v11 = objc_msgSend(v10, "deviceClass");

  return (id)(v11 == (id)7 || v11 == (id)4);
}

uint64_t Player.isInAnySharePlaySession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;

  KeyPath = swift_getKeyPath(&unk_10038E5A8);
  v2 = swift_getKeyPath(&unk_10038E5D0);
  static Published.subscript.getter(&v13, v0, KeyPath, v2);
  swift_release(v2);
  *(_QWORD *)&v3 = swift_release(KeyPath).n128_u64[0];
  v4 = v13;
  if (!v13
    || (v5 = objc_msgSend(v13, "isSharedListeningSession", v3), v4, (v5 & 1) == 0))
  {
    v6 = swift_getKeyPath(&unk_10038E638);
    v7 = swift_getKeyPath(&unk_10038E660);
    static Published.subscript.getter(&v13, v0, v6, v7);
    swift_release(v7);
    *(_QWORD *)&v8 = swift_release(v6).n128_u64[0];
    v9 = v13;
    if (!v13)
      return 0;
    result = *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
    if (!result)
    {
      __break(1u);
      return result;
    }
    if (objc_msgSend((id)result, "isPlaceholder", v8))
    {

      return 0;
    }
    if (*((_BYTE *)v9 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      v11 = swift_getKeyPath(&unk_10038E710);
      v12 = swift_getKeyPath(&unk_10038E738);
      static Published.subscript.getter(&v13, v9, v11, v12);
      swift_release(v12);
      swift_release(v11);

      return (uint64_t)v13 > 0;
    }

  }
  return 1;
}

void Player.sharePlayTogether(with:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  __n128 v14;
  _QWORD v15[5];
  _QWORD *v16;

  v4 = v3;
  v7 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken) = a1;
  v8 = a1;

  v9 = swift_allocObject(&unk_100450150, 24, 7);
  swift_weakInit(v9 + 16, v4);
  v10 = (_QWORD *)swift_allocObject(&unk_1004501F0, 48, 7);
  v10[2] = v9;
  v10[3] = v8;
  v10[4] = a2;
  v10[5] = a3;
  v15[4] = sub_100182B4C;
  v16 = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100172EB8;
  v15[3] = &unk_100450208;
  v11 = _Block_copy(v15);
  v12 = v16;
  v13 = v8;
  sub_10003A434(a2, a3);
  v14 = swift_release(v12);
  MRGroupSessionJoinSessionWithToken(v13, v11, v14);
  _Block_release(v11);
}

double sub_100172DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  char v17;
  void *v18;
  _BYTE v19[24];

  v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken;
    v14 = *(void **)(Strong + OBJC_IVAR____TtC9MusicCore6Player_currentSharePlayTogetherConnectionRequestToken);
    if (v14)
    {
      sub_1000087DC(0, &qword_100494178, MRGroupSessionToken_ptr);
      v15 = a5;
      v16 = v14;
      v17 = static NSObject.== infix(_:_:)(v15, v16);

      if ((v17 & 1) != 0)
      {
        v18 = *(void **)(v12 + v13);
        *(_QWORD *)(v12 + v13) = 0;

        if (a6)
          a6(a3);
      }
    }
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

void sub_100172EB8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v8 = v7;
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);
  swift_bridgeObjectRelease(v8);

}

void Player.requestSharePlayTogether(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  id v27[5];
  _QWORD *v28;

  v3 = v2;
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v7 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(v27, v3, KeyPath, v7);
  swift_release(v7);
  *(_QWORD *)&v8 = swift_release(KeyPath).n128_u64[0];
  v9 = v27[0];
  v10 = objc_msgSend(v27[0], "route", v8);

  if (v10)
  {
    objc_opt_self(MPAVEndpointRoute);
    v11 = (void *)swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = objc_msgSend(v11, "endpointObject");
      if (!v12)
      {
        __break(1u);
        return;
      }
      v13 = v12;
      v14 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
      v22 = (void *)static OS_dispatch_queue.main.getter(v14, v15, v16, v17, v18, v19, v20, v21);
      v23 = swift_allocObject(&unk_100450150, 24, 7);
      swift_weakInit(v23 + 16, v3);
      v24 = (_QWORD *)swift_allocObject(&unk_100450240, 40, 7);
      v24[2] = v23;
      v24[3] = a1;
      v24[4] = a2;
      v27[4] = sub_100182B8C;
      v28 = v24;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = (id)1107296256;
      v27[2] = sub_100173334;
      v27[3] = &unk_100450258;
      v25 = _Block_copy(v27);
      v26 = v28;
      sub_10003A434(a1, a2);
      objc_msgSend(v13, "requestGroupSessionWithQueue:completion:", v22, v25, swift_release(v26).n128_f64[0]);
      _Block_release(v25);

    }
  }
}

double sub_10017310C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  double result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v24[24];

  v12 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v12);
  v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v24, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v17 = Strong;
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v14, 1, 1, v18);
    type metadata accessor for MainActor(0);
    swift_retain(v17);
    sub_10003A434(a5, a6);
    swift_bridgeObjectRetain();
    v19 = swift_errorRetain(a3);
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_100450830, 80, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v17;
    v21[5] = a5;
    v21[6] = a6;
    v21[7] = a1;
    v21[8] = a2;
    v21[9] = a3;
    v22 = sub_1000C66A8((uint64_t)v14, (uint64_t)&unk_100494170, (uint64_t)v21);
    swift_release(v17);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

uint64_t sub_10017326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001732E8, v10, v11);
}

uint64_t sub_1001732E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_10017D030();
  if (v1)
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 24))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100173334(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  swift_retain(v4);
  v9 = a3;
  v5(v6, v8, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v8);
}

uint64_t Player.getNowPlaying()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[17] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[18] = v2;
  v1[19] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[20] = v3;
  v1[21] = v4;
  return swift_task_switch(sub_100173424, v3, v4);
}

uint64_t sub_100173424()
{
  uint64_t v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = sub_10017BB88();
  v2 = *(void **)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  *(_QWORD *)(v0 + 176) = v2;
  v3 = v2;

  v5 = static MainActor.shared.getter(v4);
  *(_QWORD *)(v0 + 184) = v5;
  if (v5)
  {
    ObjectType = swift_getObjectType();
    v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v9 = v8;
  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  return swift_task_switch(sub_1001734B0, v7, v9);
}

uint64_t sub_1001734B0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;

  v1 = v0 + 2;
  v2 = (void *)v0[22];
  v0[7] = v0 + 16;
  v0[2] = v0;
  v0[3] = sub_1001735A0;
  v3 = swift_continuation_init(v0 + 2, 1);
  v4 = swift_allocObject(&unk_100450290, 24, 7);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_100182BA8;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_1000AC9C8;
  v5[3] = &unk_1004502A8;
  v6 = _Block_copy(v5);
  v7 = objc_msgSend(v2, "performWithCompletion:", v6, swift_release(v5[5]).n128_f64[0]);
  _Block_release(v6);
  swift_unknownObjectRelease(v7);
  return swift_continuation_await(v1);
}

uint64_t sub_1001735A0(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_1001737F4;
  }
  else
  {
    v7 = v2[23];
    v2[25] = v2[16];
    swift_release(v7);
    v4 = v2[20];
    v5 = v2[21];
    v6 = sub_10017361C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10017361C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  unsigned int v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 152));
  if (v1)
  {
    v2 = *(id *)(v0 + 200);
    v3 = objc_msgSend(v2, "playerPath");
    v4 = objc_msgSend(v3, "isSystemMusicPath");

    if (v4
      || (v5 = objc_msgSend(v2, "playerPath"),
          v6 = objc_msgSend(v5, "representedBundleID"),
          v5,
          !v6))
    {
      v7 = *(_QWORD *)(v0 + 200);
    }
    else
    {

      v7 = 0;
    }
    v8 = *(_QWORD *)(v0 + 136);
    KeyPath = swift_getKeyPath(&unk_10038E5A8);
    v10 = swift_getKeyPath(&unk_10038E5D0);
    *(_QWORD *)(v0 + 80) = v7;
    swift_retain(v8);
    static Published.subscript.setter(v0 + 80, v8, KeyPath, v10);
    v11 = objc_msgSend(v2, "playerPath");
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 136);
    v13 = swift_getKeyPath(&unk_10038E5A8);
    v14 = swift_getKeyPath(&unk_10038E5D0);
    *(_QWORD *)(v0 + 80) = 0;
    swift_retain(v12);
    static Published.subscript.setter(v0 + 80, v12, v13, v14);
    v11 = 0;
  }
  v15 = *(void **)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 136);
  v17 = swift_getKeyPath(&unk_10038E5F0);
  v18 = swift_getKeyPath(&unk_10038E618);
  *(_QWORD *)(v0 + 80) = v11;
  swift_retain(v16);
  static Published.subscript.setter(v0 + 80, v16, v17, v18);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_1001737F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 152));

  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

void sub_100173838(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  void *v10;

  if (a2)
  {
    v5 = sub_100005574((uint64_t *)&unk_1004911F0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a2;
    swift_errorRetain(a2);
    swift_continuation_throwingResumeWithError(a3, v6);
  }
  else
  {
    v10 = a1;
    v8 = *(_QWORD *)(*(_QWORD *)(a3 + 64) + 40);
    v9 = a1;
    sub_1000149A8((uint64_t)&v10, v8, &qword_100493790);
    swift_continuation_throwingResume(a3);
  }
}

void sub_1001738E4()
{
  uint64_t v0;
  char *v1;
  id v2;
  _QWORD *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  void *v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  char *v19;
  id v20;
  _BYTE *v21;
  char *v22;
  id v23;
  char **v24;
  uint64_t v25;
  _BYTE v26[24];

  v1 = sub_10017BB88();
  v2 = *(id *)&v1[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v26, 0, 0);
  v4 = (void *)v3[1];
  v5 = (id)*v3;
  v6 = v4;
  v7 = swift_bridgeObjectRetain();
  v8 = (id)sub_100182BB0(v7);
  v10 = v9;

  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v2, "playingItemProperties");
  if (v11
    && (v12 = v11, v13 = objc_msgSend(v11, "containsPropertySet:", *v3), v12, v13)
    && (v14 = objc_msgSend(v2, "queueSectionProperties")) != 0)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, "containsPropertySet:", v3[1]);

    v17 = v16 ^ 1;
  }
  else
  {
    v17 = 1;
  }
  if (objc_msgSend(v2, "tracklistRange") != v8 || (v17 & 1) != 0 || v18 != v10)
  {
    objc_msgSend(v2, "setPlayingItemProperties:", *v3);
    objc_msgSend(v2, "setQueueItemProperties:", *v3);
    objc_msgSend(v2, "setQueueSectionProperties:", v3[1]);
    objc_msgSend(v2, "setTracklistRange:", v8, v10);
    v19 = sub_10017A4D0();
    v20 = *(id *)&v19[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];

    objc_msgSend(v20, "setPlayingItemProperties:", *v3);
    v21 = (_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, &v25, 0, 0);
    if (*v21 == 2)
    {
      v22 = sub_10017BB88();
      v23 = *(id *)&v22[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];

      v24 = &selRef_setNeedsReloadForSignificantRequestChange;
      if (!v17)
        v24 = &selRef_setNeedsReload;
      objc_msgSend(v23, *v24);

    }
  }

}

uint64_t Player.NowPlayingConfiguration.tracklistRange.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100182BB0(a3);
}

id Player.nowPlayingConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  _BYTE v7[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v7, 0, 0);
  v2 = *(id *)v1;
  v3 = *(void **)(v1 + 8);
  v4 = *(id *)v1;
  v5 = v3;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Player.nowPlayingConfiguration.setter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _BYTE v13[24];

  v7 = v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v3 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v13, 1, 0);
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
  v10 = a1;
  v11 = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  sub_1001738E4();

  return swift_bridgeObjectRelease();
}

void (*Player.nowPlayingConfiguration.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, a1, 33, 0);
  return sub_100173CA8;
}

void sub_100173CA8(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1001738E4();
}

void UIView.Shadow.color.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

void Player.NowPlayingConfiguration.queueSectionProperties.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.insert(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_100173D50(a1.reverseCount, a1.forwardCount);
}

unint64_t sub_100173D50(Swift::UInt a1, Swift::UInt a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  v6 = *v2;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_6;
  result = sub_1000A5928(a1, a2);
  if ((v8 & 1) == 0)
  {
    v6 = *v3;
LABEL_6:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v13 = *v3;
    *v3 = 0x8000000000000000;
    v12 = 1;
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * result);
  v10 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v13 = *v3;
    *v3 = 0x8000000000000000;
    v12 = v10;
LABEL_7:
    sub_10009A4EC(v12, a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v13;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Player.NowPlayingConfiguration.BadCountedSet.insert(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  Dictionary.subscript.getter(&v15, v6, *v2, v4, &type metadata for Int, v10);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    v11 = 1;
LABEL_4:
    v15 = v11;
    v16 = 0;
    v14 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10);
    return Dictionary.subscript.setter(&v15, v8, v14);
  }
  v12 = v15;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v11 = v12 + 1;
  if (!__OFADD__(v12, 1))
    goto LABEL_4;
  __break(1u);
  return result;
}

Swift::Void __swiftcall Player.NowPlayingConfiguration.remove(_:)(__C::MPCPlayerRequestTracklistRange a1)
{
  sub_100173F50(a1.reverseCount, a1.forwardCount);
}

Swift::UInt sub_100173F50(Swift::UInt result, Swift::UInt a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  Swift::UInt v5;
  Swift::UInt v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = a2;
    v6 = result;
    result = sub_1000A5928(result, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * result);
      v9 = v8 - 1;
      if (__OFSUB__(v8, 1))
      {
        __break(1u);
      }
      else
      {
        if (v9 > 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
          v15 = *v3;
          *v3 = 0x8000000000000000;
          sub_10009A4EC(v9, v6, v5, isUniquelyReferenced_nonNull_native);
          *v3 = v15;
          return swift_bridgeObjectRelease();
        }
        result = sub_1000A5928(v6, v5);
        if ((v11 & 1) == 0)
          return result;
        v5 = result;
        v12 = swift_isUniquelyReferenced_nonNull_native(*v3);
        v13 = *v3;
        v14 = *v3;
        *v3 = 0x8000000000000000;
        if ((v12 & 1) != 0)
        {
LABEL_8:
          sub_10018199C(v5, v13);
          *v3 = v13;
          return swift_bridgeObjectRelease();
        }
      }
      sub_1001B65D4();
      v13 = v14;
      goto LABEL_8;
    }
  }
  return result;
}

_QWORD *Player.NowPlayingConfiguration.BadCountedSet.remove(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 24);
  result = Dictionary.subscript.getter(&v14, v6, *v2, v4, &type metadata for Int, v10);
  if (v15 != 1)
  {
    v12 = v14 - 1;
    if (__OFSUB__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      if (v12 < 1)
      {
        v14 = 0;
        v15 = 1;
      }
      else
      {
        v14 = v12;
        v15 = 0;
      }
      v13 = type metadata accessor for Dictionary(0, v4, &type metadata for Int, v10);
      return (_QWORD *)Dictionary.subscript.setter(&v14, v8, v13);
    }
  }
  return result;
}

__n128 Player.NowPlayingConfiguration.BadCountedSet.makeIterator()@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  _OWORD v9[2];
  uint64_t v10;

  v6 = swift_bridgeObjectRetain();
  _NativeDictionary.makeIterator()(v9, v6, a1, &type metadata for Int, a2);
  v7 = v10;
  result = (__n128)v9[1];
  *(_OWORD *)a3 = v9[0];
  *(__n128 *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 32) = v7;
  return result;
}

double sub_1001741C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  Player.NowPlayingConfiguration.BadCountedSet.makeIterator()(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (uint64_t)v5);
  swift_bridgeObjectRelease();
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_100174214(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF(v2, a1, a2);
  swift_bridgeObjectRelease(*v2);
  return v3;
}

uint64_t sub_100174250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)(a1, a2, a4, a3);
}

BOOL Player.canPerform(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = sub_10000ABC8(a1, v2);
  return sub_100181FF4((uint64_t)v4, v1, v2, v3);
}

uint64_t Player.canPerform(anyOf:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = sub_100178360(a1, a2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
    if (v5)
      v6 = v5;
    else
      v6 = 0;
    if (v5)
      v7 = a1;
    else
      v7 = 0;
    if (v7)
      v8 = (*(uint64_t (**)(void *))(v6 + 16))(v4);
    else
      v8 = 0;

  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_100174324(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v4 + 360) = v3;
  *(double *)(v4 + 352) = a3;
  *(_QWORD *)(v4 + 336) = a1;
  *(_QWORD *)(v4 + 344) = a2;
  v5 = sub_100005574((uint64_t *)&unk_100493720);
  *(_QWORD *)(v4 + 368) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_1004938D0);
  *(_QWORD *)(v4 + 376) = v6;
  *(_QWORD *)(v4 + 384) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100494148);
  *(_QWORD *)(v4 + 392) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 400) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v4 + 408) = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 416) = swift_task_alloc(v10);
  *(_QWORD *)(v4 + 424) = swift_task_alloc(v10);
  v11 = *(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8);
  *(_QWORD *)(v4 + 432) = v11;
  v12 = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v4 + 440) = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 448) = swift_task_alloc(v13);
  *(_QWORD *)(v4 + 456) = swift_task_alloc(v13);
  v14 = type metadata accessor for UUID(0);
  *(_QWORD *)(v4 + 464) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 472) = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v4 + 480) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 488) = swift_task_alloc(v16);
  *(_QWORD *)(v4 + 496) = swift_task_alloc(v16);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 504) = v17;
  *(_QWORD *)(v4 + 512) = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 520) = v18;
  *(_QWORD *)(v4 + 528) = v19;
  return swift_task_switch(sub_1001744A8, v18, v19);
}

uint64_t sub_1001744A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v1 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD **)(v0 + 336);
  v3 = v2[3];
  v4 = v2[4];
  v5 = sub_10000ABC8(v2, v3);
  if (sub_100181FF4((uint64_t)v5, v1, v3, v4))
  {
    v6 = *(_QWORD *)(v0 + 336);
    v7 = sub_100005574((uint64_t *)&unk_1004940F0);
    v8 = swift_allocObject(v7, 72, 7);
    *(_QWORD *)(v0 + 576) = v8;
    *(_OWORD *)(v8 + 16) = xmmword_100384A80;
    sub_1000244B0(v6, v8 + 32);
    v9 = (_QWORD *)swift_task_alloc(dword_100493964);
    *(_QWORD *)(v0 + 584) = v9;
    *v9 = v0;
    v9[1] = sub_100175034;
    return sub_100175C4C(v8, *(_QWORD *)(v0 + 344));
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 496);
    v12 = *(_QWORD *)(v0 + 464);
    v13 = *(_QWORD *)(v0 + 344);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 472) + 16);
    *(_QWORD *)(v0 + 536) = v14;
    v14(v11, v13, v12);
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v16 = type metadata accessor for Logger(0, v15);
    v17 = sub_1000086B4(v16, (uint64_t)qword_1004A2230);
    *(_QWORD *)(v0 + 544) = v17;
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "╭ ⏱️ Await for command", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }
    v76 = v0 + 80;
    v21 = *(_QWORD *)(v0 + 336);

    v22 = sub_1000244B0(v21, v0 + 160);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v78 = v26;
      *(_DWORD *)v25 = 136446210;
      sub_1000244B0(v0 + 160, v0 + 240);
      v27 = sub_100005574(&qword_100493120);
      v28 = (char *)String.init<A>(describing:)(v0 + 240, v27);
      v30 = v29;
      *(_QWORD *)(v25 + 4) = sub_100019400(v28, v29, &v78);
      swift_bridgeObjectRelease(v30);
      sub_10000682C((_QWORD *)(v0 + 160));
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "| %{public}s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      sub_10000682C((_QWORD *)(v0 + 160));
    }

    v31 = sub_100183FF0(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 456));
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    v34 = os_log_type_enabled(v32, v33);
    v35 = *(_QWORD *)(v0 + 456);
    if (v34)
    {
      v36 = swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v78 = v37;
      *(_DWORD *)v36 = 136446210;
      v38 = (char *)Player.CommandOptions.description.getter(v37);
      v40 = v39;
      *(_QWORD *)(v36 + 4) = sub_100019400(v38, v39, &v78);
      swift_bridgeObjectRelease(v40);
      sub_100184034(v35);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "╰ options=%{public}s", (uint8_t *)v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);
    }
    else
    {
      sub_100184034(*(_QWORD *)(v0 + 456));
    }

    sub_1000244B0(*(_QWORD *)(v0 + 336), v76);
    v41 = sub_100005574(&qword_100493120);
    v42 = sub_100005574(&qword_1004941E0);
    v43 = swift_dynamicCast(v0 + 120, v76, v41, v42, 6);
    v44 = *(_QWORD *)(v0 + 360);
    if (v43)
    {
      v45 = v0 + 304;
      sub_10000682C((_QWORD *)(v0 + 120));
      v46 = OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
    }
    else
    {
      v45 = v0 + 280;
      v46 = OBJC_IVAR____TtC9MusicCore6Player__playerResponse;
    }
    swift_beginAccess(v44 + v46, v45, 33, 0);
    v47 = sub_100005574((uint64_t *)&unk_1004933B0);
    Published.projectedValue.getter(v47);
    swift_endAccess(v45);
    v48 = *(_QWORD *)(v0 + 448);
    v73 = v48;
    v49 = *(_QWORD *)(v0 + 424);
    v75 = *(_QWORD *)(v0 + 432);
    v50 = *(_QWORD *)(v0 + 416);
    v74 = *(_QWORD *)(v0 + 408);
    v51 = *(_QWORD *)(v0 + 392);
    v52 = *(_QWORD *)(v0 + 400);
    v71 = v51;
    v72 = v50;
    v53 = *(_QWORD *)(v0 + 376);
    v54 = *(_QWORD *)(v0 + 384);
    v55 = *(_QWORD *)(v0 + 360);
    v56 = *(_QWORD *)(v0 + 368);
    v77 = *(_QWORD *)(v0 + 440);
    v69 = *(_QWORD *)(v0 + 336);
    v70 = *(_QWORD *)(v0 + 344);
    v57 = sub_10002FFB8((unint64_t *)&qword_100493050, &qword_1004938D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    AsyncPublisher.init(_:)(v54, v53, v57);
    v58 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v56, 1, 1, v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v50, v49, v51);
    sub_1000244B0(v69, v0 + 200);
    sub_100183FF0(v70, v48);
    v59 = v55;
    v60 = swift_retain(v55);
    v61 = static MainActor.shared.getter(v60);
    v62 = *(unsigned __int8 *)(v52 + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = (v74 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    v65 = (v64 + 47) & 0xFFFFFFFFFFFFFFF8;
    v66 = *(unsigned __int8 *)(v75 + 80);
    v67 = (v66 + v65 + 8) & ~v66;
    v68 = swift_allocObject(&unk_100450998, v67 + v77, v62 | v66 | 7);
    *(_QWORD *)(v68 + 16) = v61;
    *(_QWORD *)(v68 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v68 + v63, v72, v71);
    sub_1000137C8((__int128 *)(v0 + 200), v68 + v64);
    *(_QWORD *)(v68 + v65) = v59;
    sub_1000648AC(v73, v68 + v67, type metadata accessor for Player.CommandOptions);
    *(_QWORD *)(v0 + 552) = sub_1001AD36C(v56, (uint64_t)&unk_1004941F0, v68);
    return swift_task_switch(sub_100174AC4, 0, 0);
  }
}

uint64_t sub_100174AC4()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;

  v1 = *((_QWORD *)v0 + 69);
  v2 = v0[44];
  *((_QWORD *)v0 + 7) = v0 + 41;
  *((_QWORD *)v0 + 2) = v0;
  *((_QWORD *)v0 + 3) = sub_100174B2C;
  v3 = swift_continuation_init(v0 + 2, 1);
  sub_10017F79C(v3, v1, v2);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_100174B2C(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 560) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_100174E04;
  }
  else
  {
    v2[71] = v2[41];
    v4 = v2[66];
    v5 = v2[65];
    v6 = sub_100174BA8;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100174BA8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v3 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 464);
  v5 = swift_release(*(_QWORD *)(v0 + 512));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 552);
  v11 = *(_QWORD *)(v0 + 488);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 464);
  v14 = *(_QWORD *)(v0 + 472);
  v15 = *(_QWORD *)(v0 + 424);
  v36 = *(_QWORD *)(v0 + 400);
  v37 = *(_QWORD *)(v0 + 392);
  if (v9)
  {
    v35 = *(_QWORD *)(v0 + 424);
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v38 = v17;
    *(_DWORD *)v16 = 136446210;
    v18 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v18);
    v34 = v12;
    v21 = v20;
    *(_QWORD *)(v16 + 4) = sub_100019400(v19, v20, &v38);
    swift_bridgeObjectRelease(v21);
    v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "⏱️✅ Awaiting for command succeeded (%{public}s)", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
    swift_release(v10);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    v22(v34, v13);
  }
  else
  {
    swift_release(v10);

    v23 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v23(v11, v13);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v15, v37);
    v23(v12, v13);
  }
  v24 = *(_QWORD *)(v0 + 568);
  v25 = *(_QWORD *)(v0 + 488);
  v26 = *(_QWORD *)(v0 + 480);
  v28 = *(_QWORD *)(v0 + 448);
  v27 = *(_QWORD *)(v0 + 456);
  v30 = *(_QWORD *)(v0 + 416);
  v29 = *(_QWORD *)(v0 + 424);
  v31 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t sub_100174E04()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 536);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 552));
  v6 = swift_release(v2);
  v7 = v1(v4, v3, v5, v6);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter();
  v10 = os_log_type_enabled(v8, v9);
  v12 = *(_QWORD *)(v0 + 472);
  v11 = *(_QWORD *)(v0 + 480);
  v13 = *(_QWORD *)(v0 + 464);
  if (v10)
  {
    v14 = swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v36 = v15;
    *(_DWORD *)v14 = 136446210;
    v16 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v17 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v13, v16);
    v19 = v18;
    *(_QWORD *)(v14 + 4) = sub_100019400(v17, v18, &v36);
    swift_bridgeObjectRelease(v19);
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "⌛️❌ Timed out waiting for command (%{public}s)", (uint8_t *)v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 464));
  }

  v21 = *(_QWORD *)(v0 + 496);
  v22 = *(_QWORD *)(v0 + 464);
  v23 = *(_QWORD *)(v0 + 424);
  v24 = *(_QWORD *)(v0 + 392);
  v25 = *(_QWORD *)(v0 + 400);
  swift_willThrow(v26);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  v20(v21, v22);
  v27 = *(_QWORD *)(v0 + 488);
  v28 = *(_QWORD *)(v0 + 480);
  v30 = *(_QWORD *)(v0 + 448);
  v29 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 416);
  v31 = *(_QWORD *)(v0 + 424);
  v33 = *(_QWORD *)(v0 + 384);
  v34 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100175034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 584);
  v3[74] = a1;
  v3[75] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_100175200;
  }
  else
  {
    swift_bridgeObjectRelease(v3[72]);
    v5 = v3[66];
    v6 = v3[65];
    v7 = sub_1001750B4;
  }
  return swift_task_switch(v7, v6, v5);
}

void sub_1001750B4()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 592);
  swift_release(*(_QWORD *)(v0 + 512));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 592);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 592);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 592);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 592));
    v3 = *(_QWORD *)(v0 + 592);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 592);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    v7 = *(_QWORD *)(v0 + 488);
    v8 = *(_QWORD *)(v0 + 480);
    v10 = *(_QWORD *)(v0 + 448);
    v9 = *(_QWORD *)(v0 + 456);
    v12 = *(_QWORD *)(v0 + 416);
    v11 = *(_QWORD *)(v0 + 424);
    v13 = *(_QWORD *)(v0 + 384);
    v14 = *(_QWORD *)(v0 + 368);
    swift_task_dealloc(*(_QWORD *)(v0 + 496));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_100175200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 576);
  swift_release(*(_QWORD *)(v0 + 512));
  swift_bridgeObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 488);
  v3 = *(_QWORD *)(v0 + 480);
  v5 = *(_QWORD *)(v0 + 448);
  v4 = *(_QWORD *)(v0 + 456);
  v7 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 424);
  v8 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 496));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001752BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  v7[19] = a1;
  v8 = sub_100005574(&qword_100494150);
  v7[24] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[25] = v9;
  v7[26] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[27] = v10;
  v7[28] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[29] = v11;
  v7[30] = v12;
  return swift_task_switch(sub_100175360, v11, v12);
}

uint64_t sub_100175360()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = sub_100005574(&qword_100494148);
  v2 = AsyncPublisher.makeAsyncIterator()(v1);
  v0[31] = static MainActor.shared.getter(v2);
  v3 = sub_10002FFB8(&qword_100494158, &qword_100494150, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[32] = v4;
  *v4 = v0;
  v4[1] = sub_100175410;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v0[24], v3);
}

uint64_t sub_100175410()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 248);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_100175778;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001754D4;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_1001754D4()
{
  _QWORD *v0;

  swift_release(v0[31]);
  v0[34] = v0[17];
  return swift_task_switch(sub_100175514, v0[29], v0[30]);
}

uint64_t sub_100175514(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;

  v2 = *(void **)(v1 + 272);
  if (v2 == (void *)1)
  {
    v15 = *(_QWORD *)(v1 + 224);
    v16 = *(_QWORD **)(v1 + 152);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 200) + 8))(*(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 192));
    swift_release(v15);
    *v16 = 0;
    swift_task_dealloc(*(_QWORD *)(v1 + 208));
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    if (v2)
    {
      sub_1000244B0(*(_QWORD *)(v1 + 168), v1 + 56);
      v3 = v2;
      v4 = sub_100005574(&qword_100493120);
      v5 = sub_100005574(&qword_100494228);
      if (swift_dynamicCast(v1 + 96, v1 + 56, v4, v5, 6))
      {
        sub_1000137C8((__int128 *)(v1 + 96), v1 + 16);
        v6 = *(_QWORD *)(v1 + 40);
        v7 = *(_QWORD *)(v1 + 48);
        sub_10000ABC8((_QWORD *)(v1 + 16), v6);
        v8 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v7 + 24))(v3, v6, v7);
        v9 = *(void **)(v1 + 272);
        if (v8)
        {
          v10 = *(_QWORD *)(v1 + 168);

          sub_10000682C((_QWORD *)(v1 + 16));
          sub_100183D38(v9);
          v11 = sub_100005574((uint64_t *)&unk_1004940F0);
          v12 = swift_allocObject(v11, 72, 7);
          *(_QWORD *)(v1 + 280) = v12;
          *(_OWORD *)(v12 + 16) = xmmword_100384A80;
          sub_1000244B0(v10, v12 + 32);
          v13 = (_QWORD *)swift_task_alloc(dword_100493964);
          *(_QWORD *)(v1 + 288) = v13;
          *v13 = v1;
          v13[1] = sub_1001757D8;
          return sub_100175C4C(v12, *(_QWORD *)(v1 + 184));
        }
        sub_10000682C((_QWORD *)(v1 + 16));
        sub_100183D38(v9);
        v18 = v9;
      }
      else
      {
        v17 = *(void **)(v1 + 272);
        *(_OWORD *)(v1 + 96) = 0u;
        *(_OWORD *)(v1 + 112) = 0u;
        *(_QWORD *)(v1 + 128) = 0;
        sub_100008758(v1 + 96, &qword_100494230);
        sub_100183D38(v17);
        v18 = v17;
      }
      sub_100183D38(v18);
    }
    *(_QWORD *)(v1 + 248) = static MainActor.shared.getter(a1);
    v19 = sub_10002FFB8(&qword_100494158, &qword_100494150, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v20 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 256) = v20;
    *v20 = v1;
    v20[1] = sub_100175410;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 136, *(_QWORD *)(v1 + 192), v19);
  }
}

uint64_t sub_100175778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 264);
  v1 = sub_100005574((uint64_t *)&unk_1004911F0);
  v2 = swift_dynamicCast(v1, v0 + 144, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1001757D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease();
  if (v1)
    v5 = sub_100175960;
  else
    v5 = sub_100175850;
  return swift_task_switch(v5, v3[29], v3[30]);
}

void sub_100175850()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 296);
  swift_release(*(_QWORD *)(v0 + 224));
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    sub_100183D38(*(id *)(v0 + 272));
    swift_bridgeObjectRelease();
    v2 = 0;
    goto LABEL_12;
  }
  if (*(uint64_t *)(v0 + 296) < 0)
    v3 = *(_QWORD *)(v0 + 296);
  else
    v3 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v3);
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 296));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 296) + 32);
LABEL_6:
    sub_100183D38(*(id *)(v0 + 272));
    swift_bridgeObjectRelease();
LABEL_12:
    v6 = *(_QWORD *)(v0 + 200);
    v5 = *(_QWORD *)(v0 + 208);
    v7 = *(_QWORD *)(v0 + 192);
    **(_QWORD **)(v0 + 152) = v2;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_100175960()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 224));
  sub_100183D38(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001759C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[5] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[6] = v5;
  v3[7] = v6;
  return swift_task_switch(sub_100175A38, v5, v6);
}

uint64_t sub_100175A38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[2];
  v2 = sub_100005574((uint64_t *)&unk_1004940F0);
  v3 = swift_allocObject(v2, 72, 7);
  v0[8] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  sub_1000244B0(v1, v3 + 32);
  v4 = (_QWORD *)swift_task_alloc(dword_100493964);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_100175AC0;
  return sub_100175C4C(v3, v0[3]);
}

uint64_t sub_100175AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v3[10] = a1;
  v3[11] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_100175C0C;
  }
  else
  {
    swift_bridgeObjectRelease(v3[8]);
    v5 = v3[6];
    v6 = v3[7];
    v7 = sub_100175B34;
  }
  return swift_task_switch(v7, v5, v6);
}

void sub_100175B34()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 40));
  if (!(v1 >> 62))
  {
    v2 = *(id *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_11:
    v4 = *(_QWORD *)(v0 + 80);
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v0 + 80);
  if (v5 < 0)
    v6 = *(_QWORD *)(v0 + 80);
  else
    v6 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v2 = (id)_CocoaArrayWrapper.endIndex.getter(v6);
  swift_bridgeObjectRelease(v5);
  if (!v2)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 80));
    v3 = *(_QWORD *)(v0 + 80);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v0 + 80);
    v2 = *(id *)(v3 + 32);
LABEL_6:
    v4 = v3;
LABEL_12:
    swift_bridgeObjectRelease(v4);
    (*(void (**)(id))(v0 + 8))(v2);
    return;
  }
  __break(1u);
}

uint64_t sub_100175C0C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100175C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v4 = type metadata accessor for Player.CommandOptions(0);
  v3[28] = v4;
  v3[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v3[30] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[31] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[32] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[33] = swift_task_alloc(v8);
  v3[34] = swift_task_alloc(v8);
  v3[35] = swift_task_alloc(v8);
  v3[36] = swift_task_alloc(v8);
  v3[37] = swift_task_alloc(v8);
  v3[38] = swift_task_alloc(v8);
  v3[39] = swift_task_alloc(v8);
  v3[40] = swift_task_alloc(v8);
  v3[41] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v3[42] = v9;
  v3[43] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v3[44] = v10;
  v3[45] = v11;
  return swift_task_switch(sub_100175D74, v10, v11);
}

uint64_t sub_100175D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  _BYTE *v54;
  __n128 v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _DWORD *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  _QWORD *v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 200) + 16))
  {
    v1 = *(_QWORD *)(v0 + 328);
    v2 = *(_QWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 208);
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 248) + 16);
    *(_QWORD *)(v0 + 368) = v4;
    v4(v1, v3, v2);
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v7 = *(_QWORD *)(v0 + 320);
    v6 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = type metadata accessor for Logger(0, v5);
    *(_QWORD *)(v0 + 376) = sub_1000086B4(v9, (uint64_t)qword_1004A2230);
    v78 = v4;
    v10 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v4)(v7, v6, v8);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 320);
    v15 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 248);
    if (v13)
    {
      v17 = swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v80 = v18;
      *(_DWORD *)v17 = 136446210;
      v19 = (char *)UUID.uuidString.getter(v18);
      v21 = v20;
      *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, &v80);
      swift_bridgeObjectRelease(v21);
      v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v22(v14, v15);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "╭ Will perform commands %{public}s", (uint8_t *)v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {
      v22 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v22(v14, v15);

    }
    *(_QWORD *)(v0 + 384) = v22;
    v33 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 200), 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    v36 = os_log_type_enabled(v34, v35);
    v37 = *(_QWORD *)(v0 + 200);
    v79 = v22;
    if (v36)
    {
      v38 = swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v80 = v39;
      *(_DWORD *)v38 = 136446210;
      swift_bridgeObjectRetain();
      v40 = sub_100005574(&qword_100493120);
      v41 = (char *)Array.description.getter(v37, v40);
      v43 = v42;
      swift_bridgeObjectRelease(v37);
      *(_QWORD *)(v38 + 4) = sub_100019400(v41, v43, &v80);
      swift_bridgeObjectRelease_n(v37, 2);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "| %{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v37, 2);
    }
    v44 = sub_100183FF0(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 232));
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter();
    v47 = os_log_type_enabled(v45, v46);
    v48 = *(_QWORD *)(v0 + 232);
    if (v47)
    {
      v49 = swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      v80 = v50;
      *(_DWORD *)v49 = 136446210;
      v51 = (char *)Player.CommandOptions.description.getter(v50);
      v53 = v52;
      *(_QWORD *)(v49 + 4) = sub_100019400(v51, v52, &v80);
      swift_bridgeObjectRelease(v53);
      sub_100184034(v48);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "╰ options=%{public}s", (uint8_t *)v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
    }
    else
    {
      sub_100184034(*(_QWORD *)(v0 + 232));
    }

    v54 = (_BYTE *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC9MusicCore6Player_engineState);
    v55 = swift_beginAccess(v54, v0 + 128, 0, 0);
    if (*v54 != 2)
    {
      v56 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, __n128))v78)(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v55);
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.default.getter();
      v59 = os_log_type_enabled(v57, v58);
      v60 = *(_QWORD *)(v0 + 312);
      v61 = *(_QWORD *)(v0 + 240);
      if (v59)
      {
        v62 = swift_slowAlloc(12, -1);
        v63 = swift_slowAlloc(32, -1);
        v80 = v63;
        *(_DWORD *)v62 = 136446210;
        v64 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v65 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v61, v64);
        v67 = v66;
        *(_QWORD *)(v62 + 4) = sub_100019400(v65, v66, &v80);
        swift_bridgeObjectRelease(v67);
        v79(v60, v61);
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "╭ Commands (%{public}s)", (uint8_t *)v62, 0xCu);
        swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v63, -1, -1);
        swift_slowDealloc(v62, -1, -1);
      }
      else
      {
        v79(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 240));
      }

      v68 = swift_retain_n(*(_QWORD *)(v0 + 216), 2);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (_DWORD *)swift_slowAlloc(12, -1);
        v80 = swift_slowAlloc(32, -1);
        *v71 = 136446210;
        __asm { BR              X10 }
      }
      v72 = *(_QWORD *)(v0 + 216);

      v73 = swift_release_n(v72, 2);
      v74 = Logger.logObject.getter(v73);
      v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v76 = 0;
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "╰ Awaiting on engine to be ready", v76, 2u);
        swift_slowDealloc(v76, -1, -1);
      }

    }
    v77 = (_QWORD *)swift_task_alloc(dword_100493874);
    *(_QWORD *)(v0 + 392) = v77;
    *v77 = v0;
    v77[1] = sub_100176598;
    return Player.startEngineIfNeeded()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 344));
    v23 = *(_QWORD *)(v0 + 320);
    v25 = *(_QWORD *)(v0 + 304);
    v24 = *(_QWORD *)(v0 + 312);
    v27 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 296);
    v29 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 280);
    v30 = *(_QWORD *)(v0 + 264);
    v31 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc(*(_QWORD *)(v0 + 328));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100176598()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  return swift_task_switch(sub_1001765E4, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_1001765E4()
{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  void *v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, __n128);
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  NSString v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107[2];

  v1 = *(void **)(*(_QWORD *)(v0 + 208) + *(int *)(*(_QWORD *)(v0 + 224) + 32));
  *(_QWORD *)(v0 + 400) = v1;
  if (v1)
  {
    v2 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 368);
    v3 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 240);
    v6 = objc_allocWithZone((Class)MPCPlayerRequest);
    v7 = v1;
    v8 = objc_msgSend(v6, "init");
    *(_QWORD *)(v0 + 408) = v8;
    v9 = v2(v4, v3, v5);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 304);
    v14 = *(_QWORD *)(v0 + 240);
    if (v12)
    {
      v105 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v107[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v18 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v14, v17);
      v19 = v8;
      v20 = v7;
      v22 = v21;
      *(_QWORD *)(v15 + 4) = sub_100019400(v18, v21, v107);
      v23 = v22;
      v7 = v20;
      v8 = v19;
      swift_bridgeObjectRelease(v23);
      v105(v13, v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "╭ Commands (%{public}s)", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 240));
    }

    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "╰ 🔊 Resolving specified route", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    v47 = (void *)objc_opt_self(MPCPlayerPath);
    v48 = qword_10048C858;
    v49 = v7;
    if (v48 != -1)
      swift_once(&qword_10048C858, sub_100150D8C);
    v50 = *(_QWORD *)(v0 + 216);
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v47, "systemMusicPathWithRoute:playerID:", v49, v51);

    objc_msgSend(v8, "setPlayerPath:", v52);
    v53 = objc_msgSend(v8, "setPlayingItemProperties:", *(_QWORD *)(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration), swift_beginAccess(v50 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, v0 + 152, 0, 0).n128_f64[0]);
    v54 = static MainActor.shared.getter(v53);
    *(_QWORD *)(v0 + 416) = v54;
    if (v54)
    {
      ObjectType = swift_getObjectType();
      v56 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v58 = v57;
    }
    else
    {
      v56 = 0;
      v58 = 0;
    }
    return swift_task_switch(sub_100176EE8, v56, v58);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 216);
    KeyPath = swift_getKeyPath(&unk_10038EB68);
    v26 = swift_getKeyPath(&unk_10038EB90);
    static Published.subscript.getter((_QWORD *)(v0 + 192), v24, KeyPath, v26);
    swift_release(KeyPath);
    v27 = swift_release(v26);
    v28 = *(void **)(v0 + 192);
    *(_QWORD *)(v0 + 440) = v28;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
    if (v28)
    {
      v29(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240), v27);
      v30 = v28;
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      v33 = os_log_type_enabled(v31, v32);
      v34 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v35 = *(_QWORD *)(v0 + 288);
      v36 = *(_QWORD *)(v0 + 240);
      if (v33)
      {
        v37 = swift_slowAlloc(12, -1);
        v38 = swift_slowAlloc(32, -1);
        v107[0] = v38;
        *(_DWORD *)v37 = 136446210;
        v39 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v40 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
        v42 = v41;
        *(_QWORD *)(v37 + 4) = sub_100019400(v40, v41, v107);
        swift_bridgeObjectRelease(v42);
        v34(v35, v36);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "╭ Performing Commands (%{public}s)", (uint8_t *)v37, 0xCu);
        swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1, -1);
        swift_slowDealloc(v37, -1, -1);
      }
      else
      {
        v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
      }

      v77 = v30;
      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc(12, -1);
        v81 = swift_slowAlloc(32, -1);
        v107[0] = v81;
        *(_DWORD *)v80 = 136446210;
        v82 = objc_msgSend(v77, "playerPath");
        v83 = objc_msgSend(v82, "description");
        v84 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
        v86 = v85;

        *(_QWORD *)(v80 + 4) = sub_100019400(v84, v86, v107);
        swift_bridgeObjectRelease(v86);
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "╰ playerPath=%{public}s", (uint8_t *)v80, 0xCu);
        swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v81, -1, -1);
        swift_slowDealloc(v80, -1, -1);

      }
      else
      {

      }
      v87 = (_QWORD *)swift_task_alloc(dword_1004942F4);
      *(_QWORD *)(v0 + 448) = v87;
      *v87 = v0;
      v87[1] = sub_10017773C;
      return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    }
    else
    {
      v60 = *(_QWORD *)(v0 + 328);
      v61 = *(_QWORD *)(v0 + 272);
      v62 = *(_QWORD *)(v0 + 240);
      v63 = swift_release(*(_QWORD *)(v0 + 344));
      v64 = v29(v61, v60, v62, v63);
      v65 = Logger.logObject.getter(v64);
      v66 = static os_log_type_t.error.getter();
      v67 = os_log_type_enabled(v65, v66);
      v68 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
      v69 = *(_QWORD *)(v0 + 272);
      v70 = *(_QWORD *)(v0 + 240);
      if (v67)
      {
        v71 = swift_slowAlloc(12, -1);
        v72 = swift_slowAlloc(32, -1);
        v107[0] = v72;
        *(_DWORD *)v71 = 136446210;
        v73 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v74 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v70, v73);
        v76 = v75;
        *(_QWORD *)(v71 + 4) = sub_100019400(v74, v75, v107);
        swift_bridgeObjectRelease(v76);
        v68(v69, v70);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "╭ Commands (%{public}s)", (uint8_t *)v71, 0xCu);
        swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v72, -1, -1);
        swift_slowDealloc(v71, -1, -1);
      }
      else
      {
        v68(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
      }

      v89 = Logger.logObject.getter(v88);
      v90 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v91 = 0;
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "╰ ❌ Unavailable Commands (nil Response)", v91, 2u);
        swift_slowDealloc(v91, -1, -1);
      }
      v92 = *(_QWORD *)(v0 + 200);

      v93 = sub_100184070();
      swift_allocError(&_s12CommandErrorON, v93, 0, 0);
      *(_QWORD *)v94 = v92;
      *(_BYTE *)(v94 + 40) = 1;
      swift_bridgeObjectRetain();
      swift_willThrow(v95);
      v97 = *(_QWORD *)(v0 + 320);
      v96 = *(_QWORD *)(v0 + 328);
      v99 = *(_QWORD *)(v0 + 304);
      v98 = *(_QWORD *)(v0 + 312);
      v101 = *(_QWORD *)(v0 + 288);
      v100 = *(_QWORD *)(v0 + 296);
      v103 = *(_QWORD *)(v0 + 272);
      v102 = *(_QWORD *)(v0 + 280);
      v104 = *(_QWORD *)(v0 + 264);
      v106 = *(_QWORD *)(v0 + 232);
      (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v96, *(_QWORD *)(v0 + 240));
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v106);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_100176EE8()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v1 = v0;
  v2 = (void *)v0[51];
  v3 = v1 + 2;
  v4 = (void (*)(uint64_t, uint64_t, uint64_t))v1[46];
  v5 = v1[41];
  v6 = v1[37];
  v8 = v1[31];
  v7 = v1[32];
  v9 = v1[30];
  v1[7] = v1 + 23;
  v1[2] = v1;
  v1[3] = sub_100177048;
  v10 = swift_continuation_init(v1 + 2, 1);
  v4(v6, v5, v9);
  v11 = *(unsigned __int8 *)(v8 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_100450948, v13 + 8, v11 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v14 + v12, v6, v9);
  *(_QWORD *)(v14 + v13) = v10;
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[4] = sub_100184120;
  v1[5] = v14;
  v1[1] = 1107296256;
  v1[2] = sub_1000AC9C8;
  v1[3] = &unk_100450960;
  v15 = _Block_copy(v1);
  v16 = objc_msgSend(v2, "performWithCompletion:", v15, swift_release(v1[5]).n128_f64[0]);
  _Block_release(v15);
  swift_unknownObjectRelease(v16);
  return swift_continuation_await(v3);
}

uint64_t sub_100177048(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2[53] = v3;
  v4 = v2[52];
  if (v3)
  {
    swift_willThrow(a1);
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_10017765C;
  }
  else
  {
    v2[54] = v2[23];
    swift_release(v4);
    v5 = v2[44];
    v6 = v2[45];
    v7 = sub_1001770D0;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1001770D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, __n128);
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  char *v42;
  char *v43;
  char *v44;
  _QWORD *v45;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66[2];

  v1 = *(void **)(v0 + 400);

  v2 = *(void **)(v0 + 432);
  *(_QWORD *)(v0 + 440) = v2;
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  if (v2)
  {
    ((void (*)(_QWORD, _QWORD, _QWORD))v3)(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
    v4 = v2;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v9 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 240);
    if (v7)
    {
      v64 = v4;
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v66[0] = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v14 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
      v16 = v15;
      *(_QWORD *)(v11 + 4) = sub_100019400(v14, v15, v66);
      swift_bridgeObjectRelease(v16);
      v8(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "╭ Performing Commands (%{public}s)", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      v17 = v11;
      v4 = v64;
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      v8(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240));
    }

    v35 = v4;
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v66[0] = v39;
      *(_DWORD *)v38 = 136446210;
      v40 = objc_msgSend(v35, "playerPath");
      v41 = objc_msgSend(v40, "description");
      v42 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v44 = v43;

      *(_QWORD *)(v38 + 4) = sub_100019400(v42, v44, v66);
      swift_bridgeObjectRelease(v44);

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "╰ playerPath=%{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {

    }
    v45 = (_QWORD *)swift_task_alloc(dword_1004942F4);
    *(_QWORD *)(v0 + 448) = v45;
    *v45 = v0;
    v45[1] = sub_10017773C;
    return MPCPlayerResponse.perform(_:options:)(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 328);
    v19 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 240);
    v21 = swift_release(*(_QWORD *)(v0 + 344));
    v22 = v3(v19, v18, v20, v21);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    v27 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 240);
    if (v25)
    {
      v29 = swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v66[0] = v30;
      *(_DWORD *)v29 = 136446210;
      v31 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v28, v31);
      v34 = v33;
      *(_QWORD *)(v29 + 4) = sub_100019400(v32, v33, v66);
      swift_bridgeObjectRelease(v34);
      v26(v27, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "╭ Commands (%{public}s)", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      v26(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240));
    }

    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "╰ ❌ Unavailable Commands (nil Response)", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }
    v51 = *(_QWORD *)(v0 + 200);

    v52 = sub_100184070();
    swift_allocError(&_s12CommandErrorON, v52, 0, 0);
    *(_QWORD *)v53 = v51;
    *(_BYTE *)(v53 + 40) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow(v54);
    v56 = *(_QWORD *)(v0 + 320);
    v55 = *(_QWORD *)(v0 + 328);
    v58 = *(_QWORD *)(v0 + 304);
    v57 = *(_QWORD *)(v0 + 312);
    v60 = *(_QWORD *)(v0 + 288);
    v59 = *(_QWORD *)(v0 + 296);
    v62 = *(_QWORD *)(v0 + 272);
    v61 = *(_QWORD *)(v0 + 280);
    v63 = *(_QWORD *)(v0 + 264);
    v65 = *(_QWORD *)(v0 + 232);
    (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v55, *(_QWORD *)(v0 + 240));
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10017765C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(void **)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 344);

  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v8 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 272);
  v9 = *(_QWORD *)(v0 + 280);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v3, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017773C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 448);
  v3[57] = a1;
  v3[58] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100177AF8;
  else
    v5 = sub_1001777A4;
  return swift_task_switch(v5, v3[44], v3[45]);
}

uint64_t sub_1001777A4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v43 = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_100019400(v16, v17, &v43);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "╭ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
  }

  v19 = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 456), 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(_QWORD *)(v0 + 456);
  v24 = *(void **)(v0 + 440);
  if (v22)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v43 = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = sub_1000087DC(0, (unint64_t *)&unk_1004941D0, MPCPlayerCommandStatus_ptr);
    v28 = swift_bridgeObjectRetain();
    v29 = (char *)Array.description.getter(v28, v27);
    v31 = v30;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v25 + 4) = sub_100019400(v29, v31, &v43);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease_n(v23, 2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "╰ ✅ Successfully performed with statuses=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 456), 2);
  }

  (*(void (**)(_QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 240));
  v42 = *(_QWORD *)(v0 + 456);
  v32 = *(_QWORD *)(v0 + 320);
  v34 = *(_QWORD *)(v0 + 304);
  v33 = *(_QWORD *)(v0 + 312);
  v36 = *(_QWORD *)(v0 + 288);
  v35 = *(_QWORD *)(v0 + 296);
  v38 = *(_QWORD *)(v0 + 272);
  v37 = *(_QWORD *)(v0 + 280);
  v39 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 232);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v42);
}

uint64_t sub_100177AF8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44[2];

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 368);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 240);
  v5 = swift_release(*(_QWORD *)(v0 + 344));
  v6 = v1(v3, v2, v4, v5);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  v11 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  if (v9)
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v44[0] = v14;
    *(_DWORD *)v13 = 136446210;
    v15 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v16 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    v18 = v17;
    *(_QWORD *)(v13 + 4) = sub_100019400(v16, v17, v44);
    swift_bridgeObjectRelease(v18);
    v10(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "╭ Commands (%{public}s)", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v10(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  }

  v19 = *(_QWORD *)(v0 + 464);
  swift_errorRetain(v19);
  v20 = swift_errorRetain(v19);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v0 + 464);
  if (v23)
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v44[0] = v26;
    *(_DWORD *)v25 = 136446210;
    *(_QWORD *)(v0 + 176) = v24;
    swift_errorRetain(v24);
    v27 = sub_100005574((uint64_t *)&unk_1004911F0);
    v28 = (char *)String.init<A>(describing:)(v0 + 176, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_100019400(v28, v29, v44);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(v24);
    swift_errorRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "╰ ❌ Failed to perform command with error=%{public}s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 464));
    swift_errorRelease(v24);
  }

  v31 = *(void **)(v0 + 440);
  swift_willThrow(v32);

  v34 = *(_QWORD *)(v0 + 320);
  v33 = *(_QWORD *)(v0 + 328);
  v36 = *(_QWORD *)(v0 + 304);
  v35 = *(_QWORD *)(v0 + 312);
  v38 = *(_QWORD *)(v0 + 288);
  v37 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 264);
  v43 = *(_QWORD *)(v0 + 232);
  (*(void (**)(uint64_t, _QWORD))(v0 + 384))(v33, *(_QWORD *)(v0 + 240));
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100177E44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  double result;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v15 = (char *)&v58 - v14;
  if (a1)
  {
    v16 = qword_10048C880;
    v17 = a1;
    if (v16 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v19 = type metadata accessor for Logger(0, v18);
    sub_1000086B4(v19, (uint64_t)qword_1004A2230);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(12, -1);
      v58 = a4;
      v24 = v23;
      v25 = swift_slowAlloc(32, -1);
      v59 = v25;
      *(_DWORD *)v24 = 136446210;
      v26 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v27 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v26);
      v29 = v28;
      *(_QWORD *)(v24 + 4) = sub_100019400(v27, v28, &v59);
      swift_bridgeObjectRelease(v29);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "╭ Commands (%{public}s)", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      v30 = v24;
      a4 = v58;
      swift_slowDealloc(v30, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }

    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "╰ 🔊✅ Successfully resolved specified route", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    v59 = (uint64_t)a1;
    sub_1000149A8((uint64_t)&v59, *(_QWORD *)(*(_QWORD *)(a4 + 64) + 40), &qword_100493790);
    swift_continuation_throwingResume(a4);
  }
  else
  {
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v31 = type metadata accessor for Logger(0, v13);
    sub_1000086B4(v31, (uint64_t)qword_1004A2230);
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a3, v8);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(12, -1);
      v58 = a4;
      v36 = v35;
      v37 = swift_slowAlloc(32, -1);
      v59 = v37;
      *(_DWORD *)v36 = 136446210;
      v38 = sub_100006924(&qword_1004941C8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v39 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v8, v38);
      v41 = v40;
      *(_QWORD *)(v36 + 4) = sub_100019400(v39, v40, &v59);
      swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "╭ Commands (%{public}s)", (uint8_t *)v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      v42 = v36;
      a4 = v58;
      swift_slowDealloc(v42, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }

    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "╰ 🔊❌ Failed to resolve specified route", v51, 2u);
      swift_slowDealloc(v51, -1, -1);
    }

    if (a2)
    {
      v52 = a2;
    }
    else
    {
      v53 = sub_100184070();
      v52 = swift_allocError(&_s12CommandErrorON, v53, 0, 0);
      *(_OWORD *)v54 = 0u;
      *(_OWORD *)(v54 + 16) = 0u;
      *(_QWORD *)(v54 + 32) = 0;
      *(_BYTE *)(v54 + 40) = 2;
    }
    v55 = sub_100005574((uint64_t *)&unk_1004911F0);
    v56 = swift_allocError(v55, &protocol self-conformance witness table for Error, 0, 0);
    *v57 = v52;
    swift_errorRetain(a2);
    return swift_continuation_throwingResumeWithError(a4, v56);
  }
  return result;
}

uint64_t sub_100178360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  void *v6;
  uint64_t v7;
  _QWORD v9[5];
  _QWORD v10[2];

  v10[0] = a1;
  v10[1] = a2;
  v3 = sub_100005574(&qword_100494238);
  v4 = sub_100005574(&qword_1004941E0);
  if (swift_dynamicCast(v9, v10, v3, v4, 6))
  {
    sub_10000682C(v9);
    KeyPath = swift_getKeyPath(&unk_10038E5A8);
    v6 = &unk_10038E5D0;
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_10038EB68);
    v6 = &unk_10038EB90;
  }
  v7 = swift_getKeyPath(v6);
  static Published.subscript.getter(v9, v2, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);
  return v9[0];
}

uint64_t Player.prepareForBufferedAirPlay()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[54] = v0;
  v1[55] = *v0;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  v1[56] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[57] = v3;
  v1[58] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[59] = v4;
  v1[60] = v5;
  return swift_task_switch(sub_1001784CC, v4, v5);
}

uint64_t sub_1001784CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __n128 v17;
  id v19;
  _UNKNOWN **v20;
  id v21;
  NSString v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 432);
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v3 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter((_QWORD *)(v0 + 424), v1, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v4 = swift_release(v3).n128_u64[0];
  v5 = *(void **)(v0 + 424);
  v6 = objc_msgSend(v5, "route", v4);
  *(_QWORD *)(v0 + 488) = v6;

  if (!v6)
  {
    v11 = *(_QWORD *)(v0 + 432);
    swift_release(*(_QWORD *)(v0 + 464));
    v12 = swift_getKeyPath(&unk_10038E560);
    v13 = swift_getKeyPath(&unk_10038E588);
    static Published.subscript.getter((_QWORD *)(v0 + 408), v11, v12, v13);
    swift_release(v12);
    swift_release(v13);
    v14 = *(_QWORD *)(v0 + 408);
    v15 = sub_100182CE4();
    swift_allocError(&type metadata for Player.BufferedAirPlayError, v15, 0, 0);
    *v16 = v14;
    swift_willThrow(v17);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  objc_opt_self(MPAVEndpointRoute);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {
    v10 = *(_QWORD *)(v0 + 464);
    goto LABEL_7;
  }
  v8 = (void *)v7;
  v9 = v6;
  if ((objc_msgSend(v8, "isDeviceRoute") & 1) != 0)
  {
    v10 = *(_QWORD *)(v0 + 464);

LABEL_7:
    swift_release(v10);
    swift_task_dealloc(*(_QWORD *)(v0 + 448));
    return (*(uint64_t (**)(id))(v0 + 8))(v6);
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
  v20 = &_ss17__CocoaDictionaryV12makeIteratorAB0D0CyF_ptr;
  v21 = objc_allocWithZone((Class)MPAVRoutingController);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v21, "initWithDataSource:name:", v19, v22);
  *(_QWORD *)(v0 + 496) = v23;

  if (qword_10048C880 != -1)
    swift_once(&qword_10048C880, sub_100170054);
  v25 = type metadata accessor for Logger(0, v24);
  *(_QWORD *)(v0 + 504) = sub_1000086B4(v25, (uint64_t)qword_1004A2230);
  v26 = v9;
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v42 = v30;
    *(_DWORD *)v29 = 136446210;
    v31 = v26;
    v32 = objc_msgSend(v31, "description");
    v33 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v35 = v34;

    *(_QWORD *)(v29 + 4) = sub_100019400(v33, v35, &v42);
    swift_bridgeObjectRelease(v35);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "🚏 Switching to buffered AirPlay onto route=%{public}s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    v36 = v30;
    v20 = &_ss17__CocoaDictionaryV12makeIteratorAB0D0CyF_ptr;
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {

  }
  v37 = *(_QWORD *)(v0 + 432);
  v38 = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  *(_QWORD *)(v0 + 512) = OBJC_IVAR____TtC9MusicCore6Player_routingController;
  v39 = *(void **)(v37 + v38);
  *(_QWORD *)(v37 + v38) = v23;
  v40 = v23;

  v41 = (void *)objc_opt_self(v20[507]);
  *(_QWORD *)(v0 + 520) = v41;
  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_100178940;
  *(_QWORD *)(v0 + 352) = swift_continuation_init(v0 + 144, 1);
  *(_QWORD *)(v0 + 320) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 328) = 0x40000000;
  *(_QWORD *)(v0 + 336) = sub_1000A40C0;
  *(_QWORD *)(v0 + 344) = &unk_1004502D0;
  objc_msgSend(v41, "setActiveRoute:completion:", 0, v0 + 320);
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_100178940()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 528) = v2;
  if (v2)
    v3 = sub_100179394;
  else
    v3 = sub_10017899C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_10017899C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v2 = v0[61];
  v1 = (void *)v0[62];
  v0[2] = v0;
  v0[3] = sub_100178A3C;
  v0[49] = swift_continuation_init(v0 + 2, 1);
  v0[45] = _NSConcreteStackBlock;
  v0[46] = 0x40000000;
  v0[47] = sub_1000A40C0;
  v0[48] = &unk_1004502E8;
  objc_msgSend(v1, "selectRoute:operation:completion:", v2, 0, v0 + 45);
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_100178A3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 536) = v2;
  if (v2)
    v3 = sub_1001795F4;
  else
    v3 = sub_100178A98;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_100178A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 544) = v2;
  if (v2)
  {
    ObjectType = swift_getObjectType();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  return swift_task_switch(sub_100178B00, v4, v6);
}

uint64_t sub_100178B00()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = (void *)v0[65];
  v0[15] = v0 + 50;
  v0[10] = v0;
  v0[11] = sub_100178BE4;
  v2 = swift_continuation_init(v0 + 10, 1);
  v3 = swift_allocObject(&unk_100450310, 24, 7);
  *(_QWORD *)(v3 + 16) = v2;
  v0[38] = sub_100182D38;
  v0[39] = v3;
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 1107296256;
  v0[36] = sub_1000F7EF4;
  v0[37] = &unk_100450328;
  v4 = _Block_copy(v0 + 34);
  swift_release(v0[39]);
  objc_msgSend(v1, "getActiveRouteWithTimeout:completion:", v4, 2.0);
  _Block_release(v4);
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_100178BE4(__n128 a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 552) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_100178E88;
  }
  else
  {
    v7 = v2[68];
    v2[70] = v2[50];
    swift_release(v7);
    v4 = v2[59];
    v5 = v2[60];
    v6 = sub_100178C60;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100178C60()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v1 = Logger.logObject.getter(*(id *)(v0 + 560));
  v2 = static os_log_type_t.default.getter(v1);
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(void **)(v0 + 560);
  if (v3)
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v20 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = v4;
    v8 = objc_msgSend(v7, "description");
    v9 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    *(_QWORD *)(v5 + 4) = sub_100019400(v9, v11, &v20);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "🚏 Awaiting updated player response for route=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 448);
  v13 = *(_QWORD *)(v0 + 432);
  v14 = *(id *)(v0 + 560);
  swift_retain(v13);
  sub_10017C9E8(v14, v13);

  swift_release(v13);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  v16 = swift_retain(v13);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_100450360, 40, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v13;
  *(_QWORD *)(v0 + 568) = sub_1000C66A8(v12, (uint64_t)&unk_1004938A8, (uint64_t)v18);
  return swift_task_switch(sub_100178F1C, 0, 0);
}

uint64_t sub_100178E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 512);
  v3 = *(_QWORD *)(v0 + 432);
  swift_release(*(_QWORD *)(v0 + 464));
  swift_release(v1);
  v4 = *(void **)(v3 + v2);
  v5 = *(void **)(v0 + 496);
  if (v4 && v5 == v4)
  {
    v6 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v6 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178F1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[71];
  v0[26] = v0;
  v0[27] = sub_100178F70;
  v2 = swift_continuation_init(v0 + 26, 1);
  sub_10017F5C4(v2, v1, 5.0);
  return swift_continuation_await(v0 + 26);
}

uint64_t sub_100178F70(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 576) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_1001791B0;
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 472);
    v5 = *(_QWORD *)(v2 + 480);
    v6 = sub_100178FDC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100178FDC()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;

  v1 = *(void **)(v0 + 560);
  swift_release(*(_QWORD *)(v0 + 464));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 568);
  v6 = *(void **)(v0 + 560);
  if (v4)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v21 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v21);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_100019400(v11, v13, &v21);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "🚏✅ Successfully switched to buffered AirPlay onto route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  swift_release(v5);

  v14 = *(_QWORD *)(v0 + 512);
  v15 = *(_QWORD *)(v0 + 432);
  v16 = *(void **)(v15 + v14);
  v17 = *(void **)(v0 + 496);
  if (v16)
  {
    v18 = *(void **)(v0 + 488);
    if (v17 == v16)
    {
      *(_QWORD *)(v15 + v14) = 0;

    }
  }
  else
  {
    v18 = *(void **)(v0 + 488);
  }

  v19 = *(_QWORD *)(v0 + 560);
  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
}

uint64_t sub_1001791B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v22;

  v1 = *(void **)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 568));
  swift_release(v2);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.error.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(void **)(v0 + 560);
  if (v5)
  {
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v22 = v8;
    *(_DWORD *)v7 = 136446210;
    v9 = v6;
    v10 = objc_msgSend(v9, "description", v22);
    v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *(_QWORD *)(v7 + 4) = sub_100019400(v11, v13, &v22);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "🚏❌ Timed out waiting for a valid ReplaceCommand on route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 560);
  v15 = *(_QWORD *)(v0 + 512);
  v16 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v17);

  v18 = *(void **)(v16 + v15);
  v19 = *(void **)(v0 + 496);
  if (v18 && v19 == v18)
  {
    v20 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v20 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179394()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  v1 = swift_release(*(_QWORD *)(v0 + 464));
  v2 = *(_QWORD *)(v0 + 528);
  v3 = *(void **)(v0 + 488);
  swift_willThrow(v1);
  v4 = v3;
  swift_errorRetain(v2);
  v5 = v4;
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_100019400(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v2;
    swift_errorRetain(v2);
    v17 = sub_100005574((uint64_t *)&unk_1004911F0);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_100019400(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🚏❌ Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001795F4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v29[2];

  v1 = swift_release(*(_QWORD *)(v0 + 464));
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(void **)(v0 + 488);
  swift_willThrow(v1);
  v4 = v3;
  swift_errorRetain(v2);
  v5 = v4;
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 488);
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v12 = v9;
    v13 = objc_msgSend(v12, "description");
    v14 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    *(_QWORD *)(v10 + 4) = sub_100019400(v14, v16, v29);
    swift_bridgeObjectRelease(v16);

    *(_WORD *)(v10 + 12) = 2082;
    *(_QWORD *)(v0 + 416) = v2;
    swift_errorRetain(v2);
    v17 = sub_100005574((uint64_t *)&unk_1004911F0);
    v18 = (char *)String.init<A>(describing:)(v0 + 416, v17);
    v20 = v19;
    *(_QWORD *)(v10 + 14) = sub_100019400(v18, v19, v29);
    swift_bridgeObjectRelease(v20);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🚏❌ Failed switching to route=%{public}s with error=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v21 = *(void **)(v0 + 488);

    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v22 = *(_QWORD *)(v0 + 512);
  v23 = *(_QWORD *)(v0 + 432);
  swift_willThrow(v24);
  v25 = *(void **)(v23 + v22);
  v26 = *(void **)(v0 + 496);
  if (v25 && v26 == v25)
  {
    v27 = *(void **)(v0 + 488);
    *(_QWORD *)(*(_QWORD *)(v0 + 432) + *(_QWORD *)(v0 + 512)) = 0;

  }
  else
  {
    v27 = *(void **)(v0 + 488);
  }

  swift_task_dealloc(*(_QWORD *)(v0 + 448));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100179854(void *a1, uint64_t a2)
{
  id v3;
  double result;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;

  if (a1)
  {
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    v3 = a1;
    swift_continuation_throwingResume(a2);
  }
  else
  {
    v5 = sub_100182CE4();
    v6 = swift_allocError(&type metadata for Player.BufferedAirPlayError, v5, 0, 0);
    *v7 = 1;
    v8 = sub_100005574((uint64_t *)&unk_1004911F0);
    v9 = swift_allocError(v8, &protocol self-conformance witness table for Error, 0, 0);
    *v10 = v6;
    return swift_continuation_throwingResumeWithError(a2, v9);
  }
  return result;
}

uint64_t sub_1001798EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[7] = a4;
  v5 = sub_100005574(&qword_1004938D0);
  v4[8] = v5;
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_100494148);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_100494150);
  v4[13] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[14] = v9;
  v4[15] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[16] = v10;
  v4[17] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[18] = v11;
  v4[19] = v12;
  return swift_task_switch(sub_1001799DC, v11, v12);
}

uint64_t sub_1001799DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[8];
  swift_beginAccess(v0[7] + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v0 + 2, 33, 0);
  v6 = sub_100005574((uint64_t *)&unk_1004933B0);
  Published.projectedValue.getter(v6);
  swift_endAccess(v0 + 2);
  v7 = sub_10002FFB8((unint64_t *)&qword_100493050, &qword_1004938D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  AsyncPublisher.init(_:)(v4, v5, v7);
  AsyncPublisher.makeAsyncIterator()(v3);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[20] = static MainActor.shared.getter(v8);
  v9 = sub_10002FFB8(&qword_100494158, &qword_100494150, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[21] = v10;
  *v10 = v0;
  v10[1] = sub_100179B28;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 5, v0[13], v9);
}

uint64_t sub_100179B28()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_100179E10;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_100179BEC;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_100179BEC()
{
  _QWORD *v0;

  swift_release(v0[20]);
  v0[23] = v0[5];
  return swift_task_switch(sub_100179C2C, v0[18], v0[19]);
}

uint64_t sub_100179C2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t result;
  uint64_t (*v4)(void);
  id v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = *(void **)(v1 + 184);
  if (v2 == (void *)1)
  {
    v15 = *(_QWORD *)(v1 + 136);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 112) + 8))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 104));
    swift_release(v15);
    goto LABEL_9;
  }
  if (!v2)
    goto LABEL_11;
  result = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
  if (result)
  {
    v4 = *(uint64_t (**)(void))(result + 16);
    v5 = v2;
    v6 = v4();
    sub_100183D38(v2);
    if ((v6 & 1) != 0
      && (v7 = objc_msgSend(v5, "playerPath"),
          v8 = objc_msgSend(v7, "route"),
          v7,
          v8))
    {
      v9 = *(void **)(v1 + 184);
      v10 = objc_msgSend(v8, "isDeviceRoute");
      sub_100183D38(v9);

      if (v10)
      {
        v12 = *(_QWORD *)(v1 + 112);
        v11 = *(_QWORD *)(v1 + 120);
        v13 = *(_QWORD *)(v1 + 104);
        v14 = swift_release(*(_QWORD *)(v1 + 136));
        (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v11, v13, v14);
LABEL_9:
        v16 = *(_QWORD *)(v1 + 96);
        v17 = *(_QWORD *)(v1 + 72);
        swift_task_dealloc(*(_QWORD *)(v1 + 120));
        swift_task_dealloc(v16);
        swift_task_dealloc(v17);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }
    }
    else
    {
      sub_100183D38(*(id *)(v1 + 184));
    }
LABEL_11:
    *(_QWORD *)(v1 + 160) = static MainActor.shared.getter(a1);
    v18 = sub_10002FFB8(&qword_100494158, &qword_100494150, (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    v19 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v1 + 168) = v19;
    *v19 = v1;
    v19[1] = sub_100179B28;
    return dispatch thunk of AsyncIteratorProtocol.next()(v1 + 40, *(_QWORD *)(v1 + 104), v18);
  }
  __break(1u);
  return result;
}

uint64_t sub_100179E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 176);
  v1 = sub_100005574((uint64_t *)&unk_1004911F0);
  v2 = swift_dynamicCast(v1, v0 + 48, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

double sub_100179E70(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _DWORD *v15;
  _BYTE v16[24];

  v2 = v1;
  v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  *(_QWORD *)&result = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v16, 0, 0).n128_u64[0];
  if (*v4 != a1)
  {
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v7 = type metadata accessor for Logger(0, v5);
    v8 = sub_1000086B4(v7, (uint64_t)qword_1004A2230);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "╭ Updated Engine State", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    v12 = swift_retain_n(v2, 2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (_DWORD *)swift_slowAlloc(12, -1);
      swift_slowAlloc(32, -1);
      *v15 = 136446210;
      __asm { BR              X10 }
    }
    swift_release_n(v2, 2);

    __asm { BR              X10 }
  }
  return result;
}

uint64_t Player.engineState.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v3, 0, 0);
  return *v1;
}

uint64_t Player.EngineState.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10017A368 + 4 * byte_10038E54C[a1]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_10017A368()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_10017A38C()
{
  return 0x6461655220859CE2;
}

uint64_t sub_10017A3A8()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_10017A3CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10017A3FC + 4 * byte_10038E550[*v0]))(0x66664F208C9DE2, 0xA700000000000000);
}

uint64_t sub_10017A3FC()
{
  return 0x61745320809A9FF0;
}

uint64_t sub_10017A420()
{
  return 0x6461655220859CE2;
}

uint64_t sub_10017A43C()
{
  return 0x53208FB8EFA09AE2;
}

uint64_t sub_10017A460()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10038EB68);
  v2 = swift_getKeyPath(&unk_10038EB90);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

char *sub_10017A4D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void *v13;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___playbackDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_10038E560);
    v6 = swift_getKeyPath(&unk_10038E588);
    static Published.subscript.getter(&v13, v4, KeyPath, v6);
    swift_release(v6);
    swift_release(KeyPath);
    v7 = v13;
    v8 = swift_allocObject(&unk_100450150, 24, 7);
    swift_weakInit(v8 + 16, v4);
    objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    swift_retain(v4);
    v9 = sub_10017D6DC(0x6B63616279616C50, (void *)0xEF646E616D6D6F43, v7, (uint64_t)sub_100183B70, v8, (uint64_t)sub_100183B78, v4);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

double sub_10017A604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)(sub_100183BCC);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

void sub_10017A6D8(uint64_t a1, id a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  _BYTE v15[24];

  v5 = objc_msgSend(a2, "playerPath");
  if (v5)
  {
    v6 = v5;
    swift_beginAccess(a1 + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v15, 33, 0);
    v7 = sub_100180F84((unint64_t)v6);
    swift_endAccess(v15);

    if (v7)
    {
      if (qword_10048C880 != -1)
        swift_once(&qword_10048C880, sub_100170054);
      v9 = type metadata accessor for Logger(0, v8);
      v10 = sub_1000086B4(v9, (uint64_t)qword_1004A2230);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "| Cancelling ongoing timer for switching back to system route", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      swift_getObjectType();
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease(v7);
    }
    v14 = a3;
    sub_100183854(a3);

  }
  else
  {
    __break(1u);
  }
}

void sub_10017A860(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  void *v16;
  char v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = objc_msgSend(a1, "playerPath");
  if (v3)
  {
    v5 = v3;
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v6 = type metadata accessor for Logger(0, v4);
    sub_1000086B4(v6, (uint64_t)qword_1004A2230);
    swift_errorRetain(a2);
    v7 = swift_errorRetain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v30 = v11;
      *(_DWORD *)v10 = 136446210;
      v29 = a2;
      swift_errorRetain(a2);
      v12 = sub_100005574((uint64_t *)&unk_1004911F0);
      v13 = (char *)String.init<A>(describing:)(&v29, v12);
      v15 = v14;
      *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v30);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "╭ Player Response failed to load with error=%{public}s", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v16 = (void *)_convertErrorToNSError(_:)(a2);
    v17 = sub_10017ABD0();

    if ((v17 & 1) != 0)
    {
      __chkstk_darwin(v18);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_100183B80);

    }
    else
    {
      v19 = v5;
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc(12, -1);
        v23 = swift_slowAlloc(32, -1);
        v30 = v23;
        *(_DWORD *)v22 = 136446210;
        v24 = v19;
        v25 = objc_msgSend(v24, "description");
        v26 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v28 = v27;

        *(_QWORD *)(v22 + 4) = sub_100019400(v26, v28, &v30);
        swift_bridgeObjectRelease(v28);

        _os_log_impl((void *)&_mh_execute_header, v20, v21, "╰ playerPath=%{public}s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10017ABD0()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;

  v1 = v0;
  v2 = objc_msgSend(v0, "domain");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6 = objc_msgSend(v1, "code");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPAVRouteConnectionErrorDomain);
  if (v7 == v3 && v8 == v5)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    if (v6 == (id)2)
      return 1;
  }
  else
  {
    v10 = v8;
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v3, v5, 0);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v10);
    if ((v11 & 1) != 0 && v6 == (id)2)
      return 1;
  }
  v45 = (unint64_t)_swiftEmptyArrayStorage;
  v13 = objc_msgSend(v1, "userInfo");
  v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSMultipleUnderlyingErrorsKey);
  v17 = v16;
  if (*(_QWORD *)(v14 + 16) && (v18 = sub_10009ABAC(v15, v16), (v19 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v14 + 56) + 32 * v18, (uint64_t)&v43);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
    if (*((_QWORD *)&v44 + 1))
    {
      v20 = sub_100005574(&qword_100491C18);
      if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v20, 6) & 1) != 0)
        sub_10008AB48((uint64_t)v42);
      goto LABEL_16;
    }
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v14);
  }
  sub_100008758((uint64_t)&v43, &qword_100491B90);
LABEL_16:
  v21 = objc_msgSend(v1, "userInfo");
  v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  v25 = v24;
  if (*(_QWORD *)(v22 + 16) && (v26 = sub_10009ABAC(v23, v24), (v27 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v22 + 56) + 32 * v26, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v22);
  if (*((_QWORD *)&v44 + 1))
  {
    v28 = sub_1000087DC(0, (unint64_t *)&qword_100491C10, NSError_ptr);
    if ((swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v29 = v42;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

    }
  }
  else
  {
    sub_100008758((uint64_t)&v43, &qword_100491B90);
  }
  v33 = v45;
  if (v45 >> 62)
    goto LABEL_44;
  v34 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v45, 2);
  if (v34)
  {
    while (1)
    {
      v35 = (v33 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v33)
          : *(id *)(v33 + 32);
      v36 = v35;
      if ((sub_10017ABD0() & 1) != 0)
        break;

      if (v34 != 1)
      {
        v37 = 5;
        while (1)
        {
          v38 = (v33 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37 - 4, v33)
              : *(id *)(v33 + 8 * v37);
          v36 = v38;
          v39 = v37 - 3;
          if (__OFADD__(v37 - 4, 1))
            break;
          if ((sub_10017ABD0() & 1) != 0)
            goto LABEL_31;

          ++v37;
          if (v39 == v34)
            goto LABEL_40;
        }
        __break(1u);
LABEL_44:
        v41 = v33 < 0 ? v33 : v33 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v33, 2);
        v34 = _CocoaArrayWrapper.endIndex.getter(v41);
        if (v34)
          continue;
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n(v33, 2);

    v12 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n(v33, 2);
    v12 = 0;
  }
  swift_bridgeObjectRelease(v33);
  return v12;
}

uint64_t sub_10017AFF4(void *a1, char *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _DWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint8_t *v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t result;
  NSObject *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  char *v73;
  __n128 v74;
  char *v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  void (*v79)(_QWORD *, _QWORD, uint64_t);
  uint64_t v80;
  char *v81;
  void (*v82)(_QWORD *, uint64_t);
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  char *v107;
  uint64_t aBlock[5];
  uint64_t v109;
  char v110[24];
  char v111[32];

  v98 = type metadata accessor for DispatchTimeInterval(0);
  v4 = *(uint64_t **)(v98 - 8);
  v5 = __chkstk_darwin(v98);
  v106 = (uint64_t *)((char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v105 = (uint64_t *)((char *)&v89 - v7);
  v104 = type metadata accessor for DispatchTime(0);
  v102 = *(_QWORD *)(v104 - 8);
  v8 = __chkstk_darwin(v104);
  v101 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v103 = (char *)&v89 - v10;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v100 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for DispatchQoS(0);
  v97 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v96 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v93 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C880 != -1)
    swift_once(&qword_10048C880, sub_100170054);
  v17 = type metadata accessor for Logger(0, v15);
  v18 = sub_1000086B4(v17, (uint64_t)qword_1004A2230);
  v19 = a1;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v92 = v4;
    v23 = (_DWORD *)v22;
    v89 = v22;
    v90 = swift_slowAlloc(32, -1);
    aBlock[0] = v90;
    *v23 = 136446210;
    v24 = v19;
    v91 = v18;
    v107 = a2;
    v25 = v24;
    v26 = v12;
    v27 = objc_msgSend(v24, "description");
    v28 = v19;
    v29 = v11;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v32 = v31;

    v12 = v26;
    v33 = (char *)v30;
    v11 = v29;
    v19 = v28;
    v34 = sub_100019400(v33, v32, aBlock);
    v35 = (uint8_t *)v89;
    *(_QWORD *)(v89 + 4) = v34;
    swift_bridgeObjectRelease(v32);

    a2 = v107;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "| Invalid playerPath=%{public}s", v35, 0xCu);
    v36 = v90;
    swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    v37 = v35;
    v4 = v92;
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {

  }
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "╰ Stalling engine while attempting to reload", v41, 2u);
    swift_slowDealloc(v41, -1, -1);
  }

  v42 = &a2[OBJC_IVAR____TtC9MusicCore6Player_engineState];
  v43 = swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_engineState], v111, 1, 0);
  v44 = *v42;
  *v42 = 3;
  sub_100179E70(v44, v43);
  v45 = (uint64_t *)&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers];
  swift_beginAccess(&a2[OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers], v110, 0, 0);
  v46 = *v45;
  v47 = v19;
  swift_bridgeObjectRetain();
  v48 = sub_10016FECC(v47, v46);
  swift_bridgeObjectRelease(v46);

  result = swift_unknownObjectRelease(v48);
  if (!v48)
  {
    v92 = v45;
    v107 = a2;
    v50 = Logger.logObject.getter(result);
    v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, (os_log_type_t)v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "╰ Switching back to system route in 5seconds.", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
    }

    sub_1000087DC(0, &qword_1004940E0, OS_dispatch_source_ptr);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v53 = sub_100006924(&qword_100492198, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v54 = sub_100005574(&qword_1004921A0);
    v55 = sub_10002FFB8(&qword_1004921A8, &qword_1004921A0, (uint64_t)&protocol conformance descriptor for [A]);
    v56 = v93;
    v57 = v54;
    v58 = v95;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v57, v55, v95, v53);
    v59 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
    v67 = (void *)static OS_dispatch_queue.main.getter(v59, v60, v61, v62, v63, v64, v65, v66, v89, v90, v91, v92, v93, v94, v95);
    v68 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v56, v67);

    (*(void (**)(char *, uint64_t))(v94 + 8))(v56, v58);
    v91 = v68;
    ObjectType = swift_getObjectType();
    v70 = swift_allocObject(&unk_100450150, 24, 7);
    swift_weakInit(v70 + 16, v107);
    v71 = swift_allocObject(&unk_100450740, 32, 7);
    *(_QWORD *)(v71 + 16) = v70;
    *(_QWORD *)(v71 + 24) = v47;
    aBlock[4] = (uint64_t)sub_100183BC4;
    v109 = v71;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000BED80;
    aBlock[3] = (uint64_t)&unk_100450758;
    v72 = _Block_copy(aBlock);
    v107 = (char *)v47;
    swift_retain(v70);
    v73 = v96;
    static DispatchQoS.unspecified.getter(v74);
    v75 = v100;
    v95 = ObjectType;
    sub_10016FFA0();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v73, v75, v72, ObjectType);
    _Block_release(v72);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v75, v11);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v99);
    swift_release(v109);
    swift_release(v70);
    v76 = v101;
    static DispatchTime.now()(v77);
    v78 = v105;
    *v105 = 5;
    v79 = (void (*)(_QWORD *, _QWORD, uint64_t))v4[13];
    v80 = v98;
    v79(v78, enum case for DispatchTimeInterval.seconds(_:), v98);
    v81 = v103;
    + infix(_:_:)(v76, v78);
    v82 = (void (*)(_QWORD *, uint64_t))v4[1];
    v82(v78, v80);
    v83 = *(void (**)(char *, uint64_t))(v102 + 8);
    v84 = v104;
    v83(v76, v104);
    v79(v78, enum case for DispatchTimeInterval.never(_:), v80);
    v85 = v106;
    *v106 = 0;
    v79(v85, enum case for DispatchTimeInterval.nanoseconds(_:), v80);
    v86 = v91;
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v81, v78, v85, v95);
    v82(v85, v80);
    v82(v78, v80);
    v83(v81, v84);
    OS_dispatch_source.resume()();
    swift_beginAccess(v92, aBlock, 33, 0);
    v87 = v107;
    v88 = swift_unknownObjectRetain(v86);
    sub_100181214(v88, v87);
    swift_endAccess(aBlock);

    return swift_unknownObjectRelease(v86);
  }
  return result;
}

void sub_10017B87C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  char *v25;
  void *v26;
  id v27;
  void *v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + OBJC_IVAR____TtC9MusicCore6Player_failingPlayerPathTimers, v29, 33, 0);
    v6 = a2;
    v7 = sub_100180F84((unint64_t)v6);
    swift_endAccess(v29);

    swift_release(v5);
    swift_unknownObjectRelease(v7);
  }
  swift_beginAccess(v3, v29, 0, 0);
  v8 = swift_weakLoadStrong(v3);
  if (v8)
  {
    v9 = v8;
    KeyPath = swift_getKeyPath(&unk_10038E560);
    v11 = swift_getKeyPath(&unk_10038E588);
    static Published.subscript.getter(&v28, v9, KeyPath, v11);
    swift_release(v11);
    swift_release(KeyPath);
    swift_release(v9);
    v12 = v28;
    sub_1000087DC(0, &qword_100490368, MPCPlayerPath_ptr);
    v13 = a2;
    LOBYTE(v9) = static NSObject.== infix(_:_:)();

    if ((v9 & 1) != 0)
    {
      if (qword_10048C880 != -1)
        swift_once(&qword_10048C880, sub_100170054);
      v15 = type metadata accessor for Logger(0, v14);
      sub_1000086B4(v15, (uint64_t)qword_1004A2230);
      v16 = v13;
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(12, -1);
        v20 = swift_slowAlloc(32, -1);
        v28 = (void *)v20;
        *(_DWORD *)v19 = 136446210;
        v21 = v16;
        v22 = objc_msgSend(v21, "description");
        v23 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v25 = v24;

        *(_QWORD *)(v19 + 4) = sub_100019400(v23, v25, (uint64_t *)&v28);
        swift_bridgeObjectRelease(v25);

        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Engine stalled for too long trying to resolve playerPath=%{public}s. Switching back to system route.", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);
      }
      else
      {

      }
      v26 = (void *)objc_opt_self(MPAVRoutingController);
      v27 = objc_msgSend(v26, "systemRoute");
      objc_msgSend(v26, "setActiveRoute:completion:", v27, 0);

    }
  }
}

char *sub_10017BB88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  NSString v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  id v22;

  v1 = OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingDataSource);
  }
  else
  {
    v4 = v0;
    KeyPath = swift_getKeyPath(&unk_10038E560);
    v6 = swift_getKeyPath(&unk_10038E588);
    static Published.subscript.getter(&v22, v4, KeyPath, v6);
    swift_release(v6);
    *(_QWORD *)&v7 = swift_release(KeyPath).n128_u64[0];
    v8 = v22;
    v9 = objc_msgSend(v22, "route", v7);

    if (!v9)
      v9 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
    v10 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_10048C858 != -1)
      swift_once(&qword_10048C858, sub_100150D8C);
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v10, "systemMusicPathWithRoute:playerID:", v9, v11);

    if (objc_msgSend(v9, "isDeviceRoute"))
      v13 = v12;
    else
      v13 = objc_msgSend(v10, "pathWithRoute:bundleID:playerID:", v9, 0, 0);
    v14 = v13;

    v15 = swift_allocObject(&unk_100450150, 24, 7);
    swift_weakInit(v15 + 16, v4);
    v16 = swift_allocObject(&unk_100450150, 24, 7);
    swift_weakInit(v16 + 16, v4);
    v17 = objc_allocWithZone((Class)type metadata accessor for Player.DataSource());
    v18 = sub_10017D6DC(0x6979616C50776F4ELL, (void *)0xEA0000000000676ELL, v14, (uint64_t)sub_100183D48, v15, (uint64_t)sub_100183D50, v16);
    v19 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v18;
    v3 = v18;

    v2 = 0;
  }
  v20 = v2;
  return v3;
}

double sub_10017BDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC9MusicCore6Player_lock);
    __chkstk_darwin(Strong);
    swift_retain(v7);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100183D58);
    swift_release(v6);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10017BEAC(id a1, uint64_t a2, void *a3)
{
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  id v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  id v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  id v50;
  unsigned __int8 v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v64;
  uint64_t v65;
  id v66;

  if (a1)
    v6 = objc_msgSend(a1, "tracklist");
  else
    v6 = 0;
  KeyPath = swift_getKeyPath(&unk_10038E5A8);
  v8 = swift_getKeyPath(&unk_10038E5D0);
  static Published.subscript.getter(&v66, a2, KeyPath, v8);
  swift_release(v8);
  *(_QWORD *)&v10 = swift_release(KeyPath).n128_u64[0];
  v11 = v66;
  if (!v66)
  {
    if (!v6)
      goto LABEL_18;
LABEL_11:
    v12 = v6;
    goto LABEL_13;
  }
  v12 = objc_msgSend(v66, "tracklist", v10);

  if (v6)
  {
    if (v12)
    {
      sub_1000087DC(0, &qword_100494160, MPCPlayerResponseTracklist_ptr);
      v13 = v6;
      v14 = static NSObject.== infix(_:_:)();

      if ((v14 & 1) == 0)
      {
        if (!a1)
          goto LABEL_19;
        goto LABEL_14;
      }
LABEL_18:
      if (a1)
        goto LABEL_34;
      goto LABEL_19;
    }
    goto LABEL_11;
  }
  if (!v12)
    goto LABEL_18;
LABEL_13:

  if (!a1)
  {
LABEL_19:
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v30 = type metadata accessor for Logger(0, v9);
    v31 = sub_1000086B4(v30, (uint64_t)qword_1004A2230);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "╭ Nil Now Playing Response", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }
    goto LABEL_30;
  }
LABEL_14:
  v65 = a2;
  v15 = qword_10048C880;
  v17 = a1;
  if (v15 != -1)
    swift_once(&qword_10048C880, sub_100170054);
  v18 = type metadata accessor for Logger(0, v16);
  sub_1000086B4(v18, (uint64_t)qword_1004A2230);
  v19 = v17;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v23 = (void *)swift_slowAlloc(32, -1);
    v66 = v23;
    *(_DWORD *)v22 = 136446210;
    v64 = a3;
    v24 = objc_msgSend(v19, "tracklist");
    v25 = objc_msgSend(v24, "uniqueIdentifier");

    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

    v29 = (char *)v26;
    a3 = v64;
    *(_QWORD *)(v22 + 4) = sub_100019400(v29, v28, (uint64_t *)&v66);
    swift_bridgeObjectRelease(v28);

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "╭ Received Now Playing response with tracklistID=%{public}s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {

  }
  v32 = v19;
  v35 = Logger.logObject.getter(v32);
  v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(8, -1);
    *(_DWORD *)v37 = 67240192;
    v38 = -[NSObject playerPath](v32, "playerPath");
    v39 = objc_msgSend(v38, "representedBundleID");

    if (v39)
    {

      v40 = 1;
    }
    else
    {
      v40 = 0;
    }
    *(_DWORD *)(v37 + 4) = v40;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "| is Music App=%{BOOL,public}d", (uint8_t *)v37, 8u);
    swift_slowDealloc(v37, -1, -1);

    a2 = v65;
  }
  else
  {

    v32 = v35;
    a2 = v65;
  }
LABEL_30:

  if (qword_10048C880 != -1)
    swift_once(&qword_10048C880, sub_100170054);
  v42 = type metadata accessor for Logger(0, v41);
  sub_1000086B4(v42, (uint64_t)qword_1004A2230);
  v43 = a3;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc(12, -1);
    v47 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v46 = 138543362;
    v48 = objc_msgSend(v43, "playerPath");
    *(_QWORD *)(v46 + 4) = v48;
    *v47 = v48;

    _os_log_impl((void *)&_mh_execute_header, v44, v45, "╰ playerPath=%{public}@", (uint8_t *)v46, 0xCu);
    v49 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v47, 1, v49);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v46, -1, -1);

    if (a1)
      goto LABEL_34;
LABEL_40:
    v59 = swift_getKeyPath(&unk_10038E5A8);
    v60 = swift_getKeyPath(&unk_10038E5D0);
    v66 = 0;
    swift_retain(a2);
    static Published.subscript.setter(&v66, a2, v59, v60);
    v58 = 0;
    goto LABEL_41;
  }

  if (!a1)
    goto LABEL_40;
LABEL_34:
  v50 = objc_msgSend(a1, "playerPath");
  v51 = objc_msgSend(v50, "isSystemMusicPath");

  if ((v51 & 1) != 0
    || (v52 = objc_msgSend(a1, "playerPath"),
        v53 = objc_msgSend(v52, "representedBundleID"),
        v52,
        !v53))
  {
    v55 = a1;
    v54 = a1;
  }
  else
  {

    v54 = 0;
  }
  v56 = swift_getKeyPath(&unk_10038E5A8);
  v57 = swift_getKeyPath(&unk_10038E5D0);
  v66 = v54;
  swift_retain(a2);
  static Published.subscript.setter(&v66, a2, v56, v57);
  v58 = objc_msgSend(a1, "playerPath");
LABEL_41:
  v61 = swift_getKeyPath(&unk_10038E5F0);
  v62 = swift_getKeyPath(&unk_10038E618);
  v66 = v58;
  swift_retain(a2);
  return static Published.subscript.setter(&v66, a2, v61, v62);
}

void sub_10017C5D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v28, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    if (qword_10048C880 != -1)
      swift_once(&qword_10048C880, sub_100170054);
    v9 = type metadata accessor for Logger(0, v7);
    sub_1000086B4(v9, (uint64_t)qword_1004A2230);
    swift_errorRetain(a2);
    v10 = swift_errorRetain(a2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v26 = a2;
      v27 = v14;
      *(_DWORD *)v13 = 136446210;
      swift_errorRetain(a2);
      v15 = sub_100005574((uint64_t *)&unk_1004911F0);
      v16 = (char *)String.init<A>(describing:)(&v26, v15);
      v18 = v17;
      *(_QWORD *)(v13 + 4) = sub_100019400(v16, v17, &v27);
      swift_bridgeObjectRelease(v18);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "╭ Now Playing failed to load with error=%{public}s", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v19 = a1;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(12, -1);
      v23 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 138543362;
      v24 = objc_msgSend(v19, "playerPath");
      *(_QWORD *)(v22 + 4) = v24;
      *v23 = v24;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "╰ playerPath=%{public}@", (uint8_t *)v22, 0xCu);
      v25 = sub_100005574(&qword_100494910);
      swift_arrayDestroy(v23, 1, v25);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

      swift_release(v8);
    }
    else
    {

      swift_release(v8);
    }
  }
}

void sub_10017C898(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD aBlock[5];
  uint64_t v11;

  v3 = *v1;
  v4 = swift_allocObject(&unk_1004508D0, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  if (a1)
  {
    swift_retain(v1);
    v9 = a1;
    sub_10017C9E8();
    swift_release(v4);

  }
  else
  {
    v5 = (void *)objc_opt_self(MPAVRoutingController);
    v6 = swift_allocObject(&unk_1004508F8, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_100184C48;
    *(_QWORD *)(v6 + 24) = v4;
    aBlock[4] = sub_100184C4C;
    v11 = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000F7EF4;
    aBlock[3] = &unk_100450910;
    v7 = _Block_copy(aBlock);
    v8 = v11;
    swift_retain(v1);
    swift_retain(v4);
    swift_release(v8);
    objc_msgSend(v5, "getActiveRouteWithTimeout:completion:", v7, 1.0);
    swift_release(v4);
    _Block_release(v7);
  }
}

void sub_10017C9E8(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  id v8;
  id v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_10048C880 != -1)
    swift_once(&qword_10048C880, sub_100170054);
  v3 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v3, (uint64_t)qword_1004A2230);
  v4 = a1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v15 = v14;
    *(_DWORD *)v7 = 136446210;
    v8 = v4;
    v9 = objc_msgSend(v8, "description");
    v10 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    *(_QWORD *)(v7 + 4) = sub_100019400(v10, v12, &v15);
    swift_bridgeObjectRelease(v12);

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Updating playerPaths with route=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  __chkstk_darwin(v13);
  UnfairLock.locked<A>(_:)(sub_100183FB0);
}

void sub_10017CBF4(uint64_t a1, void *a2)
{
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;
  id v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;

  v4 = sub_10017BB88();
  v5 = *(id *)&v4[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path];

  v6 = objc_msgSend(v5, "route");
  if (!v6)
    goto LABEL_5;
  sub_1000087DC(0, &qword_1004941B8, MPAVRoute_ptr);
  v7 = a2;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
    goto LABEL_5;
  v10 = objc_msgSend(v8, "connection");
  if (!v10 || (v11 = v10, v12 = objc_msgSend(v10, "isInvalidated"), v11, (v12 & 1) == 0))
  {

  }
  else
  {
LABEL_5:
    v13 = (void *)objc_opt_self(MPCPlayerPath);
    if (qword_10048C858 != -1)
      swift_once(&qword_10048C858, sub_100150D8C);
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v13, "systemMusicPathWithRoute:playerID:", a2, v14);

    if (objc_msgSend(a2, "isDeviceRoute"))
      v16 = v15;
    else
      v16 = objc_msgSend(v13, "pathWithRoute:bundleID:playerID:", a2, 0, 0);
    v17 = v16;
    KeyPath = swift_getKeyPath(&unk_10038E560);
    v19 = swift_getKeyPath(&unk_10038E588);
    v33 = v15;
    v20 = v15;
    swift_retain(a1);
    static Published.subscript.setter(&v33, a1, KeyPath, v19);
    sub_100171D24();
    v21 = sub_10017BB88();
    v22 = v17;
    sub_10017D978(v22);

    v23 = (void *)_MPAVRouteConnectionDidInvalidateNotification;
    v24 = swift_allocObject(&unk_100450150, 24, 7);
    swift_weakInit(v24 + 16, a1);
    v25 = type metadata accessor for NotificationObserver();
    swift_allocObject(v25, 64, 7);
    v26 = v20;
    v27 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v23, (uint64_t)v20, 1, 1, (uint64_t)sub_10018297C, v24);
    v28 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver);
    *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver) = v27;
    v29 = objc_msgSend(v22, "route", swift_release(v28).n128_f64[0]);
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(objc_allocWithZone((Class)MPVolumeControllerRouteDataSource), "initWithGroupRoute:outputDeviceRoute:", v29, 0);
      v32 = objc_msgSend((id)objc_opt_self(MPVolumeHardwareButtonController), "sharedController");
      objc_msgSend(v32, "setActiveDataSource:", v31);

    }
    else
    {

    }
  }
}

double sub_10017CF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10017C898(0);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_10017CFBC(void *a1, void (*a2)(id))
{
  id v4;
  id v5;

  if (a1)
    v5 = a1;
  else
    v5 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
  v4 = a1;
  a2(v5);

}

void sub_10017D030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_10038E560);
  v3 = swift_getKeyPath(&unk_10038E588);
  static Published.subscript.getter(&v40, v1, KeyPath, v3);
  swift_release(v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = v40;
  v6 = objc_msgSend(v40, "route", v4);

  if (v6)
  {
    objc_opt_self(MPAVEndpointRoute);
    v7 = (void *)swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
LABEL_15:

      return;
    }
    v8 = v7;
    v9 = objc_msgSend(v7, "endpointObject");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "isEligibleForHostingGroupSessionExcludingAcknowledgements");

      v12 = swift_getKeyPath(&unk_10038E6C8);
      v13 = swift_getKeyPath(&unk_10038E6F0);
      LOBYTE(v40) = v11;
      swift_retain(v1);
      static Published.subscript.setter(&v40, v1, v12, v13);
      v14 = objc_msgSend(v8, "endpointObject");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "groupSessionInfo");

        if (!v16)
        {
          v25 = swift_getKeyPath(&unk_10038E638);
          v26 = swift_getKeyPath(&unk_10038E660);
          static Published.subscript.getter(&v40, v1, v25, v26);
          swift_release(v26);
          swift_release(v25);
          v27 = v40;
          v28 = swift_getKeyPath(&unk_10038E638);
          v29 = swift_getKeyPath(&unk_10038E660);
          v40 = 0;
          swift_retain(v1);
          static Published.subscript.setter(&v40, v1, v28, v29);
          sub_100172184(v27);
LABEL_14:

          v6 = v27;
          goto LABEL_15;
        }
        if (qword_10048C910 != -1)
          swift_once(&qword_10048C910, sub_1001B35A4);
        v18 = type metadata accessor for Logger(0, v17);
        sub_1000086B4(v18, (uint64_t)static Logger.sharePlayTogether);
        v19 = v6;
        v20 = Logger.logObject.getter(v19);
        v21 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = swift_slowAlloc(12, -1);
          v23 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v22 = 138543362;
          *(_QWORD *)(v22 + 4) = v8;
          *v23 = v8;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Getting session from %{public}@", (uint8_t *)v22, 0xCu);
          v24 = sub_100005574(&qword_100494910);
          swift_arrayDestroy(v23, 1, v24);
          swift_slowDealloc(v23, -1, -1);
          swift_slowDealloc(v22, -1, -1);
        }
        else
        {

        }
        v30 = objc_msgSend(v8, "endpointObject");
        if (v30)
        {
          v31 = v30;
          v32 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSession(0));
          v6 = v16;
          sub_1001AEC40(v6, v31);
          v34 = v33;
          v35 = swift_getKeyPath(&unk_10038E638);
          v36 = swift_getKeyPath(&unk_10038E660);
          static Published.subscript.getter(&v40, v1, v35, v36);
          swift_release(v36);
          swift_release(v35);
          v27 = v40;
          v37 = swift_getKeyPath(&unk_10038E638);
          v38 = swift_getKeyPath(&unk_10038E660);
          v40 = v34;
          swift_retain(v1);
          v39 = v34;
          static Published.subscript.setter(&v40, v1, v37, v38);
          sub_100172184(v27);

          goto LABEL_14;
        }
LABEL_19:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
}

uint64_t Player.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC9MusicCore6Player__path;
  v2 = sub_100005574(&qword_100493768);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver));
  v3 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying;
  v4 = sub_100005574((uint64_t *)&unk_1004933B0);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = v0 + OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath;
  v7 = sub_100005574((uint64_t *)&unk_100493758);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession;
  v9 = sub_100005574(&qword_100493750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v0 + OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession;
  v11 = sub_100005574(&qword_100492DA0);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v0 + OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, v11);

  v13 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration);
  v14 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration + 8);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v5(v0 + OBJC_IVAR____TtC9MusicCore6Player__playerResponse, v4);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_activeSystemRouteDidChangeNotificationObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_playerPathInvalidationObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherSessionObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_sharePlayTogetherEligibilityObserver));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_ratingWarningThresholdSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore6Player_lock));
  return v0;
}

uint64_t Player.__deallocating_deinit()
{
  return sub_10017F560((void (*)(void))Player.deinit);
}

uint64_t sub_10017D6A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Player(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

char *sub_10017D6DC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  id v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  Swift::String v28;
  id v29;
  NSString v30;
  void *v31;
  id v32;
  id v33;
  objc_super v37;

  v13 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v14 = objc_allocWithZone((Class)MPCPlayerRequest);
  v15 = v7;
  *(_QWORD *)&v7[v13] = objc_msgSend(v14, "init");
  v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_automaticallyReloads] = 0;
  v16 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)MPRequestResponseController), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path] = a3;
  v17 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  v18 = &v15[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onError];
  *(_QWORD *)v18 = a6;
  *((_QWORD *)v18 + 1) = a7;
  v19 = a3;
  swift_retain(a5);
  swift_retain(a7);

  v37.receiver = v15;
  v37.super_class = (Class)type metadata accessor for Player.DataSource();
  v20 = (char *)objc_msgSendSuper2(&v37, "init");
  v21 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller;
  v22 = *(void **)&v20[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller];
  v23 = v20;
  objc_msgSend(v22, "setDelegate:", v23);
  v24 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request;
  v25 = qword_10048C888;
  v26 = *(id *)&v23[OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_request];
  if (v25 != -1)
    swift_once(&qword_10048C888, sub_10017DC64);
  objc_msgSend(v26, "setPlayingItemProperties:", qword_100493710);

  v27 = *(void **)&v23[v24];
  objc_msgSend(v27, "setTracklistRange:", 0, 0);
  objc_msgSend(v27, "setPlayerPath:", v19);
  v28._countAndFlagsBits = a1;
  v28._object = a2;
  String.append(_:)(v28);
  v29 = v27;
  swift_bridgeObjectRelease(a2);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000001003B3DF0);
  objc_msgSend(v29, "setLabel:", v30);

  v31 = *(void **)&v23[v24];
  v32 = *(id *)&v20[v21];
  v33 = v31;
  objc_msgSend(v32, "setRequest:", v33);
  swift_release(a7);
  swift_release(a5);

  return v23;
}

void sub_10017D978(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path;
  v5 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path);
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_path) = a1;
  sub_1000087DC(0, &qword_100490368, MPCPlayerPath_ptr);
  v9 = v3;
  LOBYTE(v3) = static NSObject.== infix(_:_:)(v9, v5);

  if ((v3 & 1) == 0)
  {
    v6 = *(void **)(v2 + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_controller);
    v7 = objc_msgSend(v6, "request");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "setPlayerPath:", *(_QWORD *)(v2 + v4));

    }
    objc_msgSend(v6, "setNeedsReloadForSignificantRequestChange");
  }

}

id sub_10017DBC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Player.DataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10017DC64()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  Class isa;
  Class v14;
  id v15;
  unint64_t v16;
  id v17;
  Class v18;
  Class v19;
  id v20;
  uint64_t v21;
  _BYTE v22[136];

  v0 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v0, v22);
  *(_OWORD *)(inited + 16) = xmmword_100384BB0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)objc_opt_self(MPPropertySet);
  *(_QWORD *)(inited + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v5;
  *(_QWORD *)(inited + 96) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylistEntry);
  *(_QWORD *)(inited + 112) = v6;
  v7 = swift_initStackObject(v0, &v21);
  *(_OWORD *)(v7 + 16) = xmmword_100384A40;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntrySong);
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 48) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryTVEpisode);
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = objc_msgSend(v3, "emptyPropertySet");
  *(_QWORD *)(v7 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistEntryMovie);
  *(_QWORD *)(v7 + 88) = v10;
  *(_QWORD *)(v7 + 96) = objc_msgSend(v3, "emptyPropertySet");
  v11 = sub_100098EAC(v7);
  v12 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v12, "initWithProperties:relationships:", isa, v14);

  *(_QWORD *)(inited + 120) = v15;
  v16 = sub_100098EAC(inited);
  v17 = objc_allocWithZone((Class)MPPropertySet);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v20 = objc_msgSend(v17, "initWithProperties:relationships:", v18, v19);

  qword_100493710 = (uint64_t)v20;
}

uint64_t Player.with(_:)(void (*a1)(id *))
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;

  v3 = v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore6Player_nowPlayingConfiguration, &v18, 1, 0);
  v4 = *(void **)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v19 = *(id *)v3;
  v20 = v4;
  v21 = v5;
  v6 = v19;
  v7 = v4;
  swift_bridgeObjectRetain();
  a1(&v19);
  v8 = v19;
  v9 = v20;
  v10 = v21;
  v11 = *(id *)v3;
  v12 = *(void **)(v3 + 8);
  *(_QWORD *)v3 = v19;
  *(_QWORD *)(v3 + 8) = v9;
  *(_QWORD *)(v3 + 16) = v10;
  v13 = v8;
  v14 = v9;
  swift_bridgeObjectRetain_n(v10, 2);
  v15 = v13;
  v16 = v14;
  swift_bridgeObjectRelease();

  sub_1001738E4();
  swift_bridgeObjectRelease_n(v10, 2);

  return swift_retain(v1);
}

double sub_10017E034(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double result;
  char v11[24];

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1[2];
  v8 = (char *)v1 + *(_QWORD *)(v7 + 120);
  swift_beginAccess(v8, v11, 0, 0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  swift_retain(v6);
  dispatch thunk of MusicPlayer.ItemState.item.setter(v5);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t MusicItemState.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t MusicItemState.item.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _BYTE v11[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  v5 = swift_beginAccess(v4, v11, 33, 0);
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 24))(v4, a1, v6, v5);
  v8 = swift_endAccess(v11);
  v9 = sub_10017E034(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, double))(v7 + 8))(a1, v6, v9);
}

double (*MusicItemState.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return sub_10017E220;
}

double sub_10017E220(uint64_t a1, char a2)
{
  uint64_t v3;
  double result;

  v3 = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_10017E034(v3);
  return result;
}

uint64_t property wrapper backing initializer of MusicItemState.playabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017E268(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus);
}

uint64_t property wrapper backing initializer of MusicItemState.previewCapabilityStatus(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017E268(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
}

uint64_t sub_10017E268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = a4(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, v5);
  Published.init(initialValue:)(v8, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t MusicItemState.previewCapabilityStatus.setter(uint64_t a1)
{
  return sub_10017ED08(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t)&unk_10038E758, (uint64_t)&unk_10038E790);
}

double sub_10017E320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10017E41C();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

double sub_10017E374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  _BYTE v10[24];

  v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v10, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v8 = Strong;
    dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    MusicItemState.previewCapabilityStatus.setter((uint64_t)v5);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

uint64_t sub_10017E41C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  unsigned int v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(char *, char *, uint64_t);
  _QWORD *v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  __n128 v68;
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t, __n128);
  uint64_t v114;
  char *v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  char v119[24];
  char v120[24];
  uint64_t v121;
  uint64_t v122;

  v1 = *v0;
  v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v93 - v7;
  v101 = type metadata accessor for MusicMovie(0);
  v97 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v100 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for TVEpisode(0);
  v99 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v104 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for Track(0);
  v103 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = (void (*)(char *, char *, uint64_t, __n128))type metadata accessor for Song(0);
  v107 = *((_QWORD *)v113 - 1);
  v12 = __chkstk_darwin(v113);
  v112 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = *(_QWORD *)(v1 + 80);
  v14 = __chkstk_darwin(v12);
  v110 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v98 = (uint64_t)&v93 - v17;
  v18 = __chkstk_darwin(v16);
  v102 = (uint64_t)&v93 - v19;
  v20 = __chkstk_darwin(v18);
  v106 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v20);
  v111 = (char *)&v93 - v22;
  v23 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v115 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v93 - v28;
  __chkstk_darwin(v27);
  v31 = (char *)&v93 - v30;
  v32 = v0;
  v33 = v0[2];
  v34 = swift_retain(v33);
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter(v34);
  v35 = swift_release(v33);
  v36 = *(void (**)(char *, char *, uint64_t, __n128))(v24 + 16);
  v36(v29, v31, v23, v35);
  v37 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v29, v23);
  if (v37 != enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    v96 = v3;
    if (v37 != enum case for MusicPlayer.PlayabilityStatus.playable(_:))
    {
      v64 = (uint64_t)v115;
      ((void (*)(char *, char *, uint64_t))v36)(v115, v31, v23);
      MusicItemState.playabilityStatus.setter(v64);
      v65 = *(void (**)(char *, uint64_t))(v24 + 8);
      v65(v31, v23);
      return ((uint64_t (*)(char *, uint64_t))v65)(v29, v23);
    }
    v94 = v37;
    v48 = (void (*)(char *, char *, uint64_t))v36;
    v95 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
    v49 = v32;
    v50 = v32[3];
    KeyPath = swift_getKeyPath(&unk_10038E638);
    v52 = swift_getKeyPath(&unk_10038E660);
    v53 = swift_retain(v50);
    static Published.subscript.getter(&v116, v53, KeyPath, v52);
    swift_release(v50);
    swift_release(KeyPath);
    swift_release(v52);
    v54 = v116;

    if (!v54)
      goto LABEL_9;
    v55 = v32[3];
    v56 = swift_getKeyPath(&unk_10038E680);
    v57 = swift_getKeyPath(&unk_10038E6A8);
    v58 = swift_retain(v55);
    static Published.subscript.getter(&v116, v58, v56, v57);
    swift_release(v55);
    swift_release(v56);
    swift_release(v57);
    if ((v116 & 1) != 0)
      goto LABEL_9;
    v59 = v32[3];
    swift_retain(v59);
    v60 = Player.supportsDelegation.getter();
    swift_release(v59);
    if ((v60 & 1) != 0)
      goto LABEL_9;
    v66 = *v32;
    v67 = (char *)v32 + *(_QWORD *)(*v32 + 120);
    v68 = swift_beginAccess(v67, v119, 0, 0);
    v69 = v111;
    (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v66 + 80) - 8) + 16))(v111, v67, v68);
    v71 = v112;
    v70 = v113;
    v72 = v69;
    v73 = v114;
    if (swift_dynamicCast(v112, v72, v114, v113, 6))
    {
      v74 = v107;
    }
    else
    {
      v75 = v106;
      MusicItemState.item.getter(v106);
      v71 = v108;
      v76 = v75;
      v70 = (_QWORD *)v109;
      if (swift_dynamicCast(v108, v76, v73, v109, 6))
      {
        v77 = &v122;
      }
      else
      {
        v78 = v102;
        MusicItemState.item.getter(v102);
        v71 = v104;
        v79 = v78;
        v70 = (_QWORD *)v105;
        if (!swift_dynamicCast(v104, v79, v73, v105, 6))
        {
          v92 = v98;
          MusicItemState.item.getter(v98);
          if (!swift_dynamicCast(v100, v92, v73, v101, 6))
          {
LABEL_9:
            v61 = v115;
            v48(v115, v31, v23);
            v62 = (uint64_t)v61;
LABEL_10:
            MusicItemState.playabilityStatus.setter(v62);
            return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v23);
          }
          (*(void (**)(char *, uint64_t))(v97 + 8))(v100, v101);
          v80 = v2;
          v81 = v96;
          v73 = v114;
LABEL_23:
          v82 = v110;
          v83 = *v49;
          v84 = (char *)v49 + *(_QWORD *)(*v49 + 120);
          v85 = swift_beginAccess(v84, v120, 0, 0);
          (*(void (**)(char *, char *, __n128))(*(_QWORD *)(*(_QWORD *)(v83 + 80) - 8) + 16))(v82, v84, v85);
          v86 = sub_100005574(&qword_10048E280);
          if (swift_dynamicCast(&v116, v82, v73, v86, 6))
          {
            v87 = *((_QWORD *)&v117 + 1);
            v88 = v118;
            sub_10000ABC8(&v116, *((uint64_t *)&v117 + 1));
            (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v88);
            v90 = v89;
            sub_10000682C(&v116);
            v91 = v115;
            if (v90)
            {
              swift_bridgeObjectRelease(v90);
              (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v91, v94, v23);
LABEL_28:
              v62 = (uint64_t)v91;
              goto LABEL_10;
            }
          }
          else
          {
            v118 = 0;
            v116 = 0u;
            v117 = 0u;
            sub_100008758((uint64_t)&v116, (uint64_t *)&unk_1004940C0);
            v91 = v115;
          }
          (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v91, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v80);
          (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v91, v95, v23);
          goto LABEL_28;
        }
        v77 = &v121;
      }
      v74 = *(v77 - 32);
    }
    (*(void (**)(char *, _QWORD *))(v74 + 8))(v71, v70);
    v80 = v2;
    v81 = v96;
    goto LABEL_23;
  }
  v113 = v36;
  v114 = v24;
  (*(void (**)(char *, uint64_t))(v24 + 96))(v29, v23);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v29, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
  v38 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)(v8, v6);
  v39 = *(void (**)(char *, uint64_t))(v3 + 8);
  v39(v6, v2);
  if ((v38 & 1) == 0)
    goto LABEL_11;
  v40 = v32[3];
  v41 = swift_getKeyPath(&unk_10038E638);
  v42 = swift_getKeyPath(&unk_10038E660);
  v43 = swift_retain(v40);
  static Published.subscript.getter(&v116, v43, v41, v42);
  swift_release(v40);
  swift_release(v41);
  swift_release(v42);
  v44 = v116;

  if (v44)
  {
    v45 = v114;
    v46 = (uint64_t)v115;
    (*(void (**)(char *, _QWORD, uint64_t))(v114 + 104))(v115, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v23);
    MusicItemState.playabilityStatus.setter(v46);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v31, v23);
  }
  else
  {
LABEL_11:
    v63 = (uint64_t)v115;
    ((void (*)(char *, char *, uint64_t))v113)(v115, v31, v23);
    MusicItemState.playabilityStatus.setter(v63);
    v39(v8, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v31, v23);
  }
}

double MusicItemState.playabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_10017F070((uint64_t)&unk_10038E7B0, (uint64_t)&unk_10038E7E8, a1);
}

double sub_10017ECB8@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_10017ECD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017F12C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t MusicItemState.playabilityStatus.setter(uint64_t a1)
{
  return sub_10017ED08(a1, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t)&unk_10038E7B0, (uint64_t)&unk_10038E7E8);
}

uint64_t sub_10017ED08(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v18[4];

  v8 = *v4;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v18 - v11;
  v14 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 88);
  v18[2] = v14;
  v18[3] = v13;
  KeyPath = swift_getKeyPath(a3);
  v18[0] = v14;
  v18[1] = v13;
  v16 = swift_getKeyPath(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain(v4);
  static Published.subscript.setter(v12, v4, KeyPath, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
}

void (*MusicItemState.playabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10038E7B0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10038E7E8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t MusicItemState.$playabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128), v3, 33, 0);
  v1 = sub_100005574((uint64_t *)&unk_1004938B0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t MusicItemState.$playabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_100005574(&qword_10048F150);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), v10, 33, 0);
  v7 = sub_100005574((uint64_t *)&unk_1004938B0);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*MusicItemState.$playabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_100005574(&qword_10048F150);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$playabilityStatus.getter();
  return sub_10017F050;
}

void sub_10017F050(uint64_t a1, char a2)
{
  sub_10017F410(a1, a2, (void (*)(void *))MusicItemState.$playabilityStatus.setter);
}

double MusicItemState.previewCapabilityStatus.getter@<D0>(_QWORD *a1@<X8>)
{
  return sub_10017F070((uint64_t)&unk_10038E758, (uint64_t)&unk_10038E790, a1);
}

double sub_10017F070@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  double result;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath, v7);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_10017F0F8@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_10017F118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017F12C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_10017F12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

void (*MusicItemState.previewCapabilityStatus.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10038E758);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10038E790);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t MusicItemState.$previewCapabilityStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136), v3, 33, 0);
  v1 = sub_100005574((uint64_t *)&unk_1004938C0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t MusicItemState.$previewCapabilityStatus.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_100005574(&qword_10048F148);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136), v10, 33, 0);
  v7 = sub_100005574((uint64_t *)&unk_1004938C0);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*MusicItemState.$previewCapabilityStatus.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_100005574(&qword_10048F148);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  MusicItemState.$previewCapabilityStatus.getter();
  return sub_10017F404;
}

void sub_10017F404(uint64_t a1, char a2)
{
  sub_10017F410(a1, a2, (void (*)(void *))MusicItemState.$previewCapabilityStatus.setter);
}

void sub_10017F410(uint64_t a1, char a2, void (*a3)(void *))
{
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v7 = v4[1];
    v8 = v4[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v6, v7);
    a3(v5);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 32));
  }
  free(v6);
  free(v5);
  free(v4);
}

char *MusicItemState.deinit()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  swift_release(*((_QWORD *)v0 + 2));
  swift_release(*((_QWORD *)v0 + 3));
  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 120)]);
  v2 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 128)];
  v3 = sub_100005574((uint64_t *)&unk_1004938B0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = &v0[*(_QWORD *)(*(_QWORD *)v0 + 136)];
  v5 = sub_100005574((uint64_t *)&unk_1004938C0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t MusicItemState.__deallocating_deinit()
{
  return sub_10017F560((void (*)(void))MusicItemState.deinit);
}

uint64_t sub_10017F560(void (*a1)(void))
{
  uint64_t v1;

  a1();
  return swift_deallocClassInstance(v1, *(unsigned int *)(*(_QWORD *)v1 + 48), *(unsigned __int16 *)(*(_QWORD *)v1 + 52));
}

uint64_t sub_10017F584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for MusicItemState(0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a2);
  result = ObservableObject<>.objectWillChange.getter(v4);
  *a3 = result;
  return result;
}

void sub_10017F5C4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[4];

  v6 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_100450790, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_100008758((uint64_t)v8, (uint64_t *)&unk_100493720);
    v14 = 7168;
LABEL_6:
    v22 = 0;
    goto LABEL_7;
  }
  v15 = TaskPriority.rawValue.getter(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  v14 = v15 | 0x1C00;
  v16 = *v12;
  if (!*v12)
    goto LABEL_6;
  v17 = *(_QWORD *)(v11 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v16);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
  v21 = v20;
  swift_unknownObjectRelease(v16);
  if (!(v21 | v19))
    goto LABEL_6;
  v24[0] = 0;
  v24[1] = 0;
  v22 = v24;
  v24[2] = v19;
  v24[3] = v21;
LABEL_7:
  v23 = swift_task_create(v14, v22, (char *)&type metadata for () + 8, &unk_100494130, v11);
  swift_release(v23);
}

void sub_10017F79C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[4];

  v6 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  v11 = swift_allocObject(&unk_1004509C0, 56, 7);
  *(_QWORD *)(v11 + 16) = 0;
  v12 = (uint64_t *)(v11 + 16);
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v11 + 32) = a1;
  *(double *)(v11 + 40) = a3;
  *(_QWORD *)(v11 + 48) = a2;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = swift_retain(a2);
  if ((_DWORD)a1 == 1)
  {
    sub_100008758((uint64_t)v8, (uint64_t *)&unk_100493720);
    v14 = 0;
    v15 = 0;
    v16 = 7168;
  }
  else
  {
    v17 = TaskPriority.rawValue.getter(v13);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v16 = v17 | 0x1C00;
    v18 = *v12;
    if (*v12)
    {
      v19 = *(_QWORD *)(v11 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v18);
      v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v19);
      v15 = v21;
      swift_unknownObjectRelease(v18);
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
  }
  v22 = sub_100005574(&qword_100494208);
  if (v15 | v14)
  {
    v25[0] = 0;
    v25[1] = 0;
    v23 = v25;
    v25[2] = v14;
    v25[3] = v15;
  }
  else
  {
    v23 = 0;
  }
  v24 = swift_task_create(v16, v23, v22, &unk_100494200, v11);
  swift_release(v24);
}

uint64_t sub_10017F96C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 136) = a6;
  *(double *)(v6 + 128) = a1;
  *(_QWORD *)(v6 + 120) = a5;
  v7 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v6 + 144) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 152) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 160) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 168) = swift_task_alloc(v9);
  v10 = type metadata accessor for DispatchQoS.QoSClass(0);
  *(_QWORD *)(v6 + 176) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v6 + 184) = v11;
  *(_QWORD *)(v6 + 192) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v6 + 200) = v12;
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10017FA30, 0, 0);
}

uint64_t sub_10017FA30()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *((_QWORD *)v0 + 25);
  v2 = *((_QWORD *)v0 + 26);
  v3 = *((_QWORD *)v0 + 24);
  v20 = *((_QWORD *)v0 + 23);
  v21 = *((_QWORD *)v0 + 22);
  v4 = *((_QWORD *)v0 + 20);
  v22 = *((_QWORD *)v0 + 21);
  v23 = *((_QWORD *)v0 + 19);
  v24 = *((_QWORD *)v0 + 18);
  v5 = v0[16];
  v6 = *((_QWORD *)v0 + 15);
  v7 = swift_allocObject(&unk_1004507B8, 17, 7);
  *((_QWORD *)v0 + 27) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_1004507E0, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_100183D10;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_1000BED80;
  *((_QWORD *)v0 + 5) = &unk_1004507F8;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_100006924((unint64_t *)&qword_1004921B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v7);
  v11 = sub_100005574(&qword_100490838);
  v12 = sub_10002FFB8((unint64_t *)&qword_1004921C0, &qword_100490838, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 28) = v14;
  swift_release(*((_QWORD *)v0 + 7));
  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v21);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v3, v21);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v17(v4, v24);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v22, v14);

  v17(v22, v24);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 29) = v18;
  *v18 = v0;
  v18[1] = (double *)sub_10017FCC4;
  return Task.value.getter();
}

uint64_t sub_10017FCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 232);
  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10017FEF0;
  else
    v3 = sub_10017FD28;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017FD28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[27];
  swift_beginAccess(v1 + 16, v0 + 11, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = sub_100005574(&qword_100494138);
    v4 = sub_10002FFB8(&qword_100494140, &qword_100494138, (uint64_t)&unk_10038EBC8);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v6);
    v7 = v0[27];
    v9 = swift_beginAccess(v7 + 16, v0 + 8, 0, 0);
    if ((*(_BYTE *)(v7 + 16) & 1) == 0)
    {
      v10 = v0[15];
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v11 = sub_100005574((uint64_t *)&unk_1004911F0);
      v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v5;
      swift_errorRetain(v5);
      v9.n128_f64[0] = swift_continuation_throwingResumeWithError(v10, v12);
    }
    v15 = v0[27];
    v14 = v0[28];
    v16 = v0[26];
    v17 = v0[24];
    v19 = v0[20];
    v18 = v0[21];
    swift_willThrow(v9);
    swift_release(v14);
    swift_release(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    v20 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v21 = v0[27];
    v22 = v0[28];
    v23 = v0[26];
    v24 = v0[24];
    v26 = v0[20];
    v25 = v0[21];
    v27 = v0[15];
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    swift_continuation_throwingResume(v27);
    swift_release(v22);
    swift_release(v21);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    v20 = (uint64_t (*)(void))v0[1];
  }
  return v20();
}

uint64_t sub_10017FEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 120);
    dispatch thunk of DispatchWorkItem.cancel()(v3);
    v6 = sub_100005574((uint64_t *)&unk_1004911F0);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v4.n128_f64[0] = swift_continuation_throwingResumeWithError(v5, v7);
  }
  v10 = *(_QWORD *)(v0 + 216);
  v9 = *(_QWORD *)(v0 + 224);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 192);
  v14 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  swift_willThrow(v4);
  swift_release(v9);
  swift_release(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10017FFF0(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _BYTE v15[24];

  swift_beginAccess(a1 + 16, v15, 1, 0);
  *(_BYTE *)(a1 + 16) = 1;
  v8 = sub_100005574(a3);
  v9 = sub_10002FFB8(a4, a3, (uint64_t)&unk_10038EBC8);
  v10 = swift_allocError(v8, v9, 0, 0);
  v11 = sub_100005574((uint64_t *)&unk_1004911F0);
  v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
  *v13 = v10;
  return swift_continuation_throwingResumeWithError(a2, v12);
}

uint64_t Player.NowPlayingObserver.init(player:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  int v21;
  unsigned int v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[3];
  _QWORD v61[3];

  v2 = v1;
  v4 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100005574(&qword_1004938D0);
  v51 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100005574(&qword_1004938D8);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_1004938E0);
  v57 = *(_QWORD *)(v11 - 8);
  v58 = v11;
  __chkstk_darwin(v11);
  v50 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = &_swiftEmptySetSingleton;
  v56 = v1 + 32;
  _s9MusicCore6PlayerC18NowPlayingObserverC22__observationRegistrar33_031AD420BBF8BBF113A2662767DAC2BBLL11Observation0oH0Vvpfi_0();
  KeyPath = swift_getKeyPath(&unk_10038E5A8);
  v14 = swift_getKeyPath(&unk_10038E5D0);
  v59 = a1;
  static Published.subscript.getter(v61, a1, KeyPath, v14);
  swift_release(v14);
  swift_release(KeyPath);
  v15 = (void *)v61[0];
  v16 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = v61[0];
  v17 = v15;

  v18 = swift_getKeyPath(&unk_10038E808);
  v61[0] = v1;
  v19 = sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v61, v18, v19);
  swift_release(v18);
  *(_QWORD *)&v20 = swift_beginAccess(v1 + 16, v61, 0, 0).n128_u64[0];
  v21 = *(unsigned __int8 *)(v1 + 16);
  v52 = v17;
  if (v15)
  {
    v22 = objc_msgSend(v17, "isSharedListeningSession", v20);
    v23 = v22;
    v24 = v50;
    if (v21 == v22)
      goto LABEL_7;
    goto LABEL_6;
  }
  v24 = v50;
  if ((v21 & 1) != 0)
  {
    v23 = 0;
LABEL_6:
    v25 = swift_getKeyPath(&unk_10038E808);
    __chkstk_darwin(v25);
    *(&v49 - 2) = v1;
    *((_BYTE *)&v49 - 8) = v23;
    v60[0] = (id)v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v60, v25, sub_100182E9C);
    swift_release(v25);
  }
LABEL_7:
  v26 = v59;
  swift_beginAccess(v59 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v60, 33, 0);
  v27 = sub_100005574((uint64_t *)&unk_1004933B0);
  Published.projectedValue.getter(v27);
  swift_endAccess(v60);
  v28 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v60[0] = (id)static OS_dispatch_queue.main.getter(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v6, 1, 1, v36);
  v37 = sub_10002FFB8((unint64_t *)&qword_100493050, &qword_1004938D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  sub_1001829E4();
  v38 = v54;
  Publisher.receive<A>(on:options:)(v60, v6, v54, v28, v37);
  sub_100008758((uint64_t)v6, (uint64_t *)&unk_1004962D0);

  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v38);
  v39 = sub_10002FFB8(&qword_100493900, &qword_1004938D8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v40 = v55;
  Publisher.dropFirst(_:)(1, v55, v39);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v40);
  v41 = swift_allocObject(&unk_100450388, 24, 7);
  swift_weakInit(v41 + 16, v2);
  v42 = sub_10002FFB8(&qword_100493908, &qword_1004938E0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v43 = v58;
  v44 = Publisher<>.sink(receiveValue:)(sub_100182E94, v41, v58, v42);
  v45 = swift_release(v41);
  (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v24, v43, v45);
  v46 = v56;
  v47 = swift_beginAccess(v56, v60, 33, 0);
  AnyCancellable.store(in:)(v46, v47);
  swift_endAccess(v60);
  swift_release(v26);
  swift_release(v44);

  return v2;
}

double Player.NowPlayingObserver.isSharedListeningSession.setter()
{
  uint64_t v0;
  uint64_t KeyPath;
  double result;
  uint64_t v3;

  KeyPath = swift_getKeyPath(&unk_10038E808);
  v3 = v0;
  sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v3, KeyPath, sub_100182E9C);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_100180650(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(void **)(Strong + 24);
    *(_QWORD *)(Strong + 24) = v2;
    v8 = v2;

    sub_100180A08();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t Player.NowPlayingObserver.isSharedListeningSession.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD v4[3];

  KeyPath = swift_getKeyPath(&unk_10038E808);
  v4[0] = v0;
  v2 = sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 16, v4, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_100180764(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038E808);
  v6[0] = v3;
  v5 = sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 16, v6, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_100180804(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double result;
  uint64_t v5;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038E808);
  v5 = v2;
  sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v5, KeyPath, sub_100182E9C);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void (*Player.NowPlayingObserver.isSharedListeningSession.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[3] = v2;
  KeyPath = swift_getKeyPath(&unk_10038E808);
  v4[4] = OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  *v4 = v2;
  v6 = sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4[5] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v6);
  swift_release(KeyPath);
  *v4 = v2;
  v7 = swift_getKeyPath(&unk_10038E808);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v4, v7, v6);
  swift_release(v7);
  swift_beginAccess(v2 + 16, v4, 33, 0);
  return sub_1001809A0;
}

void sub_1001809A0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;

  v1 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v2 = v1[5];
  *v1 = v1[3];
  KeyPath = swift_getKeyPath(&unk_10038E808);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v1, KeyPath, v2);
  swift_release(KeyPath);
  free(v1);
}

void sub_100180A08()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  double v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v1 = *(void **)(v0 + 24);
  KeyPath = swift_getKeyPath(&unk_10038E808);
  v9[0] = v0;
  v3 = sub_100006924((unint64_t *)&unk_1004938F0, type metadata accessor for Player.NowPlayingObserver, (uint64_t)&protocol conformance descriptor for Player.NowPlayingObserver);
  v4 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v3);
  swift_release(KeyPath);
  *(_QWORD *)&v5 = swift_beginAccess(v0 + 16, v9, 0, 0).n128_u64[0];
  v6 = *(unsigned __int8 *)(v0 + 16);
  if (v1)
  {
    if (v6 == objc_msgSend(v4, "isSharedListeningSession", v5))
    {

      return;
    }
  }
  else if ((v6 & 1) == 0)
  {
    return;
  }
  v7 = swift_getKeyPath(&unk_10038E808);
  __chkstk_darwin(v7);
  v8 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, v7, sub_100182E9C);
  swift_release(v7);

}

uint64_t Player.NowPlayingObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t Player.NowPlayingObserver.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  v1 = v0 + OBJC_IVAR____TtCC9MusicCore6Player18NowPlayingObserver___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_100180C18(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038E710);
  v5 = swift_getKeyPath(&unk_10038E738);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100180C94(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10038E710);
  v5 = swift_getKeyPath(&unk_10038E738);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_100180D00(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10038EB68);
  v5 = swift_getKeyPath(&unk_10038EB90);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100180D7C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain();
  v7 = sub_10009ABAC(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001B5F74();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v7);
  sub_1001814F4(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100180E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1000A5894(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001B6128();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_1000648AC(v12 + *(_QWORD *)(v14 + 72) * v6, a2, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    sub_1001816C8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_100180F84(unint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1000A58F8(a1);
    v12 = v11;
    swift_bridgeObjectRelease(v4);
    if ((v12 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
      v4 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1001B6764();
        v4 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = __CocoaDictionary.lookup(_:)();

  if (!v7)
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  swift_unknownObjectRelease(v7);
  v8 = __CocoaDictionary.count.getter(v5);
  v4 = sub_1001812B4(v5, v8);
  swift_retain(v4);
  a1 = sub_1000A58F8((uint64_t)v6);
  v10 = v9;
  swift_release(v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * a1);
  sub_100181B6C(a1, v4);
  v15 = *v2;
  *v2 = v4;
  swift_bridgeObjectRelease(v15);
  return v14;
}

uint64_t sub_1001810D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1000A5894(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001B690C();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_100005574(&qword_100492D40);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_100181D1C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_100005574(&qword_100492D40);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_100181214(uint64_t a1, void *a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  Swift::Int v10;
  Swift::Int v11;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = __CocoaDictionary.count.getter(v7);
  if (!__OFADD__(result, 1))
  {
    v6 = sub_1001812B4(v7, result + 1);
    *v3 = v6;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_10009A624(a1, a2, isUniquelyReferenced_nonNull_native);
    v10 = *v3;
    *v3 = v11;
    return swift_bridgeObjectRelease(v10);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1001812B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a2)
  {
    sub_100005574(&qword_1004903B0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v30 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_1000087DC(0, &qword_100490368, MPCPlayerPath_ptr);
      do
      {
        v28 = v8;
        swift_dynamicCast(&v29, &v28, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v27 = v9;
        v21 = sub_100005574(&qword_1004940E8);
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
        v4 = v30;
        v22 = *(_QWORD *)(v30 + 16);
        if (*(_QWORD *)(v30 + 24) <= v22)
        {
          sub_1001B4CDC(v22 + 1, 1);
          v4 = v30;
        }
        v12 = v28;
        v11 = v29;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v23 = 0;
          v24 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v24 && (v23 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v25 = v17 == v24;
            if (v17 == v24)
              v17 = 0;
            v23 |= v25;
            v26 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v26 == -1);
          v18 = __clz(__rbit64(~v26)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

unint64_t sub_1001814F4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26);
        swift_bridgeObjectRetain();
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001816C8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v43 = (result + 1) & v11;
      v12 = *(_QWORD *)(v44 + 72);
      v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v42(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100006924(&qword_100494120, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v43)
        {
          if (v21 >= v43 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            result = v27 + v29 * a1;
            v31 = v29 * v10;
            v32 = v27 + v29 * v10;
            v33 = v32 + v29;
            if (v30 < v31 || result >= v33)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v32, 1, v28);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v30 != v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v43 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  *v35 = v37 & v36;
  v38 = *(_QWORD *)(a2 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v40;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10018199C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt *v9;
  Swift::UInt v10;
  Swift::UInt v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (Swift::UInt *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v25);
        Hasher._combine(_:)(v10);
        Hasher._combine(_:)(v11);
        result = Hasher._finalize()();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100181B6C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100181D1C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v44 = *(_QWORD *)(v4 - 8);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v43 = (result + 1) & v11;
      v12 = *(_QWORD *)(v44 + 72);
      v42 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v42(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = *(_QWORD *)(a2 + 40);
        v19 = sub_100006924(&qword_100494120, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v7, v4);
        v13 = v17;
        v21 = v20 & v17;
        if (a1 >= (uint64_t)v43)
        {
          if (v21 >= v43 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v24 = *(_QWORD *)(a2 + 48);
            v25 = v24 + v15 * a1;
            v26 = v24 + v16;
            v8 = v14;
            if (v15 * a1 < v16 || v25 >= v26 + v15)
            {
              swift_arrayInitWithTakeFrontToBack(v25, v26, 1, v4);
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront(v25);
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = sub_100005574(&qword_100492D40);
            v29 = *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72);
            v30 = v29 * a1;
            result = v27 + v29 * a1;
            v31 = v29 * v10;
            v32 = v27 + v29 * v10;
            v33 = v32 + v29;
            if (v30 < v31 || result >= v33)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v32, 1, v28);
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v30 != v31)
              {
                result = swift_arrayInitWithTakeBackToFront(result);
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v43 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  *v35 = v37 & v36;
  v38 = *(_QWORD *)(a2 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v40;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

BOOL sub_100181FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t DynamicType;
  uint64_t v10;
  void *v11;
  BOOL v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v15 = a3;
  v16 = a4;
  v6 = sub_1000207D4(v14);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v6, a1, a3);
  v7 = v15;
  v8 = sub_10000ABC8(v14, v15);
  DynamicType = swift_getDynamicType(v8, v7, 1);
  v10 = sub_100178360(DynamicType, v16);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = MPCPlayerResponse.canPerform(_:)((uint64_t)v14);

  }
  else
  {
    v12 = 0;
  }
  sub_10000682C(v14);
  return v12;
}

uint64_t sub_100182098(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = (_QWORD *)swift_task_alloc(dword_100494214);
  *(_QWORD *)(v6 + 24) = v10;
  *v10 = v6;
  v10[1] = sub_100182100;
  return sub_10018443C(a5, a6, a2);
}

uint64_t sub_100182100(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v6 + 8))();
}

_QWORD *sub_100182160(uint64_t a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  char *v117;
  uint64_t v118;
  id v119[4];

  v104 = a1;
  v105 = a3;
  v118 = a2;
  v4 = *v3;
  v5 = sub_100005574(&qword_10048F148);
  v111 = *(_QWORD *)(v5 - 8);
  v112 = v5;
  __chkstk_darwin(v5);
  v110 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574((uint64_t *)&unk_100494240);
  v114 = *(_QWORD *)(v7 - 8);
  v115 = v7;
  __chkstk_darwin(v7);
  v113 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v9);
  v117 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F150);
  v12 = *(_QWORD *)(v11 - 8);
  v106 = v11;
  v107 = v12;
  __chkstk_darwin(v11);
  v102 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100005574(&qword_10048F158);
  v15 = *(_QWORD *)(v14 - 8);
  v108 = v14;
  v109 = v15;
  __chkstk_darwin(v14);
  v103 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100005574((uint64_t *)&unk_1004938C0);
  v100 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100005574((uint64_t *)&unk_1004938B0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicPlayer.PlayabilityStatus(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[4] = _swiftEmptyArrayStorage;
  v28 = v3 + 4;
  v29 = (char *)v3 + *(_QWORD *)(v4 + 128);
  (*(void (**)(char *, _QWORD))(v30 + 104))(v27, enum case for MusicPlayer.PlayabilityStatus.playable(_:));
  v116 = *(_OWORD *)(v4 + 80);
  property wrapper backing initializer of MusicItemState.playabilityStatus((uint64_t)v27, v31, v32);
  v33 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v34 = v3;
  v33(v29, v24, v21);
  v35 = (char *)v3 + *(_QWORD *)(*v3 + 136);
  v36 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  v37 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v20, v36, v37);
  (*(void (**)(char *, _QWORD, uint64_t))(v98 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v99);
  property wrapper backing initializer of MusicItemState.previewCapabilityStatus((uint64_t)v20, v38, v39);
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v35, v18, v101);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))((char *)v3 + *(_QWORD *)(*v3 + 120), v104);
  v40 = v105;
  v41 = v118;
  v3[2] = v118;
  v3[3] = v40;
  swift_retain(v40);
  swift_retain(v41);
  v42 = sub_10017E41C();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter(v42);
  v43 = MusicItemState.previewCapabilityStatus.setter((uint64_t)v20);
  v44 = v102;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter(v43);
  v45 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  v119[0] = (id)static OS_dispatch_queue.main.getter(v45, v46, v47, v48, v49, v50, v51, v52, v98, v99, v100, v101, v102, v103, v104);
  v53 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v55 = v117;
  v54(v117, 1, 1, v53);
  v56 = sub_10002FFB8((unint64_t *)&unk_100494250, &qword_10048F150, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v57 = sub_1001829E4();
  v58 = v103;
  v59 = v55;
  v60 = (uint64_t)v55;
  v61 = v106;
  v105 = v57;
  Publisher.receive<A>(on:options:)(v119, v59, v106, v45, v56);
  sub_100008758(v60, (uint64_t *)&unk_1004962D0);

  (*(void (**)(char *, uint64_t))(v107 + 8))(v44, v61);
  v62 = swift_allocObject(&unk_100450A38, 24, 7);
  swift_weakInit(v62 + 16, v34);
  v63 = swift_allocObject(&unk_100450A60, 40, 7);
  *(_OWORD *)(v63 + 16) = v116;
  *(_QWORD *)(v63 + 32) = v62;
  v64 = sub_10002FFB8(&qword_10048F160, &qword_10048F158, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v65 = v108;
  v66 = Publisher<>.sink(receiveValue:)(sub_100184B90, v63, v108, v64);
  v67 = swift_release(v63);
  (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v58, v65, v67);
  swift_beginAccess(v28, v119, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
  v70 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v69 = *(_QWORD *)((*v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v70 >= v69 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
  v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v66);
  specialized Array._endMutation()(v71);
  v72 = swift_endAccess(v119);
  v73 = v110;
  v74 = v118;
  v75 = dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter(v72);
  v119[0] = (id)static OS_dispatch_queue.main.getter(v75, v76, v77, v78, v79, v80, v81, v82, v98, v99, v100, v101, v102, v103, v104);
  v83 = (uint64_t)v117;
  v54(v117, 1, 1, v53);
  v84 = sub_10002FFB8(qword_100494260, &qword_10048F148, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v85 = v112;
  v86 = v113;
  Publisher.receive<A>(on:options:)(v119, v83, v112, v45, v84);
  sub_100008758(v83, (uint64_t *)&unk_1004962D0);

  (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v85);
  v87 = swift_allocObject(&unk_100450A38, 24, 7);
  swift_weakInit(v87 + 16, v34);
  v88 = swift_allocObject(&unk_100450A88, 32, 7);
  *(_QWORD *)(v88 + 16) = v87;
  *(_QWORD *)(v88 + 24) = v74;
  v89 = sub_10002FFB8(&qword_10048F168, (uint64_t *)&unk_100494240, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(v74);
  v90 = v115;
  v91 = Publisher<>.sink(receiveValue:)(sub_100184BC8, v88, v115, v89);
  v92 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v86, v90, v92);
  swift_beginAccess(v28, v119, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
  v95 = *(_QWORD *)((v34[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v94 = *(_QWORD *)((v34[4] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v95 >= v94 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1, v95 + 1, 1);
  v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v91);
  specialized Array._endMutation()(v96);
  swift_endAccess(v119);
  return v34;
}

_QWORD *sub_1001828D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;

  v8 = type metadata accessor for MusicItemState(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  return sub_100182160(a1, a2, a3);
}

uint64_t sub_100182930()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100182954(void *a1)
{
  uint64_t v1;

  sub_10017C9E8(a1, *(_QWORD *)(v1 + 16));
}

void sub_10018295C(void *a1)
{
  uint64_t v1;

  sub_10017CFBC(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_100182964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100182974(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_10018297C(uint64_t a1)
{
  uint64_t v1;

  return sub_10017CF64(a1, v1);
}

double sub_100182994(uint64_t a1)
{
  uint64_t v1;

  return sub_1001713F4(a1, v1, (uint64_t)&unk_1004508A8, (uint64_t)&unk_1004941B0);
}

double sub_1001829BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001713F4(a1, v1, (uint64_t)&unk_100450880, (uint64_t)&unk_1004941A0);
}

unint64_t sub_1001829E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100493850;
  if (!qword_100493850)
  {
    v1 = sub_1000087DC(255, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_100493850);
  }
  return result;
}

uint64_t sub_100182A40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100493864);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_100171728(a1, v4, v5, v6);
}

uint64_t sub_100182AAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100182ABC()
{
  uint64_t v0;

  return swift_continuation_throwingResume(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for Player.NowPlayingObserver(uint64_t a1)
{
  return sub_1000091AC(a1, qword_100494018, (uint64_t)&nominal type descriptor for Player.NowPlayingObserver);
}

uint64_t sub_100182B10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_100182B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100172DC0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(void (**)(uint64_t))(v3 + 32));
}

uint64_t sub_100182B58()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

double sub_100182B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_10017310C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_100182B98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100182BA8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100173838(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100182BB0(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64x2_t i;
  unint64_t v8;
  unint64_t v9;
  int64x2_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  for (i = 0uLL; ; i = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v10, i), (int8x16_t)v10, (int8x16_t)i))
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v1 << 6);
      goto LABEL_5;
    }
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v11);
    ++v1;
    if (!v12)
    {
      v1 = v11 + 1;
      if (v11 + 1 >= v6)
        return i.i64[0];
      v12 = *(_QWORD *)(v2 + 8 * v1);
      if (!v12)
      {
        v1 = v11 + 2;
        if (v11 + 2 >= v6)
          return i.i64[0];
        v12 = *(_QWORD *)(v2 + 8 * v1);
        if (!v12)
        {
          v1 = v11 + 3;
          if (v11 + 3 >= v6)
            return i.i64[0];
          v12 = *(_QWORD *)(v2 + 8 * v1);
          if (!v12)
          {
            v1 = v11 + 4;
            if (v11 + 4 >= v6)
              return i.i64[0];
            v12 = *(_QWORD *)(v2 + 8 * v1);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v1 << 6);
LABEL_5:
    v10 = *(int64x2_t *)(*(_QWORD *)(result + 48) + 16 * v9);
  }
  v13 = v11 + 5;
  if (v13 >= v6)
    return i.i64[0];
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v1 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v1 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v1 >= v6)
      return i.i64[0];
    v12 = *(_QWORD *)(v2 + 8 * v1);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_100182CE4()
{
  unint64_t result;

  result = qword_100493890;
  if (!qword_100493890)
  {
    result = swift_getWitnessTable(&unk_10038EB28, &type metadata for Player.BufferedAirPlayError);
    atomic_store(result, (unint64_t *)&qword_100493890);
  }
  return result;
}

uint64_t sub_100182D28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100182D38(void *a1)
{
  uint64_t v1;

  return sub_100179854(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100182D44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004938A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1001798EC(a1, v4, v5, v6);
}

double sub_100182DB0@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.previewCapabilityStatus.getter(a1);
}

uint64_t sub_100182DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017F12C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus, (uint64_t (*)(char *))MusicItemState.previewCapabilityStatus.setter);
}

uint64_t sub_100182DF4()
{
  return 16;
}

__n128 sub_100182E00(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

double sub_100182E0C@<D0>(_QWORD *a1@<X8>)
{
  return MusicItemState.playabilityStatus.getter(a1);
}

uint64_t sub_100182E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017F12C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for MusicPlayer.PlayabilityStatus, (uint64_t (*)(char *))MusicItemState.playabilityStatus.setter);
}

uint64_t sub_100182E50()
{
  return 16;
}

__n128 sub_100182E5C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100182E70()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100182E94(void **a1)
{
  uint64_t v1;

  return sub_100180650(a1, v1);
}

uint64_t sub_100182E9C()
{
  return sub_100183C28();
}

uint64_t sub_100182EB0(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for [A : B].Keys.Iterator, a1);
}

unint64_t sub_100182EC4()
{
  unint64_t result;

  result = qword_100493910;
  if (!qword_100493910)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.EngineState, &type metadata for Player.EngineState);
    atomic_store(result, (unint64_t *)&qword_100493910);
  }
  return result;
}

uint64_t sub_100182F08(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_100493768);
}

uint64_t sub_100182F2C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, (uint64_t *)&unk_100494110, &OBJC_IVAR____TtC9MusicCore6Player__path, &qword_100493768);
}

uint64_t sub_100182F58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Player.nowPlayingObserver.getter();
  *a1 = result;
  return result;
}

double sub_100182F80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = *a1;
  v3 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player____lazy_storage___nowPlayingObserver) = v2;
  swift_retain(v2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t sub_100182FC0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004933B0);
}

uint64_t sub_100182FE4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_1004938D0, &OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, (uint64_t *)&unk_1004933B0);
}

uint64_t sub_100183010(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_100493758);
}

uint64_t sub_100183034(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100494108, &OBJC_IVAR____TtC9MusicCore6Player__nowPlayingPath, (uint64_t *)&unk_100493758);
}

uint64_t sub_100183068(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_100493750);
}

uint64_t sub_10018308C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100494100, &OBJC_IVAR____TtC9MusicCore6Player__sharePlayTogetherSession, &qword_100493750);
}

uint64_t sub_1001830B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_100492DA0);
}

uint64_t sub_1001830DC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100492DA8, &OBJC_IVAR____TtC9MusicCore6Player__isHostingSharePlayTogetherSession, &qword_100492DA0);
}

uint64_t sub_100183108(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_100492DA0);
}

uint64_t sub_10018312C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100492DA8, &OBJC_IVAR____TtC9MusicCore6Player__isEligibleForHostingSharePlayTogetherSession, &qword_100492DA0);
}

uint64_t sub_100183158@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

double sub_1001831A8(unsigned __int8 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  return sub_100179E70(v4);
}

uint64_t sub_100183204()
{
  return type metadata accessor for Player(0);
}

uint64_t type metadata accessor for Player(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100493940, (uint64_t)&nominal type descriptor for Player);
}

void sub_100183220(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[7];
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  void *v17;
  const char *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  const char *v23;
  const char *v24;
  const char *v25;
  const char *v26;
  const char *v27;
  const char *v28;
  char *v29;
  const char *v30;
  char *v31;

  v13[0] = "\b";
  v13[1] = "\b";
  sub_100183390(319);
  if (v3 <= 0x3F)
  {
    v13[2] = *(_QWORD *)(v2 - 8) + 64;
    v13[3] = "\b";
    sub_1001833F4(319, &qword_100493970, &qword_100493790);
    if (v5 <= 0x3F)
    {
      v6 = *(_QWORD *)(v4 - 8) + 64;
      v13[4] = v6;
      sub_1001833F4(319, &qword_100493978, &qword_1004937A0);
      if (v8 <= 0x3F)
      {
        v13[5] = *(_QWORD *)(v7 - 8) + 64;
        sub_1001833F4(319, qword_100493980, &qword_1004937B0);
        if (v10 <= 0x3F)
        {
          v13[6] = *(_QWORD *)(v9 - 8) + 64;
          sub_100153F5C();
          if (v12 <= 0x3F)
          {
            v14 = *(_QWORD *)(v11 - 8) + 64;
            v15 = v14;
            v16 = "\b";
            v17 = &unk_10038E9F8;
            v18 = "\b";
            v19 = (char *)&value witness table for Builtin.UnknownObject + 64;
            v20 = &unk_10038EA10;
            v21 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v22 = v6;
            v23 = "\b";
            v24 = "\b";
            v25 = "\b";
            v26 = "\b";
            v27 = "\b";
            v28 = "\b";
            v29 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v30 = "\b";
            v31 = (char *)&value witness table for Builtin.NativeObject + 64;
            swift_updateClassMetadata2(a1, 256, 25, v13, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_100183390(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100493968)
  {
    v2 = sub_1000087DC(255, &qword_100490368, MPCPlayerPath_ptr);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100493968);
  }
}

void sub_1001833F4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_100005600(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t destroy for Player.NowPlayingConfiguration(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

_QWORD *_s9MusicCore6PlayerC23NowPlayingConfigurationVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t assignWithTake for Player.NowPlayingConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.NowPlayingConfiguration()
{
  return &type metadata for Player.NowPlayingConfiguration;
}

uint64_t type metadata accessor for Player.NowPlayingConfiguration.BadCountedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Player.NowPlayingConfiguration.BadCountedSet);
}

uint64_t storeEnumTagSinglePayload for Player.EngineState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001835DC + 4 * byte_10038E559[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100183610 + 4 * byte_10038E554[v4]))();
}

uint64_t sub_100183610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100183618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100183620);
  return result;
}

uint64_t sub_10018362C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100183634);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100183638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100183640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.EngineState()
{
  return &type metadata for Player.EngineState;
}

uint64_t type metadata accessor for Player.DataSource()
{
  return objc_opt_self(_TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource);
}

void sub_10018367C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[6];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_100183760(319, &qword_100493FE0, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_100183760(319, &qword_100493FE8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicPlayer.PreviewCapabilityStatus);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        swift_initClassMetadata2(a1, 0, 6, v8, a1 + 96);
      }
    }
  }
}

void sub_100183760(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1001837AC()
{
  return type metadata accessor for Player.NowPlayingObserver(0);
}

uint64_t sub_1001837B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10038EAF8;
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.BufferedAirPlayError()
{
  return &type metadata for Player.BufferedAirPlayError;
}

void sub_100183854(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  __n128 v13;
  uint64_t v14;
  _QWORD v15[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_10038EB68);
  v5 = swift_getKeyPath(&unk_10038EB90);
  v15[0] = a1;
  v6 = a1;
  swift_retain(v2);
  static Published.subscript.setter(v15, v2, KeyPath, v5);
  v7 = swift_getKeyPath(&unk_10038EB68);
  v8 = swift_getKeyPath(&unk_10038EB90);
  static Published.subscript.getter(v15, v2, v7, v8);
  swift_release(v8);
  swift_release(v7);
  v9 = (void *)v15[0];
  if (v15[0])
  {
    v10 = swift_conformsToProtocol2(&type metadata for Player.ReplaceCommand, &protocol descriptor for _PlayerCommand);
    if (v10)
    {
      v11 = (*(uint64_t (**)(void *))(v10 + 16))(v9);

      if ((v11 & 1) != 0)
      {
        v12 = (_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState);
        v13 = swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore6Player_engineState, v15, 1, 0);
        v14 = *v12;
        *v12 = 2;
        sub_100179E70(v14, v13);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100183994(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;

  (*(void (**)(uint64_t))(a3 + 16))(a3);
  v5 = objc_msgSend(a1, "request");
  if (v5)
  {
    v6 = v5;
    objc_opt_self(MPCPlayerRequest);
    v7 = swift_dynamicCastObjCClass(v6);
    if (!v7)
    {
      swift_unknownObjectRelease(v6);
      return;
    }
    v8 = v7;
    v9 = *(void (**)(uint64_t))(a2
                                        + OBJC_IVAR____TtCC9MusicCore6PlayerP33_031AD420BBF8BBF113A2662767DAC2BB10DataSource_onResponseChanged);
    v10 = objc_msgSend(a1, "response");
    if (v10)
    {
      v11 = v10;
      objc_opt_self(MPCPlayerResponse);
      v12 = swift_dynamicCastObjCClass(v11);
      if (v12)
      {
        v13 = (void *)v12;
LABEL_10:
        v14 = v13;
        v9(v8);
        swift_unknownObjectRelease(v6);

        return;
      }
      swift_unknownObjectRelease(v11);
    }
    v13 = 0;
    goto LABEL_10;
  }
}

uint64_t sub_100183AC4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100183AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004940D4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001723B8(a1, v4, v5, v7, v6);
}

double sub_100183B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10017A604(a1, a2, v2);
}

void sub_100183B78(void *a1, uint64_t a2)
{
  sub_10017A860(a1, a2);
}

uint64_t sub_100183B80()
{
  uint64_t v0;

  return sub_10017AFF4(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100183B98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100183BC4()
{
  uint64_t v0;

  sub_10017B87C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100183BCC()
{
  uint64_t v0;

  sub_10017A6D8(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_100183BEC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_100183854(v1);

}

uint64_t sub_100183C28()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  _BYTE v4[24];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t sub_100183C7C(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_10049412C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return sub_10017F96C(v7, a1, v4, v5, v6, v8);
}

uint64_t sub_100183D00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_100183D10()
{
  uint64_t v0;

  return sub_10017FFF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_100494138, &qword_100494140);
}

void sub_100183D38(id a1)
{
  if (a1 != (id)1)

}

double sub_100183D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10017BDD8(a1, a2, v2);
}

void sub_100183D50(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10017C5D4(a1, a2, v2);
}

uint64_t sub_100183D58()
{
  uint64_t v0;

  return sub_10017BEAC(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100183D74()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_errorRelease(v0[9]);
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100183DC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_10049416C);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000EA88;
  return sub_10017326C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100183E64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100494184);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_100171E64(a1, v4, v5, v6);
}

uint64_t sub_100183ED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10049419C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1001714F8(a1, v4, v5, v6);
}

uint64_t sub_100183F44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004941AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_100171294(a1, v4, v5, v6);
}

void sub_100183FB0()
{
  uint64_t v0;

  sub_10017CBF4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100183FCC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100183FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100184034(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Player.CommandOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100184070()
{
  unint64_t result;

  result = qword_1004941C0;
  if (!qword_1004941C0)
  {
    result = swift_getWitnessTable(&unk_10038F748, &_s12CommandErrorON);
    atomic_store(result, (unint64_t *)&qword_1004941C0);
  }
  return result;
}

uint64_t sub_1001840B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

double sub_100184120(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100177E44(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100184180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = sub_100005574(&qword_100494148);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for Player.CommandOptions(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + v6 + 8) & ~v9;
  v11 = v10 + *(_QWORD *)(v8 + 64);
  v12 = v3 | v9 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10000682C((_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v6));
  v13 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v0 + v10, v13);
  swift_bridgeObjectRelease();

  return swift_deallocObject(v0, v11, v12);
}

uint64_t sub_100184290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(sub_100005574(&qword_100494148) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Player.CommandOptions(0) - 8) + 80);
  v9 = v8 + v7 + 8;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v1 + v5;
  v13 = v1 + v6;
  v14 = *(_QWORD *)(v1 + v7);
  v15 = v1 + (v9 & ~v8);
  v16 = (_QWORD *)swift_task_alloc(dword_1004941EC);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000EA88;
  return sub_1001752BC(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_100184378()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001843A4(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = *((_QWORD *)v1 + 6);
  v9 = (_QWORD *)swift_task_alloc(dword_1004941FC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, double, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1004941F8
                                                                                      + dword_1004941F8))(a1, v7, v4, v5, v6, v8);
}

uint64_t sub_10018443C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 152) = a2;
  *(double *)(v3 + 144) = a3;
  *(_QWORD *)(v3 + 136) = a1;
  v4 = type metadata accessor for DispatchTime(0);
  *(_QWORD *)(v3 + 160) = v4;
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 168) = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 176) = swift_task_alloc(v6);
  *(_QWORD *)(v3 + 184) = swift_task_alloc(v6);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  *(_QWORD *)(v3 + 192) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 200) = v8;
  *(_QWORD *)(v3 + 208) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)(v3 + 216) = v9;
  *(_QWORD *)(v3 + 224) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100184500, 0, 0);
}

uint64_t sub_100184500()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  double **v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *((_QWORD *)v0 + 27);
  v2 = *((_QWORD *)v0 + 28);
  v3 = *((_QWORD *)v0 + 26);
  v22 = *((_QWORD *)v0 + 25);
  v23 = *((_QWORD *)v0 + 24);
  v4 = *((_QWORD *)v0 + 22);
  v24 = *((_QWORD *)v0 + 23);
  v25 = *((_QWORD *)v0 + 21);
  v26 = *((_QWORD *)v0 + 20);
  v5 = v0[18];
  v6 = *((_QWORD *)v0 + 17);
  v7 = swift_allocObject(&unk_1004507B8, 17, 7);
  *((_QWORD *)v0 + 29) = v7;
  *(_BYTE *)(v7 + 16) = 0;
  v8 = swift_allocObject(&unk_1004509E8, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *((_QWORD *)v0 + 6) = sub_100184B44;
  *((_QWORD *)v0 + 7) = v8;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_1000BED80;
  *((_QWORD *)v0 + 5) = &unk_100450A00;
  v9 = _Block_copy(v0 + 2);
  *((_QWORD *)v0 + 14) = _swiftEmptyArrayStorage;
  v10 = sub_100006924((unint64_t *)&qword_1004921B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v7);
  v11 = sub_100005574(&qword_100490838);
  v12 = sub_10002FFB8((unint64_t *)&qword_1004921C0, &qword_100490838, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v1, v10);
  v13 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v14 = DispatchWorkItem.init(flags:block:)(v2, v9);
  *((_QWORD *)v0 + 30) = v14;
  swift_release(*((_QWORD *)v0 + 7));
  sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v3, enum case for DispatchQoS.QoSClass.userInitiated(_:), v23);
  v15 = (void *)static OS_dispatch_queue.global(qos:)(v3);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v3, v23);
  static DispatchTime.now()(v16);
  + infix(_:_:)(v4, v5);
  v17 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v17(v4, v26);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v24, v14);

  v17(v24, v26);
  v18 = (double **)swift_task_alloc(async function pointer to Task.value.getter[1]);
  *((_QWORD *)v0 + 31) = v18;
  v19 = sub_100005574(&qword_100494208);
  v20 = sub_100005574((uint64_t *)&unk_1004911F0);
  *((_QWORD *)v0 + 32) = v20;
  *v18 = v0;
  v18[1] = (double *)sub_1001847B4;
  return Task.value.getter(v0 + 15, *((_QWORD *)v0 + 19), v19, v20, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001847B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100184A48;
  else
    v3 = sub_100184818;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100184818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 232);
  swift_beginAccess(v1 + 16, v0 + 88, 0, 0);
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = sub_100005574(&qword_100494218);
    v4 = sub_10002FFB8(&qword_100494220, &qword_100494218, (uint64_t)&unk_10038EBC8);
    v5 = swift_allocError(v3, v4, 0, 0);
    swift_willThrow(v6);

    v7 = *(_QWORD *)(v0 + 232);
    v9 = swift_beginAccess(v7 + 16, v0 + 64, 0, 0);
    if ((*(_BYTE *)(v7 + 16) & 1) == 0)
    {
      v10 = *(_QWORD *)(v0 + 256);
      v11 = *(_QWORD *)(v0 + 136);
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v12 = swift_allocError(v10, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v5;
      swift_errorRetain(v5);
      v9.n128_f64[0] = swift_continuation_throwingResumeWithError(v11, v12);
    }
    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v16 = *(_QWORD *)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 208);
    v19 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 184);
    swift_willThrow(v9);
    swift_release(v14);
    swift_release(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 232);
    v21 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 224);
    v24 = *(_QWORD *)(v0 + 208);
    v29 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v2);
    v26 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 128) = v26;
    v27 = *(_QWORD *)(*(_QWORD *)(v25 + 64) + 40);
    v28 = v26;
    sub_1000149A8(v0 + 128, v27, &qword_100494208);
    swift_continuation_throwingResume(v25);
    swift_release(v21);

    swift_release(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void *))(v0 + 8))(v26);
  }
}

uint64_t sub_100184A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = swift_beginAccess(v2 + 16, v0 + 64, 0, 0);
  if ((*(_BYTE *)(v2 + 16) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 136);
    dispatch thunk of DispatchWorkItem.cancel()(v3);
    v7 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = v1;
    swift_errorRetain(v1);
    v4.n128_f64[0] = swift_continuation_throwingResumeWithError(v6, v7);
  }
  v10 = *(_QWORD *)(v0 + 232);
  v9 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 208);
  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  swift_willThrow(v4);
  swift_release(v9);
  swift_release(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100184B44()
{
  uint64_t v0;

  return sub_10017FFF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &qword_100494218, &qword_100494220);
}

uint64_t sub_100184B6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100184B90(uint64_t a1)
{
  uint64_t v1;

  return sub_10017E320(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_100184B9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100184BC8(uint64_t a1)
{
  uint64_t v1;

  return sub_10017E374(a1, *(_QWORD *)(v1 + 16));
}

uint64_t _s7TimeoutVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&_s7TimeoutVMn);
}

uint64_t Player.InsertCommand.init(location:playbackIntent:)(uint64_t a1, uint64_t a2)
{
  return a2;
}

int *Player.CommandOptions.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  _QWORD *v3;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  result = (int *)type metadata accessor for Player.CommandOptions(0);
  v3 = (_QWORD *)(a1 + result[5]);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(a1 + result[6]) = 0;
  *(_BYTE *)(a1 + result[7]) = 0;
  *(_QWORD *)(a1 + result[8]) = 0;
  return result;
}

uint64_t static Player.CommandOptions.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  _QWORD *v5;

  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = (_QWORD *)(a2 + v4[5]);
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)(a2 + v4[6]) = 0;
  *(_BYTE *)(a2 + v4[7]) = 0;
  *(_QWORD *)(a2 + v4[8]) = 0;
  return a1(a2);
}

BOOL MPCPlayerResponse.canPerform(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BOOL8 v7;
  __int128 v9[2];
  uint64_t v10;
  _BYTE v11[40];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  sub_1000244B0(a1, (uint64_t)v11);
  v2 = sub_100005574(&qword_100493120);
  v3 = sub_100005574(&qword_100494228);
  if (swift_dynamicCast(v9, v11, v2, v3, 6))
  {
    sub_1000137C8(v9, (uint64_t)v12);
    v4 = v13;
    v5 = v14;
    sub_10000ABC8(v12, v13);
    v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v1, v4, v5);
    v7 = v6 != 0;
    if (v6)

    sub_10000682C(v12);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_100188340((uint64_t)v9);
    return 0;
  }
  return v7;
}

uint64_t MPCPlayerResponse.canPerform(anyOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = swift_conformsToProtocol2(a1, &protocol descriptor for _PlayerCommand);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = a1;
  else
    v5 = 0;
  if (v5)
    return (*(uint64_t (**)(uint64_t))(v4 + 16))(v1) & 1;
  else
    return 0;
}

uint64_t MPCPlayerResponse.perform(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  return swift_task_switch(sub_100184E5C, 0, 0);
}

{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch(sub_100187CA8, 0, 0);
}

_QWORD *sub_100184E5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  uint64_t v19;
  void *v20;
  Swift::String v21;
  _QWORD *result;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  __n128 v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v1 = (_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 200);
  v3 = *(id *)(v0 + 216);
  v4 = (uint64_t)sub_10018849C(v2, (uint64_t)v3);

  v5 = *(_QWORD **)(v0 + 200);
  if (!((unint64_t)v4 >> 62))
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6 == v5[2])
    {
      swift_bridgeObjectRetain();
      v7 = v6;
      goto LABEL_4;
    }
LABEL_28:
    v32 = v1;
    v33 = (void *)v1[27];
    swift_bridgeObjectRelease(v4);
    v34 = sub_100184070();
    swift_allocError(&_s12CommandErrorON, v34, 0, 0);
    v36 = v35;
    v37 = v33;
    v38 = swift_bridgeObjectRetain();
    v39 = sub_100188608(v38, (uint64_t)v37);

    swift_bridgeObjectRelease(v5);
    *(_QWORD *)v36 = v39;
    *(_BYTE *)(v36 + 40) = 1;
    swift_willThrow(v40);
    return (_QWORD *)((uint64_t (*)(void))v32[1])();
  }
LABEL_22:
  if (v4 < 0)
    v30 = v4;
  else
    v30 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v4);
  if (v31 != v5[2])
  {
    v5 = (_QWORD *)v1[25];
    goto LABEL_28;
  }
  v5 = (_QWORD *)v31;
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v30);
  v6 = (unint64_t)v5;
LABEL_4:
  v41 = v1 + 18;
  if (v7)
  {
    v8 = 0;
    v45 = kMRMediaRemoteOptionCommandID;
    v46 = v4 & 0xC000000000000001;
    v42 = (void *)kMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
    v43 = v7;
    v44 = v4;
    while (1)
    {
      if (v46)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
      else
        v9 = *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_22;
      }
      v12 = v1;
      UUID.uuidString.getter(v9);
      v14 = v13;
      v15 = v6;
      if (v6 < 2)
      {
        v19 = 0;
        v20 = (void *)0xE000000000000000;
      }
      else
      {
        *v41 = v8;
        v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v16._object;
        String.append(_:)(v16);
        swift_bridgeObjectRelease(object);
        v18._countAndFlagsBits = 93;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        v19 = 23341;
        v20 = (void *)0xE200000000000000;
      }
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = v19;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v14);
      v5 = String._bridgeToObjectiveC()();
      result = (_QWORD *)swift_bridgeObjectRelease(v14);
      if (!v45)
        break;
      v1 = v12;
      v23 = v12[26];
      objc_msgSend(v10, "setCommandOptionValue:forKey:", v5);

      v4 = v44;
      v6 = v15;
      if (*(_QWORD *)(v23 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20) + 8))
      {
        result = String._bridgeToObjectiveC()();
        if (!v42)
          goto LABEL_30;
        v5 = result;
        v24 = v42;
        objc_msgSend(v10, "setCommandOptionValue:forKey:", v5, v24);

      }
      ++v8;
      if (v11 == v43)
        goto LABEL_18;
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease(v4);
    v25 = v1[26];
    v26 = objc_allocWithZone((Class)MPCPlayerChangeRequest);
    sub_1000087DC(0, &qword_1004942F8, MPCPlayerCommandRequest_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v28 = objc_msgSend(v26, "initWithCommandRequests:", isa);
    v1[28] = v28;

    v29 = type metadata accessor for Player.CommandOptions(0);
    objc_msgSend(v28, "setOptions:", *(_QWORD *)(v25 + *(int *)(v29 + 24)));
    if (*(_BYTE *)(v25 + *(int *)(v29 + 28)) == 1)
    {
      return (_QWORD *)swift_task_switch(sub_1001852F8, 0, 0);
    }
    else
    {
      v1[2] = v1;
      v1[3] = sub_1001854B8;
      v1[22] = swift_continuation_init(v1 + 2, 1);
      v1[18] = _NSConcreteStackBlock;
      v1[19] = 0x40000000;
      v1[20] = sub_1000A40C0;
      v1[21] = &unk_100450BA8;
      objc_msgSend(v28, "performWithCompletion:", v41);
      return (_QWORD *)swift_continuation_await(v1 + 2);
    }
  }
  return result;
}

uint64_t sub_1001852F8()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;

  v1 = v0 + 10;
  v2 = (void *)v0[28];
  v0[15] = v0 + 24;
  v0[10] = v0;
  v0[11] = sub_1001853D4;
  v3 = swift_continuation_init(v0 + 10, 1);
  v4 = swift_allocObject(&unk_100450BD0, 24, 7);
  v0[18] = _NSConcreteStackBlock;
  v5 = v0 + 18;
  *(_QWORD *)(v4 + 16) = v3;
  v5[4] = sub_1001887CC;
  v5[5] = v4;
  v5[1] = 1107296256;
  v5[2] = sub_100188060;
  v5[3] = &unk_100450BE8;
  v6 = _Block_copy(v5);
  objc_msgSend(v2, "performWithExtendedStatusCompletion:", v6, swift_release(v5[5]).n128_f64[0]);
  _Block_release(v6);
  return swift_continuation_await(v1);
}

uint64_t sub_1001853D4(__n128 a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 232) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = sub_100185484;
  }
  else
  {
    *(_QWORD *)(v2 + 240) = *(_QWORD *)(v2 + 192);
    v4 = sub_100185448;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100185448()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100185484()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001854B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 248) = v1;
  if (v1)
    v2 = sub_100185554;
  else
    v2 = sub_100185518;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100185518()
{
  uint64_t v0;

  return (*(uint64_t (**)(void *))(v0 + 8))(&_swiftEmptyArrayStorage);
}

uint64_t sub_100185554(__n128 a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 224);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t Player.CommandOptions.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Player.CommandOptions.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t Player.CommandOptions.userInterfaceArea.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Player.CommandOptions.userInterfaceArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.userInterfaceArea.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

uint64_t Player.CommandOptions.execution.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 24));
}

uint64_t Player.CommandOptions.execution.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.execution.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

uint64_t Player.CommandOptions.extendedStatus.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 28));
}

uint64_t Player.CommandOptions.extendedStatus.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Player.CommandOptions(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

CFRange (__swiftcall *Player.CommandOptions.extendedStatus.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

void *Player.CommandOptions.route.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Player.CommandOptions(0) + 32));
  v2 = v1;
  return v1;
}

void Player.CommandOptions.route.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Player.CommandOptions(0) + 32);

  *(_QWORD *)(v1 + v3) = a1;
}

CFRange (__swiftcall *Player.CommandOptions.route.modify())(__C::_NSRange)
{
  type metadata accessor for Player.CommandOptions(0);
  return CFRange.init(_:);
}

unint64_t Player.CommandOptions.description.getter(uint64_t a1)
{
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  void *v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;

  v30 = 0xD000000000000016;
  v31 = 0x80000001003B3E30;
  v29._countAndFlagsBits = 0x3D44495555;
  v29._object = (void *)0xE500000000000000;
  v2._countAndFlagsBits = UUID.uuidString.getter(a1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x3D44495555;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(0xE500000000000000);
  v5 = (int *)type metadata accessor for Player.CommandOptions(0);
  v6 = (uint64_t *)(v1 + v5[5]);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    String.append(_:)(*(Swift::String *)(&v7 - 1));
    v9._countAndFlagsBits = (uint64_t)strcpy((char *)&v29, ", area=");
    v9._object = (void *)0xE700000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  strcpy((char *)&v29, ", execution=");
  BYTE5(v29._object) = 0;
  HIWORD(v29._object) = -5120;
  v28 = *(_QWORD *)(v1 + v5[6]);
  type metadata accessor for MPCPlayerChangeRequestOptions(0);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v28, v10);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v13);
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(v29._object);
  v29._countAndFlagsBits = 0xD000000000000016;
  v29._object = (void *)0x80000001003B3E50;
  if (*(_BYTE *)(v1 + v5[7]))
    v14 = 7562585;
  else
    v14 = 28494;
  if (*(_BYTE *)(v1 + v5[7]))
    v15 = 0xE300000000000000;
  else
    v15 = 0xE200000000000000;
  v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v15);
  v17 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v17);
  v18 = *(void **)(v1 + v5[8]);
  if (v18)
  {
    strcpy((char *)&v29, ", route=");
    BYTE1(v29._object) = 0;
    WORD1(v29._object) = 0;
    HIDWORD(v29._object) = -402653184;
    v19 = v18;
    v20 = objc_msgSend(v19, "description");
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v23);
    v25 = v29._object;
    String.append(_:)(v29);

    swift_bridgeObjectRelease(v25);
  }
  v26._countAndFlagsBits = 62;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  return v30;
}

void Player.PlaybackCommand.request(from:)(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

id sub_100185AE8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;

  return objc_msgSend(v12, "stop");
}

_UNKNOWN **static Player.PlaybackCommand.allCases.getter()
{
  return &off_10043EE78;
}

void sub_100185B58(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EEA0;
}

void sub_100185B68(uint64_t a1)
{
  char *v1;

  Player.PlaybackCommand.request(from:)(a1, *v1);
}

BOOL static Player.ChangeCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_changeItemCommand);
}

void Player.ChangeCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "changeItemCommand");

  __asm { BR              X10 }
}

id sub_100185BE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "previousItem");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.ChangeCommand.allCases.getter()
{
  return &off_10043EEC8;
}

void sub_100185C9C(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EEC8;
}

BOOL sub_100185CAC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_changeItemCommand);
}

void sub_100185CB8(void *a1)
{
  char *v1;

  Player.ChangeCommand.request(from:)(a1, *v1);
}

BOOL static Player.ShuffleCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_shuffleCommand);
}

id Player.ShuffleCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "shuffleCommand");

  if (!a2)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "advance");
      goto LABEL_9;
    }
    return 0;
  }
  if (a2 != 1)
  {
    if (v4)
    {
      v5 = objc_msgSend(v4, "setShuffleType:", 1);
      goto LABEL_9;
    }
    return 0;
  }
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "setShuffleType:", 0);
LABEL_9:
  v6 = v5;
  swift_unknownObjectRelease(v4);
  return v6;
}

_UNKNOWN **static Player.ShuffleCommand.allCases.getter()
{
  return &off_10043EEF0;
}

void sub_100185DA8(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EF18;
}

BOOL sub_100185DB8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_shuffleCommand);
}

id sub_100185DC4(void *a1)
{
  char *v1;

  return Player.ShuffleCommand.request(from:)(a1, *v1);
}

BOOL static Player.FavoriteCommand.isAvailable(in:)(void *a1)
{
  return sub_100187418(a1, (SEL *)&selRef_likeCommand);
}

id Player.FavoriteCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, "likeCommand");

  if (!v5)
    return 0;
  if (a2)
    v6 = a2 == 1;
  else
    v6 = objc_msgSend(v5, "value") ^ 1;
  v7 = objc_msgSend(v5, "changeValue:", v6);
  swift_unknownObjectRelease(v5);
  return v7;
}

BOOL sub_100185EB4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187590(a1, a2, a3, (SEL *)&selRef_likeCommand);
}

id sub_100185EC0(void *a1)
{
  char *v1;

  return Player.FavoriteCommand.request(from:)(a1, *v1);
}

BOOL static Player.RepeatCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_repeatCommand);
}

void Player.RepeatCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "repeatCommand");

  __asm { BR              X10 }
}

id sub_100185F38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  if (!v14)
    return 0;
  v15 = objc_msgSend(v14, "advance");
  swift_unknownObjectRelease(v14);
  return v15;
}

_UNKNOWN **static Player.RepeatCommand.allCases.getter()
{
  return &off_10043EF40;
}

void sub_100185FE4(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EF68;
}

BOOL sub_100185FF4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_repeatCommand);
}

void sub_100186000(void *a1)
{
  char *v1;

  Player.RepeatCommand.request(from:)(a1, *v1);
}

BOOL static Player.QueueEndCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_actionAtQueueEndCommand);
}

void Player.QueueEndCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "actionAtQueueEndCommand");

  __asm { BR              X10 }
}

id sub_100186078(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;

  v15 = 0;
  if (v14)
  {
    v15 = objc_msgSend(v14, "setQueueEndAction:", 0);
    swift_unknownObjectRelease(v14);
  }
  return v15;
}

_UNKNOWN **static Player.QueueEndCommand.allCases.getter()
{
  return &off_10043EF90;
}

void sub_100186104(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EFB8;
}

BOOL sub_100186114(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_actionAtQueueEndCommand);
}

void sub_100186120(void *a1)
{
  char *v1;

  Player.QueueEndCommand.request(from:)(a1, *v1);
}

void *Player.InsertCommand.location.getter(uint64_t a1, void *a2)
{
  sub_1000528E4(a2);
  return a2;
}

void Player.InsertCommand.Location.hash(into:)(uint64_t a1, void *a2)
{
  Swift::UInt v4;
  id v5;

  switch((unint64_t)a2)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = a2;
      NSObject.hash(into:)(a1);
      sub_100052658(a2);
      break;
  }
}

Swift::Int Player.InsertCommand.Location.hashValue.getter(void *a1)
{
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5);
  switch((unint64_t)a1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = a1;
      NSObject.hash(into:)(v5);
      sub_100052658(a1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_10018628C()
{
  void **v0;

  return Player.InsertCommand.Location.hashValue.getter(*v0);
}

void sub_100186294(uint64_t a1)
{
  void **v1;
  void *v3;
  Swift::UInt v4;
  id v5;

  v3 = *v1;
  switch((unint64_t)*v1)
  {
    case 0uLL:
      v4 = 0;
      goto LABEL_7;
    case 1uLL:
      v4 = 2;
      goto LABEL_7;
    case 2uLL:
      v4 = 3;
      goto LABEL_7;
    case 3uLL:
      v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v5 = v3;
      NSObject.hash(into:)(a1);
      sub_100052658(v3);
      break;
  }
}

Swift::Int sub_100186330()
{
  void **v0;
  void *v1;
  Swift::UInt v2;
  id v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  switch((unint64_t)v1)
  {
    case 0uLL:
      v2 = 0;
      goto LABEL_7;
    case 1uLL:
      v2 = 2;
      goto LABEL_7;
    case 2uLL:
      v2 = 3;
      goto LABEL_7;
    case 3uLL:
      v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      v3 = v1;
      NSObject.hash(into:)(v5);
      sub_100052658(v1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1001863DC(void **a1, void **a2)
{
  return _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, *a2);
}

BOOL static Player.InsertCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_insertCommand);
}

id Player.InsertCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "insertCommand");

  switch(a3)
  {
    case 0:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAfterPlayingItemWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 1:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfTracklistWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 2:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertAtEndOfUpNextWithPlaybackIntent:", a2);
      goto LABEL_10;
    case 3:
      if (!v6)
        return 0;
      v9 = objc_msgSend(v6, "insertAfterLastSection");
      if (v9)
      {
        v10 = v9;
        v8 = objc_msgSend(v9, "insertWithPlaybackIntent:", a2);
        swift_unknownObjectRelease(v10);
LABEL_11:
        swift_unknownObjectRelease(v6);
      }
      else
      {
        swift_unknownObjectRelease(v6);
        return 0;
      }
      return v8;
    default:
      if (!v6)
        return 0;
      v7 = objc_msgSend(v6, "insertPlaybackIntent:afterItem:", a2, a3);
LABEL_10:
      v8 = v7;
      goto LABEL_11;
  }
}

unint64_t Player.InsertCommand.description.getter(void *a1, void *a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  void *v14;
  unint64_t v15;
  unint64_t v16;

  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v15 = 0xD000000000000015;
  v16 = 0x80000001003B3E70;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x697461636F6C202CLL;
  v10._object = (void *)0xEB000000003D6E6FLL;
  String.append(_:)(v10);
  v14 = a2;
  sub_1000528E4(a2);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v14, &type metadata for Player.InsertCommand.Location);
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 10537;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  return v15;
}

uint64_t static Player.InsertCommand.__derived_struct_equals(_:_:)(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  char v8;

  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a3) & 1) == 0)
    return 0;
  switch((unint64_t)a2)
  {
    case 0uLL:
      if (a4)
        return 0;
      break;
    case 1uLL:
      if (a4 != (void *)1)
        return 0;
      break;
    case 2uLL:
      if (a4 != (void *)2)
        return 0;
      break;
    case 3uLL:
      if (a4 != (void *)3)
        return 0;
      break;
    default:
      if ((unint64_t)a4 < 4)
        return 0;
      sub_1000528E4(a2);
      sub_1000528E4(a4);
      v8 = static NSObject.== infix(_:_:)(a2, a4);
      sub_100052658(a4);
      sub_100052658(a2);
      if ((v8 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

uint64_t sub_10018678C(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = (void *)a1[1];
  v5 = *a2;
  v4 = (void *)a2[1];
  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v5) & 1) == 0)
    return 0;
  switch((unint64_t)v2)
  {
    case 0uLL:
      if (v4)
        return 0;
      break;
    case 1uLL:
      if (v4 != (void *)1)
        return 0;
      break;
    case 2uLL:
      if (v4 != (void *)2)
        return 0;
      break;
    case 3uLL:
      if (v4 != (void *)3)
        return 0;
      break;
    default:
      if ((unint64_t)v4 < 4)
        return 0;
      sub_1000528E4(v2);
      sub_1000528E4(v4);
      v6 = static NSObject.== infix(_:_:)(v2, v4);
      sub_100052658(v4);
      sub_100052658(v2);
      if ((v6 & 1) == 0)
        return 0;
      break;
  }
  return 1;
}

unint64_t sub_10018687C()
{
  void **v0;

  return Player.InsertCommand.description.getter(*v0, v0[1]);
}

BOOL sub_100186884(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_insertCommand);
}

id sub_100186890(void *a1)
{
  uint64_t *v1;

  return Player.InsertCommand.request(from:)(a1, *v1, v1[1]);
}

BOOL static Player.ReplaceCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_resetCommand);
}

id Player.ClearCommand.request(from:)(void *a1, char a2)
{
  id v3;
  id v4;
  char **v5;
  id v6;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "resetCommand");

  if (!v4)
    return 0;
  v5 = &selRef_clear;
  if ((a2 & 1) != 0)
    v5 = &selRef_clearUpNextItems;
  v6 = objc_msgSend(v4, *v5);
  swift_unknownObjectRelease(v4);
  return v6;
}

BOOL sub_100186944(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_resetCommand);
}

id sub_100186950(void *a1)
{
  char *v1;

  return Player.ClearCommand.request(from:)(a1, *v1);
}

id Player.ReplaceCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "resetCommand");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "replaceWithPlaybackIntent:replaceIntent:", a2, a3);
  swift_unknownObjectRelease(v6);
  return v7;
}

unint64_t Player.ReplaceCommand.description.getter(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v16 = 0xD000000000000016;
  v17 = 0x80000001003B3E90;
  v4 = a1;
  v5 = objc_msgSend(v4, "description");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x80000001003B3EB0;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v10);
  v15 = a2;
  type metadata accessor for MPCPlayerTracklistReplaceIntent(0);
  v12._countAndFlagsBits = String.init<A>(describing:)(&v15, v11);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 10537;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  return v16;
}

id sub_100186B10(void *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;

  v2 = *v1;
  v3 = v1[1];
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "resetCommand");

  if (!v5)
    return 0;
  v6 = objc_msgSend(v5, "replaceWithPlaybackIntent:replaceIntent:", v2, v3);
  swift_unknownObjectRelease(v5);
  return v6;
}

void *Player.MoveCommand.location.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

uint64_t static Player.MoveCommand.Location.__derived_enum_equals(_:_:)(void *a1, char a2, void *a3, char a4)
{
  return sub_1001881A8(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_100186BE4(uint64_t a1, uint64_t a2)
{
  return sub_1001881A8(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

BOOL static Player.MoveCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_reorderCommand);
}

id Player.MoveCommand.request(from:)(void *a1, uint64_t a2, void *a3, char a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v7 = a3;
  v8 = objc_msgSend(a1, "tracklist");
  v9 = objc_msgSend(v8, "reorderCommand");

  if ((a4 & 1) != 0)
  {
    if (v9)
    {
      v10 = objc_msgSend(v9, "moveItem:afterItem:", a2, v7);
      goto LABEL_6;
    }
LABEL_7:

    return 0;
  }
  if (!v9)
    goto LABEL_7;
  v10 = objc_msgSend(v9, "moveItem:beforeItem:", a2, v7);
LABEL_6:
  v11 = v10;
  swift_unknownObjectRelease(v9);

  return v11;
}

BOOL sub_100186CEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_reorderCommand);
}

id sub_100186CF8(void *a1)
{
  uint64_t v1;

  return Player.MoveCommand.request(from:)(a1, *(_QWORD *)v1, *(void **)(v1 + 8), *(_BYTE *)(v1 + 16));
}

BOOL static Player.LeaveSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "leaveSession");
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id Player.LeaveSessionCommand.request(from:)(void *a1)
{
  return objc_msgSend(a1, "leaveSession");
}

uint64_t Player.BuildSharedSessionCommand.init(intentHandler:)()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v5[4] = CFRange.init(_:);
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1000E776C;
  v5[3] = &unk_100450C10;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) == 0)
    return (uint64_t)v2;
  __break(1u);
  return result;
}

BOOL static Player.BuildSharedSessionCommand.isAvailable(in:)(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  return v2 != 0;
}

id Player.BuildSharedSessionCommand.request(from:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v11[4] = a3;
  v12 = a4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000F7EF4;
  v11[3] = &unk_100450C38;
  v7 = _Block_copy(v11);
  v8 = v12;
  swift_retain(a4);
  v9 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", a2, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
  return v9;
}

id sub_100186F5C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v10[5];
  uint64_t v11;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v10[4] = v3;
  v11 = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000F7EF4;
  v10[3] = &unk_100451A28;
  v6 = _Block_copy(v10);
  v7 = v11;
  swift_retain(v5);
  v8 = objc_msgSend(a1, "createSharedSessionWithIdentity:intentHandler:", v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
  return v8;
}

BOOL static Player.SeekCommand.isAvailable(in:)(void *a1)
{
  return sub_100187418(a1, (SEL *)&selRef_seekCommand);
}

id Player.SeekCommand.request(from:)(void *a1, uint64_t a2, char a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "seekCommand");

  if (!v7)
    return 0;
  if (a3)
  {
    if (a3 == 1)
      v8 = objc_msgSend(v7, "changePositionToElapsedInterval:", *(double *)&a2);
    else
      v8 = objc_msgSend(v7, "endSeek");
  }
  else
  {
    v8 = objc_msgSend(v7, "beginSeekWithDirection:", a2);
  }
  v9 = v8;
  swift_unknownObjectRelease(v7);
  return v9;
}

BOOL sub_100187118(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187590(a1, a2, a3, (SEL *)&selRef_seekCommand);
}

id sub_100187124(void *a1)
{
  uint64_t v1;

  return Player.SeekCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void Player.JumpCommand.resolvedTimeInterval(for:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v5;
  id v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  if (a1)
  {
    v5 = objc_msgSend(a1, "tracklist");
    v6 = objc_msgSend(v5, "playingItem");

    v7 = objc_msgSend(v6, "seekCommand");
    v8 = a3;
    if (!a3)
      goto LABEL_6;
  }
  else
  {
    v7 = 0;
    v8 = a3;
    if (!a3)
    {
LABEL_6:
      swift_unknownObjectRelease(v7);
      return;
    }
  }
  if (v8 == 1)
    goto LABEL_6;
  if (a2)
  {
    if (v7)
    {
      v9 = objc_msgSend(v7, "preferredForwardJumpIntervals");
      v10 = sub_1000087DC(0, &qword_100490738, NSNumber_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      if ((unint64_t)v11 >> 62)
      {
        if (v11 < 0)
          v16 = v11;
        else
          v16 = v11 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v17 = _CocoaArrayWrapper.endIndex.getter(v16);
        swift_bridgeObjectRelease();
        if (!v17)
          goto LABEL_33;
        goto LABEL_12;
      }
      if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_12:
        if ((v11 & 0xC000000000000001) != 0)
          goto LABEL_34;
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_20:
          v14 = *(id *)(v11 + 32);
LABEL_21:
          v15 = v14;
          swift_bridgeObjectRelease();
          v20 = 0;
          v21 = 1;
          static Double._conditionallyBridgeFromObjectiveC(_:result:)(v15, &v20);

          swift_unknownObjectRelease(v7);
          return;
        }
        __break(1u);
        goto LABEL_29;
      }
LABEL_33:
      swift_unknownObjectRelease(v7);
      swift_bridgeObjectRelease();
    }
  }
  else if (v7)
  {
    v12 = objc_msgSend(v7, "preferredBackwardJumpIntervals");
    v13 = sub_1000087DC(0, &qword_100490738, NSNumber_ptr);
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if ((unint64_t)v11 >> 62)
    {
LABEL_29:
      if (v11 < 0)
        v18 = v11;
      else
        v18 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v19 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease();
      if (!v19)
        goto LABEL_33;
      goto LABEL_18;
    }
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_18:
      if ((v11 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        goto LABEL_20;
      }
LABEL_34:
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      goto LABEL_21;
    }
    goto LABEL_33;
  }
}

BOOL sub_100187418(void *a1, SEL *a2)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "playingItem");

  v5 = objc_msgSend(v4, *a2);
  if (v5)
    swift_unknownObjectRelease(v5);
  return v5 != 0;
}

id Player.JumpCommand.request(from:)(void *a1, uint64_t a2, unsigned __int8 a3)
{
  id v6;
  id v7;
  id v8;
  char **v9;
  id v10;

  v6 = objc_msgSend(a1, "tracklist");
  v7 = objc_msgSend(v6, "playingItem");

  v8 = objc_msgSend(v7, "seekCommand");
  Player.JumpCommand.resolvedTimeInterval(for:)(a1, a2, a3);
  if (a3 != 1)
  {
    if (v8)
    {
      v9 = &selRef_jumpByInterval_;
      goto LABEL_6;
    }
    return 0;
  }
  if (!v8)
    return 0;
  v9 = &selRef_changePositionToElapsedInterval_;
LABEL_6:
  v10 = objc_msgSend(v8, *v9);
  swift_unknownObjectRelease(v8);
  return v10;
}

BOOL sub_100187590(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;
  id v7;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, "playingItem");

  v7 = objc_msgSend(v6, *a4);
  if (v7)
    swift_unknownObjectRelease(v7);
  return v7 != 0;
}

id sub_100187618(void *a1)
{
  uint64_t v1;

  return Player.JumpCommand.request(from:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

BOOL static Player.VocalsCommand.isAvailable(in:)(void *a1)
{
  return sub_100187630(a1, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_100187630(void *a1, SEL *a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, *a2);

  if (v4)
    swift_unknownObjectRelease(v4);
  return v4 != 0;
}

id Player.VocalsCommand.request(from:)(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;

  v3 = objc_msgSend(a1, "tracklist");
  v4 = objc_msgSend(v3, "vocalsControlCommand");

  if (!v4)
    return 0;
  if ((a2 & 0x10000000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 0);
  }
  else if ((a2 & 0x100000000) != 0)
  {
    v6 = objc_msgSend(v4, "activateVocalsControl:", 1);
  }
  else
  {
    LODWORD(v5) = a2;
    v6 = objc_msgSend(v4, "setVocalsLevel:", v5);
  }
  v7 = v6;
  swift_unknownObjectRelease(v4);
  return v7;
}

uint64_t static Player.VocalsCommand.localizedDisablementMessage(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v18[-v10];
  if (a1 == 5)
  {
    v12 = 0xD000000000000052;
    v13 = "Vocal controls will be available once Low Power Mode is turned off on your device.";
    goto LABEL_5;
  }
  if (a1 == 4)
  {
    v12 = 0xD00000000000003DLL;
    v13 = "Vocal controls will be available once your device cools down.";
LABEL_5:
    v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    goto LABEL_7;
  }
  v14 = 0x80000001003B3F30;
  v12 = 0xD000000000000029;
LABEL_7:
  String.LocalizationValue.init(stringLiteral:)(v12, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v15 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v16 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v15, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v16;
}

uint64_t Player.VocalsCommand.description.getter(uint64_t a1)
{
  float v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v9;
  _QWORD v10[2];

  strcpy((char *)v10, "VocalCommand(");
  HIWORD(v10[1]) = -4864;
  if ((a1 & 0x10000000000) != 0)
  {
    v5 = 6710895;
    v6 = 0xE300000000000000;
LABEL_6:
    String.append(_:)(*(Swift::String *)&v5);
    goto LABEL_7;
  }
  if ((a1 & 0x100000000) != 0)
  {
    v5 = 28271;
    v6 = 0xE200000000000000;
    goto LABEL_6;
  }
  v1 = *(float *)&a1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v2._countAndFlagsBits = 2649711;
  v2._object = (void *)0xE300000000000000;
  String.append(_:)(v2);
  Float.write<A>(to:)(&v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v1);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  object = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(object);
LABEL_7:
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v10[0];
}

uint64_t static Player.VocalsCommand.Prepare.isAvailable(in:)(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = objc_msgSend(a1, "tracklist");
  v3 = objc_msgSend(v2, "prepareVocalsControlCommand");
  swift_unknownObjectRelease(v3);

  if (!v3)
    return 0;
  v4 = objc_msgSend(a1, "tracklist");
  v5 = objc_msgSend(v4, "vocalsControlCommand");

  if (v5)
  {
    swift_unknownObjectRelease(v5);
    return 0;
  }
  return 1;
}

id Player.VocalsCommand.Prepare.request(from:)(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, "tracklist");
  v2 = objc_msgSend(v1, "prepareVocalsControlCommand");

  if (!v2)
    return 0;
  v3 = objc_msgSend(v2, "prepare");
  swift_unknownObjectRelease(v2);
  return v3;
}

uint64_t static Player.VocalsCommand.__derived_enum_equals(_:_:)(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0x10000000000) != 0)
    return (a2 >> 40) & 1;
  if ((a2 & 0x10000000000) != 0)
    return 0;
  if ((a1 & 0x100000000) != 0)
  {
    if ((a2 & 0x100000000) == 0)
      return 0;
  }
  else if ((a2 & 0x100000000) != 0 || *(float *)&a1 != *(float *)&a2)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_100187B70(unsigned int *a1, float *a2)
{
  char v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((_BYTE *)a1 + 5);
  result = *((unsigned __int8 *)a2 + 5);
  if ((v3 & 1) == 0)
  {
    if ((result & 1) == 0)
    {
      v5 = *(unsigned int *)a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32);
      v6 = *((unsigned __int8 *)a1 + 4);
      v7 = *a1;
      if (((v7 | (v6 << 32)) & 0x100000000) != 0)
      {
        if ((v5 & 0x100000000) != 0)
          return 1;
      }
      else if ((v5 & 0x100000000) == 0 && *(float *)&v7 == *a2)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100187BD0()
{
  unsigned int *v0;

  return Player.VocalsCommand.description.getter(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v0 + 5) << 40));
}

BOOL sub_100187BF8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100187C04(a1, a2, a3, (SEL *)&selRef_vocalsControlCommand);
}

BOOL sub_100187C04(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v5;
  id v6;

  v5 = objc_msgSend(a1, "tracklist");
  v6 = objc_msgSend(v5, *a4);

  if (v6)
    swift_unknownObjectRelease(v6);
  return v6 != 0;
}

id sub_100187C64(void *a1)
{
  unsigned int *v1;

  return Player.VocalsCommand.request(from:)(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40));
}

uint64_t sub_100187CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = sub_100005574((uint64_t *)&unk_1004940F0);
  inited = swift_initStackObject(v2, v0 + 16);
  *(_QWORD *)(v0 + 112) = inited;
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  sub_1000244B0(v1, inited + 32);
  v4 = swift_task_alloc(dword_1004942F4);
  *(_QWORD *)(v0 + 120) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_100187D48;
  *(_OWORD *)(v4 + 208) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v4 + 200) = inited;
  return swift_task_switch(sub_100184E5C, 0, 0);
}

uint64_t sub_100187D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 120);
  v3[16] = a1;
  v3[17] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_100187EB0;
  }
  else
  {
    v6 = v3[14];
    v7 = v6 + 32;
    swift_setDeallocating(v6);
    v8 = *(_QWORD *)(v6 + 16);
    v9 = sub_100005574(&qword_100493120);
    swift_arrayDestroy(v7, v8, v9);
    v5 = sub_100187DE4;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_100187DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 128);
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    v3 = 0;
    goto LABEL_12;
  }
  if (v1 < 0)
    v4 = *(_QWORD *)(v0 + 128);
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 128));
    v2 = *(_QWORD *)(v0 + 128);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(id *)(v2 + 32);
LABEL_6:
    swift_bridgeObjectRelease(v2);
LABEL_12:
    (*(void (**)(id))(v0 + 8))(v3);
    return;
  }
  __break(1u);
}

uint64_t sub_100187EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = v1 + 32;
  swift_setDeallocating(v1);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_100005574(&qword_100493120);
  swift_arrayDestroy(v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100187F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    **(_QWORD **)(*(_QWORD *)(a2 + 64) + 40) = a1;
    swift_bridgeObjectRetain();
    swift_continuation_throwingResume(a2);
    return;
  }
  if (a1 < 0)
    v14 = a1;
  else
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter(v14))
    goto LABEL_12;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_6:
    v6 = v5;
    swift_bridgeObjectRelease(a1);
    v7 = objc_msgSend(v6, "error");

    if (v7)
    {
      v8 = sub_10016AD54();
      v9 = swift_allocError(&type metadata for Player.PlaybackError, v8, 0, 0);
      *v10 = v7;
      v10[1] = a1;
      v11 = sub_100005574((uint64_t *)&unk_1004911F0);
      v12 = swift_allocError(v11, &protocol self-conformance witness table for Error, 0, 0);
      *v13 = v9;
      swift_bridgeObjectRetain();
      swift_continuation_throwingResumeWithError(a2, v12);
      return;
    }
    goto LABEL_13;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_100188060(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1000087DC(0, (unint64_t *)&unk_1004941D0, MPCPlayerCommandStatus_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void *MPCPlayerCommandRequest.request(from:)()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id Artwork.Placeholder.background.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

id MPCPlayerResponse.isPlayingItemFavorited.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(v0, "tracklist");
  v2 = objc_msgSend(v1, "playingItem");

  if (v2)
  {
    v3 = objc_msgSend(v2, "likeCommand");

    if (v3)
    {
      v2 = objc_msgSend(v3, "value");
      swift_unknownObjectRelease(v3);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_1001881A8(void *a1, char a2, void *a3, char a4)
{
  char v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
    v7 = a1;
    v8 = a3;
    v6 = static NSObject.== infix(_:_:)(v7, v8);

    return v6 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v6 = 0;
  return v6 & 1;
}

uint64_t _s9MusicCore6PlayerC13InsertCommandV8LocationO21__derived_enum_equalsySbAG_AGtFZ_0(void *a1, void *a2)
{
  char v4;
  uint64_t result;

  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2)
        goto LABEL_11;
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1)
        goto LABEL_7;
      goto LABEL_11;
    case 2uLL:
      if (a2 != (void *)2)
        goto LABEL_11;
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3)
        goto LABEL_11;
LABEL_7:
      result = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_11:
        result = 0;
      }
      else
      {
        sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
        sub_1000528E4(a1);
        sub_1000528E4(a2);
        v4 = static NSObject.== infix(_:_:)(a1, a2);
        sub_100052658(a2);
        sub_100052658(a1);
        result = v4 & 1;
      }
      break;
  }
  return result;
}

uint64_t type metadata accessor for Player.CommandOptions(uint64_t a1)
{
  uint64_t result;

  result = qword_1004943F0;
  if (!qword_1004943F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Player.CommandOptions);
  return result;
}

uint64_t sub_100188340(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100494230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s9MusicCore6PlayerC14CommandOptionsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;

  if ((static UUID.== infix(_:_:)() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Player.CommandOptions(0);
  v5 = v4[5];
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(*v6, v7, *v8, v9, 0), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    if (*(_QWORD *)(a1 + v4[6]) != *(_QWORD *)(a2 + v4[6])
      || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
    {
      return 0;
    }
    v13 = v4[8];
    v14 = *(void **)(a1 + v13);
    v15 = *(void **)(a2 + v13);
    if (v14)
    {
      if (v15)
      {
        sub_1000087DC(0, &qword_1004941B8, MPAVRoute_ptr);
        v16 = v15;
        v17 = v14;
        v18 = static NSObject.== infix(_:_:)(v17, v16);

        if ((v18 & 1) != 0)
          return 1;
      }
    }
    else if (!v15)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

_QWORD *sub_10018849C(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;

  result = _swiftEmptyArrayStorage;
  v20 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000244B0(v6, (uint64_t)v16);
      v7 = sub_100005574(&qword_100493120);
      v8 = sub_100005574(&qword_100494228);
      if (swift_dynamicCast(&v17, v16, v7, v8, 6))
      {
        v9 = *((_QWORD *)&v18 + 1);
        v10 = v19;
        sub_10000ABC8(&v17, *((uint64_t *)&v18 + 1));
        v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(a2, v9, v10);
        v12 = sub_10000682C(&v17);
        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
          v14 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v13 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v14 >= v13 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
          specialized Array._endMutation()(v15);
        }
      }
      else
      {
        v19 = 0;
        v17 = 0u;
        v18 = 0u;
        sub_100188340((uint64_t)&v17);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return (_QWORD *)v20;
  }
  return result;
}

_QWORD *sub_100188608(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v15[40];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19[2];
  _QWORD *v20;

  result = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1000244B0(v6, (uint64_t)v19);
      sub_1000244B0((uint64_t)v19, (uint64_t)v15);
      v11 = sub_100005574(&qword_100493120);
      v12 = sub_100005574(&qword_100494228);
      if (!swift_dynamicCast(&v16, v15, v11, v12, 6))
        break;
      v8 = *((_QWORD *)&v17 + 1);
      v9 = v18;
      sub_10000ABC8(&v16, *((uint64_t *)&v17 + 1));
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(a2, v8, v9);
      sub_10000682C(&v16);
      if (!v10)
        goto LABEL_8;

      sub_10000682C(v19);
LABEL_5:
      v6 += 40;
      if (!--v4)
        return v20;
    }
    v18 = 0;
    v16 = 0u;
    v17 = 0u;
    sub_100188340((uint64_t)&v16);
LABEL_8:
    sub_1000137C8(v19, (uint64_t)&v16);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      sub_100077350(0, v7[2] + 1, 1);
    v7 = v20;
    v14 = v20[2];
    v13 = v20[3];
    if (v14 >= v13 >> 1)
    {
      sub_100077350((_QWORD *)(v13 > 1), v14 + 1, 1);
      v7 = v20;
    }
    v7[2] = v14 + 1;
    sub_1000137C8(&v16, (uint64_t)&v7[5 * v14 + 4]);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1001887BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001887CC(uint64_t a1)
{
  uint64_t v1;

  sub_100187F0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001887D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001887E4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001887F0()
{
  unint64_t result;

  result = qword_100494308;
  if (!qword_100494308)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.PlaybackCommand, &type metadata for Player.PlaybackCommand);
    atomic_store(result, (unint64_t *)&qword_100494308);
  }
  return result;
}

uint64_t sub_100188834()
{
  return sub_100188A50(&qword_100494310, &qword_100494318);
}

unint64_t sub_10018885C()
{
  unint64_t result;

  result = qword_100494320;
  if (!qword_100494320)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ChangeCommand, &type metadata for Player.ChangeCommand);
    atomic_store(result, (unint64_t *)&qword_100494320);
  }
  return result;
}

uint64_t sub_1001888A0()
{
  return sub_100188A50(&qword_100494328, &qword_100494330);
}

unint64_t sub_1001888C8()
{
  unint64_t result;

  result = qword_100494338;
  if (!qword_100494338)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ShuffleCommand, &type metadata for Player.ShuffleCommand);
    atomic_store(result, (unint64_t *)&qword_100494338);
  }
  return result;
}

uint64_t sub_10018890C()
{
  return sub_100188A50(&qword_100494340, &qword_100494348);
}

unint64_t sub_100188934()
{
  unint64_t result;

  result = qword_100494350;
  if (!qword_100494350)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.FavoriteCommand, &type metadata for Player.FavoriteCommand);
    atomic_store(result, (unint64_t *)&qword_100494350);
  }
  return result;
}

unint64_t sub_10018897C()
{
  unint64_t result;

  result = qword_100494358;
  if (!qword_100494358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.RepeatCommand, &type metadata for Player.RepeatCommand);
    atomic_store(result, (unint64_t *)&qword_100494358);
  }
  return result;
}

uint64_t sub_1001889C0()
{
  return sub_100188A50(&qword_100494360, &qword_100494368);
}

unint64_t sub_1001889E8()
{
  unint64_t result;

  result = qword_100494370;
  if (!qword_100494370)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.QueueEndCommand, &type metadata for Player.QueueEndCommand);
    atomic_store(result, (unint64_t *)&qword_100494370);
  }
  return result;
}

uint64_t sub_100188A2C()
{
  return sub_100188A50(&qword_100494378, &qword_100494380);
}

uint64_t sub_100188A50(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100005600(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100188A94()
{
  unint64_t result;

  result = qword_100494388;
  if (!qword_100494388)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.InsertCommand.Location, &type metadata for Player.InsertCommand.Location);
    atomic_store(result, (unint64_t *)&qword_100494388);
  }
  return result;
}

unint64_t sub_100188ADC()
{
  unint64_t result;

  result = qword_100494390;
  if (!qword_100494390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Player.ClearCommand, &type metadata for Player.ClearCommand);
    atomic_store(result, (unint64_t *)&qword_100494390);
  }
  return result;
}

uint64_t _s13PlaybackErrorVwxx(_QWORD *a1)
{
  swift_errorRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

_QWORD *_s13PlaybackErrorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *_s13PlaybackErrorVwca(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  swift_errorRetain(*a2);
  v5 = *a1;
  *a1 = v4;
  swift_errorRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *_s13PlaybackErrorVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_errorRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for Player.PlaybackError()
{
  return &type metadata for Player.PlaybackError;
}

_QWORD *_s14CommandOptionsVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    v13 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v14 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v14;
    swift_bridgeObjectRetain();
    v15 = v14;
  }
  return a1;
}

void _s14CommandOptionsVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));

}

uint64_t _s14CommandOptionsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v13 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  swift_bridgeObjectRetain();
  v14 = v13;
  return a1;
}

uint64_t _s14CommandOptionsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t _s14CommandOptionsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t _s14CommandOptionsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[8];
  v15 = *(void **)(a1 + v14);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);

  return a1;
}

uint64_t _s14CommandOptionsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100188F94);
}

uint64_t sub_100188F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s14CommandOptionsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018902C);
}

uint64_t sub_10018902C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1001890A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10038F5E8;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_10038F600;
    v4[4] = &unk_10038F618;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.PlaybackCommand()
{
  return &type metadata for Player.PlaybackCommand;
}

uint64_t _s13ChangeCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_10018919C + 4 * byte_10038EC31[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001891D0 + 4 * byte_10038EC2C[v4]))();
}

uint64_t sub_1001891D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001891D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001891E0);
  return result;
}

uint64_t sub_1001891EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001891F4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001891F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100189200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ChangeCommand()
{
  return &type metadata for Player.ChangeCommand;
}

ValueMetadata *type metadata accessor for Player.ShuffleCommand()
{
  return &type metadata for Player.ShuffleCommand;
}

uint64_t _s14ShuffleCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100189280 + 4 * byte_10038EC3B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001892B4 + 4 * byte_10038EC36[v4]))();
}

uint64_t sub_1001892B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001892BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001892C4);
  return result;
}

uint64_t sub_1001892D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001892D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001892DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001892E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.FavoriteCommand()
{
  return &type metadata for Player.FavoriteCommand;
}

ValueMetadata *type metadata accessor for Player.RepeatCommand()
{
  return &type metadata for Player.RepeatCommand;
}

uint64_t _s15PlaybackCommandOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10018935C + 4 * byte_10038EC45[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100189390 + 4 * byte_10038EC40[v4]))();
}

uint64_t sub_100189390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100189398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001893A0);
  return result;
}

uint64_t sub_1001893AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001893B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001893B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001893C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.QueueEndCommand()
{
  return &type metadata for Player.QueueEndCommand;
}

_QWORD *_s13InsertCommandVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  v5 = v3;
  if ((unint64_t)v4 >= 4)
    v6 = v4;
  a1[1] = v4;
  return a1;
}

void _s13InsertCommandVwxx(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  if ((unint64_t)v2 >= 4)

}

uint64_t _s13InsertCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  if ((unint64_t)v7 >= 4)
  {
    if ((unint64_t)v8 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v8;
      v10 = v8;

      return a1;
    }

    v8 = *(void **)(a2 + 8);
    goto LABEL_6;
  }
  if ((unint64_t)v8 < 4)
  {
LABEL_6:
    *(_QWORD *)(a1 + 8) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;
  return a1;
}

uint64_t _s13InsertCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  unint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 8);
  v6 = a2[1];
  if ((unint64_t)v5 >= 4)
  {
    if (v6 >= 4)
    {
      *(_QWORD *)(a1 + 8) = v6;

      return a1;
    }

  }
  *(_QWORD *)(a1 + 8) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Player.InsertCommand()
{
  return &type metadata for Player.InsertCommand;
}

uint64_t _s13InsertCommandV8LocationOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t _s13InsertCommandV8LocationOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.InsertCommand.Location()
{
  return &type metadata for Player.InsertCommand.Location;
}

uint64_t _s12ClearCommandOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100189660 + 4 * byte_10038EC4F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100189694 + 4 * byte_10038EC4A[v4]))();
}

uint64_t sub_100189694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10018969C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001896A4);
  return result;
}

uint64_t sub_1001896B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001896B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001896BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001896C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Player.ClearCommand()
{
  return &type metadata for Player.ClearCommand;
}

_QWORD *_s14ReplaceCommandVwCP(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t _s14ReplaceCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t _s14ReplaceCommandVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for Player.ReplaceCommand()
{
  return &type metadata for Player.ReplaceCommand;
}

uint64_t _s11MoveCommandVwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

void _s11MoveCommandVwxx(id *a1)
{

}

uint64_t _s11MoveCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  char v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v10 = v7;

  return a1;
}

uint64_t _s11MoveCommandVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v5;

  return a1;
}

uint64_t _s11MoveCommandVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11MoveCommandVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.MoveCommand()
{
  return &type metadata for Player.MoveCommand;
}

ValueMetadata *type metadata accessor for Player.MoveCommand.Location()
{
  return &type metadata for Player.MoveCommand.Location;
}

ValueMetadata *type metadata accessor for Player.LeaveSessionCommand()
{
  return &type metadata for Player.LeaveSessionCommand;
}

uint64_t _s25BuildSharedSessionCommandVwCP(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain(v3);
  return a1;
}

double _s25BuildSharedSessionCommandVwxx(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

uint64_t _s25BuildSharedSessionCommandVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v8 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v9);
  return a1;
}

uint64_t _s25BuildSharedSessionCommandVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for Player.BuildSharedSessionCommand()
{
  return &type metadata for Player.BuildSharedSessionCommand;
}

ValueMetadata *type metadata accessor for Player.SeekCommand()
{
  return &type metadata for Player.SeekCommand;
}

ValueMetadata *type metadata accessor for Player.JumpCommand()
{
  return &type metadata for Player.JumpCommand;
}

uint64_t _s13VocalsCommandOwCP(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s13VocalsCommandOwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 6))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s13VocalsCommandOwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 6) = v3;
  return result;
}

uint64_t sub_100189AFC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100189B18(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    *(_BYTE *)(result + 5) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand()
{
  return &type metadata for Player.VocalsCommand;
}

ValueMetadata *type metadata accessor for Player.VocalsCommand.Prepare()
{
  return &type metadata for Player.VocalsCommand.Prepare;
}

uint64_t _s12CommandErrorOwxx(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
    return swift_bridgeObjectRelease();
  if (!v1)
    return sub_10000682C((_QWORD *)result);
  return result;
}

uint64_t _s12CommandErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t _s12CommandErrorOwca(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_10000682C((_QWORD *)a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
      swift_bridgeObjectRetain();
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s12CommandErrorOwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!v4)
    {
      sub_10000682C((_QWORD *)a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

ValueMetadata *_s12CommandErrorOMa()
{
  return &_s12CommandErrorON;
}

uint64_t SampleReceiver.waveforms()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = sub_100005574(&qword_100494458);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v3 = 1;
  (*(void (**)(_QWORD *, _QWORD))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:));
  v5 = sub_100005574(&qword_100494460);
  return AsyncStream.init(_:bufferingPolicy:_:)(v5, v3, sub_100189FDC, v0, v5);
}

double sub_100189E94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v2 = sub_100005574(&qword_100492D40);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10018A498();
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v10 = *(unsigned __int8 *)(v3 + 80);
  v11 = (v10 + 40) & ~v10;
  v12 = (char *)swift_allocObject(&unk_100451B20, v11 + v4, v10 | 7);
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v12[v11], (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  v13 = sub_1000C66A8((uint64_t)v7, (uint64_t)&unk_1004948F0, (uint64_t)v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_100189FDC(uint64_t a1)
{
  return sub_100189E94(a1);
}

uint64_t sub_100189FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v7 = sub_100005574(&qword_100492D38);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v5[8] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[10] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[11] = swift_task_alloc(v11);
  v5[12] = swift_task_alloc(v11);
  return swift_task_switch(sub_10018A080, a4, 0);
}

uint64_t sub_10018A080()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v2 = v0[11];
  v1 = v0[12];
  v3 = v0[8];
  v4 = v0[9];
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[5];
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[13] = v8;
  v8(v2, v1, v3);
  v9 = sub_100005574(&qword_100492D40);
  v0[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v5, v6, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  swift_beginAccess(v7 + 128, v0 + 2, 33, 0);
  sub_10014E1F8(v5, v2);
  swift_endAccess(v0 + 2);
  sub_10018A870();
  return swift_task_switch(sub_10018A178, 0, 0);
}

uint64_t sub_10018A178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 104))(v2, v3, v6);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = swift_allocObject(&unk_100451B48, v9 + v4, v8 | 7);
  *(_QWORD *)(v10 + 16) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v9, v2, v6);
  swift_retain(v7);
  AsyncStream.Continuation.onTermination.setter(sub_10018C224, v10, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10018A268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_100451B70, v13 + v7, v12 | 7);
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v14[v13], (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain(a2);
  v15 = sub_1000C66A8((uint64_t)v10, (uint64_t)&unk_100494908, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10018A3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v7 = sub_100005574(&qword_100492D38);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10018A40C, a4, 0);
}

uint64_t sub_10018A40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(*(_QWORD *)(v0 + 40) + 128, v0 + 16, 33, 0);
  sub_1001810D0(v1, v2);
  sub_10018C374(v2);
  swift_endAccess(v0 + 16);
  sub_10018A870();
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *sub_10018A498()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v3 = sub_10018AFB8();
    v4 = sub_10018AF40();
    v5 = *(_QWORD *)(v4 + 104);
    swift_release(v4);
    v6 = type metadata accessor for SampleReceiver.ContinuationStorage();
    v2 = (_QWORD *)swift_allocObject(v6, 144, 15);
    swift_defaultActor_initialize(v2);
    v2[16] = &_swiftEmptyDictionarySingleton;
    v2[17] = 0;
    v2[14] = v3;
    v2[15] = v5;
    v7 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v2;
    swift_retain(v2);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t sub_10018A52C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[6] = a1;
  v2[7] = v1;
  v3 = sub_100005574((uint64_t *)&unk_1004948C0);
  v2[8] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[9] = v4;
  v2[10] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_100492D40);
  v2[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[12] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v7);
  v2[14] = swift_task_alloc(v7);
  return swift_task_switch(sub_10018A5CC, v1, 0);
}

uint64_t sub_10018A5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  swift_beginAccess(v2 + 128, v0 + 16, 0, 0);
  v28 = v2;
  v3 = *(_QWORD *)(v2 + 128);
  v25 = v3 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v3 + 64);
  v26 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v14, *(_QWORD *)(v3 + 56) + *(_QWORD *)(v1 + 72) * i, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v15, v14, v16);
    v17 = *(void **)(v28 + 136);
    if (!v17)
      goto LABEL_26;
    v18 = v17;
    if (!objc_msgSend(v18, "isEnabled"))
    {

LABEL_26:
      (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
LABEL_27:
      swift_release(v3);
      v23 = *(_QWORD *)(v0 + 104);
      v24 = *(_QWORD *)(v0 + 80);
      swift_task_dealloc(*(_QWORD *)(v0 + 112));
      swift_task_dealloc(v23);
      swift_task_dealloc(v24);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v19 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 88);
    v22 = *(_QWORD *)(v0 + 64);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    AsyncStream.Continuation.yield(_:)(v0 + 40, v20);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v22);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v19, v20);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v26)
        goto LABEL_27;
      v12 = *(_QWORD *)(v25 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v26)
          goto LABEL_27;
        v12 = *(_QWORD *)(v25 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v26)
            goto LABEL_27;
          v12 = *(_QWORD *)(v25 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    goto LABEL_27;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v26)
      goto LABEL_27;
    v12 = *(_QWORD *)(v25 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_10018A870()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  id v16;
  NSObject *v17;
  id v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE v21[24];

  v1 = v0;
  swift_beginAccess(v0 + 16, v21, 0, 0);
  v3 = *(_QWORD *)(v0[16] + 16);
  if (qword_10048C890 != -1)
    swift_once(&qword_10048C890, sub_10018BCEC);
  v4 = type metadata accessor for Logger(0, v2);
  sub_1000086B4(v4, (uint64_t)qword_100494440);
  v5 = swift_retain(v0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    *(_QWORD *)(v8 + 4) = *(_QWORD *)(v1[16] + 16);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SampleReceiver continuation count %ld", (uint8_t *)v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

    v9 = (void *)v1[17];
    if (v3)
    {
LABEL_5:
      if (v9)
      {
        v10 = v9;
        v11 = v9;
      }
      else
      {
        v16 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v1[15]);
        v11 = objc_msgSend(objc_allocWithZone((Class)MPCProcessAudioTap), "initWithRefreshRate:delegate:", v16, v1[14]);

        v10 = 0;
        v9 = (void *)v1[17];
      }
      v1[17] = v11;
      v17 = v11;
      v18 = v10;
      sub_10018AB7C(v9);

      -[NSObject setEnabled:](v17, "setEnabled:", 1);
      v15 = Logger.logObject.getter(-[NSObject start](v17, "start"));
      v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v19, "SampleReceiver audio tap active", v20, 2u);
        swift_slowDealloc(v20, -1, -1);

      }
      else
      {

        v15 = v17;
      }
      goto LABEL_15;
    }
  }
  else
  {

    swift_release(v1);
    v9 = (void *)v1[17];
    if (v3)
      goto LABEL_5;
  }
  v12 = Logger.logObject.getter(objc_msgSend(v9, "stop"));
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SampleReceiver audio tap inactive", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = v1[17];
  v1[17] = 0;
  sub_10018AB7C(v15);
LABEL_15:

}

void sub_10018AB7C(void *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  NSObject *oslog;

  v3 = *(void **)(v1 + 136);
  if (v3)
  {
    if (!a1)
      goto LABEL_5;
    v4 = v1;
    sub_10018C3B4();
    v5 = a1;
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

    if ((v7 & 1) == 0)
    {
      v3 = *(void **)(v4 + 136);
      if (v3)
      {
LABEL_5:
        v8 = qword_10048C890;
        v10 = v3;
        if (v8 != -1)
          swift_once(&qword_10048C890, sub_10018BCEC);
        v11 = type metadata accessor for Logger(0, v9);
        sub_1000086B4(v11, (uint64_t)qword_100494440);
        v12 = v10;
        oslog = Logger.logObject.getter(v12);
        v13 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v13))
        {
          v14 = swift_slowAlloc(12, -1);
          v15 = (_QWORD *)swift_slowAlloc(8, -1);
          *(_DWORD *)v14 = 138412290;
          *(_QWORD *)(v14 + 4) = v12;
          *v15 = v3;
          _os_log_impl((void *)&_mh_execute_header, oslog, v13, "Audio tap created: %@", (uint8_t *)v14, 0xCu);
          v16 = sub_100005574(&qword_100494910);
          swift_arrayDestroy(v15, 1, v16);
          swift_slowDealloc(v15, -1, -1);
          v17 = v14;
LABEL_15:
          swift_slowDealloc(v17, -1, -1);
LABEL_18:

          return;
        }
        goto LABEL_17;
      }
LABEL_11:
      v18 = qword_10048C890;
      v20 = v5;
      if (v18 != -1)
        swift_once(&qword_10048C890, sub_10018BCEC);
      v21 = type metadata accessor for Logger(0, v19);
      sub_1000086B4(v21, (uint64_t)qword_100494440);
      v12 = v20;
      oslog = Logger.logObject.getter(v12);
      v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(oslog, v22))
      {
        v23 = swift_slowAlloc(12, -1);
        v24 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v23 = 138412290;
        *(_QWORD *)(v23 + 4) = v12;
        *v24 = a1;
        _os_log_impl((void *)&_mh_execute_header, oslog, v22, "Audio tap destroyed: %@", (uint8_t *)v23, 0xCu);
        v25 = sub_100005574(&qword_100494910);
        swift_arrayDestroy(v24, 1, v25);
        swift_slowDealloc(v24, -1, -1);
        v17 = v23;
        goto LABEL_15;
      }
LABEL_17:

      oslog = v12;
      goto LABEL_18;
    }
  }
  else if (a1)
  {
    v5 = a1;
    goto LABEL_11;
  }
}

uint64_t sub_10018AE34()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10018AE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch(sub_10018AE80, 0, 0);
}

uint64_t sub_10018AE80()
{
  uint64_t *v0;
  uint64_t **v1;

  v0[4] = (uint64_t)sub_10018A498();
  v1 = (uint64_t **)swift_task_alloc(dword_10049459C);
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = (uint64_t *)sub_10018AEDC;
  return sub_10018A52C(v0[3]);
}

uint64_t sub_10018AEDC()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v4 + 8))(v2);
}

void *SampleReceiver.sampleRate.unsafeMutableAddressor()
{
  return &static SampleReceiver.sampleRate;
}

uint64_t static SampleReceiver.sampleRate.getter()
{
  return 48000;
}

uint64_t sub_10018AF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v3 = v0;
    v4 = type metadata accessor for SampleReceiver.SampleTransformer();
    v2 = swift_allocObject(v4, 112, 7);
    sub_10018B3C4(48000, 15);
    v5 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = v2;
    swift_retain(v2);
    swift_release(v5);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

id sub_10018AFB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  objc_super v10;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = (objc_class *)type metadata accessor for SampleReceiver.TapDelegate();
    v4 = (char *)objc_allocWithZone(v3);
    v5 = swift_weakInit(&v4[OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver], 0);
    swift_weakAssign(v5, v0);
    v10.receiver = v4;
    v10.super_class = v3;
    v6 = objc_msgSendSuper2(&v10, "init");
    v7 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v6;
    v2 = v6;

    v1 = 0;
  }
  v8 = v1;
  return v2;
}

double sub_10018B050(_QWORD *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  char *v14;
  char v15;
  char *v16;
  char v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _BYTE v26[24];
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v5 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong(v2 + OBJC_IVAR____TtCC9MusicCore14SampleReceiver11TapDelegate_receiver);
  if (Strong)
  {
    v10 = Strong;
    if (a2)
    {
      v11 = (_QWORD *)sub_10018AF40();
      swift_beginAccess(v11 + 3, v29, 33, 0);
      v12 = (char *)v11[3];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      v11[3] = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v12 = sub_1001B712C((uint64_t)v12);
        v11[3] = v12;
      }
      swift_beginAccess(v11 + 4, v28, 33, 0);
      v14 = (char *)v11[4];
      v15 = swift_isUniquelyReferenced_nonNull_native(v14);
      v11[4] = v14;
      if ((v15 & 1) == 0)
      {
        v14 = sub_1001B712C((uint64_t)v14);
        v11[4] = v14;
      }
      swift_beginAccess(v11 + 5, v27, 33, 0);
      v16 = (char *)v11[5];
      v17 = swift_isUniquelyReferenced_nonNull_native(v16);
      v11[5] = v16;
      if ((v17 & 1) == 0)
      {
        v16 = sub_1001B712C((uint64_t)v16);
        v11[5] = v16;
      }
      swift_beginAccess(v11 + 6, v26, 33, 0);
      v18 = (char *)v11[6];
      v19 = swift_isUniquelyReferenced_nonNull_native(v18);
      v11[6] = v18;
      if ((v19 & 1) == 0)
      {
        v18 = sub_1001B712C((uint64_t)v18);
        v11[6] = v18;
      }
      sub_10018B768((float *)v12 + 8, (float *)v14 + 8, (float *)v16 + 8, (float *)v18 + 8, a2, (uint64_t)v11, a1, &v25);
      v20 = v25;
      v11[6] = v18;
      swift_endAccess(v26);
      v11[5] = v16;
      swift_endAccess(v27);
      v11[4] = v14;
      swift_endAccess(v28);
      v11[3] = v12;
      swift_endAccess(v29);
      swift_release(v11);
      v21 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
      v22 = (_QWORD *)swift_allocObject(&unk_100451AF8, 48, 7);
      v22[2] = 0;
      v22[3] = 0;
      v22[4] = v10;
      v22[5] = v20;
      swift_retain(v10);
      v23 = sub_1000C66A8((uint64_t)v7, (uint64_t)&unk_1004948B8, (uint64_t)v22);
      swift_release(v23);
      *(_QWORD *)&result = swift_release(v10).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
    }
  }
  return result;
}

id sub_10018B384()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SampleReceiver.TapDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10018B3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  float v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for vDSP.Radix(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for vDSP.WindowSequence(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  v14 = log2f(ceilf((float)a1 / (float)a2));
  if ((~LODWORD(v14) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v14 <= -1.0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v14 >= 1.8447e19)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v15 = (unint64_t)v14;
  if ((unint64_t)v14 >= 0x40)
    v16 = 0;
  else
    v16 = 1 << (unint64_t)v14;
  if (v16 >= 0)
    v17 = v16;
  else
    v17 = v16 + 1;
  if (v16 < -1)
    goto LABEL_20;
  v36 = v7;
  v37 = v6;
  v18 = v17 >> 1;
  if ((unint64_t)v16 >= 2)
  {
    v20 = static Array._allocateBufferUninitialized(minimumCapacity:)(v17 >> 1, &type metadata for Float);
    v35 = v9;
    v21 = v20;
    *(_QWORD *)(v20 + 16) = v18;
    bzero((void *)(v20 + 32), 4 * v18);
    *(_QWORD *)(v3 + 16) = v21;
    v22 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v22 + 16) = v18;
    bzero((void *)(v22 + 32), 4 * v18);
    *(_QWORD *)(v3 + 24) = v22;
    v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v23 + 16) = v18;
    bzero((void *)(v23 + 32), 4 * v18);
    *(_QWORD *)(v3 + 32) = v23;
    v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v24 + 16) = v18;
    bzero((void *)(v24 + 32), 4 * v18);
    *(_QWORD *)(v3 + 40) = v24;
    v25 = static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    *(_QWORD *)(v25 + 16) = v18;
    bzero((void *)(v25 + 32), 4 * v18);
    *(_QWORD *)(v3 + 48) = v25;
    v9 = v35;
    v19 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v18, &type metadata for Float);
    v19[2] = v18;
    bzero(v19 + 4, 4 * v18);
  }
  else
  {
    v19 = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 16) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 32) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 40) = _swiftEmptyArrayStorage;
    *(_QWORD *)(v3 + 48) = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)(v3 + 56) = v19;
  *(float *)(v3 + 64) = 2.0 / (float)v18;
  v26 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for vDSP.WindowSequence.hanningDenormalized(_:), v10);
  if ((unint64_t)v16 < 2)
    goto LABEL_21;
  __chkstk_darwin(v26);
  *(&v35 - 4) = v13;
  *((_BYTE *)&v35 - 24) = 0;
  v34 = v18;
  v27 = sub_10018BE00(v18, (uint64_t (*)(_QWORD *, uint64_t *))sub_10018BFD0);
  v28 = sub_1001AD068(v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)(v3 + 72) = v18;
  *(_QWORD *)(v3 + 80) = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v9, enum case for vDSP.Radix.radix2(_:), v37);
  type metadata accessor for DSPSplitComplex(0);
  v30 = v29;
  v31 = sub_100005574(&qword_1004948D0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = vDSP.FFT.init(log2n:radix:ofType:)(v15, v9, v30);
  if (v32)
  {
    *(_QWORD *)(v3 + 88) = v32;
    return v3;
  }
LABEL_22:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001003B42B0, "MusicCore/SampleReceiver.swift", 30, 2, 177, 0);
  __break(1u);
  return result;
}

uint64_t sub_10018B768@<X0>(float *a1@<X0>, float *a2@<X1>, float *a3@<X2>, float *a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X6>, char **a8@<X8>)
{
  float v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  const DSPComplex *v15;
  vDSP_Length v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  float __B;
  DSPSplitComplex v24;
  DSPSplitComplex __Z;
  _BYTE v26[24];

  v9 = (char *)a6;
  v11 = *(_QWORD *)(a6 + 72);
  __Z.realp = a1;
  __Z.imagp = a2;
  if (v11 >= a5)
    v12 = a5;
  else
    v12 = v11;
  v24.realp = a3;
  v24.imagp = a4;
  sub_10018B92C(a7, v12, a6);
  swift_beginAccess(v9 + 16, v26, 0, 0);
  v13 = *((_QWORD *)v9 + 2);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 >> 61)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = (const DSPComplex *)sub_1000F29E4((const void *)(v13 + 32), v14 >> 1);
  v16 = (vDSP_Length)v15[2];
  swift_bridgeObjectRetain();
  vDSP_ctoz(v15 + 4, 2, &__Z, 1, v16);
  swift_bridgeObjectRelease();
  v17 = swift_release(v15);
  dispatch thunk of vDSP.FFT.forward(input:output:)(__Z.realp, __Z.imagp, &v24, v17);
  swift_retain(v9);
  v18 = (char *)sub_10018BEF8(v11, (uint64_t)v9, &v24);
  swift_release(v9);
  *a8 = v18;
  v19 = swift_bridgeObjectRetain();
  sub_10018BAE4(v19, a8);
  swift_bridgeObjectRelease();
  v8 = *((float *)v9 + 16);
  v9 = *a8;
  v11 = *((_QWORD *)*a8 + 2);
  v20 = swift_bridgeObjectRetain();
  v21 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
LABEL_8:
    v21 = sub_1001B712C((uint64_t)v9);
  __B = v8;
  vDSP_vsmul((const float *)v9 + 8, 1, &__B, (float *)v21 + 8, 1, v11);
  *a8 = v21;
  return swift_bridgeObjectRelease();
}

_QWORD *sub_10018B92C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  _BYTE v12[24];

  v3 = *(_QWORD *)(a3 + 72);
  if (v3 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3)
  {
    v6 = result;
    result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(*(_QWORD *)(a3 + 72), &type metadata for Float);
    v7 = result;
    result[2] = v3;
    v8 = result + 4;
    if (a2)
    {
      if (v3 < a2)
        a2 = v3;
      result = memcpy(result + 4, v6, 4 * a2);
    }
  }
  else
  {
    a2 = 0;
    v7 = _swiftEmptyArrayStorage;
    v8 = &_swiftEmptyArrayStorage[4];
  }
  v9 = v3 - a2;
  if (__OFSUB__(v3, a2))
    goto LABEL_14;
  if (v9 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  if (v9)
    bzero((char *)v8 + 4 * a2, 4 * v9);
  v7[2] = v3;
  v10 = *(_QWORD *)(a3 + 80);
  v11 = (char **)(a3 + 16);
  swift_beginAccess(v11, v12, 33, 0);
  swift_bridgeObjectRetain();
  sub_10018BA48((uint64_t)v7, v10, v11);
  swift_endAccess(v12);
  swift_bridgeObjectRelease();
  return (_QWORD *)swift_bridgeObjectRelease();
}

void sub_10018BA48(uint64_t a1, uint64_t a2, char **a3)
{
  char **v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  vDSP_Length v7;

  v6 = *a3;
  v7 = *((_QWORD *)*a3 + 2);
  if (*(_QWORD *)(a1 + 16) != v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = a2;
  if (*(_QWORD *)(a2 + 16) != v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v3 = a3;
  v5 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a3) & 1) == 0)
LABEL_7:
    v6 = sub_1001B712C((uint64_t)v6);
  vDSP_vmul((const float *)(v5 + 32), 1, (const float *)(v4 + 32), 1, (float *)v6 + 8, 1, v7);
  *v3 = v6;
}

void sub_10018BAE4(uint64_t a1, char **a2)
{
  char **v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  int v6;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  if (v4 != *((_QWORD *)*a2 + 2))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >> 31)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = a2;
  v3 = a1;
  v6 = *(_QWORD *)(a1 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
LABEL_7:
    v5 = sub_1001B712C((uint64_t)v5);
  vvsqrtf((float *)v5 + 8, (const float *)(v3 + 32), &v6);
  *v2 = v5;
}

_QWORD *sub_10018BB98()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  swift_release(v0[11]);
  return v0;
}

uint64_t sub_10018BBEC()
{
  uint64_t v0;

  sub_10018BB98();
  return swift_deallocClassInstance(v0, 112, 7);
}

uint64_t SampleReceiver.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return v0;
}

uint64_t SampleReceiver.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SampleReceiver()
{
  return objc_opt_self(_TtC9MusicCore14SampleReceiver);
}

uint64_t type metadata accessor for SampleReceiver.ContinuationStorage()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiverP33_F0C6F7CB2C0209FEAE1767B4D841EDD119ContinuationStorage);
}

uint64_t type metadata accessor for SampleReceiver.TapDelegate()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver11TapDelegate);
}

uint64_t type metadata accessor for SampleReceiver.SampleTransformer()
{
  return objc_opt_self(_TtCC9MusicCore14SampleReceiver17SampleTransformer);
}

uint64_t sub_10018BCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100494440);
  sub_1000086B4(v2, (uint64_t)qword_100494440);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x6552656C706D6153, 0xEE00726576696563);
}

uint64_t sub_10018BD6C()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10018BDA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_1004948B4);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000EA88;
  *(_OWORD *)(v2 + 16) = v3;
  return swift_task_switch(sub_10018AE80, 0, 0);
}

uint64_t sub_10018BE00(uint64_t result, uint64_t (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  _QWORD v7[2];
  uint64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = result;
  if (result)
  {
    v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(result, &type metadata for Float);
    v5[2] = v4;
  }
  else
  {
    v5 = &_swiftEmptyArrayStorage;
  }
  v6 = (char *)(v5 + 4);
  v7[1] = v4;
  v8 = 0;
  v7[0] = v5 + 4;
  result = a2(v7, &v8);
  if (v2)
  {
    if (v8 <= v4)
    {
      if (!v7[0])
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      if (v6 == (char *)v7[0])
      {
        v5[2] = v8;
        swift_bridgeObjectRelease(v5);
        return (uint64_t)v5;
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8 > v4)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7[0])
  {
    if (v6 == (char *)v7[0])
    {
      v5[2] = v8;
      return (uint64_t)v5;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

