void *sub_10018BEF8(int64_t a1, uint64_t a2, DSPSplitComplex *a3)
{
  void *v6;
  int64_t v7;
  DSPSplitComplex v9;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a1)
  {
    v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, &type metadata for Float);
    *((_QWORD *)v6 + 2) = a1;
  }
  else
  {
    v6 = &_swiftEmptyArrayStorage;
  }
  v7 = *(_QWORD *)(a2 + 72);
  v9 = *a3;
  vDSP_zvmags(&v9, 1, (float *)v6 + 8, 1, a1);
  if (v7 > a1)
LABEL_8:
    __break(1u);
  *((_QWORD *)v6 + 2) = v7;
  return v6;
}

uint64_t sub_10018BFD0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = sub_100005574(&qword_1004948D8);
  v9 = sub_10018C04C();
  result = static vDSP.formWindow<A>(usingSequence:result:isHalfWindow:)(v5, a1, v6, v8, v9);
  *a2 = v7;
  return result;
}

unint64_t sub_10018C04C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004948E0;
  if (!qword_1004948E0)
  {
    v1 = sub_100005600(&qword_1004948D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for UnsafeMutableBufferPointer<A>, v1);
    atomic_store(result, &qword_1004948E0);
  }
  return result;
}

uint64_t sub_10018C098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_100005574(&qword_100492D40);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10018C118(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_100492D40) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1004948EC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return sub_100189FE4(a1, v5, v6, v7, v8);
}

uint64_t sub_10018C1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

double sub_10018C224(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_10018A268(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10018C264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10018C2E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_100494904);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return sub_10018A3AC(a1, v5, v6, v7, v8);
}

uint64_t sub_10018C374(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100492D38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10018C3B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100494918;
  if (!qword_100494918)
  {
    v1 = objc_opt_self(MPCProcessAudioTap);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100494918);
  }
  return result;
}

id SequentialVocalCommandsFilter.playbackController.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t SequentialVocalCommandsFilter.__allocating_init(playbackController:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 135, 15);
  swift_defaultActor_initialize();
  *(_WORD *)(v3 + 124) = 0;
  *(_DWORD *)(v3 + 120) = 0;
  *(_BYTE *)(v3 + 126) = 1;
  *(_WORD *)(v3 + 132) = 0;
  *(_DWORD *)(v3 + 128) = 0;
  *(_BYTE *)(v3 + 134) = 1;
  *(_QWORD *)(v3 + 112) = a1;
  return v3;
}

uint64_t SequentialVocalCommandsFilter.init(playbackController:)(uint64_t a1)
{
  uint64_t v1;

  swift_defaultActor_initialize(v1);
  *(_WORD *)(v1 + 124) = 0;
  *(_DWORD *)(v1 + 120) = 0;
  *(_BYTE *)(v1 + 126) = 1;
  *(_WORD *)(v1 + 132) = 0;
  *(_DWORD *)(v1 + 128) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  *(_QWORD *)(v1 + 112) = a1;
  return v1;
}

unint64_t SequentialVocalCommandsFilter.queuedCommand.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 120, v2, 0, 0);
  return *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 126) << 48);
}

double SequentialVocalCommandsFilter.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  double result;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  NSObject *oslog;
  uint64_t v43;
  uint64_t v44[3];

  v3 = v2;
  if (qword_10048C898 != -1)
    swift_once(&qword_10048C898, sub_10018D27C);
  v5 = a1 & 0x10000000000;
  v6 = type metadata accessor for Logger(0, a2);
  v7 = sub_1000086B4(v6, (uint64_t)qword_100494920);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v44[0] = v11;
    *(_DWORD *)v10 = 136446210;
    LOBYTE(v43) = v5 != 0;
    v12 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v5 != 0) << 40));
    *(_QWORD *)(v10 + 4) = sub_100019400(v12, v13, v44);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "↪️ Queuing %{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  if ((*(_BYTE *)(v2 + 134) & 1) == 0)
  {
    v15 = *(unsigned int *)(v2 + 128) | ((unint64_t)*(unsigned __int16 *)(v2 + 132) << 32);
    if (v5)
    {
      if ((v15 & 0x10000000000) != 0)
        goto LABEL_8;
    }
    else if ((v15 & 0x10000000000) == 0)
    {
      if ((a1 & 0x100000000) != 0)
      {
        if ((v15 & 0x100000000) != 0)
          goto LABEL_8;
      }
      else if ((v15 & 0x100000000) == 0 && *(float *)&a1 == *(float *)(v2 + 128))
      {
LABEL_8:
        oslog = Logger.logObject.getter(v14);
        v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(oslog, v16))
        {
          v17 = swift_slowAlloc(12, -1);
          v18 = swift_slowAlloc(32, -1);
          v44[0] = v18;
          *(_DWORD *)v17 = 136446210;
          LOBYTE(v43) = v5 != 0;
          v19 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v5 != 0) << 40));
          *(_QWORD *)(v17 + 4) = sub_100019400(v19, v20, v44);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, oslog, v16, "↪️❌ Ignored %{public}s; already executing.",
            (uint8_t *)v17,
            0xCu);
          swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v18, -1, -1);
          swift_slowDealloc(v17, -1, -1);
        }

        return result;
      }
    }
  }
  swift_beginAccess(v2 + 120, v44, 1, 0);
  if ((*(_BYTE *)(v2 + 126) & 1) != 0)
    goto LABEL_33;
  v23 = *(unsigned int *)(v2 + 120) | ((unint64_t)*(unsigned __int16 *)(v2 + 124) << 32);
  if ((v23 & 0x10000000000) == 0)
  {
    if (!v5)
    {
      if ((v23 & 0x100000000) == 0)
      {
        if ((a1 & 0x100000000) != 0 || *(float *)(v2 + 120) != *(float *)&a1)
          goto LABEL_30;
        goto LABEL_26;
      }
      if ((a1 & 0x100000000) != 0)
        goto LABEL_26;
    }
LABEL_30:
    v30 = Logger.logObject.getter(v22);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v43 = v33;
      *(_DWORD *)v32 = 136446210;
      v34 = (char *)Player.VocalsCommand.description.getter(v23 & 0xFFFFFFFFFFLL | (((v23 >> 40) & 1) << 40));
      *(_QWORD *)(v32 + 4) = sub_100019400(v34, v35, &v43);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "↪️🫳 Dropping queued command %{public}s", (uint8_t *)v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }

LABEL_33:
    v36 = Logger.logObject.getter(v22);
    v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc(12, -1);
      v39 = swift_slowAlloc(32, -1);
      v43 = v39;
      *(_DWORD *)v38 = 136446210;
      v40 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v5 != 0) << 40));
      *(_QWORD *)(v38 + 4) = sub_100019400(v40, v41, &v43);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "↪️✅ Queued %{public}s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v38, -1, -1);
    }

    *(_DWORD *)(v3 + 120) = a1;
    *(_WORD *)(v3 + 124) = (a1 & 0x1FFFFFFFFFFuLL) >> 32;
    *(_BYTE *)(v3 + 126) = 0;
    return sub_10018CDB0();
  }
  if (!v5)
    goto LABEL_30;
LABEL_26:
  v24 = Logger.logObject.getter(v22);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v43 = v27;
    *(_DWORD *)v26 = 136446210;
    v28 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | ((unint64_t)(v5 != 0) << 40));
    *(_QWORD *)(v26 + 4) = sub_100019400(v28, v29, &v43);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "↪️❌ Ignored %{public}s; Already enqueued.",
      (uint8_t *)v26,
      0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }

  return result;
}

uint64_t sub_10018CAC0(unint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  float *v16;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v28;
  uint64_t v29[4];

  v4 = v3;
  if ((*(_BYTE *)(v3 + 134) & 1) == 0)
  {
    v15 = *(unsigned int *)(v3 + 128) | ((unint64_t)*(unsigned __int16 *)(v3 + 132) << 32);
    v16 = (float *)(v3 + 120);
    v18 = swift_beginAccess(v4 + 120, v29, 1, 0);
    if ((*(_BYTE *)(v4 + 126) & 1) == 0)
    {
      v19 = *(unsigned int *)v16 | ((unint64_t)*(unsigned __int16 *)(v4 + 124) << 32);
      if ((v15 & 0x10000000000) == 0)
      {
        if ((v19 & 0x10000000000) != 0)
          goto LABEL_17;
        if ((v15 & 0x100000000) != 0)
        {
          if ((v19 & 0x100000000) == 0)
            goto LABEL_17;
        }
        else
        {
          if ((v19 & 0x100000000) != 0)
            goto LABEL_17;
          v18.n128_u32[0] = v15;
          if (*(float *)&v15 != *v16)
            goto LABEL_17;
        }
        goto LABEL_10;
      }
      if ((v19 & 0x10000000000) != 0)
      {
LABEL_10:
        *(_WORD *)(v4 + 124) = 0;
        *(_DWORD *)(v4 + 120) = 0;
        *(_BYTE *)(v4 + 126) = 1;
        sub_10018CDB0(v18);
      }
    }
LABEL_17:
    if (qword_10048C898 != -1)
      swift_once(&qword_10048C898, sub_10018D27C);
    v20 = type metadata accessor for Logger(0, v17);
    v21 = sub_1000086B4(v20, (uint64_t)qword_100494920);
    v8 = Logger.logObject.getter(v21);
    v22 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v8, v22))
      goto LABEL_22;
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v28 = v24;
    *(_DWORD *)v23 = 136446210;
    v25 = (char *)Player.VocalsCommand.description.getter(v15 & 0xFFFFFFFFFFLL | (((v15 >> 40) & 1) << 40));
    *(_QWORD *)(v23 + 4) = sub_100019400(v25, v26, &v28);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v22, "▶️ Executing %{public}s", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v14 = v23;
    goto LABEL_21;
  }
  if ((a1 & 0x1000000000000) == 0)
  {
    if (qword_10048C898 != -1)
      swift_once(&qword_10048C898, sub_10018D27C);
    v6 = type metadata accessor for Logger(0, a2);
    v7 = sub_1000086B4(v6, (uint64_t)qword_100494920);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_22;
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v29[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = (char *)Player.VocalsCommand.description.getter(a1 & 0xFFFFFFFFFFLL | (((a1 >> 40) & 1) << 40));
    *(_QWORD *)(v10 + 4) = sub_100019400(v12, v13, v29);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "✅ Finished executing %{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    v14 = v10;
LABEL_21:
    swift_slowDealloc(v14, -1, -1);
LABEL_22:

  }
  return sub_10018CDB0(a3);
}

double sub_10018CDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v1 = v0;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 134) == 1)
  {
    *(_QWORD *)&result = swift_beginAccess(v0 + 120, v28, 0, 0).n128_u64[0];
    if ((*(_BYTE *)(v0 + 126) & 1) == 0)
    {
      v7 = *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int16 *)(v0 + 124) << 32);
      v8 = *(_WORD *)(v0 + 124);
      if (qword_10048C898 != -1)
        swift_once(&qword_10048C898, sub_10018D27C);
      v9 = type metadata accessor for Logger(0, v6);
      v10 = sub_1000086B4(v9, (uint64_t)qword_100494920);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter();
      v13 = (v7 >> 40) & 1;
      if (os_log_type_enabled(v11, v12))
      {
        v14 = swift_slowAlloc(12, -1);
        v15 = swift_slowAlloc(32, -1);
        v27 = v15;
        *(_DWORD *)v14 = 136446210;
        v16 = (char *)Player.VocalsCommand.description.getter(v7 & 0xFFFFFFFFFFLL | (v13 << 40));
        *(_QWORD *)(v14 + 4) = sub_100019400(v16, v17, &v27);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "↪️ Dequeuing %{public}s", (uint8_t *)v14, 0xCu);
        swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v15, -1, -1);
        swift_slowDealloc(v14, -1, -1);
      }

      v18 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
      v19 = *(_BYTE *)(v1 + 134);
      *(_DWORD *)(v1 + 128) = v7;
      *(_WORD *)(v1 + 132) = WORD2(v7);
      *(_BYTE *)(v1 + 134) = 0;
      LOBYTE(v27) = v19;
      sub_10018CAC0(v18 | ((unint64_t)v19 << 48), v20, v21);
      v22 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
      v23 = sub_10018D3C8();
      v24 = swift_allocObject(&unk_100451BC0, 46, 7);
      *(_QWORD *)(v24 + 16) = v1;
      *(_QWORD *)(v24 + 24) = v23;
      *(_QWORD *)(v24 + 32) = v1;
      *(_BYTE *)(v24 + 44) = v8;
      *(_DWORD *)(v24 + 40) = v7;
      *(_BYTE *)(v24 + 45) = v13;
      swift_retain_n(v1, 2);
      v25 = sub_1000C66A8((uint64_t)v5, (uint64_t)&unk_100494A40, v24);
      *(_QWORD *)&result = swift_release(v25).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_10018D038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch(sub_10018D050, a4, 0);
}

uint64_t sub_10018D050()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 40) = &type metadata for Player.VocalsCommand;
  *(_QWORD *)(v0 + 48) = &protocol witness table for Player.VocalsCommand;
  *(_DWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 20) = BYTE4(v1);
  *(_BYTE *)(v0 + 21) = BYTE5(v1) & 1;
  v2 = (_QWORD *)swift_task_alloc(dword_1004930DC);
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_10018D0DC;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 16, 0x10000, 0, 0);
}

uint64_t sub_10018D0DC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v4 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 72));
  if (v1)
  {
    v5 = *(_QWORD *)(v4 + 56);
    swift_errorRelease(v1);
    v6 = sub_10018D1CC;
    v7 = v5;
  }
  else
  {
    v8 = (_QWORD *)(v4 + 16);
    v9 = *(_QWORD *)(v4 + 56);

    sub_10000682C(v8);
    v6 = sub_10018D16C;
    v7 = v9;
  }
  return swift_task_switch(v6, v7, 0);
}

uint64_t sub_10018D16C(__n128 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;

  v4 = *(_QWORD *)(v3 + 56);
  v5 = *(unsigned int *)(v4 + 128) | ((unint64_t)*(unsigned __int16 *)(v4 + 132) << 32);
  v6 = *(_BYTE *)(v4 + 134);
  *(_DWORD *)(v4 + 128) = 0;
  *(_WORD *)(v4 + 132) = 0;
  *(_BYTE *)(v4 + 134) = 1;
  sub_10018CAC0(v5 | ((unint64_t)v6 << 48), a3, a1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10018D1CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  __n128 v5;

  sub_10000682C((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(unsigned int *)(v1 + 128) | ((unint64_t)*(unsigned __int16 *)(v1 + 132) << 32);
  v3 = *(_BYTE *)(v1 + 134);
  *(_DWORD *)(v1 + 128) = 0;
  *(_WORD *)(v1 + 132) = 0;
  *(_BYTE *)(v1 + 134) = 1;
  sub_10018CAC0(v2 | ((unint64_t)v3 << 48), v4, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SequentialVocalCommandsFilter.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t SequentialVocalCommandsFilter.__deallocating_deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10018D27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100494920);
  sub_1000086B4(v2, (uint64_t)qword_100494920);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000015, 0x80000001003B4360);
}

uint64_t sub_10018D2F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  _BYTE v7[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 120, v7, 0, 0);
  v5 = *(_DWORD *)(v3 + 120);
  v6 = *(_BYTE *)(v3 + 126);
  *(_WORD *)(a2 + 4) = *(_WORD *)(v3 + 124);
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 6) = v6;
  return result;
}

double sub_10018D34C(int *a1, uint64_t *a2)
{
  int v2;
  __int16 v3;
  char v4;
  uint64_t v5;
  _BYTE v7[24];

  v2 = *a1;
  v3 = *((_WORD *)a1 + 2);
  v4 = *((_BYTE *)a1 + 6);
  v5 = *a2;
  swift_beginAccess(*a2 + 120, v7, 1, 0);
  *(_WORD *)(v5 + 124) = v3;
  *(_DWORD *)(v5 + 120) = v2;
  *(_BYTE *)(v5 + 126) = v4;
  return sub_10018CDB0();
}

uint64_t type metadata accessor for SequentialVocalCommandsFilter()
{
  return objc_opt_self(_TtC9MusicCore29SequentialVocalCommandsFilter);
}

unint64_t sub_10018D3C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100494A38;
  if (!qword_100494A38)
  {
    v1 = type metadata accessor for SequentialVocalCommandsFilter();
    result = swift_getWitnessTable(&protocol conformance descriptor for SequentialVocalCommandsFilter, v1);
    atomic_store(result, (unint64_t *)&qword_100494A38);
  }
  return result;
}

uint64_t sub_10018D40C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 46, 7);
}

uint64_t sub_10018D438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 45) << 40);
  v4 = (_QWORD *)swift_task_alloc(dword_100494A34);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch(sub_10018D050, v2, 0);
}

uint64_t *PlaylistCovers.ArtworkDataSource.shared.unsafeMutableAddressor()
{
  if (qword_10048C8A0 != -1)
    swift_once(&qword_10048C8A0, sub_10018DCCC);
  return &static PlaylistCovers.ArtworkDataSource.shared;
}

__n128 PlaylistCovers.Recipe.init(_:)@<Q0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __n128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v5 = sub_10018F004(a1, a2);
  v7 = v6;
  v8 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = JSONDecoder.init()();
  v10 = sub_10019084C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v5, v7, &type metadata for PlaylistCovers.Recipe, v10);
  swift_release(v9);
  sub_1000067E8(v5, v7);
  if (!v3)
  {
    result = v16;
    *(_QWORD *)a3 = v12;
    *(_QWORD *)(a3 + 8) = v13;
    *(_OWORD *)(a3 + 16) = v14;
    *(_OWORD *)(a3 + 32) = v15;
    *(__n128 *)(a3 + 48) = v16;
    *(_OWORD *)(a3 + 64) = v17;
    *(_OWORD *)(a3 + 80) = v18;
    *(_QWORD *)(a3 + 96) = v19;
  }
  return result;
}

void PlaylistCovers.Recipe.asCoverRepresentation()(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  id v27;
  id v28;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)v1 == 3157553 && v3 == 0xE300000000000000;
  if (!v4
    && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v1, v3, 3157553, 0xE300000000000000, 0) & 1) == 0)
  {
    goto LABEL_12;
  }
  v5 = *(char **)(v1 + 40);
  v6 = *(char **)(v1 + 48);
  v7 = *(char **)(v1 + 56);
  v8 = *(char **)(v1 + 64);
  v9 = *(char **)(v1 + 72);
  v10 = *(char **)(v1 + 80);
  v11 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(*(char **)(v1 + 24), *(char **)(v1 + 32));
  if (!v11)
  {
    v16 = 0;
    v17 = 0;
    goto LABEL_14;
  }
  v12 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v5, v6);
  if (!v12)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    goto LABEL_16;
  }
  v13 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v7, v8);
  if (!v13)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    goto LABEL_17;
  }
  v14 = _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(v9, v10);
  if (!v14)
  {

    v16 = 0;
    v17 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_18;
  }
  v15 = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*(_QWORD *)(v1 + 16));
  if (v15 == 8)
  {

LABEL_12:
    v16 = 0;
    v17 = 0;
    v11 = 0;
LABEL_14:
    v12 = 0;
LABEL_16:
    v13 = 0;
LABEL_17:
    v14 = 0;
LABEL_18:
    v18 = 0;
    goto LABEL_19;
  }
  v19 = v15;
  v20 = qword_10048C8A8;
  v21 = v11;
  v22 = v12;
  v27 = v13;
  v28 = v14;
  if (v20 != -1)
    swift_once(&qword_10048C8A8, sub_1001927D0);
  sub_100190890();
  v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)((uint64_t)v21, (uint64_t)v22, (uint64_t)v27, (uint64_t)v28, (uint64_t)v23, v19);
  v26 = v19;
  v17 = v24;
  v18 = v25;

  v16 = v26;
LABEL_19:
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v11;
  a1[3] = v12;
  a1[4] = v13;
  a1[5] = v14;
  a1[6] = v18;
}

id PlaylistCovers.ArtworkToken.__allocating_init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  __int128 v9;
  char *v10;
  objc_super v12;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v8 + 6) = *(_QWORD *)(a1 + 48);
  v10 = &v7[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v12.receiver = v7;
  v12.super_class = v3;
  return objc_msgSendSuper2(&v12, "init");
}

id PlaylistCovers.ArtworkToken.init(coverRepresentation:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  __int128 v5;
  char *v6;
  objc_super v8;

  v4 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *((_OWORD *)v4 + 1) = v5;
  *((_OWORD *)v4 + 2) = *(_OWORD *)(a1 + 32);
  *((_QWORD *)v4 + 6) = *(_QWORD *)(a1 + 48);
  v6 = &v3[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v6 = a2;
  *((_QWORD *)v6 + 1) = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkToken();
  return objc_msgSendSuper2(&v8, "init");
}

id PlaylistCovers.ArtworkToken.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id result;
  objc_super v23;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v3 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8);
  v4 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v5 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24);
  v6 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v7 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40);
  v8 = *(void **)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  v11 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
  *v13 = v2;
  *((_QWORD *)v13 + 1) = v3;
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v5;
  *((_QWORD *)v13 + 4) = v6;
  *((_QWORD *)v13 + 5) = v7;
  *((_QWORD *)v13 + 6) = v8;
  v14 = &v12[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
  *(_QWORD *)v14 = v10;
  *((_QWORD *)v14 + 1) = v9;
  v23.receiver = v12;
  v23.super_class = v11;
  v15 = v3;
  v16 = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  swift_bridgeObjectRetain();
  result = objc_msgSendSuper2(&v23, "init");
  a1[3] = v11;
  *a1 = result;
  return result;
}

Swift::String_optional __swiftcall PlaylistCovers.ArtworkToken.stringRepresentation()()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  void *v10;
  Swift::String_optional result;
  _OWORD v12[3];
  uint64_t v13;

  v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16);
  v12[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation);
  v12[1] = v1;
  v12[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48);
  sub_1001908EC((uint64_t)v12);
  v2 = PlaylistCovers.Cover.Representation.stringRepresentation.getter();
  v4 = v3;
  sub_100190940((uint64_t)v12);
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle);
  v6 = *(void **)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 0xD000000000000011;
  v8._object = (void *)0x80000001003B4380;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v2;
  v10 = v4;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

void PlaylistCovers.ArtworkToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.ArtworkToken", 22, "init()", 6, 0);
  __break(1u);
}

id PlaylistCovers.ArtworkToken.__deallocating_deinit()
{
  return sub_10018E6F4(type metadata accessor for PlaylistCovers.ArtworkToken);
}

id PlaylistCovers.ArtworkDataSource.cache.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache);
}

id sub_10018DCCC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PlaylistCovers.ArtworkDataSource()), "init");
  static PlaylistCovers.ArtworkDataSource.shared = (uint64_t)result;
  return result;
}

id static PlaylistCovers.ArtworkDataSource.shared.getter()
{
  if (qword_10048C8A0 != -1)
    swift_once(&qword_10048C8A0, sub_10018DCCC);
  return (id)static PlaylistCovers.ArtworkDataSource.shared;
}

id PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  void *v12;
  _BYTE v13[32];

  v3 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v3);
  swift_unknownObjectRelease(v3);
  v4 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    return 0;
  v5 = v12;
  objc_msgSend(a1, "fittingSize");
  v8 = sub_100190994(v6, v7);
  if (!v8)
  {

    return 0;
  }
  v9 = v8;
  v10 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "objectForKey:", v8);

  return v10;
}

uint64_t PlaylistCovers.ArtworkDataSource.loadRepresentation(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_10018DE8C, 0, 0);
}

uint64_t sub_10018DE8C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  void *v11;
  Swift::String v12;
  id v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __n128 v19;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *ObjCClassFromMetadata;
  id v29;
  id v30;
  id v31;
  char **v32;
  id v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  id v45;

  v1 = objc_msgSend(*(id *)(v0 + 64), "token");
  _bridgeAnyObjectToAny(_:)(v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (!swift_dynamicCast(v0 + 48, v0 + 16, (char *)&type metadata for Any + 8, v2, 6))
  {
    v11 = *(void **)(v0 + 64);
    _StringGuts.grow(_:)(58);
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0xE000000000000000;
    v12._countAndFlagsBits = 0x206E656B6F54;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = objc_msgSend(v11, "token");
    _bridgeAnyObjectToAny(_:)(v13);
    swift_unknownObjectRelease(v13);
    _print_unlocked<A, B>(_:_:)(v0 + 16, v0 + 48, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    sub_10000682C((_QWORD *)(v0 + 16));
    v14._object = (void *)0x80000001003B43C0;
    v14._countAndFlagsBits = 0xD000000000000032;
    String.append(_:)(v14);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = sub_100190A9C();
    swift_allocError(&type metadata for Error, v17, 0, 0);
    *v18 = v15;
    v18[1] = v16;
    swift_willThrow(v19);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(void **)(v0 + 64);
  v4 = *(char **)(v0 + 48);
  objc_msgSend(v3, "fittingSize");
  v6 = v5;
  v8 = v7;
  v9 = PlaylistCovers.ArtworkDataSource.existingRepresentation(for:)(v3);
  if (v9)
  {
    v10 = v9;
  }
  else
  {
    v21 = *(void **)(v0 + 64);
    v22 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 8];
    v23 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 16];
    v25 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 24];
    v24 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 32];
    v27 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 40];
    v26 = *(void **)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation + 48];
    sub_100190890();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v29 = v22;
    v30 = v23;
    v44 = v25;
    v45 = v24;
    v31 = v27;
    v32 = v26;
    v33 = objc_msgSend(ObjCClassFromMetadata, "preferredFormat");
    objc_msgSend(v21, "destinationScale");
    objc_msgSend(v33, "setScale:");
    objc_msgSend(v21, "fittingSize");
    v35 = v34;
    v37 = v36;
    v38 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    v39 = *(_QWORD *)&v4[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle + 8];
    swift_bridgeObjectRetain();
    _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(v29, v32, v38, v39, v33, v35, v37);
    v41 = v40;
    swift_bridgeObjectRelease();
    v10 = objc_msgSend((id)objc_opt_self(MPArtworkRepresentation), "representationForVisualIdentity:withSize:image:", v4, v41, v6, v8);
    v42 = sub_100190994(v6, v8);
    if (v42)
    {
      v43 = v42;
      objc_msgSend(*(id *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache), "setObject:forKey:", v10, v42);

      return (*(uint64_t (**)(id))(v0 + 8))(v10);
    }

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v10);
}

uint64_t sub_10018E374(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = dword_100494A7C;
  v7 = a1;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_10018E404;
  v9[8] = v7;
  v9[9] = v8;
  return swift_task_switch(sub_10018DE8C, 0, 0);
}

uint64_t sub_10018E404(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;

  v3 = v1;
  v5 = *(_QWORD *)(*v2 + 40);
  v7 = *(void **)(*v2 + 16);
  v6 = *(void **)(*v2 + 24);
  v8 = *v2;
  swift_task_dealloc(v5);

  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v8 + 32);
  if (v3)
  {
    v10 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t PlaylistCovers.ArtworkDataSource.visualIdenticalityIdentifier(for:)(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[32];

  v1 = objc_msgSend(a1, "token");
  _bridgeAnyObjectToAny(_:)(v1);
  swift_unknownObjectRelease(v1);
  v2 = type metadata accessor for PlaylistCovers.ArtworkToken();
  if (swift_dynamicCast(&v4, v5, (char *)&type metadata for Any + 8, v2, 6))
    return v4;
  else
    return 0;
}

id PlaylistCovers.ArtworkDataSource.init()()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR____TtCO9MusicCore14PlaylistCovers17ArtworkDataSource_cache;
  v2 = objc_allocWithZone((Class)NSCache);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for PlaylistCovers.ArtworkDataSource();
  return objc_msgSendSuper2(&v5, "init");
}

id PlaylistCovers.ArtworkDataSource.__deallocating_deinit()
{
  return sub_10018E6F4(type metadata accessor for PlaylistCovers.ArtworkDataSource);
}

id sub_10018E6F4(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

_QWORD *PlaylistCovers.Recipe.colorInfo.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100190B00((_QWORD *)(v1 + 24), a1);
}

_QWORD *PlaylistCovers.Recipe.colorInfo.setter(_QWORD *a1)
{
  uint64_t v1;

  return sub_100190B34(a1, (_QWORD *)(v1 + 24));
}

uint64_t PlaylistCovers.Recipe.textColor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaylistCovers.Recipe.textColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 96));
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

CFRange (__swiftcall *PlaylistCovers.Recipe.textColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SharedListening.Reaction.senderID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharedListening.Reaction.senderID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

unint64_t sub_10018E81C()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x31726F6C6F63;
}

uint64_t sub_10018E838@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100190BAC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10018E85C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10018E868(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100190B68();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018E890(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100190B68();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.HexColors.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = v1;
  v5 = sub_100005574(&qword_100494A88);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_100190B68();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v25 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v25, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v24 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v24, v5);
    v16 = v3[4];
    v17 = v3[5];
    v23 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v23, v5);
    v18 = v3[6];
    v19 = v3[7];
    v22 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, &v22, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double PlaylistCovers.Recipe.HexColors.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_100190D44(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10018EA5C(_QWORD *a1)
{
  return PlaylistCovers.Recipe.HexColors.encode(to:)(a1);
}

uint64_t sub_10018EA70(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t *)v7, v8) & 1;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PlaylistCovers.Recipe.rawJSONRepresentation()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::String result;
  _OWORD v20[6];
  uint64_t v21;

  v3 = v0;
  v4 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for JSONEncoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONEncoder.init()();
  v9 = *(_OWORD *)(v3 + 80);
  v20[4] = *(_OWORD *)(v3 + 64);
  v20[5] = v9;
  v21 = *(_QWORD *)(v3 + 96);
  v10 = *(_OWORD *)(v3 + 16);
  v20[0] = *(_OWORD *)v3;
  v20[1] = v10;
  v11 = *(_OWORD *)(v3 + 48);
  v20[2] = *(_OWORD *)(v3 + 32);
  v20[3] = v11;
  v12 = sub_10019101C();
  v13 = dispatch thunk of JSONEncoder.encode<A>(_:)(v20, &type metadata for PlaylistCovers.Recipe, v12);
  if (v1)
  {
    swift_release(v8);
  }
  else
  {
    v15 = v13;
    v16 = v14;
    static String.Encoding.utf8.getter(v13);
    v17 = String.init(data:encoding:)(v15, v16, v6);
    if (!v18)
    {
      __break(1u);
      goto LABEL_7;
    }
    v6 = (char *)v17;
    v2 = v18;
    sub_1000067E8(v15, v16);
    swift_release(v8);
  }
  v17 = (uint64_t)v6;
  v18 = v2;
LABEL_7:
  result._object = v18;
  result._countAndFlagsBits = v17;
  return result;
}

uint64_t sub_10018EBE8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10018EC18 + 4 * byte_10038F930[*v0]))(0x6E6F6973726576, 0xE700000000000000);
}

uint64_t sub_10018EC18()
{
  return 0x6973736572707865;
}

uint64_t sub_10018EC38()
{
  return 0x666E49726F6C6F63;
}

uint64_t sub_10018EC54()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_10018EC74@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001910E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10018EC98(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100191060();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10018ECC0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100191060();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PlaylistCovers.Recipe.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _OWORD v23[4];

  v3 = v1;
  v5 = sub_100005574(&qword_100494AA0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_100191060();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  LOBYTE(v23[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, v23, v5);
  if (!v2)
  {
    v14 = v3[2];
    LOBYTE(v23[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v23, v5);
    v15 = *(_OWORD *)(v3 + 5);
    v23[0] = *(_OWORD *)(v3 + 3);
    v23[1] = v15;
    v16 = *(_OWORD *)(v3 + 9);
    v23[2] = *(_OWORD *)(v3 + 7);
    v23[3] = v16;
    v22 = 2;
    v17 = sub_1001910A4();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v23, &v22, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v17);
    v18 = v3[11];
    v19 = v3[12];
    LOBYTE(v23[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v19, v23, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 PlaylistCovers.Recipe.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_1001912C8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10018EED0(_QWORD *a1)
{
  return PlaylistCovers.Recipe.encode(to:)(a1);
}

uint64_t sub_10018EEE4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)v11, v13) & 1;
}

void PlaylistCovers.Recipe.HexColors.init(from:)(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v21 = v11;
  v22 = v10;
  v20 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v13 = v12;
  v14 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v16 = v15;
  v17 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v19 = v18;

  *a5 = v22;
  a5[1] = v21;
  a5[2] = v20;
  a5[3] = v13;
  a5[4] = v14;
  a5[5] = v16;
  a5[6] = v17;
  a5[7] = v19;
}

uint64_t sub_10018F004(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  __int128 v17[2];
  uint64_t v18;
  __int128 v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)&v19 = a1;
  *((_QWORD *)&v19 + 1) = a2;
  swift_bridgeObjectRetain();
  v2 = sub_100005574(&qword_100494C58);
  if (!swift_dynamicCast(v17, &v19, &type metadata for String.UTF8View, v2, 6))
  {
    v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_100008758((uint64_t)v17, &qword_100494C60);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v20[0] = a1;
      v20[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v7 = (char *)v20 + (HIBYTE(a2) & 0xF);
      v8 = v20;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v5 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v6 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v5 = _StringObject.sharedUTF8.getter(a1, a2);
      }
      if (v5)
        v7 = (_BYTE *)(v5 + v6);
      else
        v7 = 0;
      v8 = (_BYTE *)v5;
    }
    v9 = sub_10019022C(v8, v7);
    v11 = v10;
    if (v10 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v17[0] = v9;
      *((_QWORD *)&v17[0] + 1) = v11;
      return *(_QWORD *)&v17[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v12 = String.UTF8View._foreignCount()();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v12 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v12 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v17[0] = sub_100190290(v12);
    *((_QWORD *)&v17[0] + 1) = v13;
    __chkstk_darwin(*(_QWORD *)&v17[0]);
    sub_10018F8F0();
    __asm { BR              X12 }
  }
  sub_1000137C8(v17, (uint64_t)v20);
  v3 = v21;
  v4 = v22;
  sub_10000ABC8(v20, v21);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)(&v19, sub_10018FBE0, 0, &type metadata for Data._Representation, v3, v4);
  swift_bridgeObjectRelease();
  v17[0] = v19;
  sub_10000682C(v20);
  return *(_QWORD *)&v17[0];
}

uint64_t PlaylistCovers.Recipe.init(from:)@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *a1 + 1;
  v4 = (void *)*((_QWORD *)a1 + 3);
  v5 = (void *)*((_QWORD *)a1 + 4);
  v6 = (void *)*((_QWORD *)a1 + 5);
  v7 = *((id *)a1 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v27 = v12;
  v28 = v11;
  v13 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v25 = v14;
  v26 = v13;
  v15 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v17 = v16;
  v18 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v20 = v19;

  v21 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
  v23 = v22;
  result = sub_100190940((uint64_t)a1);
  *a2 = 3157553;
  a2[1] = 0xE300000000000000;
  a2[2] = v29;
  a2[3] = v28;
  a2[4] = v27;
  a2[5] = v26;
  a2[6] = v25;
  a2[7] = v15;
  a2[8] = v17;
  a2[9] = v18;
  a2[10] = v20;
  a2[11] = v21;
  a2[12] = v23;
  return result;
}

uint64_t sub_10018F620(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_10000F894;
  return v6();
}

uint64_t sub_10018F674(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_10000F894;
  return v7();
}

uint64_t sub_10018F6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100008758(a1, (uint64_t *)&unk_100493720);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_100451F30, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_100494C38, v17);
}

uint64_t sub_10018F814(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100013F98;
  return v6(a1);
}

uint64_t sub_10018F878(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

void sub_10018F8F0()
{
  __asm { BR              X11 }
}

_QWORD *sub_10018F950@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_10018FBE0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_100190074(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_100190134((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1001901AC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_10018FC54(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_10018FCB8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)__DataStorage._bytes.getter();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)__DataStorage._offset.getter();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = __DataStorage._length.getter();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_10018FD64@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result)
  {
    v5 = result;
    v8 = *a3;
    v7 = a3[1];
    swift_bridgeObjectRetain();
    result = _StringGuts.copyUTF8(into:)(v5, a2, v8, v7);
    if ((v9 & 1) == 0)
    {
      v10 = result;
      result = swift_bridgeObjectRelease(v7);
      *a4 = 0;
      a4[1] = 0xE000000000000000;
      a4[2] = 15;
      a4[3] = v10;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV9HexColorsV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      if ((v16 = a1[4], v17 = a1[5], v18 = a2[4], v19 = a2[5], v16 == v18) && v17 == v19
        || (v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), result = 0, (v20 & 1) != 0))
      {
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
  }
  return result;
}

uint64_t _s9MusicCore14PlaylistCoversO6RecipeV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (a1[2] == a2[2])
    {
      v10 = a1[3];
      v11 = a1[4];
      v12 = a1[5];
      v13 = a1[6];
      v14 = a1[7];
      v15 = a1[8];
      v16 = a2[3];
      v17 = a2[4];
      v18 = a2[5];
      v19 = a2[6];
      v20 = a2[7];
      v21 = a2[8];
      v32 = a2[9];
      v33 = a1[9];
      v30 = a2[10];
      v31 = a1[10];
      if (v10 == v16 && v11 == v17
        || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v16, v17, 0), result = 0, (v22 & 1) != 0))
      {
        if (v12 == v18 && v13 == v19
          || (v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v18, v19, 0), result = 0, (v23 & 1) != 0))
        {
          if (v14 == v20 && v15 == v21
            || (v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v20, v21, 0), result = 0, (v24 & 1) != 0))
          {
            if (v33 == v32 && v31 == v30
              || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v31, v32, v30, 0),
                  result = 0,
                  (v25 & 1) != 0))
            {
              v26 = a1[11];
              v27 = a1[12];
              v28 = a2[11];
              v29 = a2[12];
              if (v26 == v28 && v27 == v29)
                return 1;
              else
                return _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v28, v29, 0);
            }
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100190074(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_100190134(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_1001901AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_10019022C(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_100190074(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_100190134((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1001901AC((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_100190290(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      v2 = type metadata accessor for __DataStorage(0);
      swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
      __DataStorage.init(length:)(v1);
      if (v1 >= 0x7FFFFFFF)
      {
        v3 = type metadata accessor for Data.RangeReference(0);
        result = swift_allocObject(v3, 32, 7);
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

id _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  char *v17;
  objc_super v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[7];
  _OWORD v28[3];
  uint64_t v29;
  _OWORD v30[6];
  uint64_t v31;

  swift_bridgeObjectRetain();
  v8 = sub_10018F004(a1, a2);
  v10 = v9;
  v11 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = JSONDecoder.init()();
  v13 = sub_10019084C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for PlaylistCovers.Recipe, v8, v10, &type metadata for PlaylistCovers.Recipe, v13);
  swift_release(v12);
  sub_1000067E8(v8, v10);
  swift_bridgeObjectRelease();
  v30[4] = v24;
  v30[5] = v25;
  v31 = v26;
  v30[0] = v20;
  v30[1] = v21;
  v30[2] = v22;
  v30[3] = v23;
  PlaylistCovers.Recipe.asCoverRepresentation()(v27);
  sub_10019214C(v30);
  sub_1001921C0((uint64_t)v27, (uint64_t)v28);
  if (*((_QWORD *)&v28[0] + 1))
  {
    v20 = v28[0];
    v21 = v28[1];
    v22 = v28[2];
    *(_QWORD *)&v23 = v29;
    v14 = (objc_class *)type metadata accessor for PlaylistCovers.ArtworkToken();
    v15 = (char *)objc_allocWithZone(v14);
    v16 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_coverRepresentation];
    *(_OWORD *)v16 = v20;
    *((_OWORD *)v16 + 1) = v21;
    *((_OWORD *)v16 + 2) = v22;
    *((_QWORD *)v16 + 6) = v23;
    v17 = &v15[OBJC_IVAR____TtCO9MusicCore14PlaylistCovers12ArtworkToken_playlistTitle];
    *(_QWORD *)v17 = a3;
    *((_QWORD *)v17 + 1) = a4;
    v19.receiver = v15;
    v19.super_class = v14;
    return objc_msgSendSuper2(&v19, "init");
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_10019084C()
{
  unint64_t result;

  result = qword_100494A50;
  if (!qword_100494A50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_100494A50);
  }
  return result;
}

unint64_t sub_100190890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100494A58;
  if (!qword_100494A58)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100494A58);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkToken()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers12ArtworkToken);
}

uint64_t sub_1001908EC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(void **)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 48);
  v7 = *(id *)(a1 + 8);
  v8 = v2;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return a1;
}

uint64_t sub_100190940(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a1 + 40);

  return a1;
}

id sub_100190994(double a1, double a2)
{
  Swift::String_optional v4;
  id object;
  Swift::String v6;
  Swift::String v7;
  id v8;
  NSString v9;

  v4 = PlaylistCovers.ArtworkToken.stringRepresentation()();
  object = v4.value._object;
  if (v4.value._object)
  {
    v6._countAndFlagsBits = CGSize.description.getter(a1, a2);
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 0x203A657A6973202CLL;
    v7._object = (void *)0xE800000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = objc_allocWithZone((Class)NSString);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    object = objc_msgSend(v8, "initWithString:", v9, v4.value._countAndFlagsBits, v4.value._object);

  }
  return object;
}

unint64_t sub_100190A9C()
{
  unint64_t result;

  result = qword_100494A80;
  if (!qword_100494A80)
  {
    result = swift_getWitnessTable(&unk_10038FCA0, &type metadata for Error);
    atomic_store(result, (unint64_t *)&qword_100494A80);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistCovers.ArtworkDataSource()
{
  return objc_opt_self(_TtCO9MusicCore14PlaylistCovers17ArtworkDataSource);
}

_QWORD *sub_100190B00(_QWORD *a1, _QWORD *a2)
{
  _s6RecipeV9HexColorsVwcp(a2, a1);
  return a2;
}

_QWORD *sub_100190B34(_QWORD *a1, _QWORD *a2)
{
  _s6RecipeV9HexColorsVwta(a2, a1);
  return a2;
}

unint64_t sub_100190B68()
{
  unint64_t result;

  result = qword_100494A90;
  if (!qword_100494A90)
  {
    result = swift_getWitnessTable(&unk_10038FC50, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494A90);
  }
  return result;
}

uint64_t sub_100190BAC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x31726F6C6F63 && a2 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x31726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x32726F6C6F63 && a2 == 0xE600000000000000)
  {
    v7 = 0xE600000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x32726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x33726F6C6F63 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x33726F6C6F63, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x34726F6C6F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x34726F6C6F63, 0xE600000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_100190D44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v5 = sub_100005574(&qword_100494C50);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_100190B68();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV9HexColorsV10CodingKeysON, &_s6RecipeV9HexColorsV10CodingKeysON, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v35 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v35, v5);
  v14 = v13;
  v30 = v12;
  v34 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v34, v5);
  v31 = v16;
  v29 = v15;
  v33 = 2;
  swift_bridgeObjectRetain();
  v27 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
  v28 = v17;
  v32 = 3;
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(&v32, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  v23 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000682C(a1);
  swift_bridgeObjectRelease();
  v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v14;
  a2[2] = v29;
  a2[3] = v23;
  a2[4] = v27;
  a2[5] = v24;
  a2[6] = v22;
  a2[7] = v20;
  return result;
}

unint64_t sub_10019101C()
{
  unint64_t result;

  result = qword_100494A98;
  if (!qword_100494A98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe, &type metadata for PlaylistCovers.Recipe);
    atomic_store(result, (unint64_t *)&qword_100494A98);
  }
  return result;
}

unint64_t sub_100191060()
{
  unint64_t result;

  result = qword_100494AA8;
  if (!qword_100494AA8)
  {
    result = swift_getWitnessTable(&unk_10038FC00, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494AA8);
  }
  return result;
}

unint64_t sub_1001910A4()
{
  unint64_t result;

  result = qword_100494AB0;
  if (!qword_100494AB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_100494AB0);
  }
  return result;
}

uint64_t sub_1001910E8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6973736572707865 && a2 == 0xEC00000064496E6FLL)
  {
    v7 = 0xEC00000064496E6FLL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6973736572707865, 0xEC00000064496E6FLL, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x666E49726F6C6F63 && a2 == 0xE90000000000006FLL)
  {
    v8 = 0xE90000000000006FLL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x666E49726F6C6F63, 0xE90000000000006FLL, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease(0xE900000000000072);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6F6C6F4374786574, 0xE900000000000072, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1001912C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[8];
  char v43;

  v5 = sub_100005574(&qword_100494C40);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_100191060();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s6RecipeV10CodingKeysON, &_s6RecipeV10CodingKeysON, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  LOBYTE(v42[0]) = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v14 = v13;
  LOBYTE(v42[0]) = 1;
  swift_bridgeObjectRetain();
  v41 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v43 = 2;
  v15 = sub_100192090();
  KeyedDecodingContainer.decode<A>(_:forKey:)(v42, &type metadata for PlaylistCovers.Recipe.HexColors, &v43, v5, &type metadata for PlaylistCovers.Recipe.HexColors, v15);
  v16 = v42[3];
  v35 = v42[2];
  v36 = v42[0];
  v17 = v42[5];
  v33 = v42[6];
  v34 = v42[4];
  v39 = v42[1];
  v40 = v42[7];
  LOBYTE(v42[0]) = 3;
  swift_bridgeObjectRetain();
  v38 = v16;
  swift_bridgeObjectRetain();
  v37 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = KeyedDecodingContainer.decode(_:forKey:)(v42, v5);
  v20 = v19;
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10000682C(a1);
  swift_bridgeObjectRelease();
  v22 = v40;
  swift_bridgeObjectRelease();
  v23 = v37;
  swift_bridgeObjectRelease();
  v24 = v38;
  swift_bridgeObjectRelease();
  v25 = v39;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  v27 = v36;
  a2[2] = v41;
  a2[3] = v27;
  v28 = v35;
  a2[4] = v25;
  a2[5] = v28;
  v29 = v34;
  a2[6] = v24;
  a2[7] = v29;
  v30 = v33;
  a2[8] = v23;
  a2[9] = v30;
  v31 = v32;
  a2[10] = v22;
  a2[11] = v31;
  a2[12] = v20;
  return result;
}

uint64_t _s6RecipeVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_bridgeObjectRelease(a1[12]);
}

uint64_t _s6RecipeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6RecipeVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v5 = a1[4];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[5] = a2[5];
  v6 = a1[6];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[7] = a2[7];
  v7 = a1[8];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[9] = a2[9];
  v8 = a1[10];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[11] = a2[11];
  v9 = a2[12];
  v10 = a1[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  return a1;
}

__n128 _s6RecipeVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s6RecipeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t _s6RecipeVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6RecipeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe()
{
  return &type metadata for PlaylistCovers.Recipe;
}

uint64_t _s6RecipeV9HexColorsVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *_s6RecipeV9HexColorsVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6RecipeV9HexColorsVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a2[7];
  v8 = a1[7];
  a1[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *_s6RecipeV9HexColorsVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t _s6RecipeV9HexColorsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6RecipeV9HexColorsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Recipe.HexColors()
{
  return &type metadata for PlaylistCovers.Recipe.HexColors;
}

ValueMetadata *_s6RecipeV10CodingKeysOMa()
{
  return &_s6RecipeV10CodingKeysON;
}

uint64_t _s6RecipeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100191BEC + 4 * byte_10038F939[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100191C20 + 4 * byte_10038F934[v4]))();
}

uint64_t sub_100191C20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100191C28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100191C30);
  return result;
}

uint64_t sub_100191C3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100191C44);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100191C48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100191C50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6RecipeV9HexColorsV10CodingKeysOMa()
{
  return &_s6RecipeV9HexColorsV10CodingKeysON;
}

ValueMetadata *type metadata accessor for Error()
{
  return &type metadata for Error;
}

unint64_t sub_100191C80()
{
  unint64_t result;

  result = qword_100494BC8;
  if (!qword_100494BC8)
  {
    result = swift_getWitnessTable(&unk_10038FB20, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BC8);
  }
  return result;
}

unint64_t sub_100191CC8()
{
  unint64_t result;

  result = qword_100494BD0;
  if (!qword_100494BD0)
  {
    result = swift_getWitnessTable(&unk_10038FBD8, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BD0);
  }
  return result;
}

unint64_t sub_100191D10()
{
  unint64_t result;

  result = qword_100494BD8;
  if (!qword_100494BD8)
  {
    result = swift_getWitnessTable(&unk_10038FB48, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BD8);
  }
  return result;
}

unint64_t sub_100191D58()
{
  unint64_t result;

  result = qword_100494BE0;
  if (!qword_100494BE0)
  {
    result = swift_getWitnessTable(&unk_10038FB70, &_s6RecipeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BE0);
  }
  return result;
}

unint64_t sub_100191DA0()
{
  unint64_t result;

  result = qword_100494BE8;
  if (!qword_100494BE8)
  {
    result = swift_getWitnessTable(&unk_10038FA90, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BE8);
  }
  return result;
}

unint64_t sub_100191DE8()
{
  unint64_t result;

  result = qword_100494BF0;
  if (!qword_100494BF0)
  {
    result = swift_getWitnessTable(&unk_10038FAB8, &_s6RecipeV9HexColorsV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_100494BF0);
  }
  return result;
}

uint64_t sub_100191E2C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100191E60()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_100494C04);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_100494C00 + dword_100494C00))(v2, v3, v4);
}

uint64_t sub_100191ED0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_100494C14);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100494C10 + dword_100494C10))(v2, v3, v4);
}

uint64_t sub_100191F4C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100191F78(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_100494C24);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100494C20 + dword_100494C20))(a1, v4, v5, v6);
}

uint64_t sub_100191FFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100192020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100494C34);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100494C30 + dword_100494C30))(a1, v4);
}

unint64_t sub_100192090()
{
  unint64_t result;

  result = qword_100494C48;
  if (!qword_100494C48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Recipe.HexColors, &type metadata for PlaylistCovers.Recipe.HexColors);
    atomic_store(result, (unint64_t *)&qword_100494C48);
  }
  return result;
}

_QWORD *sub_1001920D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_10018FC54((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100192130, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_100192130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_10018FD64(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

_QWORD *sub_10019214C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[4];
  v4 = a1[6];
  v5 = a1[8];
  v6 = a1[10];
  swift_bridgeObjectRelease(a1[12]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_1001921C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100494C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PlaylistCovers.Cover.Representation.stringRepresentation.getter()
{
  void **v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;

  _StringGuts.grow(_:)(68);
  v1._countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x80000001003B4520;
  String.append(_:)(v1);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001003B4550;
  v3._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v3);
  v4._countAndFlagsBits = PlaylistCovers.RecipeColors.description.getter(v0[2], v0[3], v0[4], v0[5]);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x6F4374786574202CLL;
  v5._object = (void *)0xED0000203A726F6CLL;
  String.append(_:)(v5);
  v6 = v0[6];
  v7 = objc_msgSend(v6, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);

  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

__int128 *PlaylistCovers.Specs.coverSize.unsafeMutableAddressor()
{
  if (qword_10048C8A8 != -1)
    swift_once(&qword_10048C8A8, sub_1001927D0);
  return &static PlaylistCovers.Specs.coverSize;
}

uint64_t PlaylistCovers.Cover.Representation.init(expression:backgroundImage:recipeColors:textColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t PlaylistCovers.Cover.representation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100193A54(v1 + 8, a1);
}

uint64_t PlaylistCovers.Cover.accessibilityLabel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

id PlaylistCovers.Cover.Representation.backgroundImage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void *PlaylistCovers.Cover.Representation.recipeColors.getter()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v1 = (void *)v0[2];
  v2 = (void *)v0[3];
  v4 = (void *)v0[4];
  v3 = (void *)v0[5];
  v5 = v1;
  v6 = v2;
  v7 = v4;
  v8 = v3;
  return v1;
}

void PlaylistCovers.Cover.Representation.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v2 = v1;
  Hasher._combine(_:)(*v1 + 1);
  v4 = (void *)*((_QWORD *)v1 + 3);
  v5 = (void *)*((_QWORD *)v2 + 4);
  v6 = (void *)*((_QWORD *)v2 + 5);
  v7 = *((id *)v2 + 2);
  v8 = v4;
  v9 = v5;
  v10 = v6;
  NSObject.hash(into:)(a1);
  v11 = v8;
  NSObject.hash(into:)(a1);

  v12 = v9;
  NSObject.hash(into:)(a1);

  v13 = v10;
  NSObject.hash(into:)(a1);

  v14 = *((id *)v2 + 6);
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.Cover.Representation.hashValue.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v14[9];

  v1 = v0;
  Hasher.init(_seed:)(v14);
  Hasher._combine(_:)(*v0 + 1);
  v2 = (void *)*((_QWORD *)v0 + 3);
  v3 = (void *)*((_QWORD *)v1 + 4);
  v4 = (void *)*((_QWORD *)v1 + 5);
  v5 = *((id *)v1 + 2);
  v6 = v2;
  v7 = v3;
  v8 = v4;
  NSObject.hash(into:)(v14);
  v9 = v6;
  NSObject.hash(into:)(v14);

  v10 = v7;
  NSObject.hash(into:)(v14);

  v11 = v8;
  NSObject.hash(into:)(v14);

  v12 = *((id *)v1 + 6);
  NSObject.hash(into:)(v14);

  return Hasher._finalize()();
}

uint64_t sub_100192650(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

Swift::Int sub_1001926B0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

__n128 PlaylistCovers.Cover.init(image:representation:)@<Q0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;

  v11 = *(__n128 *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 8);
  v5 = *((_QWORD *)a2 + 5);
  v6 = *((_QWORD *)a2 + 6);
  v7 = *a2;
  PlaylistCovers.Expression.accessibilityLabel.getter(*a2);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v7;
  result = v11;
  *(_OWORD *)(a3 + 16) = v12;
  *(__n128 *)(a3 + 32) = v11;
  *(_QWORD *)(a3 + 48) = v5;
  *(_QWORD *)(a3 + 56) = v6;
  *(_QWORD *)(a3 + 64) = v9;
  *(_QWORD *)(a3 + 72) = v10;
  return result;
}

double PlaylistCovers.Cover.init(image:accessibilityLabel:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double result;

  *(_QWORD *)a4 = a1;
  result = 0.0;
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_QWORD *)(a4 + 56) = 0;
  *(_QWORD *)(a4 + 64) = a2;
  *(_QWORD *)(a4 + 72) = a3;
  return result;
}

uint64_t sub_100192778(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(v8, v9) & 1;
}

int64x2_t sub_1001927D0()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4066800000000000uLL);
  static PlaylistCovers.Specs.coverSize = (__int128)result;
  return result;
}

double static PlaylistCovers.Specs.coverSize.getter()
{
  if (qword_10048C8A8 != -1)
    swift_once(&qword_10048C8A8, sub_1001927D0);
  return *(double *)&static PlaylistCovers.Specs.coverSize;
}

int64x2_t sub_10019282C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4070E00000000000uLL);
  xmmword_1004A2270 = (__int128)result;
  return result;
}

void sub_100192844()
{
  qword_1004A2280 = 0x4040800000000000;
}

void sub_100192858()
{
  qword_1004A2288 = 0x403B000000000000;
}

void sub_100192868()
{
  qword_1004A2290 = 0x403C000000000000;
}

void sub_100192878()
{
  qword_1004A2298 = 0x4034000000000000;
}

id sub_100192888()
{
  id v0;
  id v1;
  id v2;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  sub_1000087DC(0, &qword_100494C78, UIColor_ptr);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 128, 128, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(255, 230, 230, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(250, 35, 59, 1.0);
  qword_1004A22A0 = (uint64_t)v0;
  *(_QWORD *)algn_1004A22A8 = v1;
  qword_1004A22B0 = (uint64_t)v2;
  unk_1004A22B8 = result;
  return result;
}

id sub_10019293C()
{
  id v0;
  id v1;
  id v2;
  id result;

  sub_1000087DC(0, &qword_100494C78, UIColor_ptr);
  v0 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(238, 238, 238, 1.0);
  v1 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(187, 187, 187, 1.0);
  v2 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(70, 70, 70, 1.0);
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(17, 17, 17, 1.0);
  qword_1004A22C0 = (uint64_t)v0;
  *(_QWORD *)algn_1004A22C8 = v1;
  qword_1004A22D0 = (uint64_t)v2;
  unk_1004A22D8 = result;
  return result;
}

void sub_1001929E4(int a1, id a2, double a3, double a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t inited;
  id v23;
  __CFString *v24;
  id v25;
  Class isa;
  id v27;
  id v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSString *v35;
  id v36;
  NSString *v37;
  id v38;
  NSString *v39;
  NSString *v40;
  id v41;
  unint64_t v42;
  objc_class *v43;
  uint64_t v44;
  id v45;
  void *v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  void *v51;
  __CFString *v52;
  id v53;
  uint64_t v55;
  _BYTE v56[192];
  _BYTE v57[120];

  objc_msgSend(a2, "drawInRect:", 0.0, 0.0, a3, a4);
  if (qword_10048C8B0 != -1)
    swift_once(&qword_10048C8B0, sub_10019282C);
  v13 = *(double *)&xmmword_1004A2270 / a3;
  v14 = String.count.getter(a6, a7);
  if (v14 <= 30)
  {
    if (qword_10048C8B8 != -1)
      swift_once(&qword_10048C8B8, sub_100192844);
    v15 = &qword_1004A2280;
  }
  else
  {
    if (qword_10048C8C0 != -1)
      swift_once(&qword_10048C8C0, sub_100192858);
    v15 = &qword_1004A2288;
  }
  v16 = *v15;
  v17 = (void *)objc_opt_self(UIFont);
  v18 = objc_msgSend(v17, "systemFontOfSize:weight:", CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale")), UIFontWeightSemibold);
  v19 = objc_msgSend(v18, "fontDescriptor");

  v20 = (void *)kCTFontIgnoreLegibilityWeightAttribute;
  v21 = sub_100005574(&qword_100494C80);
  inited = swift_initStackObject(v21, v57);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  *(_QWORD *)(inited + 32) = v20;
  *(_BYTE *)(inited + 40) = 1;
  *(_QWORD *)(inited + 64) = &type metadata for Bool;
  *(_QWORD *)(inited + 72) = kCTFontOpticalSizeAttribute;
  *(_QWORD *)(inited + 104) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 80) = v16;
  v23 = v20;
  v24 = (id)kCTFontOpticalSizeAttribute;
  v53 = v23;
  v52 = v24;
  v25 = v19;
  sub_1000998C8(inited);
  type metadata accessor for AttributeName(0);
  sub_1001942D4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, "fontDescriptorByAddingAttributes:", isa);

  v51 = v27;
  v28 = objc_msgSend(v17, "fontWithDescriptor:size:", v27, 0.0);
  v55 = a6;
  if (v14 >= 31 && qword_10048C8C8 != -1)
    swift_once(&qword_10048C8C8, sub_100192868);
  v29 = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v30 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v30, "setMinimumLineHeight:", v29);
  objc_msgSend(v30, "setMaximumLineHeight:", v29);
  v31 = sub_100005574(&qword_100494C88);
  v32 = swift_initStackObject(v31, v56);
  *(_OWORD *)(v32 + 16) = xmmword_100384BB0;
  *(_QWORD *)(v32 + 32) = NSFontAttributeName;
  v33 = sub_1000087DC(0, &qword_100494C90, UIFont_ptr);
  *(_QWORD *)(v32 + 40) = v28;
  *(_QWORD *)(v32 + 64) = v33;
  *(_QWORD *)(v32 + 72) = NSForegroundColorAttributeName;
  v34 = sub_1000087DC(0, &qword_100494C78, UIColor_ptr);
  *(_QWORD *)(v32 + 80) = a8;
  *(_QWORD *)(v32 + 104) = v34;
  *(_QWORD *)(v32 + 112) = NSKernAttributeName;
  *(double *)(v32 + 120) = -0.25 / v13;
  *(_QWORD *)(v32 + 144) = &type metadata for CGFloat;
  *(_QWORD *)(v32 + 152) = NSParagraphStyleAttributeName;
  *(_QWORD *)(v32 + 184) = sub_1000087DC(0, &qword_100494C98, NSMutableParagraphStyle_ptr);
  *(_QWORD *)(v32 + 160) = v30;
  v35 = NSFontAttributeName;
  v36 = v28;
  v37 = NSForegroundColorAttributeName;
  v38 = a8;
  v39 = NSKernAttributeName;
  v40 = NSParagraphStyleAttributeName;
  v41 = v30;
  v42 = sub_100099A0C(v32);
  v43 = (objc_class *)type metadata accessor for LanguageAwareString(0);
  v44 = swift_bridgeObjectRetain();
  LOBYTE(v30) = static LanguageAwareString.keepStatisticsOnLanguageComponents.getter(v44);
  v45 = objc_allocWithZone(v43);
  v46 = (void *)LanguageAwareString.init(_:attributes:baseParagraphStyle:keepStatisticsOnLanguageComponents:)(v55, a7, v42, 0, v30 & 1);
  v47 = (void *)dispatch thunk of LanguageAwareString.attributedString.getter();

  if (qword_10048C8D0 != -1)
    swift_once(&qword_10048C8D0, sub_100192878);
  v48 = CGFloat.roundValue(scale:)(objc_msgSend(a5, "scale"));
  v49 = UIEdgeInsets.init(edges:inset:)(15, v48);
  objc_msgSend(v47, "drawWithRect:options:context:", 1, 0, sub_10019431C(0.0, 0.0, a3, a4, v49, v50));

}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  if (*a1 == *a2)
  {
    v4 = (void *)*((_QWORD *)a1 + 3);
    v5 = (void *)*((_QWORD *)a1 + 4);
    v6 = (void *)*((_QWORD *)a1 + 5);
    v7 = *((id *)a1 + 2);
    v8 = v4;
    v9 = v5;
    v10 = v6;
    v11 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v40 = v12;
    v41 = v11;
    v36 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v43 = v13;
    v35 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v38 = v14;
    v33 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v37 = v15;

    v16 = (void *)*((_QWORD *)a2 + 3);
    v17 = (void *)*((_QWORD *)a2 + 4);
    v18 = (void *)*((_QWORD *)a2 + 5);
    v19 = *((id *)a2 + 2);
    v20 = v16;
    v21 = v17;
    v22 = v18;
    v23 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v25 = v24;
    v26 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v28 = v27;
    v34 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v39 = v29;
    v32 = _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0();
    v44 = v30;

    if ((v41 == v23 && v40 == v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v41, v40, v23, v25, 0) & 1) != 0)
      && (v36 == v26 && v43 == v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v36, v43, v26, v28, 0) & 1) != 0)
      && (v35 == v34 && v38 == v39 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v38, v34, v39, 0) & 1) != 0))
    {
      if (v33 == v32 && v37 == v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v37, 2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_16:
        sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
        return static NSObject.== infix(_:_:)(*((_QWORD *)a1 + 6), *((_QWORD *)a2 + 6)) & 1;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v37, v32, v44, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  unsigned __int8 v50[8];
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  unsigned __int8 v57[8];
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;

  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) == 0)
    return 0;
  v4 = a1[1];
  v5 = (void *)a1[2];
  v7 = (void *)a1[3];
  v6 = (void *)a1[4];
  v9 = (void *)a1[5];
  v8 = (void *)a1[6];
  v10 = (void *)a1[7];
  v11 = a2[1];
  v12 = (void *)a2[2];
  v14 = (void *)a2[3];
  v13 = (void *)a2[4];
  v16 = (void *)a2[5];
  v15 = (void *)a2[6];
  v17 = (void *)a2[7];
  if (v5)
  {
    if (v12)
    {
      v50[0] = a1[1];
      v51 = v5;
      v52 = v7;
      v53 = v6;
      v54 = v9;
      v55 = v8;
      v56 = v10;
      v18 = v11;
      v57[0] = v11;
      v58 = v12;
      v59 = v14;
      v60 = v13;
      v61 = v16;
      v62 = v15;
      v63 = v17;
      v19 = v4;
      v42 = v4;
      v44 = v10;
      v40 = v7;
      v41 = v9;
      v20 = v7;
      v21 = v6;
      v46 = v6;
      v48 = v8;
      v22 = v13;
      v23 = v9;
      v24 = v16;
      v25 = v15;
      v26 = v17;
      sub_100194154(v19, v5, v20, v21, v23, v8, v10);
      sub_100194154(v18, v12, v14, v22, v24, v25, v26);
      v39 = _s9MusicCore14PlaylistCoversO5CoverV14RepresentationV2eeoiySbAG_AGtFZ_0(v50, v57);
      sub_1001941B0(v18, v12, v14, v22, v24, v25, v26);
      sub_1001941B0(v42, v5, v40, v46, v41, v48, v44);
      if ((v39 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
LABEL_7:
    v28 = a1[1];
    v43 = v28;
    v45 = (void *)a1[7];
    v29 = (void *)a1[4];
    v47 = v29;
    v49 = (void *)a1[6];
    v30 = (void *)a2[4];
    v31 = (void *)a2[5];
    v32 = v15;
    v33 = v11;
    v34 = v17;
    sub_100194154(v28, v5, v7, v29, v9, v8, v10);
    sub_100194154(v33, v12, v14, v30, v31, v32, v34);
    sub_1001941B0(v43, v5, v7, v47, v9, v49, v45);
    sub_1001941B0(v33, v12, v14, v30, v31, v32, v34);
    return 0;
  }
  if (v12)
    goto LABEL_7;
LABEL_8:
  v35 = a1[8];
  v36 = a1[9];
  v37 = a2[8];
  v38 = a2[9];
  if (v35 == v37 && v36 == v38)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, v37, v38, 0);
}

void _s9MusicCore14PlaylistCoversO18playlistCoverImage4size010backgroundG09textColor5title14graphicsFormatSo7UIImageCSo6CGSizeV_AKSo7UIColorCSSSgSo010UIGraphicsg8RendererN0CtFZ_0(void *a1, char **a2, uint64_t a3, uint64_t a4, id a5, CGFloat a6, CGFloat a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  unsigned int v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  char **v37;
  id v38;
  __n128 v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  __n128 v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void **aBlock;
  uint64_t v52;
  void (*v53)(uint64_t, void *);
  void *v54;
  uint64_t (*v55)(uint64_t);
  uint64_t v56;
  CGSize v57;
  CGSize v58;

  v50 = a1;
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  isEscapingClosureAtFileLocation = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (void **)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  v22 = (void (*)(uint64_t, void *))((char *)&v48 - v21);
  if (a4)
  {
    v49 = v16;
    swift_bridgeObjectRetain();
    v23 = String.trim()();
    swift_bridgeObjectRelease();
    v24 = ((unint64_t)v23._object >> 56) & 0xF;
    v25 = a3;
    if (((uint64_t)v23._object & 0x2000000000000000) == 0)
      v24 = v23._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    if (v24)
      goto LABEL_8;
    swift_bridgeObjectRelease();
    v16 = v49;
  }
  String.LocalizationValue.init(stringLiteral:)(0x7473696C79616C50, 0xEE00656C74695420);
  (*(void (**)(void **, void (*)(uint64_t, void *), uint64_t))(isEscapingClosureAtFileLocation + 16))(v20, v22, v16);
  if (qword_10048C570 != -1)
    goto LABEL_21;
  while (1)
  {
    v26 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v25 = String.init(localized:table:bundle:locale:comment:)(v20, 0, 0, v26, v15, 0, 0, 256);
    a4 = v27;
    (*(void (**)(_QWORD, uint64_t))(isEscapingClosureAtFileLocation + 8))(v22, v16);
LABEL_8:
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v28, "_containsEmoji");

    v30 = a6;
    v31 = a7;
    if (v29)
    {
      if (qword_10048C8B0 != -1)
        swift_once(&qword_10048C8B0, sub_10019282C);
      if (*(double *)&xmmword_1004A2270 < a6)
        v30 = a6;
      else
        v30 = *(double *)&xmmword_1004A2270;
      v31 = v30;
    }
    v15 = (char *)objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, v30, v31);
    v16 = swift_allocObject(&unk_100452188, 72, 7);
    *(double *)(v16 + 16) = v30;
    *(double *)(v16 + 24) = v31;
    v32 = v50;
    *(_QWORD *)(v16 + 32) = v50;
    *(_QWORD *)(v16 + 40) = a5;
    *(_QWORD *)(v16 + 48) = v25;
    *(_QWORD *)(v16 + 56) = a4;
    *(_QWORD *)(v16 + 64) = a2;
    v33 = swift_allocObject(&unk_1004521B0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_100194248;
    *(_QWORD *)(v33 + 24) = v16;
    v55 = sub_10016CBB4;
    v56 = v33;
    v20 = _NSConcreteStackBlock;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v22 = sub_1000E776C;
    v53 = sub_1000E776C;
    v54 = &unk_1004521C8;
    v34 = _Block_copy(&aBlock);
    v35 = v56;
    v36 = v32;
    a5 = a5;
    v37 = a2;
    swift_retain(v33);
    a2 = &selRef_count;
    v38 = objc_msgSend(v15, "imageWithActions:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v33, "", 122, 121, 53, 1, v39);
    swift_release(v33);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_21:
    swift_once(&qword_10048C570, sub_10000AD54);
  }
  v57.width = v30;
  v57.height = v31;
  v58.width = a6;
  v58.height = a7;
  if (CGSizeEqualToSize(v57, v58))
  {
    swift_release(v16);

  }
  else
  {
    v40 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
    v41 = swift_allocObject(&unk_100452200, 40, 7);
    *(_QWORD *)(v41 + 16) = v38;
    *(CGFloat *)(v41 + 24) = a6;
    *(CGFloat *)(v41 + 32) = a7;
    v42 = swift_allocObject(&unk_100452228, 32, 7);
    *(_QWORD *)(v42 + 16) = sub_1001942A8;
    *(_QWORD *)(v42 + 24) = v41;
    v55 = sub_100194340;
    v56 = v42;
    aBlock = _NSConcreteStackBlock;
    v52 = 1107296256;
    v53 = sub_1000E776C;
    v54 = &unk_100452240;
    v43 = _Block_copy(&aBlock);
    v44 = v56;
    v45 = v38;
    swift_retain(v42);
    objc_msgSend(v40, "imageWithActions:", v43, swift_release(v44).n128_f64[0]);

    _Block_release(v43);
    v47 = swift_isEscapingClosureAtFileLocation(v42, "", 122, 156, 37, 1, v46);
    swift_release(v41);
    swift_release(v16);
    swift_release(v42);
    if ((v47 & 1) != 0)
      __break(1u);
  }
}

uint64_t sub_100193A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100494C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100193AA0()
{
  unint64_t result;

  result = qword_100494C70;
  if (!qword_100494C70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Cover.Representation, &type metadata for PlaylistCovers.Cover.Representation);
    atomic_store(result, (unint64_t *)&qword_100494C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers()
{
  return &type metadata for PlaylistCovers;
}

uint64_t destroy for PlaylistCovers.Cover(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 16);
  if (v2)
  {

  }
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  uint64_t v20;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = *(void **)(a2 + 16);
  v7 = v4;
  if (v6)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v8 = *(void **)(a2 + 24);
    v9 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v8;
    v10 = *(void **)(a2 + 40);
    v11 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v12 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    v13 = v6;
    v14 = v8;
    v15 = v9;
    v16 = v10;
    v17 = v11;
    v18 = v12;
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)v5 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(v5 + 16) = v19;
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(v5 + 48) = *(_QWORD *)(a2 + 56);
  }
  v20 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = (_OWORD *)(a1 + 8);
  v8 = (__int128 *)(a2 + 8);
  v9 = *(void **)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    if (v10)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v11 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v11;
      v12 = v11;

      v13 = *(void **)(a2 + 24);
      v14 = *(void **)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v13;
      v15 = v13;

      v16 = *(void **)(a2 + 32);
      v17 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v16;
      v18 = v16;

      v19 = *(void **)(a2 + 40);
      v20 = *(void **)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v19;
      v21 = v19;

      v22 = *(void **)(a2 + 48);
      v23 = *(void **)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v22;
      v24 = v22;

      v25 = *(void **)(a2 + 56);
      v26 = *(void **)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v25;
      v27 = v25;

    }
    else
    {
      sub_100193DA4((id *)(a1 + 8));
      v41 = *(_OWORD *)(a2 + 24);
      v40 = *(_OWORD *)(a2 + 40);
      v42 = *v8;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v41;
      *(_OWORD *)(a1 + 40) = v40;
      *v7 = v42;
    }
  }
  else if (v10)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v28 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v28;
    v29 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v29;
    v30 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v30;
    v31 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v31;
    v32 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v32;
    v33 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v33;
    v34 = v28;
    v35 = v29;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
  }
  else
  {
    v43 = *v8;
    v44 = *(_OWORD *)(a2 + 24);
    v45 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v44;
    *(_OWORD *)(a1 + 40) = v45;
    *v7 = v43;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_100193DA4(id *a1)
{
  destroy for PlaylistCovers.Cover.Representation(a1);
  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  uint64_t v13;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_100193DA4((id *)(a1 + 8));
LABEL_5:
    v12 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v12;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_6;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_6:
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistCovers.Cover(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover()
{
  return &type metadata for PlaylistCovers.Cover;
}

void destroy for PlaylistCovers.Cover.Representation(id *a1)
{

}

uint64_t initializeWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(void **)(a2 + 40);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 32);
  v14 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 40);
  v17 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 48);
  v20 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  v21 = v19;

  return a1;
}

uint64_t assignWithTake for PlaylistCovers.Cover.Representation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Cover.Representation()
{
  return &type metadata for PlaylistCovers.Cover.Representation;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Specs()
{
  return &type metadata for PlaylistCovers.Specs;
}

id sub_100194154(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;

  if (a2)
  {
    v11 = a2;
    v12 = a3;
    v13 = a4;
    v14 = a5;
    v15 = a6;
    return a7;
  }
  return result;
}

void sub_1001941B0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  if (a2)
  {

  }
}

uint64_t sub_10019420C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

void sub_100194248(int a1)
{
  uint64_t v1;

  sub_1001929E4(a1, *(id *)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_10019425C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019426C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10019427C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100194284()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_1001942A8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "drawInRect:", 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1001942C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001942D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048D778;
  if (!qword_10048D778)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_100386FBC, v1);
    atomic_store(result, (unint64_t *)&qword_10048D778);
  }
  return result;
}

double sub_10019431C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

void PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  __asm { BR              X10 }
}

uint64_t sub_100194370(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  sub_1001946C8(a1, a2, a3, a4, a5, a6, a7);
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  return v8;
}

uint64_t UIViewPropertyAnimator.UpdateReason.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

void PlaylistCovers.Expression.accessibilityLabel.getter(char a1)
{
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  __chkstk_darwin();
  __asm { BR              X10 }
}

uint64_t sub_1001944E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  String.LocalizationValue.init(stringLiteral:)(0x4720656C706D6953, 0xEF746E6569646172);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v0);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v5 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v6 = String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v5, v2, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return v6;
}

id PlaylistCovers.Expression.textColor.getter(char a1)
{
  return objc_msgSend((id)objc_opt_self(UIColor), *off_100452920[a1]);
}

void sub_1001946C8(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_100452390, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_1004523B8, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A17C;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_100009BB0;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000E776C;
  v23[3] = &unk_1004523D0;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 96, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_100194870(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  _QWORD v24[5];
  uint64_t v25;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_100452408, 72, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  *(_QWORD *)(v14 + 64) = v13;
  v15 = swift_allocObject(&unk_100452430, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A1F4;
  *(_QWORD *)(v15 + 24) = v14;
  v24[4] = sub_10000AD24;
  v25 = v15;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_1000E776C;
  v24[3] = &unk_100452448;
  v16 = _Block_copy(v24);
  v17 = v25;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = v13;
  swift_retain(v15);
  objc_msgSend(v22, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 179, 36, 1, v23);
  swift_release(v14);
  swift_release(v15);
  if ((v22 & 1) != 0)
    __break(1u);
}

void sub_100194A24(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_1004524F8, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_100452520, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A250;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10000AD24;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000E776C;
  v23[3] = &unk_100452538;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 287, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_100194BCC(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_100452570, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_100452598, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A274;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10000AD24;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000E776C;
  v23[3] = &unk_1004525B0;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 341, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_100194D74(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_1004525E8, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_100452610, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A298;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10000AD24;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000E776C;
  v23[3] = &unk_100452628;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 398, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_100194F1C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  _QWORD v23[5];
  uint64_t v24;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_100452660, 64, 7);
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(double *)(v14 + 48) = a6;
  *(double *)(v14 + 56) = a7;
  v15 = swift_allocObject(&unk_100452688, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A2BC;
  *(_QWORD *)(v15 + 24) = v14;
  v23[4] = sub_10000AD24;
  v24 = v15;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000E776C;
  v23[3] = &unk_1004526A0;
  v16 = _Block_copy(v23);
  v17 = v24;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  swift_retain(v15);
  objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 432, 36, 1, v22);
  swift_release(v14);
  swift_release(v15);
  if ((v13 & 1) != 0)
    __break(1u);
}

void sub_1001950C4(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  CGImage *v28;
  CGImage *v29;
  CGImageRef v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  __n128 v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void **aBlock;
  uint64_t v54;
  void (*v55)(uint64_t, void *);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;
  id v59;
  CGRect v60;

  v52 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6 * 1.1, a7 * 1.1);
  v15 = swift_allocObject(&unk_1004527C8, 64, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  *(double *)(v15 + 48) = a6 * 1.1;
  *(double *)(v15 + 56) = a7 * 1.1;
  v16 = swift_allocObject(&unk_1004527F0, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_10019A3C4;
  *(_QWORD *)(v16 + 24) = v15;
  v57 = sub_10000AD24;
  v58 = v16;
  aBlock = _NSConcreteStackBlock;
  v54 = 1107296256;
  v55 = sub_1000E776C;
  v56 = &unk_100452808;
  v17 = _Block_copy(&aBlock);
  v18 = v58;
  v50 = a1;
  v19 = a2;
  v49 = a3;
  v20 = a4;
  swift_retain(v16);
  v51 = v14;
  v21 = objc_msgSend(v14, "imageWithActions:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v16, "", 127, 546, 77, 1, v22);
  *(_QWORD *)&v23 = swift_release(v16).n128_u64[0];
  if ((a1 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v21, "scale", v23);
  v25 = v24;
  objc_msgSend(v21, "scale");
  v27 = v26;
  v28 = (CGImage *)objc_msgSend(v21, "CGImage");
  if (!v28)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v29 = v28;
  v60.size.height = v27 * a7;
  v60.origin.y = v27 * a7 * 0.05;
  v60.size.width = v25 * a6;
  v60.origin.x = v25 * a6 * 0.05;
  v30 = CGImageCreateWithImageInRect(v28, v60);

  if (v30)
  {
    v31 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v30);

    v59 = v31;
    v32 = swift_allocObject(&unk_100452840, 32, 7);
    *(double *)(v32 + 16) = a6;
    *(double *)(v32 + 24) = a7;
    v33 = swift_allocObject(&unk_100452868, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_10019A404;
    *(_QWORD *)(v33 + 24) = v32;
    v57 = sub_10000AD24;
    v58 = v33;
    aBlock = _NSConcreteStackBlock;
    v54 = 1107296256;
    v55 = sub_1000E776C;
    v56 = &unk_100452880;
    v34 = _Block_copy(&aBlock);
    v35 = v58;
    swift_retain(v33);
    v36 = objc_msgSend(v52, "imageWithActions:", v34, swift_release(v35).n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(v33, "", 127, 584, 35, 1, v37);
    swift_release(v33);
    if ((v34 & 1) == 0)
    {
      v38 = swift_allocObject(&unk_1004528B8, 96, 7);
      *(_QWORD *)(v38 + 16) = v50;
      *(_QWORD *)(v38 + 24) = v19;
      *(_QWORD *)(v38 + 32) = v49;
      *(_QWORD *)(v38 + 40) = v20;
      *(_QWORD *)(v38 + 48) = 0;
      *(_QWORD *)(v38 + 56) = 0;
      *(double *)(v38 + 64) = a6;
      *(double *)(v38 + 72) = a7;
      *(_QWORD *)(v38 + 80) = v36;
      *(_QWORD *)(v38 + 88) = &v59;
      v39 = swift_allocObject(&unk_1004528E0, 32, 7);
      *(_QWORD *)(v39 + 16) = sub_10019A460;
      *(_QWORD *)(v39 + 24) = v38;
      v57 = sub_10000AD24;
      v58 = v39;
      aBlock = _NSConcreteStackBlock;
      v54 = 1107296256;
      v55 = sub_1000E776C;
      v56 = &unk_1004528F8;
      v40 = _Block_copy(&aBlock);
      v41 = v58;
      v42 = v50;
      v43 = v19;
      v44 = v49;
      v45 = v20;
      v46 = v36;
      swift_retain(v39);
      objc_msgSend(v52, "imageWithActions:", v40, swift_release(v41).n128_f64[0]);

      _Block_release(v40);
      LOBYTE(v40) = swift_isEscapingClosureAtFileLocation(v39, "", 127, 601, 36, 1, v47);
      swift_release(v39);
      if ((v40 & 1) == 0)
      {
        v48 = v59;
        swift_release(v38);
        swift_release(v32);
        swift_release(v15);

        return;
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

_UNKNOWN **static PlaylistCovers.Expression.allCases.getter()
{
  return &off_10043EFE0;
}

Swift::Int sub_100195594()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_1001955D8()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_100195604()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_100195644@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10019566C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_10019567C(_QWORD *a1@<X8>)
{
  *a1 = &off_10043EFE0;
}

uint64_t static PlaylistCovers.coverRepresentations(size:expressions:colors:graphicsFormat:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 72) = a5;
  *(_QWORD *)(v8 + 80) = a6;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 64) = a4;
  *(_QWORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 48) = a2;
  *(double *)(v8 + 24) = a7;
  *(double *)(v8 + 32) = a8;
  return swift_task_switch(sub_1001956B0, 0, 0);
}

uint64_t sub_1001956B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = sub_100005574(&qword_100494CA8);
  v6 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 88) = v6;
  v7 = *(_OWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v4;
  *(_QWORD *)(v6 + 32) = v3;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 72) = v1;
  v9 = sub_100005574(&qword_100494CC0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 96) = v10;
  *v10 = v0;
  v10[1] = sub_100195794;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v5, v9, 0, 0, &unk_100494CB8, v6, v5);
}

uint64_t sub_100195794()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001957F0, 0, 0);
}

uint64_t sub_1001957F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001957F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)(v10 + 136) = a7;
  *(_QWORD *)(v10 + 144) = a8;
  *(_QWORD *)(v10 + 120) = a5;
  *(_QWORD *)(v10 + 128) = a6;
  *(_QWORD *)(v10 + 112) = a4;
  *(double *)(v10 + 96) = a9;
  *(double *)(v10 + 104) = a10;
  *(_QWORD *)(v10 + 80) = a2;
  *(_QWORD *)(v10 + 88) = a3;
  *(_QWORD *)(v10 + 72) = a1;
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100005574((uint64_t *)&unk_100493720) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v10 + 152) = swift_task_alloc(v11);
  *(_QWORD *)(v10 + 160) = swift_task_alloc(v11);
  return swift_task_switch(sub_100195878, 0, 0);
}

uint64_t sub_100195878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _QWORD *v49;
  uint64_t v51;
  void (*v52)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (char *)(v1 + 32);
    v4 = type metadata accessor for TaskPriority(0);
    v51 = *(_QWORD *)(v4 - 8);
    v52 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v51 + 56);
    v53 = v4;
    swift_bridgeObjectRetain();
    do
    {
      v55 = v2;
      v7 = *(void **)(v0 + 136);
      v6 = *(void **)(v0 + 144);
      v8 = *(void **)(v0 + 120);
      v9 = *(void **)(v0 + 128);
      v10 = *(void **)(v0 + 112);
      v12 = *(_QWORD *)(v0 + 96);
      v11 = *(_QWORD *)(v0 + 104);
      v13 = *(uint64_t **)(v0 + 80);
      v14 = v3 + 1;
      v15 = *v3;
      v54 = v14;
      v52(*(_QWORD *)(v0 + 160), 1, 1, v53);
      v16 = swift_allocObject(&unk_100452340, 96, 7);
      *(_QWORD *)(v16 + 16) = 0;
      *(_QWORD *)(v16 + 24) = 0;
      *(_BYTE *)(v16 + 32) = v15;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = v11;
      *(_QWORD *)(v16 + 56) = v10;
      *(_QWORD *)(v16 + 64) = v8;
      *(_QWORD *)(v16 + 72) = v9;
      *(_QWORD *)(v16 + 80) = v7;
      *(_QWORD *)(v16 + 88) = v6;
      v18 = *v13;
      v19 = v10;
      v20 = v8;
      v21 = v9;
      v22 = v7;
      v23 = v6;
      if ((swift_taskGroup_addPending(v18, 0) & 1) != 0)
      {
        v17 = (uint64_t *)(v16 + 16);
        v24 = *(_QWORD *)(v0 + 152);
        sub_10002FAE4(*(_QWORD *)(v0 + 160), v24);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v24, 1, v53);
        v26 = *(_QWORD *)(v0 + 152);
        if ((_DWORD)v25 == 1)
        {
          sub_100031D8C(*(_QWORD *)(v0 + 152));
          v27 = 0;
        }
        else
        {
          v28 = TaskPriority.rawValue.getter(v25);
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v26, v53);
          v27 = v28;
        }
        v3 = v54;
        v5 = v55;
        v29 = *v17;
        if (*v17)
        {
          v30 = *(_QWORD *)(v16 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v29);
          v32 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v30);
          v34 = v33;
          swift_unknownObjectRelease(v29);
        }
        else
        {
          v32 = 0;
          v34 = 0;
        }
        v35 = **(_QWORD **)(v0 + 80);
        v36 = swift_allocObject(&unk_100452368, 32, 7);
        *(_QWORD *)(v36 + 16) = &unk_100494CE8;
        *(_QWORD *)(v36 + 24) = v16;
        v37 = sub_100005574(&qword_100494CA8);
        v38 = v34 | v32;
        if (v34 | v32)
        {
          v38 = v0 + 16;
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v32;
          *(_QWORD *)(v0 + 40) = v34;
        }
        *(_QWORD *)(v0 + 48) = 1;
        *(_QWORD *)(v0 + 56) = v38;
        *(_QWORD *)(v0 + 64) = v35;
        v39 = swift_task_create(v27 | 0x1100, v0 + 48, v37, &unk_100494D00, v36);
        swift_release(v39);
      }
      else
      {
        swift_release(v16);
        v3 = v54;
        v5 = v55;
      }
      sub_100031D8C(*(_QWORD *)(v0 + 160));
      v2 = v5 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v41 = *(void **)(v0 + 128);
  v40 = *(void **)(v0 + 136);
  v42 = *(void **)(v0 + 120);
  v43 = **(_QWORD **)(v0 + 80);
  v44 = unk_100494CF4;
  v56 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100494CF0
                                                                                     + dword_100494CF0);
  v45 = *(id *)(v0 + 112);
  v46 = v42;
  v47 = v41;
  v48 = v40;
  v49 = (_QWORD *)swift_task_alloc(v44);
  *(_QWORD *)(v0 + 168) = v49;
  *v49 = v0;
  v49[1] = sub_100195B68;
  return v56((uint64_t)&_swiftEmptyDictionarySingleton, v43, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_100195B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 168);
  v6 = *(void **)(*v2 + 128);
  v5 = *(void **)(*v2 + 136);
  v8 = *(void **)(*v2 + 112);
  v7 = *(void **)(*v2 + 120);
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc(v4);

  return swift_task_switch(sub_100195BEC, 0, 0);
}

uint64_t sub_100195BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  char *v5;

  v1 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(char ***)(v0 + 72);
  swift_bridgeObjectRetain();
  v5 = sub_1001993C8((uint64_t)&off_10043EFE0, v1);
  swift_bridgeObjectRelease_n(v1, 2);
  *v4 = v5;
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100195C6C(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v12;

  *(_QWORD *)(v10 + 64) = a10;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 48) = a8;
  *(_QWORD *)(v10 + 56) = a9;
  *(_QWORD *)(v10 + 40) = a7;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 80) = a6;
  *(_QWORD *)(v10 + 16) = a1;
  return swift_task_switch(sub_100195CA0, 0, 0);
}

uint64_t sub_100195CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_BYTE *)(v0 + 80);
  *(_BYTE *)v6 = v7;
  PlaylistCovers.Expression.generate(size:colors:graphicsFormat:)(v5, v3, v4, v1, v2, v7);
  *(_QWORD *)(v6 + 8) = v8;
  *(_QWORD *)(v6 + 16) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CGColorSpaceRef sub_100195CEC()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateDeviceRGB();
  qword_1004A22E0 = (uint64_t)result;
  return result;
}

void sub_100195D08(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  CGColorSpace *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  const __CFArray *isa;
  CGGradient *v20;
  CGContext *v21;
  CGColorSpace *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  CGColorSpace *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  const __CFArray *v37;
  CGGradient *v38;
  CGContext *v39;
  CGColorSpace *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  const __CFArray *v47;
  CGGradient *v48;
  CGContext *v49;
  CGColorSpace *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  const __CFArray *v55;
  CGGradient *v56;
  CGContext *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;
  CGPoint v70;
  CGPoint v71;
  CGPoint v72;
  CGPoint v73;
  CGPoint v74;
  CGPoint v75;
  CGPoint v76;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a2, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v15 = (CGColorSpace *)qword_1004A22E0;
  v16 = sub_100005574((uint64_t *)&unk_100491910);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100384B70;
  *(_QWORD *)(v17 + 32) = objc_msgSend(a2, "CGColor");
  v18 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v17 + 40) = v18;
  v66 = v17;
  specialized Array._endMutation()(v18);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v65 = xmmword_100384BD0;
  v20 = CGGradientCreateWithColors(v15, isa, (const CGFloat *)&v65);

  if (v20)
  {
    v21 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = 0.0;
    v67.y = 0.0;
    v72.x = a4;
    v72.y = a5;
    CGContextDrawLinearGradient(v21, v20, v67, v72, 0);

  }
  v22 = (CGColorSpace *)qword_1004A22E0;
  v23 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100384B00;
  *(_QWORD *)(v23 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v23 + 40) = objc_msgSend(a7, "CGColor");
  v24 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v23 + 48) = v25;
  v66 = v23;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v63 = xmmword_100384BE0;
  v64 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v22, v27, (const CGFloat *)&v63);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v68.x = a4;
    v68.y = a5;
    v73.x = a4;
    v73.y = a5;
    CGContextDrawRadialGradient(v29, v28, v68, 0.0, v73, a4, 0);

  }
  v30 = (CGColorSpace *)qword_1004A22E0;
  v31 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100384B00;
  *(_QWORD *)(v31 + 32) = objc_msgSend(a3, "CGColor");
  v32 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v33 = objc_msgSend(v32, "CGColor");

  *(_QWORD *)(v31 + 40) = v33;
  v34 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v35 = objc_msgSend(v34, "CGColor");

  *(_QWORD *)(v31 + 48) = v35;
  v66 = v31;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v61 = xmmword_100384BF0;
  v62 = 0x3FF0000000000000;
  v38 = CGGradientCreateWithColors(v30, v37, (const CGFloat *)&v61);

  if (v38)
  {
    v39 = (CGContext *)objc_msgSend(a1, "CGContext");
    v69.x = 0.0;
    v74.x = 0.0;
    v69.y = a5;
    v74.y = a5;
    CGContextDrawRadialGradient(v39, v38, v69, 0.0, v74, a4, 0);

  }
  v40 = (CGColorSpace *)qword_1004A22E0;
  v41 = swift_allocObject(v16, 56, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100384B00;
  *(_QWORD *)(v41 + 32) = objc_msgSend(a3, "CGColor");
  v42 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v43 = objc_msgSend(v42, "CGColor");

  *(_QWORD *)(v41 + 40) = v43;
  v44 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
  v45 = objc_msgSend(v44, "CGColor");

  *(_QWORD *)(v41 + 48) = v45;
  v66 = v41;
  specialized Array._endMutation()(v46);
  v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v59 = xmmword_100384BF0;
  v60 = 0x3FF0000000000000;
  v48 = CGGradientCreateWithColors(v40, v47, (const CGFloat *)&v59);

  if (v48)
  {
    v49 = (CGContext *)objc_msgSend(a1, "CGContext");
    v70.y = 0.0;
    v75.y = 0.0;
    v70.x = a4;
    v75.x = a4;
    CGContextDrawRadialGradient(v49, v48, v70, 0.0, v75, a4, 0);

  }
  v50 = (CGColorSpace *)qword_1004A22E0;
  v51 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100384B70;
  *(_QWORD *)(v51 + 32) = objc_msgSend(a2, "CGColor");
  v52 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v53 = objc_msgSend(v52, "CGColor");

  *(_QWORD *)(v51 + 40) = v53;
  v66 = v51;
  specialized Array._endMutation()(v54);
  v55 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v58 = xmmword_100384BD0;
  v56 = CGGradientCreateWithColors(v50, v55, (const CGFloat *)&v58);

  if (v56)
  {
    v57 = (CGContext *)objc_msgSend(a1, "CGContext");
    v71.x = 0.0;
    v71.y = 0.0;
    v76.x = 0.0;
    v76.y = 0.0;
    CGContextDrawRadialGradient(v57, v56, v71, 0.0, v76, a4, 0);

  }
}

void sub_100196404(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, CGFloat a7, CGFloat a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  CGColorSpace *v19;
  CGFloat v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  const __CFArray *isa;
  CGGradient *v28;
  CGContext *v29;
  CGContext *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat MidY;
  CGFloat ty;
  CGFloat tx;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat MidX;
  CGFloat v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double v47;
  const CGPath *Mutable;
  CGContext *v49;
  id v50;
  void (*v51)(_QWORD);
  uint64_t v52;
  char *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  CGColorSpace *v74;
  id v75;
  id v76;
  const __CFArray *v77;
  CGGradient *v78;
  CGContext *v79;
  CGContext *v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  double v97;
  void *v98;
  void *v99;
  CGContext *v100;
  const CGPath *v101;
  CGContext *v102;
  id v103;
  uint64_t v104;
  char *v105;
  CGColorSpace *v106;
  CGFloat v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  const __CFArray *v112;
  CGGradient *v113;
  CGContext *v114;
  __int128 v115;
  __int128 v116;
  id v117;
  CGFloat v118[3];
  void (*v119)(char *, uint64_t);
  void (*v120)(char *, _QWORD, uint64_t);
  unsigned int v121;
  __int128 v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  uint64_t v127;
  id v128;
  __int128 v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  CGFloat v133[6];
  __int128 v134;
  CGAffineTransform v135;
  _OWORD v136[9];
  CGAffineTransform v137;
  _OWORD v138[2];
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGPoint v141;
  CGPoint v142;
  CGPoint v143;
  CGPoint v144;
  CGPoint v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;

  v126 = a6;
  v124 = a3;
  v132 = type metadata accessor for CGPathFillRule(0);
  v14 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a2;
  v16 = objc_msgSend(a2, "CGColor");
  v125 = a4;
  v17 = objc_msgSend(a4, "CGColor");
  v128 = a5;
  v18 = objc_msgSend(a5, "CGColor");
  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v19 = (CGColorSpace *)qword_1004A22E0;
  v130 = sub_100005574((uint64_t *)&unk_100491910);
  v20 = COERCE_DOUBLE(swift_allocObject(v130, 64, 7));
  *(_OWORD *)(*(_QWORD *)&v20 + 16) = xmmword_100384C00;
  *(_QWORD *)(*(_QWORD *)&v20 + 32) = v18;
  *(_QWORD *)(*(_QWORD *)&v20 + 40) = v18;
  *(_QWORD *)(*(_QWORD *)&v20 + 48) = v16;
  *(_QWORD *)(*(_QWORD *)&v20 + 56) = v16;
  t1.a = v20;
  specialized Array._endMutation()(*(_QWORD *)&v20);
  type metadata accessor for CGColor(0);
  v22 = v21;
  v23 = v18;
  v24 = v16;
  v25 = v23;
  v26 = v24;
  v127 = v22;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v138[0] = xmmword_100384C10;
  v138[1] = xmmword_100384C20;
  v28 = CGGradientCreateWithColors(v19, isa, (const CGFloat *)v138);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v141.x = 0.0;
    v141.y = 0.0;
    v144.x = a7;
    v144.y = a8;
    CGContextDrawLinearGradient(v29, v28, v141, v144, 0);

  }
  v30 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v30);

  v31 = a7 * -0.235;
  v32 = a7 * 1.47;
  v146.origin.x = a7 * -0.235;
  v146.origin.y = a8 * 0.15;
  v146.size.width = a7 * 1.47;
  v146.size.height = a8 * 0.7;
  v33 = -CGRectGetMidX(v146);
  v147.origin.x = a7 * -0.235;
  v147.origin.y = a8 * 0.15;
  v147.size.width = a7 * 1.47;
  v147.size.height = a8 * 0.7;
  MidY = CGRectGetMidY(v147);
  CGAffineTransformMakeTranslation(&t1, v33, -MidY);
  *(_OWORD *)v133 = *(_OWORD *)&t1.a;
  v129 = *(_OWORD *)&t1.c;
  tx = t1.tx;
  ty = t1.ty;
  v118[0] = -0.523598776;
  CGAffineTransformMakeRotation(&t1, -0.523598776);
  v37 = *(_OWORD *)&t1.a;
  v38 = *(_OWORD *)&t1.c;
  v39 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = *(_OWORD *)v133;
  *(_OWORD *)&t1.c = v129;
  t1.tx = tx;
  t1.ty = ty;
  *(_OWORD *)&t2.a = v37;
  *(_OWORD *)&t2.c = v38;
  *(_OWORD *)&t2.tx = v39;
  CGAffineTransformConcat(&v137, &t1, &t2);
  v129 = *(_OWORD *)&v137.a;
  v122 = *(_OWORD *)&v137.c;
  v40 = v137.tx;
  v133[0] = a7;
  v41 = v137.ty;
  v148.origin.x = v31;
  v148.origin.y = a8 * 0.15;
  v148.size.width = v32;
  v148.size.height = a8 * 0.7;
  MidX = CGRectGetMidX(v148);
  v149.origin.x = v31;
  v149.origin.y = a8 * 0.15;
  v149.size.width = v32;
  v149.size.height = a8 * 0.7;
  v43 = CGRectGetMidY(v149);
  CGAffineTransformMakeTranslation(&t1, MidX, v43);
  v44 = *(_OWORD *)&t1.a;
  v45 = *(_OWORD *)&t1.c;
  v46 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.a = v129;
  *(_OWORD *)&t1.c = v122;
  t1.tx = v40;
  t1.ty = v41;
  v47 = v133[0];
  *(_OWORD *)&t2.a = v44;
  *(_OWORD *)&t2.c = v45;
  *(_OWORD *)&t2.tx = v46;
  CGAffineTransformConcat(&v137, &t1, &t2);
  t1 = v137;
  Mutable = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(&t1, v31, a8 * 0.15, v32, a8 * 0.7);
  v49 = (CGContext *)objc_msgSend(a1, "CGContext");
  *(_QWORD *)&v122 = Mutable;
  CGContextAddPath(v49, Mutable);

  v50 = objc_msgSend(a1, "CGContext");
  v51 = *(void (**)(_QWORD))(v14 + 104);
  v53 = v131;
  v52 = v132;
  v121 = enum case for CGPathFillRule.winding(_:);
  v120 = (void (*)(char *, _QWORD, uint64_t))v51;
  v51(v131);
  CGContextRef.clip(using:)(v53);

  v119 = *(void (**)(char *, uint64_t))(v14 + 8);
  v119(v53, v52);
  v54 = COERCE_DOUBLE(swift_allocObject(v130, 176, 7));
  *(_OWORD *)(*(_QWORD *)&v54 + 16) = xmmword_100384C30;
  *(_QWORD *)(*(_QWORD *)&v54 + 32) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 40) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 48) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 56) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 64) = v26;
  *(_QWORD *)(*(_QWORD *)&v54 + 72) = v26;
  *(_QWORD *)(*(_QWORD *)&v54 + 80) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 88) = v25;
  *(_QWORD *)(*(_QWORD *)&v54 + 96) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 104) = v17;
  *(_QWORD *)(*(_QWORD *)&v54 + 112) = v25;
  v55 = v25;
  v56 = v17;
  v57 = v55;
  v58 = v56;
  v59 = v57;
  v60 = v26;
  v61 = v58;
  v62 = v59;
  *(_QWORD *)&v129 = v60;
  v63 = v61;
  v64 = v128;
  v65 = objc_msgSend(v128, "colorWithAlphaComponent:", 0.8);
  v66 = objc_msgSend(v65, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 120) = v66;
  v67 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.5);
  v68 = objc_msgSend(v67, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 128) = v68;
  v69 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.5);
  v70 = objc_msgSend(v69, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 136) = v70;
  v71 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.8);
  v72 = objc_msgSend(v71, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v54 + 144) = v72;
  *(_QWORD *)(*(_QWORD *)&v54 + 152) = v62;
  *(_QWORD *)(*(_QWORD *)&v54 + 160) = v63;
  *(_QWORD *)(*(_QWORD *)&v54 + 168) = v63;
  t2.a = v54;
  specialized Array._endMutation()(v73);
  v74 = (CGColorSpace *)qword_1004A22E0;
  v75 = v63;
  v76 = v62;
  v117 = v75;
  v77 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v136[0] = xmmword_100384C40;
  v136[1] = xmmword_100384C50;
  v136[2] = xmmword_100384C60;
  v136[3] = xmmword_100384C70;
  v136[4] = xmmword_100384C80;
  v136[5] = xmmword_100384C90;
  v136[6] = xmmword_100384CA0;
  v136[7] = xmmword_100384CB0;
  v136[8] = xmmword_100384CC0;
  v78 = CGGradientCreateWithColors(v74, v77, (const CGFloat *)v136);

  if (v78)
  {
    v79 = (CGContext *)objc_msgSend(a1, "CGContext");
    v142.x = v47 * 0.5;
    v142.y = a8 * 0.5;
    CGContextDrawConicGradient(v79, v78, v142, 0.0);

  }
  v80 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v80);

  v81 = v47 * 0.26375;
  v82 = v47 * 0.4725;
  v150.origin.x = v47 * 0.26375;
  v150.origin.y = a8 * 0.388888889;
  v150.size.width = v47 * 0.4725;
  v150.size.height = a8 * 0.2225;
  v83 = -CGRectGetMidX(v150);
  v151.origin.x = v47 * 0.26375;
  v151.origin.y = a8 * 0.388888889;
  v151.size.width = v47 * 0.4725;
  v151.size.height = a8 * 0.2225;
  v84 = CGRectGetMidY(v151);
  CGAffineTransformMakeTranslation(&t2, v83, -v84);
  v115 = *(_OWORD *)&t2.c;
  v116 = *(_OWORD *)&t2.a;
  v85 = t2.tx;
  v86 = t2.ty;
  CGAffineTransformMakeRotation(&t2, v118[0]);
  v87 = *(_OWORD *)&t2.a;
  v88 = *(_OWORD *)&t2.c;
  v89 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = v116;
  *(_OWORD *)&t2.c = v115;
  t2.tx = v85;
  t2.ty = v86;
  *(_OWORD *)&v137.a = v87;
  *(_OWORD *)&v137.c = v88;
  *(_OWORD *)&v137.tx = v89;
  CGAffineTransformConcat(&v135, &t2, &v137);
  *(_OWORD *)v118 = *(_OWORD *)&v135.a;
  v116 = *(_OWORD *)&v135.c;
  v90 = v135.tx;
  v91 = v135.ty;
  v152.origin.x = v81;
  v152.origin.y = a8 * 0.388888889;
  v152.size.width = v82;
  v152.size.height = a8 * 0.2225;
  v92 = CGRectGetMidX(v152);
  v153.origin.x = v81;
  v153.origin.y = a8 * 0.388888889;
  v153.size.width = v82;
  v153.size.height = a8 * 0.2225;
  v93 = CGRectGetMidY(v153);
  CGAffineTransformMakeTranslation(&t2, v92, v93);
  v94 = *(_OWORD *)&t2.a;
  v95 = *(_OWORD *)&t2.c;
  v96 = *(_OWORD *)&t2.tx;
  *(_OWORD *)&t2.a = *(_OWORD *)v118;
  *(_OWORD *)&t2.c = v116;
  t2.tx = v90;
  t2.ty = v91;
  v97 = v133[0];
  *(_OWORD *)&v137.a = v94;
  *(_OWORD *)&v137.c = v95;
  *(_OWORD *)&v137.tx = v96;
  CGAffineTransformConcat(&v135, &t2, &v137);
  t2 = v135;
  sub_100196EC8(v126, v123, v124, v125, v64, &t2, v81, a8 * 0.388888889, v82, a8 * 0.2225);
  v99 = v98;
  objc_msgSend(v98, "drawInRect:", 0.0, 0.0, v97, a8);

  v100 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetFillColorWithColor(v100, (CGColorRef)v129);

  v101 = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(&t2, v81, a8 * 0.388888889, v82, a8 * 0.2225);
  v102 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextAddPath(v102, v101);

  v103 = objc_msgSend(a1, "CGContext");
  v105 = v131;
  v104 = v132;
  v120(v131, v121, v132);
  CGContextRef.fillPath(using:)(v105);

  v119(v105, v104);
  v106 = (CGColorSpace *)qword_1004A22E0;
  v107 = COERCE_DOUBLE(swift_allocObject(v130, 48, 7));
  *(_OWORD *)(*(_QWORD *)&v107 + 16) = xmmword_100384B70;
  *(_QWORD *)(*(_QWORD *)&v107 + 32) = v76;
  v108 = v76;
  v109 = objc_msgSend(v64, "colorWithAlphaComponent:", 0.0);
  v110 = objc_msgSend(v109, "CGColor");

  *(_QWORD *)(*(_QWORD *)&v107 + 40) = v110;
  v137.a = v107;
  specialized Array._endMutation()(v111);
  v112 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v134 = xmmword_100384BD0;
  v113 = CGGradientCreateWithColors(v106, v112, (const CGFloat *)&v134);

  if (v113)
  {
    v114 = (CGContext *)objc_msgSend(a1, "CGContext");
    v143.y = 0.0;
    v145.y = 0.0;
    v143.x = v97 * 0.5;
    v145.x = v97 * 0.5;
    CGContextDrawRadialGradient(v114, v113, v143, 0.0, v145, v143.x, 0);

    v101 = v114;
  }
  else
  {
    v113 = (CGGradient *)v122;
  }

}

void sub_100196EC8(void *a1, void *a2, void *a3, void *a4, void *a5, _OWORD *a6, double a7, double a8, double a9, double a10)
{
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  __n128 v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  _QWORD v38[5];
  uint64_t v39;

  v20 = swift_allocObject(&unk_100452480, 128, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  *(_QWORD *)(v20 + 32) = a4;
  *(_QWORD *)(v20 + 40) = a5;
  *(double *)(v20 + 48) = a7;
  *(double *)(v20 + 56) = a8;
  *(double *)(v20 + 64) = a9;
  *(double *)(v20 + 72) = a10;
  v21 = a6[1];
  *(_OWORD *)(v20 + 80) = *a6;
  *(_OWORD *)(v20 + 96) = v21;
  *(_OWORD *)(v20 + 112) = a6[2];
  v22 = swift_allocObject(&unk_1004524A8, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_10019A220;
  *(_QWORD *)(v22 + 24) = v20;
  v38[4] = sub_10000AD24;
  v39 = v22;
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 1107296256;
  v38[2] = sub_1000E776C;
  v38[3] = &unk_1004524C0;
  v23 = _Block_copy(v38);
  v24 = v39;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = a5;
  swift_retain(v22);
  v29 = objc_msgSend(a1, "imageWithActions:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation(v22, "", 127, 237, 59, 1, v30);
  *(_QWORD *)&v31 = swift_release(v22).n128_u64[0];
  if ((a5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v32 = objc_msgSend(v29, "CGImage", v31);
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(objc_allocWithZone((Class)CIImage), "initWithCGImage:", v32);
      v35 = objc_msgSend(v34, "imageByClampingToExtent");
      v36 = objc_msgSend(v35, "imageByApplyingGaussianBlurWithSigma:", 20.0);
      objc_msgSend(v34, "extent");
      v37 = objc_msgSend(v36, "imageByCroppingToRect:");
      objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCIImage:", v37);
      swift_release(v20);

    }
    else
    {
      swift_release(v20);
    }
  }
}

uint64_t sub_100197154(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  CGContext *v21;
  id v22;
  CGColor *v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  uint64_t v28;

  v17 = type metadata accessor for CGPathFillRule(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (CGContext *)objc_msgSend(a1, "CGContext");
  v22 = objc_msgSend(a9, "colorWithAlphaComponent:", 0.55);
  v23 = (CGColor *)objc_msgSend(v22, "CGColor");

  CGContextSetFillColorWithColor(v21, v23);
  Mutable = CGPathCreateMutable();
  CGMutablePathRef.addEllipse(in:transform:)(a10, a2, a3, a4, a5);
  v25 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextAddPath(v25, Mutable);

  v26 = objc_msgSend(a1, "CGContext");
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for CGPathFillRule.winding(_:), v17);
  CGContextRef.fillPath(using:)(v20);

  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

void sub_100197300(void *a1, void *a2, void *a3, void *a4, double a5, CGFloat a6)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGContext *v19;
  double v20;
  CGColorSpace *v21;
  uint64_t v22;
  id v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGContext *v27;
  CGColorSpace *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  const __CFArray *v33;
  CGGradient *v34;
  CGContext *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[3];
  _OWORD v41[3];
  uint64_t v42;
  CGPoint v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;

  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v12 = (CGColorSpace *)qword_1004A22E0;
  v13 = sub_100005574((uint64_t *)&unk_100491910);
  v14 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100384CD0;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v14 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v14 + 64) = objc_msgSend(a3, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 72) = v15;
  v42 = v14;
  specialized Array._endMutation()(v15);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41[0] = xmmword_100384CE0;
  v41[1] = xmmword_100384CF0;
  v41[2] = xmmword_100384D00;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v43.x = 0.0;
    v43.y = 0.0;
    v46.x = 0.0;
    v46.y = a6;
    CGContextDrawLinearGradient(v18, v17, v43, v46, 0);

  }
  v19 = (CGContext *)objc_msgSend(a1, "CGContext", 0x3FE999999999999ALL, 0x3FF0000000000000, 0x3FD3D70A3D70A3D7, 0x3FE051EB851EB852, 0, 0x3FC47AE147AE147BLL);
  CGContextSaveGState(v19);

  v20 = a5 * 0.5;
  objc_msgSend(a1, "clipToRect:", v20, 0.0, v20, a6);
  v21 = (CGColorSpace *)qword_1004A22E0;
  v22 = swift_allocObject(v13, 80, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100384CD0;
  *(_QWORD *)(v22 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v22 + 48) = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 56) = objc_msgSend(a4, "CGColor");
  *(_QWORD *)(v22 + 64) = objc_msgSend(a3, "CGColor");
  v23 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v22 + 72) = v23;
  v42 = v22;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v40[0] = v38;
  v40[1] = v37;
  v40[2] = v36;
  v25 = CGGradientCreateWithColors(v21, v24, (const CGFloat *)v40);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v47.y = 0.0;
    v44.x = v20;
    v44.y = a6;
    v47.x = v20;
    CGContextDrawLinearGradient(v26, v25, v44, v47, 0);

  }
  v27 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextRestoreGState(v27);

  v28 = (CGColorSpace *)qword_1004A22E0;
  v29 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100384B70;
  *(_QWORD *)(v29 + 32) = objc_msgSend(a2, "CGColor");
  v30 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v31 = objc_msgSend(v30, "CGColor");

  *(_QWORD *)(v29 + 40) = v31;
  v42 = v29;
  specialized Array._endMutation()(v32);
  v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_100384BD0;
  v34 = CGGradientCreateWithColors(v28, v33, (const CGFloat *)&v39);

  if (v34)
  {
    v35 = (CGContext *)objc_msgSend(a1, "CGContext");
    v48.y = a6 * 0.5;
    v45.x = 0.0;
    v45.y = 0.0;
    v48.x = 0.0;
    CGContextDrawLinearGradient(v35, v34, v45, v48, 0);

  }
}

void sub_1001977D4(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGContext *v13;
  CGColor *v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  NSArray v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  double v35;
  CGGradientRef v36;
  CGGradient *v37;
  double v38;
  objc_class *isa;
  CGContext *v40;
  CGContext *v41;
  CGContext *v42;
  uint64_t v43;
  CGColorSpace *v44;
  uint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  const __CFArray *v49;
  CGGradient *v50;
  CGContext *v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  CGPoint v66;
  CGPoint v67;
  CGPoint v68;
  CGPoint v69;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  v14 = (CGColor *)objc_msgSend(a7, "CGColor");
  CGContextSetFillColorWithColor(v13, v14);

  v15 = 0.0;
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a4, a5);
  v52 = sub_100005574((uint64_t *)&unk_100491910);
  v16 = swift_allocObject(v52, 56, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100384B00;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a3, "CGColor");
  v53 = a7;
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 48) = v18;
  v65 = v16;
  specialized Array._endMutation()(v19);
  type metadata accessor for CGColor(0);
  v20.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v21 = 9.0;
  v22 = &v55;
  v23 = sub_100005574(&qword_100494D18);
  v24 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100384A40;
  *(_OWORD *)(v24 + 32) = xmmword_100384D10;
  *(_QWORD *)(v24 + 48) = 0x3FF0000000000000;
  v56 = v24;
  v25 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100384A40;
  *(_OWORD *)(v25 + 32) = xmmword_100384D10;
  *(_QWORD *)(v25 + 48) = 0x3FF0000000000000;
  v57 = v25;
  v26 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100384A40;
  *(_OWORD *)(v26 + 32) = xmmword_100384D20;
  *(_QWORD *)(v26 + 48) = 0x3FF0000000000000;
  v58 = v26;
  v27 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100384A40;
  *(_OWORD *)(v27 + 32) = xmmword_100384D10;
  *(_QWORD *)(v27 + 48) = 0x3FF0000000000000;
  v59 = v27;
  v28 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100384A40;
  *(_OWORD *)(v28 + 32) = xmmword_100384D30;
  *(_QWORD *)(v28 + 48) = 0x3FF0000000000000;
  v60 = v28;
  v29 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100384A40;
  *(_OWORD *)(v29 + 32) = xmmword_100384D30;
  *(_QWORD *)(v29 + 48) = 0x3FF0000000000000;
  v61 = v29;
  v30 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100384A40;
  *(_OWORD *)(v30 + 32) = xmmword_100384D40;
  *(_QWORD *)(v30 + 48) = 0x3FF0000000000000;
  v62 = v30;
  v31 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100384A40;
  *(_OWORD *)(v31 + 32) = xmmword_100384D30;
  *(_QWORD *)(v31 + 48) = 0x3FF0000000000000;
  v63 = v31;
  v32 = swift_allocObject(v23, 56, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100384A40;
  *(_OWORD *)(v32 + 32) = xmmword_100384D30;
  *(_QWORD *)(v32 + 48) = 0x3FF0000000000000;
  v64 = v32;
  if (qword_10048C8E8 != -1)
    goto LABEL_15;
  while (1)
  {
    v33 = 0;
    v34 = v22 + 32;
    v21 = a4 / v21;
LABEL_3:
    v22 = (char *)(v33 + 1);
    if (__OFADD__(v33, 1))
      goto LABEL_14;
    if (v33 <= 8)
      break;
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once(&qword_10048C8E8, sub_100195CEC);
  }
  while (1)
  {
    v35 = *((double *)&off_10043F008 + v33 + 4);
    v36 = CGGradientCreateWithColors((CGColorSpaceRef)qword_1004A22E0, v20.super.isa, (const CGFloat *)(*(_QWORD *)&v34[8 * v33] + 32));
    if (v36)
    {
      v37 = v36;
      v38 = v35 * a5;
      isa = v20.super.isa;
      v40 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextSaveGState(v40);
      swift_bridgeObjectRetain();

      objc_msgSend(a1, "clipToRect:", v15, a5 - v38, v21, v38);
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v66.x = v15;
      v66.y = a5;
      v68.x = v15;
      v68.y = a5 - v38;
      CGContextDrawLinearGradient(v41, v37, v66, v68, 0);

      v42 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextRestoreGState(v42);
      swift_bridgeObjectRelease();

      v20.super.isa = isa;
    }
    if (v33 == 8)
      break;
    v15 = v21 + v15;
    v33 = (unint64_t)v22;
    if (v22 != (char *)8)
      goto LABEL_3;
    v22 = 0;
  }
  v43 = sub_100005574(&qword_100494D20);
  swift_arrayDestroy(v34, 9, v43);
  v44 = (CGColorSpace *)qword_1004A22E0;
  v45 = swift_allocObject(v52, 48, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100384B70;
  *(_QWORD *)(v45 + 32) = objc_msgSend(v53, "CGColor");
  v46 = objc_msgSend(v53, "colorWithAlphaComponent:", 0.0);
  v47 = objc_msgSend(v46, "CGColor");

  *(_QWORD *)(v45 + 40) = v47;
  v65 = v45;
  specialized Array._endMutation()(v48);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v54 = xmmword_100384BD0;
  v50 = CGGradientCreateWithColors(v44, v49, (const CGFloat *)&v54);

  if (v50)
  {
    v51 = (CGContext *)objc_msgSend(a1, "CGContext");
    v67.x = a4 * 0.145;
    v67.y = a5 * 0.23;
    v69.x = a4 * 0.145;
    v69.y = a5 * 0.23;
    CGContextDrawRadialGradient(v51, v50, v67, 0.0, v69, a4 * 0.3715, 0);

    v20.super.isa = v51;
  }

}

void sub_100197DCC(void *a1, void *a2, double a3, double a4, uint64_t a5, void *a6, void *a7)
{
  CGColorSpace *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const __CFArray *isa;
  CGGradient *v18;
  CGContext *v19;
  CGColorSpace *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  const __CFArray *v27;
  CGGradient *v28;
  CGContext *v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;
  CGPoint v34;
  CGPoint v35;
  CGPoint v36;

  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v13 = (CGColorSpace *)qword_1004A22E0;
  v14 = sub_100005574((uint64_t *)&unk_100491910);
  v15 = swift_allocObject(v14, 80, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100384CD0;
  *(_QWORD *)(v15 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 40) = objc_msgSend(a6, "CGColor");
  *(_QWORD *)(v15 + 48) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 56) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v15 + 64) = objc_msgSend(a6, "CGColor");
  v16 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v15 + 72) = v16;
  v33 = v15;
  specialized Array._endMutation()(v16);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_100384D50;
  v32[1] = xmmword_100384D60;
  v32[2] = xmmword_100384D70;
  v18 = CGGradientCreateWithColors(v13, isa, (const CGFloat *)v32);

  if (v18)
  {
    v19 = (CGContext *)objc_msgSend(a1, "CGContext");
    v34.x = a3 * 0.5;
    v34.y = a4 * 0.5;
    CGContextDrawConicGradient(v19, v18, v34, -0.77562432);

  }
  v20 = (CGColorSpace *)qword_1004A22E0;
  v21 = swift_allocObject(v14, 56, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100384B00;
  *(_QWORD *)(v21 + 32) = objc_msgSend(a2, "CGColor");
  v22 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.7);
  v23 = objc_msgSend(v22, "CGColor");

  *(_QWORD *)(v21 + 40) = v23;
  v24 = objc_msgSend(a2, "colorWithAlphaComponent:", 0.0);
  v25 = objc_msgSend(v24, "CGColor");

  *(_QWORD *)(v21 + 48) = v25;
  v33 = v21;
  specialized Array._endMutation()(v26);
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v30 = xmmword_100384D80;
  v31 = 0x3FF0000000000000;
  v28 = CGGradientCreateWithColors(v20, v27, (const CGFloat *)&v30);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v36.y = a4 * 0.5;
    v35.x = 0.0;
    v35.y = 0.0;
    v36.x = 0.0;
    CGContextDrawLinearGradient(v29, v28, v35, v36, 0);

  }
}

void sub_100198134(void *a1, void *a2, void *a3, double a4, CGFloat a5, uint64_t a6, void *a7)
{
  CGColorSpace *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  const __CFArray *isa;
  CGGradient *v17;
  CGContext *v18;
  CGColorSpace *DeviceRGB;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  const __CFArray *v24;
  CGGradient *v25;
  CGContext *v26;
  CGColorSpace *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  const __CFArray *v34;
  CGGradient *v35;
  CGContext *v36;
  _OWORD v38[2];
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  CGPoint v44;
  CGPoint v45;
  CGPoint v46;
  CGPoint v47;
  CGPoint v48;
  CGPoint v49;

  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v12 = (CGColorSpace *)qword_1004A22E0;
  v13 = sub_100005574((uint64_t *)&unk_100491910);
  v14 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100384B00;
  *(_QWORD *)(v14 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v14 + 40) = objc_msgSend(a2, "CGColor");
  v15 = objc_msgSend(a3, "CGColor");
  *(_QWORD *)(v14 + 48) = v15;
  v43 = v14;
  specialized Array._endMutation()(v15);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v41 = xmmword_100384D90;
  v42 = 0x3FF0000000000000;
  v17 = CGGradientCreateWithColors(v12, isa, (const CGFloat *)&v41);

  if (v17)
  {
    v18 = (CGContext *)objc_msgSend(a1, "CGContext");
    v44.x = 0.0;
    v44.y = 0.0;
    v47.x = 0.0;
    v47.y = a5;
    CGContextDrawLinearGradient(v18, v17, v44, v47, 0);

  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v20 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100384B00;
  *(_QWORD *)(v20 + 32) = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v20 + 40) = objc_msgSend(a7, "CGColor");
  v21 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v22 = objc_msgSend(v21, "CGColor");

  *(_QWORD *)(v20 + 48) = v22;
  v43 = v20;
  specialized Array._endMutation()(v23);
  v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v39 = xmmword_100384DA0;
  v40 = 0x3FF0000000000000;
  v25 = CGGradientCreateWithColors(DeviceRGB, v24, (const CGFloat *)&v39);

  if (v25)
  {
    v26 = (CGContext *)objc_msgSend(a1, "CGContext");
    v45.x = a4 * 0.5;
    v45.y = a5 * 0.907407407;
    v48.y = a5 * 0.5;
    v48.x = a4 * 0.5;
    CGContextDrawRadialGradient(v26, v25, v45, a4 * 0.0185185185, v48, a4 * 0.472222222, 3u);

  }
  v27 = CGColorSpaceCreateDeviceRGB();
  v28 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100384C00;
  *(_QWORD *)(v28 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v28 + 40) = objc_msgSend(a2, "CGColor");
  v29 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v30 = objc_msgSend(v29, "CGColor");

  *(_QWORD *)(v28 + 48) = v30;
  v31 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v32 = objc_msgSend(v31, "CGColor");

  *(_QWORD *)(v28 + 56) = v32;
  v43 = v28;
  specialized Array._endMutation()(v33);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v38[0] = xmmword_100384D20;
  v38[1] = xmmword_100384D00;
  v35 = CGGradientCreateWithColors(v27, v34, (const CGFloat *)v38);

  if (v35)
  {
    v36 = (CGContext *)objc_msgSend(a1, "CGContext");
    v46.x = a4 * 0.5;
    v46.y = a5 * 0.907407407;
    v49.y = a5 * 0.5;
    v49.x = a4 * 0.5;
    CGContextDrawRadialGradient(v36, v35, v46, a4 * 0.0185185185, v49, a4 * 0.472222222, 3u);

  }
}

void sub_1001985C4(double a1, double a2, double a3, double a4)
{
  id v8;
  NSString v9;
  id v10;

  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v8 = (id)qword_1004A1DA0;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:inBundle:", v9, v8);

  if (v10)
  {
    objc_msgSend(v10, "drawInRect:", a1, a2, a3, a4);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001986C0(void *a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, uint64_t a10, void *a11, void *a12)
{
  CGColorSpace *DeviceRGB;
  uint64_t v24;
  uint64_t v25;
  id v26;
  const __CFArray *isa;
  CGGradient *v28;
  CGContext *v29;
  CGContext *v30;
  CGContext *v31;
  CGContext *v32;
  CGContext *v33;
  CGImage *v34;
  CGImage *v35;
  CGColorSpace *v36;
  uint64_t v37;
  id v38;
  const __CFArray *v39;
  CGGradient *v40;
  CGContext *v41;
  CGContext *v42;
  CGColorSpace *v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  const __CFArray *v48;
  CGGradient *v49;
  CGContext *v50;
  __int128 v51;
  _OWORD v52[2];
  _OWORD v53[2];
  uint64_t v54;
  CGPoint v55;
  CGPoint v56;
  CGPoint v57;
  CGPoint v58;
  CGPoint v59;
  CGPoint v60;
  CGRect v61;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v24 = sub_100005574((uint64_t *)&unk_100491910);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100384C00;
  *(_QWORD *)(v25 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v25 + 48) = objc_msgSend(a3, "CGColor");
  v26 = objc_msgSend(a11, "CGColor");
  *(_QWORD *)(v25 + 56) = v26;
  v54 = v25;
  specialized Array._endMutation()(v26);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v53[0] = xmmword_100384DB0;
  v53[1] = xmmword_100384DC0;
  v28 = CGGradientCreateWithColors(DeviceRGB, isa, (const CGFloat *)v53);

  if (v28)
  {
    v29 = (CGContext *)objc_msgSend(a1, "CGContext");
    v55.x = a4 * 0.324074074;
    v58.x = a4 * 0.724074074;
    v55.y = 0.0;
    v58.y = a5;
    CGContextDrawLinearGradient(v29, v28, v55, v58, 3u);

  }
  v30 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v30);

  v31 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextTranslateCTM(v31, 0.0, a9);

  v32 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextScaleCTM(v32, 1.0, -1.0);

  v33 = (CGContext *)objc_msgSend(a1, "CGContext");
  v34 = (CGImage *)objc_msgSend(a12, "CGImage");
  if (v34)
  {
    v35 = v34;
    v61.origin.x = a6;
    v61.origin.y = a7;
    v61.size.width = a8;
    v61.size.height = a9;
    CGContextClipToMask(v33, v61, v34);

    v36 = CGColorSpaceCreateDeviceRGB();
    v37 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100384C00;
    *(_QWORD *)(v37 + 32) = objc_msgSend(a11, "CGColor");
    *(_QWORD *)(v37 + 40) = objc_msgSend(a3, "CGColor");
    *(_QWORD *)(v37 + 48) = objc_msgSend(a2, "CGColor");
    v38 = objc_msgSend(a2, "CGColor");
    *(_QWORD *)(v37 + 56) = v38;
    v54 = v37;
    specialized Array._endMutation()(v38);
    v39 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52[0] = xmmword_100384DD0;
    v52[1] = xmmword_100384DE0;
    v40 = CGGradientCreateWithColors(v36, v39, (const CGFloat *)v52);

    if (v40)
    {
      v41 = (CGContext *)objc_msgSend(a1, "CGContext");
      v56.y = 0.0;
      v59.x = 0.0;
      v56.x = a4;
      v59.y = a5;
      CGContextDrawLinearGradient(v41, v40, v56, v59, 0);

    }
    v42 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v42);

    v43 = CGColorSpaceCreateDeviceRGB();
    v44 = swift_allocObject(v24, 48, 7);
    *(_OWORD *)(v44 + 16) = xmmword_100384B70;
    *(_QWORD *)(v44 + 32) = objc_msgSend(a2, "CGColor");
    v45 = objc_msgSend(a3, "colorWithAlphaComponent:", 0.0);
    v46 = objc_msgSend(v45, "CGColor");

    *(_QWORD *)(v44 + 40) = v46;
    v54 = v44;
    specialized Array._endMutation()(v47);
    v48 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v51 = xmmword_100384BD0;
    v49 = CGGradientCreateWithColors(v43, v48, (const CGFloat *)&v51);

    if (v49)
    {
      v50 = (CGContext *)objc_msgSend(a1, "CGContext");
      v60.y = a5 * 0.5;
      v57.x = 0.0;
      v57.y = 0.0;
      v60.x = 0.0;
      CGContextDrawLinearGradient(v50, v49, v57, v60, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100198BC8(void *a1, void *a2, CGFloat a3, CGFloat a4, uint64_t a5, void *a6, void *a7)
{
  CGContext *v13;
  CGColorSpace *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  const __CFArray *isa;
  CGGradient *v21;
  CGContext *v22;
  CGColorSpace *v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  const __CFArray *v28;
  CGGradient *v29;
  CGContext *v30;
  __int128 v31;
  _OWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  CGPoint v35;
  CGPoint v36;
  CGPoint v37;
  CGPoint v38;

  v13 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSetBlendMode(v13, kCGBlendModeNormal);

  objc_msgSend(a2, "setFill");
  objc_msgSend(a1, "fillRect:", 0.0, 0.0, a3, a4);
  if (qword_10048C8E8 != -1)
    swift_once(&qword_10048C8E8, sub_100195CEC);
  v14 = (CGColorSpace *)qword_1004A22E0;
  v15 = sub_100005574((uint64_t *)&unk_100491910);
  v16 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100384B80;
  *(_QWORD *)(v16 + 32) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 40) = objc_msgSend(a2, "CGColor");
  *(_QWORD *)(v16 + 48) = objc_msgSend(a6, "CGColor");
  v17 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.9);
  v18 = objc_msgSend(v17, "CGColor");

  *(_QWORD *)(v16 + 56) = v18;
  v19 = objc_msgSend(a7, "CGColor");
  *(_QWORD *)(v16 + 64) = v19;
  v34 = v16;
  specialized Array._endMutation()(v19);
  type metadata accessor for CGColor(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32[0] = xmmword_100384DF0;
  v32[1] = xmmword_100384E00;
  v33 = 0x3FF0000000000000;
  v21 = CGGradientCreateWithColors(v14, isa, (const CGFloat *)v32);

  if (v21)
  {
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    v37.x = 0.0;
    v37.y = 0.0;
    v35.x = a3;
    v35.y = a4;
    CGContextDrawLinearGradient(v22, v21, v35, v37, 3u);

  }
  v23 = (CGColorSpace *)qword_1004A22E0;
  v24 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100384B70;
  *(_QWORD *)(v24 + 32) = objc_msgSend(a7, "CGColor");
  v25 = objc_msgSend(a7, "colorWithAlphaComponent:", 0.0);
  v26 = objc_msgSend(v25, "CGColor");

  *(_QWORD *)(v24 + 40) = v26;
  v34 = v24;
  specialized Array._endMutation()(v27);
  v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v31 = xmmword_100384BD0;
  v29 = CGGradientCreateWithColors(v23, v28, (const CGFloat *)&v31);

  if (v29)
  {
    v30 = (CGContext *)objc_msgSend(a1, "CGContext");
    v38.y = a4 * 0.5;
    v36.x = 0.0;
    v36.y = 0.0;
    v38.x = 0.0;
    CGContextDrawLinearGradient(v30, v29, v36, v38, 3u);

  }
}

uint64_t sub_100198F34(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  double v16;
  double v17;
  _BOOL4 v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  const CGPath *Mutable;
  CGContext *v25;
  id v26;
  BOOL v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  unsigned int v31;
  _QWORD v32[6];

  v6 = type metadata accessor for CGPathFillRule(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 / 3.0;
  if (a2 / 3.0 == 0.0)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  v12 = a2 >= 0.0;
  if (v11 > 0.0)
    v12 = a2 <= 0.0;
  if (!v12)
  {
    v13 = 0;
    v14 = a3 / 3.0;
    v15 = a3 >= 0.0;
    if (a3 / 3.0 > 0.0)
      v15 = a3 <= 0.0;
    v29 = v15;
    v16 = a2 / 6.3;
    v31 = enum case for CGPathFillRule.winding(_:);
    v17 = 0.0;
    v28 = a2;
    while (1)
    {
      v19 = __OFADD__(v13, 1);
      v20 = v13 + 1;
      if (v19)
        break;
      if (v14 == 0.0)
        goto LABEL_23;
      v30 = v20;
      if (!v29)
      {
        v21 = 0;
        v22 = 0.0;
        while (!__OFADD__(v21, 1))
        {
          v23 = (double)(v21 + 1) * v14 + 0.0;
          Mutable = CGPathCreateMutable();
          v32[1] = 0;
          v32[2] = 0;
          v32[0] = 0x3FF0000000000000;
          v32[3] = 0x3FF0000000000000;
          v32[4] = 0;
          v32[5] = 0;
          CGMutablePathRef.addRoundedRect(in:cornerWidth:cornerHeight:transform:)(v32, v17, v22, v11, v14, v16, a3 / 6.3);
          v25 = (CGContext *)objc_msgSend(a1, "CGContext");
          CGContextAddPath(v25, Mutable);

          v26 = objc_msgSend(a1, "CGContext");
          (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, v31, v6);
          CGContextRef.fillPath(using:)(v10);

          result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
          v27 = v23 <= a3;
          if (v14 > 0.0)
            v27 = v23 >= a3;
          ++v21;
          v22 = v23;
          if (v27)
            goto LABEL_9;
        }
        __break(1u);
        break;
      }
LABEL_9:
      v13 = v30;
      v17 = (double)v30 * v11 + 0.0;
      v18 = v17 <= v28;
      if (v11 > 0.0)
        v18 = v17 >= v28;
      if (v18)
        return result;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return result;
}

void sub_1001991AC(void *a1, int a2, int a3, int a4, id a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, void *a10, id *a11)
{
  CGContext *v18;
  CGContext *v19;
  CGImage *v20;
  CGImage *v21;
  CGContext *v22;
  CGRect v23;

  objc_msgSend(a5, "setFill");
  objc_msgSend(a1, "fillRect:blendMode:", 0, a6, a7, a8, a9);
  v18 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextSaveGState(v18);

  v19 = (CGContext *)objc_msgSend(a1, "CGContext");
  v20 = (CGImage *)objc_msgSend(a10, "CGImage");
  if (v20)
  {
    v21 = v20;
    v23.origin.x = a6;
    v23.origin.y = a7;
    v23.size.width = a8;
    v23.size.height = a9;
    CGContextClipToMask(v19, v23, v20);

    objc_msgSend(*a11, "drawInRect:blendMode:alpha:", 0, a6, a7, a8, a9, 1.0);
    v22 = (CGContext *)objc_msgSend(a1, "CGContext");
    CGContextRestoreGState(v22);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100199308(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_100199370;
  return v5(v2 + 16);
}

uint64_t sub_100199370()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v3 = *(_OWORD *)(v1 + 24);
  *(_BYTE *)v2 = *(_BYTE *)(v1 + 16);
  *(_OWORD *)(v2 + 8) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

char *sub_1001993C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_1000A5AA0(*(_BYTE *)(a1 + v5 + 32));
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 56 * v8;
        v11 = *(_BYTE *)v10;
        v23 = *(_OWORD *)(v10 + 24);
        v21 = *(_OWORD *)(v10 + 8);
        v22 = *(_OWORD *)(v10 + 40);
        v12 = (id)v21;
        v13 = *((id *)&v21 + 1);
        v14 = (id)v23;
        v15 = *((id *)&v23 + 1);
        v16 = (id)v22;
        v17 = *((id *)&v22 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
          v6 = sub_10003EA9C(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v19 = *((_QWORD *)v6 + 2);
        v18 = *((_QWORD *)v6 + 3);
        if (v19 >= v18 >> 1)
          v6 = sub_10003EA9C((char *)(v18 > 1), v19 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v19 + 1;
        v7 = &v6[56 * v19];
        v7[32] = v11;
        *(_OWORD *)(v7 + 40) = v21;
        *(_OWORD *)(v7 + 56) = v23;
        *(_OWORD *)(v7 + 72) = v22;
      }
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s9MusicCore14PlaylistCoversO10ExpressionO8rawValueAESgSi_tcfC_0(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
    return 8;
  else
    return a1 - 1;
}

void sub_10019956C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, double a6, double a7)
{
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  char isEscapingClosureAtFileLocation;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", a5, a6, a7);
  v14 = swift_allocObject(&unk_1004526D8, 48, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(double *)(v14 + 32) = a6;
  *(double *)(v14 + 40) = a7;
  v15 = swift_allocObject(&unk_100452700, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_10019A2E8;
  *(_QWORD *)(v15 + 24) = v14;
  v36 = sub_10000AD24;
  v37 = v15;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_1000E776C;
  v35 = &unk_100452718;
  v16 = _Block_copy(&aBlock);
  v17 = v37;
  swift_retain(v15);
  v18 = objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v15, "", 127, 485, 35, 1, v19);
  swift_release(v15);
  if ((v16 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v20 = swift_allocObject(&unk_100452750, 104, 7);
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_QWORD *)(v20 + 32) = a3;
  *(_QWORD *)(v20 + 40) = a4;
  *(double *)(v20 + 48) = a6;
  *(double *)(v20 + 56) = a7;
  *(_QWORD *)(v20 + 64) = 0;
  *(_QWORD *)(v20 + 72) = 0;
  *(double *)(v20 + 80) = a6;
  *(double *)(v20 + 88) = a7;
  *(_QWORD *)(v20 + 96) = v18;
  v21 = swift_allocObject(&unk_100452778, 32, 7);
  *(_QWORD *)(v21 + 16) = sub_10019A348;
  *(_QWORD *)(v21 + 24) = v20;
  v36 = sub_10000AD24;
  v37 = v21;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_1000E776C;
  v35 = &unk_100452790;
  v31 = v14;
  v22 = _Block_copy(&aBlock);
  v23 = v37;
  v24 = a1;
  v25 = a2;
  v26 = a3;
  v27 = a4;
  v28 = v18;
  swift_retain(v21);
  objc_msgSend(v13, "imageWithActions:", v22, swift_release(v23).n128_f64[0]);

  _Block_release(v22);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 127, 489, 36, 1, v29);
  swift_release(v20);
  swift_release(v31);
  swift_release(v21);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
}

uint64_t sub_100199830(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = *((_QWORD *)v2 + 2);
  v7 = v2[3];
  v8 = v2[4];
  v9 = *((_QWORD *)v2 + 5);
  v10 = *((_QWORD *)v2 + 6);
  v11 = *((_QWORD *)v2 + 7);
  v12 = *((_QWORD *)v2 + 8);
  v13 = *((_QWORD *)v2 + 9);
  v14 = (_QWORD *)swift_task_alloc(dword_100494CB4);
  *(_QWORD *)(v3 + 16) = v14;
  *v14 = v3;
  v14[1] = sub_10000F894;
  return sub_1001957F8(a1, a2, v6, v9, v10, v11, v12, v13, v7, v8);
}

unint64_t sub_1001998E0()
{
  unint64_t result;

  result = qword_100494CC8;
  if (!qword_100494CC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.Expression, &type metadata for PlaylistCovers.Expression);
    atomic_store(result, (unint64_t *)&qword_100494CC8);
  }
  return result;
}

uint64_t sub_100199924()
{
  return sub_10002FFB8(&qword_100494CD0, &qword_100494CD8, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t _s10ExpressionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10ExpressionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_100199A2C + 4 * byte_10038FDB5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_100199A60 + 4 * byte_10038FDB0[v4]))();
}

uint64_t sub_100199A60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100199A68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100199A70);
  return result;
}

uint64_t sub_100199A7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100199A84);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_100199A88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100199A90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.Expression()
{
  return &type metadata for PlaylistCovers.Expression;
}

uint64_t sub_100199AAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100199AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_BYTE *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = swift_task_alloc(dword_100494CE4);
  v9 = *(_OWORD *)(v1 + 56);
  v10 = *(_OWORD *)(v1 + 72);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_10000EA88;
  *(_QWORD *)(v8 + 72) = v7;
  *(_OWORD *)(v8 + 56) = v10;
  *(_OWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 24) = v5;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 80) = v4;
  *(_QWORD *)(v8 + 16) = a1;
  return swift_task_switch(sub_100195CA0, 0, 0);
}

uint64_t sub_100199B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v7 = sub_100005574(&qword_100494D08);
  v6[12] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[13] = v8;
  v6[14] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100199BFC, 0, 0);
}

uint64_t sub_100199BFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[7];
  v2 = sub_100005574(&qword_100494CA8);
  TaskGroup.makeAsyncIterator()(v1, v2);
  v3 = sub_10002FFB8(&qword_100494D10, &qword_100494D08, (uint64_t)&protocol conformance descriptor for TaskGroup<A>.Iterator);
  v0[15] = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100199CAC;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 2, v0[12], v3);
}

uint64_t sub_100199CAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 128));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_10019A080;
  }
  else
  {
    v2[17] = v2[6];
    v6 = sub_100199D3C;
  }
  return swift_task_switch(v6, 0, 0);
}

void sub_100199D3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 24);
  if (!v1)
  {
    v26 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(v26, *(_QWORD *)(v0 + 96));
    sub_10019A148(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
    swift_task_dealloc(v26);
    (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
    return;
  }
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(void **)(v0 + 80);
  v3 = *(void **)(v0 + 88);
  v6 = *(void **)(v0 + 64);
  v5 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 32);
  v8 = *(_BYTE *)(v0 + 16);
  v9 = v1;
  v10 = v7;
  v11 = v9;
  v12 = v10;
  v13 = v6;
  v14 = v5;
  v15 = v4;
  v16 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
  *(_QWORD *)(v0 + 40) = v2;
  v19 = sub_1000A5AA0(v8);
  v20 = *(_QWORD *)(v2 + 16);
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
  }
  else
  {
    v23 = v18;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 136) + 24) >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1001B6BF0();
    }
    else
    {
      sub_1001B53AC(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1000A5AA0(v8);
      if ((v23 & 1) != (v25 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Expression);
        return;
      }
      v19 = v24;
    }
    v27 = *(_QWORD **)(v0 + 40);
    *(_QWORD *)(v0 + 144) = v27;
    v29 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 64);
    v30 = *(_QWORD *)(v0 + 72);
    if ((v23 & 1) != 0)
    {
      v32 = v27[7] + 56 * v19;
      v33 = *(void **)(v32 + 16);
      v34 = v12;
      v35 = v11;
      v36 = *(void **)(v32 + 24);
      v37 = *(void **)(v32 + 32);
      v43 = *(void **)(v32 + 40);
      v44 = *(void **)(v32 + 48);
      v45 = *(_QWORD *)(v0 + 80);
      v46 = *(_QWORD *)(v0 + 88);

      v12 = v34;
      v11 = v35;

      *(_BYTE *)v32 = v8;
      *(_QWORD *)(v32 + 8) = v35;
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v30;
      *(_QWORD *)(v32 + 32) = v45;
      *(_QWORD *)(v32 + 40) = v46;
      *(_QWORD *)(v32 + 48) = v34;
LABEL_14:
      swift_bridgeObjectRelease();

      v42 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 152) = v42;
      *v42 = v0;
      v42[1] = sub_100199FF0;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
      return;
    }
    v27[(v19 >> 6) + 8] |= 1 << v19;
    *(_BYTE *)(v27[6] + v19) = v8;
    v38 = v27[7] + 56 * v19;
    *(_BYTE *)v38 = v8;
    *(_QWORD *)(v38 + 8) = v11;
    *(_QWORD *)(v38 + 16) = v31;
    *(_QWORD *)(v38 + 24) = v30;
    *(_QWORD *)(v38 + 32) = v29;
    *(_QWORD *)(v38 + 40) = v28;
    *(_QWORD *)(v38 + 48) = v12;
    v39 = v27[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (!v40)
    {
      v27[2] = v41;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_100199FF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 152));
  if (v0)
  {
    v2[20] = v0;
    v4 = v2[13];
    v3 = v2[14];
    v5 = v2[12];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = sub_10019A080;
  }
  else
  {
    v2[17] = v2[18];
    v6 = sub_100199D3C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10019A080()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10019A0B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A0D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_100494CFC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100494CF8 + dword_100494CF8))(a1, v4);
}

void sub_10019A148(uint64_t a1, void *a2, void *a3)
{
  if (a2)
  {

  }
}

uint64_t sub_10019A174()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A17C(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_100195D08);
}

uint64_t sub_10019A188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10019A1A8(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_10019A1B0()
{
  id *v0;

  return swift_deallocObject(v0, 72, 7);
}

void sub_10019A1F4(void *a1)
{
  uint64_t v1;

  sub_100196404(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 64), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56));
}

uint64_t sub_10019A208()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A218()
{
  return sub_10019A37C(128);
}

uint64_t sub_10019A220(void *a1)
{
  uint64_t v1;

  return sub_100197154(a1, *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), v1 + 80);
}

uint64_t sub_10019A238()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A248()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A250(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_100197300);
}

uint64_t sub_10019A25C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A26C()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A274(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_1001977D4);
}

uint64_t sub_10019A280()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A290()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A298(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_100197DCC);
}

uint64_t sub_10019A2A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A2B4()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A2BC(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_100198134);
}

uint64_t sub_10019A2C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A2D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_10019A2E8()
{
  double *v0;

  sub_1001985C4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10019A2F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A304()
{
  id *v0;

  return swift_deallocObject(v0, 104, 7);
}

void sub_10019A348(void *a1)
{
  uint64_t v1;

  sub_1001986C0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(CGFloat *)(v1 + 80), *(CGFloat *)(v1 + 88), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 96));
}

uint64_t sub_10019A364()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A374()
{
  return sub_10019A37C(64);
}

uint64_t sub_10019A37C(uint64_t a1)
{
  id *v1;

  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10019A3C4(uint64_t a1)
{
  return sub_10019A3D0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))sub_100198BC8);
}

uint64_t sub_10019A3D0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_10019A3E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A3F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A404(void *a1)
{
  uint64_t v1;

  return sub_100198F34(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_10019A40C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019A41C()
{
  id *v0;

  return swift_deallocObject(v0, 96, 7);
}

void sub_10019A460(void *a1)
{
  uint64_t v1;

  sub_1001991AC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(id *)(v1 + 40), *(CGFloat *)(v1 + 48), *(CGFloat *)(v1 + 56), *(CGFloat *)(v1 + 64), *(CGFloat *)(v1 + 72), *(void **)(v1 + 80), *(id **)(v1 + 88));
}

uint64_t sub_10019A478()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t Logger.playlistCovers.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C8F0 != -1)
    swift_once(&qword_10048C8F0, sub_10019C6CC);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.playlistCovers);
}

uint64_t PlaylistCovers.RecipeColors.description.getter(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(60);
  v8._object = (void *)0x80000001003B4620;
  v8._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x32726F6C6F63202CLL;
  v15._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x33726F6C6F63202CLL;
  v22._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x34726F6C6F63202CLL;
  v29._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

void UIView.Border.color.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t static PlaylistCovers.RecipeColors.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a5) & 1) != 0
    && (static NSObject.== infix(_:_:)(a2, a6) & 1) != 0
    && (static NSObject.== infix(_:_:)(a3, a7) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(a4, a8) & 1;
  }
  else
  {
    return 0;
  }
}

void PlaylistCovers.RecipeColors.hash(into:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;

  v9 = a2;
  NSObject.hash(into:)(a1);

  v10 = a3;
  NSObject.hash(into:)(a1);

  v11 = a4;
  NSObject.hash(into:)(a1);

  v12 = a5;
  NSObject.hash(into:)(a1);

}

Swift::Int PlaylistCovers.RecipeColors.hashValue.getter(void *a1, void *a2, void *a3, void *a4)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13);
  v8 = a1;
  NSObject.hash(into:)(v13);

  v9 = a2;
  NSObject.hash(into:)(v13);

  v10 = a3;
  NSObject.hash(into:)(v13);

  v11 = a4;
  NSObject.hash(into:)(v13);

  return Hasher._finalize()();
}

uint64_t sub_10019A970(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v7) & 1) != 0
    && (static NSObject.== infix(_:_:)(v2, v6) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v9) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(v4, v8) & 1;
  }
  else
  {
    return 0;
  }
}

Swift::Int sub_10019AA1C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

void sub_10019AAB8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(id *)v1;
  NSObject.hash(into:)(a1);

  v7 = v3;
  NSObject.hash(into:)(a1);

  v8 = v4;
  NSObject.hash(into:)(a1);

  v9 = v5;
  NSObject.hash(into:)(a1);

}

Swift::Int sub_10019AB4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v10[9];

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  Hasher.init(_seed:)(v10);
  v5 = v1;
  NSObject.hash(into:)(v10);

  v6 = v2;
  NSObject.hash(into:)(v10);

  v7 = v3;
  NSObject.hash(into:)(v10);

  v8 = v4;
  NSObject.hash(into:)(v10);

  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.recipeColorsForSource(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1[23] = a1;
  v2 = type metadata accessor for IndexPath(0);
  v1[24] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[25] = v3;
  v1[26] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v1[27] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[28] = v5;
  v1[29] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist.Entry(0);
  v1[30] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[31] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[32] = swift_task_alloc(v8);
  v1[33] = swift_task_alloc(v8);
  v9 = type metadata accessor for Track(0);
  v1[34] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v1[35] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[36] = swift_task_alloc(v11);
  v1[37] = swift_task_alloc(v11);
  v1[38] = swift_task_alloc(v11);
  v1[39] = swift_task_alloc(v11);
  v12 = sub_100005574(&qword_10048D990);
  v1[40] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[41] = swift_task_alloc(v13);
  v1[42] = swift_task_alloc(v13);
  v14 = sub_100005574(&qword_10048D9A0);
  v1[43] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v1[44] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[45] = swift_task_alloc(v16);
  v1[46] = swift_task_alloc(v16);
  v17 = type metadata accessor for PlaylistCovers.Source(0);
  v1[47] = v17;
  v1[48] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10019AD8C, 0, 0);
}

uint64_t sub_10019AD8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _UNKNOWN **v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  int v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  BOOL v95;
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t (*v111)();
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  void (*v118)(uint64_t, _QWORD);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;

  v1 = *(_QWORD *)(v0 + 376);
  v2 = *(_QWORD *)(v0 + 384);
  sub_10019E27C(*(_QWORD *)(v0 + 184), v2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v4 = **(_QWORD **)(v0 + 384);
      *(_QWORD *)(v0 + 448) = v4;
      v5 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v0 + 456) = v5;
      if (v5)
      {
        v6 = 0;
        v7 = *(_QWORD *)(v0 + 248);
        *(_DWORD *)(v0 + 580) = *(_DWORD *)(v7 + 80);
        *(_DWORD *)(v0 + 584) = enum case for Playlist.Entry.InternalItem.song(_:);
        *(_DWORD *)(v0 + 588) = enum case for Playlist.Entry.InternalItem.uploadedAudio(_:);
        *(_QWORD *)(v0 + 464) = *(_QWORD *)(v7 + 72);
        *(_QWORD *)(v0 + 472) = *(_QWORD *)(v7 + 16);
        v8 = &off_10048C000;
        while (1)
        {
          *(_QWORD *)(v0 + 480) = v6;
          v10 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v6, *(_QWORD *)(v0 + 240));
          v11 = Playlist.Entry.catalogID.getter(v10);
          *(_QWORD *)(v0 + 488) = v12;
          if (v12)
            break;
          if (v8[286] != (_UNKNOWN *)-1)
            swift_once(&qword_10048C8F0, sub_10019C6CC);
          v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
          v15 = *(_QWORD *)(v0 + 256);
          v14 = *(_QWORD *)(v0 + 264);
          v16 = *(_QWORD *)(v0 + 240);
          v17 = type metadata accessor for Logger(0, v12);
          sub_1000086B4(v17, (uint64_t)static Logger.playlistCovers);
          v18 = v13(v15, v14, v16);
          v19 = Logger.logObject.getter(v18);
          v20 = static os_log_type_t.default.getter();
          v21 = os_log_type_enabled(v19, v20);
          v22 = *(_QWORD *)(v0 + 248);
          v23 = *(_QWORD *)(v0 + 256);
          v24 = *(_QWORD *)(v0 + 240);
          if (v21)
          {
            v25 = swift_slowAlloc(12, -1);
            v26 = v8;
            v27 = swift_slowAlloc(32, -1);
            v133 = v27;
            *(_DWORD *)v25 = 136446210;
            v28 = (char *)Playlist.Entry.description.getter();
            *(_QWORD *)(v25 + 4) = sub_100019400(v28, v29, &v133);
            swift_bridgeObjectRelease();
            v9 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
            v9(v23, v24);
            _os_log_impl((void *)&_mh_execute_header, v19, v20, "No catalogID for Entry=%{public}s", (uint8_t *)v25, 0xCu);
            swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
            v30 = v27;
            v8 = v26;
            swift_slowDealloc(v30, -1, -1);
            swift_slowDealloc(v25, -1, -1);
          }
          else
          {
            v9 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
            v9(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
          }

          v9(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
          v6 = *(_QWORD *)(v0 + 480) + 1;
          if (v6 == *(_QWORD *)(v0 + 456))
            goto LABEL_42;
        }
        v86 = v11;
        v87 = v12;
        v88 = *(_DWORD *)(v0 + 588);
        v89 = *(_DWORD *)(v0 + 584);
        v91 = *(_QWORD *)(v0 + 224);
        v90 = *(_QWORD *)(v0 + 232);
        v92 = *(_QWORD *)(v0 + 216);
        Playlist.Entry.internalItem.getter(v11);
        v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 88))(v90, v92);
        v95 = v93 != v89 && v93 != v88;
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
        v96 = swift_task_alloc(dword_100494D3C);
        *(_QWORD *)(v0 + 496) = v96;
        *(_QWORD *)v96 = v0;
        *(_QWORD *)(v96 + 8) = sub_10019BCF0;
        *(_BYTE *)(v96 + 368) = v95;
        *(_QWORD *)(v96 + 336) = v86;
        *(_QWORD *)(v96 + 344) = v87;
        goto LABEL_47;
      }
LABEL_42:
      swift_bridgeObjectRelease();
    }
    else
    {
      v44 = **(void ***)(v0 + 384);
      *(_QWORD *)(v0 + 512) = v44;
      result = (uint64_t)objc_msgSend(v44, "totalItemCount");
      *(_QWORD *)(v0 + 520) = result;
      if (result < 0)
      {
        __break(1u);
        return result;
      }
      v46 = result;
      if (result)
      {
        v47 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 528) = v47;
          if (v47 == v46)
            break;
          v48 = *(void **)(v0 + 512);
          v50 = *(_QWORD *)(v0 + 200);
          v49 = *(_QWORD *)(v0 + 208);
          v51 = *(_QWORD *)(v0 + 192);
          IndexPath.init(item:section:)(v47, 0);
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
          v53 = objc_msgSend(v48, "itemAtIndexPath:", isa);
          *(_QWORD *)(v0 + 536) = v53;

          if ((objc_msgSend(v53, "respondsToSelector:", "innermostModelObject") & 1) != 0)
          {
            v54 = objc_msgSend(v53, "innermostModelObject");
            *(_QWORD *)(v0 + 544) = v54;
            objc_opt_self(MPModelSong);
            v55 = swift_dynamicCastObjCClass(v54);
            if (v55)
            {
              v109 = v55;
              v110 = (_QWORD *)swift_task_alloc(dword_100494D34);
              *(_QWORD *)(v0 + 552) = v110;
              *v110 = v0;
              v110[1] = sub_10019C174;
              v110[2] = v109;
              v111 = sub_1001A0F7C;
              return swift_task_switch(v111, 0, 0);
            }

          }
          swift_unknownObjectRelease(v53);
          v46 = *(_QWORD *)(v0 + 520);
          v47 = *(_QWORD *)(v0 + 528) + 1;
          if (v47 == v46)
          {

            goto LABEL_43;
          }
        }
        __break(1u);
        goto LABEL_50;
      }

    }
LABEL_43:
    if (qword_10048C8D8 == -1)
    {
LABEL_44:
      v97 = *(void **)algn_1004A22A8;
      v99 = (void *)qword_1004A22B0;
      v98 = (void *)unk_1004A22B8;
      v100 = *(_QWORD *)(v0 + 384);
      v101 = *(_QWORD *)(v0 + 360);
      v102 = *(_QWORD *)(v0 + 368);
      v104 = *(_QWORD *)(v0 + 328);
      v103 = *(_QWORD *)(v0 + 336);
      v105 = *(_QWORD *)(v0 + 312);
      v117 = *(_QWORD *)(v0 + 304);
      v119 = *(_QWORD *)(v0 + 296);
      v121 = *(_QWORD *)(v0 + 288);
      v123 = *(_QWORD *)(v0 + 264);
      v125 = *(_QWORD *)(v0 + 256);
      v127 = *(_QWORD *)(v0 + 232);
      v130 = *(_QWORD *)(v0 + 208);
      v132 = (id)qword_1004A22A0;
      v106 = v97;
      v107 = v99;
      v108 = v98;
      swift_task_dealloc(v100);
      swift_task_dealloc(v102);
      swift_task_dealloc(v101);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v105);
      swift_task_dealloc(v117);
      swift_task_dealloc(v119);
      swift_task_dealloc(v121);
      swift_task_dealloc(v123);
      swift_task_dealloc(v125);
      swift_task_dealloc(v127);
      swift_task_dealloc(v130);
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v132, v106, v107, v108);
    }
LABEL_50:
    swift_once(&qword_10048C8D8, sub_100192888);
    goto LABEL_44;
  }
  v31 = *(_QWORD *)(v0 + 368);
  v33 = *(_QWORD *)(v0 + 344);
  v32 = *(_QWORD *)(v0 + 352);
  v35 = *(_QWORD *)(v0 + 328);
  v34 = *(_QWORD *)(v0 + 336);
  v36 = *(_QWORD *)(v0 + 320);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v32 + 32))(v31, *(_QWORD *)(v0 + 384), v33);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  *(_QWORD *)(v0 + 392) = v37;
  v37(v35, v31, v33);
  v38 = sub_1001A12B0();
  *(_QWORD *)(v0 + 400) = v38;
  dispatch thunk of Collection.startIndex.getter(v33);
  *(_QWORD *)(v35 + *(int *)(v36 + 36)) = *(_QWORD *)(v0 + 168);
  sub_1001A12FC(v35, v34);
  v39 = *(int *)(v36 + 36);
  *(_DWORD *)(v0 + 568) = v39;
  v40 = *(_QWORD *)(v34 + v39);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), v33, v38);
  if (v40 == *(_QWORD *)(v0 + 176))
  {
LABEL_13:
    v41 = *(_QWORD *)(v0 + 368);
    v42 = *(_QWORD *)(v0 + 344);
    v43 = *(_QWORD *)(v0 + 352);
    sub_100008758(*(_QWORD *)(v0 + 336), &qword_10048D990);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    goto LABEL_43;
  }
  v115 = v0 + 136;
  *(_DWORD *)(v0 + 572) = enum case for Track.song(_:);
  *(_DWORD *)(v0 + 576) = enum case for Track.musicVideo(_:);
  while (1)
  {
    v116 = *(_DWORD *)(v0 + 576);
    v122 = *(_DWORD *)(v0 + 572);
    v120 = *(_QWORD *)(v0 + 400);
    v57 = *(_QWORD *)(v0 + 360);
    v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v126 = *(_QWORD *)(v0 + 352);
    v58 = *(_QWORD *)(v0 + 336);
    v59 = *(_QWORD *)(v0 + 344);
    v60 = *(_QWORD *)(v0 + 312);
    v128 = *(_QWORD *)(v0 + 304);
    v131 = *(_QWORD *)(v0 + 296);
    v61 = v58 + *(int *)(v0 + 568);
    v63 = *(_QWORD *)(v0 + 272);
    v62 = *(_QWORD *)(v0 + 280);
    v118 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v115, v61, v59, v120);
    v64 = *(void (**)(uint64_t))(v62 + 16);
    v64(v60);
    v118(v115, 0);
    v124(v57, v58, v59);
    dispatch thunk of Collection.formIndex(after:)(v61, v59, v120);
    v65 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
    *(_QWORD *)(v0 + 408) = v65;
    v65(v57, v59);
    v66 = v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v128, v60, v63);
    v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
    ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v131, v66, v63);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 88))(v131, v63);
    v68 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
    *(_QWORD *)(v0 + 416) = v68;
    v69 = v68(v131, v63);
    if (v67 == v122 || v67 == v116)
      break;
LABEL_25:
    v68(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v56 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v56 == *(_QWORD *)(v0 + 176))
      goto LABEL_13;
  }
  v70 = Track.catalogID.getter(v69);
  *(_QWORD *)(v0 + 424) = v71;
  if (!v71)
  {
    if (qword_10048C8F0 != -1)
      swift_once(&qword_10048C8F0, sub_10019C6CC);
    v72 = *(_QWORD *)(v0 + 304);
    v73 = *(_QWORD *)(v0 + 288);
    v74 = *(_QWORD *)(v0 + 272);
    v75 = type metadata accessor for Logger(0, v71);
    sub_1000086B4(v75, (uint64_t)static Logger.playlistCovers);
    v76 = v129(v73, v72, v74);
    v77 = Logger.logObject.getter(v76);
    v78 = static os_log_type_t.default.getter();
    v79 = os_log_type_enabled(v77, v78);
    v80 = *(_QWORD *)(v0 + 288);
    v81 = *(_QWORD *)(v0 + 272);
    if (v79)
    {
      v82 = swift_slowAlloc(12, -1);
      v83 = swift_slowAlloc(32, -1);
      v133 = v83;
      *(_DWORD *)v82 = 136446210;
      v84 = (char *)Track.description.getter();
      *(_QWORD *)(v82 + 4) = sub_100019400(v84, v85, &v133);
      swift_bridgeObjectRelease();
      v68(v80, v81);
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "No catalogID for Track=%{public}s", (uint8_t *)v82, 0xCu);
      swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);
    }
    else
    {
      v68(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_25;
  }
  v112 = v70;
  v113 = v71;
  v114 = swift_task_alloc(dword_100494D3C);
  *(_QWORD *)(v0 + 432) = v114;
  *(_QWORD *)v114 = v0;
  *(_QWORD *)(v114 + 8) = sub_10019B754;
  *(_BYTE *)(v114 + 368) = v67 != v122;
  *(_QWORD *)(v114 + 336) = v112;
  *(_QWORD *)(v114 + 344) = v113;
LABEL_47:
  v111 = sub_1001A02C4;
  return swift_task_switch(v111, 0, 0);
}

uint64_t sub_10019B754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = a4;
  v6 = v5[54];
  v5[55] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_10019B7C4, 0, 0);
}

uint64_t sub_10019B7C4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  int v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  id v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72;

  v1 = *(_QWORD *)(v0 + 440);
  (*(void (**)(_QWORD, _QWORD))(v0 + 416))(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
  if (v1)
  {
    v70 = *(id *)(v0 + 440);
    v65 = *(id *)(v0 + 40);
    v67 = *(id *)(v0 + 32);
    v63 = *(id *)(v0 + 48);
    v2 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    v3 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 344);
    sub_100008758(*(_QWORD *)(v0 + 336), &qword_10048D990);
    v2(v3, v4);
LABEL_7:
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v15 = *(_QWORD *)(v0 + 328);
    v14 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 304);
    v17 = *(_QWORD *)(v0 + 312);
    v19 = *(_QWORD *)(v0 + 288);
    v18 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 264);
    v57 = *(_QWORD *)(v0 + 256);
    v59 = *(_QWORD *)(v0 + 232);
    v61 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    swift_task_dealloc(v16);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v70, v67, v65, v63);
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
  if (v5 == *(_QWORD *)(v0 + 176))
  {
LABEL_4:
    v6 = *(_QWORD *)(v0 + 368);
    v7 = *(_QWORD *)(v0 + 344);
    v8 = *(_QWORD *)(v0 + 352);
    sub_100008758(*(_QWORD *)(v0 + 336), &qword_10048D990);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (qword_10048C8D8 != -1)
      swift_once(&qword_10048C8D8, sub_100192888);
    v9 = *(void **)algn_1004A22A8;
    v10 = (void *)qword_1004A22B0;
    v11 = (void *)unk_1004A22B8;
    v70 = (id)qword_1004A22A0;
    v67 = v9;
    v65 = v10;
    v63 = v11;
    goto LABEL_7;
  }
  v55 = v0 + 136;
  while (1)
  {
    v56 = *(_DWORD *)(v0 + 576);
    v62 = *(_DWORD *)(v0 + 572);
    v60 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v0 + 360);
    v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    v66 = *(_QWORD *)(v0 + 352);
    v24 = *(_QWORD *)(v0 + 336);
    v25 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 312);
    v68 = *(_QWORD *)(v0 + 304);
    v71 = *(_QWORD *)(v0 + 296);
    v27 = v24 + *(int *)(v0 + 568);
    v29 = *(_QWORD *)(v0 + 272);
    v28 = *(_QWORD *)(v0 + 280);
    v58 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v55, v27, v25, v60);
    v30 = *(void (**)(uint64_t))(v28 + 16);
    v30(v26);
    v58(v55, 0);
    v64(v23, v24, v25);
    dispatch thunk of Collection.formIndex(after:)(v27, v25, v60);
    v31 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    *(_QWORD *)(v0 + 408) = v31;
    v31(v23, v25);
    v32 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v68, v26, v29);
    v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v30;
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v71, v32, v29);
    v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 88))(v71, v29);
    v34 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
    *(_QWORD *)(v0 + 416) = v34;
    v35 = v34(v71, v29);
    if (v33 == v62 || v33 == v56)
      break;
LABEL_11:
    v34(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 272));
    v22 = *(_QWORD *)(*(_QWORD *)(v0 + 336) + *(int *)(v0 + 568));
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 400));
    if (v22 == *(_QWORD *)(v0 + 176))
      goto LABEL_4;
  }
  v36 = Track.catalogID.getter(v35);
  *(_QWORD *)(v0 + 424) = v37;
  if (!v37)
  {
    if (qword_10048C8F0 != -1)
      swift_once(&qword_10048C8F0, sub_10019C6CC);
    v38 = *(_QWORD *)(v0 + 304);
    v39 = *(_QWORD *)(v0 + 288);
    v40 = *(_QWORD *)(v0 + 272);
    v41 = type metadata accessor for Logger(0, v37);
    sub_1000086B4(v41, (uint64_t)static Logger.playlistCovers);
    v42 = v69(v39, v38, v40);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    v45 = os_log_type_enabled(v43, v44);
    v46 = *(_QWORD *)(v0 + 288);
    v47 = *(_QWORD *)(v0 + 272);
    if (v45)
    {
      v48 = swift_slowAlloc(12, -1);
      v49 = swift_slowAlloc(32, -1);
      v72 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = (char *)Track.description.getter();
      *(_QWORD *)(v48 + 4) = sub_100019400(v50, v51, &v72);
      swift_bridgeObjectRelease();
      v34(v46, v47);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "No catalogID for Track=%{public}s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);
    }
    else
    {
      v34(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    }

    goto LABEL_11;
  }
  v52 = v36;
  v53 = v37;
  v54 = swift_task_alloc(dword_100494D3C);
  *(_QWORD *)(v0 + 432) = v54;
  *(_QWORD *)v54 = v0;
  *(_QWORD *)(v54 + 8) = sub_10019B754;
  *(_BYTE *)(v54 + 368) = v33 != v62;
  *(_QWORD *)(v54 + 336) = v52;
  *(_QWORD *)(v54 + 344) = v53;
  return swift_task_switch(sub_1001A02C4, 0, 0);
}

uint64_t sub_10019BCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[7] = v4;
  v5[8] = a1;
  v5[9] = a2;
  v5[10] = a3;
  v5[11] = a4;
  v6 = v5[62];
  v5[63] = a1;
  swift_task_dealloc(v6);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_10019BD60, 0, 0);
}

uint64_t sub_10019BD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _UNKNOWN **v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;

  v1 = *(_QWORD *)(v0 + 504);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
  if (v1)
  {
    v55 = *(id *)(v0 + 72);
    v56 = *(id *)(v0 + 504);
    v53 = *(id *)(v0 + 88);
    v54 = *(id *)(v0 + 80);
    swift_bridgeObjectRelease();
LABEL_7:
    v7 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 368);
    v9 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 336);
    v10 = *(_QWORD *)(v0 + 304);
    v11 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 288);
    v12 = *(_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 264);
    v50 = *(_QWORD *)(v0 + 256);
    v51 = *(_QWORD *)(v0 + 232);
    v52 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v11);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v56, v55, v54, v53);
  }
  v2 = *(_QWORD *)(v0 + 480) + 1;
  if (v2 == *(_QWORD *)(v0 + 456))
  {
LABEL_4:
    swift_bridgeObjectRelease();
    if (qword_10048C8D8 != -1)
      swift_once(&qword_10048C8D8, sub_100192888);
    v3 = *(void **)algn_1004A22A8;
    v4 = (void *)qword_1004A22B0;
    v5 = (void *)unk_1004A22B8;
    v56 = (id)qword_1004A22A0;
    v55 = v3;
    v54 = v4;
    v53 = v5;
    goto LABEL_7;
  }
  v16 = &off_10048C000;
  while (1)
  {
    *(_QWORD *)(v0 + 480) = v2;
    v18 = (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v0 + 472))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 448)+ ((*(unsigned __int8 *)(v0 + 580) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 580))+ *(_QWORD *)(v0 + 464) * v2, *(_QWORD *)(v0 + 240));
    v19 = Playlist.Entry.catalogID.getter(v18);
    *(_QWORD *)(v0 + 488) = v20;
    if (v20)
      break;
    if (v16[286] != (_UNKNOWN *)-1)
      swift_once(&qword_10048C8F0, sub_10019C6CC);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    v23 = *(_QWORD *)(v0 + 256);
    v22 = *(_QWORD *)(v0 + 264);
    v24 = *(_QWORD *)(v0 + 240);
    v25 = type metadata accessor for Logger(0, v20);
    sub_1000086B4(v25, (uint64_t)static Logger.playlistCovers);
    v26 = v21(v23, v22, v24);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 256);
    v32 = *(_QWORD *)(v0 + 240);
    if (v29)
    {
      v33 = swift_slowAlloc(12, -1);
      v34 = v16;
      v35 = swift_slowAlloc(32, -1);
      v57 = v35;
      *(_DWORD *)v33 = 136446210;
      v36 = (char *)Playlist.Entry.description.getter();
      *(_QWORD *)(v33 + 4) = sub_100019400(v36, v37, &v57);
      swift_bridgeObjectRelease();
      v17 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v17(v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "No catalogID for Entry=%{public}s", (uint8_t *)v33, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      v38 = v35;
      v16 = v34;
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }
    else
    {
      v17 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v17(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
    }

    v17(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240));
    v2 = *(_QWORD *)(v0 + 480) + 1;
    if (v2 == *(_QWORD *)(v0 + 456))
      goto LABEL_4;
  }
  v39 = v19;
  v40 = v20;
  v41 = *(_DWORD *)(v0 + 588);
  v42 = *(_DWORD *)(v0 + 584);
  v44 = *(_QWORD *)(v0 + 224);
  v43 = *(_QWORD *)(v0 + 232);
  v45 = *(_QWORD *)(v0 + 216);
  Playlist.Entry.internalItem.getter(v19);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 88))(v43, v45);
  v48 = v46 != v42 && v46 != v41;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  v49 = swift_task_alloc(dword_100494D3C);
  *(_QWORD *)(v0 + 496) = v49;
  *(_QWORD *)v49 = v0;
  *(_QWORD *)(v49 + 8) = sub_10019BCF0;
  *(_BYTE *)(v49 + 368) = v48;
  *(_QWORD *)(v49 + 336) = v39;
  *(_QWORD *)(v49 + 344) = v40;
  return swift_task_switch(sub_1001A02C4, 0, 0);
}

uint64_t sub_10019C174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[12] = v4;
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = a3;
  v5[16] = a4;
  v6 = v5[69];
  v5[70] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_10019C1DC, 0, 0);
}

uint64_t sub_10019C1DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;

  v1 = *(_QWORD *)(v0 + 560);
  v2 = *(_QWORD *)(v0 + 536);

  swift_unknownObjectRelease(v2);
  if (v1)
  {
    v32 = *(id *)(v0 + 112);
    v33 = *(id *)(v0 + 560);
    v30 = *(id *)(v0 + 128);
    v31 = *(id *)(v0 + 120);

LABEL_7:
    v8 = *(_QWORD *)(v0 + 360);
    v7 = *(_QWORD *)(v0 + 368);
    v10 = *(_QWORD *)(v0 + 328);
    v9 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 304);
    v12 = *(_QWORD *)(v0 + 312);
    v14 = *(_QWORD *)(v0 + 288);
    v13 = *(_QWORD *)(v0 + 296);
    v15 = *(_QWORD *)(v0 + 264);
    v27 = *(_QWORD *)(v0 + 256);
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 208);
    swift_task_dealloc(*(_QWORD *)(v0 + 384));
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v11);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v33, v32, v31, v30);
  }
  v3 = *(_QWORD *)(v0 + 528) + 1;
  if (v3 == *(_QWORD *)(v0 + 520))
  {
LABEL_4:

    if (qword_10048C8D8 != -1)
      swift_once(&qword_10048C8D8, sub_100192888);
    v4 = *(void **)algn_1004A22A8;
    v5 = (void *)qword_1004A22B0;
    v6 = (void *)unk_1004A22B8;
    v33 = (id)qword_1004A22A0;
    v32 = v4;
    v31 = v5;
    v30 = v6;
    goto LABEL_7;
  }
  while (1)
  {
    *(_QWORD *)(v0 + 528) = v3;
    v17 = *(void **)(v0 + 512);
    v19 = *(_QWORD *)(v0 + 200);
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 192);
    IndexPath.init(item:section:)(v3, 0);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    v22 = objc_msgSend(v17, "itemAtIndexPath:", isa);
    *(_QWORD *)(v0 + 536) = v22;

    if ((objc_msgSend(v22, "respondsToSelector:", "innermostModelObject") & 1) != 0)
      break;
LABEL_9:
    swift_unknownObjectRelease(v22);
    v3 = *(_QWORD *)(v0 + 528) + 1;
    if (v3 == *(_QWORD *)(v0 + 520))
      goto LABEL_4;
  }
  v23 = objc_msgSend(v22, "innermostModelObject");
  *(_QWORD *)(v0 + 544) = v23;
  objc_opt_self(MPModelSong);
  v24 = swift_dynamicCastObjCClass(v23);
  if (!v24)
  {

    goto LABEL_9;
  }
  v25 = v24;
  v26 = (_QWORD *)swift_task_alloc(dword_100494D34);
  *(_QWORD *)(v0 + 552) = v26;
  *v26 = v0;
  v26[1] = sub_10019C174;
  v26[2] = v25;
  return swift_task_switch(sub_1001A0F7C, 0, 0);
}

uint64_t sub_10019C4A0(void *a1, void *a2, void *a3, void *a4)
{
  Swift::String v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;

  _StringGuts.grow(_:)(71);
  v8._object = (void *)0x80000001003B4640;
  v8._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v8);
  v9 = a1;
  v10 = objc_msgSend(v9, "description");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x72616D697270202CLL;
  v15._object = (void *)0xEB00000000203A79;
  String.append(_:)(v15);
  v16 = a2;
  v17 = objc_msgSend(v16, "description");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v20 = v19;

  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);

  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 0x646E6F636573202CLL;
  v22._object = (void *)0xED0000203A797261;
  String.append(_:)(v22);
  v23 = a3;
  v24 = objc_msgSend(v23, "description");
  v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);

  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x616974726574202CLL;
  v29._object = (void *)0xEC000000203A7972;
  String.append(_:)(v29);
  v30 = a4;
  v31 = objc_msgSend(v30, "description");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35._countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);

  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 41;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  return 0;
}

uint64_t sub_10019C6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.playlistCovers);
  sub_1000086B4(v2, (uint64_t)static Logger.playlistCovers);
  sub_1000087DC(0, (unint64_t *)&qword_1004904C0, OS_os_log_ptr);
  v3 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x7473696C79616C50, 0xEE00737265766F43);
  return Logger.init(_:)(v3);
}

uint64_t static Logger.playlistCovers.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C8F0 != -1)
    swift_once(&qword_10048C8F0, sub_10019C6CC);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.playlistCovers);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

uint64_t sub_10019C7E0(char **a1, uint64_t (*a2)(_QWORD *))
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = sub_1001B7060((uint64_t)v4);
  v5 = *((_QWORD *)v4 + 2);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_10019C84C(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  Swift::Int v29;
  double *v30;
  double v31;
  Swift::Int v32;
  double *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  Swift::Int v109;
  uint64_t v110;
  double *v111;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v87 = *a1;
      v88 = *a1 + 32;
      v89 = -1;
      for (i = 1; i != v3; ++i)
      {
        v91 = *(double *)(v87 + 32 * i + 16);
        v92 = v89;
        v93 = v88;
        do
        {
          if (*(double *)(v93 - 16) >= v91)
            break;
          if (!v87)
            goto LABEL_142;
          v94 = *(_QWORD *)(v93 + 24);
          v95 = *(_OWORD *)v93;
          v96 = *(_OWORD *)(v93 - 16);
          *(_OWORD *)v93 = *(_OWORD *)(v93 - 32);
          *(_OWORD *)(v93 + 16) = v96;
          *(double *)(v93 - 16) = v91;
          *(_QWORD *)(v93 - 8) = v94;
          *(_OWORD *)(v93 - 32) = v95;
          v93 -= 32;
        }
        while (!__CFADD__(v92++, 1));
        v88 += 32;
        --v89;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v6 = result;
    v105 = a1;
    if (v3 > 1)
    {
      v7 = v5 >> 1;
      v8 = sub_100005574(&qword_100494E00);
      result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
      *(_QWORD *)(result + 16) = v7;
      v107 = (_QWORD *)result;
      v111 = (double *)(result + 32);
LABEL_13:
      v10 = 0;
      v11 = *a1;
      v106 = *a1 + 80;
      v12 = (char *)_swiftEmptyArrayStorage;
      v108 = v6;
      v109 = v3;
      v110 = v11;
      while (1)
      {
        v14 = v10++;
        if (v10 < v3)
        {
          v15 = *(double *)(v11 + 32 * v10 + 16);
          v16 = *(double *)(v11 + 32 * v14 + 16);
          v10 = v14 + 2;
          if (v14 + 2 < v3)
          {
            v17 = (double *)(v106 + 32 * v14);
            v18 = v15;
            while (1)
            {
              v19 = v18;
              v18 = *v17;
              if (v16 < v15 == v19 >= *v17)
                break;
              ++v10;
              v17 += 4;
              if (v3 == v10)
              {
                v10 = v3;
                break;
              }
            }
          }
          if (v16 < v15)
          {
            if (v10 < v14)
              goto LABEL_139;
            if (v14 < v10)
            {
              v20 = 32 * v10;
              v21 = 32 * v14;
              v22 = v10;
              v23 = v14;
              do
              {
                if (v23 != --v22)
                {
                  if (!v11)
                    goto LABEL_145;
                  v24 = (_OWORD *)(v11 + v21);
                  v25 = v11 + v20;
                  v26 = *(_OWORD *)(v11 + v21);
                  v27 = *(_OWORD *)(v11 + v21 + 16);
                  v28 = *(_OWORD *)(v11 + v20 - 16);
                  *v24 = *(_OWORD *)(v11 + v20 - 32);
                  v24[1] = v28;
                  *(_OWORD *)(v25 - 32) = v26;
                  *(_OWORD *)(v25 - 16) = v27;
                }
                ++v23;
                v20 -= 32;
                v21 += 32;
              }
              while (v23 < v22);
            }
          }
        }
        if (v10 < v3)
        {
          if (__OFSUB__(v10, v14))
            goto LABEL_136;
          if (v10 - v14 < v6)
          {
            v29 = v14 + v6;
            if (__OFADD__(v14, v6))
              goto LABEL_140;
            if (v29 >= v3)
              v29 = v3;
            if (v29 < v14)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v10 != v29)
            {
              v30 = (double *)(v11 + 32 * v10);
              do
              {
                v31 = *(double *)(v11 + 32 * v10 + 16);
                v32 = v14;
                v33 = v30;
                do
                {
                  if (*(v33 - 2) >= v31)
                    break;
                  if (!v11)
                    goto LABEL_143;
                  v34 = *((_QWORD *)v33 + 3);
                  v35 = *(_OWORD *)v33;
                  v36 = *((_OWORD *)v33 - 1);
                  *(_OWORD *)v33 = *((_OWORD *)v33 - 2);
                  *((_OWORD *)v33 + 1) = v36;
                  *(v33 - 2) = v31;
                  *((_QWORD *)v33 - 1) = v34;
                  *((_OWORD *)v33 - 2) = v35;
                  v33 -= 4;
                  ++v32;
                }
                while (v10 != v32);
                ++v10;
                v30 += 4;
              }
              while (v10 != v29);
              v10 = v29;
            }
          }
        }
        if (v10 < v14)
          goto LABEL_131;
        result = swift_isUniquelyReferenced_nonNull_native(v12);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1001B82D8(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
          v12 = (char *)result;
        }
        v38 = *((_QWORD *)v12 + 2);
        v37 = *((_QWORD *)v12 + 3);
        v13 = v38 + 1;
        v11 = v110;
        if (v38 >= v37 >> 1)
        {
          result = (uint64_t)sub_1001B82D8((char *)(v37 > 1), v38 + 1, 1, v12);
          v11 = v110;
          v12 = (char *)result;
        }
        *((_QWORD *)v12 + 2) = v13;
        v39 = v12 + 32;
        v40 = &v12[16 * v38 + 32];
        *(_QWORD *)v40 = v14;
        *((_QWORD *)v40 + 1) = v10;
        if (v38)
        {
          while (1)
          {
            v41 = v13 - 1;
            if (v13 >= 4)
            {
              v46 = &v39[2 * v13];
              v47 = *(v46 - 8);
              v48 = *(v46 - 7);
              v52 = __OFSUB__(v48, v47);
              v49 = v48 - v47;
              if (v52)
                goto LABEL_120;
              v51 = *(v46 - 6);
              v50 = *(v46 - 5);
              v52 = __OFSUB__(v50, v51);
              v44 = v50 - v51;
              v45 = v52;
              if (v52)
                goto LABEL_121;
              v53 = v13 - 2;
              v54 = &v39[2 * v13 - 4];
              v56 = *v54;
              v55 = v54[1];
              v52 = __OFSUB__(v55, v56);
              v57 = v55 - v56;
              if (v52)
                goto LABEL_122;
              v52 = __OFADD__(v44, v57);
              v58 = v44 + v57;
              if (v52)
                goto LABEL_124;
              if (v58 >= v49)
              {
                v76 = &v39[2 * v41];
                v78 = *v76;
                v77 = v76[1];
                v52 = __OFSUB__(v77, v78);
                v79 = v77 - v78;
                if (v52)
                  goto LABEL_130;
                v69 = v44 < v79;
                goto LABEL_83;
              }
            }
            else
            {
              if (v13 != 3)
              {
                v70 = *((_QWORD *)v12 + 4);
                v71 = *((_QWORD *)v12 + 5);
                v52 = __OFSUB__(v71, v70);
                v63 = v71 - v70;
                v64 = v52;
                goto LABEL_77;
              }
              v43 = *((_QWORD *)v12 + 4);
              v42 = *((_QWORD *)v12 + 5);
              v52 = __OFSUB__(v42, v43);
              v44 = v42 - v43;
              v45 = v52;
            }
            if ((v45 & 1) != 0)
              goto LABEL_123;
            v53 = v13 - 2;
            v59 = &v39[2 * v13 - 4];
            v61 = *v59;
            v60 = v59[1];
            v62 = __OFSUB__(v60, v61);
            v63 = v60 - v61;
            v64 = v62;
            if (v62)
              goto LABEL_125;
            v65 = &v39[2 * v41];
            v67 = *v65;
            v66 = v65[1];
            v52 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            if (v52)
              goto LABEL_127;
            if (__OFADD__(v63, v68))
              goto LABEL_129;
            if (v63 + v68 >= v44)
            {
              v69 = v44 < v68;
LABEL_83:
              if (v69)
                v41 = v53;
              goto LABEL_85;
            }
LABEL_77:
            if ((v64 & 1) != 0)
              goto LABEL_126;
            v72 = &v39[2 * v41];
            v74 = *v72;
            v73 = v72[1];
            v52 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v52)
              goto LABEL_128;
            if (v75 < v63)
              goto LABEL_15;
LABEL_85:
            v80 = v41 - 1;
            if (v41 - 1 >= v13)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v11)
              goto LABEL_144;
            v81 = v12;
            v82 = &v39[2 * v80];
            v83 = *v82;
            v84 = &v39[2 * v41];
            v85 = v84[1];
            result = sub_10019D5D8((double *)(v11 + 32 * *v82), (double *)(v11 + 32 * *v84), v11 + 32 * v85, v111);
            if (v1)
              goto LABEL_93;
            if (v85 < v83)
              goto LABEL_117;
            if (v41 > *((_QWORD *)v81 + 2))
              goto LABEL_118;
            *v82 = v83;
            v39[2 * v80 + 1] = v85;
            v86 = *((_QWORD *)v81 + 2);
            if (v41 >= v86)
              goto LABEL_119;
            v12 = v81;
            v13 = v86 - 1;
            result = (uint64_t)memmove(&v39[2 * v41], v84 + 2, 16 * (v86 - 1 - v41));
            *((_QWORD *)v81 + 2) = v86 - 1;
            v11 = v110;
            if (v86 <= 2)
              goto LABEL_15;
          }
        }
        v13 = 1;
LABEL_15:
        v6 = v108;
        v3 = v109;
        if (v10 >= v109)
        {
          v9 = v107;
          goto LABEL_103;
        }
      }
    }
    v9 = _swiftEmptyArrayStorage;
    v111 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v107 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v13 = _swiftEmptyArrayStorage[2];
    v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    result = (uint64_t)v12;
    v107 = v9;
    if (v13 >= 2)
    {
      v98 = *v105;
      do
      {
        v99 = v13 - 2;
        if (v13 < 2)
          goto LABEL_132;
        if (!v98)
          goto LABEL_146;
        v100 = result;
        v101 = *(_QWORD *)(result + 32 + 16 * v99);
        v102 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
        result = sub_10019D5D8((double *)(v98 + 32 * v101), (double *)(v98 + 32 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v98 + 32 * v102, v111);
        if (v1)
          break;
        if (v102 < v101)
          goto LABEL_133;
        result = swift_isUniquelyReferenced_nonNull_native(v100);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1001B83D0(v100);
          v100 = result;
        }
        if (v99 >= *(_QWORD *)(v100 + 16))
          goto LABEL_134;
        v103 = (_QWORD *)(v100 + 32 + 16 * v99);
        *v103 = v101;
        v103[1] = v102;
        v104 = *(_QWORD *)(v100 + 16);
        if (v13 > v104)
          goto LABEL_135;
        memmove((void *)(v100 + 32 + 16 * (v13 - 1)), (const void *)(v100 + 32 + 16 * v13), 16 * (v104 - v13));
        result = v100;
        *(_QWORD *)(v100 + 16) = v104 - 1;
        v13 = v104 - 1;
      }
      while (v104 > 2);
    }
LABEL_93:
    swift_bridgeObjectRelease();
    v107[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10019CEE4(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  int v20;
  double *v21;
  double v22;
  double v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  Swift::Int v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  Swift::Int v39;
  uint64_t v40;
  double v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  Swift::Int v106;
  uint64_t v107;
  double *v108;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if (v3)
      return sub_10019D548(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_136;
  v6 = result;
  v102 = a1;
  if (v3 > 1)
  {
    v7 = v5 >> 1;
    v8 = sub_100005574(&qword_100494E00);
    result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(result + 16) = v7;
    v104 = (_QWORD *)result;
    v108 = (double *)(result + 32);
LABEL_13:
    v10 = 0;
    v11 = *a1;
    v103 = *a1 + 80;
    v12 = (char *)_swiftEmptyArrayStorage;
    v105 = v6;
    v106 = v3;
    v107 = v11;
    while (1)
    {
      v14 = v10++;
      if (v10 < v3)
      {
        v15 = v11 + 32 * v10;
        v16 = *(double *)(v15 + 8);
        v17 = *(double *)(v15 + 16);
        v18 = v11 + 32 * v14;
        v19 = *(double *)(v18 + 8);
        v20 = *(double *)(v18 + 16) < v17;
        if (v16 != v19)
          v20 = v16 < v19;
        v10 = v14 + 2;
        if (v14 + 2 < v3)
        {
          v21 = (double *)(v103 + 32 * v14);
          while (1)
          {
            v22 = v16;
            v23 = v17;
            v16 = *(v21 - 1);
            v17 = *v21;
            v24 = v23 < *v21;
            if (v16 != v22)
              v24 = v16 < v22;
            if (v20 != v24)
              break;
            ++v10;
            v21 += 4;
            if (v3 == v10)
            {
              v10 = v3;
              break;
            }
          }
        }
        if (v20)
        {
          if (v10 < v14)
            goto LABEL_138;
          if (v14 < v10)
          {
            v25 = 32 * v10;
            v26 = 32 * v14;
            v27 = v10;
            v28 = v14;
            do
            {
              if (v28 != --v27)
              {
                if (!v11)
                  goto LABEL_143;
                v29 = (_OWORD *)(v11 + v26);
                v30 = v11 + v25;
                v31 = *(_OWORD *)(v11 + v26);
                v32 = *(_OWORD *)(v11 + v26 + 16);
                v33 = *(_OWORD *)(v11 + v25 - 16);
                *v29 = *(_OWORD *)(v11 + v25 - 32);
                v29[1] = v33;
                *(_OWORD *)(v30 - 32) = v31;
                *(_OWORD *)(v30 - 16) = v32;
              }
              ++v28;
              v25 -= 32;
              v26 += 32;
            }
            while (v28 < v27);
          }
        }
      }
      if (v10 < v3)
      {
        if (__OFSUB__(v10, v14))
          goto LABEL_135;
        if (v10 - v14 < v6)
        {
          v34 = v14 + v6;
          if (__OFADD__(v14, v6))
            goto LABEL_139;
          if (v34 >= v3)
            v34 = v3;
          if (v34 < v14)
          {
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
            return result;
          }
          if (v10 != v34)
          {
            v35 = v11 + 32 * v10;
            do
            {
              v36 = v11 + 32 * v10;
              v37 = *(double *)(v36 + 8);
              v38 = *(double *)(v36 + 16);
              v39 = v14;
              v40 = v35;
              do
              {
                v41 = *(double *)(v40 - 24);
                v42 = *(double *)(v40 - 16) < v38;
                if (v37 != v41)
                  v42 = v37 < v41;
                if (!v42)
                  break;
                if (!v11)
                  goto LABEL_141;
                v43 = *(_QWORD *)v40;
                v44 = *(_QWORD *)(v40 + 24);
                v45 = *(_OWORD *)(v40 - 16);
                *(_OWORD *)v40 = *(_OWORD *)(v40 - 32);
                *(_OWORD *)(v40 + 16) = v45;
                *(double *)(v40 - 24) = v37;
                *(double *)(v40 - 16) = v38;
                *(_QWORD *)(v40 - 8) = v44;
                *(_QWORD *)(v40 - 32) = v43;
                v40 -= 32;
                ++v39;
              }
              while (v10 != v39);
              ++v10;
              v35 += 32;
            }
            while (v10 != v34);
            v10 = v34;
          }
        }
      }
      if (v10 < v14)
        goto LABEL_130;
      result = swift_isUniquelyReferenced_nonNull_native(v12);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001B82D8(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v12 = (char *)result;
      }
      v47 = *((_QWORD *)v12 + 2);
      v46 = *((_QWORD *)v12 + 3);
      v13 = v47 + 1;
      v11 = v107;
      if (v47 >= v46 >> 1)
      {
        result = (uint64_t)sub_1001B82D8((char *)(v46 > 1), v47 + 1, 1, v12);
        v11 = v107;
        v12 = (char *)result;
      }
      *((_QWORD *)v12 + 2) = v13;
      v48 = v12 + 32;
      v49 = &v12[16 * v47 + 32];
      *(_QWORD *)v49 = v14;
      *((_QWORD *)v49 + 1) = v10;
      if (v47)
      {
        while (1)
        {
          v50 = v13 - 1;
          if (v13 >= 4)
          {
            v55 = &v48[2 * v13];
            v56 = *(v55 - 8);
            v57 = *(v55 - 7);
            v61 = __OFSUB__(v57, v56);
            v58 = v57 - v56;
            if (v61)
              goto LABEL_119;
            v60 = *(v55 - 6);
            v59 = *(v55 - 5);
            v61 = __OFSUB__(v59, v60);
            v53 = v59 - v60;
            v54 = v61;
            if (v61)
              goto LABEL_120;
            v62 = v13 - 2;
            v63 = &v48[2 * v13 - 4];
            v65 = *v63;
            v64 = v63[1];
            v61 = __OFSUB__(v64, v65);
            v66 = v64 - v65;
            if (v61)
              goto LABEL_121;
            v61 = __OFADD__(v53, v66);
            v67 = v53 + v66;
            if (v61)
              goto LABEL_123;
            if (v67 >= v58)
            {
              v85 = &v48[2 * v50];
              v87 = *v85;
              v86 = v85[1];
              v61 = __OFSUB__(v86, v87);
              v88 = v86 - v87;
              if (v61)
                goto LABEL_129;
              v78 = v53 < v88;
              goto LABEL_89;
            }
          }
          else
          {
            if (v13 != 3)
            {
              v79 = *((_QWORD *)v12 + 4);
              v80 = *((_QWORD *)v12 + 5);
              v61 = __OFSUB__(v80, v79);
              v72 = v80 - v79;
              v73 = v61;
              goto LABEL_83;
            }
            v52 = *((_QWORD *)v12 + 4);
            v51 = *((_QWORD *)v12 + 5);
            v61 = __OFSUB__(v51, v52);
            v53 = v51 - v52;
            v54 = v61;
          }
          if ((v54 & 1) != 0)
            goto LABEL_122;
          v62 = v13 - 2;
          v68 = &v48[2 * v13 - 4];
          v70 = *v68;
          v69 = v68[1];
          v71 = __OFSUB__(v69, v70);
          v72 = v69 - v70;
          v73 = v71;
          if (v71)
            goto LABEL_124;
          v74 = &v48[2 * v50];
          v76 = *v74;
          v75 = v74[1];
          v61 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          if (v61)
            goto LABEL_126;
          if (__OFADD__(v72, v77))
            goto LABEL_128;
          if (v72 + v77 >= v53)
          {
            v78 = v53 < v77;
LABEL_89:
            if (v78)
              v50 = v62;
            goto LABEL_91;
          }
LABEL_83:
          if ((v73 & 1) != 0)
            goto LABEL_125;
          v81 = &v48[2 * v50];
          v83 = *v81;
          v82 = v81[1];
          v61 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          if (v61)
            goto LABEL_127;
          if (v84 < v72)
            goto LABEL_15;
LABEL_91:
          v89 = v50 - 1;
          if (v50 - 1 >= v13)
          {
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
            goto LABEL_140;
          }
          if (!v11)
            goto LABEL_142;
          v90 = &v48[2 * v89];
          v91 = *v90;
          v92 = &v48[2 * v50];
          v93 = v92[1];
          result = sub_10019D7FC((double *)(v11 + 32 * *v90), (double *)(v11 + 32 * *v92), v11 + 32 * v93, v108);
          if (v1)
            goto LABEL_99;
          if (v93 < v91)
            goto LABEL_116;
          if (v50 > *((_QWORD *)v12 + 2))
            goto LABEL_117;
          *v90 = v91;
          v48[2 * v89 + 1] = v93;
          v94 = *((_QWORD *)v12 + 2);
          if (v50 >= v94)
            goto LABEL_118;
          v13 = v94 - 1;
          result = (uint64_t)memmove(&v48[2 * v50], v92 + 2, 16 * (v94 - 1 - v50));
          *((_QWORD *)v12 + 2) = v94 - 1;
          v11 = v107;
          if (v94 <= 2)
            goto LABEL_15;
        }
      }
      v13 = 1;
LABEL_15:
      v6 = v105;
      v3 = v106;
      if (v10 >= v106)
      {
        v9 = v104;
        goto LABEL_102;
      }
    }
  }
  v9 = _swiftEmptyArrayStorage;
  v108 = (double *)&_swiftEmptyArrayStorage[4];
  if (v3 == 1)
  {
    v104 = _swiftEmptyArrayStorage;
    goto LABEL_13;
  }
  v13 = _swiftEmptyArrayStorage[2];
  v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
  result = (uint64_t)v12;
  v104 = v9;
  if (v13 >= 2)
  {
    v95 = *v102;
    do
    {
      v96 = v13 - 2;
      if (v13 < 2)
        goto LABEL_131;
      if (!v95)
        goto LABEL_144;
      v97 = result;
      v98 = *(_QWORD *)(result + 32 + 16 * v96);
      v99 = *(_QWORD *)(result + 32 + 16 * (v13 - 1) + 8);
      result = sub_10019D7FC((double *)(v95 + 32 * v98), (double *)(v95 + 32 * *(_QWORD *)(result + 32 + 16 * (v13 - 1))), v95 + 32 * v99, v108);
      if (v1)
        break;
      if (v99 < v98)
        goto LABEL_132;
      result = swift_isUniquelyReferenced_nonNull_native(v97);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001B83D0(v97);
        v97 = result;
      }
      if (v96 >= *(_QWORD *)(v97 + 16))
        goto LABEL_133;
      v100 = (_QWORD *)(v97 + 32 + 16 * v96);
      *v100 = v98;
      v100[1] = v99;
      v101 = *(_QWORD *)(v97 + 16);
      if (v13 > v101)
        goto LABEL_134;
      memmove((void *)(v97 + 32 + 16 * (v13 - 1)), (const void *)(v97 + 32 + 16 * v13), 16 * (v101 - v13));
      result = v97;
      *(_QWORD *)(v97 + 16) = v101 - 1;
      v13 = v101 - 1;
    }
    while (v101 > 2);
  }
LABEL_99:
  swift_bridgeObjectRelease();
  v104[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019D548(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
LABEL_5:
    v6 = v4 + 32 * a3;
    v7 = *(double *)(v6 + 8);
    v8 = *(double *)(v6 + 16);
    v9 = result;
    v10 = v5;
    while (1)
    {
      v11 = *(double *)(v10 - 24);
      v12 = *(double *)(v10 - 16) < v8;
      if (v7 != v11)
        v12 = v7 < v11;
      if (!v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v13 = *(_QWORD *)v10;
      v14 = *(_QWORD *)(v10 + 24);
      v15 = *(_OWORD *)(v10 - 16);
      *(_OWORD *)v10 = *(_OWORD *)(v10 - 32);
      *(_OWORD *)(v10 + 16) = v15;
      *(double *)(v10 - 24) = v7;
      *(double *)(v10 - 16) = v8;
      *(_QWORD *)(v10 - 8) = v14;
      *(_QWORD *)(v10 - 32) = v13;
      v10 -= 32;
      if (a3 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10019D5D8(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  __int128 v18;
  double *v19;
  double *v20;
  double *v21;
  BOOL v22;
  __int128 v23;
  int64_t v24;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_43;
    v19 = (double *)(a3 - 32);
    while (1)
    {
      v20 = v19 + 4;
      if (*(v6 - 2) >= *(v14 - 2))
      {
        v21 = v14 - 4;
        if (v20 != v14)
        {
          v14 -= 4;
          goto LABEL_40;
        }
        v22 = v19 >= v14;
        v14 -= 4;
        if (v22)
          goto LABEL_40;
      }
      else
      {
        v21 = v6 - 4;
        if (v20 != v6)
        {
          v6 -= 4;
LABEL_40:
          v23 = *((_OWORD *)v21 + 1);
          *(_OWORD *)v19 = *(_OWORD *)v21;
          *((_OWORD *)v19 + 1) = v23;
          goto LABEL_41;
        }
        v22 = v19 >= v6;
        v6 -= 4;
        if (v22)
          goto LABEL_40;
      }
LABEL_41:
      if (v6 > v7)
      {
        v19 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      if (v4[2] >= v6[2])
      {
        v17 = v4 + 4;
        v16 = v4;
        v15 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v17)
            goto LABEL_20;
        }
        else
        {
          v4 += 4;
        }
      }
      else
      {
        v15 = v6 + 4;
        v16 = v6;
        if (v7 == v6 && v7 < v15)
          goto LABEL_20;
      }
      v18 = *((_OWORD *)v16 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v16;
      *((_OWORD *)v7 + 1) = v18;
LABEL_20:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v15;
        if ((unint64_t)v15 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_43:
  v24 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v24 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v24 >> 5));
  return 1;
}

uint64_t sub_10019D7FC(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  _BOOL4 v17;
  double *v18;
  double *v19;
  double *v20;
  __int128 v21;
  double *v22;
  double *v23;
  double v24;
  double v25;
  _BOOL4 v26;
  double *v27;
  BOOL v28;
  __int128 v29;
  int64_t v30;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 31;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 31;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 5;
  if (v10 >= v12 >> 5)
  {
    if (a4 != __src || &__src[4 * v13] <= a4)
      memmove(a4, __src, 32 * v13);
    v14 = &v4[4 * v13];
    if (v7 >= v6 || v11 < 32)
      goto LABEL_47;
    v22 = (double *)(a3 - 32);
    while (1)
    {
      v23 = v22 + 4;
      v24 = *(v14 - 3);
      v25 = *(v6 - 3);
      v26 = *(v6 - 2) < *(v14 - 2);
      if (v24 != v25)
        v26 = v24 < v25;
      if (v26)
      {
        v27 = v6 - 4;
        if (v23 != v6)
        {
          v6 -= 4;
LABEL_44:
          v29 = *((_OWORD *)v27 + 1);
          *(_OWORD *)v22 = *(_OWORD *)v27;
          *((_OWORD *)v22 + 1) = v29;
          goto LABEL_45;
        }
        v28 = v22 >= v6;
        v6 -= 4;
        if (v28)
          goto LABEL_44;
      }
      else
      {
        v27 = v14 - 4;
        if (v23 != v14)
        {
          v14 -= 4;
          goto LABEL_44;
        }
        v28 = v22 >= v14;
        v14 -= 4;
        if (v28)
          goto LABEL_44;
      }
LABEL_45:
      if (v6 > v7)
      {
        v22 -= 4;
        if (v14 > v4)
          continue;
      }
      goto LABEL_47;
    }
  }
  if (a4 != __dst || &__dst[4 * v10] <= a4)
    memmove(a4, __dst, 32 * v10);
  v14 = &v4[4 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      v15 = v6[1];
      v16 = v4[1];
      v17 = v4[2] < v6[2];
      if (v15 != v16)
        v17 = v15 < v16;
      if (v17)
      {
        v18 = v6 + 4;
        v19 = v6;
        if (v7 == v6 && v7 < v18)
          goto LABEL_22;
      }
      else
      {
        v20 = v4 + 4;
        v19 = v4;
        v18 = v6;
        if (v7 == v4)
        {
          v4 += 4;
          if (v7 < v20)
            goto LABEL_22;
        }
        else
        {
          v4 += 4;
        }
      }
      v21 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v19;
      *((_OWORD *)v7 + 1) = v21;
LABEL_22:
      v7 += 4;
      if (v4 < v14)
      {
        v6 = v18;
        if ((unint64_t)v18 < a3)
          continue;
      }
      break;
    }
  }
  v6 = v7;
LABEL_47:
  v30 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 0x1FuLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v30 & 0xFFFFFFFFFFFFFFE0)))
    memmove(v6, v4, 32 * (v30 >> 5));
  return 1;
}

uint64_t _s9MusicCore14PlaylistCoversO17hexRepresentation3forSSSo7UIColorC_tFZ_0()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = UIColor.rgba.getter();
  v2 = v1;
  v4 = v3;
  v5 = sub_100005574(&qword_10048F840);
  v6 = swift_allocObject(v5, 152, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100384A40;
  v7 = lround(v0 * 255.0);
  *(_QWORD *)(v6 + 56) = &type metadata for Int;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = lround(v2 * 255.0);
  *(_QWORD *)(v6 + 96) = &type metadata for Int;
  *(_QWORD *)(v6 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 72) = v8;
  v9 = lround(v4 * 255.0);
  *(_QWORD *)(v6 + 136) = &type metadata for Int;
  *(_QWORD *)(v6 + 144) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 112) = v9;
  return String.init(format:_:)(0x323025586C323025, 0xEF586C323025586CLL, v6);
}

uint64_t _s9MusicCore14PlaylistCoversO6SourceO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  void *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_100005574(&qword_10048D9A0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaylistCovers.Source(0);
  v8 = __chkstk_darwin(v7);
  v10 = (void **)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __chkstk_darwin(v8);
  v13 = (uint64_t *)((char *)&v32 - v12);
  __chkstk_darwin(v11);
  v15 = (char *)&v32 - v14;
  v16 = sub_100005574(&qword_100494E08);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)&v19[*(int *)(v17 + 48)];
  sub_10019E27C(a1, (uint64_t)v19);
  sub_10019E27C(v33, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v7);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10019E27C((uint64_t)v19, (uint64_t)v13);
      v22 = *v13;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 1)
      {
        v23 = sub_1000B32E8(v22, *v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_13:
        sub_1001A166C((uint64_t)v19);
        return v23 & 1;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10019E27C((uint64_t)v19, (uint64_t)v10);
      v24 = *v10;
      if (swift_getEnumCaseMultiPayload(v20, v7) == 2)
      {
        v25 = (void *)*v20;
        sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
        v23 = static NSObject.== infix(_:_:)(v24, v25);

        goto LABEL_13;
      }

    }
  }
  else
  {
    sub_10019E27C((uint64_t)v19, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload(v20, v7))
    {
      v26 = v20;
      v27 = v3;
      (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v6, v26, v3);
      v28 = type metadata accessor for Track(0);
      v29 = sub_100006924((unint64_t *)&unk_100494E10, (uint64_t (*)(uint64_t))&type metadata accessor for Track, (uint64_t)&protocol conformance descriptor for Track);
      v23 = static MusicItemCollection<>.== infix(_:_:)(v15, v6, v28, &protocol witness table for Track, v29);
      v30 = *(void (**)(char *, uint64_t))(v4 + 8);
      v30(v6, v27);
      v30(v15, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_100008758((uint64_t)v19, &qword_100494E08);
  v23 = 0;
  return v23 & 1;
}

char *sub_10019DE14(char *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  char *v5;
  float64x2_t *v6;
  unint64_t v7;
  float64x2_t *v8;
  float64x2_t v9;
  float64x2_t v10;
  uint64_t v11;
  float64x2_t *v12;
  unint64_t v13;
  unint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t *v17;
  float64x2_t v18;
  float64x2_t v19;

  v2 = *((_QWORD *)result + 2);
  if (v2)
  {
    v4 = 0;
    v5 = result + 32;
    v6 = (float64x2_t *)(a2 + 32);
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      while (1)
      {
        if (v4 == v7)
        {
          __break(1u);
          return result;
        }
        v8 = (float64x2_t *)&v5[32 * v4];
        v9 = *v8;
        v10 = v8[1];
        ++v4;
        v11 = *(_QWORD *)(a2 + 16);
        if (!v11)
          break;
        v12 = v6;
        while ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v9, *v12), (int32x4_t)vceqq_f64(v10, v12[1]))), 0xFuLL))) & 1) == 0)
        {
          v12 += 2;
          if (!--v11)
            goto LABEL_14;
        }
        if (v4 == v2)
          return (char *)_swiftEmptyArrayStorage;
      }
LABEL_14:
      v18 = v10;
      v19 = v9;
      result = (char *)swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_1000773C0(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      v16 = v18;
      v15 = v19;
      if (v14 >= v13 >> 1)
      {
        result = sub_1000773C0((char *)(v13 > 1), v14 + 1, 1);
        v16 = v18;
        v15 = v19;
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      v17 = (float64x2_t *)&_swiftEmptyArrayStorage[4 * v14];
      v17[2] = v15;
      v17[3] = v16;
    }
    while (v4 != v2);
  }
  return (char *)_swiftEmptyArrayStorage;
}

id _s9MusicCore14PlaylistCoversO5color4fromSo7UIColorCSgSS_tFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  id v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for NSScanner.NumberRepresentation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone((Class)NSScanner);
  swift_bridgeObjectRetain();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, "initWithString:", v9);

  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for NSScanner.NumberRepresentation.hexadecimal(_:), v4);
  v11 = NSScanner.scanUInt64(representation:)(v7);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v13 & 1) == 0)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", (double)BYTE2(v11) / 255.0, (double)BYTE1(v11) / 255.0, (double)v11 / 255.0, 1.0);

      return v15;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_10048C8F0 != -1)
LABEL_11:
    swift_once(&qword_10048C8F0, sub_10019C6CC);
  v16 = type metadata accessor for Logger(0, v14);
  sub_1000086B4(v16, (uint64_t)static Logger.playlistCovers);
  v17 = swift_bridgeObjectRetain_n(a2, 2);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(12, -1);
    v21 = swift_slowAlloc(32, -1);
    v24 = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v20 + 4) = sub_100019400(a1, a2, &v24);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to decode hexadecimal string representation=%{public}s as UInt64.", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }

  return 0;
}

uint64_t type metadata accessor for PlaylistCovers.Source(uint64_t a1)
{
  uint64_t result;

  result = qword_100494DB8;
  if (!qword_100494DB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaylistCovers.Source);
  return result;
}

uint64_t sub_10019E27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistCovers.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10019E2C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v19;
  id v20;

  v2 = sub_100005574(&qword_1004916E0);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A1A1C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100008758(a1, &qword_1004916E0);
    sub_100008758((uint64_t)v4, &qword_1004916E0);
    return 0;
  }
  v9 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v10 = Artwork.backgroundColor.getter(v9);
  if (!v10)
  {
LABEL_11:
    sub_100008758(a1, &qword_1004916E0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v11 = (void *)v10;
  v12 = Artwork.primaryTextColor.getter();
  if (!v12)
  {

    goto LABEL_11;
  }
  v13 = (void *)v12;
  v14 = (void *)Artwork.secondaryTextColor.getter();
  if (!v14)
  {

    sub_100008758(a1, &qword_1004916E0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  v15 = (void *)Artwork.tertiaryTextColor.getter();
  if (!v15)
  {

    goto LABEL_11;
  }
  v20 = v15;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v11);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v13);
  objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v14);
  v19 = v14;
  v17 = objc_allocWithZone((Class)UIColor);
  objc_msgSend(v17, "initWithCGColor:", v20);

  sub_100008758(a1, &qword_1004916E0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_10019E53C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_BYTE *)(v3 + 416) = a3;
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a2;
  v4 = sub_100005574(&qword_10048DA48);
  *(_QWORD *)(v3 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10048EEE0);
  *(_QWORD *)(v3 + 104) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  *(_QWORD *)(v3 + 128) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 136) = v8;
  *(_QWORD *)(v3 + 144) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10048F2C0);
  *(_QWORD *)(v3 + 152) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v3 + 160) = v10;
  *(_QWORD *)(v3 + 168) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10048F2C8);
  *(_QWORD *)(v3 + 176) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v3 + 184) = v12;
  *(_QWORD *)(v3 + 192) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Artwork(0);
  *(_QWORD *)(v3 + 200) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v3 + 208) = v14;
  *(_QWORD *)(v3 + 216) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PreviewAsset(0);
  *(_QWORD *)(v3 + 224) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v3 + 232) = v16;
  *(_QWORD *)(v3 + 240) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004916E0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v3 + 248) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 256) = swift_task_alloc(v17);
  *(_QWORD *)(v3 + 264) = swift_task_alloc(v17);
  v18 = sub_100005574(&qword_10048DA40);
  *(_QWORD *)(v3 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v18 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100005574(&qword_10048EF00);
  *(_QWORD *)(v3 + 280) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v3 + 288) = v20;
  *(_QWORD *)(v3 + 296) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v3 + 304) = v21;
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v3 + 312) = v22;
  *(_QWORD *)(v3 + 320) = swift_task_alloc((*(_QWORD *)(v22 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100005574(&qword_10048F268);
  *(_QWORD *)(v3 + 328) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v3 + 336) = v24;
  *(_QWORD *)(v3 + 344) = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005574(&qword_10048F270);
  *(_QWORD *)(v3 + 352) = v25;
  v26 = *(_QWORD *)(v25 - 8);
  *(_QWORD *)(v3 + 360) = v26;
  *(_QWORD *)(v3 + 368) = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10019E7A8, 0, 0);
}

uint64_t sub_10019E7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  if (qword_10048C8F0 != -1)
    swift_once(&qword_10048C8F0, sub_10019C6CC);
  v3 = *(_QWORD *)(v2 + 88);
  v4 = type metadata accessor for Logger(0, a2);
  *(_QWORD *)(v2 + 376) = sub_1000086B4(v4, (uint64_t)static Logger.playlistCovers);
  v5 = swift_bridgeObjectRetain_n(v3, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(char **)(v2 + 88);
  if (v8)
  {
    v10 = *(char **)(v2 + 80);
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v28 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v11 + 4) = sub_100019400(v10, v9, &v28);
    swift_bridgeObjectRelease_n(v9, 3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Performing Media API request for song with catalogID=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v2 + 88), 2);
  }

  v14 = *(_QWORD *)(v2 + 80);
  v13 = *(_QWORD *)(v2 + 88);
  if (*(_BYTE *)(v2 + 416) == 1)
  {
    v15 = *(_QWORD *)(v2 + 304);
    KeyPath = swift_getKeyPath(&unk_10038FFC0);
    *(_QWORD *)(v2 + 48) = v14;
    *(_QWORD *)(v2 + 56) = v13;
    swift_bridgeObjectRetain();
    v17 = String.init<A>(_:)(v2 + 48, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v2 + 64) = MusicItemID.init(rawValue:)(v17);
    *(_QWORD *)(v2 + 72) = v18;
    v19 = sub_100006924(&qword_10048F278, (uint64_t (*)(uint64_t))&type metadata accessor for MusicVideo, (uint64_t)&protocol conformance descriptor for MusicVideo);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(KeyPath, v2 + 64, v15, &protocol witness table for MusicVideo, v19);
    v20 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v2 + 384) = v20;
    *v20 = v2;
    v20[1] = sub_10019EACC;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v2 + 344), *(_QWORD *)(v2 + 352));
  }
  else
  {
    v22 = *(_QWORD *)(v2 + 128);
    v23 = swift_getKeyPath(&unk_10038FF98);
    *(_QWORD *)(v2 + 16) = v14;
    *(_QWORD *)(v2 + 24) = v13;
    swift_bridgeObjectRetain();
    v24 = String.init<A>(_:)(v2 + 16, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    *(_QWORD *)(v2 + 32) = MusicItemID.init(rawValue:)(v24);
    *(_QWORD *)(v2 + 40) = v25;
    v26 = sub_100006924(&qword_10048F2D0, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)(v23, v2 + 32, v22, &protocol witness table for Song, v26);
    v27 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(_QWORD *)(v2 + 400) = v27;
    *v27 = v2;
    v27[1] = sub_10019F1BC;
    return MusicCatalogResourceRequest.response()(*(_QWORD *)(v2 + 168), *(_QWORD *)(v2 + 176));
  }
}

uint64_t sub_10019EACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 384);
  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10019F564;
  else
    v3 = sub_10019EB30;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10019EB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(_QWORD, unint64_t, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v6 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 280);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 328));
  sub_100055838(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_100008758(*(_QWORD *)(v0 + 272), &qword_10048DA40);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 360);
    v12 = *(_QWORD *)(v0 + 368);
    v14 = *(_QWORD *)(v0 + 344);
    v15 = *(_QWORD *)(v0 + 352);
    v17 = *(_QWORD *)(v0 + 328);
    v16 = *(_QWORD *)(v0 + 336);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v103 = *(_QWORD *)(v0 + 360);
      v19 = *(char **)(v0 + 80);
      v99 = *(_QWORD *)(v0 + 352);
      v20 = swift_slowAlloc(12, -1);
      v96 = v12;
      v21 = swift_slowAlloc(32, -1);
      v107 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_100019400(v19, v18, &v107);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to fetch music video from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v96, v99);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v0 + 264);
  v23 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 32))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 304));
  MusicVideo.artwork.getter(v23);
  v24 = sub_10019E2C0(v22);
  if (!v24)
  {
    v34 = MusicVideo.previewAssets.getter();
    if (v34)
    {
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        v36 = *(_QWORD *)(v0 + 232);
        v37 = *(_QWORD *)(v0 + 208);
        v38 = v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        v39 = *(_QWORD *)(v36 + 72);
        v100 = v39;
        v104 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v36 + 16);
        v97 = v36;
        do
        {
          v42 = *(_QWORD *)(v0 + 248);
          v41 = *(_QWORD *)(v0 + 256);
          v43 = *(_QWORD *)(v0 + 200);
          v44 = v104(*(_QWORD *)(v0 + 240), v38, *(_QWORD *)(v0 + 224));
          PreviewAsset.artwork.getter(v44);
          sub_1001A1A1C(v41, v42);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v42, 1, v43) == 1)
          {
            v40 = *(_QWORD *)(v0 + 248);
            sub_100008758(*(_QWORD *)(v0 + 256), &qword_1004916E0);
            sub_100008758(v40, &qword_1004916E0);
          }
          else
          {
            v45 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v37 + 32))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 200));
            v46 = Artwork.backgroundColor.getter(v45);
            if (v46)
            {
              v47 = (void *)v46;
              v48 = Artwork.primaryTextColor.getter();
              if (v48)
              {
                v49 = (void *)v48;
                v50 = Artwork.secondaryTextColor.getter();
                if (v50)
                {
                  v51 = (void *)v50;
                  v52 = Artwork.tertiaryTextColor.getter();
                  if (v52)
                  {
                    v77 = (void *)v52;
                    v106 = *(_QWORD *)(v0 + 368);
                    v94 = *(_QWORD *)(v0 + 360);
                    v102 = *(_QWORD *)(v0 + 352);
                    v78 = *(_QWORD *)(v0 + 336);
                    v87 = *(_QWORD *)(v0 + 328);
                    v88 = *(_QWORD *)(v0 + 344);
                    v79 = *(_QWORD *)(v0 + 312);
                    v85 = *(_QWORD *)(v0 + 304);
                    v86 = *(_QWORD *)(v0 + 320);
                    v83 = *(_QWORD *)(v0 + 224);
                    v84 = *(_QWORD *)(v0 + 240);
                    v82 = *(_QWORD *)(v0 + 216);
                    v80 = *(_QWORD *)(v0 + 256);
                    v81 = *(_QWORD *)(v0 + 200);
                    v92 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v47);
                    v91 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v49);
                    v90 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v51);
                    v89 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithCGColor:", v77);

                    sub_100008758(v80, &qword_1004916E0);
                    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v82, v81);
                    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v84, v83);
                    swift_bridgeObjectRelease();
                    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v86, v85);
                    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v88, v87);
                    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v106, v102);
                    goto LABEL_26;
                  }
                  v53 = *(_QWORD *)(v0 + 256);
                  v54 = *(_QWORD *)(v0 + 216);
                  v55 = *(_QWORD *)(v0 + 200);

                  sub_100008758(v53, &qword_1004916E0);
                  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v54, v55);
                  v36 = v97;
                  goto LABEL_22;
                }
                v58 = *(_QWORD *)(v0 + 256);
                v59 = *(_QWORD *)(v0 + 216);
                v60 = *(_QWORD *)(v0 + 200);

              }
              else
              {
                v58 = *(_QWORD *)(v0 + 256);
                v59 = *(_QWORD *)(v0 + 216);
                v60 = *(_QWORD *)(v0 + 200);
              }

              sub_100008758(v58, &qword_1004916E0);
              (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v59, v60);
LABEL_22:
              v39 = v100;
              goto LABEL_11;
            }
            v56 = *(_QWORD *)(v0 + 216);
            v57 = *(_QWORD *)(v0 + 200);
            sub_100008758(*(_QWORD *)(v0 + 256), &qword_1004916E0);
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v56, v57);
          }
LABEL_11:
          (*(void (**)(_QWORD, _QWORD))(v36 + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
          v38 += v39;
          --v35;
        }
        while (v35);
      }
      swift_bridgeObjectRelease();
    }
    v62 = *(_QWORD *)(v0 + 360);
    v61 = *(_QWORD *)(v0 + 368);
    v64 = *(_QWORD *)(v0 + 344);
    v63 = *(_QWORD *)(v0 + 352);
    v65 = *(_QWORD *)(v0 + 328);
    v66 = *(_QWORD *)(v0 + 336);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
LABEL_25:
    v91 = 0;
    v92 = 0;
    v89 = 0;
    v90 = 0;
    goto LABEL_26;
  }
  v29 = *(_QWORD *)(v0 + 360);
  v28 = *(_QWORD *)(v0 + 368);
  v31 = *(_QWORD *)(v0 + 344);
  v30 = *(_QWORD *)(v0 + 352);
  v33 = *(_QWORD *)(v0 + 328);
  v32 = *(_QWORD *)(v0 + 336);
  v91 = v25;
  v92 = v24;
  v89 = v27;
  v90 = v26;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_26:
  v67 = *(_QWORD *)(v0 + 344);
  v68 = *(_QWORD *)(v0 + 320);
  v69 = *(_QWORD *)(v0 + 296);
  v71 = *(_QWORD *)(v0 + 264);
  v70 = *(_QWORD *)(v0 + 272);
  v73 = *(_QWORD *)(v0 + 248);
  v72 = *(_QWORD *)(v0 + 256);
  v74 = *(_QWORD *)(v0 + 240);
  v75 = *(_QWORD *)(v0 + 216);
  v93 = *(_QWORD *)(v0 + 192);
  v95 = *(_QWORD *)(v0 + 168);
  v98 = *(_QWORD *)(v0 + 144);
  v101 = *(_QWORD *)(v0 + 120);
  v105 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v93);
  swift_task_dealloc(v95);
  swift_task_dealloc(v98);
  swift_task_dealloc(v101);
  swift_task_dealloc(v105);
  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v92, v91, v90, v89);
}

uint64_t sub_10019F1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 400);
  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10019F848;
  else
    v3 = sub_10019F220;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10019F220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  MusicCatalogResourceResponse.items.getter(*(_QWORD *)(v0 + 152));
  sub_100055870(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 88);
    sub_100008758(*(_QWORD *)(v0 + 96), &qword_10048DA48);
    v8 = swift_bridgeObjectRetain_n(v7, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter(v9);
    v11 = os_log_type_enabled(v9, v10);
    v13 = *(_QWORD *)(v0 + 184);
    v12 = *(_QWORD *)(v0 + 192);
    v14 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 176);
    v17 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v18 = *(char **)(v0 + 88);
    if (v11)
    {
      v57 = *(_QWORD *)(v0 + 184);
      v19 = *(char **)(v0 + 80);
      v55 = *(_QWORD *)(v0 + 176);
      v20 = swift_slowAlloc(12, -1);
      v53 = v12;
      v21 = swift_slowAlloc(32, -1);
      v59 = v21;
      *(_DWORD *)v20 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v20 + 4) = sub_100019400(v19, v18, &v59);
      swift_bridgeObjectRelease_n(v18, 3);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to fetch song from Media API with catalogID=%{public}s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v53, v55);
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v15);
    }
    v56 = 0;
    v58 = 0;
    v52 = 0;
    v54 = 0;
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 184);
    v24 = *(_QWORD *)(v0 + 168);
    v48 = *(_QWORD *)(v0 + 176);
    v50 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 128);
    v30 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v27 + 32))(v28, *(_QWORD *)(v0 + 96), v29);
    Song.artwork.getter(v30);
    v31 = sub_10019E2C0(v22);
    v56 = v32;
    v58 = v31;
    v52 = v34;
    v54 = v33;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v50, v48);
  }
  v35 = *(_QWORD *)(v0 + 344);
  v36 = *(_QWORD *)(v0 + 320);
  v37 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 264);
  v38 = *(_QWORD *)(v0 + 272);
  v40 = *(_QWORD *)(v0 + 248);
  v41 = *(_QWORD *)(v0 + 256);
  v42 = *(_QWORD *)(v0 + 240);
  v43 = *(_QWORD *)(v0 + 216);
  v45 = *(_QWORD *)(v0 + 192);
  v46 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 120);
  v51 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v0 + 8))(v58, v56, v54, v52);
}

uint64_t sub_10019F564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 392);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 392);
  v7 = *(_QWORD *)(v0 + 360);
  v8 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 352);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 368);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 352);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_100019400(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch colors for music video from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

uint64_t sub_10019F848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 408);
  swift_bridgeObjectRetain();
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 176);
  v10 = *(char **)(v0 + 88);
  if (v5)
  {
    v32 = *(_QWORD *)(v0 + 192);
    v11 = *(char **)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 176);
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v34 = v14;
    *(_DWORD *)v12 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_100019400(v11, v10, &v34);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain(v6);
    v15 = _swift_stdlib_bridgeErrorToNSError(v6);
    *(_QWORD *)(v12 + 14) = v15;
    *v13 = v15;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to fetch colors for song from Media API with catalogID=%{public}s: %@", (uint8_t *)v12, 0x16u);
    v16 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v16);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);

    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v30);
  }
  else
  {

    swift_errorRelease(v6);
    swift_errorRelease(v6);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  v17 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 320);
  v19 = *(_QWORD *)(v0 + 296);
  v21 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 168);
  v29 = *(_QWORD *)(v0 + 144);
  v31 = *(_QWORD *)(v0 + 120);
  v33 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 368));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
}

void sub_10019FB2C(char *a1)
{
  char *v1;
  uint64_t v2;
  double *v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  double *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  char *v26;

  v26 = a1;
  swift_bridgeObjectRetain();
  sub_10019C7E0(&v26, sub_10019CEE4);
  v1 = v26;
  v2 = *((_QWORD *)v26 + 2);
  if (v2)
  {
    swift_retain(v26);
    v3 = (double *)(v1 + 48);
    v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (*v3 < 0.5)
      {
        v25 = *(_OWORD *)v3;
        v24 = *((_OWORD *)v3 - 1);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
        v26 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000773C0(0, *((_QWORD *)v4 + 2) + 1, 1);
          v4 = v26;
        }
        v6 = *((_QWORD *)v4 + 2);
        v5 = *((_QWORD *)v4 + 3);
        v7 = v25;
        if (v6 >= v5 >> 1)
        {
          sub_1000773C0((char *)(v5 > 1), v6 + 1, 1);
          v7 = v25;
          v4 = v26;
        }
        *((_QWORD *)v4 + 2) = v6 + 1;
        v8 = &v4[32 * v6];
        *((_OWORD *)v8 + 2) = v24;
        *((_OWORD *)v8 + 3) = v7;
      }
      v3 += 4;
      --v2;
    }
    while (v2);
    swift_release(v1);
  }
  else
  {
    v4 = (char *)_swiftEmptyArrayStorage;
  }
  v26 = v4;
  swift_retain(v4);
  sub_10019C7E0(&v26, sub_10019C84C);
  swift_release(v4);
  v10 = v26;
  swift_retain(v26);
  v11 = sub_10019DE14(v1, (uint64_t)v10);
  swift_release(v1);
  swift_release(v10);
  v26 = v11;
  sub_10008AD10((uint64_t)v10);
  v12 = v26;
  v13 = *((_QWORD *)v26 + 2);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    v18 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) == 0)
      goto LABEL_16;
LABEL_23:
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(1, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(2, v18);
    specialized _ArrayBuffer._getElementSlowPath(_:)(3, v18);
    goto LABEL_21;
  }
  v26 = (char *)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v13);
  v14 = (double *)(v12 + 56);
  do
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", *(v14 - 3), *(v14 - 2), *(v14 - 1), *v14);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v16 = *((_QWORD *)v26 + 2);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
    v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v15);
    specialized ContiguousArray._endMutation()(v17);
    v14 += 4;
    --v13;
  }
  while (v13);
  v18 = (unint64_t)v26;
  swift_bridgeObjectRelease();
  if ((v18 & 0xC000000000000001) != 0)
    goto LABEL_23;
LABEL_16:
  v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v19 == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v19 < 3)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v19 != 3)
  {
    v20 = *(void **)(v18 + 40);
    v21 = *(void **)(v18 + 48);
    v22 = *(void **)(v18 + 56);
    *(id *)(v18 + 32);
    v20;
    v21;
    v23 = v22;
LABEL_21:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_27:
  __break(1u);
  swift_release(v18);
  __break(1u);
  swift_release(v26);
  __break(1u);
}

uint64_t sub_10019FE5C(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, double a18)
{
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v33;

  v21 = a6 + 0.3;
  if (a6 + 0.3 > 1.0)
    v21 = 1.0;
  v33 = v21;
  if (a7 + 0.2 <= 1.0)
    v22 = a7 + 0.2;
  else
    v22 = 1.0;
  if (a2 + 0.5 <= 1.0)
    v23 = a2 + 0.5;
  else
    v23 = 1.0;
  if (a3 + 0.2 <= 1.0)
    v24 = a3 + 0.2;
  else
    v24 = 1.0;
  v25 = -0.5;
  if (a8 < 0.5)
    v25 = 0.5;
  v26 = v25 + a8;
  if (a18 + 0.8 <= 1.0)
    v27 = a18 + 0.8;
  else
    v27 = 1.0;
  v28 = sub_100005574(&qword_10048E7E0);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100384BB0;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v33;
  *(double *)(v29 + 80) = v22;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a1;
  *(double *)(v29 + 104) = v23;
  *(double *)(v29 + 112) = v24;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(double *)(v29 + 128) = v26;
  *(_QWORD *)(v29 + 136) = a17;
  *(double *)(v29 + 144) = v27;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_10019FB2C((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_10019FFD0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, uint64_t a18, uint64_t a19, double a20,uint64_t a21)
{
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (a6 + 0.1 <= 1.0)
    v25 = a6 + 0.1;
  else
    v25 = 1.0;
  if (a17 + 0.4 <= 1.0)
    v26 = a17 + 0.4;
  else
    v26 = 1.0;
  if (a20 + -0.2 < 0.0)
    v27 = 0.0;
  else
    v27 = a20 + -0.2;
  v28 = sub_100005574(&qword_10048E7E0);
  v29 = swift_allocObject(v28, 160, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100384BB0;
  *(double *)(v29 + 32) = a1;
  *(double *)(v29 + 40) = a2;
  *(double *)(v29 + 48) = a3;
  *(double *)(v29 + 56) = a4;
  *(double *)(v29 + 64) = a5;
  *(double *)(v29 + 72) = v25;
  *(double *)(v29 + 80) = a7;
  *(_QWORD *)(v29 + 88) = 0x3FF0000000000000;
  *(double *)(v29 + 96) = a8;
  *(double *)(v29 + 104) = v26;
  *(_QWORD *)(v29 + 112) = a18;
  *(_QWORD *)(v29 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v29 + 128) = a19;
  *(double *)(v29 + 136) = v27;
  *(_QWORD *)(v29 + 144) = a21;
  *(_QWORD *)(v29 + 152) = 0x3FF0000000000000;
  sub_10019FB2C((char *)v29);
  v31 = v30;
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1001A0130(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, double a17, double a18, uint64_t a19, double a20,double a21)
{
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v23 = a6 + 0.2;
  if (v23 <= 1.0)
    v24 = v23;
  else
    v24 = 1.0;
  v25 = a7 + 0.1;
  if (v25 <= 1.0)
    v26 = v25;
  else
    v26 = 1.0;
  if (a17 + 0.1 <= 1.0)
    v27 = a17 + 0.1;
  else
    v27 = 1.0;
  if (a18 + 0.2 <= 1.0)
    v28 = a18 + 0.2;
  else
    v28 = 1.0;
  if (a20 + 0.2 <= 1.0)
    v29 = a20 + 0.2;
  else
    v29 = 1.0;
  if (a21 + 0.6 <= 1.0)
    v30 = a21 + 0.6;
  else
    v30 = 1.0;
  v31 = sub_100005574(&qword_10048E7E0);
  v32 = swift_allocObject(v31, 160, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100384BB0;
  *(double *)(v32 + 32) = a1;
  *(double *)(v32 + 40) = a2;
  *(double *)(v32 + 48) = a3;
  *(double *)(v32 + 56) = a4;
  *(double *)(v32 + 64) = a5;
  *(double *)(v32 + 72) = v24;
  *(double *)(v32 + 80) = v26;
  *(_QWORD *)(v32 + 88) = 0x3FF0000000000000;
  *(double *)(v32 + 96) = a8;
  *(double *)(v32 + 104) = v27;
  *(double *)(v32 + 112) = v28;
  *(_QWORD *)(v32 + 120) = 0x3FF0000000000000;
  *(_QWORD *)(v32 + 128) = a19;
  *(double *)(v32 + 136) = v29;
  *(double *)(v32 + 144) = v30;
  *(_QWORD *)(v32 + 152) = 0x3FF0000000000000;
  sub_10019FB2C((char *)v32);
  v34 = v33;
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1001A02A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 368) = a3;
  *(_QWORD *)(v3 + 336) = a1;
  *(_QWORD *)(v3 + 344) = a2;
  return swift_task_switch(sub_1001A02C4, 0, 0);
}

uint64_t sub_1001A02C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  int v4;
  void *v5;
  _QWORD *v6;

  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v1 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_10038FF50);
  v3 = swift_getKeyPath(&unk_10038FF78);
  static Published.subscript.getter((_QWORD *)(v0 + 176), v1, KeyPath, v3);
  swift_release(v3);
  swift_release(KeyPath);
  v4 = *(unsigned __int8 *)(v0 + 177);
  v5 = *(void **)(v0 + 256);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v4 != 1)
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  v6 = (_QWORD *)swift_task_alloc(dword_100494DFC);
  *(_QWORD *)(v0 + 352) = v6;
  *v6 = v0;
  v6[1] = sub_1001A0428;
  return sub_10019E53C(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 344), *(_BYTE *)(v0 + 368));
}

uint64_t sub_1001A0428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)*v4;
  v5[37] = v4;
  v5[38] = a1;
  v5[39] = a2;
  v5[40] = a3;
  v5[41] = a4;
  v6 = v5[44];
  v5[45] = a1;
  swift_task_dealloc(v6);
  return swift_task_switch(sub_1001A0490, 0, 0);
}

uint64_t sub_1001A0490()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t inited;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id v95;
  id v96;
  id v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  const char *v103;
  NSObject *v104;
  os_log_type_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  id v121;
  char *v122;
  char *v123;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  uint64_t v129;
  double v130;
  double v131;
  uint64_t v132;
  double v133;
  double v134;
  uint64_t v135;
  void *v136;
  double v137;
  double log;
  NSObject *loga;
  void *v140;
  uint64_t v141[2];

  v1 = *(void **)(v0 + 360);
  if (!v1)
  {
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v36, v37, v38, v39);
  }
  v2 = v0 + 16;
  v3 = *(void **)(v0 + 312);
  v4 = *(void **)(v0 + 320);
  v5 = *(void **)(v0 + 328);
  v6 = qword_10048C8F0;
  v7 = v1;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v13;
  v16 = v12;
  v18 = v11;
  if (v6 != -1)
    swift_once(&qword_10048C8F0, sub_10019C6CC);
  v19 = *(_QWORD *)(v0 + 344);
  v20 = type metadata accessor for Logger(0, v17);
  sub_1000086B4(v20, (uint64_t)static Logger.playlistCovers);
  swift_bridgeObjectRetain_n(v19, 2);
  v21 = v14;
  v22 = v15;
  v23 = v16;
  v24 = v18;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  v27 = os_log_type_enabled(v25, v26);
  v28 = *(char **)(v0 + 344);
  v140 = v22;
  v136 = v23;
  if (v27)
  {
    v29 = *(char **)(v0 + 336);
    v30 = swift_slowAlloc(22, -1);
    v31 = swift_slowAlloc(64, -1);
    v141[0] = v31;
    *(_DWORD *)v30 = 136446466;
    v32 = (char *)sub_10019C4A0(v24, v23, v140, v21);
    *(_QWORD *)(v30 + 4) = sub_100019400(v32, v33, v141);
    swift_bridgeObjectRelease();

    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v34 = v29;
    v22 = v140;
    *(_QWORD *)(v30 + 14) = sub_100019400(v34, v28, v141);
    swift_bridgeObjectRelease_n(v28, 3);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Retrieved artwork colors=%{public}s from Media API for song with identifiers=%{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy(v31, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    v35 = v30;
    v2 = v0 + 16;
    swift_slowDealloc(v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v28, 2);
  }
  v40 = UIColor.hsba.getter();
  v42 = v41;
  v44 = v43;
  v137 = v43;
  v46 = v45;

  log = UIColor.hsba.getter();
  v133 = v48;
  v134 = v47;
  v135 = v49;

  v50 = UIColor.hsba.getter();
  v130 = v52;
  v131 = v51;
  v132 = v53;

  v54 = UIColor.hsba.getter();
  v56 = v55;
  v58 = v57;
  v129 = v59;

  v60 = sub_100005574(&qword_10048E7E0);
  inited = swift_initStackObject(v60, v2);
  *(_OWORD *)(inited + 16) = xmmword_100384BB0;
  *(double *)(inited + 32) = v40;
  *(double *)(inited + 40) = v42;
  *(double *)(inited + 48) = v44;
  *(double *)(inited + 56) = v46;
  *(double *)(inited + 64) = log;
  *(double *)(inited + 72) = v134;
  *(double *)(inited + 80) = v133;
  *(_QWORD *)(inited + 88) = v135;
  *(double *)(inited + 96) = v50;
  *(double *)(inited + 104) = v131;
  *(double *)(inited + 112) = v130;
  *(_QWORD *)(inited + 120) = v132;
  *(_QWORD *)(inited + 128) = v54;
  *(double *)(inited + 136) = v56;
  *(double *)(inited + 144) = v58;
  *(_QWORD *)(inited + 152) = v129;
  if ((v42 <= 0.05 || v137 <= 0.2) && (v134 <= 0.05 || v133 <= 0.2))
  {
    v62 = swift_bridgeObjectRelease();
    if ((v131 <= 0.05 || v130 <= 0.2) && (v56 <= 0.05 || v58 <= 0.2))
    {
      v104 = Logger.logObject.getter(v62);
      v105 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v104, v105))
      {
        v106 = v24;
        v107 = swift_slowAlloc(12, -1);
        v108 = swift_slowAlloc(32, -1);
        v141[0] = v108;
        *(_DWORD *)v107 = 136446210;
        if (qword_10048C8E0 != -1)
          swift_once(&qword_10048C8E0, sub_10019293C);
        v109 = (char *)PlaylistCovers.RecipeColors.description.getter((void *)qword_1004A22C0, *(void **)algn_1004A22C8, (void *)qword_1004A22D0, qword_1004A22D8);
        *(_QWORD *)(v107 + 4) = sub_100019400(v109, v110, v141);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "Using black and white colors=%{public}s", (uint8_t *)v107, 0xCu);
        swift_arrayDestroy(v108, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v108, -1, -1);
        swift_slowDealloc(v107, -1, -1);

        v24 = v106;
      }
      else
      {

      }
      if (qword_10048C8E0 != -1)
        swift_once(&qword_10048C8E0, sub_10019293C);
      v125 = *(void **)algn_1004A22C8;
      v126 = (void *)qword_1004A22D0;
      v127 = qword_1004A22D8;
      v36 = (id)qword_1004A22C0;
      v37 = v125;
      v38 = v126;
      v39 = v127;

      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v36, v37, v38, v39);
    }
  }
  else
  {
    v62 = swift_bridgeObjectRelease();
  }
  v128 = v24;
  if (v133 < 0.3 && v130 < 0.3)
  {
    v70 = (void *)sub_10019FE5C(v40, v42, v137, v46, log, v134, v133, v50, v62, v63, v64, v65, v66, v67, v68, v69, *(uint64_t *)&v131, v130);
    v72 = v71;
    v74 = v73;
    v76 = v75;
    v77 = v70;
    v78 = v72;
    v79 = v74;
    v80 = v76;
    v36 = v77;
    v37 = v78;
    v38 = v79;
    v39 = v80;
    v81 = Logger.logObject.getter(v39);
    v82 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = swift_slowAlloc(12, -1);
      v84 = swift_slowAlloc(32, -1);
      v141[0] = v84;
      *(_DWORD *)v83 = 136446210;
      v85 = (char *)PlaylistCovers.RecipeColors.description.getter(v36, v37, v38, v39);
      *(_QWORD *)(v83 + 4) = sub_100019400(v85, v86, v141);
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Using recipe 1 colors=%{public}s", (uint8_t *)v83, 0xCu);
      swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v83, -1, -1);

LABEL_33:
      return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v36, v37, v38, v39);
    }
LABEL_32:

    goto LABEL_33;
  }
  if (v133 <= 0.3 || v130 <= 0.3)
  {
    v111 = (void *)sub_1001A0130(v40, v42, v137, v46, log, v134, v133, v50, v62, v63, v64, v65, v66, v67, v68, v69, v131, v130, v54,
                     v56,
                     v58);
    v113 = v112;
    v115 = v114;
    v117 = v116;
    v118 = v111;
    v119 = v113;
    v120 = v115;
    v121 = v117;
    v36 = v118;
    v37 = v119;
    v38 = v120;
    v39 = v121;
    v81 = Logger.logObject.getter(v39);
    v98 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v81, v98))
      goto LABEL_32;
    loga = v81;
    v99 = swift_slowAlloc(12, -1);
    v100 = swift_slowAlloc(32, -1);
    v141[0] = v100;
    *(_DWORD *)v99 = 136446210;
    v122 = (char *)PlaylistCovers.RecipeColors.description.getter(v36, v37, v38, v39);
    *(_QWORD *)(v99 + 4) = sub_100019400(v122, v123, v141);
    swift_bridgeObjectRelease();

    v103 = "Using recipe 3 colors=%{public}s";
  }
  else
  {
    v87 = (void *)sub_10019FFD0(v40, v42, v137, v46, log, v134, v133, v50, v62, v63, v64, v65, v66, v67, v68, v69, v131, *(uint64_t *)&v130, v54,
                    v56,
                    *(uint64_t *)&v58);
    v89 = v88;
    v91 = v90;
    v93 = v92;
    v94 = v87;
    v95 = v89;
    v96 = v91;
    v97 = v93;
    v36 = v94;
    v37 = v95;
    v38 = v96;
    v39 = v97;
    v81 = Logger.logObject.getter(v39);
    v98 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v81, v98))
      goto LABEL_32;
    loga = v81;
    v99 = swift_slowAlloc(12, -1);
    v100 = swift_slowAlloc(32, -1);
    v141[0] = v100;
    *(_DWORD *)v99 = 136446210;
    v101 = (char *)PlaylistCovers.RecipeColors.description.getter(v36, v37, v38, v39);
    *(_QWORD *)(v99 + 4) = sub_100019400(v101, v102, v141);
    swift_bridgeObjectRelease();

    v103 = "Using recipe 2 colors=%{public}s";
  }
  _os_log_impl((void *)&_mh_execute_header, loga, v98, v103, (uint8_t *)v99, 0xCu);
  swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v100, -1, -1);
  swift_slowDealloc(v99, -1, -1);

  return (*(uint64_t (**)(id, id, id, id))(v0 + 8))(v36, v37, v38, v39);
}

uint64_t sub_1001A0F64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001A0F7C, 0, 0);
}

uint64_t sub_1001A0F7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelGenericObject);
  v2 = (void *)swift_dynamicCastObjCClass(v1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "anyObject");
    goto LABEL_5;
  }
  v4 = *(_QWORD *)(v0 + 16);
  objc_opt_self(MPModelStoreBrowseContentItem);
  v5 = (void *)swift_dynamicCastObjCClass(v4);
  if (v5)
  {
    v3 = objc_msgSend(v5, "innerObject");
LABEL_5:
    v6 = v3;
    if (v6)
      goto LABEL_7;
  }
  v6 = *(id *)(v0 + 16);
LABEL_7:
  ObjectType = swift_getObjectType();
  v8 = objc_msgSend(v6, "identifiers");
  v9 = sub_10009ACF0(ObjectType, 2, 0, v8);
  v11 = v10;

  *(_QWORD *)(v0 + 24) = v11;
  if (v11)
  {
    if ((objc_msgSend(*(id *)(v0 + 16), "hasLoadedValueForKey:", MPModelPropertySongHasVideo) & 1) != 0)
      v13 = objc_msgSend(*(id *)(v0 + 16), "hasVideo");
    else
      v13 = 0;
    v23 = swift_task_alloc(dword_100494D3C);
    *(_QWORD *)(v0 + 32) = v23;
    *(_QWORD *)v23 = v0;
    *(_QWORD *)(v23 + 8) = sub_1001A1230;
    *(_BYTE *)(v23 + 368) = v13;
    *(_QWORD *)(v23 + 336) = v9;
    *(_QWORD *)(v23 + 344) = v11;
    return swift_task_switch(sub_1001A02C4, 0, 0);
  }
  else
  {
    if (qword_10048C8F0 != -1)
      swift_once(&qword_10048C8F0, sub_10019C6CC);
    v14 = *(void **)(v0 + 16);
    v15 = type metadata accessor for Logger(0, v12);
    sub_1000086B4(v15, (uint64_t)static Logger.playlistCovers);
    v16 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.default.getter();
    v18 = os_log_type_enabled(v16, v17);
    v19 = *(void **)(v0 + 16);
    if (v18)
    {
      v20 = swift_slowAlloc(12, -1);
      v21 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v20 = 138543362;
      *(_QWORD *)(v20 + 4) = v19;
      *v21 = v19;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No catalogID for MPModelSong=%{public}@", (uint8_t *)v20, 0xCu);
      v22 = sub_100005574(&qword_100494910);
      swift_arrayDestroy(v21, 1, v22);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 8))(0, 0, 0, 0);
  }
}

uint64_t sub_1001A1230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v11;

  v9 = *(_QWORD *)(*v4 + 24);
  v11 = *v4;
  swift_task_dealloc(*(_QWORD *)(*v4 + 32));
  swift_bridgeObjectRelease(v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4);
}

unint64_t sub_1001A12B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10048D9A8;
  if (!qword_10048D9A8)
  {
    v1 = sub_100005600(&qword_10048D9A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10048D9A8);
  }
  return result;
}

uint64_t sub_1001A12FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001A1348()
{
  unint64_t result;

  result = qword_100494D40;
  if (!qword_100494D40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.RecipeColors, &type metadata for PlaylistCovers.RecipeColors);
    atomic_store(result, (unint64_t *)&qword_100494D40);
  }
  return result;
}

char *_s6SourceOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v12 = *a2;
      *(_QWORD *)a1 = *a2;
      v13 = v12;
      v8 = a1;
      v9 = a3;
      v10 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v14 = sub_100005574(&qword_10048D9A0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void _s6SourceOwxx(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  switch(EnumCaseMultiPayload)
  {
    case 2:

      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 0:
      v4 = sub_100005574(&qword_10048D9A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
  }
}

void **_s6SourceOwcp(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = *a2;
    *a1 = *a2;
    v11 = v10;
    v7 = a1;
    v8 = a3;
    v9 = 2;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    v7 = a1;
    v8 = a3;
    v9 = 1;
  }
  else
  {
    v12 = sub_100005574(&qword_10048D9A0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    v7 = a1;
    v8 = a3;
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

void **_s6SourceOwca(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1001A166C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *a2;
      *a1 = *a2;
      v11 = v10;
      v7 = a1;
      v8 = a3;
      v9 = 2;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      v7 = a1;
      v8 = a3;
      v9 = 1;
    }
    else
    {
      v12 = sub_100005574(&qword_10048D9A0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_1001A166C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistCovers.Source(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *_s6SourceOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_100005574(&qword_10048D9A0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *_s6SourceOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1001A166C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_100005574(&qword_10048D9A0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_1001A17D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_1001A1850(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
  }
}

void sub_1001A1850(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100494DC8)
  {
    v2 = type metadata accessor for Track(255);
    v3 = type metadata accessor for MusicItemCollection(a1, v2, &protocol witness table for Track);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100494DC8);
  }
}

void _s12RecipeColorsVwxx(id *a1)
{

}

_QWORD *_s12RecipeColorsVwcp(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t _s12RecipeColorsVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t _s12RecipeColorsVwta(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistCovers.RecipeColors()
{
  return &type metadata for PlaylistCovers.RecipeColors;
}

uint64_t sub_1001A1A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004916E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(void *a1, int a2, id a3, void **a4, void (*a5)(void), uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *Strong;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __n128 v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  void (*v45)(void);
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  void (*v65)(void);
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  _QWORD *v76;
  objc_class *v77;
  char *v78;
  uint64_t v79;
  id v80;
  const void *v81;
  id v82;
  uint64_t v83;
  void (*v84)(void *);
  double v85;
  int v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  id v96;
  id v97;
  void *v98;
  void *v99;
  char v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  id v106;
  _QWORD *v107;
  id v108;
  _QWORD *v109;
  NSObject *v110;
  os_log_type_t v111;
  uint64_t v112;
  id v113;
  id v114;
  char *v115;
  char *v116;
  char *v117;
  _QWORD *v118;
  id v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  id v130;
  _QWORD *v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned __int8 v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned __int8 v148;
  double v149;
  uint64_t v150;
  uint64_t v151;
  double v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  id v163;
  int v164;
  _QWORD *v165;
  id v166;
  __objc2_prot *v167;
  objc_super v168;
  void **aBlock;
  uint64_t v170;
  void *v171;
  void *v172;
  void *v173;
  uint64_t v174;
  uint64_t v175[5];
  uint64_t v176;

  v7 = v6;
  LODWORD(v166) = a2;
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (void **)((char *)&v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1000651F0();
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v156, v157, v158, v159, v160, v161, v162);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
  {
    if (qword_10048C8F8 != -1)
      swift_once(&qword_10048C8F8, sub_1001A355C);
    v57 = type metadata accessor for Logger(0, v27);
    sub_1000086B4(v57, (uint64_t)qword_100494E20);
    v58 = a1;
    v59 = Logger.logObject.getter(v58);
    v60 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = swift_slowAlloc(12, -1);
      v62 = swift_slowAlloc(32, -1);
      v175[0] = v62;
      *(_DWORD *)v61 = 136446210;
      v63 = v58;
      v64 = objc_msgSend(v63, "description");
      v65 = a5;
      v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v68 = v67;

      v69 = (char *)v66;
      a5 = v65;
      *(_QWORD *)(v61 + 4) = sub_100019400(v69, v68, v175);

      swift_bridgeObjectRelease(v68);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Attempted to present viewController=%{public}s but there is no viewController to present onto.", (uint8_t *)v61, 0xCu);
      swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1, -1);
      swift_slowDealloc(v61, -1, -1);

      if (!v65)
        return;
    }
    else
    {

      if (!a5)
        return;
    }
    a5();
    return;
  }
  v165 = v7;
  v163 = a3;
  v164 = (int)a4;
  a3 = Strong;
  v28 = objc_msgSend(a3, "presentedViewController");
  v7 = a3;
  if (v28)
  {
    v29 = a3;
    do
    {
      v7 = v28;

      v28 = objc_msgSend(v7, "presentedViewController");
      v29 = v7;
    }
    while (v28);
  }
  v30 = (void **)objc_msgSend(v7, "transitionCoordinator");
  if (v30)
  {
    a4 = v30;
    if (qword_10048C8F8 == -1)
    {
LABEL_8:
      v32 = type metadata accessor for Logger(0, v31);
      sub_1000086B4(v32, (uint64_t)qword_100494E20);
      v33 = a1;
      swift_unknownObjectRetain_n(a4, 2, v34);
      v35 = v33;
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v39 = swift_slowAlloc(22, -1);
        v162 = a3;
        v40 = v39;
        v160 = swift_slowAlloc(64, -1);
        v175[0] = v160;
        *(_DWORD *)v40 = 136446466;
        v41 = v35;
        v42 = objc_msgSend(v41, "description");
        LODWORD(v159) = v38;
        v43 = a6;
        v44 = v42;
        v45 = a5;
        v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v161 = (uint64_t)v35;
        v48 = v47;

        a6 = v43;
        v49 = (char *)v46;
        a5 = v45;
        *(_QWORD *)(v40 + 4) = sub_100019400(v49, v48, v175);

        swift_bridgeObjectRelease(v48);
        *(_WORD *)(v40 + 12) = 2082;
        aBlock = a4;
        swift_unknownObjectRetain(a4);
        v50 = sub_100005574(&qword_100494F00);
        v51 = (char *)String.init<A>(describing:)(&aBlock, v50);
        v53 = v52;
        *(_QWORD *)(v40 + 14) = sub_100019400(v51, v52, v175);
        swift_unknownObjectRelease_n(a4, 2);
        v54 = v53;
        v35 = (id)v161;
        swift_bridgeObjectRelease(v54);
        _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v159, "Attempted to present %{public}s, but needs to wait for the ongoing transition %{public}s to complete first", (uint8_t *)v40, 0x16u);
        v55 = v160;
        swift_arrayDestroy(v160, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v55, -1, -1);
        v56 = v40;
        a3 = v162;
        swift_slowDealloc(v56, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a4, 2);
      }
      v100 = (char)v166;
      sub_10005173C((uint64_t)v165, (uint64_t)v175);
      v101 = swift_allocObject(&unk_100452B38, 144, 7);
      *(_QWORD *)(v101 + 16) = a4;
      *(_QWORD *)(v101 + 24) = v35;
      sub_100014AC0((uint64_t)v175, v101 + 32);
      *(_BYTE *)(v101 + 104) = v100 & 1;
      *(_QWORD *)(v101 + 112) = v163;
      *(_BYTE *)(v101 + 120) = v164 & 1;
      *(_QWORD *)(v101 + 128) = a5;
      *(_QWORD *)(v101 + 136) = a6;
      v173 = sub_1001A37F8;
      v174 = v101;
      aBlock = _NSConcreteStackBlock;
      v170 = 1107296256;
      v171 = sub_1001A3290;
      v172 = &unk_100452B50;
      v102 = _Block_copy(&aBlock);
      v103 = v174;
      v104 = v35;
      swift_unknownObjectRetain(a4);
      sub_10003A434((uint64_t)a5, a6);
      objc_msgSend(a4, "animateAlongsideTransition:completion:", 0, v102, swift_release(v103).n128_f64[0]);
      _Block_release(v102);

      swift_unknownObjectRelease(a4);
      return;
    }
LABEL_59:
    swift_once(&qword_10048C8F8, sub_1001A355C);
    goto LABEL_8;
  }
  if ((objc_msgSend(v7, "canPresentViewControllers") & 1) != 0)
  {
    if ((v166 & 1) != 0)
    {
      v71 = objc_msgSend(v7, "view");
      if (!v71)
      {
        __break(1u);
        return;
      }
      v72 = v71;
      v73 = objc_msgSend(v71, "window");

      if (v73)
      {
        v74 = objc_msgSend(v73, "traitCollection");

        v75 = objc_msgSend(v74, "horizontalSizeClass");
        if (v75 == (id)2 && *((unsigned __int8 *)v165 + 48) != 255)
          objc_msgSend(a1, "setModalPresentationStyle:", 7);
      }
    }
    v161 = a6;
    v76 = v7;
    objc_msgSend(a1, "setPlayActivityFeatureNameSourceViewController:", v76);
    v77 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    v78 = (char *)objc_allocWithZone(v77);
    v79 = swift_unknownObjectWeakInit(&v78[OBJC_IVAR____TtCE9MusicCoreCSo16UIViewControllerP33_DFE32C8D797FD8FF4F7188EA667D17A427WeakViewControllerReference_viewController], 0);
    swift_unknownObjectWeakAssign(v79, v76);
    v168.receiver = v78;
    v168.super_class = v77;
    v80 = objc_msgSendSuper2(&v168, "init");
    if (qword_10048C7A0 != -1)
      swift_once(&qword_10048C7A0, sub_1000F09DC);
    v81 = (const void *)qword_100491B80;
    v82 = v80;
    objc_setAssociatedObject(a1, v81, v82, (void *)1);

    v83 = (uint64_t)v165;
    v84 = (void (*)(void *))v165[7];
    if (v84)
      v84(a1);
    v166 = objc_msgSend(a1, "popoverPresentationController");
    if (!v166)
      goto LABEL_53;
    v162 = a3;
    v86 = *(unsigned __int8 *)(v83 + 48);
    if (v86 != 255)
    {
      v87 = *(void **)(v83 + 8);
      v88 = *(_QWORD *)(v83 + 16);
      v90 = *(_QWORD *)(v83 + 24);
      v89 = *(_QWORD *)(v83 + 32);
      v91 = *(_QWORD *)(v83 + 40);
      v167 = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate;
      v92 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v167);
      v165 = (_QWORD *)v91;
      if (v92)
      {
        v93 = v92;
        v160 = (uint64_t)a5;
        v94 = a1;
        v95 = v91;
        v96 = v94;
        v156 = v87;
        v157 = v88;
        v158 = v90;
        v159 = v89;
        sub_1001A3774(v87, v88, v90, v89, v95, v86);
        v97 = objc_msgSend(v96, "presentationController");
        if (v97)
        {
          v98 = v97;
          objc_msgSend(v97, "setDelegate:", v93);

        }
        a5 = (void (*)(void))v160;
        v89 = v159;
        v90 = v158;
        v88 = v157;
        v99 = v156;
      }
      else
      {
        sub_1001A373C(v87, v88, v90, v89, v91, v86);
        v99 = v87;
      }
      objc_msgSend(v166, "setPermittedArrowDirections:", v163);
      v132 = objc_msgSend(a1, "popoverPresentationController");
      if (v132)
      {
        v133 = v132;
        if (v86)
        {
          v134 = v89;
          v135 = v89;
          v136 = (uint64_t)v165;
          if (v86 == 1)
          {
            sub_1001A373C(v99, v88, v90, v134, (uint64_t)v165, 1u);
            objc_msgSend(v133, "setBarButtonItem:", v99);

            sub_1001A3760(v99, v88, v90, v135, v136, 1u);
            sub_1001A3760(v99, v88, v90, v135, v136, 1u);
            v137 = v99;
            v138 = v88;
            v139 = v90;
            v140 = v135;
            v141 = v136;
            v142 = 1;
          }
          else
          {
            sub_1001A373C(v99, v88, v90, v134, (uint64_t)v165, 2u);
            swift_unknownObjectRetain(v99);
            objc_msgSend(v133, "setSourceItem:", v99);

            sub_1001A3760(v99, v88, v90, v135, v136, 2u);
            sub_1001A3760(v99, v88, v90, v135, v136, 2u);
            v137 = v99;
            v138 = v88;
            v139 = v90;
            v140 = v135;
            v141 = v136;
            v142 = 2;
          }
          sub_1000137A4(v137, v138, v139, v140, v141, v142);
          goto LABEL_52;
        }
        v149 = *(double *)&v89;
        v150 = v89;
        v151 = (uint64_t)v165;
        v152 = *(double *)&v165;
        objc_msgSend(v132, "setSourceView:", v99);
        objc_msgSend(v133, "setSourceRect:", *(double *)&v88, *(double *)&v90, v149, v152);

        sub_1001A3760(v99, v88, v90, v150, v151, 0);
        v143 = v99;
        v144 = v88;
        v145 = v90;
        v146 = v150;
        v147 = v151;
        v148 = 0;
      }
      else
      {
        v143 = v99;
        v144 = v88;
        v145 = v90;
        v146 = v89;
        v147 = (uint64_t)v165;
        v148 = v86;
      }
      sub_1001A3760(v143, v144, v145, v146, v147, v148);
    }
LABEL_52:

    a3 = v162;
LABEL_53:
    if (a5)
    {
      v153 = v161;
      v175[4] = (uint64_t)a5;
      v176 = v161;
      v175[0] = (uint64_t)_NSConcreteStackBlock;
      v175[1] = 1107296256;
      v175[2] = (uint64_t)sub_1000BED80;
      v175[3] = (uint64_t)&unk_100452B00;
      v154 = _Block_copy(v175);
      v155 = v176;
      swift_retain(v153);
      *(_QWORD *)&v85 = swift_release(v155).n128_u64[0];
    }
    else
    {
      v154 = 0;
    }
    objc_msgSend(v76, "presentViewController:animated:completion:", a1, v164 & 1, v154, v85);
    _Block_release(v154);

    return;
  }
  v162 = a3;
  if (qword_10048C8F8 != -1)
    swift_once(&qword_10048C8F8, sub_1001A355C);
  v105 = type metadata accessor for Logger(0, v70);
  sub_1000086B4(v105, (uint64_t)qword_100494E20);
  v106 = a1;
  v107 = v7;
  v108 = v106;
  v109 = v107;
  v110 = Logger.logObject.getter(v109);
  v111 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v110, v111))
  {
    v112 = swift_slowAlloc(22, -1);
    v161 = swift_slowAlloc(64, -1);
    v175[0] = v161;
    *(_DWORD *)v112 = 136446466;
    v113 = v108;
    v114 = objc_msgSend(v113, "description");
    v115 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
    v160 = (uint64_t)a5;
    v117 = v116;

    *(_QWORD *)(v112 + 4) = sub_100019400(v115, v117, v175);
    swift_bridgeObjectRelease(v117);
    *(_WORD *)(v112 + 12) = 2082;
    v118 = v109;
    v119 = objc_msgSend(v118, "description");
    v120 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v119);
    v122 = v121;

    *(_QWORD *)(v112 + 14) = sub_100019400(v120, v122, v175);
    v123 = v122;
    a5 = (void (*)(void))v160;
    swift_bridgeObjectRelease(v123);
    _os_log_impl((void *)&_mh_execute_header, v110, v111, "Attempted to present %{public}s, but need to dismiss %{public}s first", (uint8_t *)v112, 0x16u);
    v124 = v161;
    swift_arrayDestroy(v161, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v124, -1, -1);
    swift_slowDealloc(v112, -1, -1);

  }
  else
  {

  }
  v125 = v163;
  sub_10005173C((uint64_t)v165, (uint64_t)v175);
  v126 = swift_allocObject(&unk_100452AC0, 144, 7);
  *(_QWORD *)(v126 + 16) = v109;
  *(_QWORD *)(v126 + 24) = v108;
  sub_100014AC0((uint64_t)v175, v126 + 32);
  *(_BYTE *)(v126 + 104) = v166 & 1;
  *(_QWORD *)(v126 + 112) = v125;
  v127 = v164 & 1;
  *(_BYTE *)(v126 + 120) = v127;
  *(_QWORD *)(v126 + 128) = a5;
  *(_QWORD *)(v126 + 136) = a6;
  v173 = sub_1001A3708;
  v174 = v126;
  aBlock = _NSConcreteStackBlock;
  v170 = 1107296256;
  v171 = sub_1000BED80;
  v172 = &unk_100452AD8;
  v128 = _Block_copy(&aBlock);
  v129 = v174;
  v130 = v108;
  sub_10003A434((uint64_t)a5, a6);
  v131 = v109;
  objc_msgSend(v131, "dismissViewControllerAnimated:completion:", v127, v128, swift_release(v129).n128_f64[0]);
  _Block_release(v128);

}

Swift::Void __swiftcall PresentationSource.Position.configure(_:)(UIViewController a1)
{
  __int128 *v1;
  void *v3;
  id v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  id v8;
  double v9;
  __int128 v10;
  double v11;
  double v12;
  id v13;
  _OWORD v14[3];
  __int128 v15;
  double v16;
  double v17;
  double v18;
  char v19;

  sub_1001A3830(v1, v14);
  v3 = *(void **)&v14[0];
  v4 = -[objc_class popoverPresentationController](a1.super.super.isa, "popoverPresentationController");
  if (v4)
  {
    v5 = v4;
    sub_1001A3830(v1, &v15);
    if (v19)
    {
      v7 = v15;
      if (v19 == 1)
      {
        v8 = v3;
        objc_msgSend(v5, "setBarButtonItem:", v7);
      }
      else
      {
        swift_unknownObjectRetain_n(v3, 2, v6);
        objc_msgSend(v5, "setSourceItem:", v7);
      }

      sub_1001A38D8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000137A4);
    }
    else
    {
      v10 = v15;
      v9 = v16;
      v11 = v17;
      v12 = v18;
      v13 = v3;
      objc_msgSend(v5, "setSourceView:", (_QWORD)v10);
      objc_msgSend(v5, "setSourceRect:", *((double *)&v10 + 1), v9, v11, v12);

    }
    sub_1001A38D8((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000137A4);
  }
}

uint64_t PresentationSource.viewController.getter()
{
  uint64_t v0;

  return swift_unknownObjectWeakLoadStrong(v0);
}

void PresentationSource.viewController.setter(void *a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(v1, a1);

}

void (*PresentationSource.viewController.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = swift_unknownObjectWeakLoadStrong(v1);
  return sub_1001A2AE8;
}

void sub_1001A2AE8(_QWORD *a1)
{
  id v1;

  v1 = (id)*a1;
  swift_unknownObjectWeakAssign(a1[1], *a1);

}

void PresentationSource.windowScene.getter()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  id v3;
  id v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0);
  if (Strong)
  {
    v2 = Strong;
    v3 = objc_msgSend(Strong, "view");

    if (v3)
    {
      v4 = objc_msgSend(v3, "window");

      objc_msgSend(v4, "windowScene");
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t PresentationSource.position.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001A3848(v1 + 8, a1);
}

uint64_t PresentationSource.position.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A3890(a1, v1 + 8);
}

uint64_t PresentationSource.configurationHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_10003A434(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t PresentationSource.configurationHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10003A5C8(*(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

id static PresentationSource.topmost(in:)@<X0>(uint64_t a1@<X8>)
{
  id result;
  id v3;
  id v4;
  void *v5;
  void *v6;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;

  result = UIWindowScene.rootViewController.getter();
  if (result)
  {
    v3 = result;
    v4 = objc_msgSend(v3, "presentedViewController");
    if (v4)
    {
      v5 = v3;
      while (1)
      {
        v6 = v4;
        if (!objc_msgSend(v4, "canPresentViewControllers"))
          break;

        v4 = objc_msgSend(v6, "presentedViewController");
        v5 = v6;
        if (!v4)
        {
          v5 = v6;
          goto LABEL_10;
        }
      }

      v3 = v6;
    }
    else
    {
      v5 = v3;
    }
LABEL_10:

    swift_unknownObjectWeakInit(v7, 0);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    v12 = 0;
    v13 = 0;
    swift_unknownObjectWeakAssign(v7, v5);

    sub_1001A3760((id)v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v10, v11);
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    v11 = -1;
    return (id)sub_100014AC0((uint64_t)v7, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 56) = xmmword_1003849A0;
  }
  return result;
}

void *PresentationSource.PresentingViewControllerOptions.allowsPresentation.unsafeMutableAddressor()
{
  return &static PresentationSource.PresentingViewControllerOptions.allowsPresentation;
}

void *static PresentationSource.topmostPresentedViewController(in:options:)(uint64_t a1, char a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = UIWindowScene.rootViewController.getter();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v4, "presentedViewController");
  if (v5)
  {
    v6 = v4;
    do
    {
      v7 = v5;
      if ((a2 & 1) != 0 && !objc_msgSend(v5, "canPresentViewControllers"))
      {

        v4 = v7;
        goto LABEL_11;
      }

      v5 = objc_msgSend(v7, "presentedViewController");
      v6 = v7;
    }
    while (v5);
    v6 = v7;
  }
  else
  {
    v6 = v4;
  }
LABEL_11:

  return v6;
}

uint64_t PresentationSource.init(viewController:position:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = swift_unknownObjectWeakInit(a3, 0);
  *(_QWORD *)(v5 + 40) = 0;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  v6 = v5 + 8;
  *(_BYTE *)(v5 + 48) = -1;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  swift_unknownObjectWeakAssign(v5, a1);

  return sub_1001A3890(a2, v6);
}

id static PresentationSource.topmostPresentedViewController(from:options:)(void *a1, char a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  v4 = objc_msgSend(v3, "presentedViewController");
  if (v4)
  {
    while (1)
    {
      v5 = v4;
      if ((a2 & 1) != 0 && (objc_msgSend(v4, "canPresentViewControllers") & 1) == 0)
        break;

      v4 = objc_msgSend(v5, "presentedViewController");
      v3 = v5;
      if (!v4)
        return v5;
    }

  }
  return v3;
}

double PresentationSource.init(windowScene:position:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  void *v7;
  double result;
  _BYTE v9[8];
  _OWORD v10[2];
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v6 = UIWindowScene.rootViewController.getter();
  if (v6)
  {
    v7 = v6;
    swift_unknownObjectWeakInit(v9, 0);
    v11 = 0;
    memset(v10, 0, sizeof(v10));
    v12 = -1;
    v13 = 0;
    v14 = 0;
    swift_unknownObjectWeakAssign(v9, v7);

    sub_1001A3890(a2, (uint64_t)v10);
    sub_100014AC0((uint64_t)v9, a3);

  }
  else
  {
    sub_1001A38D8(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001A3760);

    *(_QWORD *)(a3 + 48) = 0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a3 + 56) = xmmword_1003849A0;
  }
  return result;
}

uint64_t sub_1001A3000(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v15 = a9;
  if (qword_10048C8F8 != -1)
    swift_once(&qword_10048C8F8, sub_1001A355C);
  v16 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v16, (uint64_t)qword_100494E20);
  swift_unknownObjectRetain_n(a2, 2, v17);
  v18 = a3;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    type = v20;
    v21 = swift_slowAlloc(22, -1);
    v38 = a8;
    v39 = a2;
    v36 = swift_slowAlloc(64, -1);
    v40 = v36;
    *(_DWORD *)v21 = 136446466;
    swift_unknownObjectRetain(a2);
    v22 = sub_100005574(&qword_100494F00);
    v23 = (char *)String.init<A>(describing:)(&v39, v22);
    v25 = v24;
    *(_QWORD *)(v21 + 4) = sub_100019400(v23, v24, &v40);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v25);
    *(_WORD *)(v21 + 12) = 2082;
    v26 = v18;
    v27 = objc_msgSend(v26, "description");
    v28 = a6;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = a7;
    v32 = v31;

    v33 = (char *)v29;
    a6 = v28;
    v15 = a9;
    *(_QWORD *)(v21 + 14) = sub_100019400(v33, v32, &v40);

    v34 = v32;
    a7 = v30;
    swift_bridgeObjectRelease(v34);
    _os_log_impl((void *)&_mh_execute_header, v19, type, "TransitionCoordinator %{public}s completed ongoing animations. Now attemptying to re-present %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    a8 = v38;
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a2, 2);
  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v18, a5 & 1, a6, a7 & 1, a8, v15);
}

uint64_t sub_1001A3290(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_1001A32D8(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  char *v25;
  char *v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;

  if (qword_10048C8F8 != -1)
    swift_once(&qword_10048C8F8, sub_1001A355C);
  v13 = type metadata accessor for Logger(0, a2);
  sub_1000086B4(v13, (uint64_t)qword_100494E20);
  v14 = a1;
  v15 = a2;
  v16 = v14;
  v17 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v39 = v21;
    *(_DWORD *)v20 = 136446466;
    v22 = v16;
    v35 = a5;
    v23 = a8;
    v24 = objc_msgSend(v22, "description");
    v36 = a7;
    v25 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    *(_QWORD *)(v20 + 4) = sub_100019400(v25, v27, &v39);
    swift_bridgeObjectRelease(v27);
    *(_WORD *)(v20 + 12) = 2082;
    v28 = v17;
    v29 = objc_msgSend(v28, "description");
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    v32 = v31;

    a8 = v23;
    a5 = v35;
    v33 = (char *)v30;
    a7 = v36;
    *(_QWORD *)(v20 + 14) = sub_100019400(v33, v32, &v39);

    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Dismissed %{public}s, now attempting to re-present %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v20, -1, -1);

  }
  else
  {

  }
  return PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v17, a4 & 1, a5, a6 & 1, a7, a8);
}

uint64_t sub_1001A355C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100494E20);
  sub_1000086B4(v2, (uint64_t)qword_100494E20);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000012, 0x8000000100390180);
}

double UIWindowScene.presentationSource.getter@<D0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  double result;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = UIWindowScene.rootViewController.getter();
  if (v2)
  {
    v3 = v2;
    swift_unknownObjectWeakInit(v5, 0);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    v10 = 0;
    v11 = 0;
    swift_unknownObjectWeakAssign(v5, v3);

    sub_1001A3760((id)v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v8, v9);
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    v9 = -1;
    sub_100014AC0((uint64_t)v5, a1);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_QWORD *)&result = 1;
    *(_OWORD *)(a1 + 56) = xmmword_1003849A0;
  }
  return result;
}

uint64_t sub_1001A3698()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_1000137A4(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001A3708()
{
  uint64_t v0;

  return sub_1001A32D8(*(void **)(v0 + 16), *(void **)(v0 + 24), v0 + 32, *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
}

uint64_t sub_1001A3724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A3734(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_1001A373C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
    return (id)swift_unknownObjectRetain(result);
  if (a6 <= 1u)
    return result;
  return result;
}

void sub_1001A3760(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    sub_1000137A4(a1, a2, a3, a4, a5, a6);
}

id sub_1001A3774(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 != 0xFF)
    return sub_1001A373C(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_1001A3788()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 32);
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_1000137A4(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1001A37F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A3000(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), v1 + 32, *(_BYTE *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_BYTE *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

_OWORD *sub_1001A3830(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1001A3848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100494F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100494F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A38D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

unint64_t sub_1001A3914()
{
  unint64_t result;

  result = qword_100494F10;
  if (!qword_100494F10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_100494F10);
  }
  return result;
}

unint64_t sub_1001A395C()
{
  unint64_t result;

  result = qword_100494F18;
  if (!qword_100494F18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_100494F18);
  }
  return result;
}

unint64_t sub_1001A39A4()
{
  unint64_t result;

  result = qword_100494F20;
  if (!qword_100494F20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_100494F20);
  }
  return result;
}

unint64_t sub_1001A39EC()
{
  unint64_t result;

  result = qword_100494F28;
  if (!qword_100494F28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationSource.PresentingViewControllerOptions, &type metadata for PresentationSource.PresentingViewControllerOptions);
    atomic_store(result, (unint64_t *)&qword_100494F28);
  }
  return result;
}

double destroy for PresentationSource(uint64_t a1)
{
  double result;
  int v3;

  swift_unknownObjectWeakDestroy(a1);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 != 255)
    sub_1000137A4(*(id *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  if (*(_QWORD *)(a1 + 56))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  swift_unknownObjectWeakCopyInit(a1, a2);
  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 == 255)
  {
    v10 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v10;
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    v5 = *(void **)(a2 + 8);
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    sub_1001A373C(v5, v6, v7, v8, v9, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_BYTE *)(a1 + 48) = v4;
  }
  v11 = *(_QWORD *)(a2 + 56);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  return a1;
}

uint64_t assignWithCopy for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = swift_unknownObjectWeakCopyAssign(a1, a2);
  v5 = (__int128 *)(v4 + 8);
  v6 = (__int128 *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(v4 + 48) == 255)
  {
    if (v7 == 255)
    {
      v26 = *v6;
      v27 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v4 + 33) = *(_OWORD *)(a2 + 33);
      *v5 = v26;
      *(_OWORD *)(v4 + 24) = v27;
    }
    else
    {
      v19 = *(void **)(a2 + 8);
      v20 = *(_QWORD *)(a2 + 16);
      v21 = *(_QWORD *)(a2 + 24);
      v22 = *(_QWORD *)(a2 + 32);
      v23 = *(_QWORD *)(a2 + 40);
      sub_1001A373C(v19, v20, v21, v22, v23, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 8) = v19;
      *(_QWORD *)(a1 + 16) = v20;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v22;
      *(_QWORD *)(a1 + 40) = v23;
      *(_BYTE *)(a1 + 48) = v7;
    }
  }
  else if (v7 == 255)
  {
    sub_1001A3CC4(v4 + 8);
    v24 = *(_OWORD *)(a2 + 33);
    v25 = *(_OWORD *)(a2 + 24);
    *v5 = *v6;
    v5[1] = v25;
    *(__int128 *)((char *)v5 + 25) = v24;
  }
  else
  {
    v8 = *(void **)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    sub_1001A373C(v8, v9, v10, v11, v12, *(_BYTE *)(a2 + 48));
    v13 = *(void **)(a1 + 8);
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    v18 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v7;
    sub_1000137A4(v13, v14, v15, v16, v17, v18);
  }
  v28 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v28)
    {
      v31 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v28;
      *(_QWORD *)(a1 + 64) = v31;
      swift_retain(v31);
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v28)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_14;
  }
  v29 = *(_QWORD *)(a2 + 64);
  v30 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v28;
  *(_QWORD *)(a1 + 64) = v29;
  swift_retain(v29);
  swift_release(v30);
  return a1;
}

uint64_t sub_1001A3CC4(uint64_t a1)
{
  sub_1000137A4(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

__n128 initializeWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  __int128 v6;
  __n128 result;
  uint64_t v8;

  v3 = swift_unknownObjectWeakTakeInit(a1, a2);
  v4 = (__n128 *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 24) = v6;
  result = *(__n128 *)(a2 + 33);
  *(__n128 *)(v3 + 33) = result;
  if (v5)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(v3 + 56) = v5;
    *(_QWORD *)(v3 + 64) = v8;
  }
  else
  {
    result = *v4;
    *(__n128 *)(v3 + 56) = *v4;
  }
  return result;
}

uint64_t assignWithTake for PresentationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = swift_unknownObjectWeakTakeAssign();
  v5 = (_OWORD *)(v4 + 8);
  v6 = *(unsigned __int8 *)(v4 + 48);
  if (v6 != 255)
  {
    v7 = *(unsigned __int8 *)(a2 + 48);
    if (v7 != 255)
    {
      v8 = *(_QWORD *)(a2 + 40);
      v9 = *(void **)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      v12 = *(_QWORD *)(a1 + 32);
      v13 = *(_QWORD *)(a1 + 40);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = v8;
      *(_BYTE *)(a1 + 48) = v7;
      sub_1000137A4(v9, v10, v11, v12, v13, v6);
      goto LABEL_6;
    }
    sub_1001A3CC4(v4 + 8);
  }
  v14 = *(_OWORD *)(a2 + 24);
  *v5 = *(_OWORD *)(a2 + 8);
  v5[1] = v14;
  *(_OWORD *)((char *)v5 + 25) = *(_OWORD *)(a2 + 33);
LABEL_6:
  v15 = *(_QWORD *)(a2 + 56);
  if (!*(_QWORD *)(a1 + 56))
  {
    if (v15)
    {
      v18 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v18;
      return a1;
    }
LABEL_12:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  if (!v15)
  {
    swift_release(*(_QWORD *)(a1 + 64));
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(a2 + 64);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  swift_release(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

void destroy for PresentationSource.Position(uint64_t a1)
{
  sub_1000137A4(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1001A373C(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1001A373C(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1000137A4(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PresentationSource.Position(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1000137A4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationSource.Position(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationSource.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001A4100(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_1001A4108(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource.Position()
{
  return &type metadata for PresentationSource.Position;
}

ValueMetadata *type metadata accessor for PresentationSource.PresentingViewControllerOptions()
{
  return &type metadata for PresentationSource.PresentingViewControllerOptions;
}

void PresentedViewState.present(_:animated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE v17[24];

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = type metadata accessor for Optional(0, v5);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v17[-v8 - 8];
  v10 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v17[-v8 - 8], a1, v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v5);
  v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  v12 = swift_beginAccess(v11, v17, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v7 + 40))(v11, v9, v6, v12);
  v13 = swift_endAccess(v17);
  if ((a2 & 1) != 0)
  {
    v15 = static Animation.default.getter(v13, v14);
    withAnimation<A>(_:_:)(v15, sub_1001A48E4, v2, (char *)&type metadata for () + 8);
    swift_release(v15);
  }
  else
  {
    PresentedViewState.isPresented.setter(1);
  }
}

uint64_t View.viewPresenting<A, B>(_:modifier:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t WitnessTable;
  uint64_t v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v24 = a7;
  v12 = *a1;
  v13 = type metadata accessor for ModifiedContent(0, a3, a4);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v23 - v15;
  View.modifier<A>(_:)(a2, a3, a4, a5);
  v19 = type metadata accessor for PresentedViewState(0, *(_QWORD *)(v12 + 80), v17, v18);
  v25 = a5;
  v26 = a6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for PresentedViewState<A>, v19);
  View.environmentObject<A>(_:)(v24, v23, v13, v19, WitnessTable, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t PresentedViewState.isPresented.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003901F0);
  v2 = swift_getKeyPath(&unk_100390228);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t PresentedViewState.isPresented.setter(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_1003901F0);
  v4 = swift_getKeyPath(&unk_100390228);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*PresentedViewState.isPresented.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1003901F0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390228);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10014CEA0;
}

uint64_t PresentedViewState.$isPresented.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + qword_100494F30, v3, 33, 0);
  v1 = sub_100005574(&qword_100492DA0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t PresentedViewState.$isPresented.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_100005574(&qword_100492DA8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + qword_100494F30, v10, 33, 0);
  v7 = sub_100005574(&qword_100492DA0);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*PresentedViewState.$isPresented.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_100005574(&qword_100492DA8);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  PresentedViewState.$isPresented.getter();
  return sub_1001A46E0;
}

void sub_1001A46E0(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v2[1];
    v6 = v2[2];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    PresentedViewState.$isPresented.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    PresentedViewState.$isPresented.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t PresentedViewState.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t PresentedViewState.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  PresentedViewState.init()();
  return v1;
}

uint64_t *PresentedViewState.init()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v1 = *v0;
  v2 = sub_100005574(&qword_100492DA0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)v0 + qword_100494F30;
  v7 = *(_QWORD *)(v1 + 80);
  v10 = 0;
  Published.init(initialValue:)(&v10, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), 1, 1, v7);
  return v0;
}

uint64_t sub_1001A48E4()
{
  return PresentedViewState.isPresented.setter(1);
}

uint64_t *PresentedViewState.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = (uint64_t)v0 + qword_100494F30;
  v3 = sub_100005574(&qword_100492DA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v1 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t PresentedViewState.__deallocating_deinit()
{
  uint64_t v0;

  PresentedViewState.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for PresentedViewState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PresentedViewState);
}

uint64_t sub_1001A49C4()
{
  return 8;
}

_QWORD *sub_1001A49D0(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1001A49DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100153F5C();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initClassMetadata2(a1, 0, 2, v6, a1 + 88);
    }
  }
}

uint64_t sub_1001A4A68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = a1[1];
  v2 = type metadata accessor for ModifiedContent(255, *a1, a1[2]);
  v5 = type metadata accessor for PresentedViewState(255, v1, v3, v4);
  v6 = type metadata accessor for Optional(255, v5);
  v7 = type metadata accessor for _EnvironmentKeyWritingModifier(255, v6);
  v8 = type metadata accessor for ModifiedContent(255, v2, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v2);
  swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v7);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
}

unint64_t static LibraryModelRequest.label.getter(uint64_t a1, uint64_t a2)
{
  uint64_t MetatypeMetadata;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  v5._countAndFlagsBits = _typeName(_:qualified:)(MetatypeMetadata, 0);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8 = swift_getMetatypeMetadata(a2);
  v9._countAndFlagsBits = _typeName(_:qualified:)(v8, 0);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return 0xD000000000000014;
}

uint64_t LibraryModelRequest.section.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1001A4C4C(v1, *(void **)(v0 + 16));
  return v1;
}

uint64_t sub_1001A4C4C(uint64_t result, void *a2)
{
  void *v3;
  id v4;
  id v5;

  if (a2)
  {
    v3 = (void *)result;
    swift_bridgeObjectRetain();
    v4 = v3;
    v5 = a2;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t LibraryModelRequest.section.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1001A4CE0(*(_QWORD *)(v4 + 8), *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  *(_QWORD *)(v4 + 8) = a1;
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  return result;
}

uint64_t sub_1001A4CE0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  void *v6;

  if (a2)
  {
    v6 = (void *)result;

    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

void *LibraryModelRequest.item.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  v3 = v1;
  v4 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.item.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 56));
  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 64));
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 64) = a4;
  return result;
}

uint64_t LibraryModelRequest.scopedContainers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryModelRequest.scopedContainers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 72));
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t LibraryModelRequest.filter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.filter.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v4 + 104));
  *(_QWORD *)(v4 + 80) = a1;
  *(_BYTE *)(v4 + 88) = a2 & 1;
  *(_QWORD *)(v4 + 96) = a3;
  *(_QWORD *)(v4 + 104) = a4;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.filter.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t LibraryModelRequest.itemRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t LibraryModelRequest.itemRange.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 112) = result;
  *(_QWORD *)(v3 + 120) = a2;
  *(_BYTE *)(v3 + 128) = a3 & 1;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.itemRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t LibraryModelRequest.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryModelRequest.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 144));
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.label.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 LibraryModelRequest.init(library:section:item:scopedContainers:filter:itemRange:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, char a12, __n128 a13, uint64_t a14, uint64_t a15, char a16)
{
  __n128 result;

  result = a13;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 80) = a11;
  *(_BYTE *)(a9 + 88) = a12 & 1;
  *(__n128 *)(a9 + 96) = a13;
  *(_QWORD *)(a9 + 112) = a14;
  *(_QWORD *)(a9 + 120) = a15;
  *(_BYTE *)(a9 + 128) = a16 & 1;
  *(_QWORD *)(a9 + 136) = 0;
  *(_QWORD *)(a9 + 144) = 0;
  return result;
}

uint64_t LibraryModelRequest.mediaPlayerRequest()(uint64_t a1)
{
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v4;
  id v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_BYTE *, _QWORD *, uint64_t);
  Class isa;
  __int128 v16;
  Class v17;
  Class v18;
  __int128 v19;
  __int128 *v20;
  NSString v21;
  uint64_t result;
  NSString v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[16];
  _BYTE v38[24];
  __int128 v39;
  __int128 v40;
  _BYTE v41[16];
  _BYTE v42[8];
  __int128 v43;
  __int128 v44;
  _BYTE v45[8];
  _QWORD v46[4];
  _OWORD v47[2];
  objc_class *v48;
  objc_class *v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void *v55;
  _BYTE v56[8];
  objc_class *v57;

  v2 = v1;
  sub_100005574((uint64_t *)&unk_100491900);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v6 = *((_OWORD *)v1 + 7);
  v33 = *((_OWORD *)v1 + 6);
  v34 = v6;
  v35 = *((_OWORD *)v1 + 8);
  v36 = v1[18];
  v7 = *((_OWORD *)v1 + 3);
  v29 = *((_OWORD *)v1 + 2);
  v30 = v7;
  v8 = *((_OWORD *)v1 + 5);
  v31 = *((_OWORD *)v1 + 4);
  v32 = v8;
  v26 = *(_OWORD *)v1;
  v28 = *((_OWORD *)v1 + 1);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a1);
  sub_1001A63C4(v5, a1, WitnessTable);
  objc_msgSend(v5, "setMediaLibrary:", *v1, v26, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  v12 = type metadata accessor for LibraryContentConfiguration(255, v4, v10, v11);
  v13 = type metadata accessor for Optional(0, v12);
  v14 = *(void (**)(_BYTE *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v46, v1 + 1, v13);
  v14(v47, v46, v13);
  if (*((_QWORD *)&v47[0] + 1))
  {
    v27 = v47[0];
    v28 = v47[1];
    sub_1000149A8((uint64_t)&v28 + 8, (uint64_t)v56, &qword_100494FB8);
    sub_1000149A8((uint64_t)v56, (uint64_t)&v57, &qword_100494FB8);
    isa = v57;
    if (v57)
    {
      sub_1000087DC(0, &qword_100490B78, MPIdentifierSet_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
    }
  }
  else
  {
    isa = 0;
  }
  objc_msgSend(v5, "setAllowedSectionIdentifiers:", isa, v27, (_QWORD)v28);

  v16 = *(_OWORD *)((char *)v2 + 56);
  v43 = *(_OWORD *)((char *)v2 + 40);
  v44 = v16;
  sub_1000149A8((uint64_t)&v44 + 8, (uint64_t)v45, &qword_100494FB8);
  sub_1000149A8((uint64_t)v45, (uint64_t)&v48, &qword_100494FB8);
  v17 = v48;
  if (v48)
  {
    sub_1000087DC(0, &qword_100490B78, MPIdentifierSet_ptr);
    v17 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setAllowedItemIdentifiers:", v17);

  sub_1000149A8((uint64_t)v2 + 72, (uint64_t)v42, &qword_100494FC0);
  sub_1000149A8((uint64_t)v42, (uint64_t)&v49, &qword_100494FC0);
  v18 = v49;
  if (v49)
  {
    sub_1000087DC(0, &qword_100490B80, MPModelObject_ptr);
    v18 = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(v5, "setScopedContainers:", v18);

  v19 = v2[6];
  v39 = v2[5];
  v40 = v19;
  v20 = &v39;
  if (BYTE8(v39) == 1)
    v20 = (__int128 *)MPMediaLibraryFilteringOptions.none.unsafeMutableAddressor();
  objc_msgSend(v5, "setFilteringOptions:", *(_QWORD *)v20);
  sub_1000149A8((uint64_t)&v40, (uint64_t)v41, &qword_10048E9F8);
  sub_1000149A8((uint64_t)v41, (uint64_t)v50, &qword_10048E9F8);
  if (v50[1])
    v21 = String._bridgeToObjectiveC()();
  else
    v21 = 0;
  objc_msgSend(v5, "setFilterText:", v21);

  sub_1000149A8((uint64_t)(v2 + 7), (uint64_t)v38, &qword_100494FC8);
  result = sub_1000149A8((uint64_t)v38, (uint64_t)&v51, &qword_100494FC8);
  if ((v53 & 1) == 0)
  {
    if (__OFSUB__(v52, v51))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v5, "setContentRange:", v51, v52 - v51);
  }
  sub_1000149A8((uint64_t)v2 + 136, (uint64_t)v37, &qword_10048E9F8);
  sub_1000149A8((uint64_t)v37, (uint64_t)&v54, &qword_10048E9F8);
  v23 = v55;
  if (v55)
  {
    v24 = v5;
    v23 = String._bridgeToObjectiveC()();
  }
  else
  {
    v25 = v5;
  }
  objc_msgSend(v5, "setLabel:", v23);

  return (uint64_t)v5;
}

uint64_t type metadata accessor for LibraryContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryContentConfiguration);
}

uint64_t UIView.Border.thickness.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t LibraryModelRequest.Filter.text.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if ((a2 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
LABEL_6:
    if (a4)
    {
      if (a8)
      {
        if (a3 == a7 && a4 == a8)
          return 1;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((a6 & 1) == 0 && a1 == a5)
    goto LABEL_6;
  return result;
}

uint64_t sub_1001A5480(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

BOOL static LibraryModelRequest.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    if (!v9)
      goto LABEL_8;
LABEL_7:
    sub_1001A4C4C(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
    sub_1001A4C4C((uint64_t)v8, v9);
    sub_1001A4CE0((uint64_t)v4, v5, v6, v7);
    sub_1001A4CE0((uint64_t)v8, v9, v11, v10);
    return 0;
  }
  if (!v9)
    goto LABEL_7;
  sub_1001A4C4C(*(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  sub_1001A4C4C((uint64_t)v4, v5);
  sub_1001A4C4C((uint64_t)v8, v9);
  v20 = static LibraryContentConfiguration.__derived_struct_equals(_:_:)(v4, (uint64_t)v5, v6, v7, v8, (uint64_t)v9, v11, v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001A4CE0((uint64_t)v4, v5, v6, v7);
  if ((v20 & 1) == 0)
    return 0;
LABEL_8:
  if ((static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(void **)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)) & 1) == 0)return 0;
  v12 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (!v12)
      return 0;
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_1000B32D4(v13, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else if (v12)
  {
    return 0;
  }
  if ((static LibraryModelRequest.Filter.__derived_struct_equals(_:_:)(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 80), *(_BYTE *)(a2 + 88), *(_QWORD *)(a2 + 96), *(_QWORD *)(a2 + 104)) & 1) == 0)return 0;
  if ((*(_BYTE *)(a1 + 128) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 128) & 1) == 0)
      return 0;
LABEL_21:
    v16 = *(_QWORD *)(a1 + 144);
    v17 = *(_QWORD *)(a2 + 144);
    if (v16)
    {
      if (!v17)
        return 0;
      v18 = *(_QWORD *)(a1 + 136);
      v19 = *(_QWORD *)(a2 + 136);
      return v18 == v19 && v16 == v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0) & 1) != 0;
    }
    return !v17;
  }
  if ((*(_BYTE *)(a2 + 128) & 1) != 0)
    return 0;
  result = 0;
  if (*(_QWORD *)(a1 + 112) == *(_QWORD *)(a2 + 112) && *(_QWORD *)(a1 + 120) == *(_QWORD *)(a2 + 120))
    goto LABEL_21;
  return result;
}

uint64_t static LibraryContentConfiguration.__derived_struct_equals(_:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;

  if (a1)
  {
    if (!a5)
      return 0;
    sub_1000087DC(0, &qword_100494FD0, MPModelKind_ptr);
    v16 = a5;
    v17 = a1;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (a5)
  {
    return 0;
  }
  sub_1000087DC(0, (unint64_t *)&qword_1004918F0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a2, a6) & 1) != 0)
  {
    if (a3)
    {
      if (!a7)
        return 0;
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v20 = sub_1000B3024(v19, a7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return 0;
    }
    else if (a7)
    {
      return 0;
    }
    if (a4)
    {
      if (a8)
      {
        swift_bridgeObjectRetain();
        v21 = swift_bridgeObjectRetain();
        v22 = sub_1000B3038(v21, a8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
          return 1;
      }
    }
    else if (!a8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1001A58BC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = (void *)v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v2;
  a1[1] = (uint64_t)v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1001A4C4C(v2, v3);
}

uint64_t sub_1001A58D0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = (void *)v1[5];
  v3 = (void *)v1[6];
  v5 = v1[7];
  v4 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  v6 = v2;
  v7 = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A5910(uint64_t a1)
{
  return LibraryModelRequest.mediaPlayerRequest()(a1);
}

unint64_t sub_1001A5968(uint64_t a1)
{
  return static LibraryModelRequest.label.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

BOOL sub_1001A5974(uint64_t a1, uint64_t a2)
{
  return static LibraryModelRequest.__derived_struct_equals(_:_:)(a1, a2);
}

void *LibraryContentConfiguration.kind.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

uint64_t Gradient.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A59AC(uint64_t a1, uint64_t a2)
{
  return static LibraryContentConfiguration.__derived_struct_equals(_:_:)(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24)) & 1;
}

uint64_t LibraryContentConfiguration<>.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A80;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return 0;
}

uint64_t sub_1001A5A90(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a1);
}

uint64_t sub_1001A5AA0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001A5ACC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001A5AF8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for LibraryContentConfiguration<A>, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001A5B24(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 16);
  if (v2)
  {
    v3 = *(void **)(a1 + 8);

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  }

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 144));
}

uint64_t sub_1001A5BA0(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  __int128 v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a1 + 8);
  v6 = *(void **)(a2 + 16);
  v7 = v4;
  if (v6)
  {
    v8 = *(void **)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v6;
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v9;
    v10 = v8;
    v11 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 24);
    *v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v12;
  }
  v13 = *(void **)(a2 + 40);
  v14 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v15;
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v17;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 136);
  v19 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v18;
  *(_QWORD *)(a1 + 144) = v19;
  v20 = v13;
  v21 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A5C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  __int128 v31;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v11 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v11)
    {
      v18 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v18;
      v19 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v20 = v18;
      v21 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    v23 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v23;
    goto LABEL_8;
  }
  if (!v11)
  {
    v22 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v9, v10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a1 + 8, v22);
    goto LABEL_7;
  }
  v12 = *(void **)(a1 + 8);
  v13 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v13;
  v14 = v13;

  v15 = *(void **)(a2 + 16);
  v16 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v15;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v24 = *(void **)(a1 + 40);
  v25 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v25;
  v26 = v25;

  v27 = *(void **)(a2 + 48);
  v28 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v27;
  v29 = v27;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v31;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_1001A5E94(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_1001A5EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v9 = *(void **)(a1 + 16);
  if (!v9)
    goto LABEL_5;
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
  {
    v12 = type metadata accessor for LibraryContentConfiguration(0, *(_QWORD *)(a3 + 16), v7, v8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1 + 8, v12);
LABEL_5:
    v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v13;
    goto LABEL_6;
  }
  v11 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v15 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001A6024(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1001A606C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest);
}

uint64_t sub_1001A60DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A6118(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = a2[2];
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1001A6168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t sub_1001A61A8(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1001A6204(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t type metadata accessor for LibraryModelRequest.Filter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LibraryModelRequest.Filter);
}

uint64_t sub_1001A6264(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *sub_1001A629C(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A62EC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_1001A6370(uint64_t a1, _OWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

void sub_1001A63C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  void *v23;
  uint64_t AssociatedConformanceWitness;
  id v25;
  void (*v26)(uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSArray v35;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t (**v39)(_QWORD, _QWORD);
  void *v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  char *v43;
  uint64_t v44;
  NSArray v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t AssociatedTypeWitness;
  id v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;

  v53 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3);
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = __chkstk_darwin(AssociatedTypeWitness);
  v51 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v48 = (char *)&v46 - v8;
  v9 = swift_getAssociatedTypeWitness(255, a3);
  v10 = type metadata accessor for Optional(0, v9);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  v20 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  v55 = v3;
  v46 = v20;
  v20(a2, a3);
  v21 = *(_QWORD *)(v9 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v22 = v54(v19, 1, v9);
  v49 = v10;
  v47 = v11;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    v23 = 0;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v9, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v9);
  }
  v25 = v53;
  objc_msgSend(v53, "setSectionKind:", v23);

  v26 = v46;
  v46(a2, a3);
  v27 = v54(v17, 1, v9);
  v28 = v47;
  if (v27 == 1)
  {
    v29 = 0;
    v30 = v47;
    v31 = v49;
  }
  else
  {
    v32 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v9, v32);
    v30 = v21;
    v31 = v9;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  objc_msgSend(v25, "setSectionProperties:", v29);

  v26(a2, a3);
  if (v54(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v49);
  }
  else
  {
    v33 = swift_getAssociatedConformanceWitness(a3, a2, v9, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.SectionConfiguration: ModelRequestContentConfiguration);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 56))(v9, v33);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v9);
    if (v34)
    {
      sub_1000087DC(0, (unint64_t *)&qword_100490B70, NSSortDescriptor_ptr);
      v35.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  v35.super.isa = 0;
LABEL_12:
  objc_msgSend(v25, "setSectionSortDescriptors:", v35.super.isa);

  v36 = *(void (**)(uint64_t, uint64_t))(a3 + 64);
  v37 = v48;
  v36(a2, a3);
  v38 = AssociatedTypeWitness;
  v39 = (uint64_t (**)(_QWORD, _QWORD))swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for ModelRequest, &associated conformance descriptor for ModelRequest.ModelRequest.ItemConfiguration: ModelRequestContentConfiguration);
  v40 = (void *)v39[3](v38, v39);
  v41 = *(void (**)(char *, uint64_t))(v50 + 8);
  v41(v37, v38);
  objc_msgSend(v25, "setItemKind:", v40);

  v36(a2, a3);
  v42 = (void *)v39[4](v38, v39);
  v41(v37, v38);
  objc_msgSend(v25, "setItemProperties:", v42);

  v43 = v51;
  v36(a2, a3);
  v44 = v39[7](v38, v39);
  v41(v43, v38);
  if (v44)
  {
    sub_1000087DC(0, (unint64_t *)&qword_100490B70, NSSortDescriptor_ptr);
    v45.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v45.super.isa = 0;
  }
  objc_msgSend(v25, "setItemSortDescriptors:", v45.super.isa);

}

double sub_1001A68DC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t WitnessTable;
  double result;

  v8 = swift_allocObject(&unk_100453070, 48, 7);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a3 + 16);
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_retain(a2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for LibraryModelRequest<A, B>, a3);
  ModelRequest.perform(_:_:)((uint64_t)sub_1001A6F70, v8, a3, WitnessTable, a4);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

void ModelRequest.perform(_:_:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  id v16;
  _QWORD v17[5];
  _QWORD *v18;

  v10 = (_QWORD *)swift_allocObject(&unk_100453020, 48, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 72);
  swift_retain(a2);
  swift_retain(v10);
  v12 = (void *)v11(a3, a4);
  v17[4] = sub_1001A6F4C;
  v18 = v10;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000AC9C8;
  v17[3] = &unk_100453038;
  v13 = _Block_copy(v17);
  v14 = v18;
  v15 = v12;
  v16 = objc_msgSend(v15, "newOperationWithResponseHandler:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

  if (qword_10048C900 != -1)
    swift_once(&qword_10048C900, sub_1001A6B90);
  -[objc_class addOperation:](ModelRequestQueue.super.isa, "addOperation:", v16);
  a5[3] = sub_1000087DC(0, &qword_100495228, NSOperation_ptr);
  a5[4] = &protocol witness table for NSOperation;
  swift_release(v10);

  *a5 = v16;
}

id static MPPropertySet.sectionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Class isa;
  id v4;

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A80;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySectionTitle);
  *(_QWORD *)(v1 + 40) = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  return v4;
}

id sub_1001A6B90()
{
  id v0;
  NSString v1;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setName:", v1);

  objc_msgSend(v0, "setMaxConcurrentOperationCount:", 4);
  result = objc_msgSend(v0, "setQualityOfService:", 33);
  ModelRequestQueue.super.isa = (Class)v0;
  return result;
}

NSOperationQueue *ModelRequestQueue.unsafeMutableAddressor()
{
  if (qword_10048C900 != -1)
    swift_once(&qword_10048C900, sub_1001A6B90);
  return &ModelRequestQueue;
}

void sub_1001A6C6C(void *a1, uint64_t a2, void (*a3)(void *, uint64_t, uint64_t, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __C::_NSRange v15;
  CFRange v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;

  v7 = a2;
  if (!a1)
  {
    if (!a2)
    {
      v28 = sub_1001A6FB0();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v28, 0, 0);
      v26 = 0;
      *(_QWORD *)v29 = 0;
      *(_QWORD *)(v29 + 8) = 0;
      *(_BYTE *)(v29 + 16) = 2;
LABEL_8:
      v27 = 1;
      goto LABEL_9;
    }
LABEL_7:
    v30 = sub_1001A6FB0();
    v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v30, 0, 0);
    *(_QWORD *)v31 = v7;
    *(_QWORD *)(v31 + 8) = 0;
    *(_BYTE *)(v31 + 16) = 0;
    swift_errorRetain(v7);
    v7 = 0;
    v26 = 0;
    goto LABEL_8;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a6 + 8));
  v10 = swift_dynamicCastUnknownClass(a1, AssociatedTypeWitness);
  if (!v10)
  {
    if (!v7)
    {
      v39 = a1;
      v32 = sub_100005574(&qword_100495230);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v32);
      v34 = sub_100030D00((uint64_t)&v39, v32, WitnessTable);
      v36 = v35;
      v37 = sub_1001A6FB0();
      v11 = (void *)swift_allocError(&type metadata for ModelRequestFailure, v37, 0, 0);
      v26 = 0;
      *(_QWORD *)v38 = v34;
      *(_QWORD *)(v38 + 8) = v36;
      v27 = 1;
      *(_BYTE *)(v38 + 16) = 1;
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  v11 = (void *)v10;
  v12 = sub_100005574(&qword_100490BF0);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100384A80;
  v14 = (void *)MPModelResponseDidInvalidateNotification;
  v15.location = MPModelResponseDidInvalidateNotification;
  v15.length = (Swift::Int)v11;
  v16 = CFRange.init(_:)(v15);
  *(_QWORD *)(v13 + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(v13 + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(v13 + 32) = v16;
  v17 = type metadata accessor for BindingRequestResponseInvalidation();
  v7 = swift_allocObject(v17, 41, 7);
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_BYTE *)(v7 + 40) = 0;
  v18 = swift_allocObject(&unk_100453098, 24, 7);
  swift_weakInit(v18 + 16, v7);
  v19 = swift_allocObject(&unk_1004530C0, 32, 7);
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v20, 48, 7);
  v21 = a1;
  v22 = v14;
  v23 = swift_bridgeObjectRetain();
  v24 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v23, 0, (uint64_t)sub_10013D88C, v19);
  v25 = *(_QWORD *)(v7 + 16);
  *(_QWORD *)(v7 + 16) = v24;
  swift_release(v25);
  v26 = sub_1001A7044();
  v27 = 0;
LABEL_9:
  a3(v11, v27, v7, v26);
  swift_unknownObjectRelease(v7);
  sub_1000D4F4C(v11, v27);
}

uint64_t sub_1001A6F28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001A6F4C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A6C6C(a1, a2, *(void (**)(void *, uint64_t, uint64_t, unint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001A6F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A6F68(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001A6F70(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32);
  v7 = a1;
  v8 = a2 & 1;
  return v5(&v7, a3, a4);
}

unint64_t sub_1001A6FB0()
{
  unint64_t result;

  result = qword_100495238;
  if (!qword_100495238)
  {
    result = swift_getWitnessTable(&unk_100390504, &type metadata for ModelRequestFailure);
    atomic_store(result, (unint64_t *)&qword_100495238);
  }
  return result;
}

uint64_t sub_1001A6FF4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A7018()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001A7044()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004928F0;
  if (!qword_1004928F0)
  {
    v1 = type metadata accessor for BindingRequestResponseInvalidation();
    result = swift_getWitnessTable(&protocol conformance descriptor for BindingRequestResponseInvalidation, v1);
    atomic_store(result, (unint64_t *)&qword_1004928F0);
  }
  return result;
}

uint64_t sub_1001A7090(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRetain();
  if (!a3)
    return swift_errorRetain(result);
  return result;
}

uint64_t destroy for ModelRequestFailure(uint64_t a1)
{
  return sub_1001A70C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1001A70C0(uint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  if (!a3)
    return swift_errorRelease(result);
  return result;
}

uint64_t _s9MusicCore19ModelRequestFailureOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001A7090(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001A7090(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1001A70C0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ModelRequestFailure(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1001A70C0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelRequestFailure(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelRequestFailure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001A724C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1001A7264(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ModelRequestFailure()
{
  return &type metadata for ModelRequestFailure;
}

uint64_t static Request.label.getter(uint64_t a1)
{
  uint64_t MetatypeMetadata;

  MetatypeMetadata = swift_getMetatypeMetadata(a1);
  return _typeName(_:qualified:)(MetatypeMetadata, 0);
}

double Request.performThenCompleteOnMain(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void (*v11)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);
  double result;

  v10 = (_QWORD *)swift_allocObject(&unk_1004531B0, 48, 7);
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a2;
  v10[5] = a3;
  v11 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(a5 + 32);
  swift_retain(a3);
  v11(a1, sub_1001A7624, v10, a4, a5);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1001A7340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  __n128 v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[5];
  char *v58;

  v49 = a4;
  v50 = a5;
  v51 = a2;
  v52 = a3;
  v53 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a7);
  v16 = sub_100005600((uint64_t *)&unk_1004911F0);
  v17 = type metadata accessor for Result(0, AssociatedTypeWitness, v16, &protocol self-conformance witness table for Error);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v21 = (char *)&v47 - v20;
  v22 = sub_1000651F0();
  v48 = static OS_dispatch_queue.main.getter(v22, v23, v24, v25, v26, v27, v28, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  v30 = *(unsigned __int8 *)(v18 + 80);
  v31 = (v30 + 48) & ~v30;
  v32 = (v19 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject(&unk_100453218, v32 + 16, v30 | 7);
  *((_QWORD *)v33 + 2) = a6;
  *((_QWORD *)v33 + 3) = a7;
  v34 = v50;
  *((_QWORD *)v33 + 4) = v49;
  *((_QWORD *)v33 + 5) = v34;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v33[v31], v21, v17);
  v35 = &v33[v32];
  v37 = v51;
  v36 = v52;
  *(_QWORD *)v35 = v51;
  *((_QWORD *)v35 + 1) = v36;
  aBlock[4] = sub_1001A781C;
  v58 = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BED80;
  aBlock[3] = &unk_100453230;
  v38 = _Block_copy(aBlock);
  v39 = v58;
  swift_unknownObjectRetain(v37);
  swift_retain(v34);
  v40 = swift_release(v39);
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = _swiftEmptyArrayStorage;
  v41 = sub_1000BE0EC();
  v42 = sub_100005574(&qword_100490838);
  v43 = sub_1000B0348();
  v44 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v53, v41);
  v45 = (void *)v48;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v14, v55);
}

uint64_t sub_1001A7600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001A7624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1001A7340(a1, a2, a3, v3[4], v3[5], v3[2], v3[3]);
}

id sub_1001A7630()
{
  id *v0;

  return objc_msgSend(*v0, "cancel");
}

uint64_t sub_1001A7640(uint64_t a1)
{
  return dispatch thunk of DispatchWorkItem.cancel()(a1);
}

uint64_t Array<A>.cancel()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t WitnessTable;
  _QWORD v6[6];

  v6[5] = a1;
  v6[2] = a2;
  v6[3] = a3;
  v3 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  return Sequence.forEach(_:)(sub_1001A76CC, v6, v3, WitnessTable);
}

uint64_t sub_1001A76CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001A7700(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return Array<A>.cancel()(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8));
}

void sub_1001A7714()
{
  Task.cancel()();
}

uint64_t sub_1001A7728()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24));
  v2 = sub_100005600((uint64_t *)&unk_1004911F0);
  v3 = type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = *(_QWORD *)(v4 + 64);
  swift_release(*(_QWORD *)(v0 + 40));
  if (swift_getEnumCaseMultiPayload(v0 + v6, v3) == 1)
    swift_errorRelease(*(_QWORD *)(v0 + v6));
  else
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v6, AssociatedTypeWitness);
  v8 = (v7 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 16;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v9, v5 | 7);
}

uint64_t sub_1001A781C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v0 + 24));
  v2 = sub_100005600((uint64_t *)&unk_1004911F0);
  v3 = *(_QWORD *)(type metadata accessor for Result(0, AssociatedTypeWitness, v2, &protocol self-conformance witness table for Error)- 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(unint64_t, _QWORD, _QWORD))(v0 + 32))(v0 + v4, *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v5 + 8));
}

uint64_t sub_1001A78B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001A78C0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001A78C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload(v3, a1) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1[2] - 8) + 32))(a3, v3);
  v7 = a1[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, v3, v7);
  return swift_willThrowTypedImpl(a2, v7, a1[4]);
}

uint64_t *RequestResponse.Controller.__allocating_init(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = v1;
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  v7 = sub_1001AB06C(a1, v4, v5, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a1);
  return v7;
}

uint64_t *RequestResponse.Controller.init(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t *v7;

  v6 = *v4;
  v7 = sub_1001AB06C(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 + 80) - 8) + 8))(a1);
  return v7;
}

uint64_t sub_1001A7A04()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_getObjectType();
  swift_unknownObjectRetain(v1);
  RequestResponseInvalidatable.invalidate()();
  return swift_unknownObjectRelease(v1);
}

uint64_t property wrapper backing initializer of RequestResponse.Controller.revision(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v3;

  v1 = *a1;
  v3 = a1;
  return sub_10014CBAC((uint64_t)&v3, v1);
}

double sub_1001A7A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_100390600);
  v4 = swift_getKeyPath(&unk_100390638);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v9;
  v6 = swift_getKeyPath(&unk_100390600);
  v7 = swift_getKeyPath(&unk_100390638);
  v9 = a1;
  swift_retain(v1);
  swift_retain(a1);
  static Published.subscript.setter(&v9, v1, v6, v7);
  sub_1001A8064(v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

void sub_1001A7B8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  _BYTE v22[24];

  v2 = v1;
  v3 = a1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(a1);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v22[-v10 - 8];
  v12 = (uint64_t)v2 + *(_QWORD *)(v4 + 96);
  v13 = swift_beginAccess(v12, v22, 0, 0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v14(v11, v12, v5, v13);
  v15 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 8);
  LOBYTE(v3) = dispatch thunk of static Equatable.== infix(_:_:)(v11, v3, v5, v15);
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  if ((v3 & 1) == 0)
  {
    v17 = RequestResponse.Controller.revision.getter();
    sub_1001A7A04();
    v18 = swift_release(v17);
    v19 = *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 168));
    if (v19)
    {
      v14(v11, v19 + *(_QWORD *)(*(_QWORD *)v19 + 96), v5, v18);
      ((void (*)(char *, uint64_t, uint64_t))v14)(v9, v12, v5);
      swift_retain(v19);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v9, v5, v15);
      v16(v9, v5);
      v16(v11, v5);
      if ((v20 & 1) == 0)
        sub_1001A7A04();
      swift_release(v19);
    }
    sub_1001A7DBC();
  }
}

uint64_t RequestResponse.Controller.revision.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100390600);
  v2 = swift_getKeyPath(&unk_100390638);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1001A7DBC()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v2, 0, 0);
  if (*v1 == 1)
    RequestResponse.Controller.setNeedsReload(_:)(0, 0);
}

uint64_t RequestResponse.Controller.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t RequestResponse.Controller.request.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1001AB2D4(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*RequestResponse.Controller.request.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  void (*v11)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v3[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[5] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[6] = malloc(v7);
  v8 = malloc(v7);
  v3[7] = v8;
  v9 = (uint64_t)v1 + *(_QWORD *)(v4 + 96);
  v10 = swift_beginAccess(v9, v3, 0, 0);
  v11 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v6 + 16);
  v3[8] = v11;
  v11(v8, v9, v5, v10);
  return sub_1001A7F68;
}

void sub_1001A7F68(uint64_t *a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(void **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(void **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(void *, void *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_1001AB2D4((uint64_t)v4);
    v7 = *(void (**)(void *, uint64_t))(v5 + 8);
    v7(v4, v6);
    v7(v3, v6);
  }
  else
  {
    v4 = *(void **)(v2 + 48);
    v3 = *(void **)(v2 + 56);
    v8 = *(_QWORD *)(v2 + 32);
    v9 = *(_QWORD *)(v2 + 40);
    sub_1001AB2D4((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v9 + 8))(v3, v8);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_1001A8014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_1001A803C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return sub_1001A7A80(v1);
}

double sub_1001A8064(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t WitnessTable;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  void (*v70)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);
  _QWORD v71[4];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[3];
  char v76[24];

  v2 = v1;
  v4 = *v1;
  v5 = RequestResponse.Controller.revision.getter();
  v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  if (v6 != *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 112)))
  {
    v8 = *(_QWORD *)(*v2 + 176);
    v9 = *(_QWORD *)((char *)v2 + v8);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v8));
      v11 = RequestResponse.Controller.revision.getter();
      swift_release(v9);
      v12 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 112));
      swift_release(v11);
      if (v12 >= v10)
      {
        v13 = *(_QWORD *)((char *)v2 + v8);
        *(_QWORD *)((char *)v2 + v8) = 0;
        swift_release(v13);
      }
    }
    v14 = *(_QWORD *)(*v2 + 168);
    v15 = *(_QWORD *)((char *)v2 + v14);
    if (v15)
    {
      v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
      swift_retain(*(_QWORD *)((char *)v2 + v14));
      v17 = RequestResponse.Controller.revision.getter();
      swift_release(v15);
      v18 = *(_QWORD *)(v17 + *(_QWORD *)(*(_QWORD *)v17 + 112));
      swift_release(v17);
      if (v18 >= v16)
      {
        v19 = *(_QWORD *)((char *)v2 + v14);
        *(_QWORD *)((char *)v2 + v14) = 0;
        swift_release(v19);
      }
    }
    v20 = RequestResponse.Controller.revision.getter();
    v21 = (char *)v2 + *(_QWORD *)(*v2 + 120);
    swift_beginAccess(v21, v76, 0, 0);
    v22 = *(void (**)(_QWORD *, uint64_t))v21;
    if (*(_QWORD *)v21)
    {
      v23 = *((_QWORD *)v21 + 1);
      swift_retain(v23);
      v22(v2, v20);
      sub_10003A5C8((uint64_t)v22, v23);
    }
    v24 = *(_QWORD *)(*(_QWORD *)v20 + 112);
    v25 = *(_QWORD *)(v20 + v24);
    v26 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 160));
    swift_beginAccess(v26, v75, 32, 0);
    v27 = *v26;
    v73 = v25;
    v29 = *(_QWORD *)(v4 + 80);
    v28 = *(_QWORD *)(v4 + 88);
    v31 = type metadata accessor for RequestResponse.Revision(255, v29, v28, v30);
    swift_getFunctionTypeMetadata2(67108866, v4, v31, (char *)&type metadata for () + 8);
    v32 = type metadata accessor for Array(0);
    Dictionary.subscript.getter(&v74, &v73, v27, &type metadata for Int, v32, &protocol witness table for Int);
    v33 = v74;
    if (v74)
    {
      v34 = swift_endAccess(v75);
      v75[0] = v33;
      __chkstk_darwin(v34);
      v71[2] = v2;
      v71[3] = v20;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v32);
      Sequence.forEach(_:)(sub_1001AB95C, v71, v32, WitnessTable);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess(v75);
    }
    v73 = *(_QWORD *)(v20 + v24);
    v74 = 0;
    swift_beginAccess(v26, v75, 33, 0);
    v36 = type metadata accessor for Dictionary(0, &type metadata for Int, v32, &protocol witness table for Int);
    Dictionary.subscript.setter(&v74, &v73, v36);
    swift_endAccess(v75);
    v37 = RequestResponse.Controller.revision.getter();
    v38 = (_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 120));
    v39 = *v38;
    v40 = v38[1];
    swift_unknownObjectRetain(*v38);
    swift_release(v37);
    ObjectType = swift_getObjectType();
    LOBYTE(v37) = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 40))(ObjectType, v40);
    swift_unknownObjectRelease(v39);
    if ((v37 & 1) != 0)
    {
      if (qword_10048C908 != -1)
        swift_once(&qword_10048C908, sub_1001AAE30);
      v43 = type metadata accessor for Logger(0, v42);
      v44 = sub_1000086B4(v43, (uint64_t)qword_100495240);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v72 = v24;
        v49 = v48;
        v75[0] = v48;
        *(_DWORD *)v47 = 136446210;
        v50 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v29, v28);
        *(_QWORD *)(v47 + 4) = sub_100019400(v50, v51, v75);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "╭ %{public}s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
        v52 = v49;
        v24 = v72;
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v47, -1, -1);
      }

      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "╞ 🔄 Invalid", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
      }

      v57 = swift_retain(v20);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc(12, -1);
        *(_DWORD *)v60 = 134349056;
        *(_QWORD *)(v60 + 4) = *(_QWORD *)(v20 + v24);
        swift_release(v20);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "╰ RevisionID=%{public}ld", (uint8_t *)v60, 0xCu);
        swift_slowDealloc(v60, -1, -1);

      }
      else
      {

        swift_release(v20);
      }
      sub_1001A7DBC();
    }
    else
    {
      v61 = RequestResponse.Controller.revision.getter();
      v62 = *(_QWORD *)(v61 + *(_QWORD *)(*(_QWORD *)v61 + 112));
      swift_release(v61);
      v63 = RequestResponse.Controller.revision.getter();
      v64 = (_QWORD *)(v63 + *(_QWORD *)(*(_QWORD *)v63 + 120));
      v65 = *v64;
      v66 = v64[1];
      swift_unknownObjectRetain(*v64);
      swift_release(v63);
      v67 = swift_getObjectType();
      v68 = swift_allocObject(&unk_1004535D0, 24, 7);
      swift_weakInit(v68 + 16, v2);
      v69 = (_QWORD *)swift_allocObject(&unk_100453648, 48, 7);
      v69[2] = v29;
      v69[3] = v28;
      v69[4] = v68;
      v69[5] = v62;
      v70 = *(void (**)(double (*)(uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v66 + 24);
      swift_retain(v68);
      v70(sub_1001AB9C0, v69, v67, v66);
      swift_unknownObjectRelease(v65);
      swift_release(v68);
    }
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double sub_1001A86C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t Strong;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[3];
  char v51[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v51, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v14 = Strong;
    v15 = RequestResponse.Controller.revision.getter();
    v16 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112));
    swift_release(v15);
    if (v16 == a4)
    {
      v49 = a2;
      if (qword_10048C908 != -1)
        swift_once(&qword_10048C908, sub_1001AAE30);
      v18 = type metadata accessor for Logger(0, v17);
      v19 = sub_1000086B4(v18, (uint64_t)qword_100495240);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v48 = a1;
        v22 = swift_slowAlloc(12, -1);
        v23 = swift_slowAlloc(32, -1);
        v50[0] = v23;
        *(_DWORD *)v22 = 136446210;
        v24 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
        *(_QWORD *)(v22 + 4) = sub_100019400(v24, v25, v50);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "╭ %{public}s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        v26 = v22;
        a1 = v48;
        swift_slowDealloc(v26, -1, -1);
      }

      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "╞ 🔄 Invalidated", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }

      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        *(_DWORD *)v34 = 134349056;
        *(_QWORD *)(v34 + 4) = a4;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "╞ RevisionID=%{public}ld", (uint8_t *)v34, 0xCu);
        swift_slowDealloc(v34, -1, -1);
      }

      v36 = swift_unknownObjectRetain_n(a1, 2, v35);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc(12, -1);
        v40 = swift_slowAlloc(32, -1);
        v50[0] = v40;
        *(_DWORD *)v39 = 136446210;
        ObjectType = swift_getObjectType();
        v42 = (char *)dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, *(_QWORD *)(v49 + 8));
        *(_QWORD *)(v39 + 4) = sub_100019400(v42, v43, v50);
        swift_unknownObjectRelease_n(a1, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "╰ Invalidator=%{public}s", (uint8_t *)v39, 0xCu);
        swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1, -1);
        swift_slowDealloc(v39, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(a1, 2);
      }
      v44 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 128);
      swift_beginAccess(v44, v50, 0, 0);
      v45 = *(void (**)(uint64_t, uint64_t))v44;
      if (*(_QWORD *)v44)
      {
        v46 = *(_QWORD *)(v44 + 8);
        swift_retain(v46);
        v47 = RequestResponse.Controller.revision.getter();
        v45(v14, v47);
        sub_10003A5C8((uint64_t)v45, v46);
        swift_release(v47);
      }
      sub_1001A7DBC();
    }
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t RequestResponse.Controller.$revision.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v1 = *v0;
  swift_beginAccess((char *)v0 + *(_QWORD *)(*v0 + 104), v6, 33, 0);
  v3 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v4 = type metadata accessor for Published(0, v3);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t RequestResponse.Controller.willReloadRequest.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.willReloadRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A5C8(v6, v7);
}

uint64_t (*RequestResponse.Controller.willReloadRequest.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t RequestResponse.Controller.didApplyRevision.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.didApplyRevision.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A5C8(v6, v7);
}

uint64_t (*RequestResponse.Controller.didApplyRevision.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120), a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  swift_beginAccess(v1, v4, 0, 0);
  v2 = *v1;
  sub_10003A434(*v1, v1[1]);
  return v2;
}

uint64_t RequestResponse.Controller.revisionDidInvalidate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10003A5C8(v6, v7);
}

uint64_t (*RequestResponse.Controller.revisionDidInvalidate.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), a1, 33, 0);
  return j_j__swift_endAccess;
}

void sub_1001A8E5C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  _BYTE v13[24];

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v13, 0, 0);
  if (*v4 != v3)
  {
    v5 = RequestResponse.Controller.revision.getter();
    v6 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120));
    v7 = *v6;
    v8 = v6[1];
    swift_unknownObjectRetain(*v6);
    swift_release(v5);
    ObjectType = swift_getObjectType();
    LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(ObjectType, v8);
    swift_unknownObjectRelease(v7);
    if ((v5 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)v2 + 168);
      v11 = *(_QWORD *)(v2 + v10);
      if (!v11
        || (swift_retain(*(_QWORD *)(v2 + v10)),
            v12 = RequestResponse.Revision.isValid.getter(),
            swift_release(v11),
            !v12))
      {
        sub_1001A7DBC();
      }
    }
  }
}

BOOL RequestResponse.Revision.isValid.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t);

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v3 = *v1;
  v2 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain(v3);
  LOBYTE(v2) = v5(ObjectType, v2);
  swift_unknownObjectRelease(v3);
  return (v2 & 1) == 0;
}

uint64_t RequestResponse.Controller.isAutomaticReloadingEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

void RequestResponse.Controller.isAutomaticReloadingEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_1001A8E5C(v4);
}

void (*RequestResponse.Controller.isAutomaticReloadingEnabled.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_1001A90B0;
}

void sub_1001A90B0(uint64_t a1, uint64_t a2)
{
  sub_1001A9278(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isAutomaticReloadingEnabled.setter);
}

double sub_1001A90BC(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  *(_QWORD *)&result = swift_beginAccess(v3, v9, 0, 0).n128_u64[0];
  if ((*v3 & 1) == 0 && (a1 & 1) != 0)
  {
    v5 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
    if (v5)
    {
      v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112));
      swift_retain(v5);
      v7 = RequestResponse.Controller.revision.getter();
      v8 = *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 112));
      swift_release(v7);
      if (v8 >= v6)
        *(_QWORD *)&result = swift_release(v5).n128_u64[0];
      else
        return sub_1001A7A80(v5);
    }
  }
  return result;
}

uint64_t RequestResponse.Controller.isPaused.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_beginAccess(v1, v3, 0, 0);
  return *v1;
}

double RequestResponse.Controller.isPaused.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v6[24];

  v3 = (char *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return sub_1001A90BC(v4);
}

void (*RequestResponse.Controller.isPaused.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess(v4, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_1001A926C;
}

void sub_1001A926C(uint64_t a1, uint64_t a2)
{
  sub_1001A9278(a1, a2, (void (*)(_QWORD))RequestResponse.Controller.isPaused.setter);
}

void sub_1001A9278(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void *v3;

  v3 = *(void **)a1;
  a3(*(unsigned __int8 *)(*(_QWORD *)a1 + 32));
  free(v3);
}

uint64_t RequestResponse.Controller.setNeedsReload(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[3];
  uint64_t aBlock[5];
  uint64_t v75;

  v3 = v2;
  v6 = *(_QWORD **)v3;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v6[10];
  v15 = *(_QWORD *)(v14 - 8);
  result = __chkstk_darwin(v11);
  v18 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v6;
  if (a1)
  {
    v20 = (_QWORD *)swift_allocObject(&unk_100453298, 48, 7);
    v20[2] = v14;
    v21 = v6[11];
    v20[3] = v21;
    v20[4] = a1;
    v20[5] = a2;
    v73[0] = sub_1001AB400;
    v73[1] = v20;
    swift_beginAccess(v3 + v6[19], aBlock, 33, 0);
    v23 = type metadata accessor for RequestResponse.Revision(255, v14, v21, v22);
    swift_getFunctionTypeMetadata2(67108866, v6, v23, (char *)&type metadata for () + 8);
    v24 = type metadata accessor for Array(0);
    swift_retain(a2);
    Array.append(_:)(v73, v24);
    result = swift_endAccess(aBlock);
    v19 = *(_QWORD **)v3;
  }
  v25 = v19[23];
  if ((*(_BYTE *)(v3 + v25) & 1) == 0)
  {
    *(_BYTE *)(v3 + v25) = 1;
    v26 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168));
    if (v26)
    {
      v27 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 96);
      v28 = swift_beginAccess(v27, v73, 0, 0);
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v27, v14, v28);
      v29 = v26 + *(_QWORD *)(*(_QWORD *)v26 + 96);
      v30 = v6[11];
      v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 40);
      swift_retain(v26);
      LOBYTE(v29) = v31(v29, v14, v30);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      if ((v29 & 1) != 0)
      {
        if (qword_10048C908 != -1)
          swift_once(&qword_10048C908, sub_1001AAE30);
        v33 = type metadata accessor for Logger(0, v32);
        v34 = sub_1000086B4(v33, (uint64_t)qword_100495240);
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc(12, -1);
          v67[1] = v34;
          v38 = v37;
          v67[0] = swift_slowAlloc(32, -1);
          aBlock[0] = v67[0];
          *(_DWORD *)v38 = 136446210;
          v39 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 24))(v14, v30);
          *(_QWORD *)(v38 + 4) = sub_100019400(v39, v40, aBlock);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "╭ %{public}s", (uint8_t *)v38, 0xCu);
          v41 = v67[0];
          swift_arrayDestroy(v67[0], 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v38, -1, -1);
        }

        v43 = Logger.logObject.getter(v42);
        v44 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v45 = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "╞ 🛑 Cancelled", v45, 2u);
          swift_slowDealloc(v45, -1, -1);
        }

        v46 = swift_retain(v26);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc(12, -1);
          *(_DWORD *)v49 = 134349056;
          *(_QWORD *)(v49 + 4) = *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 112));
          swift_release(v26);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "╰ RevisionID=%{public}ld", (uint8_t *)v49, 0xCu);
          swift_slowDealloc(v49, -1, -1);

        }
        else
        {

          swift_release(v26);
        }
        v50 = *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 112));
        swift_beginAccess(v3 + *(_QWORD *)(*(_QWORD *)v3 + 192), aBlock, 33, 0);
        sub_100133558(&v72, v50);
        swift_endAccess(aBlock);
        sub_1001A7A04();
      }
      swift_release(v26);
    }
    v51 = sub_1000651F0();
    v59 = (void *)static OS_dispatch_queue.main.getter(v51, v52, v53, v54, v55, v56, v57, v58);
    aBlock[4] = (uint64_t)sub_1001AB3C0;
    v75 = v3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000BED80;
    aBlock[3] = (uint64_t)&unk_100453260;
    v60 = _Block_copy(aBlock);
    v61 = v75;
    swift_retain(v3);
    v62 = swift_release(v61);
    static DispatchQoS.unspecified.getter(v62);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v63 = sub_100006924((unint64_t *)&qword_1004921B0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v64 = sub_100005574(&qword_100490838);
    v65 = sub_1000B0348();
    v66 = v71;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v64, v65, v71, v63);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v60);
    _Block_release(v60);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v66);
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v13, v69);
  }
  return result;
}

uint64_t sub_1001A9894(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t FunctionTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  void (*v64)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t WitnessTable;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  void (*v75)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[5];
  uint64_t v85[5];
  char v86[24];
  char v87[24];
  char v88[24];

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(uint64_t **)(v4 - 8);
  v6 = __chkstk_darwin(a1);
  v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v73 - v10;
  result = __chkstk_darwin(v9);
  v81 = (uint64_t)&v73 - v13;
  v14 = *(_QWORD *)(v3 + 184);
  if (*((_BYTE *)v1 + v14) != 1)
    return result;
  *((_BYTE *)v1 + v14) = 0;
  v15 = *v1;
  v78 = *(_QWORD *)(*v1 + 168);
  v16 = *(uint64_t *)((char *)v1 + v78);
  if (v16 || (v16 = *(uint64_t *)((char *)v1 + *(_QWORD *)(v15 + 176))) != 0)
  {
    v17 = *(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 112));
    v18 = v17 + 1;
    if (!__OFADD__(v17, 1))
      goto LABEL_5;
  }
  else
  {
    v71 = RequestResponse.Controller.revision.getter();
    v72 = *(_QWORD *)(v71 + *(_QWORD *)(*(_QWORD *)v71 + 112));
    swift_release(v71);
    v18 = v72 + 1;
    if (!__OFADD__(v72, 1))
    {
LABEL_5:
      v74 = v8;
      v19 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
      v20 = swift_beginAccess(v19, v88, 0, 0);
      v76 = v5;
      v75 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v5[2];
      v75(v81, v19, v4, v20);
      v21 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152));
      swift_beginAccess(v21, v87, 1, 0);
      v84[0] = *v21;
      v80 = v18;
      *(_QWORD *)&v82 = v18;
      swift_beginAccess((char *)v2 + *(_QWORD *)(*v2 + 160), v85, 33, 0);
      v79 = *(_QWORD *)(v3 + 88);
      v23 = type metadata accessor for RequestResponse.Revision(255, v4, v79, v22);
      FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v3, v23, (char *)&type metadata for () + 8);
      v25 = type metadata accessor for Array(255);
      v26 = type metadata accessor for Dictionary(0, &type metadata for Int, v25, &protocol witness table for Int);
      swift_bridgeObjectRetain();
      Dictionary.subscript.setter(v84, &v82, v26);
      swift_endAccess(v85);
      *v21 = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
      swift_bridgeObjectRelease();
      v27 = (uint64_t)v2 + *(_QWORD *)(*v2 + 112);
      swift_beginAccess(v27, v86, 0, 0);
      v28 = *(void (**)(uint64_t *, uint64_t))v27;
      if (*(_QWORD *)v27)
      {
        v29 = *(_QWORD *)(v27 + 8);
        swift_retain(v29);
        v28(v2, v81);
        sub_10003A5C8((uint64_t)v28, v29);
      }
      v30 = swift_checkMetadataState(0, v23);
      swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
      v5 = sub_1001AAEB0(v80, v81);
      v31 = *(uint64_t *)((char *)v2 + v78);
      *(uint64_t *)((char *)v2 + v78) = (uint64_t)v5;
      swift_retain(v5);
      swift_release(v31);
      if (qword_10048C908 == -1)
        goto LABEL_8;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_once(&qword_10048C908, sub_1001AAE30);
LABEL_8:
  v33 = type metadata accessor for Logger(0, v32);
  v34 = sub_1000086B4(v33, (uint64_t)qword_100495240);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter();
  v37 = os_log_type_enabled(v35, v36);
  v77 = v5;
  if (v37)
  {
    v38 = swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v85[0] = v39;
    *(_DWORD *)v38 = 136446210;
    v40 = (char *)(*(uint64_t (**)(uint64_t))(v79 + 24))(v4);
    *(_QWORD *)(v38 + 4) = sub_100019400(v40, v41, v85);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "╭ %{public}s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }

  v42 = (uint64_t (*)(char *, uint64_t, uint64_t))v75;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "╞ 🕺Performing", v46, 2u);
    swift_slowDealloc(v46, -1, -1);
  }

  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc(12, -1);
    *(_DWORD *)v50 = 134349056;
    *(_QWORD *)(v50 + 4) = v80;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "╞ RevisionID=%{public}ld", (uint8_t *)v50, 0xCu);
    swift_slowDealloc(v50, -1, -1);
  }

  v51 = v42(v11, v81, v4);
  v52 = Logger.logObject.getter(v51);
  v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    v54 = swift_slowAlloc(12, -1);
    v55 = swift_slowAlloc(32, -1);
    v85[0] = v55;
    *(_DWORD *)v54 = 136446210;
    v56 = v74;
    v42(v74, (uint64_t)v11, v4);
    v57 = (char *)String.init<A>(describing:)(v56, v4);
    *(_QWORD *)(v54 + 4) = sub_100019400(v57, v58, v85);
    swift_bridgeObjectRelease();
    v76 = (uint64_t *)v76[1];
    ((void (*)(char *, uint64_t))v76)(v11, v4);
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "╰ Request=%{public}s", (uint8_t *)v54, 0xCu);
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v54, -1, -1);
  }
  else
  {
    v76 = (uint64_t *)v76[1];
    ((void (*)(char *, uint64_t))v76)(v11, v4);
  }

  v59 = RequestResponse.Controller.revision.getter();
  v60 = swift_allocObject(&unk_1004535D0, 24, 7);
  swift_weakInit(v60 + 16, v2);
  v61 = (_QWORD *)swift_allocObject(&unk_1004535F8, 40, 7);
  v62 = v77;
  v61[2] = v77;
  v61[3] = v60;
  v61[4] = v80;
  v63 = v79;
  v64 = *(void (**)(uint64_t *__return_ptr, uint64_t, double (*)(uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t, uint64_t))(v79 + 32);
  swift_retain(v62);
  swift_retain(v60);
  v64(v85, v59, sub_1001AB890, v61, v4, v63);
  swift_release(v59);
  swift_release(v60);
  swift_release(v61);
  sub_1001AB89C((uint64_t)v85, (uint64_t)&v82);
  if (v83)
  {
    sub_1000137C8(&v82, (uint64_t)v84);
    v66 = *(uint64_t **)((char *)v2 + v78);
    if (v66 && *(uint64_t *)((char *)v66 + *(_QWORD *)(*v66 + 112)) == v80)
    {
      v67 = type metadata accessor for RequestResponse.Controller.TaskInvalidator(0, v4, v79, v65);
      sub_1000244B0((uint64_t)v84, (uint64_t)&v82);
      v68 = swift_allocObject(v67, 80, 7);
      *(_BYTE *)(v68 + 56) = 0;
      *(_QWORD *)(v68 + 64) = 0;
      *(_QWORD *)(v68 + 72) = 0;
      sub_1000137C8(&v82, v68 + 16);
      WitnessTable = swift_getWitnessTable(&unk_1003907F8, v67);
      swift_retain(v66);
      sub_1001AA4C8(v68, WitnessTable);
      swift_release(v77);
      v70 = v66;
    }
    else
    {
      v70 = v77;
    }
    swift_release(v70);
    sub_10000682C(v84);
    sub_1001AB8E4((uint64_t)v85);
    return ((uint64_t (*)(uint64_t, uint64_t))v76)(v81, v4);
  }
  else
  {
    swift_release(v62);
    sub_1001AB8E4((uint64_t)v85);
    ((void (*)(uint64_t, uint64_t))v76)(v81, v4);
    return sub_1001AB8E4((uint64_t)&v82);
  }
}

uint64_t sub_1001AA118(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 80, 7);
  *(_BYTE *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  sub_1000137C8(a1, v3 + 16);
  return v3;
}

uint64_t sub_1001AA160(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 56) == 1 && (result & 1) == 0)
  {
    v2 = *(_QWORD *)(v1 + 40);
    v3 = *(_QWORD *)(v1 + 48);
    sub_10000ABC8((_QWORD *)(v1 + 16), v2);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  }
  return result;
}

uint64_t sub_1001AA1B4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + 56);
  *(_BYTE *)(v1 + 56) = a1;
  return sub_1001AA160(v2);
}

uint64_t sub_1001AA1C4()
{
  _QWORD *v0;

  sub_10000682C(v0 + 2);
  sub_10003A5C8(v0[8], v0[9]);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1001AA1F0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 64, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 64);
  sub_10003A434(v1, *(_QWORD *)(v0 + 72));
  return v1;
}

uint64_t sub_1001AA23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 64, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return sub_10003A5C8(v5, v6);
}

uint64_t (*sub_1001AA28C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t Lyrics.type.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t (*sub_1001AA2D4(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 56);
  return sub_1001AA2F0;
}

uint64_t sub_1001AA2F0(uint64_t a1)
{
  return sub_1001AA1B4(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1001AA314(uint64_t a1)
{
  return sub_1001AB71C(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

double sub_1001AA320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  double result;
  _BYTE v21[24];

  v12 = *a4;
  v13 = (uint64_t)a4 + *(_QWORD *)(*a4 + 104);
  swift_beginAccess(v13, v21, 33, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v12 + 88));
  v15 = sub_100005600((uint64_t *)&unk_1004911F0);
  v16 = type metadata accessor for Result(0, AssociatedTypeWitness, v15, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v13, a1, v16);
  swift_endAccess(v21);
  if (a2)
  {
    v17 = a2;
  }
  else
  {
    v18 = type metadata accessor for GenericRequestResponseInvalidation();
    v17 = swift_allocObject(v18, 49, 7);
    *(_QWORD *)(v17 + 32) = 0;
    *(_QWORD *)(v17 + 40) = 0;
    *(_BYTE *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 16) = 0x636972656E6547;
    *(_QWORD *)(v17 + 24) = 0xE700000000000000;
    a3 = sub_100006924(qword_1004953E0, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  }
  swift_unknownObjectRetain(a2);
  sub_1001AA4C8(v17, a3);
  sub_1000651F0();
  v19 = (_QWORD *)swift_allocObject(&unk_100453620, 40, 7);
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a4;
  swift_retain(a5);
  swift_retain(a4);
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_1001AB950, (uint64_t)v19);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1001AA4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
  v5 = *v4;
  v6 = v4[1];
  *v4 = a1;
  v4[1] = a2;
  swift_unknownObjectRetain(a1);
  sub_1001AACCC(v5, v6);
  swift_unknownObjectRelease(v5);
  return swift_unknownObjectRelease(a1);
}

double sub_1001AA51C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  const char *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  _BYTE v44[24];

  v5 = *a3;
  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v44, 0, 0);
  Strong = swift_weakLoadStrong(v6);
  if (Strong)
  {
    v10 = Strong;
    if (qword_10048C908 != -1)
      swift_once(&qword_10048C908, sub_1001AAE30);
    v11 = type metadata accessor for Logger(0, v8);
    v12 = sub_1000086B4(v11, (uint64_t)qword_100495240);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v43[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v17 = (char *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v5 + 88) + 24))(*(_QWORD *)(v5 + 80));
      *(_QWORD *)(v15 + 4) = sub_100019400(v17, v18, v43);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "╭ %{public}s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }

    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "╞ ✅ Finished Loading", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(12, -1);
      *(_DWORD *)v26 = 134349056;
      *(_QWORD *)(v26 + 4) = a2;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "╞ RevisionID=%{public}ld", (uint8_t *)v26, 0xCu);
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = *(uint64_t *)((char *)a3 + *(_QWORD *)(*a3 + 112));
    swift_beginAccess(v10 + *(_QWORD *)(*(_QWORD *)v10 + 192), v43, 33, 0);
    sub_1000EF540(v27);
    v29 = v28;
    v30 = swift_endAccess(v43);
    if ((v29 & 1) == 0)
    {
      v31 = Logger.logObject.getter(v30);
      v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v33 = 0;
        v34 = "╰ ⏭ Skipping revision; Cancelled";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
        swift_slowDealloc(v33, -1, -1);
        swift_release(v10);

        return result;
      }
      goto LABEL_25;
    }
    v35 = (_BYTE *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 144));
    swift_beginAccess(v35, v43, 0, 0);
    if (*v35 == 1)
    {
      v36 = *(_QWORD *)(*(_QWORD *)v10 + 176);
      v37 = *(_QWORD *)(v10 + v36);
      if (v37)
      {
        if (*(_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 112)) >= a2)
          goto LABEL_26;
        goto LABEL_22;
      }
      if (a2 > 0)
      {
        v37 = 0;
LABEL_22:
        *(_QWORD *)(v10 + v36) = a3;
        swift_release(v37);
        v42 = swift_retain(a3);
        v31 = Logger.logObject.getter(v42);
        v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v33 = 0;
          v34 = "╰ 💤 Set as Pending; RRC is Paused";
          goto LABEL_24;
        }
LABEL_25:

      }
    }
    else
    {
      v38 = RequestResponse.Controller.revision.getter();
      v39 = *(_QWORD *)(v38 + *(_QWORD *)(*(_QWORD *)v38 + 112));
      swift_release(v38);
      if (v39 < v27)
      {
        v40 = swift_retain(a3);
        sub_1001A7A80(v40);
        v31 = Logger.logObject.getter(v41);
        v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v33 = 0;
          v34 = "╰ 👌 Applied";
          goto LABEL_24;
        }
        goto LABEL_25;
      }
    }
LABEL_26:
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

uint64_t *RequestResponse.Controller.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), v2);
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  v5 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(v1 + 88), v4);
  v6 = type metadata accessor for Published(0, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  sub_10003A5C8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112) + 8));
  sub_10003A5C8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120) + 8));
  sub_10003A5C8(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128)), *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 128) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 168)));
  swift_release(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 176)));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RequestResponse.Controller.__deallocating_deinit()
{
  return sub_10017F560((void (*)(void))RequestResponse.Controller.deinit);
}

uint64_t RequestResponse.Revision.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 96));
}

uint64_t RequestResponse.Revision.response.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 104);
  swift_beginAccess(v4, v9, 0, 0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v3 + 88));
  v6 = sub_100005600((uint64_t *)&unk_1004911F0);
  v7 = type metadata accessor for Result(0, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t RequestResponse.Revision.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*v1 + 88));
  v5 = sub_100005600((uint64_t *)&unk_1004911F0);
  v6 = (_QWORD *)type metadata accessor for Result(0, AssociatedTypeWitness, v5, &protocol self-conformance witness table for Error);
  v7 = *(v6 - 1);
  __chkstk_darwin(v6);
  v9 = (char *)&v13 - v8;
  v10 = (uint64_t)v1 + *(_QWORD *)(v3 + 104);
  v11 = swift_beginAccess(v10, v15, 0, 0);
  (*(void (**)(char *, uint64_t, _QWORD *, __n128))(v7 + 16))(v9, v10, v6, v11);
  sub_1001A78C8(v6, (uint64_t)&v14, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 0, 1, AssociatedTypeWitness);
}

BOOL RequestResponse.Revision.isInitial.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)) == 0;
}

uint64_t RequestResponse.Revision.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_1001AACCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2);
  if ((result & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
    swift_getObjectType();
    swift_unknownObjectRetain(v6);
    RequestResponseInvalidatable.invalidate()();
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t *RequestResponse.Revision.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96), *(_QWORD *)(*v0 + 80));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v1 + 88));
  v4 = sub_100005600((uint64_t *)&unk_1004911F0);
  v5 = type metadata accessor for Result(0, AssociatedTypeWitness, v4, &protocol self-conformance witness table for Error);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_unknownObjectRelease(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 120)));
  return v0;
}

uint64_t RequestResponse.Revision.__deallocating_deinit()
{
  return sub_10017F560((void (*)(void))RequestResponse.Revision.deinit);
}

void sub_1001AAE18(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 112));
}

uint64_t sub_1001AAE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100495240);
  sub_1000086B4(v2, (uint64_t)qword_100495240);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x5274736575716552, 0xEF65736E6F707365);
}

uint64_t *sub_1001AAEB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;

  v5 = *v2;
  v7 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(*v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v6);
  v9 = sub_100005600((uint64_t *)&unk_1004911F0);
  v10 = type metadata accessor for Result(0, AssociatedTypeWitness, v9, &protocol self-conformance witness table for Error);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v22 - v12);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 112)) = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 96), a2, v7);
  v15 = type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(0, v7, v6, v14);
  WitnessTable = swift_getWitnessTable(&unk_1003908B8, v15);
  *v13 = swift_allocError(v15, WitnessTable, 0, 0);
  swift_storeEnumTagMultiPayload(v13, v10, 1);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v11 + 32))((uint64_t)v2 + *(_QWORD *)(*v2 + 104), v13, v10);
  v17 = type metadata accessor for GenericRequestResponseInvalidation();
  v18 = swift_allocObject(v17, 49, 7);
  *(_QWORD *)(v18 + 32) = 0;
  *(_QWORD *)(v18 + 40) = 0;
  *(_BYTE *)(v18 + 48) = 0;
  *(_QWORD *)(v18 + 16) = 0x636972656E6547;
  *(_QWORD *)(v18 + 24) = 0xE700000000000000;
  v19 = sub_100006924(qword_1004953E0, (uint64_t (*)(uint64_t))type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  v20 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120));
  *v20 = v18;
  v20[1] = v19;
  return v2;
}

uint64_t *sub_1001AB06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t FunctionTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _BYTE v23[24];
  uint64_t *v24;

  v5 = v4;
  v7 = *v5;
  v8 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 112));
  *v8 = 0;
  v8[1] = 0;
  v9 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 120));
  *v9 = 0;
  v9[1] = 0;
  v10 = (uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 128));
  *v10 = 0;
  v10[1] = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 136)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 144)) = 0;
  v11 = *(_QWORD *)(*v5 + 152);
  v12 = *(_QWORD *)(v7 + 80);
  v13 = type metadata accessor for RequestResponse.Revision(255, v12, *(_QWORD *)(v7 + 88), a4);
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2(67108866, v7, v13, (char *)&type metadata for () + 8);
  *(uint64_t *)((char *)v5 + v11) = static Array._allocateUninitialized(_:)(0, FunctionTypeMetadata2);
  v15 = *(_QWORD *)(*v5 + 160);
  v16 = type metadata accessor for Array(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, v16, 0, 0);
  v18 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  *(uint64_t *)((char *)v5 + v15) = Dictionary.init(dictionaryLiteral:)(v18, &type metadata for Int, v16, &protocol witness table for Int);
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 168)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 176)) = 0;
  *((_BYTE *)v5 + *(_QWORD *)(*v5 + 184)) = 0;
  *(uint64_t *)((char *)v5 + *(_QWORD *)(*v5 + 192)) = (uint64_t)&_swiftEmptySetSingleton;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))((uint64_t)v5 + *(_QWORD *)(*v5 + 96), a1, v12);
  v19 = swift_checkMetadataState(0, v13);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v20 = sub_1001AAEB0(0, a1);
  sub_1001A7A04();
  swift_beginAccess((char *)v5 + *(_QWORD *)(*v5 + 104), v23, 33, 0);
  v21 = *v20;
  v24 = v20;
  sub_10014CBAC((uint64_t)&v24, v21);
  swift_endAccess(v23);
  return v5;
}

uint64_t sub_1001AB26C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = RequestResponse.Controller.revision.getter();
  *a1 = result;
  return result;
}

double sub_1001AB294(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return sub_1001A7A80(v1);
}

uint64_t sub_1001AB2BC()
{
  return 16;
}

__n128 sub_1001AB2C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001AB2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __n128 v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v1 + *(_QWORD *)(v7 + 96);
  v9 = swift_beginAccess(v8, v13, 0, 0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v8, v3, v9);
  v10 = swift_beginAccess(v8, v12, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 24))(v8, a1, v3, v10);
  swift_endAccess(v12);
  sub_1001A7B8C((uint64_t)v6);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for RequestResponse.Revision(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision);
}

uint64_t sub_1001AB3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001AB3D4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001AB3DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001AB400(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 32))(*a1, *a2);
}

void *sub_1001AB428()
{
  return &protocol witness table for Int;
}

uint64_t sub_1001AB434()
{
  return 16;
}

__n128 sub_1001AB440(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001AB44C()
{
  return RequestResponse.Controller.$revision.getter();
}

uint64_t sub_1001AB46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AB778(a1, a2, a3, a4);
}

uint64_t sub_1001AB48C()
{
  return 16;
}

__n128 sub_1001AB498(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for RequestResponse()
{
  return &type metadata for RequestResponse;
}

uint64_t sub_1001AB4B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[13];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v4 = v2;
  if (v5 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v6 = type metadata accessor for RequestResponse.Revision(255, v2, *(_QWORD *)(a1 + 88), v3);
    v7 = type metadata accessor for Published(319, v6);
    v4 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = &unk_1003906F8;
      v10[3] = &unk_1003906F8;
      v10[4] = &unk_1003906F8;
      v10[5] = &unk_100390710;
      v10[6] = &unk_100390710;
      v10[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[9] = &unk_100390728;
      v10[10] = &unk_100390728;
      v10[11] = &unk_100390710;
      v10[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
      return swift_initClassMetadata2(a1, 0, 13, v10, a1 + 96);
    }
  }
  return v4;
}

uint64_t type metadata accessor for RequestResponse.Controller(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller);
}

uint64_t sub_1001AB5A4(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "(";
  v2[1] = &unk_100390710;
  v2[2] = &unk_1003906F8;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 96);
}

uint64_t type metadata accessor for RequestResponse.Controller.TaskInvalidator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Controller.TaskInvalidator);
}

uint64_t sub_1001AB604(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a1 + 88));
    v6 = sub_100005600((uint64_t *)&unk_1004911F0);
    v7 = type metadata accessor for Result(319, AssociatedTypeWitness, v6, &protocol self-conformance witness table for Error);
    v3 = v7;
    if (v8 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v7 - 8) + 64;
      v10[2] = (char *)&value witness table for Builtin.Int64 + 64;
      v10[3] = &unk_1003907B8;
      return swift_initClassMetadata2(a1, 0, 4, v10, a1 + 96);
    }
  }
  return v3;
}

uint64_t sub_1001AB6F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&unk_1003907D0, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001AB71C(uint64_t a1, uint64_t a2)
{
  Swift::String v2;
  void *object;

  v2._countAndFlagsBits = (*(uint64_t (**)(void))(a2 + 24))();
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return 0x3A664F6B736154;
}

uint64_t sub_1001AB778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v6 = type metadata accessor for RequestResponse.Revision(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v7 = type metadata accessor for Published.Publisher(0, v6);
  __chkstk_darwin(v7);
  v9 = &v14[-v8 - 8];
  (*(void (**)(_BYTE *, uint64_t))(v10 + 16))(&v14[-v8 - 8], a1);
  swift_beginAccess(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v14, 33, 0);
  v11 = type metadata accessor for Published(0, v6);
  Published.projectedValue.setter(v9, v11);
  return swift_endAccess(v14);
}

uint64_t sub_1001AB840()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AB864()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001AB890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001AA320(a1, a2, a3, *(uint64_t **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1001AB89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004953D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB8E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_1004953D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AB924()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1001AB950()
{
  uint64_t v0;

  return sub_1001AA51C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001AB95C(uint64_t (**a1)(uint64_t *, uint64_t *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *, uint64_t *);
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *a1;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v2;
  return v3(&v6, &v5);
}

uint64_t sub_1001AB99C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1001AB9C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001A86C4(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t type metadata accessor for RequestResponse.Revision.InitialResponseLoadingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestResponse.Revision.InitialResponseLoadingError);
}

uint64_t sub_1001AB9D8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001ABA18 + 4 * asc_1003905F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001ABA38 + 4 * byte_1003905F5[v4]))();
}

_BYTE *sub_1001ABA18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001ABA38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001ABA40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001ABA48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001ABA50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001ABA58(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1001ABA64(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100390890, a1);
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  v4 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 40) = 0;
  v5 = swift_allocObject(&unk_1004537A0, 24, 7);
  swift_weakInit(v5 + 16, v4);
  v6 = swift_allocObject(&unk_1004537C8, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v7, 48, 7);
  v8 = swift_bridgeObjectRetain();
  v9 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v8, 0, (uint64_t)sub_10013D88C, v6);
  v10 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v9;
  swift_release(v10);
  return v4;
}

uint64_t GenericRequestResponseInvalidation.__allocating_init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_allocObject(v2, 49, 7);
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_BYTE *)(result + 48) = 0;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

Swift::Void __swiftcall RequestResponseInvalidatable.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1;
  v4 = v0;
  if (((*(uint64_t (**)(void))(v1 + 40))() & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(1, v4, v3);
    v5 = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
    if (v5)
    {
      v7 = (uint64_t)v5;
      v8 = v6;
      v5(v2, v3);
      sub_10003A5C8(v7, v8);
    }
  }
}

uint64_t GenericRequestResponseInvalidation.init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  sub_10003A434(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t GenericRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 32, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_10003A5C8(v5, v6);
}

uint64_t (*CompoundRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 48, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t GenericRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 48, v4, 1, 0);
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*GenericRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t GenericRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10003A5C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t GenericRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_10003A5C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 49, 7);
}

uint64_t sub_1001ABDFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init()()
{
  uint64_t v0;

  swift_allocObject(v0, 48, 7);
  return sub_1001ACAD8((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t CompoundRequestResponseInvalidation.__allocating_init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  swift_allocObject(v1, 48, 7);
  v3 = sub_1001ACAD8(a1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t CompoundRequestResponseInvalidation.init(responseInvalidations:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1001ACAD8(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.append(_:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];

  if (result)
  {
    v3 = v2;
    v5 = result;
    ObjectType = swift_getObjectType();
    v7 = swift_allocObject(&unk_1004537F0, 24, 7);
    swift_weakInit(v7 + 16, v2);
    v8 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(a2 + 24);
    swift_unknownObjectRetain(v5);
    swift_retain(v7);
    v8(sub_1001ACD10, v7, ObjectType, a2);
    swift_release(v7);
    v9 = *(_QWORD **)(v2 + 40);
    swift_unknownObjectRetain(v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    *(_QWORD *)(v3 + 40) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_10003ECB0(0, v9[2] + 1, 1, v9);
      *(_QWORD *)(v3 + 40) = v9;
    }
    v12 = v9[2];
    v11 = v9[3];
    if (v12 >= v11 >> 1)
    {
      v9 = sub_10003ECB0((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      *(_QWORD *)(v3 + 40) = v9;
    }
    v9[2] = v12 + 1;
    v13 = &v9[2 * v12];
    v13[4] = v5;
    v13[5] = a2;
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2) & 1) != 0)
    {
      swift_beginAccess(v3 + 32, v17, 1, 0);
      if (*(_BYTE *)(v3 + 32) != 1)
      {
        *(_BYTE *)(v3 + 32) = 1;
        swift_beginAccess(v3 + 16, &v16, 0, 0);
        v14 = *(void (**)(uint64_t, uint64_t))(v3 + 16);
        if (v14)
        {
          v15 = *(_QWORD *)(v3 + 24);
          swift_retain(v15);
          v14(v5, a2);
          sub_10003A5C8((uint64_t)v14, v15);
        }
      }
      return swift_unknownObjectRelease(v5);
    }
    else
    {
      return swift_unknownObjectRelease(v5);
    }
  }
  return result;
}

double sub_1001AC0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    swift_beginAccess(Strong + 32, v12, 1, 0);
    if ((*(_BYTE *)(v8 + 32) & 1) == 0)
    {
      *(_BYTE *)(v8 + 32) = 1;
      swift_beginAccess(v8 + 16, v11, 0, 0);
      v9 = *(void (**)(uint64_t, uint64_t))(v8 + 16);
      if (v9)
      {
        v10 = *(_QWORD *)(v8 + 24);
        swift_retain(v10);
        v9(a1, a2);
        sub_10003A5C8((uint64_t)v9, v10);
      }
    }
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall CompoundRequestResponseInvalidation.append(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void (*v9)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t);
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, unint64_t);
  uint64_t v15;
  void (**v16)(uint64_t, unint64_t);
  _BYTE *v17;
  __n128 v18;
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = *((_QWORD *)a1._rawValue + 2);
  if (v2)
  {
    v3 = v1;
    swift_bridgeObjectRetain();
    v17 = (_BYTE *)(v1 + 32);
    swift_beginAccess(v1 + 32, v20, 1, 0);
    v16 = (void (**)(uint64_t, unint64_t))(v1 + 16);
    swift_beginAccess(v1 + 16, v19, 0, 0);
    for (i = 0; i != v2; ++i)
    {
      v18 = *((__n128 *)a1._rawValue + i + 2);
      v6 = *((_QWORD *)a1._rawValue + 2 * i + 4);
      ObjectType = swift_getObjectType();
      v8 = swift_allocObject(&unk_1004537F0, 24, 7);
      swift_weakInit(v8 + 16, v3);
      v9 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t))(v18.n128_u64[1] + 24);
      swift_unknownObjectRetain_n(v6, 2, v18);
      swift_retain(v8);
      v9(sub_1001ACD10, v8, ObjectType, v18.n128_u64[1]);
      swift_release(v8);
      v10 = *(_QWORD **)(v3 + 40);
      swift_unknownObjectRetain(v6);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
      *(_QWORD *)(v3 + 40) = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v10 = sub_10003ECB0(0, v10[2] + 1, 1, v10);
        *(_QWORD *)(v3 + 40) = v10;
      }
      v13 = v10[2];
      v12 = v10[3];
      if (v13 >= v12 >> 1)
      {
        v10 = sub_10003ECB0((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
        *(_QWORD *)(v3 + 40) = v10;
      }
      v10[2] = v13 + 1;
      *(__n128 *)&v10[2 * v13 + 4] = v18;
      if (((*(uint64_t (**)(uint64_t, unint64_t))(v18.n128_u64[1] + 40))(ObjectType, v18.n128_u64[1]) & 1) != 0
        && (*v17 & 1) == 0)
      {
        *v17 = 1;
        v14 = *v16;
        if (*v16)
        {
          v15 = *(_QWORD *)(v3 + 24);
          swift_retain(v15);
          v14(v6, v18.n128_u64[1]);
          sub_10003A5C8((uint64_t)v14, v15);
        }
      }
      swift_unknownObjectRelease_n(v6, 2);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t CompoundRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 40), 2);
    v3 = (uint64_t *)(v1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      ObjectType = swift_getObjectType(v5);
      v7 = *(_QWORD *)(v4 + 8);
      swift_unknownObjectRetain(v5);
      v8 = dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(ObjectType, v7);
      v10 = v9;
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = 124;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      swift_unknownObjectRelease(v5);
      swift_bridgeObjectRelease(0xEA00000000005B3ALL);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 93;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(0xEA00000000005B3ALL);
  return 0x646E756F706D6F43;
}

uint64_t CompoundRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t CompoundRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 32, v4, 1, 0);
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t CompoundRequestResponseInvalidation.deinit()
{
  uint64_t v0;

  sub_10003A5C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CompoundRequestResponseInvalidation.__deallocating_deinit()
{
  uint64_t v0;

  sub_10003A5C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1001AC5BC()
{
  return CompoundRequestResponseInvalidation.debugDescription.getter();
}

uint64_t BindingRequestResponseInvalidation.__allocating_init(trigger:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_100005574(&qword_100490BF0);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100384A80;
  sub_1000244B0((uint64_t)a1, v5 + 32);
  v6 = swift_allocObject(v2, 41, 7);
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 40) = 0;
  v7 = swift_allocObject(&unk_1004537A0, 24, 7);
  swift_weakInit(v7 + 16, v6);
  v8 = swift_allocObject(&unk_100453818, 32, 7);
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v9, 48, 7);
  v10 = swift_bridgeObjectRetain();
  v11 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v10, 0, (uint64_t)sub_1001ACE9C, v8);
  v12 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v11;
  swift_release(v12);
  sub_10000682C(a1);
  return v6;
}

uint64_t BindingRequestResponseInvalidation.init(triggers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 40) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = swift_allocObject(&unk_1004537A0, 24, 7);
  swift_weakInit(v4 + 16, v2);
  v5 = swift_allocObject(&unk_100453840, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v6, 48, 7);
  v7 = swift_bridgeObjectRetain();
  v8 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(v7, 0, (uint64_t)sub_1001ACE9C, v5);
  v9 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 16) = v8;
  swift_release(v9);
  return v2;
}

uint64_t sub_1001AC7B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001AC7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    swift_beginAccess(Strong + 40, v10, 1, 0);
    if ((*(_BYTE *)(v5 + 40) & 1) == 0)
    {
      *(_BYTE *)(v5 + 40) = 1;
      swift_beginAccess(v5 + 24, v9, 0, 0);
      v6 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
      if (v6)
      {
        v7 = *(_QWORD *)(v5 + 32);
        v8 = sub_1001ACE60((unint64_t *)&qword_1004928F0, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
        swift_retain(v7);
        v6(v5, v8);
        sub_10003A5C8((uint64_t)v6, v7);
      }
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t BindingRequestResponseInvalidation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = 0x3D676E69646E6942;
  v6 = 0xE800000000000000;
  v4 = *(_QWORD *)(v0 + 16);
  swift_retain(v4);
  v1 = sub_100005574(&qword_100495468);
  v2._countAndFlagsBits = String.init<A>(describing:)(&v4, v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t BindingRequestResponseInvalidation.isInvalid.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t BindingRequestResponseInvalidation.isInvalid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 40, v4, 1, 0);
  *(_BYTE *)(v1 + 40) = a1;
  return result;
}

uint64_t (*BindingRequestResponseInvalidation.isInvalid.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j_j__swift_endAccess;
}

_QWORD *BindingRequestResponseInvalidation.deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_10003A5C8(v0[3], v0[4]);
  return v0;
}

uint64_t BindingRequestResponseInvalidation.__deallocating_deinit()
{
  _QWORD *v0;

  swift_release(v0[2]);
  sub_10003A5C8(v0[3], v0[4]);
  return swift_deallocClassInstance(v0, 41, 7);
}

uint64_t (*sub_1001ACA24(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1001ACA60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *v0;
  v6 = 0x3D676E69646E6942;
  v7 = 0xE800000000000000;
  v5 = *(_QWORD *)(v1 + 16);
  swift_retain(v5);
  v2 = sub_100005574(&qword_100495468);
  v3._countAndFlagsBits = String.init<A>(describing:)(&v5, v2);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001ACAD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  void (*v10)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t);
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, unint64_t);
  uint64_t v16;
  void (**v18)(uint64_t, unint64_t);
  _BYTE *v19;
  __n128 v20;
  _BYTE v21[24];
  _BYTE v22[24];

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v3 = v1 + 16;
  *(_BYTE *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 24) = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v19 = (_BYTE *)(v3 + 16);
    swift_beginAccess(v3 + 16, v22, 1, 0);
    v18 = (void (**)(uint64_t, unint64_t))v3;
    swift_beginAccess(v3, v21, 0, 0);
    for (i = 0; i != v4; ++i)
    {
      v20 = *(__n128 *)(a1 + 16 * i + 32);
      v7 = *(_QWORD *)(a1 + 16 * i + 32);
      ObjectType = swift_getObjectType();
      v9 = swift_allocObject(&unk_1004537F0, 24, 7);
      swift_weakInit(v9 + 16, v2);
      v10 = *(void (**)(double (*)(uint64_t, uint64_t), uint64_t, uint64_t, unint64_t))(v20.n128_u64[1] + 24);
      swift_unknownObjectRetain_n(v7, 2, v20);
      swift_retain(v9);
      v10(sub_1001ACD10, v9, ObjectType, v20.n128_u64[1]);
      swift_release(v9);
      v11 = *(_QWORD **)(v2 + 40);
      swift_unknownObjectRetain(v7);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
      *(_QWORD *)(v2 + 40) = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v11 = sub_10003ECB0(0, v11[2] + 1, 1, v11);
        *(_QWORD *)(v2 + 40) = v11;
      }
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
      {
        v11 = sub_10003ECB0((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
        *(_QWORD *)(v2 + 40) = v11;
      }
      v11[2] = v14 + 1;
      *(__n128 *)&v11[2 * v14 + 4] = v20;
      if (((*(uint64_t (**)(uint64_t, unint64_t))(v20.n128_u64[1] + 40))(ObjectType, v20.n128_u64[1]) & 1) != 0
        && (*v19 & 1) == 0)
      {
        *v19 = 1;
        v15 = *v18;
        if (*v18)
        {
          v16 = *(_QWORD *)(v2 + 24);
          swift_retain(v16);
          v15(v7, v20.n128_u64[1]);
          sub_10003A5C8((uint64_t)v15, v16);
        }
      }
      swift_unknownObjectRelease_n(v7, 2);
    }
    swift_bridgeObjectRelease();
  }
  return v2;
}

double sub_1001ACD10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001AC0B0(a1, a2, v2);
}

uint64_t sub_1001ACD20()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001ACD4C(uint64_t a1)
{
  uint64_t result;

  result = sub_1001ACE60(&qword_100495470, type metadata accessor for GenericRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for GenericRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for GenericRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34GenericRequestResponseInvalidation);
}

uint64_t sub_1001ACDA8(uint64_t a1)
{
  uint64_t result;

  result = sub_1001ACE60(&qword_100495478, type metadata accessor for CompoundRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for CompoundRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CompoundRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore35CompoundRequestResponseInvalidation);
}

uint64_t sub_1001ACE04(uint64_t a1)
{
  uint64_t result;

  result = sub_1001ACE60(&qword_100495480, type metadata accessor for BindingRequestResponseInvalidation, (uint64_t)&protocol conformance descriptor for BindingRequestResponseInvalidation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for BindingRequestResponseInvalidation()
{
  return objc_opt_self(_TtC9MusicCore34BindingRequestResponseInvalidation);
}

uint64_t sub_1001ACE60(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1001ACEA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_10048D510);
  v6 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1000772FC(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v17 = *(_QWORD *)(v3 + 72);
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v12(v5, v11, v2);
      swift_dynamicCast(v8, v5, v2, v18, 7);
      v10 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_1000772FC(0, v10[2] + 1, 1);
        v10 = v19;
      }
      v14 = v10[2];
      v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000772FC(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      v10[2] = v14 + 1;
      sub_1000149A8((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, &qword_10048D510);
      v11 += v17;
      --v9;
    }
    while (v9);
  }
  return v10;
}

_QWORD *sub_1001AD068(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  int *v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1000773A4(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (int *)(a1 + 32);
    v5 = _swiftEmptyArrayStorage[2];
    do
    {
      v6 = *v4;
      v8 = result;
      v7 = result[3];
      if (v5 >= v7 >> 1)
      {
        sub_1000773A4((char *)(v7 > 1), v5 + 1, 1);
        result = v8;
      }
      result[2] = v5 + 1;
      *((_DWORD *)result + v5 + 8) = v6;
      ++v4;
      ++v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_1001AD130(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];
  uint64_t v11;
  _QWORD *v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = a1 + 32;
    do
    {
      sub_10009B414(v4, (uint64_t)v10);
      v5 = sub_100005574(&qword_100491BE0);
      v6 = swift_dynamicCast(&v11, v10, &type metadata for AnyHashable, v5, 7);
      v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v12;
  }
  return result;
}

uint64_t sub_1001AD214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AD230(a1, a2, a3, (uint64_t)&type metadata for () + 8);
}

uint64_t sub_1001AD224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AD230(a1, a2, a3, (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

uint64_t sub_1001AD230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned __int8 v18;
  _QWORD v20[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8) == 1)
  {
    sub_100008758(a1, (uint64_t *)&unk_100493720);
    v10 = 7168;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
    {
LABEL_6:
      v17 = 0;
      return swift_task_create(v10, v17, a4, a2, a3);
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v10 = v18 | 0x1C00;
    v11 = *(_QWORD *)(a3 + 16);
    if (!v11)
      goto LABEL_6;
  }
  v12 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v11);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v12);
  v16 = v15;
  swift_unknownObjectRelease(v11);
  if (!(v16 | v14))
    goto LABEL_6;
  v20[0] = 0;
  v20[1] = 0;
  v17 = v20;
  v20[2] = v14;
  v20[3] = v16;
  return swift_task_create(v10, v17, a4, a2, a3);
}

uint64_t sub_1001AD360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001AD230(a1, a2, a3, (uint64_t)&type metadata for Bool);
}

uint64_t sub_1001AD36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100008758(a1, (uint64_t *)&unk_100493720);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = sub_100005574(&qword_100494208);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, v17, a2, a3);
}

uint64_t Logger.sharePlayTogether.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.sharePlayTogether);
}

uint64_t static SharePlayTogetherSession.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v5 = *(_QWORD *)(v3 + 8);
  v6 = (_QWORD *)(a2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  v7 = v6[1];
  if (v4 == *v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v6, v7, 0);
}

void *SharePlayTogetherSession.activityIdentifier.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.activityIdentifier;
}

unint64_t static SharePlayTogetherSession.activityIdentifier.getter()
{
  return 0xD000000000000017;
}

void *SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey;
}

unint64_t static SharePlayTogetherSession.needsDisplayNameAckDefaultsKey.getter()
{
  return 0xD000000000000024;
}

void *SharePlayTogetherSession.didShowDisplayNameAck.unsafeMutableAddressor()
{
  return &static SharePlayTogetherSession.didShowDisplayNameAck;
}

unint64_t static SharePlayTogetherSession.didShowDisplayNameAck.getter()
{
  return 0xD000000000000026;
}

uint64_t SharePlayTogetherSession.isHost.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost);
}

uint64_t SharePlayTogetherSession.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

SEL *SharePlayTogetherSession.isPlaceholder.getter()
{
  return sub_1001AD604((SEL *)&selRef_isPlaceholder);
}

SEL *SharePlayTogetherSession.canManageParticipants.getter()
{
  return sub_1001AD604((SEL *)&selRef_canManageParticipants);
}

SEL *SharePlayTogetherSession.canHandleJoinRequests.getter()
{
  return sub_1001AD604((SEL *)&selRef_canHandleJoinRequests);
}

SEL *sub_1001AD604(SEL *result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session))
    return (SEL *)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session), *result);
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.title.getter()
{
  uint64_t v0;
  void *result;
  id v2;
  uint64_t v3;

  result = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v2 = objc_msgSend(result, "localizedSessionName");
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

    return (void *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id SharePlayTogetherSession.joinToken.getter()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "joinToken");
  __break(1u);
  return result;
}

uint64_t SharePlayTogetherSession.routeType.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, v3, 0, 0);
  return *v1;
}

uint64_t SharePlayTogetherSession.routeType.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*SharePlayTogetherSession.routeType.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.routeSymbolName(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return Published.init(initialValue:)(v3, &type metadata for String);
}

uint64_t SharePlayTogetherSession.routeSymbolName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100390AD0);
  v2 = swift_getKeyPath(&unk_100390AF8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001AD838(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390AD0);
  v5 = swift_getKeyPath(&unk_100390AF8);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_1001AD8B4(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390AD0);
  v6 = swift_getKeyPath(&unk_100390AF8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t SharePlayTogetherSession.routeSymbolName.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_100390AD0);
  v6 = swift_getKeyPath(&unk_100390AF8);
  v8[0] = a1;
  v8[1] = a2;
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*SharePlayTogetherSession.routeSymbolName.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100390AD0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390AF8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t SharePlayTogetherSession.$routeSymbolName.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1004956C8);
}

uint64_t SharePlayTogetherSession.$routeSymbolName.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004956D0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName, &qword_1004956C8);
}

void (*SharePlayTogetherSession.$routeSymbolName.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004956D0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_1004956C8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.participants(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_100005574(&qword_1004956D8);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t SharePlayTogetherSession.participants.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100390B18);
  v2 = swift_getKeyPath(&unk_100390B40);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001ADBC8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390B18);
  v5 = swift_getKeyPath(&unk_100390B40);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001ADC44(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390B18);
  v5 = swift_getKeyPath(&unk_100390B40);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.participants.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100390B18);
  v4 = swift_getKeyPath(&unk_100390B40);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*SharePlayTogetherSession.participants.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100390B18);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390B40);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t SharePlayTogetherSession.$participants.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1004956E8);
}

uint64_t SharePlayTogetherSession.$participants.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004956F0, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants, &qword_1004956E8);
}

void (*SharePlayTogetherSession.$participants.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004956F0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_1004956E8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.getter()
{
  return sub_100172524((uint64_t)&unk_100390B60, (uint64_t)&unk_100390B88);
}

uint64_t SharePlayTogetherSession.connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_1001AE164(a1, (uint64_t)&unk_100390B60, (uint64_t)&unk_100390B88);
}

void (*SharePlayTogetherSession.connectedParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100390B60);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390B88);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_100495700);
}

uint64_t SharePlayTogetherSession.$connectedParticipantsCount.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_100496220, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount, (uint64_t *)&unk_100495700);
}

void (*SharePlayTogetherSession.$connectedParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_100496220);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574((uint64_t *)&unk_100495700);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.pendingParticipantsCount(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for Int);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.getter()
{
  return sub_100172524((uint64_t)&unk_100390BA8, (uint64_t)&unk_100390BD0);
}

void sub_1001AE068(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390BA8);
  v5 = swift_getKeyPath(&unk_100390BD0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001AE0E4(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390BA8);
  v5 = swift_getKeyPath(&unk_100390BD0);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t SharePlayTogetherSession.pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_1001AE164(a1, (uint64_t)&unk_100390BA8, (uint64_t)&unk_100390BD0);
}

uint64_t sub_1001AE164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*SharePlayTogetherSession.pendingParticipantsCount.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100390BA8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390BD0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_100495700);
}

uint64_t SharePlayTogetherSession.$pendingParticipantsCount.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_100496220, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount, (uint64_t *)&unk_100495700);
}

void (*SharePlayTogetherSession.$pendingParticipantsCount.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_100496220);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574((uint64_t *)&unk_100495700);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t property wrapper backing initializer of SharePlayTogetherSession.host(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100005574(&qword_100495718);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v4, &qword_100495718);
  Published.init(initialValue:)(v4, v2);
  return sub_100008758(a1, &qword_100495718);
}

double SharePlayTogetherSession.host.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_100390BF0);
  v4 = swift_getKeyPath(&unk_100390C18);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_1001AE43C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390BF0);
  v5 = swift_getKeyPath(&unk_100390C18);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1001AE4A4(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_100005574(&qword_100495718);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v14 - v8;
  sub_100014A7C(a1, (uint64_t)&v14 - v8, &qword_100495718);
  v10 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390BF0);
  v12 = swift_getKeyPath(&unk_100390C18);
  sub_100014A7C((uint64_t)v9, (uint64_t)v7, &qword_100495718);
  static Published.subscript.setter(v7, v10, KeyPath, v12);
  return sub_100008758((uint64_t)v9, &qword_100495718);
}

uint64_t SharePlayTogetherSession.host.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_100005574(&qword_100495718);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100390BF0);
  v7 = swift_getKeyPath(&unk_100390C18);
  sub_100014A7C(a1, (uint64_t)v5, &qword_100495718);
  static Published.subscript.setter(v5, v1, KeyPath, v7);
  return sub_100008758(a1, &qword_100495718);
}

void (*SharePlayTogetherSession.host.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100390BF0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100390C18);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t SharePlayTogetherSession.$host.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_100495728);
}

uint64_t SharePlayTogetherSession.$host.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_100495730, &OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host, &qword_100495728);
}

void (*SharePlayTogetherSession.$host.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_100495730);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_100495728);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

id SharePlayTogetherSession.qrCode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  _QWORD v36[2];
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];

  v3 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v3);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 8);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 16);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 24);
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  if (v12)
  {
LABEL_8:
    result = sub_1001B364C(v9, v10, v11, v12);
    *a1 = v13;
    a1[1] = v14;
    a1[2] = v15;
    a1[3] = (uint64_t)v16;
    a1[4] = v17;
    return result;
  }
  v36[1] = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode + 32);
  v37 = v11;
  v38 = v10;
  v39 = v9;
  result = *(id *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v19 = v5;
    v20 = v4;
    v21 = objc_msgSend(result, "joinToken");
    if (!v21)
      goto LABEL_5;
    v22 = v21;
    v23 = objc_msgSend(v21, "joinURLString");

    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    static String.Encoding.utf8.getter(v27);
    v28 = String.data(using:allowLossyConversion:)(v7, 0, v24, v26);
    v30 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    if (v30 >> 60 != 15)
    {
      sub_1000516E4(v28, v30);
      sub_1001F7B60(v28, v30, 76, v40);
      v31 = v28;
      v32 = *v8;
      v33 = v8[1];
      v34 = v8[2];
      v35 = (void *)v8[3];
      sub_1000149A8((uint64_t)v40, (uint64_t)v8, &qword_100495740);
      sub_1001B8934(v32, v33, v34, v35);
      sub_1000067D4(v31, v30);
      v13 = *v8;
      v14 = v8[1];
      v15 = v8[2];
      v16 = (void *)v8[3];
      v17 = v8[4];
      sub_1001B364C(*v8, v14, v15, v16);
    }
    else
    {
LABEL_5:
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
    }
    v10 = v38;
    v9 = v39;
    v11 = v37;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *SharePlayTogetherSession.joinURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    v4 = objc_msgSend(result, "joinToken");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, "joinURLString");

      v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
      v9 = v8;

      URL.init(string:)(v7, v9);
      return (void *)swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = type metadata accessor for URL(0);
      return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SharePlayTogetherSession.isActive.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
  {
    if ((objc_msgSend((id)result, "isPlaceholder") & 1) != 0)
    {
      return 0;
    }
    else if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      KeyPath = swift_getKeyPath(&unk_100390B60);
      v3 = swift_getKeyPath(&unk_100390B88);
      static Published.subscript.getter(&v4, v0, KeyPath, v3);
      swift_release(v3);
      swift_release(KeyPath);
      return v4 > 0;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SharePlayTogetherSession.isPersistent.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, v3, 0, 0);
  return *v1;
}

uint64_t SharePlayTogetherSession.isPersistent.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*SharePlayTogetherSession.isPersistent.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_1001AEC40(void *a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  unsigned int v44;
  char v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  Class isa;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  objc_class *v56;
  char *v57;
  NSString v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  id v90;
  objc_super v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94[3];

  v86 = a2;
  v90 = a1;
  v87 = type metadata accessor for Logger(0, a2);
  v89 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v88 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_100495728);
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  __chkstk_darwin(v4);
  v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100005574(&qword_100495718);
  v6 = __chkstk_darwin(v82);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v82 - v9;
  v11 = sub_100005574((uint64_t *)&unk_100495700);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_1004956E8);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = 0;
  v19 = &v2[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__participants];
  v94[0] = (uint64_t)_swiftEmptyArrayStorage;
  v20 = v2;
  v21 = sub_100005574(&qword_1004956D8);
  Published.init(initialValue:)(v94, v21);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  v22 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__connectedParticipantsCount];
  v94[0] = 0;
  Published.init(initialValue:)(v94, &type metadata for Int);
  v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24 = v90;
  v23(v22, v14, v11);
  v25 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__pendingParticipantsCount];
  v94[0] = 0;
  Published.init(initialValue:)(v94, &type metadata for Int);
  v23(v25, v14, v11);
  v26 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__host];
  v27 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v10, 1, 1, v27);
  sub_100014A7C((uint64_t)v10, (uint64_t)v8, &qword_100495718);
  v28 = v83;
  Published.init(initialValue:)(v8, v82);
  sub_100008758((uint64_t)v10, &qword_100495718);
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v26, v28, v85);
  v29 = &v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__qrCode];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *((_QWORD *)v29 + 4) = 0;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected] = 0;
  v30 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap;
  *(_QWORD *)&v20[v30] = sub_100099728((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers] = _swiftEmptyArrayStorage;
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = 0;
  v31 = objc_msgSend(v24, "identifier");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = (uint64_t *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_identifier];
  *v35 = v32;
  v35[1] = v34;
  v36 = objc_msgSend(v24, "isHosted");
  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost] = v36;
  v37 = v86;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint] = v86;
  v38 = v37;
  v39 = objc_msgSend(v24, "hostInfo");
  LOBYTE(v32) = objc_msgSend(v39, "routeType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_routeType] = v32;
  v40 = objc_msgSend(v38, "groupLeader");
  v41 = objc_msgSend(v40, "transportType");

  v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent] = v41 != (id)6;
  v42 = objc_msgSend(v24, "hostInfo");
  LODWORD(v41) = objc_msgSend(v42, "routeType");

  if ((_DWORD)v41 == 1
    || (v43 = objc_msgSend(v24, "hostInfo"),
        v44 = objc_msgSend(v43, "routeType"),
        v43,
        v44 == 2))
  {
    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v94, 33, 0);
    v92 = 0x6C6C69662E726163;
    v93 = 0xE800000000000000;
    Published.init(initialValue:)(&v92, &type metadata for String);
    swift_endAccess(v94);
    v45 = 1;
    v46 = v87;
  }
  else
  {
    v47 = objc_msgSend(v38, "outputDevices");
    if (v47)
    {
      v48 = v47;
      v49 = sub_1000087DC(0, (unint64_t *)&unk_100495998, MRAVOutputDevice_ptr);
      static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, v49);

    }
    v46 = v87;
    v50 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
    sub_1000087DC(0, (unint64_t *)&unk_100495998, MRAVOutputDevice_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v52 = objc_msgSend(v50, "symbolNameForOutputDevices:", isa);

    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v55 = v54;

    swift_beginAccess(&v20[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession__routeSymbolName], v94, 33, 0);
    v92 = v53;
    v93 = v55;
    Published.init(initialValue:)(&v92, &type metadata for String);
    swift_endAccess(v94);
    v45 = 0;
  }

  v56 = (objc_class *)type metadata accessor for SharePlayTogetherSession(0);
  v91.receiver = v20;
  v91.super_class = v56;
  v57 = (char *)objc_msgSendSuper2(&v91, "init");
  v58 = objc_msgSend(v24, "identifier");
  if (!v58)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  v59 = objc_msgSend((id)objc_opt_self(MRGroupSessionProvider), "remoteControlGroupSessionWithIdentifier:delegate:", v58, v57);

  v60 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v61 = *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session] = v59;
  swift_unknownObjectRelease(v61);
  v62 = (void *)MRAVEndpointOutputDevicesDidChangeNotification;
  v63 = swift_allocObject(&unk_100453B98, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v57);
  v64 = swift_allocObject(&unk_100453BC0, 32, 7);
  *(_BYTE *)(v64 + 16) = v45;
  *(_QWORD *)(v64 + 24) = v63;
  v65 = type metadata accessor for NotificationObserver();
  swift_allocObject(v65, 64, 7);
  v66 = v38;
  v67 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v62, (uint64_t)v38, 1, 1, (uint64_t)sub_1001B99DC, v64);
  v68 = *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver];
  *(_QWORD *)&v57[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpointNotificationObserver] = v67;
  swift_release(v68);
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v69 = sub_1000086B4(v46, (uint64_t)static Logger.sharePlayTogether);
  v70 = v88;
  v71 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v88, v69, v46);
  v72 = v57;
  v73 = Logger.logObject.getter(v72);
  v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    v75 = swift_slowAlloc(12, -1);
    v76 = swift_slowAlloc(32, -1);
    v94[0] = v76;
    *(_DWORD *)v75 = 136446210;
    v77 = *(void **)&v57[v60];
    if (v77)
    {
      v78 = objc_msgSend(v77, "description");
      v79 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
      v81 = v80;

      *(_QWORD *)(v75 + 4) = sub_100019400(v79, v81, v94);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "Initialized SharePlayTogetherSession object with MR session %{public}s", (uint8_t *)v75, 0xCu);
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v75, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v46);
    }
    else
    {

      __break(1u);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v46);
  }
}

void sub_1001AF550(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _QWORD v19[2];
  _BYTE v20[24];
  _BYTE v21[24];

  if ((a2 & 1) == 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v21, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      swift_beginAccess(v3, v20, 0, 0);
      v6 = swift_unknownObjectWeakLoadStrong(v3);
      if (v6)
      {
        v7 = (void *)v6;
        v8 = *(id *)(v6 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint);

        v9 = objc_msgSend(v8, "outputDevices");
        if (v9)
        {
          v10 = sub_1000087DC(0, (unint64_t *)&unk_100495998, MRAVOutputDevice_ptr);
          static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

        }
      }
      v11 = (void *)objc_opt_self(MRAVOutputDeviceSymbolProvider);
      sub_1000087DC(0, (unint64_t *)&unk_100495998, MRAVOutputDevice_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v13 = objc_msgSend(v11, "symbolNameForOutputDevices:", isa);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      KeyPath = swift_getKeyPath(&unk_100390AD0);
      v18 = swift_getKeyPath(&unk_100390AF8);
      v19[0] = v14;
      v19[1] = v16;
      static Published.subscript.setter(v19, v5, KeyPath, v18);
    }
  }
}

void SharePlayTogetherSession.approve(participant:)(uint64_t a1)
{
  sub_1001AF754(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_100453958, (SEL *)&selRef_approvePendingParticipant_completion_);
}

void SharePlayTogetherSession.deny(participant:)(uint64_t a1)
{
  sub_1001AF754(a1, (SEL *)&selRef_pendingParticipantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_100453980, (SEL *)&selRef_denyPendingParticipant_completion_);
}

void SharePlayTogetherSession.remove(participant:)(uint64_t a1)
{
  sub_1001AF754(a1, (SEL *)&selRef_participantForIdentifier_, (uint64_t)CFRange.init(_:), (uint64_t)&unk_1004539A8, (SEL *)&selRef_removeParticipant_completion_);
}

void sub_1001AF754(uint64_t a1, SEL *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];

  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v7 = *(void **)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  swift_unknownObjectRetain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session));
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v7, *a2, v12);

  swift_unknownObjectRelease(v7);
  if (!v13)
    return;
  v14 = *(_QWORD *)(v5 + v6);
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v16[4] = a3;
  v16[5] = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100093320;
  v16[3] = a4;
  v15 = _Block_copy(v16);
  objc_msgSend((id)swift_unknownObjectRetain(v14), *a5, v13, v15);
  _Block_release(v15);
  swift_unknownObjectRelease(v13);
  swift_unknownObjectRelease(v14);
}

Swift::Void __swiftcall SharePlayTogetherSession.endSession()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD v3[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v3[4] = CFRange.init(_:);
    v3[5] = 0;
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 1107296256;
    v3[2] = sub_100093320;
    v3[3] = &unk_1004539D0;
    v2 = _Block_copy(v3);
    objc_msgSend((id)swift_unknownObjectRetain(v1), "removeAllParticipantsWithCompletion:", v2);
    _Block_release(v2);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.leave()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  void *v3;
  _QWORD v4[6];

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually) = 1;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (v1)
  {
    v2 = objc_msgSend(v1, "identifier");
    if (!v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    v4[4] = CFRange.init(_:);
    v4[5] = 0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_1000F7EF4;
    v4[3] = &unk_1004539F8;
    v3 = _Block_copy(v4);
    MRGroupSessionLeaveSessionWithIdentifier(v2, v3);
    _Block_release(v3);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SharePlayTogetherSession.cleanup(notifyObservers:)(Swift::Bool notifyObservers)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(char *);
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = v1;
  v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  if (notifyObservers)
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = (uint64_t *)(v4 + 40);
      do
      {
        v8 = (void (*)(char *))*(v6 - 1);
        v7 = *v6;
        v11 = 1;
        swift_retain(v7);
        v8(&v11);
        swift_release(v7);
        v6 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease(v4);
      v3 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
    }
  }
  v9 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v2 + v3) = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers) = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v10);
}

uint64_t SharePlayTogetherSession.addSessionConnectionObserver(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) == 1)
    return a1();
  v6 = swift_allocObject(&unk_100453A30, 32, 7);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v8 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  swift_retain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v8);
  *(_QWORD *)(v2 + v7) = v8;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10003E2C8(0, v8[2] + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_10003E2C8((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8 = (_QWORD *)result;
    *(_QWORD *)(v2 + v7) = result;
  }
  v8[2] = v10 + 1;
  v11 = &v8[2 * v10];
  v11[4] = sub_100009BB0;
  v11[5] = v6;
  return result;
}

uint64_t SharePlayTogetherSession.addSessionEndedObserver(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = swift_allocObject(&unk_100453A58, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers;
  v7 = *(_QWORD **)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers);
  swift_retain(a2);
  result = swift_isUniquelyReferenced_nonNull_native(v7);
  *(_QWORD *)(v2 + v6) = v7;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_10003E648(0, v7[2] + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    result = (uint64_t)sub_10003E648((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    v7 = (_QWORD *)result;
    *(_QWORD *)(v2 + v6) = result;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_1001B89A4;
  v11[5] = v5;
  return result;
}

id SharePlayTogetherSession.assertSessionManagementScreenVisible()()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (result)
    return objc_msgSend(result, "assertSessionManagementScreenVisible");
  __break(1u);
  return result;
}

uint64_t SharePlayTogetherSession.socialProfile(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22[24];

  if (objc_msgSend(a1, "identifierType") == (id)1
    && (v5 = objc_msgSend(a1, "participantIdentifier")) != 0)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

    v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
    swift_beginAccess(v10, v22, 0, 0);
    v11 = *v10;
    if (*(_QWORD *)(v11 + 16))
    {
      swift_bridgeObjectRetain();
      v12 = sub_10009ABAC(v7, v9);
      if ((v13 & 1) != 0)
      {
        v14 = v12;
        v15 = *(_QWORD *)(v11 + 56);
        v16 = type metadata accessor for SocialProfile(0);
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16))(a2, v15 + *(_QWORD *)(v17 + 72) * v14, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a2, 0, 1, v16);
      }
      else
      {
        v21 = type metadata accessor for SocialProfile(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a2, 1, 1, v21);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = type metadata accessor for SocialProfile(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for SocialProfile(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

void *SharePlayTogetherSession.isEquivalent(to:)(uint64_t a1)
{
  uint64_t v1;
  void *result;
  unsigned int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;

  result = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = objc_msgSend(result, "isPlaceholder");
  result = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v4 == objc_msgSend(result, "isPlaceholder"))
  {
    v14 = 0;
  }
  else
  {
    v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                               + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_endpoint), "uniqueIdentifier"));
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    if (v6 == v10 && v8 == v12)
    {
      v14 = 1;
      v12 = v8;
    }
    else
    {
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v10, v12, 0);
    }
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v12);
  }
  return (void *)(v14 & 1);
}

void sub_1001AFF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  size_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint8_t *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char v153[24];
  _QWORD v154[3];
  uint64_t v155[5];

  v0 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v0);
  v138 = (char *)&v130 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100005574(&qword_100495920);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(id *)(v3 + 64);
  v5 = __chkstk_darwin(v2);
  v6 = (char *)&v130 - (((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v137 = (char *)&v130 - v7;
  v8 = sub_100005574(&qword_100495718);
  v9 = __chkstk_darwin(v8);
  v136 = (uint64_t)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v135 = (uint64_t)&v130 - v11;
  v12 = sub_100005574((uint64_t *)&unk_100495778);
  __chkstk_darwin(v12);
  v15 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C910 == -1)
    goto LABEL_2;
LABEL_75:
  swift_once(&qword_10048C910, sub_1001B35A4);
LABEL_2:
  v16 = type metadata accessor for Logger(0, v13);
  v140 = sub_1000086B4(v16, (uint64_t)static Logger.sharePlayTogether);
  v17 = Logger.logObject.getter(v140);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Updating participants", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = swift_allocObject(&unk_100453B20, 24, 7);
  v141 = v20;
  *(_QWORD *)(v20 + 16) = &_swiftEmptySetSingleton;
  v145 = v20 + 16;
  v142 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  v21 = *(void **)&v143[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session];
  if (!v21)
  {
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    swift_release(v155[0]);
    __break(1u);
    return;
  }
  v22 = objc_msgSend(v21, "pendingParticipants");
  v23 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v24 = sub_1000F2C5C(v23);
  swift_bridgeObjectRelease();
  v25 = (unint64_t)sub_1001AD130((uint64_t)v24);
  swift_release(v24);
  if ((v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
  {
    v126 = swift_bridgeObjectRetain();
    v26 = (uint64_t)sub_1000F2B68(v126);
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v155[0] = v26;
  sub_1001B7154(v155);
  v133 = v3;
  v134 = v2;
  swift_bridgeObjectRelease();
  v27 = *(void **)&v143[v142];
  if (!v27)
    goto LABEL_81;
  v28 = v155[0];
  v29 = objc_msgSend(v27, "participants");
  v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v29, &type metadata for AnyHashable, &protocol witness table for AnyHashable);

  v31 = sub_1000F2C5C(v30);
  swift_bridgeObjectRelease();
  v32 = (unint64_t)sub_1001AD130((uint64_t)v31);
  swift_release(v31);
  if ((v32 & 0x8000000000000000) != 0 || (v32 & 0x4000000000000000) != 0)
  {
    v127 = swift_bridgeObjectRetain();
    v33 = (uint64_t)sub_1000F2B68(v127);
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v155[0] = v33;
  sub_1001B7154(v155);
  swift_bridgeObjectRelease();
  v34 = v155[0];
  v132 = v6;
  if (v155[0] < 0 || (v155[0] & 0x4000000000000000) != 0)
  {
    v128 = swift_bridgeObjectRetain();
    v35 = _CocoaArrayWrapper.endIndex.getter(v128);
    swift_release(v34);
  }
  else
  {
    v35 = *(_QWORD *)(v155[0] + 16);
  }
  KeyPath = swift_getKeyPath(&unk_100390B60);
  v37 = swift_getKeyPath(&unk_100390B88);
  v155[0] = v35;
  v38 = v143;
  static Published.subscript.setter(v155, v38, KeyPath, v37);
  v131 = v4;
  if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
  {
    v129 = swift_bridgeObjectRetain();
    v39 = _CocoaArrayWrapper.endIndex.getter(v129);
    swift_release(v28);
  }
  else
  {
    v39 = *(_QWORD *)(v28 + 16);
  }
  v6 = (char *)swift_getKeyPath(&unk_100390BA8);
  v4 = (id)swift_getKeyPath(&unk_100390BD0);
  v155[0] = v39;
  v40 = v38;
  static Published.subscript.setter(v155, v40, v6, v4);
  v155[0] = v28;
  sub_10008ADF0(v34);
  v41 = v155[0];
  v42 = v40;
  v43 = sub_1001B8780(v41, (uint64_t)v42, v141);

  swift_bridgeObjectRelease();
  v44 = swift_getKeyPath(&unk_100390B18);
  v45 = swift_getKeyPath(&unk_100390B40);
  v155[0] = v43;
  v151 = v42;
  static Published.subscript.setter(v155, v151, v44, v45);
  v46 = *(void **)&v143[v142];
  if (!v46)
    goto LABEL_82;
  v47 = objc_msgSend(v46, "members");
  v2 = sub_1000087DC(0, &qword_100495928, MRUserIdentity_ptr);
  v48 = sub_1001B96A0();
  v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v47, v2, v48);

  if ((v3 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v50 = v3;
    else
      v50 = v3 & 0xFFFFFFFFFFFFFF8;
    v51 = __CocoaSet.makeIterator()(v50);
    v49 = Set.Iterator.init(_cocoa:)(v155, v51, v2, v48);
    v3 = v155[0];
    v150 = v155[1];
    v52 = v155[2];
    v53 = v155[3];
    v54 = v155[4];
  }
  else
  {
    v53 = 0;
    v55 = -1 << *(_BYTE *)(v3 + 32);
    v56 = *(_QWORD *)(v3 + 56);
    v150 = v3 + 56;
    v57 = ~v55;
    v58 = -v55;
    if (v58 < 64)
      v59 = ~(-1 << v58);
    else
      v59 = -1;
    v54 = v59 & v56;
    v52 = v57;
  }
  v147 = v3 & 0x7FFFFFFFFFFFFFFFLL;
  v139 = v52;
  v149 = (unint64_t)(v52 + 64) >> 6;
  v60 = &selRef_isEnabled;
  v146 = (char *)&type metadata for Swift.AnyObject + 8;
  v148 = v2;
  v144 = v3;
  if ((v3 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if (v54)
      {
        v6 = (char *)((v54 - 1) & v54);
        v64 = __clz(__rbit64(v54)) | (v53 << 6);
        v63 = v53;
      }
      else
      {
        v65 = v53 + 1;
        if (__OFADD__(v53, 1))
        {
          __break(1u);
          goto LABEL_75;
        }
        if (v65 >= v149)
          goto LABEL_63;
        v66 = *(_QWORD *)(v150 + 8 * v65);
        v63 = v53 + 1;
        if (!v66)
        {
          v63 = v53 + 2;
          if (v53 + 2 >= v149)
            goto LABEL_63;
          v66 = *(_QWORD *)(v150 + 8 * v63);
          if (!v66)
          {
            v63 = v53 + 3;
            if (v53 + 3 >= v149)
              goto LABEL_63;
            v66 = *(_QWORD *)(v150 + 8 * v63);
            if (!v66)
            {
              v63 = v53 + 4;
              if (v53 + 4 >= v149)
                goto LABEL_63;
              v66 = *(_QWORD *)(v150 + 8 * v63);
              if (!v66)
              {
                v67 = v53 + 5;
                while (v149 != v67)
                {
                  v66 = *(_QWORD *)(v150 + 8 * v67++);
                  if (v66)
                  {
                    v63 = v67 - 1;
                    goto LABEL_49;
                  }
                }
                goto LABEL_63;
              }
            }
          }
        }
LABEL_49:
        v6 = (char *)((v66 - 1) & v66);
        v64 = __clz(__rbit64(v66)) + (v63 << 6);
      }
      v4 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v64);
      if (!v4)
        goto LABEL_63;
LABEL_51:
      if (objc_msgSend(v4, v60[449]) == (id)1)
      {
        v68 = objc_msgSend(v4, "identifier");
        v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
        v71 = v70;

        v72 = &v151[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap];
        swift_beginAccess(&v151[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap], v153, 0, 0);
        v73 = *(_QWORD *)v72;
        if (*(_QWORD *)(v73 + 16))
        {
          v74 = v15;
          swift_bridgeObjectRetain();
          v75 = sub_10009ABAC(v69, v71);
          if ((v76 & 1) != 0)
          {
            v77 = v75;
            v78 = *(_QWORD *)(v73 + 56);
            v79 = type metadata accessor for SocialProfile(0);
            v80 = *(_QWORD *)(v79 - 8);
            v81 = v78 + *(_QWORD *)(v80 + 72) * v77;
            v2 = v148;
            v15 = v74;
            (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v74, v81, v79);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v74, 0, 1, v79);
          }
          else
          {
            v79 = type metadata accessor for SocialProfile(0);
            v80 = *(_QWORD *)(v79 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v15, 1, 1, v79);
          }
          swift_bridgeObjectRelease();
          v3 = v144;
        }
        else
        {
          v79 = type metadata accessor for SocialProfile(0);
          v80 = *(_QWORD *)(v79 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v15, 1, 1, v79);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for SocialProfile(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v15, 1, v79) == 1)
        {
          sub_100008758((uint64_t)v15, (uint64_t *)&unk_100495778);
          v82 = objc_msgSend(v4, "identifier");
          v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v85 = v84;

          v86 = MusicItemID.init(_:)(v83, v85);
          v88 = v87;
          swift_beginAccess(v145, v154, 33, 0);
          v2 = v148;
          sub_100133650(&v152, v86, v88);
          swift_endAccess(v154);

          v49 = (_QWORD *)swift_bridgeObjectRelease();
        }
        else
        {

          v49 = (_QWORD *)sub_100008758((uint64_t)v15, (uint64_t *)&unk_100495778);
        }
        v53 = v63;
        v54 = (unint64_t)v6;
        v60 = &selRef_isEnabled;
        if (v3 < 0)
          break;
      }
      else
      {

        v53 = v63;
        v54 = (unint64_t)v6;
        if (v3 < 0)
          break;
      }
    }
  }
  v61 = __CocoaSet.Iterator.next()(v49);
  if (v61)
  {
    v62 = v61;
    v152 = v61;
    swift_unknownObjectRetain(v61);
    swift_dynamicCast(v154, &v152, v146, v2, 7);
    v4 = (id)v154[0];
    swift_unknownObjectRelease(v62);
    v63 = v53;
    v6 = (char *)v54;
    if (v4)
      goto LABEL_51;
  }
LABEL_63:
  sub_1000F38AC(v3);
  v89 = *(void **)&v143[v142];
  if (!v89)
    goto LABEL_83;
  v90 = objc_msgSend(v89, "host");
  if (v90)
  {
    v91 = v90;
    v92 = v135;
    v93 = v151;
    sub_1001B0D74(v90, (uint64_t)v151, v141, v135);
    v94 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v92, 0, 1, v94);
    v95 = swift_getKeyPath(&unk_100390BF0);
    v96 = swift_getKeyPath(&unk_100390C18);
    v97 = v136;
    sub_100014A7C(v92, v136, &qword_100495718);
    static Published.subscript.setter(v97, v93, v95, v96);
    sub_100008758(v92, &qword_100495718);
    swift_unknownObjectRelease(v91);
  }
  v98 = v145;
  swift_beginAccess(v145, v154, 0, 0);
  v99 = *(_QWORD *)(*(_QWORD *)v98 + 16);
  v101 = Logger.logObject.getter(v100);
  v102 = static os_log_type_t.default.getter();
  v103 = os_log_type_enabled(v101, v102);
  if (v99)
  {
    if (v103)
    {
      v104 = swift_slowAlloc(12, -1);
      *(_DWORD *)v104 = 134349056;
      *(_QWORD *)(v104 + 4) = *(_QWORD *)(*(_QWORD *)v145 + 16);
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Fetching %{public}ld profiles", (uint8_t *)v104, 0xCu);
      swift_slowDealloc(v104, -1, -1);
    }

    v105 = swift_getKeyPath(&unk_100390D98);
    v106 = swift_bridgeObjectRetain();
    v107 = sub_1000F2A84(v106);
    swift_bridgeObjectRelease();
    v108 = type metadata accessor for SocialProfile(0);
    v109 = sub_100006924(&qword_100495938, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v110 = sub_100006924(&qword_100495940, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v111 = v137;
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(v105, v107, v108, v109, v110);
    v112 = type metadata accessor for TaskPriority(0);
    v113 = (uint64_t)v138;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v138, 1, 1, v112);
    v114 = v133;
    v115 = v132;
    v116 = v134;
    (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v132, v111, v134);
    type metadata accessor for MainActor(0);
    v117 = v151;
    v118 = static MainActor.shared.getter(v117);
    v119 = *(unsigned __int8 *)(v114 + 80);
    v120 = (v119 + 32) & ~v119;
    v121 = ((unint64_t)v131 + v120 + 7) & 0xFFFFFFFFFFFFFFF8;
    v122 = swift_allocObject(&unk_100453B48, v121 + 8, v119 | 7);
    *(_QWORD *)(v122 + 16) = v118;
    *(_QWORD *)(v122 + 24) = &protocol witness table for MainActor;
    (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v122 + v120, v115, v116);
    *(_QWORD *)(v122 + v121) = v117;
    v123 = sub_1001AD230(v113, (uint64_t)&unk_100495950, v122, (uint64_t)&type metadata for () + 8);
    v124 = swift_release(v123);
    (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v111, v116, v124);
  }
  else
  {
    if (v103)
    {
      v125 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v125 = 0;
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "No pending profiles to fetch", v125, 2u);
      swift_slowDealloc(v125, -1, -1);
    }

  }
  swift_release(v141);
}

uint64_t sub_1001B0D74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char **v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  _BYTE v71[24];
  uint64_t v72;
  char v73[24];

  v64 = a2;
  v67 = a4;
  v66 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v66);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574((uint64_t *)&unk_100495778);
  v9 = __chkstk_darwin(v8);
  v65 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v63 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v63 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v63 - v17;
  v19 = type metadata accessor for SocialProfile(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v68 = v18;
  v69 = v21;
  v70 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v18, 1, 1);
  v22 = &selRef_count;
  v23 = objc_msgSend(a1, "identity");
  if (v23)
  {
    v24 = v23;
    if (objc_msgSend(v23, "type") == (id)1)
    {
      v63 = a3;
      v25 = objc_msgSend(v24, "identifier");
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v29 = (uint64_t *)(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
      v30 = swift_beginAccess(v64 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap, v73, 0, 0);
      v31 = *v29;
      if (*(_QWORD *)(v31 + 16))
      {
        swift_bridgeObjectRetain();
        v32 = sub_10009ABAC(v26, v28);
        if ((v33 & 1) != 0)
        {
          v34 = v70;
          (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v16, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v20 + 72) * v32, v70);
          v35 = v16;
          v36 = 0;
        }
        else
        {
          v35 = v16;
          v36 = 1;
          v34 = v70;
        }
        v69(v35, v36, 1, v34);
        swift_bridgeObjectRelease();
      }
      else
      {
        v34 = v70;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v69)(v16, 1, 1, v70, v30);
      }
      swift_bridgeObjectRelease();
      v37 = (uint64_t)v68;
      sub_100008758((uint64_t)v68, (uint64_t *)&unk_100495778);
      sub_1000149A8((uint64_t)v16, v37, (uint64_t *)&unk_100495778);
      sub_100014A7C(v37, (uint64_t)v13, (uint64_t *)&unk_100495778);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v34) == 1)
      {
        v38 = v63 + 16;
        sub_100008758((uint64_t)v13, (uint64_t *)&unk_100495778);
        v39 = objc_msgSend(v24, "identifier");
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v42 = v41;

        v43 = MusicItemID.init(_:)(v40, v42);
        v45 = v44;
        swift_beginAccess(v38, v71, 33, 0);
        sub_100133650(&v72, v43, v45);
        swift_endAccess(v71);

        swift_bridgeObjectRelease();
        v22 = &selRef_count;
      }
      else
      {

        sub_100008758((uint64_t)v13, (uint64_t *)&unk_100495778);
        v22 = &selRef_count;
      }
    }
    else
    {

    }
  }
  v46 = objc_msgSend(a1, "identifier");
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = objc_msgSend(a1, v22[426]);
  v51 = v50;
  v64 = v49;
  if (!v50)
  {
    v53 = v47;
LABEL_18:
    v55 = 0;
    goto LABEL_19;
  }
  v52 = objc_msgSend(v50, "displayName");

  v53 = v47;
  if (!v52)
  {
    v51 = 0;
    goto LABEL_18;
  }
  v51 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
  v55 = v54;

LABEL_19:
  v56 = objc_msgSend(a1, "isPending");
  v57 = objc_msgSend(a1, "isGuest");
  v58 = (uint64_t)v68;
  v59 = v65;
  sub_100014A7C((uint64_t)v68, v65, (uint64_t *)&unk_100495778);
  v60 = (uint64_t)&v7[*(int *)(v66 + 32)];
  v69((char *)v60, 1, 1, v70);
  v61 = v64;
  *(_QWORD *)v7 = v53;
  *((_QWORD *)v7 + 1) = v61;
  *((_QWORD *)v7 + 2) = v51;
  *((_QWORD *)v7 + 3) = v55;
  v7[32] = v56;
  v7[33] = v57;
  sub_1001B89C0(v59, v60);
  sub_1000648AC((uint64_t)v7, v67, type metadata accessor for SharePlayTogetherSession.Participant);
  return sub_100008758(v58, (uint64_t *)&unk_100495778);
}

uint64_t SharePlayTogetherSession.Participant.init(id:displayName:isPending:isGuest:socialProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;

  v16 = a8 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v17 = type metadata accessor for SocialProfile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 33) = a6;
  return sub_1001B89C0(a7, v16);
}

uint64_t sub_1001B12D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v5[4] = a5;
  v6 = sub_100005574((uint64_t *)&unk_100493720);
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_100495958);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v9 = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[8] = v9;
  v10 = sub_100005574(&qword_100495960);
  v5[9] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[10] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v5[11] = v12;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v13);
  v5[13] = swift_task_alloc(v13);
  v5[14] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v5[15] = v14;
  v5[16] = static MainActor.shared.getter(v14);
  v15 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  v5[17] = v15;
  v16 = sub_100005574(&qword_100495920);
  *v15 = v5;
  v15[1] = sub_1001B1400;
  return MusicCatalogResourceRequest.response()(v9, v16);
}

uint64_t sub_1001B1400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0)
    v6 = sub_1001B176C;
  else
    v6 = sub_1001B1488;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1001B1488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 128));
  MusicCatalogResourceResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = type metadata accessor for Logger(0, v4);
  sub_1000086B4(v9, (uint64_t)static Logger.sharePlayTogether);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v11 = v10(v5, v6, v7);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(_QWORD *)(v0 + 80);
  if (v14)
  {
    v40 = v10;
    v18 = swift_slowAlloc(12, -1);
    *(_DWORD *)v18 = 134349056;
    v19 = sub_1001B9930();
    dispatch thunk of Collection.startIndex.getter(v16);
    dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 24), v16, v19);
    v20 = dispatch thunk of Collection.distance(from:to:)(v0 + 16, v0 + 24, v16, v19);
    v42 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v42(v15, v16);
    *(_QWORD *)(v18 + 4) = v20;
    v10 = v40;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Finished fetching %{public}ld profiles", (uint8_t *)v18, 0xCu);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    v42 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v42(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  }

  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 88);
  v25 = *(_QWORD *)(v0 + 72);
  v39 = *(_QWORD *)(v0 + 104);
  v41 = *(_QWORD *)(v0 + 64);
  v27 = *(void **)(v0 + 32);
  v26 = *(_QWORD *)(v0 + 40);
  v38 = v26;
  v28 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
  v10(v22, v21, v25);
  v29 = v27;
  v30 = static MainActor.shared.getter(v29);
  v31 = *(unsigned __int8 *)(v23 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = (v24 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject(&unk_100453B70, v33 + 8, v31 | 7);
  *(_QWORD *)(v34 + 16) = v30;
  *(_QWORD *)(v34 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v34 + v32, v22, v25);
  *(_QWORD *)(v34 + v33) = v29;
  v35 = sub_1000C66A8(v38, (uint64_t)&unk_100495970, v34);
  v36 = swift_release(v35);
  ((void (*)(uint64_t, uint64_t, __n128))v42)(v21, v25, v36);
  swift_task_dealloc(v21);
  swift_task_dealloc(v39);
  swift_task_dealloc(v22);
  swift_task_dealloc(v41);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B176C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B17E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5[31] = a4;
  v5[32] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_100005574((uint64_t *)&unk_100495778) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[33] = swift_task_alloc(v6);
  v5[34] = swift_task_alloc(v6);
  v5[35] = swift_task_alloc(v6);
  v7 = sub_100005574(&qword_100495718);
  v5[36] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v5[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[38] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[39] = swift_task_alloc(v10);
  v5[40] = swift_task_alloc(v10);
  v11 = sub_100005574(&qword_100495960);
  v5[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[42] = v12;
  v5[43] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SocialProfile(0);
  v5[44] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[45] = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[46] = swift_task_alloc(v15);
  v5[47] = swift_task_alloc(v15);
  v5[48] = swift_task_alloc(v15);
  v16 = sub_100005574(&qword_100495980);
  v5[49] = v16;
  v17 = (*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v17);
  v5[51] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v5[52] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B1998, v19, v20);
}

void sub_1001B1998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  NSString v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  void *v40;
  NSString v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD);
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  char v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, _QWORD);
  void (*v85)(uint64_t);
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(_QWORD *);
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  __n128 v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  void (*v140)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v1 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v4 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 248);
  v7 = *(_QWORD *)(v0 + 256);
  v8 = swift_release(*(_QWORD *)(v0 + 416));
  v140 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16);
  v140(v2, v6, v4, v8);
  v9 = sub_1001B9930();
  dispatch thunk of Collection.startIndex.getter(v4);
  *(_QWORD *)(v2 + *(int *)(v3 + 36)) = *(_QWORD *)(v0 + 240);
  sub_1000149A8(v2, v1, &qword_100495980);
  v10 = (_QWORD *)(v1 + *(int *)(v3 + 36));
  v11 = (_QWORD *)(v7 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_participantProfileMap);
  v12 = *v10;
  v139 = (_QWORD *)(v0 + 232);
  dispatch thunk of Collection.endIndex.getter((_QWORD *)(v0 + 232), v4, v9);
  v142 = v11;
  if (v12 != *(_QWORD *)(v0 + 232))
  {
    v74 = *(_QWORD *)(v0 + 360);
    v136 = *(_QWORD *)(v0 + 336);
    v138 = v0 + 80;
    v134 = v9;
    v135 = v0;
    v133 = v10;
    v154 = v0 + 168;
    do
    {
      v79 = *(_QWORD *)(v0 + 408);
      v80 = *(_QWORD *)(v0 + 384);
      v148 = *(_QWORD *)(v0 + 376);
      v151 = *(_QWORD *)(v0 + 368);
      v144 = *(_QWORD *)(v0 + 352);
      v81 = v74;
      v82 = *(_QWORD *)(v0 + 344);
      v83 = *(_QWORD *)(v0 + 328);
      v84 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v138, v10, v83, v9);
      v85 = *(void (**)(uint64_t))(v81 + 16);
      v85(v80);
      v84(v138, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t))v140)(v82, v79, v83);
      dispatch thunk of Collection.formIndex(after:)(v10, v83, v9);
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v82, v83);
      v86 = v81;
      v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 32);
      v88 = v87(v148, v80, v144);
      v89 = SocialProfile.id.getter(v88);
      v91 = v90;
      v92 = swift_beginAccess(v142, v154, 33, 0);
      ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v85)(v151, v148, v144, v92);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v142);
      v94 = (_QWORD *)*v142;
      *v142 = 0x8000000000000000;
      v96 = sub_10009ABAC(v89, v91);
      v97 = v94[2];
      v98 = (v95 & 1) == 0;
      v99 = v97 + v98;
      if (__OFADD__(v97, v98))
        goto LABEL_61;
      v100 = v95;
      if (v94[3] >= v99)
      {
        v0 = v135;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1001B6E04();
      }
      else
      {
        sub_1001B56FC(v99, isUniquelyReferenced_nonNull_native);
        v101 = sub_10009ABAC(v89, v91);
        v0 = v135;
        if ((v100 & 1) != (v102 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          return;
        }
        v96 = v101;
      }
      v103 = *(_QWORD *)(v0 + 368);
      v104 = *(_QWORD *)(v0 + 352);
      if ((v100 & 1) != 0)
      {
        v74 = v86;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v86 + 40))(v94[7] + *(_QWORD *)(v86 + 72) * v96, v103, v104);
      }
      else
      {
        v94[(v96 >> 6) + 8] |= 1 << v96;
        v105 = (uint64_t *)(v94[6] + 16 * v96);
        *v105 = v89;
        v105[1] = v91;
        v74 = v86;
        v87(v94[7] + *(_QWORD *)(v86 + 72) * v96, v103, v104);
        v106 = v94[2];
        v107 = __OFADD__(v106, 1);
        v108 = v106 + 1;
        if (v107)
          goto LABEL_62;
        v94[2] = v108;
        swift_bridgeObjectRetain();
      }
      v75 = *(_QWORD *)(v0 + 376);
      v76 = *(_QWORD *)(v0 + 352);
      v77 = *(_QWORD *)(v0 + 328);
      *v142 = v94;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess(v154);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v76);
      v10 = v133;
      v9 = v134;
      v78 = *v133;
      dispatch thunk of Collection.endIndex.getter(v139, v77, v134);
    }
    while (v78 != *(_QWORD *)(v0 + 232));
  }
  v13 = *(_QWORD *)(v0 + 256);
  sub_100008758(*(_QWORD *)(v0 + 408), &qword_100495980);
  KeyPath = swift_getKeyPath(&unk_100390B18);
  v15 = swift_getKeyPath(&unk_100390B40);
  static Published.subscript.getter((_QWORD *)(v0 + 216), v13, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 16);
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_35:
    v66 = *(_QWORD *)(v0 + 296);
    v67 = *(_QWORD *)(v0 + 304);
    v68 = *(_QWORD **)(v0 + 288);
    v69 = *(_QWORD *)(v0 + 256);
    v70 = swift_getKeyPath(&unk_100390BF0);
    v71 = swift_getKeyPath(&unk_100390C18);
    static Published.subscript.getter(v68, v69, v70, v71);
    swift_release(v70);
    v72 = swift_release(v71);
    v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v73)(v68, 1, v66, v72) == 1)
    {
      sub_100008758(*(_QWORD *)(v0 + 288), &qword_100495718);
    }
    else
    {
      v109 = *(_QWORD *)(v0 + 296);
      sub_1000648AC(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320), type metadata accessor for SharePlayTogetherSession.Participant);
      v110 = SharePlayTogetherSession.host.modify((_QWORD *)(v0 + 112));
      v112 = v111;
      v113 = v73(v111, 1, v109);
      v114 = *(uint64_t **)(v0 + 320);
      if (!v113)
      {
        v115 = *v114;
        v116 = v114[1];
        v117 = swift_beginAccess(v142, v0 + 192, 0, 0);
        v118 = *v142;
        if (*(_QWORD *)(*v142 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v119 = sub_10009ABAC(v115, v116);
          v120 = *(_QWORD *)(v0 + 352);
          v121 = *(_QWORD *)(v0 + 360);
          v122 = *(_QWORD *)(v0 + 264);
          if ((v123 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v121 + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v118 + 56) + *(_QWORD *)(v121 + 72) * v119, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v122, 0, 1, v120);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v121 + 56))(*(_QWORD *)(v0 + 264), 1, 1, v120);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 360) + 56))(*(_QWORD *)(v0 + 264), 1, 1, *(_QWORD *)(v0 + 352), v117);
        }
        v114 = *(uint64_t **)(v0 + 320);
        sub_1001B89C0(*(_QWORD *)(v0 + 264), v112 + *(int *)(*(_QWORD *)(v0 + 296) + 32));
      }
      ((void (*)(uint64_t, _QWORD))v110)(v0 + 112, 0);
      sub_1001B997C((uint64_t)v114);
    }
    v124 = *(_QWORD *)(v0 + 400);
    v125 = *(_QWORD *)(v0 + 408);
    v127 = *(_QWORD *)(v0 + 376);
    v126 = *(_QWORD *)(v0 + 384);
    v128 = *(_QWORD *)(v0 + 368);
    v129 = *(_QWORD *)(v0 + 344);
    v130 = *(_QWORD *)(v0 + 320);
    v145 = *(_QWORD *)(v0 + 312);
    v146 = *(_QWORD *)(v0 + 288);
    v149 = *(_QWORD *)(v0 + 280);
    v152 = *(_QWORD *)(v0 + 272);
    v155 = *(_QWORD *)(v0 + 264);
    v131 = type metadata accessor for SharePlayTogetherSession(0);
    sub_100006924(&qword_100495988, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
    v132 = ObservableObject<>.objectWillChange.getter(v131);
    ObservableObjectPublisher.send()();
    swift_release(v132);
    swift_task_dealloc(v125);
    swift_task_dealloc(v124);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v149);
    swift_task_dealloc(v152);
    swift_task_dealloc(v155);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v17 = (_QWORD *)(v0 + 224);
  v143 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 312);
  v147 = *(_QWORD *)(v0 + 304);
  v137 = *(_QWORD *)(v0 + 296);
  v153 = *(_QWORD *)(v0 + 256);
  v150 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_beginAccess(v142, v0 + 144, 0, 0);
  v19 = 0;
  v141 = v16;
  while (1)
  {
    v21 = *(_QWORD *)(v0 + 256);
    v22 = swift_getKeyPath(&unk_100390B18);
    v23 = swift_getKeyPath(&unk_100390B40);
    static Published.subscript.getter(v17, v21, v22, v23);
    swift_release(v22);
    swift_release(v23);
    v24 = *(_QWORD *)(v0 + 224);
    if (v19 >= *(_QWORD *)(v24 + 16))
      break;
    v25 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    v26 = *(_QWORD *)(v147 + 72) * v19;
    sub_100082248(v24 + v25 + v26, *(_QWORD *)(v0 + 312), type metadata accessor for SharePlayTogetherSession.Participant);
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      v27 = *(void **)(v153 + v150);
      if (!v27)
        goto LABEL_66;
      swift_unknownObjectRetain(*(_QWORD *)(v153 + v150));
      v28 = String._bridgeToObjectiveC()();
      v29 = objc_msgSend(v27, "pendingParticipantForIdentifier:", v28);

      swift_unknownObjectRelease(v27);
      if (v29)
      {
        v30 = objc_msgSend(v29, "identity");
        swift_unknownObjectRelease(v29);
        if (v30)
        {
          v31 = objc_msgSend(v30, "identifier");

          v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
          v34 = v33;

          v35 = *v142;
          if (*(_QWORD *)(*v142 + 16))
          {
            swift_bridgeObjectRetain();
            v36 = sub_10009ABAC(v32, v34);
            v37 = *(_QWORD *)(v0 + 352);
            v38 = *(_QWORD *)(v0 + 280);
            if ((v39 & 1) != 0)
            {
              (*(void (**)(_QWORD, unint64_t, _QWORD))(v143 + 16))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v35 + 56) + *(_QWORD *)(v143 + 72) * v36, *(_QWORD *)(v0 + 352));
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v38, 0, 1, v37);
            }
            else
            {
              (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v143 + 56))(*(_QWORD *)(v0 + 280), 1, 1, v37);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v143 + 56))(*(_QWORD *)(v0 + 280), 1, 1, *(_QWORD *)(v0 + 352));
          }
          swift_bridgeObjectRelease();
          v61 = *(_QWORD *)(v0 + 256);
          v54 = swift_getKeyPath(&unk_100390B18);
          v55 = swift_getKeyPath(&unk_100390B40);
          v56 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v61, v54, v55);
          v63 = v62;
          v64 = (_QWORD *)*v62;
          v65 = swift_isUniquelyReferenced_nonNull_native(*v62);
          *v63 = v64;
          if ((v65 & 1) == 0)
          {
            v64 = (_QWORD *)sub_1001B7140(v64);
            *v63 = v64;
          }
          if (v19 >= v64[2])
            goto LABEL_64;
          sub_1001B89C0(*(_QWORD *)(v0 + 280), (uint64_t)v64 + v25 + v26 + *(int *)(v137 + 32));
          v20 = v0 + 16;
LABEL_5:
          v56(v20, 0);
          swift_release(v54);
          swift_release(v55);
          v17 = (_QWORD *)(v0 + 224);
          v16 = v141;
          goto LABEL_6;
        }
      }
    }
    v40 = *(void **)(v153 + v150);
    if (!v40)
      goto LABEL_65;
    swift_unknownObjectRetain(*(_QWORD *)(v153 + v150));
    v41 = String._bridgeToObjectiveC()();
    v42 = objc_msgSend(v40, "participantForIdentifier:", v41);

    swift_unknownObjectRelease(v40);
    if (v42)
    {
      v43 = objc_msgSend(v42, "identity");
      swift_unknownObjectRelease(v42);
      if (v43)
      {
        v44 = objc_msgSend(v43, "identifier");

        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v47 = v46;

        v48 = *v142;
        if (*(_QWORD *)(*v142 + 16))
        {
          swift_bridgeObjectRetain();
          v49 = sub_10009ABAC(v45, v47);
          v50 = *(_QWORD *)(v0 + 352);
          v51 = *(_QWORD *)(v0 + 272);
          if ((v52 & 1) != 0)
          {
            (*(void (**)(_QWORD, unint64_t, _QWORD))(v143 + 16))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v48 + 56) + *(_QWORD *)(v143 + 72) * v49, *(_QWORD *)(v0 + 352));
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v143 + 56))(v51, 0, 1, v50);
          }
          else
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v143 + 56))(*(_QWORD *)(v0 + 272), 1, 1, v50);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v143 + 56))(*(_QWORD *)(v0 + 272), 1, 1, *(_QWORD *)(v0 + 352));
        }
        swift_bridgeObjectRelease();
        v53 = *(_QWORD *)(v0 + 256);
        v54 = swift_getKeyPath(&unk_100390B18);
        v55 = swift_getKeyPath(&unk_100390B40);
        v56 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 48, v53, v54, v55);
        v58 = v57;
        v59 = (_QWORD *)*v57;
        v60 = swift_isUniquelyReferenced_nonNull_native(*v57);
        *v58 = v59;
        if ((v60 & 1) == 0)
        {
          v59 = (_QWORD *)sub_1001B7140(v59);
          *v58 = v59;
        }
        if (v19 >= v59[2])
          goto LABEL_63;
        sub_1001B89C0(*(_QWORD *)(v0 + 272), (uint64_t)v59 + v25 + v26 + *(int *)(v137 + 32));
        v20 = v0 + 48;
        goto LABEL_5;
      }
    }
LABEL_6:
    ++v19;
    sub_1001B997C(*(_QWORD *)(v0 + 312));
    if (v16 == v19)
      goto LABEL_35;
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
}

void SharePlayTogetherSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCore.SharePlayTogetherSession", 34, "init()", 6, 0);
  __break(1u);
}

id SharePlayTogetherSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayTogetherSession(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001B2790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SharePlayTogetherSession(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isPending.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t SharePlayTogetherSession.Participant.isGuest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SharePlayTogetherSession.Participant.isGuest.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

CFRange (__swiftcall *SharePlayTogetherSession.Participant.isGuest.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 32), a1, (uint64_t *)&unk_100495778);
}

uint64_t SharePlayTogetherSession.Participant.socialProfile.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  return sub_1001B89C0(a1, v3);
}

CFRange (__swiftcall *SharePlayTogetherSession.Participant.socialProfile.modify())(__C::_NSRange)
{
  type metadata accessor for SharePlayTogetherSession.Participant(0);
  return CFRange.init(_:);
}

double SharePlayTogetherSession.groupSessionDidConnect(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(a1);
  v7 = v1;
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_100453A80, 48, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = a1;
  v9[5] = v7;
  v10 = sub_1000C66A8((uint64_t)v5, (uint64_t)&unk_100495790, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

uint64_t sub_1001B297C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[7] = a4;
  v5[8] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B29E8, v7, v8);
}

uint64_t sub_1001B29E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;

  swift_release(*(_QWORD *)(v0 + 72));
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)static Logger.sharePlayTogether);
  v5 = swift_unknownObjectRetain_n(v2, 2, v4);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 56);
  if (v8)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v28 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = objc_msgSend(v9, "description");
    v13 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v15, &v28);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n(v9, 2);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "groupSessionDidConnect %{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 56), 2);
  }

  v16 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v16 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isConnected) = 1;
  v17 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers;
  v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionConnectionObservers);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v20 = (_QWORD *)(v18 + 40);
    do
    {
      v22 = (void (*)(uint64_t))*(v20 - 1);
      v21 = *v20;
      v23 = swift_retain(*v20);
      v22(v23);
      swift_release(v21);
      v20 += 2;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v16 + v17) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  SharePlayTogetherSession.qrCode.getter((uint64_t *)(v0 + 16));
  sub_1001B9B64(v0 + 16);
  v24 = type metadata accessor for SharePlayTogetherSession(0);
  sub_100006924(&qword_100495988, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v25 = ObservableObject<>.objectWillChange.getter(v24);
  ObservableObjectPublisher.send()();
  v26 = swift_release(v25);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v26);
}

double SharePlayTogetherSession.groupSession(_:didInvalidateWithError:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v8 = v2;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_100453AA8, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a2;
  v10[5] = v8;
  v11 = sub_1000C66A8((uint64_t)v6, (uint64_t)&unk_1004957A0, (uint64_t)v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1001B2E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B2EE4, v7, v8);
}

void sub_1001B2EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  char *v10;
  __int32 **v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int32 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned __int8 v31;
  uint64_t v32;
  void (*v33)(unsigned __int8 *);
  void *v34;
  __int32 *v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;

  swift_release(*(_QWORD *)(v0 + 56));
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(void **)(v0 + 48);
  v4 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v4, (uint64_t)static Logger.sharePlayTogether);
  swift_errorRetain(v2);
  v5 = v3;
  swift_errorRetain(v2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 40);
  v10 = *(char **)(v0 + 48);
  v11 = &off_100495000;
  if (v8)
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    v14 = swift_slowAlloc(32, -1);
    v38 = v14;
    *(_DWORD *)v12 = 138543618;
    swift_errorRetain(v9);
    v15 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v12 + 4) = v15;
    *v13 = v15;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    *(_WORD *)(v12 + 12) = 2082;
    v16 = *(_QWORD *)&v10[OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedObservers];
    swift_bridgeObjectRetain();
    v17 = sub_100005574((uint64_t *)&unk_1004959D8);
    v18 = Array.description.getter(v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = (char *)v18;
    v11 = &off_100495000;
    *(_QWORD *)(v12 + 14) = sub_100019400(v21, v20, &v38);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Session invalidated with error %{public}@. Calling %{public}s observers.", (uint8_t *)v12, 0x16u);
    v22 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v13, 1, v22);
    swift_slowDealloc(v13, -1, -1);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 40));
    swift_errorRelease(v9);

  }
  v23 = *(_QWORD *)(v0 + 48);
  v24 = v11[234];
  v25 = *(_QWORD *)((char *)v24 + v23);
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
LABEL_15:
    *(_QWORD *)((char *)v24 + v23) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v35 = v24;
  v36 = v0;
  v27 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_sessionEndedManually;
  v28 = (_BYTE *)(v23 + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isPersistent);
  v29 = OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_session;
  swift_bridgeObjectRetain();
  swift_beginAccess(v28, v0 + 16, 0, 0);
  v30 = (_QWORD *)(v25 + 40);
  while (1)
  {
    v33 = (void (*)(unsigned __int8 *))*(v30 - 1);
    v32 = *v30;
    if ((*(_BYTE *)(v23 + v27) & 1) == 0 && *v28 != 1)
      break;
    swift_retain(*v30);
    v31 = 1;
LABEL_9:
    v37 = v31;
    v33(&v37);
    swift_release(v32);
    v30 += 2;
    if (!--v26)
    {
      swift_bridgeObjectRelease();
      v24 = v35;
      v0 = v36;
      goto LABEL_15;
    }
  }
  v34 = *(void **)(v23 + v29);
  if (v34)
  {
    swift_retain(*v30);
    v31 = objc_msgSend(v34, "isPlaceholder");
    goto LABEL_9;
  }
  __break(1u);
}

double SharePlayTogetherSession.groupSession(_:didUpdate:)()
{
  return sub_1001B8B24("session:didUpdateParticipants", (uint64_t)&unk_100453C38, (uint64_t)&unk_1004959D0);
}

uint64_t sub_1001B3378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B9BB0, v6, v7);
}

double SharePlayTogetherSession.groupSession(_:didUpdatePendingParticipants:)()
{
  return sub_1001B8B24("session:didUpdatePendingParticipants:", (uint64_t)&unk_100453C10, (uint64_t)&unk_1004959C0);
}

void sub_1001B3448(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  id v12;

  swift_unknownObjectRetain(a3);
  v12 = a1;
  sub_1001B8B24(a5, a6, a7);
  swift_unknownObjectRelease(a3);

}

double SharePlayTogetherSession.groupSession(_:didUpdateMembers:)()
{
  return sub_1001B8B24("session:didUpdateMembers:", (uint64_t)&unk_100453BE8, (uint64_t)&unk_1004959B0);
}

uint64_t sub_1001B34E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B3554, v6, v7);
}

uint64_t sub_1001B3554()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_1001AFF8C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B35A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.sharePlayTogether);
  sub_1000086B4(v2, (uint64_t)static Logger.sharePlayTogether);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000011, 0x80000001003B4B80);
}

id sub_1001B364C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  id result;

  if (a4)
  {
    sub_1000516F8(a2, a3);
    return a4;
  }
  return result;
}

uint64_t static Logger.sharePlayTogether.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.sharePlayTogether);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

void sub_1001B36F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574((uint64_t *)&unk_100490410);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_24;
    }
    if (__OFADD__(v13++, 1))
      goto LABEL_43;
    if (v13 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v13);
    if (!v26)
    {
      v27 = v13 + 1;
      if (v13 + 1 >= v41)
      {
LABEL_34:
        swift_release(v5);
        v3 = v40;
        if ((v43 & 1) == 0)
          goto LABEL_41;
        goto LABEL_37;
      }
      v26 = *(_QWORD *)(v42 + 8 * v27);
      if (!v26)
      {
        while (1)
        {
          v13 = v27 + 1;
          if (__OFADD__(v27, 1))
            break;
          if (v13 >= v41)
            goto LABEL_34;
          v26 = *(_QWORD *)(v42 + 8 * v13);
          ++v27;
          if (v26)
            goto LABEL_23;
        }
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      ++v13;
    }
LABEL_23:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_24:
    v28 = 16 * v23;
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v28);
    v31 = *v29;
    v30 = v29[1];
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v28);
    v34 = *v32;
    v33 = v32[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v44);
    String.hash(into:)(v44, v31, v30);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v17 == v36;
        if (v17 == v36)
          v17 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v31;
    v20[1] = v30;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v34;
    v21[1] = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B39FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574((uint64_t *)&unk_1004921F0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_10009B168((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_10009B414(v25, (uint64_t)&v39);
      sub_10000684C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_10009B168(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B3D10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  _QWORD *v34;
  uint64_t v35[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574((uint64_t *)&unk_100495A20);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v9 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((v33 & 1) == 0)
              {
                swift_release(v5);
                v3 = v32;
                goto LABEL_41;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v13)
                  goto LABEL_34;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v35);
      Hasher._combine(_:)(v21);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v14 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v26);
        }
        while (v30 == -1);
        v15 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1001B3FD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574((uint64_t *)&unk_1004903F0);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v38);
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B42E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t i;
  int v52;
  uint64_t v53;

  v3 = v2;
  v6 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v50 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_1004903D0);
  v52 = a2;
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v12, a1, a2);
  v14 = v13;
  if (*(_QWORD *)(v12 + 16))
  {
    v15 = 1 << *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 64);
    v49 = (_QWORD *)(v12 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v47 = v2;
    v48 = (unint64_t)(v15 + 63) >> 6;
    v19 = v13 + 64;
    swift_retain(v12);
    v20 = 0;
    v21 = v12;
    for (i = v12; ; v21 = i)
    {
      if (v18)
      {
        v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v24 = v23 | (v20 << 6);
      }
      else
      {
        v25 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        if (v25 >= v48)
        {
          swift_release(v21);
          v3 = v47;
          v26 = v49;
          if ((v52 & 1) == 0)
            goto LABEL_41;
LABEL_38:
          v45 = 1 << *(_BYTE *)(i + 32);
          if (v45 >= 64)
            bzero(v26, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v26 = -1 << v45;
          v44 = i;
          *(_QWORD *)(i + 16) = 0;
          goto LABEL_44;
        }
        v26 = v49;
        v27 = v49[v25];
        ++v20;
        if (!v27)
        {
          v20 = v25 + 1;
          if (v25 + 1 >= v48)
            goto LABEL_37;
          v27 = v49[v20];
          if (!v27)
          {
            v28 = v25 + 2;
            if (v28 >= v48)
            {
LABEL_37:
              swift_release(v21);
              v3 = v47;
              if ((v52 & 1) == 0)
              {
LABEL_41:
                v44 = i;
                goto LABEL_44;
              }
              goto LABEL_38;
            }
            v27 = v49[v28];
            if (!v27)
            {
              while (1)
              {
                v20 = v28 + 1;
                if (__OFADD__(v28, 1))
                  break;
                if (v20 >= v48)
                  goto LABEL_37;
                v27 = v49[v20];
                ++v28;
                if (v27)
                  goto LABEL_23;
              }
LABEL_46:
              __break(1u);
              return;
            }
            v20 = v28;
          }
        }
LABEL_23:
        v18 = (v27 - 1) & v27;
        v24 = __clz(__rbit64(v27)) + (v20 << 6);
      }
      v29 = *(_QWORD *)(v9 + 72);
      v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
      if ((v52 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v30, v8);
        v31 = *(_QWORD *)(v21 + 56);
        v32 = *(_QWORD *)(v50 + 72);
        sub_1000648AC(v31 + v32 * v24, v53, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v30, v8);
        v33 = *(_QWORD *)(v21 + 56);
        v32 = *(_QWORD *)(v50 + 72);
        sub_100082248(v33 + v32 * v24, v53, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      }
      v34 = *(_QWORD *)(v14 + 40);
      v35 = sub_100006924(&qword_100494120, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v8, v35);
      v37 = -1 << *(_BYTE *)(v14 + 32);
      v38 = v36 & ~v37;
      v39 = v38 >> 6;
      if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
      {
        v22 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v40 = 0;
        v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v42 = v39 == v41;
          if (v39 == v41)
            v39 = 0;
          v40 |= v42;
          v43 = *(_QWORD *)(v19 + 8 * v39);
        }
        while (v43 == -1);
        v22 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v29 * v22, v11, v8);
      sub_1000648AC(v53, *(_QWORD *)(v14 + 56) + v32 * v22, type metadata accessor for PushNotificationObserver.RegisteredHandler);
      ++*(_QWORD *)(v14 + 16);
    }
  }
  v44 = v12;
LABEL_44:
  swift_release(v44);
  *v3 = v14;
}

void sub_1001B4704(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_100490400);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v18 >= v35)
          goto LABEL_37;
        v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v35)
            goto LABEL_37;
          v19 = v36[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v13 >= v35)
                  goto LABEL_37;
                v19 = v36[v13];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v13 = v20;
          }
        }
LABEL_24:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_10009B168(v24, v38);
      }
      else
      {
        sub_10000684C((uint64_t)v24, (uint64_t)v38);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)(v37);
      String.hash(into:)(v37, v23, v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      sub_10009B168(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B4A00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  Swift::UInt *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::UInt *v21;
  Swift::UInt v22;
  Swift::UInt v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_100495A18);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v9 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v18 >= v36)
          goto LABEL_34;
        v19 = v37[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_34;
          v19 = v37[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_34:
              if ((v35 & 1) == 0)
              {
                swift_release(v5);
                v3 = v34;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v5 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v9 >= v36)
                  goto LABEL_34;
                v19 = v37[v9];
                ++v20;
                if (v19)
                  goto LABEL_24;
              }
            }
            v9 = v20;
          }
        }
LABEL_24:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = (Swift::UInt *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)(v38);
      Hasher._combine(_:)(v23);
      Hasher._combine(_:)(v22);
      v25 = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        v14 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (Swift::UInt *)(*(_QWORD *)(v8 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_1001B4CDC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574(&qword_1004903B0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v3;
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v12)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v5 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_unknownObjectRetain(v33);
    }
    v15 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B4FB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = sub_100005574(&qword_100492D40);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v55 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_100005574((uint64_t *)&unk_100495A08);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v44 = v11;
LABEL_45:
    swift_release(v44);
    *v3 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v49 = v3;
  v50 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v53 = v11;
  swift_retain(v11);
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v22 = v21;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v20 << 6);
      goto LABEL_27;
    }
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v26 >= v50)
    {
      v45 = v53;
      swift_release(v53);
      v3 = v49;
      v27 = v51;
      if ((v48 & 1) != 0)
      {
LABEL_40:
        v46 = 1 << *(_BYTE *)(v45 + 32);
        if (v46 >= 64)
          bzero(v27, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v27 = -1 << v46;
        *(_QWORD *)(v45 + 16) = 0;
      }
LABEL_44:
      v44 = v45;
      goto LABEL_45;
    }
    v27 = v51;
    v28 = v51[v26];
    ++v20;
    if (!v28)
    {
      v20 = v26 + 1;
      if (v26 + 1 >= v50)
        goto LABEL_37;
      v28 = v51[v20];
      if (!v28)
        break;
    }
LABEL_26:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_27:
    v30 = v53;
    v31 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + v22))(v10, *(_QWORD *)(v53 + 48) + v31 * v25, v8);
    v32 = *(_QWORD *)(v30 + 56);
    v33 = *(_QWORD *)(v56 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v56 + v22))(v55, v32 + v33 * v25, v57);
    v34 = *(_QWORD *)(v14 + 40);
    v35 = sub_100006924(&qword_100494120, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v8, v35);
    v37 = -1 << *(_BYTE *)(v14 + 32);
    v38 = v36 & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v39);
      }
      while (v43 == -1);
      v23 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v14 + 48) + v31 * v23, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v56 + 32))(*(_QWORD *)(v14 + 56) + v33 * v23, v55, v57);
    ++*(_QWORD *)(v14 + 16);
  }
  v29 = v26 + 2;
  if (v29 >= v50)
  {
LABEL_37:
    v45 = v53;
    swift_release(v53);
    v3 = v49;
    if ((v48 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v28 = v51[v29];
  if (v28)
  {
    v20 = v29;
    goto LABEL_26;
  }
  while (1)
  {
    v20 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v20 >= v50)
      goto LABEL_37;
    v28 = v51[v20];
    ++v29;
    if (v28)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
}

void sub_1001B53AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45[10];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100005574((uint64_t *)&unk_1004959F8);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v40 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v39 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v39)
          goto LABEL_36;
        v23 = v40[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_36;
          v23 = v40[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_36:
              if ((v41 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v5 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v9 >= v39)
                  goto LABEL_36;
                v23 = v40[v9];
                ++v24;
                if (v23)
                  goto LABEL_33;
              }
            }
            v9 = v24;
          }
        }
LABEL_33:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(_QWORD *)(v5 + 56) + 56 * v21;
      v31 = *(_BYTE *)v30;
      v43 = *(_OWORD *)(v30 + 24);
      v44 = *(_OWORD *)(v30 + 8);
      v42 = *(_OWORD *)(v30 + 40);
      if ((v41 & 1) == 0)
      {
        v32 = (id)v44;
        v33 = *((id *)&v44 + 1);
        v34 = (id)v43;
        v35 = *((id *)&v43 + 1);
        v36 = (id)v42;
        v37 = *((id *)&v42 + 1);
      }
      Hasher.init(_seed:)(v45);
      Hasher._combine(_:)(v29 + 1);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v13 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v13 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      v19 = *(_QWORD *)(v8 + 56) + 56 * v18;
      *(_BYTE *)v19 = v31;
      *(_OWORD *)(v19 + 8) = v44;
      *(_OWORD *)(v19 + 24) = v43;
      *(_OWORD *)(v19 + 40) = v42;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_1001B56FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;
  char *v45;
  uint64_t v46;
  _QWORD v47[9];

  v3 = v2;
  v46 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_100005574(&qword_100490380);
  v44 = a2;
  v9 = static _DictionaryStorage.resize(original:capacity:move:)(v8, a1, a2);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v41 = v3;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  swift_retain(v8);
  v16 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v21 >= v42)
      goto LABEL_36;
    v22 = v43[v21];
    ++v16;
    if (!v22)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v42)
        goto LABEL_36;
      v22 = v43[v16];
      if (!v22)
        break;
    }
LABEL_23:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_24:
    v24 = *(_QWORD *)(v8 + 56);
    v25 = v8;
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v20);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v6 + 72);
    v30 = v24 + v29 * v20;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v45, v30, v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v45, v30, v46);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v47);
    String.hash(into:)(v47, v28, v27);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v17 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17);
    *v18 = v28;
    v18[1] = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v10 + 56) + v29 * v17, v45, v46);
    ++*(_QWORD *)(v10 + 16);
    v8 = v25;
  }
  v23 = v21 + 2;
  if (v23 < v42)
  {
    v22 = v43[v23];
    if (!v22)
    {
      while (1)
      {
        v16 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_43;
        if (v16 >= v42)
          goto LABEL_36;
        v22 = v43[v16];
        ++v23;
        if (v22)
          goto LABEL_23;
      }
    }
    v16 = v23;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v8);
  v3 = v41;
  if ((v44 & 1) != 0)
  {
    v39 = 1 << *(_BYTE *)(v8 + 32);
    if (v39 >= 64)
      bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v43 = -1 << v39;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_41:
  swift_release(v8);
  *v3 = v10;
}

void sub_1001B5A64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_100005574((uint64_t *)&unk_100490410);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    if (!v26)
      break;
LABEL_23:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_1001B5C04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_100005574((uint64_t *)&unk_1004921F0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_10009B414(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_10000684C(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_10009B168(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B5DE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_100005574((uint64_t *)&unk_100495A20);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B5F74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100005574((uint64_t *)&unk_1004903F0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B6128()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for PushNotificationObserver.RegisteredHandler(0);
  v36 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004903D0);
  v30 = v0;
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    swift_release(v5);
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return;
  }
  v8 = v6;
  v9 = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        sub_1000648AC(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for PushNotificationObserver.RegisteredHandler))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_100082248(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for PushNotificationObserver.RegisteredHandler);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    swift_release(v37);
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1001B63F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_100005574(&qword_100490400);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release(v2);
LABEL_28:
    *v1 = v4;
    return;
  }
  v25 = v1;
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_10000684C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_10009B168(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_1001B65D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v1 = v0;
  sub_100005574(&qword_100495A18);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v12 = (v20 - 1) & v20;
    v15 = v22 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B6764()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100005574(&qword_1004903B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    swift_unknownObjectRetain(v18);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B690C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_100005574(&qword_100492D40);
  v37 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_100495A08);
  v33 = v0;
  v3 = *v0;
  v4 = static _DictionaryStorage.copy(original:)(*v0);
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    swift_release(v3);
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return;
  }
  v6 = v4;
  v7 = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    swift_release(v42);
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
}

void sub_1001B6BF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  sub_100005574((uint64_t *)&unk_1004959F8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(v2 + 56) + 56 * v15;
    v17 = *(_BYTE *)v16;
    v28 = *(_OWORD *)(v16 + 8);
    v29 = *(_OWORD *)(v16 + 24);
    v30 = *(_OWORD *)(v16 + 40);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    v18 = *(_QWORD *)(v4 + 56) + 56 * v15;
    *(_BYTE *)v18 = v17;
    *(_OWORD *)(v18 + 8) = v28;
    *(_OWORD *)(v18 + 24) = v29;
    *(_OWORD *)(v18 + 40) = v30;
    v19 = (id)v28;
    v20 = *((id *)&v28 + 1);
    v21 = (id)v29;
    v22 = *((id *)&v29 + 1);
    v23 = (id)v30;
    v24 = *((id *)&v30 + 1);
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1001B6E04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for SocialProfile(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100490380);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release(v4);
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release(v4);
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

char *sub_1001B7060(uint64_t a1)
{
  return sub_100077BD0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001B7074(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1001B7088(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

char *sub_1001B70F0(uint64_t a1)
{
  return sub_10003DE28(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_1001B7104(_QWORD *a1)
{
  return sub_10003E770(0, a1[2], 0, a1);
}

char *sub_1001B7118(uint64_t a1)
{
  return sub_10003E894(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_1001B712C(uint64_t a1)
{
  return sub_10003E9A4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_1001B7140(_QWORD *a1)
{
  return sub_10003EDD0(0, a1[2], 0, a1);
}

uint64_t sub_1001B7154(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1001B7074(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_1001B71CC(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_1001B71CC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Swift::Int v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  _QWORD *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t *v48;
  Swift::Int v49;
  Swift::Int v50;
  uint64_t *v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  void *v55;
  Swift::Int v56;
  uint64_t v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  void *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  Swift::Int v135;
  Swift::Int v136;
  Swift::Int v137;
  uint64_t v138;
  void **v139;
  uint64_t v140;
  int v141;
  Swift::Int v142;
  Swift::Int v143;
  uint64_t v144;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_171;
    if (v3)
      return sub_1001B7BE0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_170;
  v6 = result;
  v129 = a1;
  if (v3 <= 1)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v144 = (uint64_t)_swiftEmptyArrayStorage;
    v139 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_136:
      if (v12 >= 2)
      {
        v122 = *v129;
        do
        {
          v123 = v12 - 2;
          if (v12 < 2)
            goto LABEL_165;
          if (!v122)
            goto LABEL_178;
          v124 = *(_QWORD *)&v9[16 * v123 + 32];
          v125 = *(_QWORD *)&v9[16 * v12 + 24];
          result = sub_1001B7DF0((void **)(v122 + 8 * v124), (void **)(v122 + 8 * *(_QWORD *)&v9[16 * v12 + 16]), v122 + 8 * v125, v139);
          if (v1)
            break;
          if (v125 < v124)
            goto LABEL_166;
          result = swift_isUniquelyReferenced_nonNull_native(v9);
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1001B83D0((uint64_t)v9);
            v9 = (char *)result;
          }
          if (v123 >= *((_QWORD *)v9 + 2))
            goto LABEL_167;
          v126 = &v9[16 * v123 + 32];
          *(_QWORD *)v126 = v124;
          *((_QWORD *)v126 + 1) = v125;
          v127 = *((_QWORD *)v9 + 2);
          if (v12 > v127)
            goto LABEL_168;
          result = (uint64_t)memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v127 - v12));
          *((_QWORD *)v9 + 2) = v127 - 1;
          v12 = v127 - 1;
        }
        while (v127 > 2);
      }
LABEL_147:
      v128 = swift_bridgeObjectRelease();
      *(_QWORD *)((v144 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v128);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_100005574(&qword_100491BE0);
    result = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v139 = (void **)((result & 0xFFFFFFFFFFFFFF8) + 32);
    v144 = result;
  }
  v10 = 0;
  v11 = *a1;
  v131 = *a1 + 16;
  v132 = v6;
  v130 = *a1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v135 = v3;
  v140 = *a1;
  while (2)
  {
    v13 = v10;
    v14 = v10 + 1;
    v137 = v10;
    if (v10 + 1 >= v3)
    {
      v24 = v3;
      goto LABEL_59;
    }
    v133 = v9;
    v15 = v11;
    v16 = *(void **)(v11 + 8 * v14);
    v17 = *(void **)(v15 + 8 * v10);
    swift_unknownObjectRetain(v16);
    swift_unknownObjectRetain(v17);
    v18 = objc_msgSend(v16, "identity");
    if (v18
      && (v19 = v18, v20 = objc_msgSend(v18, "displayName"), v19, v20))
    {
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0xE000000000000000;
    }
    v25 = objc_msgSend(v17, "identity");
    v26 = v25;
    if (v25)
    {
      v27 = objc_msgSend(v25, "displayName");

      if (v27)
      {
        v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        v29 = v28;

        if ((void *)v21 != v26)
          goto LABEL_29;
        goto LABEL_27;
      }
      v26 = 0;
    }
    v29 = 0xE000000000000000;
    if ((void *)v21 != v26)
    {
LABEL_29:
      v141 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v26, v29, 1);
      goto LABEL_30;
    }
LABEL_27:
    if (v23 != v29)
      goto LABEL_29;
    v141 = 0;
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v16);
    result = swift_unknownObjectRelease(v17);
    v14 = v13 + 2;
    v24 = v135;
    if (v13 + 2 >= v135)
      goto LABEL_51;
    v30 = v13;
    v31 = v13 + 2;
    v32 = (_QWORD *)(v131 + 8 * v30);
    while (1)
    {
      v33 = (void *)*(v32 - 1);
      v34 = (void *)*v32;
      swift_unknownObjectRetain(*v32);
      swift_unknownObjectRetain(v33);
      v35 = objc_msgSend(v34, "identity");
      if (!v35)
        goto LABEL_35;
      v36 = v35;
      v37 = objc_msgSend(v35, "displayName");

      if (v37)
      {
        v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v40 = v39;

      }
      else
      {
LABEL_35:
        v38 = 0;
        v40 = 0xE000000000000000;
      }
      v41 = objc_msgSend(v33, "identity");
      if (v41)
      {
        v42 = v41;
        v43 = objc_msgSend(v41, "displayName");

        if (v43)
        {
          v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
          v46 = v45;

        }
        else
        {
          v44 = 0;
          v46 = 0xE000000000000000;
        }
        v24 = v135;
        if (v38 != v44)
          goto LABEL_45;
      }
      else
      {
        v44 = 0;
        v46 = 0xE000000000000000;
        if (v38)
          goto LABEL_45;
      }
      if (v40 == v46)
      {
        v47 = 0;
        goto LABEL_46;
      }
LABEL_45:
      v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v44, v46, 1);
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease(v34);
      result = swift_unknownObjectRelease(v33);
      if (((v141 ^ v47) & 1) != 0)
        break;
      ++v32;
      if (v24 == ++v31)
      {
        v14 = v24;
        goto LABEL_50;
      }
    }
    v14 = v31;
LABEL_50:
    v13 = v137;
LABEL_51:
    v9 = v133;
    v11 = v140;
    if ((v141 & 1) != 0)
    {
      if (v14 < v13)
        goto LABEL_172;
      if (v13 < v14)
      {
        v48 = (uint64_t *)(v130 + 8 * v14);
        v49 = v14;
        v50 = v13;
        v51 = (uint64_t *)(v140 + 8 * v13);
        do
        {
          if (v50 != --v49)
          {
            if (!v140)
              goto LABEL_177;
            v52 = *v51;
            *v51 = *v48;
            *v48 = v52;
          }
          ++v50;
          --v48;
          ++v51;
        }
        while (v50 < v49);
      }
    }
LABEL_59:
    if (v14 >= v24)
      goto LABEL_88;
    if (__OFSUB__(v14, v13))
      goto LABEL_169;
    if (v14 - v13 >= v132)
      goto LABEL_88;
    if (__OFADD__(v13, v132))
      goto LABEL_173;
    if (v13 + v132 >= v24)
      v53 = v24;
    else
      v53 = v13 + v132;
    if (v53 >= v13)
    {
      if (v14 == v53)
        goto LABEL_88;
      v134 = v9;
      v54 = v130 + 8 * v14;
      v136 = v53;
      while (2)
      {
        v142 = v14;
        v55 = *(void **)(v11 + 8 * v14);
        v56 = v13;
        v138 = v54;
        v57 = v54;
        while (2)
        {
          v58 = *(void **)v57;
          swift_unknownObjectRetain(v55);
          swift_unknownObjectRetain(v58);
          v59 = objc_msgSend(v55, "identity");
          if (v59
            && (v60 = v59,
                v61 = objc_msgSend(v59, "displayName"),
                v60,
                v61))
          {
            v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
            v64 = v63;

          }
          else
          {
            v62 = 0;
            v64 = 0xE000000000000000;
          }
          v65 = objc_msgSend(v58, "identity");
          if (!v65
            || (v66 = v65,
                v67 = objc_msgSend(v65, "displayName"),
                v66,
                !v67))
          {
            v68 = 0;
            v70 = 0xE000000000000000;
            if (!v62)
              goto LABEL_82;
            goto LABEL_83;
          }
          v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
          v70 = v69;

          if (v62 != v68)
            goto LABEL_83;
LABEL_82:
          if (v64 != v70)
          {
LABEL_83:
            v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v62, v64, v68, v70, 1);
            swift_unknownObjectRelease(v55);
            swift_unknownObjectRelease(v58);
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            if ((v71 & 1) == 0)
              goto LABEL_70;
            v11 = v140;
            if (!v140)
              goto LABEL_175;
            v72 = *(void **)v57;
            v55 = *(void **)(v57 + 8);
            *(_QWORD *)v57 = v55;
            *(_QWORD *)(v57 + 8) = v72;
            v57 -= 8;
            if (v142 == ++v56)
              goto LABEL_71;
            continue;
          }
          break;
        }
        swift_unknownObjectRelease(v55);
        swift_unknownObjectRelease(v58);
        result = swift_bridgeObjectRelease_n(v64, 2);
LABEL_70:
        v11 = v140;
LABEL_71:
        v14 = v142 + 1;
        v13 = v137;
        v54 = v138 + 8;
        if (v142 + 1 != v136)
          continue;
        break;
      }
      v14 = v136;
      v9 = v134;
LABEL_88:
      if (v14 < v13)
        goto LABEL_164;
      result = swift_isUniquelyReferenced_nonNull_native(v9);
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1001B82D8(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
        v9 = (char *)result;
      }
      v74 = *((_QWORD *)v9 + 2);
      v73 = *((_QWORD *)v9 + 3);
      v12 = v74 + 1;
      v143 = v14;
      if (v74 >= v73 >> 1)
      {
        result = (uint64_t)sub_1001B82D8((char *)(v73 > 1), v74 + 1, 1, v9);
        v9 = (char *)result;
      }
      *((_QWORD *)v9 + 2) = v12;
      v75 = v9 + 32;
      v76 = &v9[16 * v74 + 32];
      *(_QWORD *)v76 = v137;
      *((_QWORD *)v76 + 1) = v143;
      if (v74)
      {
        while (2)
        {
          v77 = v12 - 1;
          if (v12 >= 4)
          {
            v82 = &v75[2 * v12];
            v83 = *(v82 - 8);
            v84 = *(v82 - 7);
            v88 = __OFSUB__(v84, v83);
            v85 = v84 - v83;
            if (v88)
              goto LABEL_153;
            v87 = *(v82 - 6);
            v86 = *(v82 - 5);
            v88 = __OFSUB__(v86, v87);
            v80 = v86 - v87;
            v81 = v88;
            if (v88)
              goto LABEL_154;
            v89 = v12 - 2;
            v90 = &v75[2 * v12 - 4];
            v92 = *v90;
            v91 = v90[1];
            v88 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v88)
              goto LABEL_155;
            v88 = __OFADD__(v80, v93);
            v94 = v80 + v93;
            if (v88)
              goto LABEL_157;
            if (v94 >= v85)
            {
              v112 = &v75[2 * v77];
              v114 = *v112;
              v113 = v112[1];
              v88 = __OFSUB__(v113, v114);
              v115 = v113 - v114;
              if (v88)
                goto LABEL_163;
              v105 = v80 < v115;
            }
            else
            {
LABEL_107:
              if ((v81 & 1) != 0)
                goto LABEL_156;
              v89 = v12 - 2;
              v95 = &v75[2 * v12 - 4];
              v97 = *v95;
              v96 = v95[1];
              v98 = __OFSUB__(v96, v97);
              v99 = v96 - v97;
              v100 = v98;
              if (v98)
                goto LABEL_158;
              v101 = &v75[2 * v77];
              v103 = *v101;
              v102 = v101[1];
              v88 = __OFSUB__(v102, v103);
              v104 = v102 - v103;
              if (v88)
                goto LABEL_160;
              if (__OFADD__(v99, v104))
                goto LABEL_162;
              if (v99 + v104 < v80)
                goto LABEL_119;
              v105 = v80 < v104;
            }
            if (v105)
              v77 = v89;
          }
          else
          {
            if (v12 == 3)
            {
              v79 = *((_QWORD *)v9 + 4);
              v78 = *((_QWORD *)v9 + 5);
              v88 = __OFSUB__(v78, v79);
              v80 = v78 - v79;
              v81 = v88;
              goto LABEL_107;
            }
            v106 = *((_QWORD *)v9 + 4);
            v107 = *((_QWORD *)v9 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
LABEL_119:
            if ((v100 & 1) != 0)
              goto LABEL_159;
            v108 = &v75[2 * v77];
            v110 = *v108;
            v109 = v108[1];
            v88 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v88)
              goto LABEL_161;
            if (v111 < v99)
              goto LABEL_14;
          }
          v116 = v77 - 1;
          if (v77 - 1 >= v12)
          {
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          if (!v11)
            goto LABEL_176;
          v117 = &v75[2 * v116];
          v118 = *v117;
          v119 = &v75[2 * v77];
          v120 = v119[1];
          result = sub_1001B7DF0((void **)(v11 + 8 * *v117), (void **)(v11 + 8 * *v119), v11 + 8 * v120, v139);
          if (v1)
            goto LABEL_147;
          if (v120 < v118)
            goto LABEL_150;
          if (v77 > *((_QWORD *)v9 + 2))
            goto LABEL_151;
          *v117 = v118;
          v75[2 * v116 + 1] = v120;
          v121 = *((_QWORD *)v9 + 2);
          if (v77 >= v121)
            goto LABEL_152;
          v12 = v121 - 1;
          result = (uint64_t)memmove(&v75[2 * v77], v119 + 2, 16 * (v121 - 1 - v77));
          *((_QWORD *)v9 + 2) = v121 - 1;
          if (v121 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v12 = 1;
LABEL_14:
      v3 = v135;
      v10 = v143;
      if (v143 >= v135)
        goto LABEL_136;
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
  return result;
}

uint64_t sub_1001B7BE0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v26 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_6:
    v6 = *(void **)(v26 + 8 * v4);
    v7 = v23;
    v24 = v5;
    v25 = v4;
    while (1)
    {
      v8 = *(void **)v5;
      swift_unknownObjectRetain(v6);
      swift_unknownObjectRetain(v8);
      v9 = objc_msgSend(v6, "identity");
      if (v9
        && (v10 = v9, v11 = objc_msgSend(v9, "displayName"), v10, v11))
      {
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0xE000000000000000;
      }
      v15 = objc_msgSend(v8, "identity");
      v16 = v15;
      if (v15)
      {
        v17 = objc_msgSend(v15, "displayName");

        if (v17)
        {
          v16 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
          v19 = v18;

        }
        else
        {
          v16 = 0;
          v19 = 0xE000000000000000;
        }
        v4 = v25;
        if ((void *)v12 != v16)
          goto LABEL_19;
      }
      else
      {
        v19 = 0xE000000000000000;
        if (v12)
          goto LABEL_19;
      }
      if (v14 == v19)
      {
        swift_unknownObjectRelease(v6);
        swift_unknownObjectRelease(v8);
        result = swift_bridgeObjectRelease_n(v14, 2);
LABEL_5:
        ++v4;
        v5 = v24 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
LABEL_19:
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v19, 1);
      swift_unknownObjectRelease(v6);
      swift_unknownObjectRelease(v8);
      swift_bridgeObjectRelease(v19);
      result = swift_bridgeObjectRelease(v14);
      if ((v20 & 1) == 0)
        goto LABEL_5;
      if (!v26)
      {
        __break(1u);
        return result;
      }
      v21 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v21;
      v5 -= 8;
      if (v4 == ++v7)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_1001B7DF0(void **__dst, void **__src, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  char **v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char **v23;
  id v24;
  void *v25;
  void **v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  void **v32;
  void **v33;
  void **v34;
  void *v35;
  void **v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  void **v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v55;
  void **v57;
  void **v58;
  unint64_t v59;
  void **v60;
  void **v61;
  void **v62;
  void **v63;

  v4 = a4;
  v5 = __src;
  v6 = __dst;
  v7 = (char *)__src - (char *)__dst;
  v8 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v8 = (char *)__src - (char *)__dst;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)__src;
  v11 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v11 = a3 - (_QWORD)__src;
  v12 = v11 >> 3;
  if (v9 >= v11 >> 3)
  {
    if (a4 != __src || &__src[v12] <= a4)
      memmove(a4, __src, 8 * v12);
    v13 = &v4[v12];
    if (v6 >= v5 || v10 < 8)
      goto LABEL_63;
    v34 = (void **)(a3 - 8);
    v55 = v4;
    v61 = v6;
    while (1)
    {
      v59 = (unint64_t)v13;
      v35 = *(v13 - 1);
      v57 = v13 - 1;
      v36 = v5 - 1;
      v37 = *(v5 - 1);
      swift_unknownObjectRetain(v35);
      swift_unknownObjectRetain(v37);
      v38 = objc_msgSend(v35, "identity");
      v63 = v5;
      if (v38
        && (v39 = v38, v40 = objc_msgSend(v38, "displayName"),
                       v39,
                       v40))
      {
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

      }
      else
      {
        v41 = 0;
        v43 = 0xE000000000000000;
      }
      v44 = objc_msgSend(v37, "identity");
      v45 = v44;
      if (!v44)
        goto LABEL_47;
      v46 = objc_msgSend(v44, "displayName");

      if (!v46)
        break;
      v45 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v48 = v47;

      if ((void *)v41 != v45)
        goto LABEL_50;
LABEL_48:
      if (v43 == v48)
      {
        v49 = 0;
        v48 = v43;
        goto LABEL_51;
      }
LABEL_50:
      v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v45, v48, 1);
LABEL_51:
      v50 = v34 + 1;
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v43);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v37);
      if ((v49 & 1) != 0)
      {
        v4 = v55;
        v13 = (void **)v59;
        v51 = (unint64_t)v61;
        if (v50 == v63)
        {
          v5 = v36;
          if (v34 < v63)
            goto LABEL_61;
        }
        else
        {
          v5 = v36;
        }
      }
      else
      {
        v51 = (unint64_t)v61;
        v4 = v55;
        v5 = v63;
        if (v50 == (void **)v59)
        {
          v13 = v57;
          v36 = v57;
          if ((unint64_t)v34 < v59)
            goto LABEL_61;
        }
        else
        {
          v13 = v57;
          v36 = v57;
        }
      }
      *v34 = *v36;
LABEL_61:
      if ((unint64_t)v5 > v51)
      {
        --v34;
        if (v13 > v4)
          continue;
      }
      goto LABEL_63;
    }
    v45 = 0;
LABEL_47:
    v48 = 0xE000000000000000;
    if ((void *)v41 != v45)
      goto LABEL_50;
    goto LABEL_48;
  }
  if (a4 != __dst || &__dst[v9] <= a4)
    memmove(a4, __dst, 8 * v9);
  v13 = &v4[v9];
  if ((unint64_t)v5 < a3 && v7 >= 8)
  {
    v14 = &selRef_count;
    v58 = &v4[v9];
    while (1)
    {
      v60 = v6;
      v62 = v5;
      v15 = *v5;
      v16 = *v4;
      swift_unknownObjectRetain(v15);
      swift_unknownObjectRetain(v16);
      v17 = objc_msgSend(v15, v14[426]);
      if (v17
        && (v18 = v17, v19 = objc_msgSend(v17, "displayName"),
                       v18,
                       v19))
      {
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v22 = v21;

      }
      else
      {
        v20 = 0;
        v22 = 0xE000000000000000;
      }
      v23 = v14;
      v24 = objc_msgSend(v16, v14[426]);
      if (v24)
      {
        v25 = v24;
        v26 = v4;
        v27 = objc_msgSend(v24, "displayName");

        if (v27)
        {
          v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
          v30 = v29;

          if (v20 != v28)
            goto LABEL_24;
          goto LABEL_22;
        }
      }
      else
      {
        v26 = v4;
      }
      v28 = 0;
      v30 = 0xE000000000000000;
      if (v20)
        goto LABEL_24;
LABEL_22:
      if (v22 == v30)
      {
        swift_unknownObjectRelease(v15);
        swift_unknownObjectRelease(v16);
        swift_bridgeObjectRelease_n(v22, 2);
LABEL_27:
        v32 = v26;
        v4 = v26 + 1;
        v33 = v60;
        v5 = v62;
        if (v60 == v26)
          goto LABEL_29;
LABEL_28:
        *v33 = *v32;
        goto LABEL_29;
      }
LABEL_24:
      v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v28, v30, 1);
      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v16);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v22);
      if ((v31 & 1) == 0)
        goto LABEL_27;
      v32 = v62;
      v5 = v62 + 1;
      v33 = v60;
      v4 = v26;
      if (v60 != v62)
        goto LABEL_28;
LABEL_29:
      v6 = v33 + 1;
      v13 = v58;
      if (v4 < v58)
      {
        v14 = v23;
        if ((unint64_t)v5 < a3)
          continue;
      }
      break;
    }
  }
  v5 = v6;
LABEL_63:
  v52 = (char *)v13 - (char *)v4;
  v53 = (char *)v13 - (char *)v4 + 7;
  if (v52 < 0)
    v52 = v53;
  if (v5 != v4 || v5 >= (void **)((char *)v4 + (v52 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v5, v4, 8 * (v52 >> 3));
  return 1;
}

char *sub_1001B82D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100005574(&qword_100495990);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1001B83D0(uint64_t a1)
{
  return sub_1001B82D8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL _s9MusicCore24SharePlayTogetherSessionC11ParticipantV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BOOL8 result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for SocialProfile(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_1004959E8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574((uint64_t *)&unk_100495778);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && v20 == v21
    || (v22 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)a1, v20, *(_QWORD *)a2, v21, 0),
        result = 0,
        (v22 & 1) != 0))
  {
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a2 + 24);
    if (v24)
    {
      if (!v25)
        return 0;
      v26 = *(_QWORD *)(a1 + 16);
      v27 = *(_QWORD *)(a2 + 16);
      if (v26 != v27 || v24 != v25)
      {
        v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v24, v27, v25, 0);
        result = 0;
        if ((v28 & 1) == 0)
          return result;
      }
    }
    else if (v25)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
      || *(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
    {
      return 0;
    }
    v35 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    sub_100014A7C(a1 + *(int *)(v35 + 32), (uint64_t)v19, (uint64_t *)&unk_100495778);
    sub_100014A7C(a2 + *(int *)(v35 + 32), (uint64_t)v17, (uint64_t *)&unk_100495778);
    v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_100014A7C((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_100495778);
    sub_100014A7C((uint64_t)v17, v29, (uint64_t *)&unk_100495778);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v30((uint64_t)v10, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v17, (uint64_t *)&unk_100495778);
      sub_100008758((uint64_t)v19, (uint64_t *)&unk_100495778);
      if (v30(v29, 1, v4) == 1)
      {
        sub_100008758((uint64_t)v10, (uint64_t *)&unk_100495778);
        return 1;
      }
      goto LABEL_18;
    }
    sub_100014A7C((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_100495778);
    if (v30(v29, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v17, (uint64_t *)&unk_100495778);
      sub_100008758((uint64_t)v19, (uint64_t *)&unk_100495778);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_18:
      sub_100008758((uint64_t)v10, &qword_1004959E8);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v29, v4);
    v31 = sub_100006924(&qword_1004959F0, (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile, (uint64_t)&protocol conformance descriptor for SocialProfile);
    v32 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v4, v31);
    v33 = *(void (**)(char *, uint64_t))(v5 + 8);
    v33(v7, v4);
    sub_100008758((uint64_t)v17, (uint64_t *)&unk_100495778);
    sub_100008758((uint64_t)v19, (uint64_t *)&unk_100495778);
    v33(v14, v4);
    sub_100008758((uint64_t)v10, (uint64_t *)&unk_100495778);
    return (v32 & 1) != 0;
  }
  return result;
}

size_t sub_1001B8780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v4 = v3;
  v19 = a2;
  v20 = a3;
  v6 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = _swiftEmptyArrayStorage;
  if (!v10)
    return (size_t)v11;
  v21 = _swiftEmptyArrayStorage;
  result = sub_1000773DC(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000) == 0)
  {
    v18[1] = v4;
    v13 = 0;
    v11 = v21;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      }
      else
      {
        v14 = *(void **)(a1 + 8 * v13 + 32);
        swift_unknownObjectRetain(v14);
      }
      sub_1001B0D74(v14, v19, v20, (uint64_t)v9);
      swift_unknownObjectRelease(v14);
      v21 = v11;
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_1000773DC(v15 > 1, v16 + 1, 1);
        v11 = v21;
      }
      ++v13;
      v11[2] = v16 + 1;
      sub_1000648AC((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, type metadata accessor for SharePlayTogetherSession.Participant);
    }
    while (v10 != v13);
    return (size_t)v11;
  }
  __break(1u);
  return result;
}

void sub_1001B8934(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a4)
  {
    sub_1000067E8(a2, a3);

  }
}

uint64_t sub_1001B8968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001B8978(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001B8980()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B89A4(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1000FA3D4(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t type metadata accessor for SharePlayTogetherSession.Participant(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100495860, (uint64_t)&nominal type descriptor for SharePlayTogetherSession.Participant);
}

uint64_t sub_1001B89C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_100495778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SharePlayTogetherSession(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004957D8, (uint64_t)&nominal type descriptor for SharePlayTogetherSession);
}

uint64_t sub_1001B8A1C()
{
  return sub_1001B963C((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001B8A28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10049578C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001B297C(a1, v4, v5, v7, v6);
}

uint64_t sub_1001B8AA0()
{
  return sub_1001B963C((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1001B8AAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_10049579C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001B2E78(a1, v4, v5, v7, v6);
}

double sub_1001B8B24(const char *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  uint64_t v23;

  v7 = v3;
  v8 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C910 != -1)
    swift_once(&qword_10048C910, sub_1001B35A4);
  v12 = type metadata accessor for Logger(0, v9);
  v13 = sub_1000086B4(v12, (uint64_t)static Logger.sharePlayTogether);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, a1, v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
  type metadata accessor for MainActor(0);
  v18 = v7;
  v19 = static MainActor.shared.getter(v18);
  v20 = (_QWORD *)swift_allocObject(a2, 40, 7);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v18;
  v21 = sub_1000C66A8((uint64_t)v11, a3, (uint64_t)v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_1001B8CBC()
{
  return type metadata accessor for SharePlayTogetherSession(0);
}

void sub_1001B8CC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  const char *v21;

  v10[0] = "\b";
  v10[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[2] = &unk_100390D28;
  v10[3] = &unk_100390D40;
  v10[4] = (char *)&value witness table for Builtin.Int8 + 64;
  sub_1001B8E28(319, &qword_1004957E8, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001833F4(319, (unint64_t *)&unk_1004957F0, &qword_1004956D8);
    if (v5 <= 0x3F)
    {
      v10[6] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001B8E28(319, (unint64_t *)&unk_100495C80, (uint64_t)&type metadata for Int);
      if (v7 <= 0x3F)
      {
        v11 = *(_QWORD *)(v6 - 8) + 64;
        v12 = v11;
        sub_1001833F4(319, &qword_100495800, &qword_100495718);
        if (v9 <= 0x3F)
        {
          v13 = *(_QWORD *)(v8 - 8) + 64;
          v14 = &unk_100390D58;
          v15 = &unk_100390D28;
          v16 = &unk_100390D28;
          v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v19 = (char *)&value witness table for Builtin.BridgeObject + 64;
          v20 = &unk_100390D28;
          v21 = "\b";
          swift_updateClassMetadata2(a1, 256, 18, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_1001B8E28(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = type metadata accessor for Published(0, a3);
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v14);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 32);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v10 = type metadata accessor for SocialProfile(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = sub_100005574((uint64_t *)&unk_100495778);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for SocialProfile(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = sub_100005574((uint64_t *)&unk_100495778);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for SocialProfile(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100005574((uint64_t *)&unk_100495778);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for SocialProfile(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100005574((uint64_t *)&unk_100495778);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v8 = *(int *)(a3 + 32);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for SocialProfile(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100005574((uint64_t *)&unk_100495778);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B9444);
}

uint64_t sub_1001B9444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574((uint64_t *)&unk_100495778);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SharePlayTogetherSession.Participant(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B94D0);
}

uint64_t sub_1001B94D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574((uint64_t *)&unk_100495778);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1001B9548(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100390D40;
  v4[1] = &unk_100390D80;
  v4[2] = &unk_100390D28;
  v4[3] = &unk_100390D28;
  sub_1001B95D0(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_1001B95D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100495870)
  {
    v2 = type metadata accessor for SocialProfile(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100495870);
  }
}

uint64_t sub_1001B9624()
{
  return sub_1001B963C((void (*)(_QWORD))&_swift_errorRelease);
}

uint64_t sub_1001B9630()
{
  return sub_1001B963C((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001B963C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 32));

  return swift_deallocObject(v1, 48, 7);
}

uint64_t sub_1001B967C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001B96A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100495930;
  if (!qword_100495930)
  {
    v1 = sub_1000087DC(255, &qword_100495928, MRUserIdentity_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100495930);
  }
  return result;
}

uint64_t sub_1001B96F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000ABC8(a1, v3);
  result = dispatch thunk of SocialProfileFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001B973C()
{
  return sub_1001B97FC(&qword_100495920);
}

uint64_t sub_1001B9748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100005574(&qword_100495920) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_10049594C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000EA88;
  return sub_1001B12D4(a1, v6, v7, v8, v9);
}

uint64_t sub_1001B97F0()
{
  return sub_1001B97FC(&qword_100495960);
}

uint64_t sub_1001B97FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = sub_100005574(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_1001B9888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_100005574(&qword_100495960) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_10049596C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000F894;
  return sub_1001B17E8(a1, v6, v7, v8, v9);
}

unint64_t sub_1001B9930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100495978;
  if (!qword_100495978)
  {
    v1 = sub_100005600(&qword_100495960);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100495978);
  }
  return result;
}

uint64_t sub_1001B997C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B99B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001B99DC(uint64_t a1)
{
  uint64_t v1;

  sub_1001AF550(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001B99EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004959AC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000EA88;
  return sub_1001B34E8(a1, v4, v5, v6);
}

uint64_t sub_1001B9A5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004959BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1001B3378(a1, v4, v5, v6);
}

uint64_t sub_1001B9ACC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B9AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004959CC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1001B3378(a1, v4, v5, v6);
}

uint64_t sub_1001B9B64(uint64_t a1)
{
  sub_1001B8934(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

void sub_1001B9BC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_100006924(&qword_100491608, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_1000F38AC(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_1001B9E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t j;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a4;
  v45 = a3;
  v46 = a2;
  v5 = type metadata accessor for UUID(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Participant(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v41 = (char *)&v37 - v13;
  v14 = *(_QWORD *)(a1 + 56);
  v39 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v40 = (unint64_t)(v15 + 63) >> 6;
  v44 = a1;
  result = swift_bridgeObjectRetain();
  j = 0;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v20 | (j << 6); ; i = __clz(__rbit64(v23)) + (j << 6))
  {
    v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v41, *(_QWORD *)(v44 + 48) + *(_QWORD *)(v9 + 72) * i, v8);
    v26 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 32);
    v27 = v26(v12, v25, v8);
    v28 = Participant.id.getter(v27);
    v29 = UUID.uuidString.getter(v28);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
    if (v29 == v46 && v31 == v45)
    {
      v33 = v45;
      swift_release(v44);
      swift_bridgeObjectRelease(v33);
LABEL_27:
      v35 = v38;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v26)(v38, v12, v8, v34);
      v36 = 0;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v35, v36, 1, v8);
      return swift_bridgeObjectRelease(v45);
    }
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v31, v46, v45, 0);
    swift_bridgeObjectRelease(v31);
    if ((v32 & 1) != 0)
    {
      v34 = swift_release(v44);
      goto LABEL_27;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v22 = j + 1;
    if (__OFADD__(j, 1))
      break;
    if (v22 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * v22);
    ++j;
    if (v23)
      goto LABEL_19;
    j = v22 + 1;
    if (v22 + 1 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 2;
    if (v22 + 2 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    j = v22 + 3;
    if (v22 + 3 >= v40)
      goto LABEL_28;
    v23 = *(_QWORD *)(v39 + 8 * j);
    if (v23)
      goto LABEL_19;
    v24 = v22 + 4;
    if (v24 >= v40)
    {
LABEL_28:
      swift_release(v44);
      v36 = 1;
      v35 = v38;
      goto LABEL_29;
    }
    v23 = *(_QWORD *)(v39 + 8 * v24);
    for (j = v24; !v23; ++v24)
    {
      j = v24 + 1;
      if (__OFADD__(v24, 1))
        goto LABEL_31;
      if (j >= v40)
        goto LABEL_28;
      v23 = *(_QWORD *)(v39 + 8 * j);
    }
LABEL_19:
    v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t GroupActivitiesManager.initiateSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_100005574((uint64_t *)&unk_100493720);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[6] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[7] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[8] = swift_task_alloc(v7);
  v2[9] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivitiesManager.PrepareResult(0);
  v2[10] = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v9);
  v2[12] = swift_task_alloc(v9);
  v2[13] = swift_task_alloc(v9);
  v2[14] = swift_task_alloc(v9);
  v10 = swift_task_alloc(v9);
  v2[15] = v10;
  v11 = type metadata accessor for MainActor(0);
  v2[16] = v11;
  v2[17] = static MainActor.shared.getter(v11);
  v12 = (_QWORD *)swift_task_alloc(dword_100495A7C);
  v2[18] = v12;
  *v12 = v2;
  v12[1] = sub_1001BA2DC;
  return sub_1001C3568(v10);
}

uint64_t sub_1001BA2DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001BA34C, v2, v3);
}

uint64_t sub_1001BA34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;

  swift_release(*(_QWORD *)(v0 + 136));
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v4, (uint64_t)static Logger.groupActivities);
  v5 = sub_100082248(v3, v2, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 112);
  if (v8)
  {
    v10 = *(_QWORD *)(v0 + 104);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v49 = v13;
    *(_DWORD *)v12 = 136446210;
    sub_100082248(v9, v10, type metadata accessor for GroupActivitiesManager.PrepareResult);
    v14 = (char *)String.init<A>(describing:)(v10, v11);
    v16 = v15;
    *(_QWORD *)(v12 + 4) = sub_100019400(v14, v15, &v49);
    swift_bridgeObjectRelease(v16);
    sub_100006798(v9, type metadata accessor for GroupActivitiesManager.PrepareResult);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "prepareForActivation result=%{public}s", (uint8_t *)v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    sub_100006798(*(_QWORD *)(v0 + 112), type metadata accessor for GroupActivitiesManager.PrepareResult);
  }

  v17 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  sub_100082248(*(_QWORD *)(v0 + 120), v17, type metadata accessor for GroupActivitiesManager.PrepareResult);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 4, v18))
  {
    v21 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 88);
    v23 = *(_QWORD *)(v0 + 40);
    sub_100006798(*(_QWORD *)(v0 + 96), type metadata accessor for GroupActivitiesManager.PrepareResult);
    sub_100082248(v21, v22, type metadata accessor for GroupActivitiesManager.PrepareResult);
    if ((v20(v22, 4, v23) | 2) == 3)
    {
      v24 = 0;
    }
    else
    {
      sub_100006798(*(_QWORD *)(v0 + 88), type metadata accessor for GroupActivitiesManager.PrepareResult);
      v24 = 1;
    }
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 48);
    v48 = *(_QWORD *)(v0 + 56);
    v29 = *(_QWORD *)(v0 + 24);
    v28 = *(_QWORD *)(v0 + 32);
    v30 = *(void **)(v0 + 16);
    sub_1000648AC(*(_QWORD *)(v0 + 96), v25, type metadata accessor for GroupActivitiesManager.Activity);
    sub_1001C3D30();
    v31 = type metadata accessor for TaskPriority(0);
    v24 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v28, 1, 1, v31);
    sub_100082248(v25, v26, type metadata accessor for GroupActivitiesManager.Activity);
    v32 = v30;
    v33 = swift_retain(v29);
    v34 = static MainActor.shared.getter(v33);
    v35 = *(unsigned __int8 *)(v27 + 80);
    v36 = (v35 + 48) & ~v35;
    v37 = (_QWORD *)swift_allocObject(&unk_100453CC0, v36 + v48, v35 | 7);
    v37[2] = v34;
    v37[3] = &protocol witness table for MainActor;
    v37[4] = v30;
    v37[5] = v29;
    sub_1000648AC(v26, (uint64_t)v37 + v36, type metadata accessor for GroupActivitiesManager.Activity);
    v38 = sub_1000C66A8(v28, (uint64_t)&unk_100495A88, (uint64_t)v37);
    swift_release(v38);
    sub_100006798(v25, type metadata accessor for GroupActivitiesManager.Activity);
  }
  v40 = *(_QWORD *)(v0 + 112);
  v39 = *(_QWORD *)(v0 + 120);
  v42 = *(_QWORD *)(v0 + 96);
  v41 = *(_QWORD *)(v0 + 104);
  v43 = *(_QWORD *)(v0 + 88);
  v45 = *(_QWORD *)(v0 + 64);
  v44 = *(_QWORD *)(v0 + 72);
  v46 = *(_QWORD *)(v0 + 32);
  sub_100006798(v39, type metadata accessor for GroupActivitiesManager.PrepareResult);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100495E18, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity);
}

uint64_t type metadata accessor for GroupActivitiesManager.PrepareResult(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100496180, (uint64_t)&nominal type descriptor for GroupActivitiesManager.PrepareResult);
}

uint64_t GroupActivitiesManager.leave(performLeaveCommand:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 88) = v1;
  *(_BYTE *)(v2 + 176) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 96) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 104) = v4;
  *(_QWORD *)(v2 + 112) = v5;
  return swift_task_switch(sub_1001BA7A8, v4, v5);
}

uint64_t sub_1001BA7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  int v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v2 + 120) = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(unsigned __int8 *)(v2 + 176);
    v8 = swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67240192;
    *(_DWORD *)(v8 + 4) = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "👋🏻 Leaving session. Will perform leaveCommand=%{BOOL,public}d", (uint8_t *)v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(unsigned __int8 *)(v2 + 176);

  if (v9 == 1)
  {
    v10 = *(_QWORD **)(v2 + 88);
    v11 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *(_QWORD *)(v2 + 128) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
    *((_BYTE *)v10 + v11) = 1;
    swift_beginAccess(v10 + 2, v2 + 56, 0, 0);
    v12 = v10[5];
    v13 = v10[6];
    sub_10000ABC8(v10 + 2, v12);
    v14 = *(_QWORD *)(v12 - 8);
    v15 = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_QWORD *)(v2 + 136) = v15;
    (*(void (**)(void))(v14 + 16))();
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
    *(_QWORD *)(v2 + 144) = v16;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v12);
    if (v16)
    {
      *(_QWORD *)(v2 + 40) = &type metadata for Player.LeaveSessionCommand;
      *(_QWORD *)(v2 + 48) = &protocol witness table for Player.LeaveSessionCommand;
      v17 = objc_msgSend((id)objc_opt_self(MPAVRoutingController), "systemRoute");
      *(_QWORD *)(v2 + 152) = v17;
      v18 = (_QWORD *)swift_task_alloc(dword_1004930DC);
      *(_QWORD *)(v2 + 160) = v18;
      *v18 = v2;
      v18[1] = sub_1001BAB28;
      return PlaybackController.perform(_:options:route:intent:)(v2 + 16, 0x10000, (uint64_t)v17, 0);
    }
    swift_release(*(_QWORD *)(v2 + 96));
    swift_task_dealloc(v15);
    *(_BYTE *)(*(_QWORD *)(v2 + 88) + *(_QWORD *)(v2 + 128)) = 0;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 96));
  }
  v20 = *(_QWORD *)(v2 + 88);
  v21 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v22)
  {
    swift_retain(*(_QWORD *)(v20 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v22);
    v23 = *(_QWORD *)(v20 + v21);
  }
  else
  {
    v23 = 0;
  }
  v24 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v20 + v21) = 0;
  swift_release(v23);
  sub_1001C6084();
  v26 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v27)
  {
    v28 = swift_retain(*(_QWORD *)(v24 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Leave completed, pending session found", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = *(_QWORD *)(v20 + v21);
    *(_QWORD *)(v20 + v21) = v27;
    swift_retain_n(v27, 2);
    swift_release(v32);
    sub_1001C6084();
    swift_release_n(v27, 2);
    v33 = *(_QWORD *)(v24 + v26);
    *(_QWORD *)(v24 + v26) = 0;
    v25 = swift_release(v33);
  }
  return (*(uint64_t (**)(__n128))(v2 + 8))(v25);
}

uint64_t sub_1001BAB28(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  void *v10;
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = *(void **)(v4 + 144);

    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_1001BAD40;
  }
  else
  {
    v10 = *(void **)(v4 + 144);
    v11 = *(_QWORD *)(v4 + 136);

    sub_10000682C((_QWORD *)(v4 + 16));
    swift_task_dealloc(v11);
    v7 = *(_QWORD *)(v4 + 104);
    v8 = *(_QWORD *)(v4 + 112);
    v9 = sub_1001BABD4;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_1001BABD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 96));
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v1 = *(_QWORD *)(v0 + 88);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v3);
    v4 = *(_QWORD *)(v1 + v2);
  }
  else
  {
    v4 = 0;
  }
  v5 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v1 + v2) = 0;
  swift_release(v4);
  sub_1001C6084();
  v7 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v8)
  {
    v9 = swift_retain(*(_QWORD *)(v5 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Leave completed, pending session found", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v13 = *(_QWORD *)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v8;
    swift_retain_n(v8, 2);
    swift_release(v13);
    sub_1001C6084();
    swift_release_n(v8, 2);
    v14 = *(_QWORD *)(v5 + v7);
    *(_QWORD *)(v5 + v7) = 0;
    v6 = swift_release(v14);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_1001BAD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 96));
  sub_10000682C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = ((uint64_t (*)(void))static os_log_type_t.default.getter)();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 168);
    v7 = swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v29 = v8;
    *(_DWORD *)v7 = 136446210;
    *(_QWORD *)(v0 + 80) = v6;
    swift_errorRetain(v6);
    v9 = sub_100005574((uint64_t *)&unk_1004911F0);
    v10 = (char *)String.init<A>(describing:)(v0 + 80, v9);
    v12 = v11;
    *(_QWORD *)(v7 + 4) = sub_100019400(v10, v11, &v29);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform leaveCommand with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v6);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 168);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

  }
  *(_BYTE *)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 128)) = 0;
  v14 = *(_QWORD *)(v0 + 88);
  v15 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v16)
  {
    swift_retain(*(_QWORD *)(v14 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
    GroupSession.leave()();
    swift_release(v16);
    v17 = *(_QWORD *)(v14 + v15);
  }
  else
  {
    v17 = 0;
  }
  v18 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v14 + v15) = 0;
  swift_release(v17);
  sub_1001C6084();
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v21 = *(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession);
  if (v21)
  {
    v22 = swift_retain(*(_QWORD *)(v18 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.default.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Leave completed, pending session found", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

    v26 = *(_QWORD *)(v14 + v15);
    *(_QWORD *)(v14 + v15) = v21;
    swift_retain_n(v21, 2);
    swift_release(v26);
    sub_1001C6084();
    swift_release_n(v21, 2);
    v27 = *(_QWORD *)(v18 + v20);
    *(_QWORD *)(v18 + v20) = 0;
    v19 = swift_release(v27);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v19);
}

void GroupActivitiesManager.postEvent(_:participantID:)(uint64_t a1, char *a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  Swift::String v53;
  char *v54;
  char *v55;
  Swift::Bool v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  int v81;
  id v82;
  uint64_t v83;
  char *v84;
  char *v85;
  id v86;
  char *v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int8x16_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  _QWORD *v126;
  uint64_t v127;
  id v128;
  id v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (*v151)(char *, char *, uint64_t);
  char *v152;
  uint64_t v153;
  NSObject *v154;
  char *v155;
  os_log_type_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  void (*v163)(char *, uint64_t);
  __n128 v164;
  __n128 v165;
  void (*v166)(char *, uint64_t, __n128);
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  id v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD v201[7];
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  _BYTE v209[32];
  uint64_t v210[4];
  void *v211;
  uint64_t v212;
  int8x16_t v213;
  int8x16_t v214;
  char v215;
  uint64_t v216[4];
  uint64_t v217[2];
  id v218[2];
  uint64_t v219[6];
  char v220;
  _BYTE v221[40];

  v4 = v3;
  v192 = a3;
  v195 = a2;
  v197 = a1;
  sub_10016D138(a1, (uint64_t)v201);
  v180 = (id)v201[0];
  v177 = v201[2];
  v178 = v201[1];
  v176 = v201[3];
  v5 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v5);
  v181 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GroupSessionEvent(0);
  v182 = *(_QWORD *)(v7 - 8);
  v183 = v7;
  v8 = __chkstk_darwin(v7);
  v179 = (char *)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v184 = (char *)&v167 - v11;
  __chkstk_darwin(v10);
  v186 = (char *)&v167 - v12;
  v13 = type metadata accessor for GroupSessionEvent.Action.QueueChange.Item(0);
  v170 = *(_QWORD *)(v13 - 8);
  v171 = v13;
  __chkstk_darwin(v13);
  v169 = (char *)&v167 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for GroupSessionEvent.Action.QueueChange(0);
  v173 = *(_QWORD *)(v15 - 8);
  v174 = v15;
  __chkstk_darwin(v15);
  v172 = (char *)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = type metadata accessor for GroupSessionEvent.Action(0);
  v189 = *(_QWORD *)(v187 - 8);
  v17 = __chkstk_darwin(v187);
  v185 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v190 = (char *)&v167 - v19;
  v20 = sub_100005574(&qword_100495AB0);
  __chkstk_darwin(v20);
  v191 = (uint64_t)&v167 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for Participant(0);
  v194 = *(_QWORD *)(v196 - 8);
  v22 = __chkstk_darwin(v196);
  v188 = (char *)&v167 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v193 = (char *)&v167 - v24;
  v25 = sub_100005574(&qword_100495AB8);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v167 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v31 = (char *)&v167 - v30;
  v175 = v3 + 7;
  swift_beginAccess(v3 + 7, &v200, 1, 0);
  v32 = v3[7];
  v33 = v3[8];
  v34 = v3[9];
  v35 = v3[10];
  *(_OWORD *)(v3 + 7) = xmmword_100384A50;
  v3[9] = 0;
  v3[10] = 0;
  sub_10016D24C(v32, v33, v34, v35);
  v36 = v3 + 2;
  swift_beginAccess(v36, &v199, 0, 0);
  v37 = v4[5];
  v38 = v4[6];
  v39 = sub_10000ABC8(v36, v37);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v39);
  v42 = (char *)&v167 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v42);
  v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 64))(v37, v38);
  v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v45 = v197;
  v44(v42, v37);
  v46 = objc_msgSend(v43, "applicationState");

  sub_10016D138(v45, (uint64_t)v219);
  if (v220 == 4)
  {
    sub_1000149A8((uint64_t)v219, (uint64_t)v221, &qword_100495AD8);
    if (v46)
      return;
  }
  else if (!v220)
  {
    sub_1001CDDF8(v219, (uint64_t)v221);
    if (v46)
      return;
  }
  v47 = *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v47)
    return;
  v48 = swift_retain(*(_QWORD *)((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
  GroupSession.state.getter(v48);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v29, enum case for GroupSession.State.joined<A>(_:), v25);
  v49 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v50 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v168 = v49;
  LOBYTE(v49) = static GroupSession.State.== infix(_:_:)(v31, v29, v49, v50);
  v51 = *(void (**)(char *, uint64_t))(v26 + 8);
  v51(v29, v25);
  v51(v31, v25);
  if ((v49 & 1) == 0)
  {
    v77 = v47;
LABEL_17:
    swift_release(v77);
    return;
  }
  v52 = v47;
  v53._countAndFlagsBits = 0x616C506572616853;
  v53._object = (void *)0xEC0000003D444979;
  v54 = v195;
  v55 = v192;
  v56 = String.hasPrefix(_:)(v53);
  v57 = swift_bridgeObjectRetain();
  v58 = (uint64_t)v55;
  if (v56)
  {
    v59 = sub_1001CCE68(0xC0007uLL, (uint64_t)v195, (unint64_t)v55);
    v61 = v60;
    v63 = v62;
    v65 = v64;
    swift_bridgeObjectRelease();
    v54 = (char *)static String._fromSubstring(_:)(v59, v61, v63, v65);
    v58 = v66;
    v57 = swift_bridgeObjectRelease();
  }
  v67 = GroupSession.activeParticipants.getter(v57);
  swift_bridgeObjectRetain();
  v68 = v191;
  sub_1001B9E64(v67, (uint64_t)v54, v58, v191);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v69 = v194;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48))(v68, 1, v196) == 1)
  {
    sub_100008758(v68, &qword_100495AB0);
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v71 = type metadata accessor for Logger(0, v70);
    sub_1000086B4(v71, (uint64_t)static Logger.groupActivities);
    v72 = swift_bridgeObjectRetain_n(v55, 2);
    v73 = Logger.logObject.getter(v72);
    v74 = static os_log_type_t.error.getter(v73);
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc(12, -1);
      v76 = swift_slowAlloc(32, -1);
      v211 = (void *)v76;
      *(_DWORD *)v75 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v75 + 4) = sub_100019400(v195, v55, (uint64_t *)&v211);
      swift_bridgeObjectRelease_n(v55, 3);
      _os_log_impl((void *)&_mh_execute_header, v73, v74, "No active participant with identifier=%{public}s", (uint8_t *)v75, 0xCu);
      swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v76, -1, -1);
      swift_slowDealloc(v75, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v55, 2);
    }
    v77 = v47;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v193, v68, v196);
  v78 = sub_10016D138(v45, (uint64_t)&v211);
  v80 = v211;
  switch(v215)
  {
    case 0:
      v81 = v212;
      v82 = v180;
      if (v81 == 1)
      {
        v83 = SharedListening.Event.Content.title.getter(v80, 1);
        v84 = v169;
        static GroupSessionEvent.Action.QueueChange.Item.container(_:)(v83);
      }
      else
      {
        v115 = SharedListening.Event.Content.title.getter(v80, 0);
        v84 = v169;
        static GroupSessionEvent.Action.QueueChange.Item.song(_:)(v115);
      }
      swift_bridgeObjectRelease();
      v116 = v172;
      static GroupSessionEvent.Action.QueueChange.added(_:)(v84);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v84, v171);
      v85 = v190;
      static GroupSessionEvent.Action.updatedQueue(_:)(v116);
      sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v116, v174);
      goto LABEL_46;
    case 1:
      v85 = v190;
      static GroupSessionEvent.Action.react(with:)(v213.i64[0], v213.i64[1]);
      goto LABEL_46;
    case 2:
      v85 = v190;
      static GroupSessionEvent.Action.skip(item:)(v211, v212);
      goto LABEL_46;
    case 3:
      sub_1001CDDF8((uint64_t *)&v211, (uint64_t)v217);
      v86 = v180;
      static GroupSessionEvent.Action.start.getter();
      v87 = (char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
      v88 = swift_beginAccess((char *)v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v216, 0, 0);
      if (!(*(unsigned int (**)(char *, uint64_t, __n128))(*(_QWORD *)(v168 - 8) + 48))(v87, 1, v88))
      {
        v127 = *((_QWORD *)v87 + 7);
        if (v127)
        {
          v128 = objc_msgSend(*(id *)(v127 + 16), "identifiers");
          sub_1001CDDF8(v217, (uint64_t)v218);
          v129 = objc_msgSend(v218[0], "identifiers");
          v130 = objc_msgSend(v128, "intersectsSet:", v129);

          if (v130)
          {
            sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
            v131 = v187;
            v85 = v190;
            goto LABEL_47;
          }
        }
      }
      if (qword_10048C958 != -1)
        swift_once(&qword_10048C958, sub_1001CCD54);
      v90 = type metadata accessor for Logger(0, v89);
      sub_1000086B4(v90, (uint64_t)static Logger.groupActivities);
      v91 = v86;
      v92 = Logger.logObject.getter(v91);
      v93 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = swift_slowAlloc(12, -1);
        v191 = swift_slowAlloc(32, -1);
        v210[0] = v191;
        *(_DWORD *)v94 = 136446210;
        sub_1001CDDF8(v217, (uint64_t)&v202);
        v95 = (void *)v202;
        v96 = v91;
        v97 = objc_msgSend(v95, "description");
        v98 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
        v99 = v52;
        v101 = v100;

        v102 = v197;
        sub_1001CDDBC(v197, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        v103 = (char *)v98;
        v55 = v192;
        *(_QWORD *)(v94 + 4) = sub_100019400(v103, v101, v210);
        v52 = v99;
        v69 = v194;
        swift_bridgeObjectRelease();
        sub_1001CDDBC(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        sub_1001CDDBC(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "Dispatching event for=%{public}s", (uint8_t *)v94, 0xCu);
        v104 = v191;
        swift_arrayDestroy(v191, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v104, -1, -1);
        swift_slowDealloc(v94, -1, -1);
      }
      else
      {
        v102 = v197;
        sub_1001CDDBC(v197, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        sub_1001CDDBC(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
      }

      v117 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
      v125 = (void *)static OS_dispatch_queue.main.getter(v117, v118, v119, v120, v121, v122, v123, v124);
      v126 = (_QWORD *)swift_allocObject(&unk_100453CE8, 96, 7);
      v126[2] = v4;
      sub_10016D138(v102, (uint64_t)(v126 + 3));
      v126[10] = v195;
      v126[11] = v55;
      swift_bridgeObjectRetain();
      sub_1001CDDBC(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CDCF8);
      swift_retain(v4);
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_1001CDE74, (uint64_t)v126, 1.0);
      swift_release(v52);

      swift_release(v126);
      sub_1001CDDBC(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v190, v187);
      goto LABEL_68;
    case 4:
      v105 = sub_1000149A8((uint64_t)&v211, (uint64_t)v216, &qword_100495AD8);
      v106 = v45;
      v107 = v190;
      static GroupSessionEvent.Action.updatedQueue.getter(v105);
      v108 = v4[7];
      v109 = v4[8];
      v111 = v4[9];
      v110 = v4[10];
      sub_1000149A8((uint64_t)v216, (uint64_t)v175, &qword_100495AD8);
      sub_1001CDD88((uint64_t)v180, v178);
      v112 = v110;
      v85 = v107;
      v45 = v106;
      sub_10016D24C(v108, v109, v111, v112);
      goto LABEL_46;
    case 5:
      v113 = vorrq_s8(v213, v214);
      v114 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v113.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v113, v113, 8uLL)) | v212;
      if (v211 == (void *)1 && !v114)
      {
        v85 = v190;
        static GroupSessionEvent.Action.seek.getter(v78);
LABEL_46:
        v131 = v187;
LABEL_47:
        v133 = v181;
        v132 = v182;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v188, v193, v196);
        v134 = v185;
        (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v185, v85, v131);
        sub_10016D138(v45, (uint64_t)&v202);
        if (v208 == 4)
        {
          sub_1000149A8((uint64_t)&v202, (uint64_t)v209, &qword_100495AD8);
          v134 = v185;
          sub_1000149A8((uint64_t)v209, (uint64_t)v210, &qword_100495AD8);
          v135 = v183;
          v136 = v186;
          if (v210[1] != 1)
          {
            v139 = 0xD000000000000026;
            v138 = 0x80000001003B4BE0;
            goto LABEL_60;
          }
        }
        else
        {
          v135 = v183;
          v136 = v186;
          if (v208 == 5
            && (!(v206 | v207 | v202 | v205 | v204 | v203) || v202 == 2 && !(v206 | v207 | v205 | v204 | v203)))
          {
            v137 = type metadata accessor for URL(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v133, 1, 1, v137);
LABEL_61:
            GroupSessionEvent.init(originator:action:url:)(v188, v134, v133);
            v197 = v52;
            GroupSession.showNotice(_:)(v136);
            if (qword_10048C958 != -1)
              swift_once(&qword_10048C958, sub_1001CCD54);
            v149 = type metadata accessor for Logger(0, v148);
            sub_1000086B4(v149, (uint64_t)static Logger.groupActivities);
            v150 = v132;
            v151 = *(uint64_t (**)(char *, char *, uint64_t))(v132 + 16);
            v152 = v184;
            v153 = v151(v184, v136, v135);
            v154 = Logger.logObject.getter(v153);
            v155 = v136;
            v156 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v154, v156))
            {
              v157 = swift_slowAlloc(12, -1);
              v158 = v135;
              v159 = swift_slowAlloc(32, -1);
              v198 = v159;
              *(_DWORD *)v157 = 136446210;
              v160 = v179;
              v151(v179, v152, v158);
              v161 = (char *)String.init<A>(describing:)(v160, v158);
              *(_QWORD *)(v157 + 4) = sub_100019400(v161, v162, &v198);
              swift_bridgeObjectRelease();
              v163 = *(void (**)(char *, uint64_t))(v150 + 8);
              v163(v152, v158);
              _os_log_impl((void *)&_mh_execute_header, v154, v156, "Posting event=%{public}s", (uint8_t *)v157, 0xCu);
              swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v159, -1, -1);
              swift_slowDealloc(v157, -1, -1);

              v164 = swift_release(v197);
              ((void (*)(char *, uint64_t, __n128))v163)(v186, v158, v164);
              (*(void (**)(char *, uint64_t))(v189 + 8))(v190, v187);
            }
            else
            {

              v165 = swift_release(v197);
              v166 = *(void (**)(char *, uint64_t, __n128))(v150 + 8);
              v166(v152, v135, v165);
              ((void (*)(char *, uint64_t))v166)(v155, v135);
              (*(void (**)(char *, uint64_t))(v189 + 8))(v190, v131);
            }
            (*(void (**)(char *, uint64_t))(v194 + 8))(v193, v196);
            return;
          }
        }
        v138 = 0x80000001003B4BC0;
        v139 = 0xD000000000000017;
LABEL_60:
        URL.init(string:)(v139, v138);
        goto LABEL_61;
      }
      if (v211 == (void *)3 && !v114)
      {
        v85 = v190;
        static GroupSessionEvent.Action.pause.getter(v78);
        goto LABEL_46;
      }
      if (v211 == (void *)4 && !v114)
      {
        v85 = v190;
        static GroupSessionEvent.Action.play.getter(v78);
        goto LABEL_46;
      }
LABEL_55:
      if (qword_10048C958 != -1)
        swift_once(&qword_10048C958, sub_1001CCD54);
      v140 = type metadata accessor for Logger(0, v79);
      sub_1000086B4(v140, (uint64_t)static Logger.groupActivities);
      sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CDCF8);
      v141 = sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CDCF8);
      v142 = Logger.logObject.getter(v141);
      v143 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v142, v143))
      {
        v144 = swift_slowAlloc(12, -1);
        v145 = swift_slowAlloc(32, -1);
        v216[0] = v145;
        *(_DWORD *)v144 = 136446210;
        sub_10016D138(v45, (uint64_t)&v202);
        sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001CDCF8);
        v146 = (char *)String.init<A>(describing:)(&v202, &type metadata for SharedListening.Event);
        *(_QWORD *)(v144 + 4) = sub_100019400(v146, v147, v216);
        swift_bridgeObjectRelease();
        sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        _os_log_impl((void *)&_mh_execute_header, v142, v143, "Event case not handle for event=%{public}s", (uint8_t *)v144, 0xCu);
        swift_arrayDestroy(v145, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v145, -1, -1);
        swift_slowDealloc(v144, -1, -1);

        swift_release(v47);
      }
      else
      {

        swift_release(v47);
        sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
        sub_1001CDDBC(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10016D1C0);
      }
LABEL_68:
      (*(void (**)(char *, uint64_t))(v69 + 8))(v193, v196);
      break;
    default:
      goto LABEL_55;
  }
}

int64x2_t GroupActivitiesManager.Activity.Metadata.init()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t result;

  v2 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 32) = 0;
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)(a1 + *(int *)(v2 + 32)) = result;
  return result;
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 28), a1, &qword_10048D510);
}

uint64_t GroupActivitiesManager.Activity.Metadata.URL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 28), &qword_10048D510);
}

CFRange (__swiftcall *GroupActivitiesManager.Activity.Metadata.URL.modify())(__C::_NSRange)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return CFRange.init(_:);
}

double GroupActivitiesManager.Activity.Metadata.artworkSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for GroupActivitiesManager.Activity.Metadata(0) + 32));
}

uint64_t GroupActivitiesManager.Activity.Metadata.artworkSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = (double *)(v2 + *(int *)(result + 32));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

CFRange (__swiftcall *GroupActivitiesManager.Activity.Metadata.artworkSize.modify())(__C::_NSRange)
{
  type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  return CFRange.init(_:);
}

uint64_t GroupActivitiesManager.Activity.Metadata.init(modelObject:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2[16] = a1;
  v2[17] = a2;
  v3 = type metadata accessor for Locale(0);
  v2[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v2[19] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[20] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[21] = swift_task_alloc(v6);
  v2[22] = swift_task_alloc(v6);
  return swift_task_switch(sub_1001BC3C4, 0, 0);
}

uint64_t sub_1001BC3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  NSString v63;
  NSString v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t *v92;
  id v93;
  uint64_t v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  double *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t *v156;
  uint64_t v157;
  void *v158;
  id v159;
  id v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  void *v177;
  id v178;
  uint64_t v179;
  double *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  uint64_t *v193;
  Swift::Int v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  void *v198;
  Swift::String v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  double *v216;
  uint64_t v217;
  double *v218;
  uint64_t v219;
  double *v220;
  _QWORD *v221;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_QWORD *)(v2 + 32) = 0;
  v4 = v2 + *(int *)(v3 + 28);
  v5 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (double *)(v2 + *(int *)(v3 + 32));
  *(int64x2_t *)v6 = vdupq_n_s64(0x4072C00000000000uLL);
  objc_opt_self(MPModelAlbum);
  v7 = swift_dynamicCastObjCClass(v1);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = v8;
    v11 = objc_msgSend(v9, "title");
    v221 = (_QWORD *)v2;
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {
      v26 = *(_QWORD *)(v0 + 168);
      v25 = *(_QWORD *)(v0 + 176);
      v27 = *(_QWORD *)(v0 + 152);
      v28 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006D75626C41);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v29 = *(_QWORD *)(v0 + 168);
      v30 = *(_QWORD *)(v0 + 176);
      v31 = *(_QWORD *)(v0 + 152);
      v32 = *(_QWORD *)(v0 + 160);
      v33 = *(_QWORD *)(v0 + 144);
      v34 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v13 = String.init(localized:table:bundle:locale:comment:)(v29, 0, 0, v34, v33, 0, 0, 256);
      v15 = v35;
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    v36 = objc_msgSend(v9, "artist");
    if (v36 && (v37 = v36, v38 = objc_msgSend(v36, "name"), v37, v38))
    {
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

    }
    else
    {
      v215 = v15;
      v42 = v13;
      v43 = v6;
      v45 = *(_QWORD *)(v0 + 168);
      v44 = *(_QWORD *)(v0 + 176);
      v46 = *(_QWORD *)(v0 + 152);
      v47 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v44, v46);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v48 = *(_QWORD *)(v0 + 168);
      v49 = *(_QWORD *)(v0 + 176);
      v51 = *(_QWORD *)(v0 + 152);
      v50 = *(_QWORD *)(v0 + 160);
      v52 = *(_QWORD *)(v0 + 144);
      v53 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v39 = String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v53, v52, 0, 0, 256);
      v41 = v54;
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      v6 = v43;
      v13 = v42;
      v15 = v215;
    }
    v56 = *(uint64_t **)(v0 + 128);
    v55 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v9, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v56 = v13;
    v221[1] = v15;
    swift_bridgeObjectRelease();
    v221[2] = v39;
    v221[3] = v41;
    if (v57)
      goto LABEL_17;
    goto LABEL_42;
  }
  objc_opt_self(MPModelPlaylist);
  v16 = swift_dynamicCastObjCClass(v8);
  v17 = *(void **)(v0 + 136);
  if (v16)
  {
    v18 = (void *)v16;
    v19 = v17;
    v20 = objc_msgSend(v18, "name");
    if (v20)
    {
      v21 = v20;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v24 = v23;

    }
    else
    {
      v216 = v6;
      v76 = *(_QWORD *)(v0 + 168);
      v75 = *(_QWORD *)(v0 + 176);
      v77 = *(_QWORD *)(v0 + 152);
      v78 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001003B0520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v75, v77);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v79 = *(_QWORD *)(v0 + 168);
      v80 = *(_QWORD *)(v0 + 176);
      v81 = *(_QWORD *)(v0 + 152);
      v82 = *(_QWORD *)(v0 + 160);
      v83 = *(_QWORD *)(v0 + 144);
      v84 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v22 = String.init(localized:table:bundle:locale:comment:)(v79, 0, 0, v84, v83, 0, 0, 256);
      v24 = v85;
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
      v6 = v216;
    }
    v86 = objc_msgSend(v18, "curator");
    v87 = v86;
    if (v86)
    {
      v88 = objc_msgSend(v86, "name");

      if (v88)
      {
        v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
        v90 = v89;

LABEL_29:
        v92 = *(uint64_t **)(v0 + 128);
        v91 = *(void **)(v0 + 136);
        v93 = MPModelPlaylist.preferredArtworkCatalog.getter();
LABEL_40:
        v57 = v93;

        swift_bridgeObjectRelease();
        *v92 = v22;
        *(_QWORD *)(v2 + 8) = v24;
        goto LABEL_41;
      }
      v87 = 0;
    }
    v90 = 0;
    goto LABEL_29;
  }
  objc_opt_self(MPModelRadioStation);
  v68 = swift_dynamicCastObjCClass(v17);
  v69 = *(void **)(v0 + 136);
  if (v68)
  {
    v70 = (void *)v68;
    v71 = v69;
    v72 = objc_msgSend(v70, "name");
    if (v72)
    {
      v73 = v72;
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v24 = v74;

    }
    else
    {
      v104 = *(_QWORD *)(v0 + 168);
      v103 = *(_QWORD *)(v0 + 176);
      v105 = *(_QWORD *)(v0 + 152);
      v106 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEF6E6F6974617453);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v104, v103, v105);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v107 = *(_QWORD *)(v0 + 168);
      v108 = *(_QWORD *)(v0 + 176);
      v109 = *(_QWORD *)(v0 + 152);
      v110 = *(_QWORD *)(v0 + 160);
      v111 = *(_QWORD *)(v0 + 144);
      v112 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v22 = String.init(localized:table:bundle:locale:comment:)(v107, 0, 0, v112, v111, 0, 0, 256);
      v24 = v113;
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v109);
    }
    v114 = objc_msgSend(v70, "providerName");
    if (v114)
    {
      v115 = v114;
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v114);
      v90 = v116;

    }
    else
    {
      v87 = 0;
      v90 = 0;
    }
    v92 = *(uint64_t **)(v0 + 128);
    v91 = *(void **)(v0 + 136);
    v93 = objc_msgSend(v70, "artworkCatalog");
    goto LABEL_40;
  }
  objc_opt_self(MPModelSong);
  v94 = swift_dynamicCastObjCClass(v69);
  v95 = *(void **)(v0 + 136);
  if (v94)
  {
    v96 = (void *)v94;
    v97 = v95;
    v98 = objc_msgSend(v96, "title");
    if (v98)
    {
      v99 = v98;
      v100 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
      v102 = v101;

    }
    else
    {
      v128 = *(_QWORD *)(v0 + 168);
      v127 = *(_QWORD *)(v0 + 176);
      v129 = *(_QWORD *)(v0 + 152);
      v130 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v128, v127, v129);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v131 = *(_QWORD *)(v0 + 168);
      v132 = *(_QWORD *)(v0 + 176);
      v133 = *(_QWORD *)(v0 + 152);
      v134 = *(_QWORD *)(v0 + 160);
      v135 = *(_QWORD *)(v0 + 144);
      v136 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v100 = String.init(localized:table:bundle:locale:comment:)(v131, 0, 0, v136, v135, 0, 0, 256);
      v137 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v102 = v138;
      v137(v132, v133);
    }
    v139 = objc_msgSend(v96, "artist");
    if (v139
      && (v140 = v139, v141 = objc_msgSend(v139, "name"), v140, v141))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
      v90 = v142;

    }
    else
    {
      v214 = v102;
      v217 = v100;
      v143 = v6;
      v145 = *(_QWORD *)(v0 + 168);
      v144 = *(_QWORD *)(v0 + 176);
      v146 = *(_QWORD *)(v0 + 152);
      v147 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x6E776F6E6B6E55, 0xE700000000000000);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v145, v144, v146);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v148 = *(_QWORD *)(v0 + 168);
      v149 = *(_QWORD *)(v0 + 176);
      v151 = *(_QWORD *)(v0 + 152);
      v150 = *(_QWORD *)(v0 + 160);
      v152 = *(_QWORD *)(v0 + 144);
      v153 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v148, 0, 0, v153, v152, 0, 0, 256);
      v90 = v154;
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v151);
      v6 = v143;
      v102 = v214;
      v100 = v217;
    }
    v156 = *(uint64_t **)(v0 + 128);
    v155 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v96, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v156 = v100;
    *(_QWORD *)(v2 + 8) = v102;
    goto LABEL_41;
  }
  objc_opt_self(MPModelTVEpisode);
  v119 = swift_dynamicCastObjCClass(v95);
  v120 = *(void **)(v0 + 136);
  if (v119)
  {
    v121 = (void *)v119;
    v122 = v120;
    v123 = objc_msgSend(v121, "title");
    if (v123)
    {
      v124 = v123;
      v125 = static String._unconditionallyBridgeFromObjectiveC(_:)(v123);
      v213 = v126;

    }
    else
    {
      v218 = v6;
      v166 = *(_QWORD *)(v0 + 168);
      v165 = *(_QWORD *)(v0 + 176);
      v167 = *(_QWORD *)(v0 + 152);
      v168 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16))(v166, v165, v167);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v169 = *(_QWORD *)(v0 + 168);
      v170 = *(_QWORD *)(v0 + 176);
      v171 = *(_QWORD *)(v0 + 152);
      v172 = *(_QWORD *)(v0 + 160);
      v173 = *(_QWORD *)(v0 + 144);
      v174 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v125 = String.init(localized:table:bundle:locale:comment:)(v169, 0, 0, v174, v173, 0, 0, 256);
      v213 = v175;
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v170, v171);
      v6 = v218;
    }
    v176 = objc_msgSend(v121, "show");
    if (v176
      && (v177 = v176, v178 = objc_msgSend(v176, "title"), v177, v178))
    {
      v87 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v178);
      v90 = v179;

    }
    else
    {
      v219 = v125;
      v180 = v6;
      v182 = *(_QWORD *)(v0 + 168);
      v181 = *(_QWORD *)(v0 + 176);
      v183 = *(_QWORD *)(v0 + 152);
      v184 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xEC000000776F6853);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16))(v182, v181, v183);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v185 = *(_QWORD *)(v0 + 168);
      v186 = *(_QWORD *)(v0 + 176);
      v188 = *(_QWORD *)(v0 + 152);
      v187 = *(_QWORD *)(v0 + 160);
      v189 = *(_QWORD *)(v0 + 144);
      v190 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v87 = (void *)String.init(localized:table:bundle:locale:comment:)(v185, 0, 0, v190, v189, 0, 0, 256);
      v90 = v191;
      (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v186, v188);
      v6 = v180;
      v125 = v219;
    }
    v193 = *(uint64_t **)(v0 + 128);
    v192 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v121, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v193 = v125;
    *(_QWORD *)(v2 + 8) = v213;
LABEL_41:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v87;
    *(_QWORD *)(v2 + 24) = v90;
    if (v57)
    {
LABEL_17:
      v58 = v0 + 16;
      *(_QWORD *)(v0 + 184) = v57;
      v59 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
      v60 = swift_allocObject(v59, 32, 7);
      *(_QWORD *)(v0 + 192) = v60;
      *(_QWORD *)(v60 + 16) = 0xD00000000000001ELL;
      *(_QWORD *)(v60 + 24) = 0x80000001003ACF90;
      v61 = v57;
      v62 = (void *)objc_opt_self(MPArtworkCatalog);
      v63 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v63, v60);

      swift_bridgeObjectRetain();
      v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v61, "setCacheIdentifier:forCacheReference:", v64, v60);

      objc_msgSend(v61, "setFittingSize:", *v6, v6[1]);
      objc_msgSend(v61, "setDestinationScale:", 0.0);
      *(_QWORD *)(v0 + 56) = v0 + 120;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1001BD340;
      v65 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v66 = (_QWORD *)(v0 + 80);
      v66[1] = 0x40000000;
      v66[2] = sub_1000E5810;
      v66[3] = &unk_100453D00;
      v66[4] = v65;
      objc_msgSend(v61, "requestImageWithCompletion:", v66);
      return swift_continuation_await(v58);
    }
    goto LABEL_42;
  }
  objc_opt_self(MPModelMovie);
  v157 = swift_dynamicCastObjCClass(v120);
  if (v157)
  {
    v158 = (void *)v157;
    v159 = *(id *)(v0 + 136);
    v160 = objc_msgSend(v158, "title");
    if (v160)
    {
      v161 = v160;
      v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
      v164 = v163;

    }
    else
    {
      v220 = v6;
      v201 = *(_QWORD *)(v0 + 168);
      v200 = *(_QWORD *)(v0 + 176);
      v202 = *(_QWORD *)(v0 + 152);
      v203 = *(_QWORD *)(v0 + 160);
      String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED00006569766F4DLL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v203 + 16))(v201, v200, v202);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v204 = *(_QWORD *)(v0 + 168);
      v205 = *(_QWORD *)(v0 + 176);
      v206 = *(_QWORD *)(v0 + 152);
      v207 = *(_QWORD *)(v0 + 160);
      v208 = *(_QWORD *)(v0 + 144);
      v209 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v162 = String.init(localized:table:bundle:locale:comment:)(v204, 0, 0, v209, v208, 0, 0, 256);
      v164 = v210;
      (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v205, v206);
      v6 = v220;
    }
    v212 = *(uint64_t **)(v0 + 128);
    v211 = *(void **)(v0 + 136);
    v57 = objc_msgSend(v158, "artworkCatalog");

    swift_bridgeObjectRelease();
    *v212 = v162;
    *(_QWORD *)(v2 + 8) = v164;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = 0;
    *(_QWORD *)(v2 + 24) = 0;
    if (v57)
      goto LABEL_17;
LABEL_42:

    v117 = *(_QWORD *)(v0 + 168);
    v118 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 176));
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v194 = sub_1001CE00C((uint64_t)&off_10043F070);
  MPModelObject.humanDescription(including:)(v194);
  v196 = v195;
  v198 = v197;
  swift_bridgeObjectRelease();
  v199._countAndFlagsBits = v196;
  v199._object = v198;
  String.append(_:)(v199);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003B4C40, "MusicCore/GroupActivitiesManager.swift", 38, 2, 85, 0);
}

uint64_t sub_1001BD340()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 200) = v1;
  if (v1)
    v2 = sub_1001BD440;
  else
    v2 = sub_1001BD3A0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001BD3A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(void **)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v5 = *(void **)(v0 + 120);
  v6 = objc_msgSend(v5, "CGImage");

  swift_release(v1);
  *(_QWORD *)(v4 + 32) = v6;
  v7 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BD440(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 192);
  v3 = *(_QWORD *)(v1 + 200);
  v4 = *(void **)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 128);
  v5 = *(void **)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRelease(v3);

  swift_release(v2);
  *(_QWORD *)(v6 + 32) = 0;
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 144);
  swift_task_dealloc(*(_QWORD *)(v1 + 176));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001BD4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  v5 = sub_100005574(&qword_100495AF0);
  v4[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001BD538, 0, 0);
}

uint64_t sub_1001BD538()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _DWORD *v31;
  __n128 v32;
  uint64_t (*v33)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v0[16];
  v1 = (void *)v0[17];
  v3 = type metadata accessor for GroupActivitiesManager.Activity(0);
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  v4 = v2 + *(int *)(v3 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  if (!v1)
    goto LABEL_8;
  v7 = v1;
  v8 = objc_msgSend(v7, "sharedListeningProperties");
  v0[21] = v8;
  if (!v8)
  {

LABEL_8:
    v26 = (_QWORD *)v0[19];
    v27 = v0[20];
    v28 = v0[18];
    v29 = v0[16];
    v30 = sub_1001D1870();
    swift_allocError(&type metadata for Errno, v30, 0, 0);
    *v31 = 96;
    swift_willThrow(v32);

    sub_10000682C(v26);
    sub_100008758(v28, &qword_100495AF0);
    sub_100006798(v29, type metadata accessor for GroupActivitiesManager.Activity);
    swift_task_dealloc(v27);
    v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
  v9 = v8;
  v10 = v0[19];
  v11 = v0[18];
  v36 = v0[17];
  v37 = v0[20];
  v12 = v0[16];
  sub_100008758(v12, &qword_100495AF8);
  sub_1000244B0(v10, v12);
  sub_1001D2014(v11, v4, &qword_100495AF0);
  v13 = type metadata accessor for CodableListeningProperties();
  v14 = swift_allocObject(v13, 24, 7);
  *(_QWORD *)(v14 + 16) = v9;
  v15 = *(_QWORD *)(v2 + 48);
  v16 = v9;
  swift_release(v15);
  *(_QWORD *)(v2 + 48) = v14;
  v17 = *(void **)(v2 + 40);
  v18 = v7;

  *(_QWORD *)(v2 + 40) = v36;
  sub_100014A7C(v4, v37, &qword_100495AF0);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v37, 1, v5);
  v20 = v0[20];
  if (v19 != 1)
  {

    sub_100008758(v20, &qword_100495AF0);
    v34 = v0[20];
    v35 = v0[18];
    sub_10000682C((_QWORD *)v0[19]);
    sub_100008758(v35, &qword_100495AF0);
    swift_task_dealloc(v34);
    v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
  sub_100008758(v0[20], &qword_100495AF0);
  if (qword_10048C950 != -1)
    swift_once(&qword_10048C950, sub_1001BF440);
  v21 = v0 + 2;
  v22 = qword_100495A60;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1001BD84C;
  v23 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v24 = v0 + 10;
  v24[1] = 0x40000000;
  v24[2] = sub_1000E5810;
  v24[3] = &unk_100453F28;
  v24[4] = v23;
  objc_msgSend(v18, "getRepresentativeObjectWithProperties:completion:", v22, v24);
  return swift_continuation_await(v21);
}

uint64_t sub_1001BD84C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 176) = v1;
  if (v1)
    v2 = sub_1001BD9AC;
  else
    v2 = sub_1001BD8AC;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001BD8AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(void **)(v0 + 136);
  v4 = *(void **)(v0 + 120);
  if (v4)
  {
    v5 = objc_msgSend(*(id *)(v0 + 120), "innermostModelObject");
    v6 = type metadata accessor for CodableModelObjectIdentity();
    v7 = swift_allocObject(v6, 24, 7);
    *(_QWORD *)(v7 + 16) = v5;
    v8 = *(_QWORD *)(v2 + 56);

  }
  else
  {
    v9 = type metadata accessor for CodableModelObjectIdentity();
    v10 = swift_allocObject(v9, 24, 7);
    swift_deallocPartialClassInstance(v10, v9, 24, 7);
    v7 = 0;
    v8 = *(_QWORD *)(v2 + 56);
    v4 = v3;
  }

  swift_release(v8);
  *(_QWORD *)(v2 + 56) = v7;
  v11 = *(_QWORD *)(v0 + 160);
  v12 = *(_QWORD *)(v0 + 144);
  sub_10000682C(*(_QWORD **)(v0 + 152));
  sub_100008758(v12, &qword_100495AF0);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BD9AC(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 176);
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v3 = *(void **)(v1 + 168);
  v5 = *(_QWORD *)(v1 + 128);
  v4 = *(void **)(v1 + 136);
  v6 = type metadata accessor for CodableModelObjectIdentity();
  v7 = swift_allocObject(v6, 24, 7);
  swift_deallocPartialClassInstance(v7, v6, 24, 7);
  v8 = *(_QWORD *)(v5 + 56);

  swift_release(v8);
  *(_QWORD *)(v5 + 56) = 0;
  v9 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 144);
  sub_10000682C(*(_QWORD **)(v1 + 152));
  sub_100008758(v10, &qword_100495AF0);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void *GroupActivitiesManager.Activity.activityIdentifier.unsafeMutableAddressor()
{
  return &static GroupActivitiesManager.Activity.activityIdentifier;
}

unint64_t static GroupActivitiesManager.Activity.activityIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t GroupActivitiesManager.Activity.metadata.getter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_100005574(&qword_10048D510);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_100495AF0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[22] = swift_task_alloc(v4);
  v2[23] = swift_task_alloc(v4);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v2[24] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[25] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v7);
  v2[27] = swift_task_alloc(v7);
  v8 = type metadata accessor for GroupActivityMetadata.ActivityType(0);
  v2[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001BDB7C, 0, 0);
}

uint64_t sub_1001BDB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  unint64_t v40;
  char v41;
  _UNKNOWN **v42;
  char **v43;
  uint64_t v44;
  void *ObjCClassFromMetadata;
  id v46;
  void *v47;
  id v48;
  char v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  Class isa;
  id v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  Swift::Int v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  Swift::String v88;
  _OWORD *v89;
  int *v90;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = type metadata accessor for GroupActivityMetadata(0);
  *(_QWORD *)(v0 + 232) = v6;
  v7 = swift_allocBox(v6);
  v9 = v8;
  *(_QWORD *)(v0 + 240) = v7;
  *(_QWORD *)(v0 + 248) = v8;
  GroupActivityMetadata.init()();
  v10 = GroupActivityMetadata.supportsContinuationOnTV.setter(0);
  static GroupActivityMetadata.ActivityType.listenTogether.getter(v10);
  GroupActivityMetadata.type.setter(v1);
  v11 = type metadata accessor for GroupActivitiesManager.Activity(0);
  sub_100014A7C(v5 + *(int *)(v11 + 32), v4, &qword_100495AF0);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 256) = v12;
  if (v12(v4, 1, v2) != 1)
  {
    v24 = *(uint64_t **)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 192);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 152);
    sub_1000648AC(*(_QWORD *)(v0 + 184), (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v28 = *v24;
    v29 = v24[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v28, v29);
    v30 = v24[2];
    v31 = v24[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v30, v31);
    v32 = (void *)v24[4];
    v33 = v32;
    GroupActivityMetadata.previewImage.setter(v32);
    sub_100014A7C((uint64_t)v24 + *(int *)(v25 + 28), v26, &qword_10048D510);
    GroupActivityMetadata.fallbackURL.setter(v26);
    sub_100006798((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v27, v9, v6);
LABEL_35:
    sub_1001BE754(v7);
    swift_release(v7);
    v70 = *(_QWORD *)(v0 + 216);
    v71 = *(_QWORD *)(v0 + 208);
    v73 = *(_QWORD *)(v0 + 176);
    v72 = *(_QWORD *)(v0 + 184);
    v74 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 224));
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 160);
  sub_100008758(*(_QWORD *)(v0 + 184), &qword_100495AF0);
  v14 = *(_QWORD *)(v13 + 56);
  if (!v14)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(*(_QWORD *)(v0 + 152), v9, v6);
    goto LABEL_35;
  }
  v15 = *(void **)(v14 + 16);
  *(_QWORD *)(v0 + 264) = v15;
  objc_opt_self(MPModelAlbum);
  if (swift_dynamicCastObjCClass(v15))
  {
    v16 = qword_10048C938;
    v17 = v15;
    if (v16 != -1)
      swift_once(&qword_10048C938, sub_1001BEFBC);
    v18 = (void *)qword_100495A48;
    v19 = (void *)objc_opt_self(MPModelAlbum);
    v20 = (void *)objc_opt_self(MPModelSong);
    v21 = v18;
    v22 = objc_msgSend(v20, "kindWithVariants:", 3);
    v23 = objc_msgSend(v19, "kindWithSongKind:", v22);

    goto LABEL_32;
  }
  objc_opt_self(MPModelPlaylist);
  if (swift_dynamicCastObjCClass(v15))
  {
    v89 = (_OWORD *)(v0 + 88);
    v34 = sub_100005574((uint64_t *)&unk_100491910);
    v35 = swift_allocObject(v34, 56, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100384B00;
    v36 = (void *)objc_opt_self(MPModelSong);
    v37 = v15;
    *(_QWORD *)(v35 + 32) = objc_msgSend(v36, "kindWithVariants:", 7);
    v38 = (void *)objc_opt_self(NSUserDefaults);
    v39 = objc_msgSend(v38, "standardUserDefaults");
    strcpy((char *)(v0 + 120), "showAllTVShows");
    *(_BYTE *)(v0 + 135) = -18;
    v40 = sub_10000D478();
    NSUserDefaults.subscript.getter(v0 + 120, (uint64_t)&type metadata for String, v40, (_OWORD *)(v0 + 56));
    if (*(_QWORD *)(v0 + 80))
    {
      if ((swift_dynamicCast(v0 + 297, v0 + 56, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v41 = *(_BYTE *)(v0 + 297);

        v42 = MPCPlaybackSharedListeningProperties_ptr;
        v43 = &selRef_isEnabled;
        if ((v41 & 1) != 0)
        {
          v44 = 3;
          goto LABEL_21;
        }
LABEL_20:
        v44 = 2;
LABEL_21:
        *(_QWORD *)(v35 + 40) = objc_msgSend((id)objc_opt_self(MPModelTVEpisode), v43[45], v44);
        v48 = objc_msgSend(v38, "standardUserDefaults");
        strcpy((char *)(v0 + 136), "showAllTVShows");
        *(_BYTE *)(v0 + 151) = -18;
        NSUserDefaults.subscript.getter(v0 + 136, (uint64_t)&type metadata for String, v40, v89);
        if (*(_QWORD *)(v0 + 112))
        {
          if ((swift_dynamicCast(v0 + 296, v89, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
          {
            v49 = *(_BYTE *)(v0 + 296);

            if ((v49 & 1) != 0)
            {
              v50 = 3;
LABEL_28:
              v51 = (void *)objc_opt_self(v42[34]);
              v52 = (void *)objc_opt_self(MPModelPlaylistEntry);
              v53 = objc_msgSend((id)objc_opt_self(MPModelMovie), v43[45], v50);
              *(_QWORD *)(v35 + 48) = v53;
              specialized Array._endMutation()(v53);
              sub_100005574((uint64_t *)&unk_100491290);
              isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              v55 = objc_msgSend(v52, "kindWithKinds:", isa);

              v23 = objc_msgSend(v51, "kindWithPlaylistEntryKind:options:", v55, 0);
              if (qword_10048C940 != -1)
                swift_once(&qword_10048C940, sub_1001BF194);
              v47 = (void *)qword_100495A50;
LABEL_31:
              v21 = v47;
LABEL_32:
              *(_QWORD *)(v0 + 272) = v21;
              *(_QWORD *)(v0 + 280) = v23;
              sub_100014A7C(*(_QWORD *)(v0 + 160), v0 + 16, &qword_100495AF8);
              v56 = *(_QWORD *)(v0 + 40);
              if (v56)
              {
                v57 = *(_QWORD *)(v0 + 48);
                sub_10000ABC8((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
                v58 = *(int **)(v57 + 16);
                v90 = (int *)((char *)v58 + *v58);
                v59 = (_QWORD *)swift_task_alloc(v58[1]);
                *(_QWORD *)(v0 + 288) = v59;
                *v59 = v0;
                v59[1] = sub_1001BE540;
                return ((uint64_t (*)(_QWORD, void *, id, id, uint64_t, uint64_t))v90)(*(_QWORD *)(v0 + 176), v15, v23, v21, v56, v57);
              }
              v61 = *(_QWORD *)(v0 + 192);
              v62 = *(_QWORD *)(v0 + 200);
              v63 = *(_QWORD *)(v0 + 176);
              sub_100008758(v0 + 16, &qword_100495AF8);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, 1, 1, v61);
              v64 = *(void **)(v0 + 280);
              v65 = *(void **)(v0 + 264);
              v7 = *(_QWORD *)(v0 + 240);
              v66 = *(_QWORD *)(v0 + 248);
              v67 = *(_QWORD *)(v0 + 232);
              v68 = *(_QWORD *)(v0 + 176);
              v69 = *(_QWORD *)(v0 + 152);

              sub_100008758(v68, &qword_100495AF0);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v69, v66, v67);
              goto LABEL_35;
            }
LABEL_27:
            v50 = 2;
            goto LABEL_28;
          }
        }
        else
        {
          sub_100008758((uint64_t)v89, &qword_100491B90);
        }

        goto LABEL_27;
      }
    }
    else
    {
      sub_100008758(v0 + 56, &qword_100491B90);
    }

    v42 = MPCPlaybackSharedListeningProperties_ptr;
    v43 = &selRef_isEnabled;
    goto LABEL_20;
  }
  objc_opt_self(MPModelRadioStation);
  if (swift_dynamicCastObjCClass(v15))
  {
    sub_1000087DC(0, &qword_100495B00, MPModelRadioStationKind_ptr);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v46 = v15;
    v23 = objc_msgSend(ObjCClassFromMetadata, "identityKind");
    if (qword_10048C948 != -1)
      swift_once(&qword_10048C948, sub_1001BF36C);
    v47 = (void *)qword_100495A58;
    goto LABEL_31;
  }
  objc_opt_self(MPModelSong);
  if (swift_dynamicCastObjCClass(v15))
  {
    v75 = (void *)objc_opt_self(MPModelSong);
    v76 = v15;
    v77 = objc_msgSend(v75, "kindWithVariants:", 7);
LABEL_40:
    v23 = v77;
    if (qword_10048C918 != -1)
      swift_once(&qword_10048C918, sub_1001BE940);
    v47 = (void *)qword_100495A30;
    goto LABEL_31;
  }
  objc_opt_self(MPModelTVEpisode);
  if (swift_dynamicCastObjCClass(v15))
  {
    v78 = (void *)objc_opt_self(MPModelTVEpisode);
    v79 = v15;
    v77 = objc_msgSend(v78, "kindWithVariants:", 3);
    goto LABEL_40;
  }
  objc_opt_self(MPModelMovie);
  if (swift_dynamicCastObjCClass(v15))
  {
    v80 = (void *)objc_opt_self(MPModelMovie);
    v81 = v15;
    v23 = objc_msgSend(v80, "kindWithVariants:", 3);
    if (qword_10048C928 != -1)
      swift_once(&qword_10048C928, sub_1001BED48);
    v47 = (void *)qword_100495A40;
    goto LABEL_31;
  }
  v82 = v15;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v83 = sub_1001CE00C((uint64_t)&off_10043F098);
  MPModelObject.humanDescription(including:)(v83);
  v85 = v84;
  v87 = v86;
  swift_bridgeObjectRelease();
  v88._countAndFlagsBits = v85;
  v88._object = v87;
  String.append(_:)(v88);
  swift_bridgeObjectRelease();
  return _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001003B4C40, "MusicCore/GroupActivitiesManager.swift", 38, 2, 164, 0);
}

uint64_t sub_1001BE540()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 288));
  return swift_task_switch(sub_1001BE594, 0, 0);
}

uint64_t sub_1001BE594()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  sub_10000682C((_QWORD *)(v0 + 16));
  v4 = v1(v3, 1, v2);
  v6 = *(void **)(v0 + 272);
  v5 = *(void **)(v0 + 280);
  v7 = *(void **)(v0 + 264);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  v10 = *(_QWORD *)(v0 + 232);
  if (v4 == 1)
  {
    v11 = *(_QWORD *)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 152);

    sub_100008758(v11, &qword_100495AF0);
  }
  else
  {
    v13 = *(uint64_t **)(v0 + 208);
    v14 = *(_QWORD *)(v0 + 168);
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 152);
    sub_1000648AC(*(_QWORD *)(v0 + 176), (uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
    v30 = v7;
    v15 = *v13;
    v16 = v13[1];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.title.setter(v15, v16);
    v17 = v13[2];
    v18 = v13[3];
    swift_bridgeObjectRetain();
    GroupActivityMetadata.subtitle.setter(v17, v18);
    v19 = (void *)v13[4];
    v20 = v19;
    GroupActivityMetadata.previewImage.setter(v19);
    sub_100014A7C((uint64_t)v13 + *(int *)(v28 + 28), v14, &qword_10048D510);
    v21 = v14;
    v12 = v29;
    GroupActivityMetadata.fallbackURL.setter(v21);

    sub_100006798((uint64_t)v13, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v12, v9, v10);
  sub_1001BE754(v8);
  swift_release(v8);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 184);
  v26 = *(_QWORD *)(v0 + 168);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001BE754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  char *v16;
  _BYTE v17[24];
  uint64_t v18;

  v2 = type metadata accessor for GroupActivityMetadata(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v7 = type metadata accessor for Logger(0, v4);
  sub_1000086B4(v7, (uint64_t)static Logger.groupActivities);
  v8 = swift_retain_n(a1, 2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v18 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = swift_projectBox(a1);
    v14 = swift_beginAccess(v13, v17, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v13, v2, v14);
    v15 = (char *)String.init<A>(reflecting:)(v6, v2);
    *(_QWORD *)(v11 + 4) = sub_100019400(v15, v16, &v18);
    swift_release_n(a1, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending activity metadata=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_release_n(a1, 2);
  }
}

void sub_1001BE940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  void *v10;
  id v11;
  uint64_t v12;
  Class v13;
  id v14;
  id v15;
  Class v16;
  Class v17;
  id v18;
  _BYTE v19[80];

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A60;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v4, v19);
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100384A80;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self(MPPropertySet);
  v11 = objc_msgSend(v10, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 64) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v10, "propertySetWithProperties:", v13);

  *(_QWORD *)(inited + 72) = v14;
  sub_100098EAC(inited);
  v15 = objc_allocWithZone((Class)MPPropertySet);
  v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v17 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v15, "initWithProperties:relationships:", v16, v17);

  qword_100495A30 = (uint64_t)v18;
}

void sub_1001BEB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A60;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVEpisodeArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipTVEpisodeShow);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100384A80;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyTVShowTitle);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_100098EAC(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_100495A38 = (uint64_t)v14;
}

void sub_1001BED48(uint64_t a1)
{
  sub_1001BF388(a1, &MPModelPropertyMovieTitle, &MPModelPropertyMovieArtwork, &qword_100495A40);
}

void sub_1001BED64()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  Class isa;
  Class v15;
  id v16;
  _BYTE v17[104];

  v0 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v0, v17);
  *(_OWORD *)(inited + 16) = xmmword_100384A40;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 40) = v2;
  if (qword_10048C918 != -1)
    swift_once(&qword_10048C918, sub_1001BE940);
  v3 = (void *)qword_100495A30;
  *(_QWORD *)(inited + 48) = qword_100495A30;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericTVEpisode);
  *(_QWORD *)(inited + 64) = v4;
  v5 = qword_10048C920;
  v6 = v3;
  if (v5 != -1)
    swift_once(&qword_10048C920, sub_1001BEB70);
  v7 = (void *)qword_100495A38;
  *(_QWORD *)(inited + 72) = qword_100495A38;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericMovie);
  *(_QWORD *)(inited + 88) = v8;
  v9 = qword_10048C928;
  v10 = v7;
  if (v9 != -1)
    swift_once(&qword_10048C928, sub_1001BED48);
  v11 = (void *)qword_100495A40;
  *(_QWORD *)(inited + 96) = qword_100495A40;
  v12 = v11;
  sub_100098EAC(inited);
  v13 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v15 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, "initWithProperties:relationships:", isa, v15);

  static GroupActivitiesManager.Activity.playingProperties = (uint64_t)v16;
}

uint64_t *GroupActivitiesManager.Activity.playingProperties.unsafeMutableAddressor()
{
  if (qword_10048C930 != -1)
    swift_once(&qword_10048C930, sub_1001BED64);
  return &static GroupActivitiesManager.Activity.playingProperties;
}

id static GroupActivitiesManager.Activity.playingProperties.getter()
{
  if (qword_10048C930 != -1)
    swift_once(&qword_10048C930, sub_1001BED64);
  return (id)static GroupActivitiesManager.Activity.playingProperties;
}

void sub_1001BEFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A60;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100384A80;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_100098EAC(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_100495A48 = (uint64_t)v14;
}

void sub_1001BF194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  id v10;
  id v11;
  Class v12;
  Class v13;
  id v14;
  _BYTE v15[56];

  v0 = sub_100005574((uint64_t *)&unk_100491700);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384A60;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  v4 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v4, v15);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipPlaylistCurator);
  *(_QWORD *)(inited + 40) = v6;
  v7 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100384A80;
  *(_QWORD *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyCuratorName);
  *(_QWORD *)(v7 + 40) = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v10;
  sub_100098EAC(inited);
  v11 = objc_allocWithZone((Class)MPPropertySet);
  v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v13 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithProperties:relationships:", v12, v13);

  qword_100495A50 = (uint64_t)v14;
}

void sub_1001BF36C(uint64_t a1)
{
  sub_1001BF388(a1, &MPModelPropertyRadioStationName, &MPModelPropertyRadioStationArtwork, &qword_100495A58);
}

void sub_1001BF388(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;

  v7 = sub_100005574((uint64_t *)&unk_100491700);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100384A60;
  *(_QWORD *)(v8 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a2);
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(*a3);
  *(_QWORD *)(v8 + 56) = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);

  *a4 = v12;
}

id sub_1001BF440()
{
  id result;

  result = sub_1001BF45C();
  qword_100495A60 = (uint64_t)result;
  return result;
}

id sub_1001BF45C()
{
  void *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  Class isa;
  Class v16;
  id v17;
  id v18;
  _BYTE v20[104];

  if (qword_10048C930 != -1)
    swift_once(&qword_10048C930, sub_1001BED64);
  v0 = (void *)static GroupActivitiesManager.Activity.playingProperties;
  v1 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v1, v20);
  *(_OWORD *)(inited + 16) = xmmword_100384A40;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 40) = v3;
  if (qword_10048C940 != -1)
    swift_once(&qword_10048C940, sub_1001BF194);
  v4 = (void *)qword_100495A50;
  *(_QWORD *)(inited + 48) = qword_100495A50;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 64) = v5;
  v6 = qword_10048C938;
  v7 = v4;
  if (v6 != -1)
    swift_once(&qword_10048C938, sub_1001BEFBC);
  v8 = (void *)qword_100495A48;
  *(_QWORD *)(inited + 72) = qword_100495A48;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v9;
  v10 = qword_10048C948;
  v11 = v8;
  if (v10 != -1)
    swift_once(&qword_10048C948, sub_1001BF36C);
  v12 = (void *)qword_100495A58;
  *(_QWORD *)(inited + 96) = qword_100495A58;
  v13 = v12;
  sub_100098EAC(inited);
  v14 = objc_allocWithZone((Class)MPPropertySet);
  isa = Array._bridgeToObjectiveC()().super.isa;
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v16 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v14, "initWithProperties:relationships:", isa, v16);

  v18 = objc_msgSend(v0, "propertySetByCombiningWithPropertySet:", v17);
  return v18;
}

unint64_t sub_1001BF684()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0xD00000000000001BLL;
}

uint64_t sub_1001BF6C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D1610(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001BF6E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001CE178();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BF710(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001CE178();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GroupActivitiesManager.Activity.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v25 = a2;
  v4 = sub_100005574(&qword_100495B08);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = &v11[*(int *)(v9 + 32)];
  v13 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = a1[3];
  v15 = a1[4];
  sub_10000ABC8(a1, v14);
  v16 = sub_1001CE178();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v16, v14, v15);
  if (!v2)
  {
    v17 = v5;
    v18 = v25;
    v19 = type metadata accessor for CodableListeningProperties();
    v26 = 0;
    v20 = sub_100006924(&qword_100495B18, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_100391344);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v27, v19, &v26, v4, v19, v20);
    *((_QWORD *)v11 + 6) = v27;
    v22 = type metadata accessor for CodableModelObjectIdentity();
    v26 = 1;
    v23 = sub_100006924(&qword_100495B20, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_10039131C);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v27, v22, &v26, v4, v22, v23);
    v24 = v27;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
    swift_release(*((_QWORD *)v11 + 7));
    *((_QWORD *)v11 + 7) = v24;
    sub_100082248((uint64_t)v11, v18, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_10000682C(a1);
  return sub_100006798((uint64_t)v11, type metadata accessor for GroupActivitiesManager.Activity);
}

uint64_t GroupActivitiesManager.Activity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  v5 = sub_100005574(&qword_100495B28);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001CE178();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for GroupActivitiesManager.Activity.CodingKey, &type metadata for GroupActivitiesManager.Activity.CodingKey, v11, v9, v10);
  v18 = *(_QWORD *)(v3 + 48);
  HIBYTE(v17) = 0;
  v12 = sub_100005574(&qword_100495B30);
  v13 = sub_1001CE1FC();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v12, v13);
  if (!v2)
  {
    v18 = *(_QWORD *)(v3 + 56);
    HIBYTE(v17) = 1;
    v14 = sub_100005574(&qword_100495B48);
    v15 = sub_1001CE278();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, (char *)&v17 + 7, v5, v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001BFB20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_100495AEC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return GroupActivitiesManager.Activity.metadata.getter(a1);
}

uint64_t sub_1001BFB74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupActivitiesManager.Activity.init(from:)(a1, a2);
}

uint64_t sub_1001BFB88(_QWORD *a1)
{
  return GroupActivitiesManager.Activity.encode(to:)(a1);
}

uint64_t GroupActivitiesManager.coordinator.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + 16);
  swift_beginAccess(v3, v5, 33, 0);
  sub_10000682C(v3);
  sub_1000137C8(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t GroupActivitiesManager.pendingNoticeAlert.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 56, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 56);
  sub_1001CDD88(v1, *(_QWORD *)(v0 + 64));
  return v1;
}

uint64_t GroupActivitiesManager.isSharePlaySessionActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t KeyPath;
  uint64_t v26;
  __n128 v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128);
  void (*v33)(_BYTE *, _QWORD, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t);
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  char v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t);
  _BYTE v59[12];
  int v60;
  void (*v61)(_BYTE *, _QWORD, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;

  v1 = v0;
  v2 = sub_100005574(&qword_100495AB8);
  v3 = *(_QWORD **)(v2 - 8);
  __chkstk_darwin(v2);
  v65 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = sub_100005574(&qword_100495B60);
  v5 = __chkstk_darwin(v69);
  v7 = &v59[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v59[-v8];
  v10 = sub_100005574(&qword_100495B68);
  v11 = __chkstk_darwin(v10);
  v66 = &v59[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __chkstk_darwin(v11);
  v67 = &v59[-v14];
  v15 = __chkstk_darwin(v13);
  v68 = &v59[-v16];
  v17 = __chkstk_darwin(v15);
  v19 = &v59[-v18];
  v20 = __chkstk_darwin(v17);
  v22 = &v59[-v21];
  __chkstk_darwin(v20);
  v24 = &v59[-v23];
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v26 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter(&v70, v1, KeyPath, v26);
  swift_release(KeyPath);
  v27 = swift_release(v26);
  if ((v70 & 1) != 0)
    return 1;
  v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  v63 = v1;
  v64 = v7;
  v62 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  if (v29)
  {
    v30 = swift_retain(v29);
    GroupSession.state.getter(v30);
    v31 = swift_release(v29);
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 0, 1, v2, v31);
  }
  else
  {
    v32 = (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
    v32(v24, 1, 1, v2, v27);
  }
  v33 = (void (*)(_BYTE *, _QWORD, uint64_t))v3[13];
  v33(v22, enum case for GroupSession.State.waiting<A>(_:), v2);
  ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v32)(v22, 0, 1, v2);
  v34 = (uint64_t)&v9[*(int *)(v69 + 48)];
  sub_100014A7C((uint64_t)v24, (uint64_t)v9, &qword_100495B68);
  sub_100014A7C((uint64_t)v22, v34, &qword_100495B68);
  v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v3[6];
  if (v35((uint64_t)v9, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v22, &qword_100495B68);
    sub_100008758((uint64_t)v24, &qword_100495B68);
    if (v35(v34, 1, v2) == 1)
    {
      v36 = (uint64_t)v9;
LABEL_20:
      sub_100008758(v36, &qword_100495B68);
      return 1;
    }
  }
  else
  {
    sub_100014A7C((uint64_t)v9, (uint64_t)v19, &qword_100495B68);
    if (v35(v34, 1, v2) != 1)
    {
      v42 = (void (*)(_BYTE *, uint64_t, uint64_t))v3[4];
      v61 = v33;
      v43 = v65;
      v42(v65, v34, v2);
      v44 = sub_10002FFB8(&qword_100495B78, &qword_100495AB8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v60 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v43, v2, v44);
      v45 = (void (*)(_BYTE *, uint64_t))v3[1];
      v46 = v43;
      v33 = v61;
      v45(v46, v2);
      sub_100008758((uint64_t)v22, &qword_100495B68);
      sub_100008758((uint64_t)v24, &qword_100495B68);
      v45(v19, v2);
      sub_100008758((uint64_t)v9, &qword_100495B68);
      if ((v60 & 1) != 0)
        return 1;
      goto LABEL_12;
    }
    sub_100008758((uint64_t)v22, &qword_100495B68);
    sub_100008758((uint64_t)v24, &qword_100495B68);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v19, v2);
  }
  sub_100008758((uint64_t)v9, &qword_100495B60);
LABEL_12:
  v38 = *(_QWORD *)(v63 + v62);
  if (v38)
  {
    v39 = swift_retain(*(_QWORD *)(v63 + v62));
    v40 = (uint64_t)v68;
    GroupSession.state.getter(v39);
    v37 = swift_release(v38);
    v41 = 0;
  }
  else
  {
    v41 = 1;
    v40 = (uint64_t)v68;
  }
  v47 = (uint64_t)v67;
  v32((_BYTE *)v40, v41, 1, v2, v37);
  v33((_BYTE *)v47, enum case for GroupSession.State.joined<A>(_:), v2);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v32)(v47, 0, 1, v2);
  v48 = (uint64_t)v64;
  v49 = (uint64_t)&v64[*(int *)(v69 + 48)];
  sub_100014A7C(v40, (uint64_t)v64, &qword_100495B68);
  sub_100014A7C(v47, v49, &qword_100495B68);
  if (v35(v48, 1, v2) == 1)
  {
    sub_100008758(v47, &qword_100495B68);
    sub_100008758(v40, &qword_100495B68);
    if (v35(v49, 1, v2) == 1)
    {
      v36 = v48;
      goto LABEL_20;
    }
    goto LABEL_23;
  }
  sub_100014A7C(v48, (uint64_t)v66, &qword_100495B68);
  if (v35(v49, 1, v2) == 1)
  {
    sub_100008758(v47, &qword_100495B68);
    sub_100008758(v40, &qword_100495B68);
    ((void (*)(_BYTE *, uint64_t))v3[1])(v66, v2);
LABEL_23:
    sub_100008758(v48, &qword_100495B60);
LABEL_24:
    v50 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v51 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v50, "BOOLForKey:", v51);

    return (uint64_t)v28;
  }
  v53 = v65;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v3[4])(v65, v49, v2);
  v54 = sub_10002FFB8(&qword_100495B78, &qword_100495AB8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
  v55 = v66;
  v56 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v53, v2, v54);
  v57 = v47;
  v58 = (void (*)(_BYTE *, uint64_t))v3[1];
  v58(v53, v2);
  sub_100008758(v57, &qword_100495B68);
  sub_100008758(v40, &qword_100495B68);
  v58(v55, v2);
  sub_100008758(v48, &qword_100495B68);
  if ((v56 & 1) == 0)
    goto LABEL_24;
  return 1;
}

uint64_t GroupActivitiesManager.isLoading.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v2 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t GroupActivitiesManager.participantsCount.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100390E30);
  v2 = swift_getKeyPath(&unk_100390E58);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001C0404(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390E30);
  v5 = swift_getKeyPath(&unk_100390E58);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_1001C0480(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390E30);
  v5 = swift_getKeyPath(&unk_100390E58);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v9;
  v7 = swift_getKeyPath(&unk_100390E30);
  v8 = swift_getKeyPath(&unk_100390E58);
  v9 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v9, v3, v7, v8);
  sub_1001C0548(v6);
}

void sub_1001C0548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];

  v2 = v1;
  KeyPath = swift_getKeyPath(&unk_100390E30);
  v5 = swift_getKeyPath(&unk_100390E58);
  static Published.subscript.getter(v21, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (v21[0] != a1)
  {
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v7 = type metadata accessor for Logger(0, v6);
    sub_1000086B4(v7, (uint64_t)static Logger.groupActivities);
    v8 = swift_retain_n(v2, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(12, -1);
      *(_DWORD *)v11 = 134349056;
      v12 = swift_getKeyPath(&unk_100390E30);
      v13 = swift_getKeyPath(&unk_100390E58);
      static Published.subscript.getter(v21, v2, v12, v13);
      swift_release(v13);
      swift_release(v12);
      swift_release(v2);
      *(_QWORD *)(v11 + 4) = v21[0];
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "👤 Participants count update=%{public}ld", (uint8_t *)v11, 0xCu);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2);
    }

    v14 = swift_getKeyPath(&unk_100390E30);
    v15 = swift_getKeyPath(&unk_100390E58);
    static Published.subscript.getter(v21, v2, v14, v15);
    swift_release(v15);
    swift_release(v14);
    v16 = v21[0];
    v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v21, 1, 0);
    if (*v17 < v16)
    {
      v18 = swift_getKeyPath(&unk_100390E30);
      v19 = swift_getKeyPath(&unk_100390E58);
      static Published.subscript.getter(&v20, v2, v18, v19);
      swift_release(v19);
      swift_release(v18);
      *v17 = v20;
    }
  }
}

uint64_t Logger.groupActivities.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.groupActivities);
}

uint64_t GroupActivitiesManager.$participantsCount.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_100495700);
}

void sub_1001C0818(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v5 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

void sub_1001C0894(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v5 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = v9;
  v6 = swift_getKeyPath(&unk_100390DE8);
  v7 = swift_getKeyPath(&unk_100390E10);
  v8 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v8, v3, v6, v7);
  sub_1001C095C(KeyPath);
}

void sub_1001C095C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v5 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((uint64_t *)((char *)&v14 + 1), v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  if (BYTE1(v14) != v3)
  {
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v7 = type metadata accessor for Logger(0, v6);
    sub_1000086B4(v7, (uint64_t)static Logger.groupActivities);
    v8 = swift_retain_n(v2, 2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc(8, -1);
      *(_DWORD *)v11 = 67240192;
      v12 = swift_getKeyPath(&unk_100390DE8);
      v13 = swift_getKeyPath(&unk_100390E10);
      static Published.subscript.getter(&v14, v2, v12, v13);
      swift_release(v13);
      swift_release(v12);
      swift_release(v2);
      *(_DWORD *)(v11 + 4) = v14;
      swift_release(v2);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "⏳ Session is loading=%{BOOL,public}d", (uint8_t *)v11, 8u);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {
      swift_release_n(v2, 2);
    }

  }
}

uint64_t GroupActivitiesManager.$isLoading.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_100492DA0);
}

uint64_t property wrapper backing initializer of GroupActivitiesManager.reaction(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[48];

  sub_1000149A8(a1, (uint64_t)v3, &qword_100495B88);
  v1 = sub_100005574(&qword_100495B88);
  return Published.init(initialValue:)(v3, v1);
}

double GroupActivitiesManager.reaction.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  __int128 v6;
  __int128 v7;
  _OWORD v8[3];

  KeyPath = swift_getKeyPath(&unk_100390E78);
  v4 = swift_getKeyPath(&unk_100390EA0);
  static Published.subscript.getter(v8, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)v8;
  v6 = v8[1];
  v7 = v8[2];
  *a1 = v8[0];
  a1[1] = v6;
  a1[2] = v7;
  return result;
}

double sub_1001C0BF4@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100390E78);
  v5 = swift_getKeyPath(&unk_100390EA0);
  static Published.subscript.getter(v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)v9;
  v7 = v9[1];
  v8 = v9[2];
  *a2 = v9[0];
  a2[1] = v7;
  a2[2] = v8;
  return result;
}

_QWORD *sub_1001C0C78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[6];
  _QWORD v15[6];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100390E78);
  v10 = swift_getKeyPath(&unk_100390EA0);
  sub_1001D1F64(v2, v3);
  static Published.subscript.getter(v14, v8, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  sub_1000149A8((uint64_t)v14, (uint64_t)v15, &qword_100495B88);
  v11 = swift_getKeyPath(&unk_100390E78);
  v12 = swift_getKeyPath(&unk_100390EA0);
  v14[0] = v2;
  v14[1] = v3;
  v14[2] = v4;
  v14[3] = v5;
  v14[4] = v6;
  v14[5] = v7;
  swift_retain(v8);
  static Published.subscript.setter(v14, v8, v11, v12);
  sub_1001C0D9C(v15);
  return sub_1001D1FDC(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1FA0);
}

void sub_1001C0D9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD v61[6];
  _QWORD v62[6];
  _QWORD v63[6];
  uint64_t v64[6];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char v71;

  v2 = v1;
  sub_1000149A8((uint64_t)a1, (uint64_t)v62, &qword_100495B88);
  v5 = v62[0];
  v4 = v62[1];
  v55 = (char *)v62[4];
  v56 = v62[2];
  v59 = (char *)v62[5];
  v60 = v62[3];
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Participant(0);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  __chkstk_darwin(v10);
  v52 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100390E78);
  v13 = swift_getKeyPath(&unk_100390EA0);
  v57 = v2;
  static Published.subscript.getter(&v65, v2, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  v14 = v66;
  if (v66)
  {
    v49 = v9;
    v50 = v7;
    v51 = v6;
    v15 = v65;
    v16 = v67;
    v17 = v68;
    v19 = v69;
    v18 = v70;
    sub_1000149A8((uint64_t)a1, (uint64_t)v63, &qword_100495B88);
    v58 = v16;
    if (!v63[1])
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = v15;
      sub_1001D1FA0(v15, v14, v16, v17, (uint64_t)v19, (uint64_t)v18);
      sub_1001D1FA0(v5, v4, v56, v60, (uint64_t)v55, (uint64_t)v59);
      goto LABEL_17;
    }
    if ((v15 == v5 && v14 == v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v14, v5, v4, 0) & 1) != 0)
      && (v58 == v56 && v17 == v60 || (_stringCompareWithSmolCheck(_:_:expecting:)(v58, v17, v56, v60, 0) & 1) != 0))
    {
      if (!v18)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v58;
        sub_1001D1F64(v15, v14);
        sub_1001D1FDC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1F64);
        swift_bridgeObjectRelease();
        v21 = 0;
        v22 = v15;
        if (!v59)
          goto LABEL_38;
        goto LABEL_16;
      }
      if (v59)
      {
        if (v19 == v55 && v18 == v59)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v20 = v58;
          sub_1001D1F64(v15, v14);
          sub_1001D1FDC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1F64);
          swift_bridgeObjectRelease();
          v21 = v18;
          v22 = v15;
LABEL_38:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1001D1FA0(v22, v14, v20, v17, (uint64_t)v19, (uint64_t)v18);
          swift_bridgeObjectRelease_n(v21, 2);
          swift_bridgeObjectRelease_n(v17, 2);
          swift_bridgeObjectRelease_n(v14, 2);
          return;
        }
        LODWORD(v56) = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v55, v59, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v58;
        sub_1001D1F64(v15, v14);
        sub_1001D1FDC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1F64);
        swift_bridgeObjectRelease();
        v21 = v18;
        v22 = v15;
        if ((v56 & 1) != 0)
          goto LABEL_38;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v58;
    sub_1001D1F64(v15, v14);
    sub_1001D1FDC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1F64);
    swift_bridgeObjectRelease();
    v22 = v15;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = v22;
    sub_1001D1FA0(v22, v14, v20, v17, (uint64_t)v19, (uint64_t)v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v20;
LABEL_17:
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v24 = type metadata accessor for Logger(0, v23);
    sub_1000086B4(v24, (uint64_t)static Logger.groupActivities);
    swift_bridgeObjectRetain_n(v18, 2);
    swift_bridgeObjectRetain_n(v14, 2);
    v25 = swift_bridgeObjectRetain_n(v17, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v64[0] = v29;
      *(_DWORD *)v28 = 136446210;
      v65 = v16;
      v66 = v17;
      swift_bridgeObjectRetain();
      v30 = (char *)String.init<A>(reflecting:)(&v65, &type metadata for String);
      *(_QWORD *)(v28 + 4) = sub_100019400(v30, v31, v64);
      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "🌚 received: %{public}s)", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      v32 = v57;
      if (!v18)
        goto LABEL_32;
    }
    else
    {

      swift_bridgeObjectRelease_n(v18, 2);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      v32 = v57;
      if (!v18)
        goto LABEL_32;
    }
    v33 = *(_QWORD *)(v32 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v33)
    {
      swift_bridgeObjectRetain();
      v34 = swift_retain(v33);
      v35 = v52;
      GroupSession.localParticipant.getter(v34);
      swift_release(v33);
      v36 = v49;
      Participant.id.getter(v37);
      v38 = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v35, v54);
      v39 = UUID.uuidString.getter(v38);
      v41 = v40;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
      if (v19 == (char *)v39 && v18 == v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        v43 = swift_getKeyPath(&unk_100390E78);
        v44 = swift_getKeyPath(&unk_100390EA0);
        static Published.subscript.getter(v61, v32, v43, v44);
        swift_release(v43);
        swift_release(v44);
        sub_1000149A8((uint64_t)v61, (uint64_t)v64, &qword_100495B88);
        v45 = swift_getKeyPath(&unk_100390E78);
        v46 = swift_getKeyPath(&unk_100390EA0);
        memset(v61, 0, sizeof(v61));
        swift_retain(v32);
        static Published.subscript.setter(v61, v32, v45, v46);
        sub_1001C0D9C(v64);
        sub_1001D1FDC(v64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001D1FA0);
        return;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v39, v41, 0);
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v65 = v48;
    v66 = v14;
    v67 = v58;
    v68 = v17;
    v69 = v19;
    v70 = v18;
    v71 = 1;
    GroupActivitiesManager.postEvent(_:participantID:)((uint64_t)&v65, v19, v18);
    swift_bridgeObjectRelease_n(v18, 2);
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
}

uint64_t GroupActivitiesManager.$reaction.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_100495B98);
}

uint64_t GroupActivitiesManager.maxParticipantsCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount;
  swift_beginAccess(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t GroupActivitiesManager.hasJoined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;

  v1 = sub_100005574(&qword_100495AB8);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_100495B60);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_100495B68);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v30 - v13;
  __chkstk_darwin(v12);
  v17 = (char *)&v30 - v15;
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v18)
  {
    v19 = swift_retain(v18);
    GroupSession.state.getter(v19);
    v20 = swift_release(v18);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21(v17, 0, 1, v1, v20);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v2 + 56);
    v21((char *)&v30 - v15, 1, 1, v1, v16);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v14, enum case for GroupSession.State.joined<A>(_:), v1);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v14, 0, 1, v1);
  v22 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100014A7C((uint64_t)v17, (uint64_t)v7, &qword_100495B68);
  sub_100014A7C((uint64_t)v14, v22, &qword_100495B68);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v23((uint64_t)v7, 1, v1) == 1)
  {
    sub_100008758((uint64_t)v14, &qword_100495B68);
    sub_100008758((uint64_t)v17, &qword_100495B68);
    v24 = v23(v22, 1, v1);
    if (v24 == 1)
      v25 = &qword_100495B68;
    else
      v25 = &qword_100495B60;
    if (v24 == 1)
      v26 = -1;
    else
      v26 = 0;
  }
  else
  {
    sub_100014A7C((uint64_t)v7, (uint64_t)v11, &qword_100495B68);
    if (v23(v22, 1, v1) == 1)
    {
      sub_100008758((uint64_t)v14, &qword_100495B68);
      sub_100008758((uint64_t)v17, &qword_100495B68);
      (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
      v26 = 0;
      v25 = &qword_100495B60;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v22, v1);
      v27 = sub_10002FFB8(&qword_100495B78, &qword_100495AB8, (uint64_t)&protocol conformance descriptor for GroupSession<A>.State);
      v26 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v4, v1, v27);
      v28 = *(void (**)(char *, uint64_t))(v2 + 8);
      v28(v4, v1);
      v25 = &qword_100495B68;
      sub_100008758((uint64_t)v14, &qword_100495B68);
      sub_100008758((uint64_t)v17, &qword_100495B68);
      v28(v11, v1);
    }
  }
  sub_100008758((uint64_t)v7, v25);
  return v26 & 1;
}

uint64_t GroupActivitiesManager.isSessionEligible.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[11];
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_10048C658 != -1)
    swift_once(&qword_10048C658, sub_1000B3BEC);
  v0 = static ApplicationCapabilities.Controller.shared;
  KeyPath = swift_getKeyPath(&unk_100390EC0);
  v2 = swift_getKeyPath(&unk_100390EE8);
  static Published.subscript.getter(v12, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = v12[3];
  v4 = v12[4];
  v5 = v12[7];
  v6 = v12[9];
  v7 = (void *)v12[10];
  v8 = v13;
  v9 = v14;
  v10 = v15;
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0
    && (GroupStateObserver.isEligibleForGroupSession.getter() & 1) != 0)
  {
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);

  return 0;
}

id GroupActivitiesManager.itemProvider(with:metadata:)(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  __n128 v64;
  _QWORD v66[2];
  _QWORD *v67;
  _QWORD *v68;
  char v69[24];
  id v70[3];
  uint64_t v71;
  char v72[24];
  _QWORD *v73;

  v4 = v2;
  v7 = sub_100005574(&qword_100495AF0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD **)(v8 + 64);
  __chkstk_darwin(v7);
  v11 = (char *)v66 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    goto LABEL_2;
  v66[0] = a2;
  v66[1] = v3;
  swift_beginAccess(v2 + 2, v72, 0, 0);
  v27 = v2[5];
  v26 = v2[6];
  v67 = v2 + 2;
  v28 = sub_10000ABC8(v2 + 2, v27);
  v68 = v66;
  v29 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v31);
  v32 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 56))(v27, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v27);
  if (!v32)
  {
LABEL_12:
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v38 = type metadata accessor for Logger(0, v33);
    v18 = (id)sub_1000086B4(v38, (uint64_t)static Logger.groupActivities);
    v39 = swift_retain_n(v4, 2);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (!os_log_type_enabled(v40, v41))
    {

      swift_release_n(v4, 2);
LABEL_22:
      v62 = sub_1001CE314();
      swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v62, 0, 0);
      *(_QWORD *)v63 = 1;
      *(_BYTE *)(v63 + 8) = 4;
      swift_willThrow(v64);
      return v18;
    }
    v42 = swift_slowAlloc(22, -1);
    v68 = (_QWORD *)swift_slowAlloc(64, -1);
    v73 = v68;
    *(_DWORD *)v42 = 136446466;
    v70[0] = 0;
    v43 = sub_100005574((uint64_t *)&unk_100495BB0);
    v44 = (char *)String.init<A>(describing:)(v70, v43);
    *(_QWORD *)(v42 + 4) = sub_100019400(v44, v45, (uint64_t *)&v73);
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2082;
    v46 = v4[5];
    v47 = v4[6];
    v48 = sub_10000ABC8(v67, v46);
    v67 = v66;
    v49 = *(_QWORD *)(v46 - 8);
    __chkstk_darwin(v48);
    v51 = (char *)v66 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v49 + 16))(v51);
    v52 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 56))(v46, v47);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v46);
    if (v52)
    {
      v53 = &v52[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v52[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v70, 0, 0);
      v54 = *(_QWORD *)v53;
      if (v54)
      {
        swift_retain(v54);

        KeyPath = swift_getKeyPath(&unk_100390F08);
        v56 = swift_getKeyPath(&unk_100390F30);
        static Published.subscript.getter(&v71, v54, KeyPath, v56);
        swift_release(v54);
        swift_release(KeyPath);
        swift_release(v56);
        v57 = v71;
LABEL_21:
        v58 = v68;
        v71 = v57;
        v59 = sub_100005574(&qword_100493790);
        v60 = (char *)String.init<A>(describing:)(&v71, v59);
        v18 = v61;
        *(_QWORD *)(v42 + 14) = sub_100019400(v60, v61, (uint64_t *)&v73);
        swift_release_n(v4, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "    Cannot build itemProvider with intent=%{public}s\")\n    and player=%{public}s\")", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v58, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        goto LABEL_22;
      }

    }
    v57 = 0;
    goto LABEL_21;
  }
  v34 = &v32[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
  swift_beginAccess(&v32[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v69, 0, 0);
  v35 = *(_QWORD *)v34;
  if (!*(_QWORD *)v34)
  {

    goto LABEL_12;
  }
  swift_retain(*(_QWORD *)v34);

  v36 = swift_getKeyPath(&unk_100390F08);
  v37 = swift_getKeyPath(&unk_100390F30);
  static Published.subscript.getter(v70, v35, v36, v37);
  swift_release(v35);
  swift_release(v36);
  swift_release(v37);
  if (!v70[0])
    goto LABEL_12;

  a2 = v66[0];
LABEL_2:
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v12 = type metadata accessor for Logger(0, v10);
  v13 = sub_1000086B4(v12, (uint64_t)static Logger.groupActivities);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    v68 = v9;
    v17 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Building GroupActivity item provider", v16, 2u);
    v11 = (char *)v66 - (((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9 = v68;
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend(objc_allocWithZone((Class)NSItemProvider), "init");
  sub_100014A7C(a2, (uint64_t)v11, &qword_100495AF0);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = ((unint64_t)v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_100453D28, v21 + 8, v19 | 7);
  *(_QWORD *)(v22 + 16) = a1;
  sub_1000149A8((uint64_t)v11, v22 + v20, &qword_100495AF0);
  *(_QWORD *)(v22 + v21) = v4;
  v23 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v24 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  v25 = a1;
  swift_retain(v4);
  NSItemProvider.registerGroupActivity<A>(preparationHandler:)(&unk_100495BC8, v22, v23, v24);
  swift_release(v22);
  return v18;
}

uint64_t sub_1001C2218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_100005574(&qword_100495AF0);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001C2278, 0, 0);
}

uint64_t sub_1001C2278()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(id);

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = unk_100496514;
    v9 = (uint64_t (*)(id))((char *)&dword_100496510 + dword_100496510);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 120) = v4;
    *v4 = v0;
    v4[1] = sub_1001C2380;
    return v9(v3);
  }
  else
  {
    v6 = swift_task_alloc(48);
    *(_QWORD *)(v0 + 136) = v6;
    *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 96);
    *(_QWORD *)(v6 + 32) = 0;
    v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(_QWORD *)(v0 + 144) = v7;
    v8 = type metadata accessor for GroupActivitiesManager.Activity(0);
    *v7 = v0;
    v7[1] = sub_1001C23F4;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 80), 0, 0, 0xD00000000000001CLL, 0x80000001003B5000, sub_1001D1864, v6, v8);
  }
}

uint64_t sub_1001C2380(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 120);
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001C2580;
  }
  else
  {
    *(_QWORD *)(v4 + 160) = a1;
    v6 = sub_1001C2470;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001C23F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 144);
  v3 = *v1;
  *(_QWORD *)(v3 + 152) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001C2764, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 136));
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001C2470()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = (void *)v0[20];
  v2 = v0[13];
  sub_100014A7C(v0[12], v0[14], &qword_100495AF0);
  v2 += 16;
  swift_beginAccess(v2, v0 + 7, 0, 0);
  sub_1000244B0(v2, (uint64_t)(v0 + 2));
  v3 = dword_100496254;
  v4 = v1;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[21] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_1001C251C;
  return sub_1001BD4D8(v0[10], v0[20], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_1001C251C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001C26E4;
  else
    v3 = sub_1001C25F8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001C2580()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[23] = v0[16];
  v1 = (void *)v0[11];
  v2 = type metadata accessor for MainActor(0);
  v0[24] = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001C263C, v3, v4);
}

uint64_t sub_1001C25F8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);

  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C263C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[23];
  v2 = (void *)v0[11];
  swift_release(v0[24]);
  sub_1001C27A0(v1, v2);

  return swift_task_switch(sub_1001C2698, 0, 0);
}

uint64_t sub_1001C2698(__n128 a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 88);
  swift_willThrow(a1);

  swift_task_dealloc(*(_QWORD *)(v1 + 112));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001C26E4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 176);
  v1 = *(void **)(v0 + 88);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 192) = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001C263C, v3, v4);
}

uint64_t sub_1001C2764()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001C27A0(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  void *v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[7];
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _OWORD v32[3];
  uint64_t v33;

  v3 = (uint64_t)v2;
  *(_QWORD *)&v29[0] = a1;
  swift_errorRetain(a1);
  v5 = sub_100005574((uint64_t *)&unk_1004911F0);
  if (swift_dynamicCast(v32, v29, v5, &type metadata for SharedListening.ErrorHandling.Error, 6))
  {
    v22 = *(void **)&v32[0];
    v21 = BYTE8(v32[0]);
    swift_beginAccess(v2 + 2, &v27, 0, 0);
    v6 = v2[5];
    v7 = v2[6];
    v8 = sub_10000ABC8(v2 + 2, v6);
    v9 = *(_QWORD *)(v6 - 8);
    __chkstk_darwin(v8);
    v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    v12 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 56))(v6, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
    if (v12)
    {
      v13 = (uint64_t *)&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
      swift_beginAccess(&v12[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], &v23, 0, 0);
      v14 = *v13;
      swift_retain(v14);

    }
    else
    {
      v14 = 0;
    }
    v15 = a2;
    swift_retain(v3);
    v16 = v22;
    v17 = v21;
    sub_1001D3C90(v22, v21);
    sub_1001D43F0(a2, v3, v14, v16, v17, v28);
    sub_1000149A8((uint64_t)v28, (uint64_t)v29, &qword_100496260);
    if (*((_QWORD *)&v30 + 1))
    {
      v32[0] = v29[0];
      v32[1] = v29[1];
      v32[2] = v30;
      v33 = v31;
      sub_1000244B0(v3 + 16, (uint64_t)v24);
      v18 = v25;
      v19 = v26;
      sub_10000ABC8(v24, v25);
      (*(void (**)(_OWORD *, uint64_t, uint64_t))(v19 + 40))(v32, v18, v19);
      sub_100124404((uint64_t)v28);
      swift_release(v3);

      swift_release(v14);
      sub_1001D18B4(v16, v17);
      sub_10000682C(v24);
    }
    else
    {
      swift_release(v3);

      swift_release(v14);
      sub_1001D18B4(v16, v17);
    }
  }
}

double sub_1001C2A0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;

  v31 = a3;
  v32 = a4;
  v30 = a1;
  v5 = sub_100005574(&qword_100496268);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100495AF0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_100014A7C(a2, (uint64_t)v12, &qword_100495AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v30, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_100453F50, v22 + 8, v17 | v20 | 7);
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  sub_1000149A8((uint64_t)v12, v23 + v18, &qword_100495AF0);
  v24 = v31;
  *(_QWORD *)(v23 + v19) = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v8, v5);
  v25 = v32;
  *(_QWORD *)(v23 + v22) = v32;
  v26 = v25;
  swift_retain(v24);
  v27 = sub_1000C66A8((uint64_t)v15, (uint64_t)&unk_100496278, v23);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_1001C2C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v8 = sub_100005574(&qword_100496268);
  v7[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[16] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[17] = v10;
  v7[18] = swift_task_alloc((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v7[19] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v7[20] = v12;
  v7[21] = swift_task_alloc((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001C2C98, 0, 0);
}

uint64_t sub_1001C2C98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[20];
  v1 = v0[21];
  v3 = v0[18];
  v4 = v0[19];
  v5 = v0[16];
  v6 = v0[17];
  v7 = v0[15];
  v8 = v0[13];
  v28 = v0[12];
  sub_100014A7C(v0[11], v1, &qword_100495AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v8, v7);
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = (v2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = (v12 + v11 + 8) & ~v12;
  v14 = swift_allocObject(&unk_100453F78, v13 + v6, v9 | v12 | 7);
  v0[22] = v14;
  sub_1000149A8(v1, v14 + v10, &qword_100495AF0);
  *(_QWORD *)(v14 + v11) = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v14 + v13, v3, v7);
  v15 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v0[2] = _NSConcreteStackBlock;
  v0[6] = CFRange.init(_:);
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_1000E776C;
  v0[5] = &unk_100453F90;
  v16 = _Block_copy(v0 + 2);
  swift_retain(v28);
  v17 = objc_msgSend(v15, "initWithBlock:", v16);
  v0[23] = v17;
  _Block_release(v16);
  v18 = swift_release(v0[7]);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v18);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = (_QWORD *)v0[12];
    v21 = v20 + 2;
    swift_beginAccess(v20 + 2, v0 + 8, 0, 0);
    v22 = v20[5];
    v23 = v20[6];
    sub_10000ABC8(v21, v22);
    v24 = *(_QWORD *)(v22 - 8);
    v25 = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
    v0[24] = v25;
    (*(void (**)(void))(v24 + 16))();
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
    v0[25] = v26;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v22);
    v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100496520 + dword_100496520);
    v27 = (_QWORD *)swift_task_alloc(unk_100496524);
    v0[26] = v27;
    *v27 = v0;
    v27[1] = sub_1001C2F18;
    return v29((uint64_t)v17, (uint64_t)sub_1001D1CA4, v14, v26);
  }
  return result;
}

uint64_t sub_1001C2F18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001C2FD8;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v5);
    v4 = sub_1001C2F8C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001C2F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);

  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C2FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 192);

  swift_task_dealloc(v1);
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 224) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001C3050, v3, v4);
}

uint64_t sub_1001C3050()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;

  v1 = v0[27];
  v2 = (void *)v0[14];
  swift_release(v0[28]);
  sub_1001C27A0(v1, v2);
  return swift_task_switch(sub_1001C30A8, 0, 0);
}

uint64_t sub_1001C30A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 176);

  swift_release(v2);
  swift_errorRelease(v1);
  v3 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001C3100(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v29 = a4;
  v30 = a1;
  v31 = a3;
  v5 = sub_100005574(&qword_100496268);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100495AF0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_100014A7C(a2, (uint64_t)v12, &qword_100495AF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
  v17 = *(unsigned __int8 *)(v10 + 80);
  v18 = (v17 + 40) & ~v17;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (char *)swift_allocObject(&unk_100453FC8, v21 + v7, v17 | v20 | 7);
  *((_QWORD *)v22 + 2) = 0;
  *((_QWORD *)v22 + 3) = 0;
  v23 = v30;
  *((_QWORD *)v22 + 4) = v30;
  sub_1000149A8((uint64_t)v12, (uint64_t)&v22[v18], &qword_100495AF0);
  v24 = v31;
  *(_QWORD *)&v22[v19] = v31;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v22[v21], v8, v5);
  v25 = v23;
  swift_retain(v24);
  v26 = sub_1001AD214((uint64_t)v15, (uint64_t)&unk_100496288, (uint64_t)v22);
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1001C32E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = sub_100005574(&qword_100495AF0);
  v7[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[15] = swift_task_alloc(v9);
  v7[16] = swift_task_alloc(v9);
  return swift_task_switch(sub_1001C3378, 0, 0);
}

uint64_t sub_1001C3378()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t **v5;

  v1 = v0[12];
  v2 = (void *)v0[10];
  sub_100014A7C(v0[11], v0[14], &qword_100495AF0);
  v1 += 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_1000244B0(v1, (uint64_t)(v0 + 2));
  v3 = dword_100496254;
  v4 = v2;
  v5 = (uint64_t **)swift_task_alloc(v3);
  v0[17] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_1001C3424;
  return sub_1001BD4D8(v0[16], v0[10], v0[14], (uint64_t)(v0 + 2));
}

uint64_t sub_1001C3424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001C3520;
  else
    v3 = sub_1001C3488;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001C3488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  sub_100082248(v1, v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = sub_100005574(&qword_100496268);
  CheckedContinuation.resume(returning:)(v2, v4);
  sub_100006798(v1, type metadata accessor for GroupActivitiesManager.Activity);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C3520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C3568(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for GroupActivityActivationResult(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[11] = swift_task_alloc(v5);
  v2[12] = swift_task_alloc(v5);
  v2[13] = swift_task_alloc(v5);
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2[14] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[15] = v7;
  v2[16] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001C360C, 0, 0);
}

uint64_t sub_1001C360C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v2 + 136) = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "GroupActivitiesManager prepareForActivation", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  if ((GroupActivitiesManager.isSessionEligible.getter() & 1) != 0)
  {
    v8 = *(_QWORD *)(v2 + 64);
    KeyPath = swift_getKeyPath(&unk_100390DE8);
    v10 = swift_getKeyPath(&unk_100390E10);
    static Published.subscript.getter((_QWORD *)(v2 + 49), v8, KeyPath, v10);
    swift_release(v10);
    swift_release(KeyPath);
    if ((*(_BYTE *)(v2 + 49) & 1) == 0)
    {
      v20 = *(_OWORD **)(v2 + 128);
      v21 = *(_QWORD *)(v2 + 112);
      v22 = *(_QWORD *)(v2 + 64);
      v20[2] = 0u;
      v20[3] = 0u;
      *v20 = 0u;
      v20[1] = 0u;
      v23 = (char *)v20 + *(int *)(v21 + 32);
      v24 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
      sub_100008758((uint64_t)v20, &qword_100495AF8);
      swift_beginAccess(v22 + 16, v2 + 16, 0, 0);
      sub_1000244B0(v22 + 16, (uint64_t)v20);
      v25 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.prepareForActivation()[1]);
      *(_QWORD *)(v2 + 144) = v25;
      v26 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
      *v25 = v2;
      v25[1] = sub_1001C398C;
      return GroupActivity.prepareForActivation()(*(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), v26);
    }
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v31 = v15;
      *(_DWORD *)v14 = 136446210;
      v16 = 2;
      *(_QWORD *)(v2 + 40) = 2;
      *(_BYTE *)(v2 + 48) = 4;
      v17 = (char *)String.init<A>(describing:)(v2 + 40, &type metadata for SharedListening.ErrorHandling.Error);
      v19 = v18;
      *(_QWORD *)(v14 + 4) = sub_100019400(v17, v18, &v31);
      swift_bridgeObjectRelease(v19);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Prepare error=%{public}s", (uint8_t *)v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      v16 = 2;
    }
  }
  else
  {
    v16 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 120) + 56))(*(_QWORD *)(v2 + 56), v16, 4, *(_QWORD *)(v2 + 112));
  v28 = *(_QWORD *)(v2 + 96);
  v29 = *(_QWORD *)(v2 + 104);
  v30 = *(_QWORD *)(v2 + 88);
  swift_task_dealloc(*(_QWORD *)(v2 + 128));
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1001C398C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_1001C39E0, 0, 0);
}

uint64_t sub_1001C39E0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 16);
  v2 = v1(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 96);
  if (v5)
  {
    v8 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v43 = v11;
    *(_DWORD *)v10 = 136446210;
    v1(v7, v6, v9);
    v12 = (char *)String.init<A>(reflecting:)(v7, v9);
    v14 = v13;
    *(_QWORD *)(v10 + 4) = sub_100019400(v12, v13, &v43);
    swift_bridgeObjectRelease(v14);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(v6, v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "User choice=%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 80) + 8);
    v15(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  }

  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 72);
  v19 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 80) + 104);
  v19(v17, enum case for GroupActivityActivationResult.activationPreferred(_:), v18);
  LOBYTE(v16) = static GroupActivityActivationResult.== infix(_:_:)(v16, v17);
  v15(v17, v18);
  v21 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 104);
  v23 = *(_QWORD *)(v0 + 112);
  if ((v16 & 1) != 0)
  {
    v40 = *(_QWORD *)(v0 + 72);
    v42 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 56);
    v25 = *(_QWORD *)(v0 + 64);
    KeyPath = swift_getKeyPath(&unk_100390DE8);
    v41 = v23;
    v27 = swift_getKeyPath(&unk_100390E10);
    static Published.subscript.getter((_QWORD *)(v0 + 50), v25, KeyPath, v27);
    swift_release(v27);
    swift_release(KeyPath);
    v28 = *(_BYTE *)(v0 + 50);
    v29 = swift_getKeyPath(&unk_100390DE8);
    v30 = swift_getKeyPath(&unk_100390E10);
    *(_BYTE *)(v0 + 51) = 1;
    swift_retain(v25);
    static Published.subscript.setter(v0 + 51, v25, v29, v30);
    sub_1001C095C(v28);
    v15(v22, v40);
    sub_100082248(v20, v24, type metadata accessor for GroupActivitiesManager.Activity);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v24, 0, 4, v41);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 72);
    v33 = *(_QWORD *)(v0 + 56);
    v19(v31, enum case for GroupActivityActivationResult.activationDisabled(_:), v32);
    v34 = static GroupActivityActivationResult.== infix(_:_:)(v22, v31);
    v15(v31, v32);
    v15(v22, v32);
    if ((v34 & 1) != 0)
      v35 = 3;
    else
      v35 = 4;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v33, v35, 4, v23);
  }
  sub_100006798(v20, type metadata accessor for GroupActivitiesManager.Activity);
  v36 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 104);
  v38 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v37);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C3D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v25[24];

  v1 = v0;
  v2 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = sub_100005574(&qword_100490F10);
  __chkstk_darwin(v5);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for Signpost(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v13 = type metadata accessor for Logger(0, v10);
  v14 = sub_1000086B4(v13, (uint64_t)static Logger.groupActivities);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "beginMeasuringInitiationTime", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  if (qword_10048CF70 != -1)
    swift_once(&qword_10048CF70, sub_1001F880C);
  v18 = (id)static OS_os_log.sharePlay;
  swift_retain(v1);
  Signpost.init(name:object:log:)((uint64_t)"InitiationToFirstAudioFrame", 27, 2, v1, v18, v12);
  Signpost.begin(dso:_:_:)((uint64_t)&_mh_execute_header, (uint64_t)"enableTelemetry=YES", 19, 2, (uint64_t)_swiftEmptyArrayStorage);
  sub_100082248((uint64_t)v12, (uint64_t)v7, type metadata accessor for Signpost);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v19 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v25, 33, 0);
  sub_100129EBC((uint64_t)v7, v19, &qword_100490F10);
  v20 = swift_endAccess(v25);
  Date.init()(v20);
  sub_100006798((uint64_t)v12, type metadata accessor for Signpost);
  v21 = type metadata accessor for Date(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 0, 1, v21);
  v22 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v22, v25, 33, 0);
  sub_100129EBC((uint64_t)v4, v22, &qword_100490730);
  return swift_endAccess(v25);
}

uint64_t sub_1001C4034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  v7 = *(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8);
  v6[14] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v6[15] = v8;
  v6[16] = swift_task_alloc((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[17] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[18] = v10;
  v6[19] = v11;
  return swift_task_switch(sub_1001C40CC, v10, v11);
}

uint64_t sub_1001C40CC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  __n128 v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (void *)v0[11];
  if (v1)
  {
    v2 = unk_100496514;
    v25 = (uint64_t (*)(uint64_t))((char *)&dword_100496510 + dword_100496510);
    v3 = v1;
    v4 = (_QWORD *)swift_task_alloc(v2);
    v0[20] = v4;
    *v4 = v0;
    v4[1] = sub_1001C4350;
    return v25((uint64_t)v3);
  }
  else
  {
    v6 = v0[15];
    v7 = v0[16];
    v8 = v0[14];
    v9 = v0[12];
    sub_100082248(v0[13], v7, type metadata accessor for GroupActivitiesManager.Activity);
    v10 = *(unsigned __int8 *)(v8 + 80);
    v11 = (v10 + 24) & ~v10;
    v12 = swift_allocObject(&unk_100454198, v11 + v6, v10 | 7);
    v0[22] = v12;
    *(_QWORD *)(v12 + 16) = v9;
    sub_1000648AC(v7, v12 + v11, type metadata accessor for GroupActivitiesManager.Activity);
    v13 = objc_allocWithZone((Class)ICLiveLinkIdentity);
    v0[2] = _NSConcreteStackBlock;
    v0[6] = CFRange.init(_:);
    v0[7] = 0;
    v0[3] = 1107296256;
    v0[4] = sub_1000E776C;
    v0[5] = &unk_1004541B0;
    v14 = _Block_copy(v0 + 2);
    swift_retain(v9);
    v15 = objc_msgSend(v13, "initWithBlock:", v14);
    v0[23] = v15;
    _Block_release(v14);
    v16 = swift_release(v0[7]);
    result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v16);
    if ((result & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v17 = (_QWORD *)v0[12];
      v18 = v17 + 2;
      swift_beginAccess(v17 + 2, v0 + 8, 0, 0);
      v19 = v17[5];
      v20 = v17[6];
      sub_10000ABC8(v18, v19);
      v21 = *(_QWORD *)(v19 - 8);
      v22 = swift_task_alloc((*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      v0[24] = v22;
      (*(void (**)(void))(v21 + 16))();
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v19, v20);
      v0[25] = v23;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v19);
      v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100496520 + dword_100496520);
      v24 = (_QWORD *)swift_task_alloc(unk_100496524);
      v0[26] = v24;
      *v24 = v0;
      v24[1] = sub_1001C43F0;
      return v26((uint64_t)v15, (uint64_t)sub_1001D2604, v12, v23);
    }
  }
  return result;
}

uint64_t sub_1001C4350(uint64_t a1)
{
  uint64_t v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t **v7;

  v4 = (*v2)[20];
  v5 = *v2;
  v5[21] = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1001C4670, v5[18], v5[19]);
  v5[28] = a1;
  v7 = (uint64_t **)swift_task_alloc(dword_10049646C);
  v5[29] = (uint64_t)v7;
  *v7 = v5;
  v7[1] = (uint64_t *)sub_1001C45DC;
  return sub_1001C4784(a1, v5[13]);
}

uint64_t sub_1001C43F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_1001C44B0;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 192);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = *(_QWORD *)(v2 + 152);
    v6 = sub_1001C4464;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001C4464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 136);

  swift_release(v1);
  swift_release(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C44B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(void **)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(void **)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(v2);
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v8 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 240), v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  v9 = *(_BYTE *)(v0 + 240);
  v10 = swift_getKeyPath(&unk_100390DE8);
  v11 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 241) = 0;
  swift_retain(v6);
  static Published.subscript.setter(v0 + 241, v6, v10, v11);
  sub_1001C095C(v9);
  sub_1001C27A0(v1, 0);

  swift_release(v4);
  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C45DC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 232));
  return swift_task_switch(sub_1001C4628, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1001C4628()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 136));

  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C4670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(void **)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 136));
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v5 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 242), v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = *(_BYTE *)(v0 + 242);
  v7 = swift_getKeyPath(&unk_100390DE8);
  v8 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 243) = 0;
  swift_retain(v2);
  static Published.subscript.setter(v0 + 243, v2, v7, v8);
  sub_1001C095C(v6);
  v9 = v3;
  sub_1001C27A0(v1, v3);

  swift_errorRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C4784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3[29] = a2;
  v3[30] = v2;
  v3[28] = a1;
  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v3[31] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[32] = swift_task_alloc(v5);
  v3[33] = swift_task_alloc(v5);
  v3[34] = swift_task_alloc(v5);
  return swift_task_switch(sub_1001C4800, 0, 0);
}

uint64_t sub_1001C4800()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 224);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "sharedListeningProperties");
    *(_QWORD *)(v0 + 280) = v3;
    if (v3)
    {
      if (qword_10048C950 != -1)
        swift_once(&qword_10048C950, sub_1001BF440);
      v4 = v0 + 16;
      v5 = qword_100495A60;
      *(_QWORD *)(v0 + 56) = v0 + 200;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1001C4B40;
      v6 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v7 = (_QWORD *)(v0 + 80);
      v7[1] = 0x40000000;
      v7[2] = sub_1000E5810;
      v7[3] = &unk_1004541D8;
      v7[4] = v6;
      objc_msgSend(v2, "getRepresentativeObjectWithProperties:completion:", v5, v7);
      return swift_continuation_await(v4);
    }

  }
  v9 = *(_QWORD *)(v0 + 240);
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v11 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 329), v9, KeyPath, v11);
  swift_release(v11);
  swift_release(KeyPath);
  v12 = *(_BYTE *)(v0 + 329);
  v13 = swift_getKeyPath(&unk_100390DE8);
  v14 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 328) = 0;
  swift_retain(v9);
  static Published.subscript.setter(v0 + 328, v9, v13, v14);
  sub_1001C095C(v12);
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v16 = *(void **)(v0 + 224);
  v17 = type metadata accessor for Logger(0, v15);
  sub_1000086B4(v17, (uint64_t)static Logger.groupActivities);
  v18 = v16;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = *(_QWORD *)(v0 + 224);
    v22 = swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v30 = v23;
    *(_DWORD *)v22 = 136446210;
    *(_QWORD *)(v0 + 208) = v21;
    v24 = v18;
    v25 = sub_100005574((uint64_t *)&unk_100495BB0);
    v26 = (char *)String.init<A>(reflecting:)(v0 + 208, v25);
    *(_QWORD *)(v22 + 4) = sub_100019400(v26, v27, &v30);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Cannot activate intent=%{public}s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {

  }
  v28 = *(_QWORD *)(v0 + 264);
  v29 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C4B40()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 288) = v1;
  if (v1)
    v2 = sub_1001C50AC;
  else
    v2 = sub_1001C4BA0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C4BA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;

  v3 = (void *)v2[25];
  v2[37] = v3;
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v4 = type metadata accessor for Logger(0, a2);
  v2[38] = sub_1000086B4(v4, (uint64_t)static Logger.groupActivities);
  v5 = v3;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v42 = v9;
    *(_DWORD *)v8 = 136446210;
    v2[24] = v3;
    v10 = v5;
    v11 = sub_100005574(&qword_100496470);
    v12 = (char *)String.init<A>(describing:)(v2 + 24, v11);
    *(_QWORD *)(v8 + 4) = sub_100019400(v12, v13, &v42);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Activity starting item=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

  }
  v14 = v2[34];
  v15 = v2[30];
  sub_100082248(v2[29], v14, type metadata accessor for GroupActivitiesManager.Activity);
  sub_100008758(v14, &qword_100495AF8);
  v15 += 16;
  swift_beginAccess(v15, v2 + 21, 0, 0);
  sub_1000244B0(v15, v14);
  if (v5)
  {
    v16 = objc_msgSend(v5, "innermostModelObject");
    v17 = type metadata accessor for CodableModelObjectIdentity();
    v18 = swift_allocObject(v17, 24, 7);
    *(_QWORD *)(v18 + 16) = v16;
  }
  else
  {
    v19 = type metadata accessor for CodableModelObjectIdentity();
    v20 = swift_allocObject(v19, 24, 7);
    swift_deallocPartialClassInstance(v20, v19, 24, 7);
    v18 = 0;
  }
  v22 = v2[34];
  v21 = (void *)v2[35];
  swift_release(*(_QWORD *)(v22 + 56));
  *(_QWORD *)(v22 + 56) = v18;
  v23 = type metadata accessor for CodableListeningProperties();
  v24 = swift_allocObject(v23, 24, 7);
  *(_QWORD *)(v24 + 16) = v21;
  v25 = *(_QWORD *)(v22 + 48);
  v26 = v21;
  swift_release(v25);
  *(_QWORD *)(v22 + 48) = v24;
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    v31 = v2[33];
    v30 = v2[34];
    v32 = v2[31];
    v33 = swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v42 = v34;
    *(_DWORD *)v33 = 136446210;
    swift_beginAccess(v30, v2 + 15, 0, 0);
    sub_100082248(v30, v31, type metadata accessor for GroupActivitiesManager.Activity);
    v35 = (char *)String.init<A>(describing:)(v31, v32);
    *(_QWORD *)(v33 + 4) = sub_100019400(v35, v36, &v42);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "🚀 Activiting activity=%{public}s", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v33, -1, -1);
  }

  v37 = v2[34];
  v38 = v2[32];
  swift_beginAccess(v37, v2 + 18, 0, 0);
  sub_100082248(v37, v38, type metadata accessor for GroupActivitiesManager.Activity);
  v39 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v2[39] = v39;
  v40 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v39 = v2;
  v39[1] = sub_1001C4FC4;
  return GroupActivity.activate()(v2[31], v40);
}

uint64_t sub_1001C4FC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  sub_100006798(*(_QWORD *)(v2 + 256), type metadata accessor for GroupActivitiesManager.Activity);
  if (v0)
    v4 = sub_1001C546C;
  else
    v4 = sub_1001C5038;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001C5038()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(void **)(v0 + 224);

  sub_100006798(v2, type metadata accessor for GroupActivitiesManager.Activity);
  v4 = *(_QWORD *)(v0 + 264);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C50AC(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38[2];

  v2 = v1[36];
  swift_willThrow(a1);
  swift_errorRelease(v2);
  v1[37] = 0;
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v4 = type metadata accessor for Logger(0, v3);
  v5 = sub_1000086B4(v4, (uint64_t)static Logger.groupActivities);
  v1[38] = v5;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v38[0] = v9;
    *(_DWORD *)v8 = 136446210;
    v1[24] = 0;
    v10 = sub_100005574(&qword_100496470);
    v11 = (char *)String.init<A>(describing:)(v1 + 24, v10);
    *(_QWORD *)(v8 + 4) = sub_100019400(v11, v12, v38);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Activity starting item=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v13 = v1[34];
  v14 = v1[30];
  sub_100082248(v1[29], v13, type metadata accessor for GroupActivitiesManager.Activity);
  sub_100008758(v13, &qword_100495AF8);
  v14 += 16;
  swift_beginAccess(v14, v1 + 21, 0, 0);
  sub_1000244B0(v14, v13);
  v15 = type metadata accessor for CodableModelObjectIdentity();
  v16 = swift_allocObject(v15, 24, 7);
  swift_deallocPartialClassInstance(v16, v15, 24, 7);
  v18 = v1[34];
  v17 = (void *)v1[35];
  swift_release(*(_QWORD *)(v18 + 56));
  *(_QWORD *)(v18 + 56) = 0;
  v19 = type metadata accessor for CodableListeningProperties();
  v20 = swift_allocObject(v19, 24, 7);
  *(_QWORD *)(v20 + 16) = v17;
  v21 = *(_QWORD *)(v18 + 48);
  v22 = v17;
  swift_release(v21);
  *(_QWORD *)(v18 + 48) = v20;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v27 = v1[33];
    v26 = v1[34];
    v28 = v1[31];
    v29 = swift_slowAlloc(12, -1);
    v30 = swift_slowAlloc(32, -1);
    v38[0] = v30;
    *(_DWORD *)v29 = 136446210;
    swift_beginAccess(v26, v1 + 15, 0, 0);
    sub_100082248(v26, v27, type metadata accessor for GroupActivitiesManager.Activity);
    v31 = (char *)String.init<A>(describing:)(v27, v28);
    *(_QWORD *)(v29 + 4) = sub_100019400(v31, v32, v38);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "🚀 Activiting activity=%{public}s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    swift_slowDealloc(v29, -1, -1);
  }

  v33 = v1[34];
  v34 = v1[32];
  swift_beginAccess(v33, v1 + 18, 0, 0);
  sub_100082248(v33, v34, type metadata accessor for GroupActivitiesManager.Activity);
  v35 = (_QWORD *)swift_task_alloc(async function pointer to GroupActivity.activate()[1]);
  v1[39] = v35;
  v36 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *v35 = v1;
  v35[1] = sub_1001C4FC4;
  return GroupActivity.activate()(v1[31], v36);
}

uint64_t sub_1001C546C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 320);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 320);
    v6 = *(void **)(v0 + 296);
    v7 = *(void **)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 272);
    v8 = *(void **)(v0 + 224);
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v23 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 216) = v5;
    swift_errorRetain(v5);
    v11 = sub_100005574((uint64_t *)&unk_1004911F0);
    v12 = (char *)String.init<A>(describing:)(v0 + 216, v11);
    *(_QWORD *)(v9 + 4) = sub_100019400(v12, v13, &v23);
    swift_bridgeObjectRelease();
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activation failed=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v5);
    v14 = v22;
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 320);
    v16 = *(void **)(v0 + 296);
    v17 = *(_QWORD *)(v0 + 272);
    v18 = *(void **)(v0 + 224);

    swift_errorRelease(v15);
    swift_errorRelease(v15);
    swift_errorRelease(v15);

    v14 = v17;
  }
  sub_100006798(v14, type metadata accessor for GroupActivitiesManager.Activity);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001C5668(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100082248(a3, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for GroupActivitiesManager.Activity);
  v13 = *(unsigned __int8 *)(v7 + 80);
  v14 = (v13 + 48) & ~v13;
  v15 = (_QWORD *)swift_allocObject(&unk_100454200, v14 + v8, v13 | 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = a2;
  v15[5] = a1;
  sub_1000648AC((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v15 + v14, type metadata accessor for GroupActivitiesManager.Activity);
  v16 = a1;
  swift_retain(a2);
  v17 = sub_1000C66A8((uint64_t)v11, (uint64_t)&unk_100496480, (uint64_t)v15);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_1001C57B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_10049646C);
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_10000F894;
  return sub_1001C4784(a5, a6);
}

uint64_t GroupActivitiesManager.sessionForReactionAssociation()()
{
  uint64_t v0;

  if ((GroupActivitiesManager.hasJoined.getter() & 1) != 0)
    return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
  else
    return 0;
}

void sub_1001C5848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89[3];

  v1 = v0;
  v86 = sub_100005574(&qword_100496460);
  __chkstk_darwin(v86);
  v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_100495C28);
  v5 = __chkstk_darwin(v4);
  v85 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v87 = (uint64_t)&v78 - v8;
  v9 = __chkstk_darwin(v7);
  v88 = (uint64_t)&v78 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v78 - v11;
  v13 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v78 - v19;
  v21 = __chkstk_darwin(v18);
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v78 - v23;
  __chkstk_darwin(v22);
  v27 = (char *)&v78 - v26;
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (!v28)
    return;
  v82 = v25;
  v84 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v29 = swift_retain(v28);
  GroupSession.activity.getter(v29);
  swift_release(v28);
  v30 = *((_QWORD *)v27 + 6);
  if (!v30)
  {
    sub_100006798((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
    return;
  }
  v81 = v3;
  v31 = *(id *)(v30 + 16);
  sub_100006798((uint64_t)v27, type metadata accessor for GroupActivitiesManager.Activity);
  v32 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v33 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, v89, 33, 0);
  v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48);
  if (!v83(v32, 1, v13, v33))
  {
    v34 = type metadata accessor for CodableListeningProperties();
    v35 = swift_allocObject(v34, 24, 7);
    *(_QWORD *)(v35 + 16) = v31;
    v80 = v17;
    v36 = v24;
    v37 = *(_QWORD *)(v32 + 48);
    v38 = v31;
    v39 = v37;
    v24 = v36;
    v17 = v80;
    swift_release(v39);
    *(_QWORD *)(v32 + 48) = v35;
  }
  swift_endAccess(v89);
  if ((GroupActivitiesManager.hasJoined.getter() & 1) == 0)
    goto LABEL_16;
  sub_100014A7C(v32, (uint64_t)v12, &qword_100495C28);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v83)(v12, 1, v13) == 1)
  {

    sub_100008758((uint64_t)v12, &qword_100495C28);
    return;
  }
  sub_1000648AC((uint64_t)v12, (uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
  v40 = v88;
  sub_100082248((uint64_t)v24, v88, type metadata accessor for GroupActivitiesManager.Activity);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56);
  v42 = 1;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v41)(v40, 0, 1, v13);
  v44 = *(_QWORD *)(v1 + v84);
  v79 = v1;
  if (v44)
  {
    v45 = swift_retain(v44);
    v46 = v87;
    GroupSession.activity.getter(v45);
    v43 = swift_release(v44);
    v42 = 0;
  }
  else
  {
    v46 = v87;
  }
  v41(v46, v42, 1, v13, v43);
  v47 = (uint64_t)v81;
  v48 = (uint64_t)&v81[*(int *)(v86 + 48)];
  v49 = v88;
  sub_100014A7C(v88, (uint64_t)v81, &qword_100495C28);
  sub_100014A7C(v46, v48, &qword_100495C28);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v83;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v83)(v47, 1, v13) == 1)
  {
    sub_100008758(v46, &qword_100495C28);
    sub_100008758(v49, &qword_100495C28);
    if (v50(v48, 1, v13) == 1)
    {
      sub_100008758((uint64_t)v81, &qword_100495C28);
LABEL_15:
      sub_100006798((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_16:

      return;
    }
    v53 = &qword_100496460;
  }
  else
  {
    v51 = v47;
    v52 = v85;
    sub_100014A7C(v51, v85, &qword_100495C28);
    if (v50(v48, 1, v13) == 1)
    {
      v53 = &qword_100496460;
    }
    else
    {
      v54 = v48;
      v55 = v82;
      sub_1000648AC(v54, v82, type metadata accessor for GroupActivitiesManager.Activity);
      v56 = *(_QWORD *)(v52 + 56);
      if (v56)
      {
        v57 = *(_QWORD *)(v55 + 56);
        if (v57)
        {
          v58 = *(void **)(v57 + 16);
          v59 = v55;
          v60 = *(id *)(v56 + 16);
          v61 = v58;
          v62 = objc_msgSend(v60, "identifiers");
          v63 = v24;
          v64 = objc_msgSend(v61, "identifiers");
          LODWORD(v86) = objc_msgSend(v62, "intersectsSet:", v64);

          v24 = v63;
          sub_100006798(v59, type metadata accessor for GroupActivitiesManager.Activity);
          sub_100008758(v87, &qword_100495C28);
          sub_100008758(v88, &qword_100495C28);
          sub_100006798(v85, type metadata accessor for GroupActivitiesManager.Activity);
          sub_100008758((uint64_t)v81, &qword_100495C28);
          if ((v86 & 1) != 0)
            goto LABEL_15;
          goto LABEL_28;
        }
      }
      sub_100006798(v55, type metadata accessor for GroupActivitiesManager.Activity);
      v53 = &qword_100495C28;
    }
    sub_100008758(v87, &qword_100495C28);
    sub_100008758(v49, &qword_100495C28);
    sub_100006798(v52, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_100008758((uint64_t)v81, v53);
LABEL_28:
  v66 = v13;
  v67 = *(_QWORD *)(v79 + v84);
  if (v67)
  {
    sub_100082248((uint64_t)v24, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    swift_retain(v67);
    GroupSession.activity.setter(v20);
    swift_release(v67);
  }
  v68 = v31;
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v69 = type metadata accessor for Logger(0, v65);
  sub_1000086B4(v69, (uint64_t)static Logger.groupActivities);
  v70 = sub_100082248((uint64_t)v24, (uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  v71 = Logger.logObject.getter(v70);
  v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    v89[0] = v74;
    *(_DWORD *)v73 = 136446210;
    sub_100082248((uint64_t)v17, (uint64_t)v20, type metadata accessor for GroupActivitiesManager.Activity);
    v75 = (char *)String.init<A>(describing:)(v20, v66);
    v77 = v76;
    *(_QWORD *)(v73 + 4) = sub_100019400(v75, v76, v89);
    swift_bridgeObjectRelease(v77);
    sub_100006798((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Updating session activity=%{public}s", (uint8_t *)v73, 0xCu);
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1, -1);
    swift_slowDealloc(v73, -1, -1);

  }
  else
  {

    sub_100006798((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity);
  }
  sub_100006798((uint64_t)v24, type metadata accessor for GroupActivitiesManager.Activity);
}

void (*sub_1001C600C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, a1, 33, 0);
  return sub_1001C6054;
}

void sub_1001C6054(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1001C5848();
}

void sub_1001C6084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  __n128 v65;
  __n128 v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  __n128 v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  __n128 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t KeyPath;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char v180[8];
  id v181;
  uint64_t v182;

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v173 = *(_QWORD *)(v2 - 8);
  v174 = v2;
  __chkstk_darwin(v2);
  v172 = (char *)&v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_1004962A0);
  v176 = *(_QWORD *)(v4 - 8);
  v177 = v4;
  __chkstk_darwin(v4);
  v175 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_100005574(&qword_1004962A8);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_100005574(&qword_1004962B0);
  v170 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = sub_100005574(&qword_1004962B8);
  v158 = *(_QWORD *)(v160 - 8);
  __chkstk_darwin(v160);
  v157 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100005574(&qword_1004962C0);
  v161 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v159 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_100005574(&qword_1004962C8);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v163 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574((uint64_t *)&unk_1004962D0);
  __chkstk_darwin(v11);
  v13 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100005574(&qword_100493730);
  v150 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v15 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_100005574(&qword_1004962E0);
  v152 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v151 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_100005574(&qword_1004962E8);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_100495C28);
  __chkstk_darwin(v18);
  v21 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v22 = type metadata accessor for Logger(0, v19);
  sub_1000086B4(v22, (uint64_t)static Logger.groupActivities);
  v23 = swift_retain_n(v0, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v27 = (void *)swift_slowAlloc(32, -1);
    v181 = v27;
    *(_DWORD *)v26 = 136446210;
    v182 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    swift_retain(v182);
    v28 = sub_100005574(&qword_100496348);
    v29 = (char *)String.init<A>(reflecting:)(&v182, v28);
    v31 = v30;
    *(_QWORD *)(v26 + 4) = sub_100019400(v29, v30, (uint64_t *)&v181);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "📲 Receiving a new session=%{public}s", (uint8_t *)v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v32 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
  if (v32)
  {
    v179 = swift_retain(v32);
    GroupSession.activity.getter(v179);
    v33 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v21, 0, 1, v33);
    v35 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v181, 33, 0);
    sub_1001D2014((uint64_t)v21, v35, &qword_100495C28);
    swift_endAccess(&v181);
    sub_1001C5848();
    sub_100008758((uint64_t)v21, &qword_100495C28);
    v36 = sub_1001C600C((uint64_t)&v182);
    v38 = v37;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v37, 1, v33))
    {
      swift_beginAccess(v1 + 16, v180, 0, 0);
      sub_1000244B0(v1 + 16, (uint64_t)&v181);
      sub_100129EBC((uint64_t)&v181, v38, &qword_100495AF8);
    }
    v36((uint64_t)&v182, 0);
    v39 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v40 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v41 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v39 = xmmword_100384A50;
    *(_BYTE *)(v39 + 16) = 0;
    sub_1001CE56C(v40, v41);
    if (qword_10048C658 != -1)
      swift_once(&qword_10048C658, sub_1000B3BEC);
    swift_beginAccess(static ApplicationCapabilities.Controller.shared+ OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities, &v181, 33, 0);
    v42 = sub_100005574((uint64_t *)&unk_100490920);
    Published.projectedValue.getter(v42);
    swift_endAccess(&v181);
    v43 = sub_10002FFB8((unint64_t *)&unk_100493838, &qword_100493730, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v44 = sub_1001D2058();
    v45 = v151;
    v46 = v178;
    Publisher<>.removeDuplicates()(v178, v43, v44);
    (*(void (**)(char *, unint64_t))(v150 + 8))(v15, v46);
    v47 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
    v181 = (id)static OS_dispatch_queue.main.getter(v47, v48, v49, v50, v51, v52, v53, v54, v148, v149, v150, v151, v152, v153, v154);
    v55 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v149 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
    v149(v13, 1, 1, v55);
    v56 = sub_10002FFB8((unint64_t *)&unk_1004962F8, &qword_1004962E0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v178 = sub_1001829E4();
    v57 = v154;
    v58 = v153;
    Publisher.receive<A>(on:options:)(&v181, v13, v153, v47, v56);
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_1004962D0);

    (*(void (**)(char *, uint64_t))(v152 + 8))(v45, v58);
    v59 = swift_allocObject(&unk_100453FF0, 24, 7);
    swift_weakInit(v59 + 16, v1);
    v60 = sub_10002FFB8(&qword_100496308, &qword_1004962E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v61 = v156;
    v62 = Publisher<>.sink(receiveValue:)(sub_1001D20C0, v59, v156, v60);
    v63 = swift_release(v59);
    (*(void (**)(char *, uint64_t, __n128))(v155 + 8))(v57, v61, v63);
    v64 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions;
    v65 = swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v181, 33, 0);
    AnyCancellable.store(in:)(v64, v65);
    swift_endAccess(&v181);
    v66 = swift_release(v62);
    v67 = v157;
    v68 = GroupSession.$activeParticipants.getter(v66);
    v69 = v47;
    v181 = (id)static OS_dispatch_queue.main.getter(v68, v70, v71, v72, v73, v74, v75, v76, v47, v149, v150, v151, v152, v153, v154);
    v150 = v55;
    v77 = v149;
    v149(v13, 1, 1, v55);
    v78 = sub_10002FFB8(&qword_100496310, &qword_1004962B8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v79 = v159;
    v80 = v160;
    Publisher.receive<A>(on:options:)(&v181, v13, v160, v69, v78);
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_1004962D0);

    (*(void (**)(char *, uint64_t))(v158 + 8))(v67, v80);
    v81 = sub_10002FFB8(&qword_100496318, &qword_1004962C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v82 = v163;
    v83 = v162;
    Publisher.map<A>(_:)(sub_1001C7D04, 0, v162, &type metadata for Int, v81);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v79, v83);
    v84 = swift_allocObject(&unk_100453FF0, 24, 7);
    swift_weakInit(v84 + 16, v1);
    v85 = sub_10002FFB8(&qword_100496320, &qword_1004962C8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v86 = v165;
    v87 = Publisher<>.sink(receiveValue:)(sub_1001D20C8, v84, v165, v85);
    v88 = swift_release(v84);
    (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v82, v86, v88);
    v156 = v64;
    v89 = swift_beginAccess(v64, &v181, 33, 0);
    AnyCancellable.store(in:)(v64, v89);
    swift_endAccess(&v181);
    v90 = swift_release(v87);
    v91 = v166;
    v92 = v179;
    v93 = GroupSession.$state.getter(v90);
    v94 = v148;
    v181 = (id)static OS_dispatch_queue.main.getter(v93, v95, v96, v97, v98, v99, v100, v101, v148, v149, v150, v151, v152, v153, v154);
    v77(v13, 1, 1, v55);
    v102 = sub_10002FFB8(&qword_100496328, &qword_1004962A8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v103 = v169;
    v104 = v168;
    v105 = v94;
    Publisher.receive<A>(on:options:)(&v181, v13, v168, v94, v102);
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_1004962D0);

    (*(void (**)(char *, uint64_t))(v167 + 8))(v91, v104);
    v106 = swift_allocObject(&unk_100453FF0, 24, 7);
    swift_weakInit(v106 + 16, v1);
    v107 = swift_allocObject(&unk_100454018, 32, 7);
    *(_QWORD *)(v107 + 16) = v106;
    *(_QWORD *)(v107 + 24) = v92;
    v108 = sub_10002FFB8((unint64_t *)&unk_100496330, &qword_1004962B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_retain(v92);
    v109 = v171;
    v110 = Publisher<>.sink(receiveValue:)(sub_1001D20FC, v107, v171, v108);
    v111 = swift_release(v107);
    (*(void (**)(char *, uint64_t, __n128))(v170 + 8))(v103, v109, v111);
    v112 = v156;
    v113 = swift_beginAccess(v156, &v181, 33, 0);
    AnyCancellable.store(in:)(v112, v113);
    swift_endAccess(&v181);
    swift_release(v110);
    v114 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v115 = v172;
    NSNotificationCenter.publisher(for:object:)(MPCPlaybackEngineFirstAudioFrameNotification, 0);

    v181 = (id)static OS_dispatch_queue.main.getter(v116, v117, v118, v119, v120, v121, v122, v123, v148, v149, v150, v151, v152, v153, v154);
    v77(v13, 1, 1, v150);
    v124 = sub_100006924((unint64_t *)&qword_1004929D0, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    v126 = v174;
    v125 = v175;
    Publisher.receive<A>(on:options:)(&v181, v13, v174, v105, v124);
    sub_100008758((uint64_t)v13, (uint64_t *)&unk_1004962D0);

    (*(void (**)(char *, uint64_t))(v173 + 8))(v115, v126);
    v127 = swift_allocObject(&unk_100453FF0, 24, 7);
    swift_weakInit(v127 + 16, v1);
    v128 = sub_10002FFB8(&qword_100496340, &qword_1004962A0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v129 = v177;
    v130 = Publisher<>.sink(receiveValue:)(sub_1001D2104, v127, v177, v128);
    v131 = swift_release(v127);
    (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v125, v129, v131);
    v132 = swift_beginAccess(v112, &v181, 33, 0);
    AnyCancellable.store(in:)(v112, v132);
    swift_endAccess(&v181);
    swift_release(v179);
    swift_release(v130);
  }
  else
  {
    v133 = type metadata accessor for GroupActivitiesManager.Activity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v21, 1, 1, v133);
    v134 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &v181, 33, 0);
    sub_1001D2014((uint64_t)v21, v134, &qword_100495C28);
    swift_endAccess(&v181);
    sub_1001C5848();
    sub_100008758((uint64_t)v21, &qword_100495C28);
    v135 = (uint64_t *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions, &v181, 0, 0);
    v136 = *v135;
    v137 = swift_bridgeObjectRetain();
    sub_1001B9BC4(v137);
    swift_bridgeObjectRelease(v136);
    v138 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
    swift_release(v138);
    KeyPath = swift_getKeyPath(&unk_100390E30);
    v140 = swift_getKeyPath(&unk_100390E58);
    static Published.subscript.getter(&v182, v1, KeyPath, v140);
    swift_release(KeyPath);
    swift_release(v140);
    v141 = v182;
    v142 = swift_getKeyPath(&unk_100390E30);
    v143 = swift_getKeyPath(&unk_100390E58);
    v182 = 0;
    swift_retain(v1);
    static Published.subscript.setter(&v182, v1, v142, v143);
    sub_1001C0548(v141);
    v144 = (_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v182, 1, 0);
    *v144 = 0;
    v145 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
    v146 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
    v147 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
    *(_OWORD *)v145 = xmmword_100384A50;
    *(_BYTE *)(v145 + 16) = 0;
    sub_1001CE56C(v146, v147);
  }
}

double sub_1001C6FFC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _BYTE v25[24];
  _QWORD v26[3];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v20 = *((_QWORD *)a1 + 2);
  v21 = *((_QWORD *)a1 + 1);
  v24 = *(_OWORD *)(a1 + 24);
  v5 = *((_QWORD *)a1 + 5);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v18 = *((_QWORD *)a1 + 10);
  v19 = *((_QWORD *)a1 + 9);
  v23 = a1[88];
  v17 = *((_QWORD *)a1 + 12);
  v22 = a1[104];
  v9 = a2 + 16;
  v10 = *((_QWORD *)a1 + 14);
  swift_beginAccess(a2 + 16, v25, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v13 = Strong;
    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = v14 | v2;
    v16 = 0x10000;
    if (!v4)
      v16 = 0;
    v26[0] = v15 | v16;
    v26[1] = v21;
    v26[2] = v20;
    v27 = v24;
    v28 = v5;
    v29 = v6;
    v30 = v7;
    v31 = v8;
    v32 = v19;
    v33 = v18;
    v34 = v23;
    v35 = v17;
    v36 = v22;
    v37 = v10;
    sub_1001C7124((uint64_t)v26);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

void sub_1001C7124(uint64_t a1)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  char *v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  id v76;
  uint8_t *v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  uint64_t v88;
  id v89;
  uint8_t *v90;
  uint8_t *v91;
  NSObject *v92;
  os_log_type_t v93;
  id v94;
  uint8_t *v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD v136[15];
  char v137[24];
  uint64_t v138;

  sub_1000149A8(a1, (uint64_t)v136, &qword_100496350);
  v2 = v136[0];
  v3 = v136[4];
  v124 = v136[3];
  v4 = v136[7];
  v6 = v136[9];
  v5 = (void *)v136[10];
  v7 = v136[12];
  v8 = v136[14];
  v9 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v9);
  v113 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = a1;
  sub_1000149A8(a1, (uint64_t)v137, &qword_100496350);
  if (v138)
  {
    v123 = v2 & 1;
    v11 = v124;
  }
  else
  {
    if (qword_10048C658 != -1)
      swift_once(&qword_10048C658, sub_1000B3BEC);
    v12 = static ApplicationCapabilities.Controller.shared;
    KeyPath = swift_getKeyPath(&unk_100390EC0);
    v14 = swift_getKeyPath(&unk_100390EE8);
    static Published.subscript.getter(&v126, v12, KeyPath, v14);
    swift_release(v14);
    swift_release(KeyPath);
    v123 = v126;
    v11 = v129;
    v3 = v130;
    v4 = v131;
    v6 = v132;
    v5 = v133;
    v7 = v134;
    v8 = v135;
  }
  v122 = v5;
  v15 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001D210C(v120);
  v16 = v3;
  v17 = sub_1000C69C8(0, v11);
  v18 = sub_1000C69C8(2u, v11);
  v124 = v11;
  swift_bridgeObjectRelease(v11);
  v117 = v16;
  swift_bridgeObjectRelease(v16);
  v118 = v4;
  swift_bridgeObjectRelease(v4);
  v115 = v6;
  swift_bridgeObjectRelease(v6);
  v116 = v7;
  swift_bridgeObjectRelease(v7);
  v119 = v8;
  swift_bridgeObjectRelease(v8);
  v20 = v121 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  v21 = *(_QWORD *)(v121 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext);
  v22 = *(void **)(v121 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8);
  v23 = *(unsigned __int8 *)(v121 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 16);
  LODWORD(v120) = v18;
  if ((v18 & 1) != 0)
    v24 = 256;
  else
    v24 = 0;
  v25 = v24 & 0xFFFFFFFFFFFFFFFELL | v17 & 1;
  if (v22 == (void *)1)
  {
    v26 = v15;
    sub_1001CE56C(v21, (void *)1);
    v27 = v122;
    sub_1001CE56C(v25, v122);
    v28 = v15;
    v29 = v27;
    goto LABEL_23;
  }
  v28 = v15;
  v29 = v122;
  if ((v17 & 1) != ((v21 & 1) == 0) && ((v120 ^ ((v21 & 0x100) == 0)) & 1) != 0)
  {
    if (v22)
    {
      if (!v122)
        goto LABEL_23;
      v112 = sub_1000087DC(0, &qword_1004961F0, ICMusicSubscriptionStatus_ptr);
      v30 = v28;
      v111 = v30;
      sub_1001D2310(v21, v22);
      LOBYTE(v30) = static NSObject.== infix(_:_:)(v22, v30);

      sub_1001CE56C(v21, v22);
      if ((v30 & 1) == 0)
        goto LABEL_23;
    }
    else if (v122)
    {
      goto LABEL_23;
    }
    if (((v123 ^ v23) & 1) == 0)
    {
      if (qword_10048C958 != -1)
        swift_once(&qword_10048C958, sub_1001CCD54);
      v31 = type metadata accessor for Logger(0, v19);
      v32 = sub_1000086B4(v31, (uint64_t)static Logger.groupActivities);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.default.getter();
      v35 = os_log_type_enabled(v33, v34);
      v37 = v118;
      v36 = v119;
      v39 = v115;
      v38 = v116;
      if (v35)
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Eligibility context didn't change.", v40, 2u);
        swift_slowDealloc(v40, -1, -1);

        swift_bridgeObjectRelease(v124);
        swift_bridgeObjectRelease(v117);
        swift_bridgeObjectRelease(v37);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v36);
        return;
      }
      swift_bridgeObjectRelease(v124);
      swift_bridgeObjectRelease(v117);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v39);

      swift_bridgeObjectRelease(v38);
      v101 = v36;
      goto LABEL_57;
    }
  }
LABEL_23:
  v41 = *(_QWORD *)v20;
  v42 = *(void **)(v20 + 8);
  *(_QWORD *)v20 = v25;
  *(_QWORD *)(v20 + 8) = v29;
  *(_BYTE *)(v20 + 16) = v123;
  v43 = v28;
  sub_1001CE56C(v41, v42);
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v45 = type metadata accessor for Logger(0, v44);
  sub_1000086B4(v45, (uint64_t)static Logger.groupActivities);
  v46 = v43;
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  v49 = os_log_type_enabled(v47, v48);
  v114 = v17;
  if (v49)
  {
    v50 = swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v125 = v51;
    *(_DWORD *)v50 = 136446210;
    LOBYTE(v126) = v17 & 1;
    BYTE1(v126) = v120 & 1;
    v52 = v122;
    v127 = v122;
    v128 = v123;
    v53 = v46;
    v54 = v46;
    v55 = (char *)String.init<A>(reflecting:)(&v126, &type metadata for GroupActivitiesManager.EligibilityContext);
    v57 = v56;
    *(_QWORD *)(v50 + 4) = sub_100019400(v55, v56, &v125);
    swift_bridgeObjectRelease(v57);

    v46 = v53;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "🛂 Checking eligibility with context=%{public}s", (uint8_t *)v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    v60 = v118;
    v59 = v119;
    v61 = v124;
    if (!v52)
      goto LABEL_30;
  }
  else
  {

    v60 = v118;
    v59 = v119;
    v61 = v124;
    if (!v122)
      goto LABEL_30;
  }
  v58 = objc_msgSend(v46, "capabilities");
  if ((v58 & 1) != 0)
  {
    v80 = type metadata accessor for TaskPriority(0);
    v81 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v113, 1, 1, v80);
    v82 = (_QWORD *)swift_allocObject(&unk_100454090, 40, 7);
    v82[2] = 0;
    v82[3] = 0;
    v83 = v121;
    v82[4] = v121;
    swift_retain(v83);
    v73 = sub_1000C66A8(v81, (uint64_t)&unk_100496380, (uint64_t)v82);
    swift_bridgeObjectRelease(v61);
    v84 = v117;
LABEL_50:
    swift_bridgeObjectRelease(v84);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v115);

LABEL_51:
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v59);
    swift_release(v73);
    return;
  }
LABEL_30:
  if ((v114 & 1) == 0)
  {
    v74 = Logger.logObject.getter(v58);
    v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = v46;
      v77 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "🛂 Music services restricted", v77, 2u);
      v78 = v77;
      v46 = v76;
      swift_slowDealloc(v78, -1, -1);
    }

    sub_1001CB6D0(0);
    swift_bridgeObjectRelease(v61);
    v79 = v117;
    goto LABEL_45;
  }
  if ((v120 & 1) == 0)
  {
    v85 = Logger.logObject.getter(v58);
    v86 = static os_log_type_t.default.getter();
    v87 = os_log_type_enabled(v85, v86);
    v88 = v117;
    if (v87)
    {
      v89 = v46;
      v90 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "🛂 Apple Music content disabled", v90, 2u);
      v91 = v90;
      v46 = v89;
      swift_slowDealloc(v91, -1, -1);
    }

    sub_1001CB6D0(1);
    swift_bridgeObjectRelease(v124);
    v79 = v88;
LABEL_45:
    swift_bridgeObjectRelease(v79);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v115);

LABEL_46:
    swift_bridgeObjectRelease(v116);
    swift_bridgeObjectRelease(v59);
    return;
  }
  v62 = v117;
  if ((v123 & 1) == 0)
  {
    v92 = Logger.logObject.getter(v58);
    v93 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = v46;
      v95 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v95 = 0;
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "🛂 User is not signed in -> request authentication", v95, 2u);
      v96 = v95;
      v46 = v94;
      swift_slowDealloc(v96, -1, -1);
    }

    v97 = type metadata accessor for TaskPriority(0);
    v98 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v113, 1, 1, v97);
    v99 = (_QWORD *)swift_allocObject(&unk_100454040, 40, 7);
    v99[2] = 0;
    v99[3] = 0;
    v100 = v121;
    v99[4] = v121;
    swift_retain(v100);
    v73 = sub_1000C66A8(v98, (uint64_t)&unk_100496360, (uint64_t)v99);
    swift_bridgeObjectRelease(v61);
    v84 = v62;
    goto LABEL_50;
  }
  v63 = v122;
  if (v122)
  {
    v64 = v46;
    v65 = objc_msgSend(v64, "capabilities");
    if ((v65 & 1) == 0)
    {
      v66 = Logger.logObject.getter(v65);
      v67 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v68 = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "🛂 User is not a subscriber -> up sell", v68, 2u);
        swift_slowDealloc(v68, -1, -1);
      }

      v69 = type metadata accessor for TaskPriority(0);
      v70 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v113, 1, 1, v69);
      v71 = (_QWORD *)swift_allocObject(&unk_100454068, 40, 7);
      v71[2] = 0;
      v71[3] = 0;
      v72 = v121;
      v71[4] = v121;
      swift_retain(v72);
      v73 = sub_1000C66A8(v70, (uint64_t)&unk_100496370, (uint64_t)v71);
      swift_bridgeObjectRelease(v124);
      swift_bridgeObjectRelease(v62);
      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v115);

      goto LABEL_51;
    }

  }
  v102 = v46;
  v33 = Logger.logObject.getter(v102);
  v103 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v103))
  {
    v104 = swift_slowAlloc(12, -1);
    v105 = swift_slowAlloc(32, -1);
    v125 = v105;
    *(_DWORD *)v104 = 136446210;
    LOWORD(v126) = 257;
    v127 = v63;
    v128 = v123;
    v106 = v102;
    v107 = (char *)String.init<A>(reflecting:)(&v126, &type metadata for GroupActivitiesManager.EligibilityContext);
    v109 = v108;
    *(_QWORD *)(v104 + 4) = sub_100019400(v107, v108, &v125);
    swift_bridgeObjectRelease(v109);

    _os_log_impl((void *)&_mh_execute_header, v33, v103, "🛂 Unknown prepare case with=%{public}s", (uint8_t *)v104, 0xCu);
    swift_arrayDestroy(v105, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v105, -1, -1);
    swift_slowDealloc(v104, -1, -1);

    swift_bridgeObjectRelease(v124);
    swift_bridgeObjectRelease(v62);
    swift_bridgeObjectRelease(v60);
    swift_bridgeObjectRelease(v115);
    goto LABEL_46;
  }
  swift_bridgeObjectRelease(v124);
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v115);

  swift_bridgeObjectRelease(v116);
  v101 = v59;
LABEL_57:
  swift_bridgeObjectRelease(v101);

}

uint64_t sub_1001C7D04@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

double sub_1001C7D14(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    KeyPath = swift_getKeyPath(&unk_100390E30);
    v8 = swift_getKeyPath(&unk_100390E58);
    static Published.subscript.getter(&v12, v6, KeyPath, v8);
    swift_release(v8);
    swift_release(KeyPath);
    v9 = v12;
    v10 = swift_getKeyPath(&unk_100390E30);
    v11 = swift_getKeyPath(&unk_100390E58);
    v12 = v2;
    swift_retain(v6);
    static Published.subscript.setter(&v12, v6, v10, v11);
    sub_1001C0548(v9);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C7E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  const char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint8_t *v60;
  os_signpost_id_t v61;
  void (*v62)(char *, uint64_t);
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  char v82[24];
  char v83[24];
  _OWORD v84[7];
  uint64_t v85;

  v71 = type metadata accessor for OSSignpostError(0);
  v70 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v69 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OSSignpostID(0);
  v73 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v72 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v76 = (char *)&v68 - v10;
  v11 = sub_100005574(&qword_100495AB8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v68 - v17;
  __chkstk_darwin(v16);
  v21 = (char *)&v68 - v20;
  v77 = a2 + 16;
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v22 = type metadata accessor for Logger(0, v19);
  sub_1000086B4(v22, (uint64_t)static Logger.groupActivities);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v78 = a1;
  v24 = v23(v21, a1, v11);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter();
  v27 = os_log_type_enabled(v25, v26);
  v74 = v7;
  if (v27)
  {
    v28 = swift_slowAlloc(12, -1);
    v75 = a3;
    v29 = v28;
    v30 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v84[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v23(v18, (uint64_t)v21, v11);
    v31 = (char *)String.init<A>(reflecting:)(v18, v11);
    v33 = v32;
    *(_QWORD *)(v29 + 4) = sub_100019400(v31, v32, (uint64_t *)v84);
    swift_bridgeObjectRelease(v33);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "📥 Session update with state=%{public}s", (uint8_t *)v29, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1, -1);
    v34 = v29;
    a3 = v75;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }

  v35 = v77;
  swift_beginAccess(v77, v83, 0, 0);
  result = swift_weakLoadStrong(v35);
  v37 = v78;
  if (result)
  {
    v38 = result;
    v23((char *)v15, v78, v11);
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v15, v11);
    if (v39 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v15, v11);
      v40 = *v15;
      sub_1001C84D0(v40);
      swift_errorRelease(v40);
    }
    else if (v39 == enum case for GroupSession.State.waiting<A>(_:))
    {
      v85 = 0;
      memset(v84, 0, sizeof(v84));
      sub_1001C7124((uint64_t)v84);
    }
    else
    {
      if (v39 != enum case for GroupSession.State.joined<A>(_:))
      {
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001FLL, 0x80000001003B5050, "MusicCore/GroupActivitiesManager.swift", 38, 2, 669, 0);
        __break(1u);
        return result;
      }
      v41 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState;
      v42 = *(_QWORD *)(v38 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState);
      v43 = v76;
      if (v42)
      {
        v44 = qword_10048CF68;
        swift_retain(*(_QWORD *)(v38 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState));
        if (v44 != -1)
          swift_once(&qword_10048CF68, sub_1001F86BC);
        v45 = type metadata accessor for OSSignposter(0);
        sub_1000086B4(v45, (uint64_t)static OSSignposter.sharePlay);
        v46 = OSSignposter.logHandle.getter();
        v47 = OSSignpostIntervalState.signpostID.getter();
        v48 = static os_signpost_type_t.end.getter(v47);
        if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
        {
          v75 = a3;
          v49 = swift_retain(v42);
          v50 = v69;
          checkForErrorAndConsumeState(state:)(v49);
          v51 = swift_release(v42);
          v52 = v70;
          v53 = v71;
          v54 = (*(uint64_t (**)(char *, uint64_t, __n128))(v70 + 88))(v50, v71, v51);
          LODWORD(v77) = v48;
          if (v54 == enum case for OSSignpostError.doubleEnd(_:))
          {
            v55 = "[Error] Interval already ended";
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v53);
            v55 = "";
          }
          v56 = v73;
          v57 = v72;
          v58 = v43;
          v59 = v74;
          (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v58, v74);
          v60 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v60 = 0;
          v61 = OSSignpostID.rawValue.getter();
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v46, (os_signpost_type_t)v77, v61, "JoinSession", v55, v60, 2u);
          swift_slowDealloc(v60, -1, -1);

          v62 = *(void (**)(char *, uint64_t))(v56 + 8);
          v62(v76, v59);
          v63 = swift_release(v42);
          ((void (*)(char *, uint64_t, __n128))v62)(v57, v59, v63);
          a3 = v75;
          v37 = v78;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v73 + 8))(v43, v74);
          swift_release(v42);
        }
        v64 = *(_QWORD *)(v38 + v41);
        *(_QWORD *)(v38 + v41) = 0;
        swift_release(v64);
      }
    }
    swift_beginAccess(v38 + 16, v82, 0, 0);
    sub_1000244B0(v38 + 16, (uint64_t)v79);
    v65 = v80;
    v66 = v81;
    sub_10000ABC8(v79, v80);
    v67 = GroupSession.isLocallyInitiated.getter();
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 48))(a3, v37, v67 & 1, v65, v66);
    swift_release(v38);
    return sub_10000682C(v79);
  }
  return result;
}

double sub_1001C84D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double result;
  _QWORD v22[3];
  _BYTE v23[8];
  uint64_t v24;

  v2 = v1;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v4);
  v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v8 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v8, (uint64_t)static Logger.groupActivities);
  swift_errorRetain(a1);
  v9 = swift_errorRetain(a1);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v24 = v13;
    *(_DWORD *)v12 = 136446210;
    swift_getErrorValue(a1, v23, v22);
    v14 = (char *)Error.localizedDescription.getter(v22[1], v22[2]);
    v16 = v15;
    *(_QWORD *)(v12 + 4) = sub_100019400(v14, v15, &v24);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Session invalidated for reason=%{public}s", (uint8_t *)v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject(&unk_100454170, 40, 7);
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v2;
  swift_retain(v2);
  v19 = sub_1000C66A8((uint64_t)v7, (uint64_t)&unk_100496450, (uint64_t)v18);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_1001C8704(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t Strong;
  __n128 v20;
  uint64_t v21;
  _QWORD v24[2];
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v3 = sub_100005574(&qword_100490730);
  __chkstk_darwin(v3);
  v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 16;
  v12 = Notification.userInfo.getter(v8);
  if (!v12)
  {
    v26 = 0u;
    v27 = 0u;
LABEL_10:
    sub_100008758((uint64_t)&v26, &qword_100491B90);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_11;
  }
  v13 = v12;
  v24[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(MPCPlaybackEngineFirstAudioFrameDateKey);
  v24[1] = v14;
  AnyHashable.init<A>(_:)(v25, v24, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_1000A580C((uint64_t)v25), (v16 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v13 + 56) + 32 * v15, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  sub_10009B178((uint64_t)v25);
  if (!*((_QWORD *)&v27 + 1))
    goto LABEL_10;
  v17 = swift_dynamicCast(v5, &v26, (char *)&type metadata for Any + 8, v6, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v17 ^ 1u, 1, v6);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if ((_DWORD)v18 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    goto LABEL_12;
  }
LABEL_11:
  Date.init()(v18);
  sub_100008758((uint64_t)v5, &qword_100490730);
LABEL_12:
  swift_beginAccess(v11, v25, 0, 0);
  Strong = swift_weakLoadStrong(v11);
  if (Strong)
  {
    v21 = Strong;
    sub_1001C8938((uint64_t)v10);
    v20 = swift_release(v21);
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v10, v6, v20);
}

void sub_1001C8938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char *v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  NSString v39;
  NSString v40;
  NSString v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  uint64_t v46;
  _QWORD v47[2];
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  _BYTE v52[24];
  char v53[24];

  v47[1] = a1;
  v2 = sub_100005574(&qword_100490730);
  v3 = __chkstk_darwin(v2);
  v47[0] = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)v47 - v5;
  v7 = type metadata accessor for Date(0);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  __chkstk_darwin(v7);
  v48 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_100490F10);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v47 - v13;
  v15 = type metadata accessor for Signpost(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, v53, 0, 0);
  sub_100014A7C(v19, (uint64_t)v14, &qword_100490F10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100008758((uint64_t)v14, &qword_100490F10);
  }
  else
  {
    sub_1000648AC((uint64_t)v14, (uint64_t)v18, type metadata accessor for Signpost);
    Signpost.end(dso:)((uint64_t)&_mh_execute_header);
    sub_100006798((uint64_t)v18, type metadata accessor for Signpost);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, v15);
    swift_beginAccess(v19, v52, 33, 0);
    sub_100129EBC((uint64_t)v12, v19, &qword_100490F10);
    swift_endAccess(v52);
  }
  v20 = v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, v52, 0, 0);
  sub_100014A7C(v20, (uint64_t)v6, &qword_100490730);
  v22 = v49;
  v21 = v50;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v6, 1, v50) != 1)
  {
    v29 = v48;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v48, v6, v21);
    v31 = Date.timeIntervalSince(_:)(v29);
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v32 = type metadata accessor for Logger(0, v30);
    v33 = sub_1000086B4(v32, (uint64_t)static Logger.groupActivities);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(12, -1);
      *(_DWORD *)v36 = 134217984;
      *(double *)(v36 + 4) = v31;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "endMeasuringInitiationTime: %f", (uint8_t *)v36, 0xCu);
      swift_slowDealloc(v36, -1, -1);
    }

    if (v31 <= 10.0)
      goto LABEL_19;
    v37 = (void *)objc_opt_self(MSVAutoBugCapture);
    v38 = sub_1001C9A68();
    v39 = String._bridgeToObjectiveC()();
    v40 = String._bridgeToObjectiveC()();
    v41 = String._bridgeToObjectiveC()();
    if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          v42 = v41;
          v51[0] = (uint64_t)v31;
          dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          v44 = v43;
          v45 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v44);
          objc_msgSend(v37, "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:", v38, v39, v40, v42, v45, 0, 0);

LABEL_19:
          (*(void (**)(char *, uint64_t))(v22 + 8))(v48, v21);
          v46 = v47[0];
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v22 + 56))(v47[0], 1, 1, v21);
          swift_beginAccess(v20, v51, 33, 0);
          sub_100129EBC(v46, v20, &qword_100490730);
          swift_endAccess(v51);
          return;
        }
LABEL_22:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  sub_100008758((uint64_t)v6, &qword_100490730);
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v24 = type metadata accessor for Logger(0, v23);
  v25 = sub_1000086B4(v24, (uint64_t)static Logger.groupActivities);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Attempting to endMeasuringInitiationTime but there was no begin time.", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

}

uint64_t GroupActivitiesManager.__allocating_init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  GroupActivitiesManager.init(coordinator:)(a1);
  return v3;
}

uint64_t GroupActivitiesManager.init(coordinator:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  char *v42;
  _QWORD *v43;
  _OWORD v44[3];

  v2 = v1;
  v43 = (_QWORD *)a1;
  v3 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v3);
  v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100005574(&qword_100495B98);
  v5 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_100492DA0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574((uint64_t *)&unk_100495700);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = xmmword_100384A50;
  *(_OWORD *)(v2 + 56) = xmmword_100384A50;
  *(_QWORD *)(v2 + 72) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  v16 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  *(_QWORD *)&v44[0] = 0;
  Published.init(initialValue:)(v44, &type metadata for Int);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v17 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  LOBYTE(v44[0]) = 0;
  Published.init(initialValue:)(v44, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v8);
  v18 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  memset(v44, 0, sizeof(v44));
  v19 = sub_100005574(&qword_100495B88);
  Published.init(initialValue:)(v44, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v40);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount) = 0;
  v20 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_artworkCachingReference;
  v21 = type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  v22 = swift_allocObject(v21, 32, 7);
  *(_QWORD *)(v22 + 16) = 0xD00000000000001ELL;
  *(_QWORD *)(v22 + 24) = 0x80000001003ACF90;
  v23 = (void *)objc_opt_self(MPArtworkCatalog);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setCacheLimit:forCacheIdentifier:cacheReference:", 0, v24, v22);

  *(_QWORD *)(v2 + v20) = v22;
  v25 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionStateObserver;
  type metadata accessor for GroupStateObserver(0);
  *(_QWORD *)(v2 + v25) = GroupStateObserver.__allocating_init()();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionSubscriptions) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress) = 0;
  v26 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity;
  v27 = type metadata accessor for GroupActivitiesManager.Activity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sharePlayTogetherItemProvider) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = 0;
  v28 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame;
  v29 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain) = 0;
  v30 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate;
  v31 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v32 = v2 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext;
  *(_OWORD *)v32 = v41;
  *(_BYTE *)(v32 + 16) = 0;
  v33 = v43;
  sub_1000244B0((uint64_t)v43, v2 + 16);
  v34 = type metadata accessor for TaskPriority(0);
  v35 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v42, 1, 1, v34);
  v36 = (_QWORD *)swift_allocObject(&unk_100453D50, 40, 7);
  v36[2] = 0;
  v36[3] = 0;
  v36[4] = v2;
  swift_retain(v2);
  v37 = sub_1000C66A8(v35, (uint64_t)&unk_100495C20, (uint64_t)v36);
  swift_release(v37);
  sub_10000682C(v33);
  return v2;
}

uint64_t sub_1001C93A8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10049622C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return sub_1001C93F0();
}

uint64_t sub_1001C93F0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[5] = v0;
  v2 = sub_100005574(&qword_100496230);
  v1[6] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[7] = v3;
  v1[8] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_100496238);
  v1[9] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[10] = v5;
  v1[11] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v1[12] = v6;
  v1[13] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v1[14] = v7;
  v1[15] = v8;
  return swift_task_switch(sub_1001C94B8, v7, v8);
}

uint64_t sub_1001C94B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v3 = type metadata accessor for Logger(0, a2);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.groupActivities);
  v2[16] = v4;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "🚦 Initiating group session observer", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v9 = v2[7];
  v8 = v2[8];
  v10 = v2[6];

  v11 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v12 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  static GroupActivity.sessions()(v11, v12);
  GroupSession.Sessions.makeAsyncIterator()(v10);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v14 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v2[17] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_isLeaveCommandInProgress;
  v2[18] = v14;
  v2[19] = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession;
  v2[20] = static MainActor.shared.getter(v13);
  v15 = sub_10002FFB8(&qword_100496240, &qword_100496238, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
  v16 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v2[21] = v16;
  *v16 = v2;
  v16[1] = sub_1001C9688;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v2[9], v15);
}

uint64_t sub_1001C9688()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 160);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v8 = v7;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001C9A08;
  }
  else
  {
    if (v4)
    {
      v9 = swift_getObjectType();
      v6 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
      v8 = v10;
    }
    else
    {
      v6 = 0;
      v8 = 0;
    }
    v11 = sub_1001C974C;
  }
  return swift_task_switch(v11, v6, v8);
}

uint64_t sub_1001C974C()
{
  _QWORD *v0;

  swift_release(v0[20]);
  v0[23] = v0[2];
  return swift_task_switch(sub_1001C978C, v0[14], v0[15]);
}

uint64_t sub_1001C978C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 184);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    if (*(_BYTE *)(v2 + *(_QWORD *)(v0 + 136)) == 1)
    {
      v3 = swift_retain_n(*(_QWORD *)(v0 + 184), 2);
      v4 = Logger.logObject.getter(v3);
      v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = swift_slowAlloc(12, -1);
        v7 = swift_slowAlloc(32, -1);
        v23 = v7;
        *(_DWORD *)v6 = 136446210;
        *(_QWORD *)(v0 + 32) = v1;
        swift_retain(v1);
        v8 = sub_100005574(&qword_100496248);
        v9 = (char *)String.init<A>(reflecting:)(v0 + 32, v8);
        *(_QWORD *)(v6 + 4) = sub_100019400(v9, v10, &v23);
        swift_release_n(v1, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "leaveCommand in progress, setting pendingSession=%{public}s", (uint8_t *)v6, 0xCu);
        swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v7, -1, -1);
        swift_slowDealloc(v6, -1, -1);

      }
      else
      {

        swift_release_n(v1, 2);
      }
      v18 = *(_QWORD *)(v0 + 152);
      v19 = *(_QWORD *)(v0 + 40);
      v20 = *(_QWORD *)(v19 + v18);
      *(_QWORD *)(v19 + v18) = *(_QWORD *)(v0 + 184);
      swift_release(v20);
    }
    else
    {
      v15 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v2 + v15);
      *(_QWORD *)(v2 + v15) = v1;
      swift_retain_n(v1, 2);
      swift_release(v16);
      sub_1001C6084();
      v17 = swift_release_n(v1, 2);
    }
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v17);
    v21 = sub_10002FFB8(&qword_100496240, &qword_100496238, (uint64_t)&protocol conformance descriptor for GroupSession<A>.Sessions.Iterator);
    v22 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 168) = v22;
    *v22 = v0;
    v22[1] = sub_1001C9688;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, *(_QWORD *)(v0 + 72), v21);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 104);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(v12, *(_QWORD *)(v0 + 72));
    swift_release(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001C9A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 176);
  v1 = sub_100005574((uint64_t *)&unk_1004911F0);
  v2 = swift_dynamicCast(v1, v0 + 24, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

id sub_1001C9A68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain);
  }
  else
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1001C9AD4(unsigned __int8 *a1, void **a2)
{
  void *v2;
  char v3;
  int v4;
  int v5;
  int v6;

  v2 = (void *)*((_QWORD *)a1 + 1);
  v3 = a1[16];
  if (a1[1])
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 | *a1;
  if (*((_BYTE *)a2 + 1))
    v6 = 256;
  else
    v6 = 0;
  return sub_1001CDEA0(v5, v2, v3, v6 | *(unsigned __int8 *)a2, a2[1], *((_BYTE *)a2 + 16));
}

uint64_t sub_1001C9B18()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10049638C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return sub_1001C9B60();
}

uint64_t sub_1001C9B60()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1[19] = v0;
  v2 = sub_100005574((uint64_t *)&unk_100493720);
  v1[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100005574((uint64_t *)&unk_1004962D0);
  v1[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100005574(&qword_1004938D0);
  v1[22] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[23] = v5;
  v1[24] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_1004938D8);
  v1[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[26] = v7;
  v1[27] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OSSignpostError(0);
  v1[28] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[29] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[30] = swift_task_alloc(v10);
  v1[31] = swift_task_alloc(v10);
  v11 = type metadata accessor for OSSignpostID(0);
  v1[32] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v1[33] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[34] = swift_task_alloc(v13);
  v1[35] = swift_task_alloc(v13);
  v1[36] = swift_task_alloc(v13);
  v1[37] = swift_task_alloc(v13);
  v1[38] = swift_task_alloc(v13);
  v14 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v1[39] = v14;
  v1[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_100495AB8);
  v1[41] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v1[42] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[43] = swift_task_alloc(v17);
  v1[44] = swift_task_alloc(v17);
  v18 = type metadata accessor for MainActor(0);
  v1[45] = v18;
  v1[46] = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v18, &protocol witness table for MainActor);
  v1[47] = v19;
  v1[48] = v20;
  return swift_task_switch(sub_1001C9D64, v19, v20);
}

uint64_t sub_1001C9D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  NSObject *v88;
  os_signpost_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint8_t *v94;
  os_signpost_id_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t, uint64_t);
  uint64_t v116;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  *(_QWORD *)(v0 + 392) = OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session;
  v3 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 400) = v3;
  if (!v3)
  {
    v39 = *(_QWORD *)(v0 + 368);
LABEL_23:
    swift_release(v39);
    v52 = *(_QWORD *)(v0 + 344);
    v53 = *(_QWORD *)(v0 + 320);
    v55 = *(_QWORD *)(v0 + 296);
    v54 = *(_QWORD *)(v0 + 304);
    v57 = *(_QWORD *)(v0 + 280);
    v56 = *(_QWORD *)(v0 + 288);
    v58 = *(_QWORD *)(v0 + 272);
    v60 = *(_QWORD *)(v0 + 240);
    v59 = *(_QWORD *)(v0 + 248);
    v110 = *(_QWORD *)(v0 + 216);
    v111 = *(_QWORD *)(v0 + 192);
    v112 = *(_QWORD *)(v0 + 168);
    v114 = *(_QWORD *)(v0 + 160);
    swift_task_dealloc(*(_QWORD *)(v0 + 352));
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v114);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 312);
  v9 = swift_retain(v3);
  GroupSession.state.getter(v9);
  *(_DWORD *)(v0 + 536) = enum case for GroupSession.State.waiting<A>(_:);
  v10 = *(void (**)(uint64_t))(v7 + 104);
  *(_QWORD *)(v0 + 408) = v10;
  v10(v5);
  v11 = sub_100006924(&qword_100495AC0, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
  *(_QWORD *)(v0 + 416) = v11;
  v12 = static GroupSession.State.== infix(_:_:)(v4, v5, v8, v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 424) = v13;
  v13(v5, v6);
  v13(v4, v6);
  if ((v12 & 1) == 0)
  {
    v40 = *(_QWORD *)(v0 + 368);
    swift_release(v3);
    v39 = v40;
    goto LABEL_23;
  }
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v113 = v3;
  v15 = type metadata accessor for Logger(0, v14);
  v16 = sub_1000086B4(v15, (uint64_t)static Logger.groupActivities);
  *(_QWORD *)(v0 + 432) = v16;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Attempting to join", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }
  v20 = *(_QWORD *)(v0 + 152);

  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v22 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 543), v20, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  LOBYTE(v22) = *(_BYTE *)(v0 + 543);
  v23 = swift_getKeyPath(&unk_100390DE8);
  v24 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 550) = 1;
  swift_retain(v20);
  static Published.subscript.setter(v0 + 550, v20, v23, v24);
  sub_1001C095C(v22);
  v25 = *(_QWORD *)(v1 + v2);
  if (!v25)
    goto LABEL_17;
  v26 = *(_QWORD *)(v0 + 320);
  v27 = swift_retain(v25);
  GroupSession.activity.getter(v27);
  swift_release(v25);
  v28 = *(_QWORD *)(v26 + 48);
  v29 = *(_QWORD *)(v0 + 320);
  if (!v28)
  {
    sub_100006798(*(_QWORD *)(v0 + 320), type metadata accessor for GroupActivitiesManager.Activity);
LABEL_17:
    swift_release(*(_QWORD *)(v0 + 368));
    if (qword_10048C978 != -1)
      swift_once(&qword_10048C978, sub_1001D687C);
    v41 = sub_1000086B4(v15, (uint64_t)static Logger.sharedListening);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.error.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Session properties missing in activity", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }
    v45 = *(_QWORD *)(v0 + 152);

    v46 = swift_getKeyPath(&unk_100390DE8);
    v47 = swift_getKeyPath(&unk_100390E10);
    static Published.subscript.getter((_QWORD *)(v0 + 549), v45, v46, v47);
    swift_release(v46);
    swift_release(v47);
    v48 = *(_BYTE *)(v0 + 549);
    v49 = swift_getKeyPath(&unk_100390DE8);
    v50 = swift_getKeyPath(&unk_100390E10);
    *(_BYTE *)(v0 + 548) = 0;
    swift_retain(v45);
    static Published.subscript.setter(v0 + 548, v45, v49, v50);
    v51 = v48;
LABEL_22:
    sub_1001C095C(v51);
    v39 = v113;
    goto LABEL_23;
  }
  v30 = *(void **)(v28 + 16);
  *(_QWORD *)(v0 + 440) = v30;
  v31 = v30;
  sub_100006798(v29, type metadata accessor for GroupActivitiesManager.Activity);
  v32 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v33 = swift_allocObject(&unk_1004540B8, 32, 7);
  *(_QWORD *)(v33 + 16) = sub_1001D2320;
  *(_QWORD *)(v33 + 24) = v113;
  *(_QWORD *)(v0 + 48) = sub_100009BB0;
  *(_QWORD *)(v0 + 56) = v33;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1000E776C;
  *(_QWORD *)(v0 + 40) = &unk_1004540D0;
  v34 = _Block_copy((const void *)(v0 + 16));
  swift_retain(v33);
  v35 = objc_msgSend(v32, "initWithBlock:", v34);
  *(_QWORD *)(v0 + 448) = v35;
  _Block_release(v34);
  v36 = swift_release(*(_QWORD *)(v0 + 56));
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation(v33, "", 0, 0, 0, 1, v36);
  swift_release(v33);
  if ((v32 & 1) == 0)
  {
    v37 = objc_msgSend((id)objc_opt_self(MPCPlaybackIntent), "sharedSessionIntentWithProperties:identity:", v31, v35);
    *(_QWORD *)(v0 + 456) = v37;
    if (v37)
    {
      v34 = v37;
      if ((GroupSession.isLocallyInitiated.getter() & 1) != 0 && (GroupSession.isFirstJoin.getter() & 1) != 0)
        v38 = 20;
      else
        v38 = 10;
      objc_msgSend(v34, "setActionAfterQueueLoad:", v38);
      v62 = swift_retain(v113);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc(24, -1);
        v66 = swift_slowAlloc(32, -1);
        v116 = v66;
        *(_DWORD *)v65 = 67240706;
        *(_DWORD *)(v65 + 4) = GroupSession.isLocallyInitiated.getter() & 1;
        *(_WORD *)(v65 + 8) = 1026;
        *(_DWORD *)(v65 + 10) = GroupSession.isFirstJoin.getter() & 1;
        v67 = swift_release(v113);
        *(_WORD *)(v65 + 14) = 2082;
        v68 = (id)MPNSStringFromQueueLoadAction(v38, v67);
        if (v68)
        {
          v69 = v68;
          v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
          v72 = v71;

        }
        else
        {
          v70 = 0;
          v72 = 0;
        }
        v82 = (char *)Optional<A>.description.getter(v70, v72);
        v84 = v83;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v65 + 16) = sub_100019400(v82, v84, &v116);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Will join session isLocallyInitiated=%{BOOL,public}d\n/ isFirstJoin=%{BOOL,public}d.\n-> actionAfterQueueLoad=%{public}s", (uint8_t *)v65, 0x18u);
        swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v66, -1, -1);
        swift_slowDealloc(v65, -1, -1);

      }
      else
      {

        swift_release(v113);
      }
      if (qword_10048CF68 == -1)
        goto LABEL_35;
      goto LABEL_40;
    }
    swift_release(*(_QWORD *)(v0 + 368));
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Failed to retrieve shared playback intent", v76, 2u);
      swift_slowDealloc(v76, -1, -1);
    }
    v77 = *(_QWORD *)(v0 + 152);

    v78 = swift_getKeyPath(&unk_100390DE8);
    v79 = swift_getKeyPath(&unk_100390E10);
    static Published.subscript.getter((_QWORD *)(v0 + 541), v77, v78, v79);
    swift_release(v78);
    swift_release(v79);
    LOBYTE(v78) = *(_BYTE *)(v0 + 541);
    v80 = swift_getKeyPath(&unk_100390DE8);
    v81 = swift_getKeyPath(&unk_100390E10);
    *(_BYTE *)(v0 + 540) = 0;
    swift_retain(v77);
    static Published.subscript.setter(v0 + 540, v77, v80, v81);
    v51 = v78;
    goto LABEL_22;
  }
  __break(1u);
LABEL_40:
  swift_once(&qword_10048CF68, sub_1001F86BC);
LABEL_35:
  v85 = type metadata accessor for OSSignposter(0);
  v86 = sub_1000086B4(v85, (uint64_t)static OSSignposter.sharePlay);
  *(_QWORD *)(v0 + 464) = v86;
  static OSSignpostID.exclusive.getter(v86);
  v88 = OSSignposter.logHandle.getter(v87);
  v89 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v90 = *(_QWORD *)(v0 + 296);
    v91 = *(_QWORD *)(v0 + 256);
    v92 = *(_QWORD *)(v0 + 264);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
    v93(v90, *(_QWORD *)(v0 + 304), v91);
    v94 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v94 = 0;
    v95 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v88, v89, v95, "AddIntent", "", v94, 2u);
    swift_slowDealloc(v94, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v90, v91);
  }
  else
  {
    v96 = *(_QWORD *)(v0 + 264);

    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16);
  }
  *(_QWORD *)(v0 + 472) = v93;
  v97 = *(_QWORD *)(v0 + 296);
  v98 = *(_QWORD *)(v0 + 304);
  v99 = *(_QWORD *)(v0 + 256);
  v100 = *(_QWORD *)(v0 + 264);
  v101 = *(_QWORD **)(v0 + 152);
  v93(v97, v98, v99);
  v102 = type metadata accessor for OSSignpostIntervalState(0);
  *(_QWORD *)(v0 + 480) = v102;
  swift_allocObject(v102, *(unsigned int *)(v102 + 48), *(unsigned __int16 *)(v102 + 52));
  *(_QWORD *)(v0 + 488) = OSSignpostIntervalState.init(id:isOpen:)(v97, 1);
  v103 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  *(_QWORD *)(v0 + 496) = v103;
  v103(v98, v99);
  swift_beginAccess(v101 + 2, v0 + 112, 0, 0);
  v104 = v101[5];
  v105 = v101[6];
  sub_10000ABC8(v101 + 2, v104);
  v106 = *(_QWORD *)(v104 - 8);
  v107 = swift_task_alloc((*(_QWORD *)(v106 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 504) = v107;
  (*(void (**)(void))(v106 + 16))();
  v108 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 56))(v104, v105);
  *(_QWORD *)(v0 + 512) = v108;
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v107, v104);
  v115 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100496530 + dword_100496530);
  v109 = (_QWORD *)swift_task_alloc(unk_100496534);
  *(_QWORD *)(v0 + 520) = v109;
  *v109 = v0;
  v109[1] = sub_1001CA868;
  return v115((uint64_t)v34, v108);
}

uint64_t sub_1001CA868()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 520);
  *(_QWORD *)(*v1 + 528) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_1001CB32C;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 504);

    swift_task_dealloc(v7);
    v4 = *(_QWORD *)(v2 + 376);
    v5 = *(_QWORD *)(v2 + 384);
    v6 = sub_1001CA8DC;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001CA8DC()
{
  uint64_t v0;
  __n128 v1;
  NSObject *v2;
  uint64_t v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  const char *v11;
  _QWORD *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  os_signpost_id_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __n128 v63;
  NSObject *v64;
  os_signpost_type_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  os_signpost_id_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t KeyPath;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v1 = swift_release(*(_QWORD *)(v0 + 368));
  v2 = OSSignposter.logHandle.getter(v1);
  v3 = OSSignpostIntervalState.signpostID.getter();
  v4 = static os_signpost_type_t.end.getter(v3);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 488);
    v6 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 224);
    v8 = *(_QWORD *)(v0 + 232);
    v9 = swift_retain(v5);
    checkForErrorAndConsumeState(state:)(v9);
    v10 = swift_release(v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v8 + 88))(v6, v7, v10) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v11 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 224));
      v11 = "";
    }
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v12 = (_QWORD *)(v0 + 296);
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v14, v15);
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v4, v17, "AddIntent", v11, v16, 2u);
    swift_slowDealloc(v16, -1, -1);

    v13(v14, v15);
  }
  else
  {
    v12 = (_QWORD *)(v0 + 288);

  }
  v18 = *(_QWORD *)(v0 + 488);
  v19 = *(_QWORD *)(v0 + 392);
  v20 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v12, *(_QWORD *)(v0 + 256));
  swift_release(v18);
  v21 = *(_QWORD *)(v20 + v19);
  if (v21)
  {
    v22 = *(_QWORD *)(v0 + 416);
    v23 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v25 = *(unsigned int *)(v0 + 536);
    v27 = *(_QWORD *)(v0 + 344);
    v26 = *(_QWORD *)(v0 + 352);
    v28 = *(_QWORD *)(v0 + 328);
    v29 = *(_QWORD *)(v0 + 312);
    v140 = swift_retain(v21);
    GroupSession.state.getter(v140);
    v24(v27, v25, v28);
    v30 = static GroupSession.State.== infix(_:_:)(v26, v27, v29, v22);
    v23(v27, v28);
    v23(v26, v28);
    if ((v30 & 1) != 0)
    {
      v31 = swift_retain_n(v140, 2);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v142 = v35;
        *(_DWORD *)v34 = 136446210;
        *(_QWORD *)(v0 + 136) = v140;
        v36 = sub_100005574(&qword_100496248);
        v37 = sub_10002FFB8((unint64_t *)&unk_100496418, &qword_100496248, (uint64_t)&protocol conformance descriptor for GroupSession<A>);
        v38 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v36, v37);
        *(_QWORD *)(v34 + 4) = sub_100019400(v38, v39, &v142);
        swift_release_n(v140, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "🤝 Joining shared session=%{public}s", (uint8_t *)v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

        v40 = swift_release_n(v140, 2);
      }
      static OSSignpostID.exclusive.getter(v40);
      v64 = OSSignposter.logHandle.getter(v63);
      v65 = static os_signpost_type_t.begin.getter();
      if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
      {
        v66 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
        v67 = *(_QWORD *)(v0 + 296);
        v68 = *(_QWORD *)(v0 + 256);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 472))(v67, *(_QWORD *)(v0 + 272), v68);
        v69 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v69 = 0;
        v70 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v64, v65, v70, "JoinSession", "", v69, 2u);
        swift_slowDealloc(v69, -1, -1);

        v66(v67, v68);
      }
      else
      {

      }
      v71 = v0 + 547;
      v72 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
      v73 = *(_QWORD *)(v0 + 480);
      v74 = *(_QWORD *)(v0 + 392);
      v75 = *(_QWORD *)(v0 + 296);
      v76 = *(_QWORD *)(v0 + 272);
      v77 = *(_QWORD *)(v0 + 256);
      v78 = *(_QWORD *)(v0 + 152);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472))(v75, v76, v77);
      swift_allocObject(v73, *(unsigned int *)(v73 + 48), *(unsigned __int16 *)(v73 + 52));
      v79 = OSSignpostIntervalState.init(id:isOpen:)(v75, 1);
      v72(v76, v77);
      v80 = *(_QWORD *)(v78 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState);
      *(_QWORD *)(v78 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState) = v79;
      swift_release(v80);
      v81 = *(_QWORD *)(v78 + v74);
      if (v81)
      {
        swift_retain(*(_QWORD *)(v78 + v74));
        GroupSession.join()();
        swift_release(v81);
      }
      v82 = *(_QWORD **)(v0 + 152);
      v83 = v82[5];
      v84 = v82[6];
      v85 = sub_10000ABC8(v82 + 2, v83);
      v86 = *(_QWORD *)(v83 - 8);
      v87 = swift_task_alloc((*(_QWORD *)(v86 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v86 + 16))(v87, v85, v83);
      v88 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v84 + 56))(v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v83);
      if (v88)
      {
        v89 = &v88[OBJC_IVAR____TtC9MusicCore18PlaybackController_player];
        swift_beginAccess(&v88[OBJC_IVAR____TtC9MusicCore18PlaybackController_player], v0 + 88, 0, 0);
        v90 = *(_QWORD *)v89;
        if (*(_QWORD *)v89)
        {
          v132 = *(void **)(v0 + 440);
          v133 = *(void **)(v0 + 448);
          v91 = *(_QWORD *)(v0 + 216);
          v134 = *(_QWORD *)(v0 + 208);
          v136 = *(void **)(v0 + 456);
          v92 = *(_QWORD *)(v0 + 192);
          v93 = *(_QWORD *)(v0 + 176);
          v129 = *(_QWORD *)(v0 + 184);
          v94 = *(_QWORD *)(v0 + 168);
          v130 = *(_QWORD *)(v0 + 152);
          v131 = *(_QWORD *)(v0 + 200);
          swift_retain(v90);

          swift_beginAccess(v90 + OBJC_IVAR____TtC9MusicCore6Player__nowPlaying, v0 + 64, 33, 0);
          v95 = sub_100005574((uint64_t *)&unk_1004933B0);
          Published.projectedValue.getter(v95);
          swift_endAccess(v0 + 64);
          swift_release(v90);
          v96 = sub_1000087DC(0, (unint64_t *)&qword_100490BC0, OS_dispatch_queue_ptr);
          *(_QWORD *)(v0 + 144) = static OS_dispatch_queue.main.getter(v96, v97, v98, v99, v100, v101, v102, v103);
          v104 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v94, 1, 1, v104);
          v105 = sub_10002FFB8((unint64_t *)&qword_100493050, &qword_1004938D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
          sub_1001829E4();
          Publisher.receive<A>(on:options:)(v0 + 144, v94, v93, v96, v105);
          v106 = v94;
          v71 = v0 + 547;
          sub_100008758(v106, (uint64_t *)&unk_1004962D0);

          (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v92, v93);
          swift_task_dealloc(v87);
          v107 = swift_allocObject(&unk_100453FF0, 24, 7);
          swift_weakInit(v107 + 16, v130);
          v108 = sub_10002FFB8(&qword_100493900, &qword_1004938D8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
          v109 = Publisher<>.sink(receiveValue:)(sub_1001D2418, v107, v131, v108);
          swift_release(v140);
          swift_release(v107);

          (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v91, v131);
LABEL_25:
          v46 = *(_QWORD *)(v0 + 400);
          v112 = *(_QWORD *)(v0 + 152);
          v113 = *(_QWORD *)(v112 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription);
          *(_QWORD *)(v112 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription) = v109;
          swift_release(v113);
          KeyPath = swift_getKeyPath(&unk_100390DE8);
          v115 = swift_getKeyPath(&unk_100390E10);
          static Published.subscript.getter((_QWORD *)(v0 + 546), v112, KeyPath, v115);
          swift_release(KeyPath);
          swift_release(v115);
          v116 = *(_BYTE *)(v0 + 546);
          v117 = swift_getKeyPath(&unk_100390DE8);
          v118 = swift_getKeyPath(&unk_100390E10);
          *(_BYTE *)(v0 + 547) = 0;
          swift_retain(v112);
          static Published.subscript.setter(v71, v112, v117, v118);
          v62 = v116;
          goto LABEL_26;
        }

      }
      v110 = *(void **)(v0 + 448);
      v111 = *(void **)(v0 + 456);

      swift_release(v140);
      swift_task_dealloc(v87);
      v109 = 0;
      goto LABEL_25;
    }
    v42 = *(_QWORD *)(v0 + 392);
    v43 = *(_QWORD *)(v0 + 152);
    swift_release(v140);
    v41 = *(_QWORD *)(v43 + v42);
  }
  else
  {
    v41 = 0;
  }
  v44 = *(void **)(v0 + 448);
  v138 = *(void **)(v0 + 456);
  v45 = *(void **)(v0 + 440);
  v46 = *(_QWORD *)(v0 + 400);
  v47 = *(_QWORD *)(v0 + 152);
  v48 = *(_QWORD *)(v0 + 160);
  v49 = sub_1001CE314();
  v50 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v49, 0, 0);
  *(_QWORD *)v51 = v41;
  *(_BYTE *)(v51 + 8) = 1;
  swift_retain(v41);
  sub_1001C27A0(v50, 0);
  swift_errorRelease(v50);
  v52 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v48, 1, 1, v52);
  v53 = swift_retain(v47);
  v54 = static MainActor.shared.getter(v53);
  v55 = (_QWORD *)swift_allocObject(&unk_100454130, 40, 7);
  v55[2] = v54;
  v55[3] = &protocol witness table for MainActor;
  v55[4] = v47;
  v56 = sub_1000C66A8(v48, (uint64_t)&unk_100496408, (uint64_t)v55);
  swift_release(v56);

  v57 = swift_getKeyPath(&unk_100390DE8);
  v58 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 544), v47, v57, v58);
  swift_release(v57);
  swift_release(v58);
  v59 = *(_BYTE *)(v0 + 544);
  v60 = swift_getKeyPath(&unk_100390DE8);
  v61 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 545) = 0;
  swift_retain(v47);
  static Published.subscript.setter(v0 + 545, v47, v60, v61);
  v62 = v59;
LABEL_26:
  sub_1001C095C(v62);
  swift_release(v46);
  v119 = *(_QWORD *)(v0 + 344);
  v120 = *(_QWORD *)(v0 + 320);
  v122 = *(_QWORD *)(v0 + 296);
  v121 = *(_QWORD *)(v0 + 304);
  v124 = *(_QWORD *)(v0 + 280);
  v123 = *(_QWORD *)(v0 + 288);
  v125 = *(_QWORD *)(v0 + 272);
  v127 = *(_QWORD *)(v0 + 240);
  v126 = *(_QWORD *)(v0 + 248);
  v135 = *(_QWORD *)(v0 + 216);
  v137 = *(_QWORD *)(v0 + 192);
  v139 = *(_QWORD *)(v0 + 168);
  v141 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v119);
  swift_task_dealloc(v120);
  swift_task_dealloc(v121);
  swift_task_dealloc(v122);
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v135);
  swift_task_dealloc(v137);
  swift_task_dealloc(v139);
  swift_task_dealloc(v141);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CB32C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  __n128 v3;
  NSObject *v4;
  uint64_t v5;
  os_signpost_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  const char *v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(void **)(v0 + 512);
  swift_release(*(_QWORD *)(v0 + 368));

  swift_task_dealloc(v1);
  v4 = OSSignposter.logHandle.getter(v3);
  v5 = OSSignpostIntervalState.signpostID.getter();
  v6 = static os_signpost_type_t.end.getter(v5);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 488);
    v9 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 224);
    v11 = swift_retain(v7);
    checkForErrorAndConsumeState(state:)(v11);
    v12 = swift_release(v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v9 + 88))(v8, v10, v12) == enum case for OSSignpostError.doubleEnd(_:))
    {
      v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 224));
      v13 = "";
    }
    v15 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    v14 = (_QWORD *)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 280);
    v17 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 472))(*(_QWORD *)(v0 + 296), v16, v17);
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    v19 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, v6, v19, "AddIntent", v13, v18, 2u);
    swift_slowDealloc(v18, -1, -1);

    v15(v16, v17);
  }
  else
  {
    v14 = (_QWORD *)(v0 + 280);

  }
  v20 = *(_QWORD *)(v0 + 528);
  v21 = *(_QWORD *)(v0 + 488);
  v22 = *(void **)(v0 + 448);
  v23 = *(void **)(v0 + 456);
  v24 = *(void **)(v0 + 440);
  v50 = *(_QWORD *)(v0 + 400);
  v25 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 160);
  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*v14, *(_QWORD *)(v0 + 256));
  swift_release(v21);
  sub_1001C27A0(v20, 0);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = swift_retain(v25);
  v29 = static MainActor.shared.getter(v28);
  v30 = (_QWORD *)swift_allocObject(&unk_100454108, 40, 7);
  v30[2] = v29;
  v30[3] = &protocol witness table for MainActor;
  v30[4] = v25;
  v31 = sub_1000C66A8(v26, (uint64_t)&unk_1004963F8, (uint64_t)v30);
  swift_release(v31);

  swift_errorRelease(v20);
  KeyPath = swift_getKeyPath(&unk_100390DE8);
  v33 = swift_getKeyPath(&unk_100390E10);
  static Published.subscript.getter((_QWORD *)(v0 + 542), v25, KeyPath, v33);
  swift_release(KeyPath);
  swift_release(v33);
  v34 = *(_BYTE *)(v0 + 542);
  v35 = swift_getKeyPath(&unk_100390DE8);
  v36 = swift_getKeyPath(&unk_100390E10);
  *(_BYTE *)(v0 + 551) = 0;
  swift_retain(v25);
  static Published.subscript.setter(v0 + 551, v25, v35, v36);
  sub_1001C095C(v34);
  swift_release(v50);
  v37 = *(_QWORD *)(v0 + 344);
  v38 = *(_QWORD *)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 296);
  v39 = *(_QWORD *)(v0 + 304);
  v42 = *(_QWORD *)(v0 + 280);
  v41 = *(_QWORD *)(v0 + 288);
  v43 = *(_QWORD *)(v0 + 272);
  v45 = *(_QWORD *)(v0 + 240);
  v44 = *(_QWORD *)(v0 + 248);
  v47 = *(_QWORD *)(v0 + 216);
  v48 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 168);
  v51 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 352));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CB6D0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[56];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[4];
  char v62;
  char *v63;
  uint64_t v64;

  v2 = v1;
  v45 = a1 & 1;
  v3 = type metadata accessor for UUID(0);
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  v16 = sub_100005574(&qword_100493240);
  v17 = (char *)swift_allocObject(v16, 88, 7);
  *((_OWORD *)v17 + 1) = xmmword_100384A80;
  String.LocalizationValue.init(stringLiteral:)(0x7373696D736944, 0xE700000000000000);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v18 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v19 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v18, v8, 0, 0, 256);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  swift_retain(v2);
  v22 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v23 = UUID.uuidString.getter(v22);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v44);
  *((_QWORD *)v17 + 4) = v23;
  *((_QWORD *)v17 + 5) = v25;
  *((_QWORD *)v17 + 6) = v19;
  *((_QWORD *)v17 + 7) = v21;
  v17[64] = 2;
  *((_QWORD *)v17 + 9) = &unk_100496430;
  *((_QWORD *)v17 + 10) = v2;
  v26 = v45;
  sub_1001CC8C0(v45, (uint64_t)v50);
  sub_1000149A8((uint64_t)v50, (uint64_t)&v51, &qword_100491208);
  v27 = v2;
  if (*((_QWORD *)&v51 + 1))
  {
    v56 = v51;
    v57 = v52;
    v28 = v54;
    v58 = v53;
    v29 = v55;
    v59 = v51;
    v60 = v52;
    sub_1000595EC((uint64_t)&v59);
    sub_1000595EC((uint64_t)&v60);
    sub_10003A434(v28, v29);
    v31 = *((_QWORD *)v17 + 2);
    v30 = *((_QWORD *)v17 + 3);
    if (v31 >= v30 >> 1)
      v17 = sub_10003DCE4((char *)(v30 > 1), v31 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v31 + 1;
    v32 = &v17[56 * v31];
    v33 = v57;
    *((_OWORD *)v32 + 2) = v56;
    *((_OWORD *)v32 + 3) = v33;
    *((_QWORD *)v32 + 8) = v58;
    *((_QWORD *)v32 + 9) = v28;
    *((_QWORD *)v32 + 10) = v29;
    sub_100052668((uint64_t)&v59);
    sub_100052668((uint64_t)&v60);
    sub_10003A5C8(v28, v29);
  }
  v34 = sub_1001CC730(v26, 0xD000000000000011, 0x80000001003B5170, 0xD000000000000013, 0x80000001003B5150);
  v36 = v35;
  v37 = sub_1001CC730(v26, 0xD000000000000041, 0x80000001003B5100, 0xD000000000000049, 0x80000001003B50B0);
  v39 = v38;
  v61[0] = v34;
  v61[1] = v36;
  v61[2] = v37;
  v61[3] = v38;
  v62 = 0;
  v63 = v17;
  v64 = 0;
  swift_beginAccess(v27 + 16, &v49, 0, 0);
  sub_1000244B0(v27 + 16, (uint64_t)v46);
  v40 = v47;
  v41 = v48;
  sub_10000ABC8(v46, v47);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v41 + 40))(v61, v40, v41);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v17);
  return sub_10000682C(v46);
}

uint64_t sub_1001CBAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 184) = a4;
  return swift_task_switch(sub_1001CBADC, 0, 0);
}

uint64_t sub_1001CBADC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[23] + 16;
  swift_beginAccess(v1, v0 + 20, 0, 0);
  sub_1000244B0(v1, (uint64_t)(v0 + 10));
  v2 = v0[13];
  v3 = v0[14];
  sub_10000ABC8(v0 + 10, v2);
  v4 = *(int **)(v3 + 32);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[24] = v5;
  *v5 = v0;
  v5[1] = sub_1001CBB80;
  return v7(v2, v3);
}

uint64_t sub_1001CBB80(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_BYTE *)(*(_QWORD *)v1 + 208) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001CBBDC, 0, 0);
}

uint64_t sub_1001CBBDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  int v6;
  uint64_t v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  sub_10000682C((_QWORD *)(v0 + 80));
  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v2 = type metadata accessor for Logger(0, v1);
  v3 = sub_1000086B4(v2, (uint64_t)static Logger.groupActivities);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(unsigned __int8 *)(v0 + 208);
    v7 = swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 67240192;
    *(_DWORD *)(v7 + 4) = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "🛂 User did authenticate=%{BOOL,public}d", (uint8_t *)v7, 8u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(unsigned __int8 *)(v0 + 208);

  if (v8 == 1)
  {
    v10 = v0 + 16;
    v11 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
    *(_QWORD *)(v0 + 200) = v11;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1001CBDA4;
    v12 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 120) = _NSConcreteStackBlock;
    v13 = (_QWORD *)(v0 + 120);
    v13[1] = 0x40000000;
    v13[2] = sub_1001CBE20;
    v13[3] = &unk_100454148;
    v13[4] = v12;
    objc_msgSend(v11, "synchronizeWithCompletionHandler:", v13);
    return swift_continuation_await(v10);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 184);
    v16 = *(_QWORD *)(v15 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v16)
    {
      swift_retain(*(_QWORD *)(v15 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
      GroupSession.leave()();
      v9 = swift_release(v16);
    }
    return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
  }
}

uint64_t sub_1001CBDA4()
{
  return swift_task_switch(sub_1001CBDF0, 0, 0);
}

uint64_t sub_1001CBDF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CBE20(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_1001CBE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a4;
  return swift_task_switch(sub_1001CBE40, 0, 0);
}

uint64_t sub_1001CBE40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v1 = v0[10] + 16;
  swift_beginAccess(v1, v0 + 7, 0, 0);
  sub_1000244B0(v1, (uint64_t)(v0 + 2));
  v2 = v0[5];
  v3 = v0[6];
  sub_10000ABC8(v0 + 2, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1001CBEE4;
  return v7(v2, v3);
}

uint64_t sub_1001CBEE4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_BYTE *)(*(_QWORD *)v1 + 96) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001CBF40, 0, 0);
}

uint64_t sub_1001CBF40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(unsigned __int8 *)(v0 + 96);
  sub_10000682C((_QWORD *)(v0 + 16));
  if (v1 != 2 && (v1 & 1) == 0)
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session);
    if (v5)
    {
      swift_retain(*(_QWORD *)(v4 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));
      GroupSession.leave()();
      swift_release(v5);
    }
    if (qword_10048C958 != -1)
      swift_once(&qword_10048C958, sub_1001CCD54);
    v6 = type metadata accessor for Logger(0, v2);
    v7 = sub_1000086B4(v6, (uint64_t)static Logger.groupActivities);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "🛂 User did not complete the subscription flow", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001CC060(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  char *v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Participant(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = GroupSession.localParticipant.getter(v8);
  Participant.id.getter(v11);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v13 = (char *)UUID.uuidString.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16._countAndFlagsBits = 0x616C506572616853;
  v16._object = (void *)0xEC0000003D444979;
  if (String.hasPrefix(_:)(v16))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    strcpy((char *)v31, "SharePlayID=");
    BYTE5(v31[1]) = 0;
    HIWORD(v31[1]) = -5120;
    v17._countAndFlagsBits = (uint64_t)v13;
    v17._object = v15;
    String.append(_:)(v17);
  }
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, "setExternalIdentifier:", v18);

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v20 = type metadata accessor for Logger(0, v19);
  sub_1000086B4(v20, (uint64_t)static Logger.groupActivities);
  v21 = swift_bridgeObjectRetain();
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v30 = v25;
    *(_DWORD *)v24 = 136446210;
    v26._countAndFlagsBits = 0x616C506572616853;
    v26._object = (void *)0xEC0000003D444979;
    if (String.hasPrefix(_:)(v26))
    {
      swift_bridgeObjectRetain();
      v27 = (char *)v15;
    }
    else
    {
      strcpy((char *)v31, "SharePlayID=");
      BYTE5(v31[1]) = 0;
      HIWORD(v31[1]) = -5120;
      v28._countAndFlagsBits = (uint64_t)v13;
      v28._object = v15;
      String.append(_:)(v28);
      v13 = (char *)v31[0];
      v27 = (char *)v31[1];
    }
    *(_QWORD *)(v24 + 4) = sub_100019400(v13, v27, &v30);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "externalID identity=%{public}s", (uint8_t *)v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
}

uint64_t sub_1001CC384()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100495A94);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100092ED4;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001CC3EC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_100495A94);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1001CC454;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001CC454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 32));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001D2D00, v2, v3);
}

void sub_1001CC4C4(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  void (*v12)(uint64_t, char);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _BYTE v21[32];
  _BYTE v22[24];

  if (!*a1)
    return;
  v20 = *a1;
  if (!objc_msgSend(v20, "isSharedListeningSession")
    || (v3 = objc_msgSend(v20, "tracklist"),
        v19 = objc_msgSend(v3, "playingItem"),
        v3,
        !v19))
  {
LABEL_16:

    return;
  }
  if ((objc_msgSend(v19, "isPlaceholder") & 1) != 0)
  {

    return;
  }
  v4 = objc_msgSend(v19, "metadataObject");
  if (!v4)
  {
LABEL_15:

    goto LABEL_16;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "innermostModelObject");

  objc_opt_self(MPModelSong);
  v7 = swift_dynamicCastObjCClass(v6);
  if (!v7)
  {

    goto LABEL_15;
  }
  v8 = v7;
  v9 = a2 + 16;
  swift_beginAccess(v9, v22, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v11 = Strong;
    v12 = sub_1001C600C((uint64_t)v21);
    v14 = v13;
    v15 = type metadata accessor for GroupActivitiesManager.Activity(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      v16 = type metadata accessor for CodableModelObjectIdentity();
      v17 = swift_allocObject(v16, 24, 7);
      *(_QWORD *)(v17 + 16) = v8;
      v18 = *(_QWORD *)(v14 + 56);
      v6 = v6;
      swift_release(v18);
      *(_QWORD *)(v14 + 56) = v17;
    }
    v12((uint64_t)v21, 0);
    swift_release(v11);
  }

}

uint64_t sub_1001CC6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_1001CC6CC, 0, 0);
}

uint64_t sub_1001CC6CC()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session) != 0;
  v2 = (_QWORD *)swift_task_alloc(dword_100495A94);
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_10001ACC0;
  return GroupActivitiesManager.leave(performLeaveCommand:)(v1);
}

uint64_t sub_1001CC730(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];

  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v25[-v18];
  if ((a1 & 1) != 0)
  {
    v20 = a4;
    v21 = a5;
  }
  else
  {
    v20 = a2;
    v21 = a3;
  }
  String.LocalizationValue.init(stringLiteral:)(v20, v21);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v17, v19, v13);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v22 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v23 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v22, v12, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
  return v23;
}

uint64_t sub_1001CC8C0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int64x2_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v29[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = __chkstk_darwin(v13);
  v18 = &v29[-v17];
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v15, v18, v11);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v24 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v21 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v24, v10, 0, 0, 256);
    v26 = v25;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
    v27 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v19 = UUID.uuidString.getter(v27);
    v20 = v28;
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v23 = vdupq_n_s64(2uLL);
    v23.i64[0] = v26;
    v22 = &unk_100496440;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0uLL;
  }
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v21;
  *(int64x2_t *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 40) = v22;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1001CCAD4()
{
  return swift_task_switch(sub_1001CCAE8, 0, 0);
}

uint64_t sub_1001CCAE8()
{
  uint64_t v0;
  id v1;
  void *v2;

  v1 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v1)
  {
    v2 = v1;
    LSApplicationWorkspace.openMusicSettings()();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CCB40()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100495A94);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

_QWORD *GroupActivitiesManager.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_10000682C(v0 + 2);
  sub_10016D24C(v0[7], v0[8], v0[9], v0[10]);
  v1 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount;
  v2 = sub_100005574((uint64_t *)&unk_100495700);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading;
  v4 = sub_100005574(&qword_100492DA0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction;
  v6 = sub_100005574(&qword_100495B98);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_artworkCachingReference));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_sessionStateObserver));
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_nowPlayingSubscription));
  sub_100008758((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_activity, &qword_100495C28);
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_pendingSession));
  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_session));

  swift_release(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostJoinSessionState));
  sub_100008758((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_signpostInitiationToFirstAudioFrame, &qword_100490F10);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager____lazy_storage___autoBugCaptureDomain));
  sub_100008758((uint64_t)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_autoBugCaptureIntervalBeginDate, &qword_100490730);
  sub_1001CE56C(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext), *(void **)((char *)v0 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_eligibilityContext + 8));
  return v0;
}

uint64_t GroupActivitiesManager.__deallocating_deinit()
{
  uint64_t v0;

  GroupActivitiesManager.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001CCD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.groupActivities);
  sub_1000086B4(v2, (uint64_t)static Logger.groupActivities);
  sub_1000087DC(0, (unint64_t *)&qword_1004904C0, OS_os_log_ptr);
  v3 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x74634170756F7247, 0xEF73656974697669);
  return Logger.init(_:)(v3);
}

uint64_t static Logger.groupActivities.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C958 != -1)
    swift_once(&qword_10048C958, sub_1001CCD54);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.groupActivities);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

unint64_t sub_1001CCE68(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    return String.subscript.getter(result, v4 | (v3 << 16), a2, a3);
  }
  return result;
}

uint64_t sub_1001CCEB4()
{
  _BYTE *v0;

  if (*v0)
    return 7955819;
  else
    return 0x696669746E656469;
}

uint64_t sub_1001CCEEC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D2AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001CCF10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D16F8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001CCF38(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D16F8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001CCF60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSString v14;
  NSString v15;
  id v16;
  _QWORD v17[2];
  char v18;
  char v19;

  v3 = v1;
  v5 = sub_100005574(&qword_1004961A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001D16F8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  if (v2)
  {
    v12 = type metadata accessor for CodableListeningProperties();
    swift_deallocPartialClassInstance(v1, v12, 24, 7);
  }
  else
  {
    v19 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v19, v5);
    v18 = 1;
    v17[1] = KeyedDecodingContainer.decode(_:forKey:)(&v18, v5);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(MPCPlaybackSharedListeningProperties), "propertiesWithSessionIdentifier:sessionKey:", v14, v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 16) = v16;
  }
  sub_10000682C(a1);
  return v3;
}

uint64_t sub_1001CD154(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  char v24;

  v3 = v1;
  v5 = sub_100005574(&qword_100496208);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001D16F8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableListeningProperties.CodingKey, &type metadata for CodableListeningProperties.CodingKey, v11, v9, v10);
  v12 = *(void **)(v3 + 16);
  v13 = objc_msgSend(v12, "sessionIdentifier");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v24 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v14, v16, &v24, v5);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v12, "sessionKey");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v23 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v18, v20, &v23, v5);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001CD2F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001CDAA4(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableListeningProperties, (uint64_t (*)(uint64_t))sub_1001CCF60, a2);
}

uint64_t sub_1001CD318(_QWORD *a1)
{
  return sub_1001CD154(a1);
}

uint64_t sub_1001CD338()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C436C65646F6DLL;
  else
    return 0x696669746E656469;
}

uint64_t sub_1001CD388@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D2BD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001CD3AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D173C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001CD3D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D173C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001CD3FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  _BYTE *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t result;
  NSString *v22;
  uint64_t ObjCClassMetadata;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE *v30;
  __n128 v31;
  id v32;
  void *v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  NSString *v39;
  id v40;
  void **aBlock;
  uint64_t v42;
  void (*v43)(uint64_t, void *);
  void *v44;
  CFRange (__swiftcall *v45)(__C::_NSRange);
  uint64_t v46;
  char v47;

  v3 = v1;
  v5 = sub_100005574(&qword_1004961B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001D173C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  if (!v2)
  {
    v47 = 0;
    v12 = sub_1001D1780();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&aBlock, &type metadata for Data, &v47, v5, &type metadata for Data, v12);
    v14 = (uint64_t)aBlock;
    v13 = v42;
    sub_1000087DC(0, (unint64_t *)&unk_1004961D0, NSKeyedUnarchiver_ptr);
    v15 = sub_1000087DC(0, &qword_100490B78, MPIdentifierSet_ptr);
    v16 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v15, v14, v13, v15);
    if (v16)
    {
      v40 = v16;
      LOBYTE(aBlock) = 1;
      KeyedDecodingContainer.decode(_:forKey:)(&aBlock, v5);
      v39 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v22 = v39;
      v38 = NSClassFromString(v39);

      if (v38)
      {
        ObjCClassMetadata = swift_getObjCClassMetadata(v38);
        v24 = sub_1000087DC(0, &qword_100490B80, MPModelObject_ptr);
        v25 = swift_dynamicCastMetatype(ObjCClassMetadata, v24);
        if (v25)
        {
          if (qword_10048C968 != -1)
            goto LABEL_22;
          while (1)
          {
            v26 = *((_QWORD *)off_1004964D0 + 2);
            if (!v26)
              break;
            if (*((_QWORD *)off_1004964D0 + 4) == v25)
            {
LABEL_19:
              v32 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
              v45 = CFRange.init(_:);
              v46 = 0;
              aBlock = _NSConcreteStackBlock;
              v42 = 1107296256;
              v43 = sub_1000E776C;
              v44 = &unk_100453F00;
              v39 = (NSString *)_Block_copy(&aBlock);
              v33 = v32;
              v34 = v40;
              v38 = (Class)objc_msgSend(v33, "initWithIdentifiers:block:", v40, v39);

              _Block_release(v39);
              v35 = swift_release(v46);
              LOBYTE(v34) = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v35);
              result = sub_1000067E8(v14, v13);
              if ((v34 & 1) == 0)
              {
                (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
                *(_QWORD *)(v3 + 16) = v38;
                goto LABEL_6;
              }
              __break(1u);
              return result;
            }
            if (v26 == 1)
              break;
            v27 = 5;
            while (1)
            {
              v28 = v27 - 3;
              if (__OFADD__(v27 - 4, 1))
                break;
              if (*((_QWORD *)off_1004964D0 + v27) == v25)
                goto LABEL_19;
              ++v27;
              if (v28 == v26)
                goto LABEL_18;
            }
            __break(1u);
LABEL_22:
            v36 = v25;
            swift_once(&qword_10048C968, sub_1001D6160);
            v25 = v36;
          }
        }
      }
LABEL_18:
      v29 = sub_1001D17C4();
      swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v29, 0, 0);
      *v30 = 1;
      swift_willThrow(v31);
      sub_1000067E8(v14, v13);

    }
    else
    {
      v17 = sub_1001D17C4();
      swift_allocError(&type metadata for CodableModelObjectIdentity.InitializerError, v17, 0, 0);
      *v18 = 0;
      swift_willThrow(v19);
      sub_1000067E8(v14, v13);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v20 = type metadata accessor for CodableModelObjectIdentity();
  swift_deallocPartialClassInstance(v3, v20, 24, 7);
LABEL_6:
  sub_10000682C(a1);
  return v3;
}

uint64_t sub_1001CD820(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  __n128 v21;
  objc_class *ObjCClassFromMetadata;
  NSString *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29[2];

  v3 = v1;
  v5 = sub_100005574(&qword_1004961F8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001D173C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for CodableModelObjectIdentity.CodingKey, &type metadata for CodableModelObjectIdentity.CodingKey, v11, v9, v10);
  v12 = (void *)objc_opt_self(NSKeyedArchiver);
  v13 = objc_msgSend(*(id *)(v3 + 16), "identifiers");
  v29[0] = 0;
  v14 = objc_msgSend(v12, "archivedDataWithRootObject:requiringSecureCoding:error:", v13, 1, v29);

  v15 = v29[0];
  if (v14)
  {
    v16 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

    v29[0] = v16;
    v29[1] = v18;
    HIBYTE(v28) = 0;
    v19 = sub_1001D1820();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v29, (char *)&v28 + 7, v5, &type metadata for Data, v19);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      swift_getObjectType();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      v24 = NSStringFromClass(ObjCClassFromMetadata);
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v27 = v26;

      LOBYTE(v29[0]) = 1;
      KeyedEncodingContainer.encode(_:forKey:)(v25, v27, v29, v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
    }
    return sub_1000067E8((uint64_t)v16, (unint64_t)v18);
  }
  else
  {
    v20 = v15;
    _convertNSErrorToError(_:)(v15);

    swift_willThrow(v21);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1001CDA80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001CDAA4(a1, (uint64_t (*)(_QWORD))type metadata accessor for CodableModelObjectIdentity, (uint64_t (*)(uint64_t))sub_1001CD3FC, a2);
}

uint64_t sub_1001CDAA4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  v8 = a2(0);
  swift_allocObject(v8, 24, 7);
  result = a3(a1);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1001CDB04(_QWORD *a1)
{
  return sub_1001CD820(a1);
}

uint64_t sub_1001CDB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000682C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t type metadata accessor for GroupActivitiesManager.Activity.Metadata(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100495EC0, (uint64_t)&nominal type descriptor for GroupActivitiesManager.Activity.Metadata);
}

uint64_t sub_1001CDC60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_100495A84);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000F894;
  return sub_1001C4034(a1, v5, v6, v7, v8, v9);
}

id sub_1001CDCF8(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
    case 3:
      result = result;
      break;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
LABEL_4:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 4:
      result = (id)sub_1001CDD88((uint64_t)result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001CDD88(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001CDDBC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

uint64_t sub_1001CDDF8(uint64_t *a1, uint64_t a2)
{
  initializeWithTake for BagProvider.Result(a2, a1);
  return a2;
}

uint64_t sub_1001CDE34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10016D1C0(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001CDE74()
{
  uint64_t v0;

  return GroupActivitiesManager.postEvent(_:participantID:)(v0 + 24, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1001CDEA0(int a1, void *a2, char a3, unsigned int a4, void *a5, char a6)
{
  char v6;
  id v11;
  id v12;
  char v13;

  v6 = 0;
  if (((a1 ^ a4) & 1) == 0 && (((a1 ^ a4) >> 8) & 1) == 0)
  {
    if (a2)
    {
      if (a5)
      {
        sub_1000087DC(0, &qword_1004961F0, ICMusicSubscriptionStatus_ptr);
        v11 = a5;
        v12 = a2;
        v13 = static NSObject.== infix(_:_:)(v12, v11);

        if ((v13 & 1) != 0)
          goto LABEL_6;
      }
    }
    else if (!a5)
    {
LABEL_6:
      v6 = a3 ^ a6 ^ 1;
      return v6 & 1;
    }
    v6 = 0;
  }
  return v6 & 1;
}

id _s9MusicCore22GroupActivitiesManagerC8ActivityV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 56);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(a2 + 56);
  if (!v3)
    return 0;
  v4 = *(void **)(v3 + 16);
  v5 = *(id *)(v2 + 16);
  v6 = v4;
  v7 = objc_msgSend(v5, "identifiers");
  v8 = objc_msgSend(v6, "identifiers");
  v9 = objc_msgSend(v7, "intersectsSet:", v8);

  return v9;
}

Swift::Int sub_1001CE00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  Swift::Int result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100005574(&qword_100496298);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_BYTE *)(v6 + v4);
      Hasher.init(_seed:)(v19);
      NSDirectionalEdgeInsets.Edge.hash(into:)((uint64_t)v19, v7);
      result = Hasher._finalize()();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      if (((1 << v10) & v12) != 0)
      {
        v14 = *(_QWORD *)(v3 + 48);
        result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
        if ((result & 1) != 0)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          result = static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(*(_BYTE *)(v14 + v10), v7);
          if ((result & 1) != 0)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t type metadata accessor for GroupActivitiesManager.ArtworkCachingReference()
{
  return objc_opt_self(_TtCC9MusicCore22GroupActivitiesManagerP33_4D3C9D6548BB3147DD0F1D268040B2BF23ArtworkCachingReference);
}

unint64_t sub_1001CE178()
{
  unint64_t result;

  result = qword_100495B10;
  if (!qword_100495B10)
  {
    result = swift_getWitnessTable(&unk_10039136C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_100495B10);
  }
  return result;
}

uint64_t type metadata accessor for CodableListeningProperties()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableListeningProperties);
}

uint64_t type metadata accessor for CodableModelObjectIdentity()
{
  return objc_opt_self(_TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableModelObjectIdentity);
}

unint64_t sub_1001CE1FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100495B38;
  if (!qword_100495B38)
  {
    v1 = sub_100005600(&qword_100495B30);
    sub_100006924(&qword_100495B40, (uint64_t (*)(uint64_t))type metadata accessor for CodableListeningProperties, (uint64_t)&unk_1003912F4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100495B38);
  }
  return result;
}

unint64_t sub_1001CE278()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100495B50;
  if (!qword_100495B50)
  {
    v1 = sub_100005600(&qword_100495B48);
    sub_100006924(&qword_100495B58, (uint64_t (*)(uint64_t))type metadata accessor for CodableModelObjectIdentity, (uint64_t)&unk_1003912CC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_100495B50);
  }
  return result;
}

unint64_t sub_1001CE314()
{
  unint64_t result;

  result = qword_100495BA8;
  if (!qword_100495BA8)
  {
    result = swift_getWitnessTable(&unk_100391918, &type metadata for SharedListening.ErrorHandling.Error);
    atomic_store(result, (unint64_t *)&qword_100495BA8);
  }
  return result;
}

uint64_t sub_1001CE360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = v0 + v3;
  v6 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v5 + *(int *)(v6 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v11, v2 | 7);
}

uint64_t sub_1001CE464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc(dword_100495BC4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000EA88;
  return sub_1001C2218(a1, v6, v7, v8);
}

uint64_t sub_1001CE504()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_100495C1C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  v2 = (_QWORD *)swift_task_alloc(dword_10049622C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return sub_1001C93F0();
}

void sub_1001CE56C(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)

}

uint64_t sub_1001CE57C()
{
  return sub_100006924(&qword_100495C30, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

uint64_t sub_1001CE5A8()
{
  return sub_100006924((unint64_t *)&unk_100495C38, type metadata accessor for GroupActivitiesManager.Activity, (uint64_t)&protocol conformance descriptor for GroupActivitiesManager.Activity);
}

uint64_t sub_1001CE5D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_100495700);
}

uint64_t sub_1001CE5F8(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100496220, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__participantsCount, (uint64_t *)&unk_100495700);
}

uint64_t sub_1001CE624(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_100492DA0);
}

uint64_t sub_1001CE648(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100492DA8, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__isLoading, &qword_100492DA0);
}

uint64_t sub_1001CE674(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_100495B98);
}

uint64_t sub_1001CE698(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, (uint64_t *)&unk_100496210, &OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager__reaction, &qword_100495B98);
}

uint64_t sub_1001CE6C4()
{
  return type metadata accessor for GroupActivitiesManager(0);
}

uint64_t type metadata accessor for GroupActivitiesManager(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_100495C70, (uint64_t)&nominal type descriptor for GroupActivitiesManager);
}

void sub_1001CE6E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[20];

  v14[0] = "(";
  v14[1] = &unk_100391080;
  sub_1001B8E28(319, (unint64_t *)&unk_100495C80, (uint64_t)&type metadata for Int);
  if (v3 <= 0x3F)
  {
    v14[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001B8E28(319, (unint64_t *)&qword_100492E18, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v14[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001CE888(319);
      if (v7 <= 0x3F)
      {
        v14[4] = *(_QWORD *)(v6 - 8) + 64;
        v14[5] = (char *)&value witness table for Builtin.Int64 + 64;
        v14[6] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[7] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v14[9] = &unk_100391098;
        v14[10] = &unk_1003910B0;
        sub_100084498(319, (unint64_t *)&unk_100495C98, type metadata accessor for GroupActivitiesManager.Activity);
        if (v9 <= 0x3F)
        {
          v14[11] = *(_QWORD *)(v8 - 8) + 64;
          v14[12] = &unk_100391098;
          v14[13] = &unk_100391098;
          v14[14] = &unk_100391098;
          v14[15] = &unk_100391098;
          sub_100084498(319, (unint64_t *)&qword_100490F90, type metadata accessor for Signpost);
          if (v11 <= 0x3F)
          {
            v14[16] = *(_QWORD *)(v10 - 8) + 64;
            v14[17] = &unk_100391098;
            sub_100084498(319, (unint64_t *)&unk_100495CA8, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
            if (v13 <= 0x3F)
            {
              v14[18] = *(_QWORD *)(v12 - 8) + 64;
              v14[19] = &unk_1003910C8;
              swift_updateClassMetadata2(a1, 256, 20, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

void sub_1001CE888(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100495C90)
  {
    v2 = sub_100005600(&qword_100495B88);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100495C90);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *__dst;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = (uint64_t *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v9);
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v12 = (void *)a2[5];
    v11 = a2[6];
    v4[5] = (uint64_t)v12;
    v4[6] = v11;
    v13 = a2[7];
    v4[7] = v13;
    v14 = *(int *)(a3 + 32);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
    v20 = v12;
    swift_retain(v11);
    swift_retain(v13);
    if (v19(v16, 1, v17))
    {
      v21 = sub_100005574(&qword_100495AF0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v33 = v18;
      v22 = v16[1];
      *v15 = *v16;
      v15[1] = v22;
      v23 = v16[3];
      v15[2] = v16[2];
      v15[3] = v23;
      v24 = (void *)v16[4];
      v15[4] = v24;
      v25 = *(int *)(v17 + 28);
      __dst = (char *)v15 + v25;
      v26 = (char *)v16 + v25;
      v27 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v27 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v24;
      if (v34(v26, 1, v27))
      {
        v30 = sub_100005574(&qword_10048D510);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      *(_OWORD *)((char *)v15 + *(int *)(v17 + 32)) = *(_OWORD *)((char *)v16 + *(int *)(v17 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 24))
    sub_10000682C((_QWORD *)a1);

  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v7 = v4 + *(int *)(v5 + 28);
    v8 = type metadata accessor for URL(0);
    v9 = *(_QWORD *)(v8 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v10 = *(void **)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v9;
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(int *)(a3 + 32);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
  v18 = v10;
  swift_retain(v9);
  swift_retain(v11);
  if (v17(v14, 1, v15))
  {
    v19 = sub_100005574(&qword_100495AF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v32 = v16;
    v20 = v14[1];
    *v13 = *v14;
    v13[1] = v20;
    v21 = v14[3];
    v13[2] = v14[2];
    v13[3] = v21;
    v22 = (void *)v14[4];
    v13[4] = v22;
    v23 = *(int *)(v15 + 28);
    __dst = (char *)v13 + v23;
    v24 = (char *)v14 + v23;
    v25 = type metadata accessor for URL(0);
    v26 = *(_QWORD *)(v25 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = v22;
    if (v30(v24, 1, v25))
    {
      v28 = sub_100005574(&qword_10048D510);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.Activity(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *__dst;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      sub_100020AF8((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    sub_10000682C((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *(void **)(a1 + 40);
  v10 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = v10;

  v12 = *(_QWORD *)(a1 + 48);
  v13 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = *(int *)(a3 + 32);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_100006798((uint64_t)v17, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_14;
    }
    *v17 = *v18;
    v17[1] = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17[2] = v18[2];
    v17[3] = v18[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = (void *)v17[4];
    v32 = (void *)v18[4];
    v17[4] = v32;
    v33 = v32;

    v34 = *(int *)(v19 + 28);
    v35 = (char *)v17 + v34;
    v36 = (char *)v18 + v34;
    v37 = type metadata accessor for URL(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v35, 1, v37);
    v41 = v39(v36, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_23:
        v43 = *(int *)(v19 + 32);
        v44 = (_QWORD *)((char *)v17 + v43);
        v45 = (_QWORD *)((char *)v18 + v43);
        *v44 = *v45;
        v44[1] = v45[1];
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    }
    v42 = sub_100005574(&qword_10048D510);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_23;
  }
  if (v23)
  {
LABEL_14:
    v30 = sub_100005574(&qword_100495AF0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v24 = (void *)v18[4];
  v17[4] = v24;
  v25 = *(int *)(v19 + 28);
  __dst = (char *)v17 + v25;
  v26 = (char *)v18 + v25;
  v27 = type metadata accessor for URL(0);
  v47 = *(_QWORD *)(v27 - 8);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v24;
  if (v48(v26, 1, v27))
  {
    v29 = sub_100005574(&qword_10048D510);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v27);
  }
  *(_OWORD *)((char *)v17 + *(int *)(v19 + 32)) = *(_OWORD *)((char *)v18 + *(int *)(v19 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 32);
  v6 = (_OWORD *)(a1 + v5);
  v7 = (_OWORD *)(a2 + v5);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100005574(&qword_100495AF0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *v6 = *v7;
    v6[1] = v11;
    *((_QWORD *)v6 + 4) = *((_QWORD *)v7 + 4);
    v12 = *(int *)(v8 + 28);
    v13 = (char *)v6 + v12;
    v14 = (char *)v7 + v12;
    v15 = type metadata accessor for URL(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = sub_100005574(&qword_10048D510);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(_OWORD *)((char *)v6 + *(int *)(v8 + 32)) = *(_OWORD *)((char *)v7 + *(int *)(v8 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, uint64_t);
  int v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;

  if (*(_QWORD *)(a1 + 24))
    sub_10000682C((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(void **)(a1 + 40);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;

  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v10);
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_100006798((uint64_t)v12, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_9;
    }
    v27 = v13[1];
    *v12 = *v13;
    v12[1] = v27;
    swift_bridgeObjectRelease();
    v28 = v13[3];
    v12[2] = v13[2];
    v12[3] = v28;
    swift_bridgeObjectRelease();
    v29 = (void *)v12[4];
    v12[4] = v13[4];

    v30 = *(int *)(v14 + 28);
    v31 = (char *)v12 + v30;
    v32 = (char *)v13 + v30;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_18:
        *(_OWORD *)((char *)v12 + *(int *)(v14 + 32)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 32));
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v38 = sub_100005574(&qword_10048D510);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_18;
  }
  if (v18)
  {
LABEL_9:
    v26 = sub_100005574(&qword_100495AF0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  v19 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v19;
  v12[4] = v13[4];
  v20 = *(int *)(v14 + 28);
  v21 = (char *)v12 + v20;
  v22 = (char *)v13 + v20;
  v23 = type metadata accessor for URL(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_100005574(&qword_10048D510);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_OWORD *)((char *)v12 + *(int *)(v14 + 32)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 32));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CF5D0);
}

uint64_t sub_1001CF5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100005574(&qword_100495AF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CF668);
}

uint64_t sub_1001CF668(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = sub_100005574(&qword_100495AF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1001CF6E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = &unk_100391098;
  v4[2] = &unk_100391098;
  v4[3] = &unk_100391098;
  sub_100084498(319, (unint64_t *)&unk_100495E28, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupActivitiesManager.Activity.Metadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = (void *)a2[4];
    v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[4] = (uint64_t)v9;
    v12 = type metadata accessor for URL(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v9;
    if (v14(v11, 1, v12))
    {
      v16 = sub_100005574(&qword_10048D510);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    *(_OWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v7;
  if (v13(v10, 1, v11))
  {
    v15 = sub_100005574(&qword_10048D510);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithCopy for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[4];
  v7 = (void *)a2[4];
  a1[4] = v7;
  v8 = v7;

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100005574(&qword_10048D510);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = *(int *)(a3 + 32);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  return a1;
}

uint64_t initializeWithTake for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_10048D510);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for GroupActivitiesManager.Activity.Metadata(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100005574(&qword_10048D510);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001CFE04);
}

uint64_t sub_1001CFE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100005574(&qword_10048D510);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.Activity.Metadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001CFE9C);
}

uint64_t sub_1001CFE9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_100005574(&qword_10048D510);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1001CFF14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100391118;
  v4[1] = &unk_100391118;
  v4[2] = &unk_100391098;
  sub_100084498(319, (unint64_t *)&qword_100495ED0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100391130;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void destroy for GroupActivitiesManager.EligibilityContext(uint64_t a1)
{

}

uint64_t _s9MusicCore22GroupActivitiesManagerC18EligibilityContextVwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for GroupActivitiesManager.EligibilityContext(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupActivitiesManager.EligibilityContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.EligibilityContext()
{
  return &type metadata for GroupActivitiesManager.EligibilityContext;
}

ValueMetadata *type metadata accessor for GroupActivitiesManager.Activity.CodingKey()
{
  return &type metadata for GroupActivitiesManager.Activity.CodingKey;
}

uint64_t *sub_1001D016C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  char *__dst;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = type metadata accessor for GroupActivitiesManager.Activity(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[3];
      v38 = v8;
      if (v10)
      {
        v11 = a2[4];
        a1[3] = v10;
        a1[4] = v11;
        (**(void (***)(uint64_t *, uint64_t *))(v10 - 8))(a1, a2);
      }
      else
      {
        v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v12;
        a1[4] = a2[4];
      }
      v14 = (void *)a2[5];
      v13 = a2[6];
      a1[5] = (uint64_t)v14;
      a1[6] = v13;
      v15 = a2[7];
      a1[7] = v15;
      v16 = *(int *)(v7 + 32);
      v17 = (uint64_t *)((char *)a1 + v16);
      v18 = (uint64_t *)((char *)a2 + v16);
      v19 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
      v22 = v14;
      swift_retain(v13);
      swift_retain(v15);
      if (v21(v18, 1, v19))
      {
        v23 = sub_100005574(&qword_100495AF0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        v24 = v38;
      }
      else
      {
        v25 = v18[1];
        *v17 = *v18;
        v17[1] = v25;
        v26 = v18[3];
        v17[2] = v18[2];
        v17[3] = v26;
        v27 = (void *)v18[4];
        v17[4] = v27;
        v28 = *(int *)(v19 + 28);
        __dst = (char *)v17 + v28;
        v36 = v20;
        v29 = (char *)v18 + v28;
        v30 = type metadata accessor for URL(0);
        v34 = *(_QWORD *)(v30 - 8);
        v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31 = v27;
        if (v37(v29, 1, v30))
        {
          v32 = sub_100005574(&qword_10048D510);
          memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v29, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v30);
        }
        v24 = v38;
        *(_OWORD *)((char *)v17 + *(int *)(v19 + 32)) = *(_OWORD *)((char *)v18 + *(int *)(v19 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v17, 0, 1, v19);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_1001D03E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
  if (!(_DWORD)result)
  {
    if (*(_QWORD *)(a1 + 24))
      sub_10000682C((_QWORD *)a1);

    swift_release(*(_QWORD *)(a1 + 48));
    swift_release(*(_QWORD *)(a1 + 56));
    v4 = a1 + *(int *)(v2 + 32);
    v5 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v6 = v4 + *(int *)(v5 + 28);
      v7 = type metadata accessor for URL(0);
      v8 = *(_QWORD *)(v7 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  return result;
}

_OWORD *sub_1001D04F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_QWORD *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = *((_QWORD *)a2 + 3);
    v36 = v7;
    if (v8)
    {
      v9 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = v8;
      *((_QWORD *)a1 + 4) = v9;
      (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(a1, a2);
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    }
    v12 = (void *)*((_QWORD *)a2 + 5);
    v11 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v11;
    v13 = *((_QWORD *)a2 + 7);
    *((_QWORD *)a1 + 7) = v13;
    v14 = *(int *)(v6 + 32);
    v15 = (_QWORD *)((char *)a1 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
    v20 = v12;
    swift_retain(v11);
    swift_retain(v13);
    if (v19(v16, 1, v17))
    {
      v21 = sub_100005574(&qword_100495AF0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v36;
    }
    else
    {
      v23 = v16[1];
      *v15 = *v16;
      v15[1] = v23;
      v24 = v16[3];
      v15[2] = v16[2];
      v15[3] = v24;
      v25 = (void *)v16[4];
      v15[4] = v25;
      v26 = *(int *)(v17 + 28);
      __dst = (char *)v15 + v26;
      v35 = v18;
      v27 = (char *)v16 + v26;
      v28 = type metadata accessor for URL(0);
      v32 = *(_QWORD *)(v28 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v25;
      if (v33(v27, 1, v28))
      {
        v30 = sub_100005574(&qword_10048D510);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v27, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v28);
      }
      v22 = v36;
      *(_OWORD *)((char *)v15 + *(int *)(v17 + 32)) = *(_OWORD *)((char *)v16 + *(int *)(v17 + 32));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v15, 0, 1, v17);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_1001D0748(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(__int128 *, uint64_t, uint64_t);
  int v46;
  int v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  _QWORD *v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  _QWORD *__dst;
  char *__dsta;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8((uint64_t)a2, 4, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *((_QWORD *)a2 + 3);
      if (v11)
      {
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
      }
      else
      {
        v15 = *a2;
        v16 = a2[1];
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_OWORD *)a1 = v15;
        *(_OWORD *)(a1 + 16) = v16;
      }
      v17 = (void *)*((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v17;
      v18 = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 48) = v18;
      v19 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v19;
      v20 = *(int *)(v6 + 32);
      __dst = (_QWORD *)(a1 + v20);
      v21 = (_QWORD *)((char *)a2 + v20);
      v22 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
      v25 = v17;
      swift_retain(v18);
      swift_retain(v19);
      if (v24(v21, 1, v22))
      {
        v26 = sub_100005574(&qword_100495AF0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        *__dst = *v21;
        __dst[1] = v21[1];
        __dst[2] = v21[2];
        __dst[3] = v21[3];
        v27 = (void *)v21[4];
        __dst[4] = v27;
        v28 = *(int *)(v22 + 28);
        v73 = (char *)__dst + v28;
        v71 = (char *)v21 + v28;
        v29 = type metadata accessor for URL(0);
        v70 = *(_QWORD *)(v29 - 8);
        v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = v27;
        if (v72(v71, 1, v29))
        {
          v31 = sub_100005574(&qword_10048D510);
          memcpy(v73, v71, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v73, v71, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v73, 0, 1, v29);
        }
        *(_OWORD *)((char *)__dst + *(int *)(v22 + 32)) = *(_OWORD *)((char *)v21 + *(int *)(v22 + 32));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_100006798(a1, type metadata accessor for GroupActivitiesManager.Activity);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v13 = (void *)a1;
LABEL_8:
    memcpy(v13, a2, v12);
    return a1;
  }
  v14 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v14)
    {
      sub_100020AF8((_QWORD *)a1, a2);
      goto LABEL_21;
    }
    sub_10000682C((_QWORD *)a1);
  }
  else if (v14)
  {
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v14 - 8))(a1, a2);
    goto LABEL_21;
  }
  v32 = *a2;
  v33 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v32;
  *(_OWORD *)(a1 + 16) = v33;
LABEL_21:
  v34 = *(void **)(a1 + 40);
  v35 = (void *)*((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 40) = v35;
  v36 = v35;

  v37 = *(_QWORD *)(a1 + 48);
  v38 = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v38;
  swift_retain(v38);
  swift_release(v37);
  v39 = *(_QWORD *)(a1 + 56);
  v40 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 56) = v40;
  swift_retain(v40);
  swift_release(v39);
  v41 = *(int *)(v6 + 32);
  v42 = (__int128 *)(a1 + v41);
  a2 = (__int128 *)((char *)a2 + v41);
  v43 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v42, 1, v43);
  v47 = v45(a2, 1, v43);
  if (!v46)
  {
    if (v47)
    {
      sub_100006798((uint64_t)v42, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
      goto LABEL_27;
    }
    *(_QWORD *)v42 = *(_QWORD *)a2;
    *((_QWORD *)v42 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v42 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)v42 + 3) = *((_QWORD *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v55 = (void *)*((_QWORD *)v42 + 4);
    v56 = (void *)*((_QWORD *)a2 + 4);
    *((_QWORD *)v42 + 4) = v56;
    v57 = v56;

    v58 = *(int *)(v43 + 28);
    v59 = (char *)v42 + v58;
    v60 = (char *)a2 + v58;
    v61 = type metadata accessor for URL(0);
    v62 = *(_QWORD *)(v61 - 8);
    v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
    v64 = v63(v59, 1, v61);
    v65 = v63(v60, 1, v61);
    if (v64)
    {
      if (!v65)
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_40:
        v67 = *(int *)(v43 + 32);
        v68 = (_QWORD *)((char *)v42 + v67);
        v69 = (_QWORD *)((char *)a2 + v67);
        *v68 = *v69;
        v68[1] = v69[1];
        return a1;
      }
    }
    else
    {
      if (!v65)
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
    }
    v66 = sub_100005574(&qword_10048D510);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_40;
  }
  if (v47)
  {
LABEL_27:
    v12 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_100495AF0) - 8) + 64);
    v13 = v42;
    goto LABEL_8;
  }
  *(_QWORD *)v42 = *(_QWORD *)a2;
  *((_QWORD *)v42 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)v42 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)v42 + 3) = *((_QWORD *)a2 + 3);
  v48 = (void *)*((_QWORD *)a2 + 4);
  *((_QWORD *)v42 + 4) = v48;
  v49 = *(int *)(v43 + 28);
  __dsta = (char *)v42 + v49;
  v50 = (char *)a2 + v49;
  v51 = type metadata accessor for URL(0);
  v74 = *(_QWORD **)(v51 - 8);
  v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v74[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v52 = v48;
  if (v75(v50, 1, v51))
  {
    v53 = sub_100005574(&qword_10048D510);
    memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v74[2])(__dsta, v50, v51);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v74[7])(__dsta, 0, 1, v51);
  }
  *(__int128 *)((char *)v42 + *(int *)(v43 + 32)) = *(__int128 *)((char *)a2 + *(int *)(v43 + 32));
  (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v42, 0, 1, v43);
  return a1;
}

_OWORD *sub_1001D0D48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
    v9 = *(int *)(v6 + 32);
    v10 = (_OWORD *)((char *)a1 + v9);
    v11 = (_OWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_100005574(&qword_100495AF0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      v16 = *(int *)(v12 + 28);
      __dst = (char *)v10 + v16;
      v17 = (char *)v11 + v16;
      v18 = type metadata accessor for URL(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100005574(&qword_10048D510);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      *(_OWORD *)((char *)v10 + *(int *)(v12 + 32)) = *(_OWORD *)((char *)v11 + *(int *)(v12 + 32));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_1001D0F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  const void *v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  int v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(void *, uint64_t, uint64_t);
  int v57;
  int v58;
  uint64_t v59;
  char *__dst;

  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 4, v6);
  v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100006798(a1, type metadata accessor for GroupActivitiesManager.Activity);
      goto LABEL_7;
    }
    if (*(_QWORD *)(a1 + 24))
      sub_10000682C((_QWORD *)a1);
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(void **)(a1 + 40);
    v23 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v23;

    v24 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_release(v24);
    v25 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_release(v25);
    v26 = *(int *)(v6 + 32);
    v27 = a1 + v26;
    v28 = (_QWORD *)(a2 + v26);
    v29 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31((uint64_t)v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        v34 = *((_OWORD *)v28 + 1);
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *(_OWORD *)(v27 + 16) = v34;
        *(_QWORD *)(v27 + 32) = v28[4];
        v35 = *(int *)(v29 + 28);
        v36 = (void *)(v27 + v35);
        v37 = (char *)v28 + v35;
        v38 = type metadata accessor for URL(0);
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
        {
          v40 = sub_100005574(&qword_10048D510);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        *(_OWORD *)(v27 + *(int *)(v29 + 32)) = *(_OWORD *)((char *)v28 + *(int *)(v29 + 32));
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        return a1;
      }
      goto LABEL_19;
    }
    if (v33)
    {
      sub_100006798(v27, type metadata accessor for GroupActivitiesManager.Activity.Metadata);
LABEL_19:
      v18 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_100495AF0) - 8) + 64);
      v19 = (void *)v27;
      v20 = v28;
      goto LABEL_8;
    }
    v48 = v28[1];
    *(_QWORD *)v27 = *v28;
    *(_QWORD *)(v27 + 8) = v48;
    swift_bridgeObjectRelease();
    v49 = v28[3];
    *(_QWORD *)(v27 + 16) = v28[2];
    *(_QWORD *)(v27 + 24) = v49;
    swift_bridgeObjectRelease();
    v50 = *(void **)(v27 + 32);
    *(_QWORD *)(v27 + 32) = v28[4];

    v51 = *(int *)(v29 + 28);
    v52 = (void *)(v27 + v51);
    v53 = (char *)v28 + v51;
    v54 = type metadata accessor for URL(0);
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
    v57 = v56(v52, 1, v54);
    v58 = v56(v53, 1, v54);
    if (v57)
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
LABEL_32:
        *(_OWORD *)(v27 + *(int *)(v29 + 32)) = *(_OWORD *)((char *)v28 + *(int *)(v29 + 32));
        return a1;
      }
    }
    else
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 40))(v52, v53, v54);
        goto LABEL_32;
      }
      (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
    }
    v59 = sub_100005574(&qword_10048D510);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_32;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
    v19 = (void *)a1;
    v20 = (const void *)a2;
LABEL_8:
    memcpy(v19, v20, v18);
    return a1;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(int *)(v6 + 32);
  v13 = (_OWORD *)(a1 + v12);
  v14 = (_OWORD *)(a2 + v12);
  v15 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100005574(&qword_100495AF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v41 = v14[1];
    *v13 = *v14;
    v13[1] = v41;
    *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    v42 = *(int *)(v15 + 28);
    __dst = (char *)v13 + v42;
    v43 = (char *)v14 + v42;
    v44 = type metadata accessor for URL(0);
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = sub_100005574(&qword_10048D510);
      memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(__dst, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 32)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 32));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1001D13B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D13C0);
}

uint64_t sub_1001D13C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5)
    return v5 - 4;
  else
    return 0;
}

uint64_t sub_1001D140C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D1418);
}

uint64_t sub_1001D1418(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 4);
  else
    v5 = 0;
  v6 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1001D146C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 4, v2);
}

uint64_t sub_1001D14A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupActivitiesManager.Activity(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 4, v4);
}

uint64_t sub_1001D14E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for GroupActivitiesManager.Activity(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 4);
    return 0;
  }
  return result;
}

unint64_t sub_1001D153C()
{
  unint64_t result;

  result = qword_100496190;
  if (!qword_100496190)
  {
    result = swift_getWitnessTable(&unk_10039127C, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_100496190);
  }
  return result;
}

unint64_t sub_1001D1584()
{
  unint64_t result;

  result = qword_100496198;
  if (!qword_100496198)
  {
    result = swift_getWitnessTable(&unk_1003911EC, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_100496198);
  }
  return result;
}

unint64_t sub_1001D15CC()
{
  unint64_t result;

  result = qword_1004961A0;
  if (!qword_1004961A0)
  {
    result = swift_getWitnessTable(&unk_100391214, &type metadata for GroupActivitiesManager.Activity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004961A0);
  }
  return result;
}

uint64_t sub_1001D1610(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  char v6;

  if (a1 == 0xD00000000000001BLL)
  {
    v4 = 0x80000001003B4FC0;
    if (a2 == 0x80000001003B4FC0)
      goto LABEL_5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x80000001003B4FC0, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001003B4FE0)
  {
    swift_bridgeObjectRelease(0x80000001003B4FE0);
    return 1;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013, 0x80000001003B4FE0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1001D16F8()
{
  unint64_t result;

  result = qword_1004961B0;
  if (!qword_1004961B0)
  {
    result = swift_getWitnessTable(&unk_10039164C, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004961B0);
  }
  return result;
}

unint64_t sub_1001D173C()
{
  unint64_t result;

  result = qword_1004961C0;
  if (!qword_1004961C0)
  {
    result = swift_getWitnessTable(&unk_1003915FC, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004961C0);
  }
  return result;
}

unint64_t sub_1001D1780()
{
  unint64_t result;

  result = qword_1004961C8;
  if (!qword_1004961C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1004961C8);
  }
  return result;
}

unint64_t sub_1001D17C4()
{
  unint64_t result;

  result = qword_1004961E0;
  if (!qword_1004961E0)
  {
    result = swift_getWitnessTable(&unk_1003915BC, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_1004961E0);
  }
  return result;
}

uint64_t sub_1001D1808(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001D1818(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001D1820()
{
  unint64_t result;

  result = qword_100496200;
  if (!qword_100496200)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_100496200);
  }
  return result;
}

double sub_1001D1864(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C2A0C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t sub_1001D1870()
{
  unint64_t result;

  result = qword_100496258;
  if (!qword_100496258)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Errno, &type metadata for Errno);
    atomic_store(result, (unint64_t *)&qword_100496258);
  }
  return result;
}

void sub_1001D18B4(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 3:
      swift_errorRelease(a1);
      break;
    case 1:
      swift_release(a1);
      break;
    case 2:

      break;
    default:
      return;
  }
}

uint64_t sub_1001D18EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v18;

  v1 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v18 = *(_QWORD *)(v1 + 64);
  v4 = sub_100005574(&qword_100496268);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = (v18 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + v6 + 8) & ~v6;
  v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_release(*(_QWORD *)(v0 + v13));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v14, v4, v16);

  return swift_deallocObject(v0, v15 + 8, v2 | v6 | 7);
}

uint64_t sub_1001D1A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_100005574(&qword_100496268) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = *(_QWORD *)(v1 + v6);
  v12 = v1 + v5;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_100496274);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10000F894;
  return sub_1001C2C00(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t sub_1001D1B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = sub_100005574(&qword_100496268);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v3;
  v10 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v0 + v3, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v22 = v8;
    v11 = v4;
    v12 = v9 + *(int *)(v10 + 28);
    v13 = type metadata accessor for URL(0);
    v14 = *(_QWORD *)(v13 - 8);
    v21 = v12;
    v15 = v12;
    v4 = v11;
    v8 = v22;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
  }
  v16 = v2 | v7 | 7;
  v17 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + v7 + 8) & ~v7;
  v19 = swift_release(*(_QWORD *)(v0 + v17));
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v18, v5, v19);
  return swift_deallocObject(v0, v18 + v8, v16);
}

double sub_1001D1CA4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_100496268) - 8) + 80);
  return sub_1001C3100(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

uint64_t sub_1001D1D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  v1 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 40) & ~v2;
  v18 = *(_QWORD *)(v1 + 64);
  v4 = sub_100005574(&qword_100496268);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v8 = v0 + v3;
  v9 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v3, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10 = v8 + *(int *)(v9 + 28);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = v2 | v6 | 7;
  v14 = (v18 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + v6 + 8) & ~v6;
  v16 = swift_release(*(_QWORD *)(v0 + v14));
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v0 + v15, v4, v16);
  return swift_deallocObject(v0, v15 + v7, v13);
}

uint64_t sub_1001D1E84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(sub_100005574(&qword_100495AF0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100005574(&qword_100496268) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc(dword_100496284);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10000F894;
  return sub_1001C32E8(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1001D1F64(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001D1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

_QWORD *sub_1001D1FDC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1001D2014(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100005574(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

unint64_t sub_1001D2058()
{
  unint64_t result;

  result = qword_1004962F0;
  if (!qword_1004962F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplicationCapabilities, &type metadata for ApplicationCapabilities);
    atomic_store(result, (unint64_t *)&qword_1004962F0);
  }
  return result;
}

uint64_t sub_1001D209C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001D20C0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1001C6FFC(a1, v1);
}

double sub_1001D20C8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1001C7D14(a1, v1);
}

uint64_t sub_1001D20D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D20FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C7E08(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001D2104(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C8704(a1, v1);
}

uint64_t sub_1001D210C(uint64_t a1)
{
  sub_1001D2164(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(void **)(a1 + 80));
  return a1;
}

uint64_t sub_1001D2164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  id v11;
  uint64_t result;

  if (a4)
  {
    v11 = a11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001D21E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10049635C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[23] = v2;
  return swift_task_switch(sub_1001CBADC, 0, 0);
}

uint64_t sub_1001D2244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10049636C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  v3[10] = v2;
  return swift_task_switch(sub_1001CBE40, 0, 0);
}

uint64_t sub_1001D22A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10049637C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  v2 = (_QWORD *)swift_task_alloc(dword_10049638C);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return sub_1001C9B60();
}

id sub_1001D2310(uint64_t a1, void *a2)
{
  id result;

  if (a2 != (void *)1)
    return a2;
  return result;
}

void sub_1001D2320(void *a1)
{
  sub_1001CC060(a1);
}

uint64_t sub_1001D2328()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D233C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1004963F4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return sub_1001CC384();
}

uint64_t sub_1001D23AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_100496404);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return sub_1001CC3EC();
}

void sub_1001D2418(id *a1)
{
  uint64_t v1;

  sub_1001CC4C4(a1, v1);
}

uint64_t sub_1001D2420()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc(dword_10049642C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  v2 = (_QWORD *)swift_task_alloc(dword_100495A94);
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_10000F894;
  return GroupActivitiesManager.leave(performLeaveCommand:)(1);
}

uint64_t sub_1001D248C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10049644C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000EA88;
  v3[2] = v2;
  return swift_task_switch(sub_1001CC6CC, 0, 0);
}

uint64_t sub_1001D24EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000682C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_1001D2604(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  return sub_1001C5668(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001D2644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for GroupActivitiesManager.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  v6 = v0 + v4;
  if (*(_QWORD *)(v0 + v4 + 24))
    sub_10000682C((_QWORD *)(v0 + v4));

  swift_release(*(_QWORD *)(v6 + 48));
  swift_release(*(_QWORD *)(v6 + 56));
  v7 = v6 + *(int *)(v1 + 32);
  v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v9 = v7 + *(int *)(v8 + 28);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001D276C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GroupActivitiesManager.Activity(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = v0 + ((v2 + 48) & ~v2);
  v5 = (_QWORD *)swift_task_alloc(dword_10049647C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000F894;
  v6 = (_QWORD *)swift_task_alloc(dword_10049646C);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_10000F894;
  return sub_1001C4784(v3, v4);
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.InitializerError()
{
  return &type metadata for CodableModelObjectIdentity.InitializerError;
}

ValueMetadata *type metadata accessor for CodableModelObjectIdentity.CodingKey()
{
  return &type metadata for CodableModelObjectIdentity.CodingKey;
}

uint64_t _s9MusicCore22GroupActivitiesManagerC8ActivityV9CodingKeyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001D2870 + 4 * byte_100390DD7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001D28A4 + 4 * byte_100390DD2[v4]))();
}

uint64_t sub_1001D28A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D28AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D28B4);
  return result;
}

uint64_t sub_1001D28C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D28C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001D28CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D28D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableListeningProperties.CodingKey()
{
  return &type metadata for CodableListeningProperties.CodingKey;
}

unint64_t sub_1001D28F4()
{
  unint64_t result;

  result = qword_100496490;
  if (!qword_100496490)
  {
    result = swift_getWitnessTable(&unk_100391474, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_100496490);
  }
  return result;
}

unint64_t sub_1001D293C()
{
  unint64_t result;

  result = qword_100496498;
  if (!qword_100496498)
  {
    result = swift_getWitnessTable(&unk_10039152C, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_100496498);
  }
  return result;
}

unint64_t sub_1001D2984()
{
  unint64_t result;

  result = qword_1004964A0;
  if (!qword_1004964A0)
  {
    result = swift_getWitnessTable(&unk_100391594, &type metadata for CodableModelObjectIdentity.InitializerError);
    atomic_store(result, (unint64_t *)&qword_1004964A0);
  }
  return result;
}

unint64_t sub_1001D29CC()
{
  unint64_t result;

  result = qword_1004964A8;
  if (!qword_1004964A8)
  {
    result = swift_getWitnessTable(&unk_10039149C, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004964A8);
  }
  return result;
}

unint64_t sub_1001D2A14()
{
  unint64_t result;

  result = qword_1004964B0;
  if (!qword_1004964B0)
  {
    result = swift_getWitnessTable(&unk_1003914C4, &type metadata for CodableModelObjectIdentity.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004964B0);
  }
  return result;
}

unint64_t sub_1001D2A5C()
{
  unint64_t result;

  result = qword_1004964B8;
  if (!qword_1004964B8)
  {
    result = swift_getWitnessTable(&unk_1003913E4, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004964B8);
  }
  return result;
}

unint64_t sub_1001D2AA4()
{
  unint64_t result;

  result = qword_1004964C0;
  if (!qword_1004964C0)
  {
    result = swift_getWitnessTable(&unk_10039140C, &type metadata for CodableListeningProperties.CodingKey);
    atomic_store(result, (unint64_t *)&qword_1004964C0);
  }
  return result;
}

uint64_t sub_1001D2AE8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    v5 = 0xEA00000000007265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEA00000000007265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 7955819 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(7955819, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1001D2BD4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    v5 = 0xEB00000000737265;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469, 0xEB00000000737265, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x616C436C65646F6DLL && a2 == 0xEE00656D614E7373)
  {
    swift_bridgeObjectRelease(0xEE00656D614E7373);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x616C436C65646F6DLL, 0xEE00656D614E7373, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void MPCPlayerCommandDialog.alert(context:completion:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unsigned int v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _QWORD v117[7];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  void *v123;
  uint64_t v124;

  v7 = v6;
  v100 = a5;
  v99 = a4;
  v105 = a3;
  v104 = a2;
  v103 = a1;
  v94 = a6;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for String.LocalizationValue(0);
  v12 = *(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v93 - v16;
  v98 = type metadata accessor for UUID(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v7;
  v19 = objc_msgSend(v7, "actions");
  v20 = sub_1000087DC(0, &qword_1004964E0, MPCPlayerCommandDialogAction_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v86 = v21;
    else
      v86 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v22 = _CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v21);
  if (!v22)
  {
    v65 = sub_100005574(&qword_100493240);
    v21 = swift_allocObject(v65, 88, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100384A80;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    (*(void (**)(char *, char *, _QWORD *))(v12 + 16))(v15, v17, v11);
    if (qword_10048C570 == -1)
      goto LABEL_36;
    goto LABEL_57;
  }
  v11 = objc_msgSend(v95, "actions");
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v20);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v11 = (_QWORD *)v23;
    else
      v11 = (_QWORD *)(v23 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v23);
    if (v12)
      goto LABEL_6;
LABEL_49:
    swift_bridgeObjectRelease(v23);
    v116 = (char *)_swiftEmptyArrayStorage;
LABEL_50:
    v87 = objc_msgSend(v95, "localizedTitle");
    if (v87)
    {
      v88 = v87;
      v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
      v82 = v89;

    }
    else
    {
      v80 = 0;
      v82 = 0;
    }
    v83 = objc_msgSend(v95, "localizedMessage");
    if (!v83)
      goto LABEL_40;
LABEL_54:
    v90 = v83;
    v84 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
    v85 = v91;

    goto LABEL_55;
  }
  v12 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v12)
    goto LABEL_49;
LABEL_6:
  if (v12 >= 1)
  {
    v24 = 0;
    v107 = v23 & 0xC000000000000001;
    v116 = (char *)_swiftEmptyArrayStorage;
    v106 = MPCPlayerCommandDialogActionTitlePlayOnlyForMe;
    v102 = v23;
    v101 = v12;
    while (1)
    {
      if (v107)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v23);
      else
        v25 = *(id *)(v23 + 8 * v24 + 32);
      v26 = v25;
      v27 = objc_msgSend(v25, "localizedTitle");
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
      if (v28 == v31 && v30 == v32)
      {
        swift_bridgeObjectRelease_n(v30, 2);
      }
      else
      {
        v34 = v32;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v31, v32, 0);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v34);
        if ((v35 & 1) == 0)
        {
          v36 = objc_msgSend(v26, "localizedTitle");
          v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v38 = v37;

          v39 = objc_msgSend(v26, "type");
          if (v39 == (id)2)
            v40 = 1;
          else
            v40 = 2;
          if (v39 == (id)1)
            v41 = 0;
          else
            v41 = v40;
          v42 = (_QWORD *)swift_allocObject(&unk_1004544F0, 40, 7);
          v43 = v99;
          v42[2] = v26;
          v42[3] = v43;
          v44 = v100;
          v42[4] = v100;
          v112 = v26;
          v45 = v26;
          sub_10003A434(v43, v44);
          v46 = v96;
          v47 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
          v48 = UUID.uuidString.getter(v47);
          v50 = v49;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v46, v98);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain(v42);
          v51 = &unk_1004964F0;
          v52 = &unk_1004964F0;
          v114 = v48;
          v110 = v48;
          v53 = v50;
          v109 = v113;
          v111 = v38;
          v54 = v38;
          v115 = v41;
          v55 = v41;
          v56 = (uint64_t)v42;
          goto LABEL_28;
        }
      }
      sub_1001D6E1C(v103, v104, v105, (uint64_t)v117);
      v50 = v117[1];
      v57 = v117[2];
      v58 = v117[3];
      v52 = (void *)v117[5];
      v114 = v117[0];
      v115 = v117[4];
      v42 = (_QWORD *)v117[6];
      sub_1000149A8((uint64_t)v117, (uint64_t)&v118, &qword_100491208);
      v53 = v119;
      if (v119)
      {
        v112 = v26;
        v113 = v57;
        v110 = v118;
        v54 = v121;
        v109 = v120;
        v55 = v122;
        v59 = v58;
        v51 = v123;
        v56 = v124;
        swift_bridgeObjectRetain();
        v111 = v59;
        swift_bridgeObjectRetain();
        sub_10003A434((uint64_t)v52, (uint64_t)v42);
LABEL_28:
        v108 = (uint64_t)v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10003A434((uint64_t)v51, v56);
        v60 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) != 0)
          v61 = v116;
        else
          v61 = sub_10003DCE4(0, *((_QWORD *)v116 + 2) + 1, 1, v116);
        v63 = *((_QWORD *)v61 + 2);
        v62 = *((_QWORD *)v61 + 3);
        if (v63 >= v62 >> 1)
          v61 = sub_10003DCE4((char *)(v62 > 1), v63 + 1, 1, v61);
        *((_QWORD *)v61 + 2) = v63 + 1;
        v116 = v61;
        v64 = &v61[56 * v63];
        *((_QWORD *)v64 + 4) = v110;
        *((_QWORD *)v64 + 5) = v53;
        *((_QWORD *)v64 + 6) = v109;
        *((_QWORD *)v64 + 7) = v54;
        v64[64] = v60;
        *((_QWORD *)v64 + 9) = v51;
        *((_QWORD *)v64 + 10) = v56;
        sub_1001D6CCC(v114, v50, v113, v111, v115, v108, (uint64_t)v42);
        swift_bridgeObjectRelease(v54);
        swift_bridgeObjectRelease(v53);

        sub_10003A5C8((uint64_t)v51, v56);
        v23 = v102;
        v12 = v101;
        goto LABEL_9;
      }

LABEL_9:
      if (v12 == ++v24)
      {
        swift_bridgeObjectRelease(v23);
        goto LABEL_50;
      }
    }
  }
  __break(1u);
LABEL_57:
  swift_once(&qword_10048C570, sub_10000AD54);
LABEL_36:
  v66 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v67 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v66, v10, 0, 0, 256);
  v69 = v68;
  (*(void (**)(char *, _QWORD *))(v12 + 8))(v17, v11);
  v70 = swift_allocObject(&unk_100454518, 32, 7);
  v71 = v99;
  v72 = v100;
  *(_QWORD *)(v70 + 16) = v99;
  *(_QWORD *)(v70 + 24) = v72;
  sub_10003A434(v71, v72);
  v73 = v96;
  v74 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v75 = UUID.uuidString.getter(v74);
  v77 = v76;
  (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v98);
  *(_QWORD *)(v21 + 32) = v75;
  *(_QWORD *)(v21 + 40) = v77;
  *(_QWORD *)(v21 + 48) = v67;
  *(_QWORD *)(v21 + 56) = v69;
  *(_BYTE *)(v21 + 64) = 0;
  *(_QWORD *)(v21 + 72) = &unk_100496500;
  *(_QWORD *)(v21 + 80) = v70;
  v116 = (char *)v21;
  v78 = objc_msgSend(v95, "localizedTitle");
  if (v78)
  {
    v79 = v78;
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v82 = v81;

  }
  else
  {
    v80 = 0;
    v82 = 0;
  }
  v83 = objc_msgSend(v95, "localizedMessage");
  if (v83)
    goto LABEL_54;
LABEL_40:
  v84 = 0;
  v85 = 0;
LABEL_55:
  v92 = v94;
  *v94 = v80;
  v92[1] = v82;
  v92[2] = v84;
  v92[3] = v85;
  *((_BYTE *)v92 + 32) = 0;
  v92[5] = (uint64_t)v116;
  v92[6] = 0;
}

BOOL static SharedListening.isMusicItemTypeSupported(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;

  if (qword_10048C970 != -1)
    swift_once(&qword_10048C970, sub_1001D623C);
  v2 = *((_QWORD *)off_1004964D8 + 2);
  if (!v2)
    return 0;
  v3 = (uint64_t *)((char *)off_1004964D8 + 32);
  v4 = v2 - 1;
  do
  {
    v5 = *v3;
    v3 += 2;
    result = v5 == a1;
  }
  while (v5 != a1 && v4-- != 0);
  return result;
}

uint64_t Logger.sharedListening.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.sharedListening);
}

uint64_t *SharedListening.Event.properties.unsafeMutableAddressor()
{
  if (qword_10048C960 != -1)
    swift_once(&qword_10048C960, sub_1001D5D24);
  return &static SharedListening.Event.properties;
}

uint64_t SharedListening.Event.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[56];

  sub_1001D71B8(a1, (uint64_t)v4);
  return sub_1000149A8((uint64_t)v4, a2, (uint64_t *)&unk_1004933A0);
}

uint64_t static SharedListening.buildSharedSession(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100496510 + dword_100496510);
  v3 = (_QWORD *)swift_task_alloc(unk_100496514);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001D3750;
  return v5(a1);
}

uint64_t sub_1001D3750(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t static SharedListening.buildSharedSession(with:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100496520 + dword_100496520);
  v9 = (_QWORD *)swift_task_alloc(unk_100496524);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000EA88;
  return v11(a1, a2, a3, a4);
}

uint64_t SharedListening.Event.Content.title.getter(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  uint64_t v30;
  id v31;
  uint64_t ObjectType;
  Swift::String v33;
  _BYTE v34[16];
  unint64_t v35;
  unint64_t v36;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v34[-v12];
  if ((a2 & 1) == 0)
  {
    v14 = a1;
    v15 = objc_msgSend(v14, "title");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
LABEL_16:

      return v17;
    }
    String.LocalizationValue.init(stringLiteral:)(0x206E776F6E6B6E55, 0xED0000656C746954);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v23 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v23, v6, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    goto LABEL_21;
  }
  objc_opt_self(MPModelAlbum);
  v18 = swift_dynamicCastObjCClass(a1);
  if (v18)
  {
    v19 = (void *)v18;
    v14 = a1;
    v20 = objc_msgSend(v19, "title");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xED00006D75626C41;
LABEL_18:
      String.LocalizationValue.init(stringLiteral:)(v21, v22);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v30 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v24 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v30, v6, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

LABEL_21:
      return v24;
    }
    goto LABEL_15;
  }
  objc_opt_self(MPModelPlaylist);
  v25 = swift_dynamicCastObjCClass(a1);
  if (v25)
  {
    v26 = (void *)v25;
    v14 = a1;
    v20 = objc_msgSend(v26, "name");
    if (!v20)
    {
      v22 = 0x80000001003B0520;
      v21 = 0xD000000000000011;
      goto LABEL_18;
    }
LABEL_15:
    v16 = v20;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);

    goto LABEL_16;
  }
  objc_opt_self(MPModelRadioStation);
  v27 = swift_dynamicCastObjCClass(a1);
  if (v27)
  {
    v28 = (void *)v27;
    v14 = a1;
    v20 = objc_msgSend(v28, "name");
    if (!v20)
    {
      v21 = 0x206E776F6E6B6E55;
      v22 = 0xEF6E6F6974617453;
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  v35 = 0;
  v36 = 0xE000000000000000;
  v31 = a1;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  v35 = 0xD000000000000020;
  v36 = 0x80000001003B5200;
  ObjectType = swift_getObjectType();
  v33._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v35, v36, "MusicCore/SharedListening.swift", 31, 2, 49, 0);
  __break(1u);
  return result;
}

void sub_1001D3C90(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  const char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint32_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  NSObject *oslog;
  uint64_t v54;
  char v55;
  _QWORD v56[3];
  char v57[8];
  uint64_t v58;

  switch((char)a2)
  {
    case 1:
      v3 = qword_10048C958;
      swift_retain(a1);
      if (v3 != -1)
        swift_once(&qword_10048C958, sub_1001CCD54);
      v5 = type metadata accessor for Logger(0, v4);
      sub_1000086B4(v5, (uint64_t)static Logger.groupActivities);
      v6 = swift_retain_n(a1, 2);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.error.getter(v7);
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc(12, -1);
        v10 = swift_slowAlloc(32, -1);
        v54 = v10;
        *(_DWORD *)v9 = 136446210;
        v58 = (uint64_t)a1;
        swift_retain(a1);
        v11 = sub_100005574(&qword_100496348);
        v12 = (char *)String.init<A>(describing:)(&v58, v11);
        *(_QWORD *)(v9 + 4) = sub_100019400(v12, v13, &v54);
        swift_bridgeObjectRelease();
        sub_1001D18B4(a1, 1);
        sub_1001D18B4(a1, 1);
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cannot joined invalid session=%{public}s", (uint8_t *)v9, 0xCu);
        swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v10, -1, -1);
        swift_slowDealloc(v9, -1, -1);

        sub_1001D18B4(a1, 1);
      }
      else
      {
        sub_1001D18B4(a1, 1);
        sub_1001D18B4(a1, 1);

        swift_release(a1);
      }
      return;
    case 2:
      v15 = objc_msgSend(a1, "error");
      if (qword_10048C978 != -1)
        swift_once(&qword_10048C978, sub_1001D687C);
      v16 = type metadata accessor for Logger(0, v14);
      sub_1000086B4(v16, (uint64_t)static Logger.sharedListening);
      v17 = v15;
      oslog = Logger.logObject.getter(v17);
      v18 = static os_log_type_t.error.getter(oslog);
      if (!os_log_type_enabled(oslog, v18))
      {

        sub_1001D18B4(a1, 2);
        goto LABEL_38;
      }
      v19 = swift_slowAlloc(12, -1);
      v20 = swift_slowAlloc(32, -1);
      v58 = v20;
      *(_DWORD *)v19 = 136446210;
      v54 = (uint64_t)v15;
      v55 = 0;
      v21 = v17;
      v22 = (char *)String.init<A>(describing:)(&v54, &type metadata for SharedListening.ErrorHandling.Error);
      *(_QWORD *)(v19 + 4) = sub_100019400(v22, v23, &v58);

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Creation error %{public}s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v19, -1, -1);
      sub_1001D18B4(a1, 2);

      return;
    case 3:
      if (a1)
      {
        swift_getErrorValue(a1, v57, v56);
        v24 = v56[1];
        v25 = v56[2];
        swift_errorRetain(a1);
        v26 = Error.localizedDescription.getter(v24, v25);
        v28 = v27;
      }
      else
      {
        v26 = 0;
        v28 = 0;
      }
      v34 = (char *)Optional<A>.description.getter(v26, v28);
      v36 = v35;
      swift_bridgeObjectRelease();
      if (qword_10048C958 != -1)
        swift_once(&qword_10048C958, sub_1001CCD54);
      v38 = type metadata accessor for Logger(0, v37);
      sub_1000086B4(v38, (uint64_t)static Logger.groupActivities);
      v39 = swift_bridgeObjectRetain();
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter(v40);
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc(12, -1);
        v43 = swift_slowAlloc(32, -1);
        v54 = v43;
        *(_DWORD *)v42 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v42 + 4) = sub_100019400(v34, v36, &v54);
        swift_bridgeObjectRelease_n(v36, 3);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Could not add intent to the player: %{public}s", (uint8_t *)v42, 0xCu);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

        sub_1001D18B4(a1, 3);
      }
      else
      {
        sub_1001D18B4(a1, 3);

        swift_bridgeObjectRelease_n(v36, 2);
      }
      return;
    case 4:
      if (a1 == (void *)3)
      {
        if (qword_10048C978 != -1)
          swift_once(&qword_10048C978, sub_1001D687C);
        v44 = type metadata accessor for Logger(0, a2);
        v45 = sub_1000086B4(v44, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v45);
        v31 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v31))
          goto LABEL_38;
        v32 = swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        v33 = "Building session failed because the queue is empty";
LABEL_32:
        v46 = oslog;
        v47 = v31;
        v48 = (uint8_t *)v32;
        v49 = 2;
LABEL_37:
        _os_log_impl((void *)&_mh_execute_header, v46, v47, v33, v48, v49);
        swift_slowDealloc(v32, -1, -1);
LABEL_38:

        return;
      }
      if (a1 == (void *)4)
      {
        if (qword_10048C978 != -1)
          swift_once(&qword_10048C978, sub_1001D687C);
        v50 = type metadata accessor for Logger(0, a2);
        v51 = sub_1000086B4(v50, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v51);
        v52 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v52))
          goto LABEL_38;
        v32 = swift_slowAlloc(8, -1);
        *(_DWORD *)v32 = 67109120;
        *(_DWORD *)(v32 + 4) = FigOutputMonitorIsScreenProbablyBeingRecorded(v32) != 0;
        v33 = "Presenting not supported content alert (isScreenSharing=%{BOOL}d)";
        v46 = oslog;
        v47 = v52;
        v48 = (uint8_t *)v32;
        v49 = 8;
        goto LABEL_37;
      }
      if (a1 == (void *)5)
      {
        if (qword_10048C978 != -1)
          swift_once(&qword_10048C978, sub_1001D687C);
        v29 = type metadata accessor for Logger(0, a2);
        v30 = sub_1000086B4(v29, (uint64_t)static Logger.sharedListening);
        oslog = Logger.logObject.getter(v30);
        v31 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(oslog, v31))
          goto LABEL_38;
        v32 = swift_slowAlloc(2, -1);
        *(_WORD *)v32 = 0;
        v33 = "Cannot add intent for the current route.";
        goto LABEL_32;
      }
      return;
    default:
      return;
  }
}

void sub_1001D43F0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, unsigned __int8 a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  __int128 v57;
  __int128 v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  void *v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  int IsScreenProbablyBeingRecorded;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  Swift::String v136;
  __int128 v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  void *v143;
  char *v144;
  __int128 v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void *v156;
  _QWORD *v157;
  _QWORD v158[7];
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;

  v156 = a4;
  v153 = a2;
  v152 = a1;
  v157 = a6;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v146 - v21;
  v23 = a5;
  if (a5 == 2)
  {
    v150 = a3;
    v149 = v19;
    v51 = v15;
    v52 = v14;
    v53 = v156;
    v54 = v156;
    v55 = objc_msgSend(v54, "dialog");
    if (v55)
    {
      v56 = v55;
      MPCPlayerCommandDialog.alert(context:completion:)(v152, v153, v150, 0, 0, (uint64_t *)&v159);
      v57 = v159;
      v58 = v160;
      v28 = v161;
      v29 = v162;
      v30 = v163;

      v24 = (void *)v57;
      sub_1001D18B4(v53, 2);
      v25 = (char *)*((_QWORD *)&v57 + 1);
      v27 = *((_QWORD *)&v58 + 1);
      v26 = v58;
LABEL_51:
      v31 = v157;
      goto LABEL_52;
    }
    v146 = v54;
    v74 = objc_msgSend(v54, "error");
    v14 = v52;
    v15 = v51;
    v19 = v149;
    v155 = v11;
    v154 = v9;
    if (v74)
    {
      *(_QWORD *)&v159 = v74;
      v75 = sub_100005574((uint64_t *)&unk_1004911F0);
      type metadata accessor for MPCPlayerEnqueueError(0);
      v77 = v76;
      if ((swift_dynamicCast(v158, &v159, v75, v76, 6) & 1) != 0)
      {
        v78 = v8;
        v79 = (void *)v158[0];
        v80 = sub_100006924(&qword_10048D6B0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerEnqueueError, (uint64_t)&unk_100387000);
        _BridgedStoredNSError.code.getter(v77, v80);

        if ((_QWORD)v159 == 3)
        {
          sub_1001D18B4(v156, 2);
          v32 = v78;
          a3 = v150;
          goto LABEL_20;
        }
        v8 = v78;
      }
    }
    v151 = v8;
    String.LocalizationValue.init(stringLiteral:)(0x100000000000002DLL, 0x80000001003B5290);
    v121 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v121(v19, v22, v15);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v122 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v122, v14, 0, 0, 256);
    v147 = v123;
    v124 = *(void (**)(char *, uint64_t))(v16 + 8);
    v124(v22, v15);
    v125 = sub_100005574(&qword_100493240);
    v29 = (char *)swift_allocObject(v125, 88, 7);
    *((_OWORD *)v29 + 1) = xmmword_100384A80;
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v121(v19, v22, v15);
    v126 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v127 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v126, v14, 0, 0, 256);
    v129 = v128;
    v124(v22, v15);
    v130 = v155;
    v131 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v132 = UUID.uuidString.getter(v131);
    v134 = v133;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v130, v151);
    *((_QWORD *)v29 + 4) = v132;
    *((_QWORD *)v29 + 5) = v134;
    *((_QWORD *)v29 + 6) = v127;
    *((_QWORD *)v29 + 7) = v129;
    v29[64] = 0;
    *((_QWORD *)v29 + 9) = 0;
    *((_QWORD *)v29 + 10) = 0;
    *(_QWORD *)&v159 = 0;
    *((_QWORD *)&v159 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v159 = 0xD00000000000001CLL;
    *((_QWORD *)&v159 + 1) = 0x80000001003B5350;
    v158[0] = objc_msgSend(v146, "error");
    v135 = sub_100005574(&qword_100494190);
    v136._countAndFlagsBits = String.init<A>(describing:)(v158, v135);
    String.append(_:)(v136);
    swift_bridgeObjectRelease();
    v137 = v159;
    v138 = sub_100098FC4((uint64_t)_swiftEmptyArrayStorage);
    sub_1000DEBBC(v137, *((uint64_t *)&v137 + 1), 0xD000000000000032, 0x80000001003AE4A0, (uint64_t)_swiftEmptyArrayStorage, v138, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v158);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000149A8((uint64_t)v158, (uint64_t)&v159, &qword_100491208);
    if (*((_QWORD *)&v159 + 1))
    {
      v164 = v159;
      v165 = v160;
      v139 = (uint64_t)v162;
      v166 = v161;
      v140 = v163;
      v167 = v159;
      v168 = v160;
      sub_1000595EC((uint64_t)&v167);
      sub_1000595EC((uint64_t)&v168);
      sub_10003A434(v139, v140);
      v142 = *((_QWORD *)v29 + 2);
      v141 = *((_QWORD *)v29 + 3);
      if (v142 >= v141 >> 1)
        v29 = sub_10003DCE4((char *)(v141 > 1), v142 + 1, 1, v29);
      v143 = v156;
      *((_QWORD *)v29 + 2) = v142 + 1;
      v144 = &v29[56 * v142];
      v145 = v165;
      *((_OWORD *)v144 + 2) = v164;
      *((_OWORD *)v144 + 3) = v145;
      *((_QWORD *)v144 + 8) = v166;
      *((_QWORD *)v144 + 9) = v139;
      *((_QWORD *)v144 + 10) = v140;
      sub_1001D18B4(v143, 2);
      sub_100052668((uint64_t)&v167);
      sub_100052668((uint64_t)&v168);
      sub_10003A5C8(v139, v140);
    }
    else
    {
      sub_1001D18B4(v156, 2);
    }
    v24 = 0;
    v25 = 0;
    v28 = 0;
    v30 = 0;
    v26 = v148;
    v27 = v147;
    goto LABEL_51;
  }
  v155 = v11;
  v154 = v9;
  if (a5 == 3)
  {
    String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    v59 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v59(v19, v22, v15);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v60 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v153 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v60, v14, 0, 0, 256);
    v152 = v61;
    v62 = *(void (**)(char *, uint64_t))(v16 + 8);
    v62(v22, v15);
    v63 = v155;
    v64 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v150 = UUID.uuidString.getter(v64);
    v149 = v65;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v63, v8);
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003B3430);
    v59(v19, v22, v15);
    v66 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v66, v14, 0, 0, 256);
    v68 = v67;
    v62(v22, v15);
    String.LocalizationValue.init(stringLiteral:)(0x1000000000000050, 0x80000001003B52C0);
    v59(v19, v22, v15);
    v69 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v70 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v69, v14, 0, 0, 256);
    v72 = v71;
    v62(v22, v15);
    v73 = sub_100005574(&qword_100493240);
    v49 = swift_allocObject(v73, 88, 7);
    v25 = v68;
    v27 = v72;
    v29 = (char *)v49;
    v26 = v70;
    v28 = 0;
    v30 = 0;
    *(_OWORD *)(v49 + 16) = xmmword_100384A80;
    *(_QWORD *)(v49 + 32) = v150;
    v24 = v156;
    v50 = (char *)&v167 + 8;
    goto LABEL_15;
  }
  v151 = v8;
  v24 = 0;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = v157;
  if (v23 == 4)
  {
    if (v156 == (void *)3)
    {
      String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x80000001003B5370);
      v87 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v87(v19, v22, v15);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v88 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v88, v14, 0, 0, 256);
      v90 = v89;
      v91 = *(void (**)(char *, uint64_t))(v16 + 8);
      v91(v22, v15);
      v92 = sub_100005574(&qword_100493240);
      v29 = (char *)swift_allocObject(v92, 88, 7);
      *((_OWORD *)v29 + 1) = xmmword_100384A80;
      String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
      v87(v19, v22, v15);
      v93 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v94 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v93, v14, 0, 0, 256);
      v96 = v95;
      v91(v22, v15);
      v97 = v155;
      v98 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v99 = UUID.uuidString.getter(v98);
      v101 = v100;
      (*(void (**)(char *, uint64_t))(v154 + 8))(v97, v151);
      v25 = v90;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v30 = 0;
      *((_QWORD *)v29 + 4) = v99;
      *((_QWORD *)v29 + 5) = v101;
      v24 = v156;
      *((_QWORD *)v29 + 6) = v94;
      *((_QWORD *)v29 + 7) = v96;
      v29[64] = 0;
      *((_QWORD *)v29 + 9) = 0;
      *((_QWORD *)v29 + 10) = 0;
      goto LABEL_51;
    }
    v32 = v151;
    if (v156 != (void *)4)
    {
      if (v156 == (void *)5)
      {
        String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
        v33 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        v33(v19, v22, v15);
        if (qword_10048C570 != -1)
          swift_once(&qword_10048C570, sub_10000AD54);
        v34 = qword_1004A1DA0;
        static Locale.current.getter((id)qword_1004A1DA0);
        v153 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v34, v14, 0, 0, 256);
        v152 = v35;
        v36 = *(void (**)(char *, uint64_t))(v16 + 8);
        v36(v22, v15);
        v37 = v155;
        v38 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
        v39 = UUID.uuidString.getter(v38);
        v150 = v40;
        (*(void (**)(char *, uint64_t))(v154 + 8))(v37, v32);
        String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001003B33B0);
        v33(v19, v22, v15);
        v41 = qword_1004A1DA0;
        static Locale.current.getter((id)qword_1004A1DA0);
        v156 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v41, v14, 0, 0, 256);
        v43 = v42;
        v36(v22, v15);
        String.LocalizationValue.init(stringLiteral:)(0x100000000000002DLL, 0x80000001003B5290);
        v33(v19, v22, v15);
        v44 = qword_1004A1DA0;
        static Locale.current.getter((id)qword_1004A1DA0);
        v45 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v44, v14, 0, 0, 256);
        v47 = v46;
        v36(v22, v15);
        v48 = sub_100005574(&qword_100493240);
        v49 = swift_allocObject(v48, 88, 7);
        v25 = v43;
        v27 = v47;
        v29 = (char *)v49;
        v26 = v45;
        v28 = 0;
        v30 = 0;
        *(_OWORD *)(v49 + 16) = xmmword_100384A80;
        *(_QWORD *)(v49 + 32) = v39;
        v24 = v156;
        v50 = (char *)&v168;
LABEL_15:
        *(_QWORD *)(v49 + 40) = *((_QWORD *)v50 - 32);
        *(_QWORD *)(v49 + 48) = v153;
        *(_QWORD *)(v49 + 56) = v152;
        *(_BYTE *)(v49 + 64) = 2;
        *(_QWORD *)(v49 + 72) = 0;
        *(_QWORD *)(v49 + 80) = 0;
        goto LABEL_51;
      }
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      goto LABEL_52;
    }
LABEL_20:
    IsScreenProbablyBeingRecorded = FigOutputMonitorIsScreenProbablyBeingRecorded(v20);
    v82 = v155;
    if (IsScreenProbablyBeingRecorded)
    {
      String.LocalizationValue.init(stringLiteral:)(0x100000000000002CLL, 0x80000001003B5320);
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, v15);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v83 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v83, v14, 0, 0, 256);
      v147 = v84;
      v85 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      v86 = 0;
      v149 = 0;
    }
    else
    {
      v150 = a3;
      v102 = v32;
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000046, 0x80000001003B3450);
      v103 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v103(v19, v22, v15);
      if (qword_10048C570 != -1)
        swift_once(&qword_10048C570, sub_10000AD54);
      v104 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v148 = String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v104, v14, 0, 0, 256);
      v147 = v105;
      v106 = *(void (**)(char *, uint64_t))(v16 + 8);
      v106(v22, v15);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003B3430);
      v103(v19, v22, v15);
      v107 = qword_1004A1DA0;
      static Locale.current.getter((id)qword_1004A1DA0);
      v86 = (void *)String.init(localized:table:bundle:locale:comment:)(v19, 0, 0, v107, v14, 0, 0, 256);
      v149 = v108;
      v85 = ((uint64_t (*)(char *, uint64_t))v106)(v22, v15);
      v32 = v102;
      v82 = v155;
      a3 = v150;
    }
    v109 = FigOutputMonitorIsScreenProbablyBeingRecorded(v85);
    v156 = v86;
    v110 = a3;
    if (v109)
    {
      if (qword_10048CE40 != -1)
        swift_once(&qword_10048CE40, sub_1001ECB74);
      v111 = &static String.okButtonTitle;
    }
    else
    {
      if (qword_10048CE50 != -1)
        swift_once(&qword_10048CE50, sub_1001ECBE8);
      v111 = &static String.cancelButtonTitle;
    }
    v113 = *v111;
    v112 = v111[1];
    swift_bridgeObjectRetain();
    v114 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v115 = UUID.uuidString.getter(v114);
    v117 = v116;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v82, v32);
    v118 = sub_100005574(&qword_100493240);
    v29 = (char *)swift_allocObject(v118, 88, 7);
    *((_OWORD *)v29 + 1) = xmmword_100384A80;
    *((_QWORD *)v29 + 4) = v115;
    *((_QWORD *)v29 + 5) = v117;
    *((_QWORD *)v29 + 6) = v113;
    *((_QWORD *)v29 + 7) = v112;
    v29[64] = 0;
    *((_QWORD *)v29 + 9) = 0;
    *((_QWORD *)v29 + 10) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001D6E1C(v152, v153, v110, (uint64_t)v158);
    sub_1000149A8((uint64_t)v158, (uint64_t)&v159, &qword_100491208);
    if (*((_QWORD *)&v159 + 1))
    {
      v164 = v159;
      v165 = v160;
      v119 = (uint64_t)v162;
      v166 = v161;
      v120 = v163;
      v167 = v159;
      v168 = v160;
      sub_1000595EC((uint64_t)&v167);
      sub_1000595EC((uint64_t)&v168);
      sub_10003A434(v119, v120);
      v29 = sub_10003DCE4((char *)1, 2, 1, v29);
      *((_QWORD *)v29 + 2) = 2;
      *(_OWORD *)(v29 + 88) = v164;
      *(_OWORD *)(v29 + 104) = v165;
      *((_QWORD *)v29 + 15) = v166;
      *((_QWORD *)v29 + 16) = v119;
      *((_QWORD *)v29 + 17) = v120;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100052668((uint64_t)&v167);
      sub_100052668((uint64_t)&v168);
      sub_10003A5C8(v119, v120);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v28 = 0;
    v30 = 0;
    v26 = v148;
    v27 = v147;
    v24 = v156;
    v25 = v149;
    goto LABEL_51;
  }
LABEL_52:
  *v31 = v24;
  v31[1] = v25;
  v31[2] = v26;
  v31[3] = v27;
  v31[4] = v28;
  v31[5] = v29;
  v31[6] = v30;
}

uint64_t static SharedListening.addIntent(_:sourceViewController:playbackController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100496530 + dword_100496530);
  v6 = (_QWORD *)swift_task_alloc(unk_100496534);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000F894;
  return v8(a1, a3);
}

BOOL static SharedListening.isModelObjectTypeSupported(_:)(uint64_t a1)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;

  if (qword_10048C968 != -1)
    goto LABEL_16;
  while (1)
  {
    v2 = *((_QWORD *)off_1004964D0 + 2);
    if (!v2)
      return 0;
    if (*((_QWORD *)off_1004964D0 + 4) == a1)
      break;
    if (v2 == 1)
      return 0;
    for (i = 5; ; ++i)
    {
      v5 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v6 = *((_QWORD *)off_1004964D0 + i);
      result = v6 == a1;
      if (v6 == a1 || v5 == v2)
        return result;
    }
    __break(1u);
LABEL_16:
    swift_once(&qword_10048C968, sub_1001D6160);
  }
  return 1;
}

void __swiftcall SharedListening.Reaction.init(id:emoji:senderID:)(MusicCore::SharedListening::Reaction *__return_ptr retstr, Swift::String_optional id, Swift::String emoji, Swift::String_optional senderID)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  object = senderID.value._object;
  countAndFlagsBits = senderID.value._countAndFlagsBits;
  v6 = emoji._object;
  v7 = emoji._countAndFlagsBits;
  v8 = id.value._object;
  v9 = id.value._countAndFlagsBits;
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v8)
  {
    v15 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v9 = UUID.uuidString.getter(v15);
    v8 = v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  retstr->id._countAndFlagsBits = v9;
  retstr->id._object = v8;
  retstr->emoji._countAndFlagsBits = v7;
  retstr->emoji._object = v6;
  retstr->senderID.value._countAndFlagsBits = countAndFlagsBits;
  retstr->senderID.value._object = object;
}

void SharedListening.Reaction.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v1[2];
  v6 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  v7 = v1[5];
  if (v7)
  {
    v8 = v1[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_1001D5820()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696A6F6D65;
  if (*v0 != 1)
    v1 = 0x44497265646E6573;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1001D586C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001DA208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001D5890(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001DA1C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D58B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001DA1C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SharedListening.Reaction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_100005574(&qword_100496538);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001DA1C4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for SharedListening.Reaction.CodingKeys, &type metadata for SharedListening.Reaction.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = v3[1];
  v22 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v22, v5);
  if (!v2)
  {
    v14 = v3[2];
    v15 = v3[3];
    v21 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v21, v5);
    v16 = v3[4];
    v17 = v3[5];
    v20 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v20, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int SharedListening.Reaction.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  v3 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = v0[5];
  if (v5)
  {
    v6 = v0[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

double SharedListening.Reaction.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1001DA33C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1001D5B28(_QWORD *a1)
{
  return SharedListening.Reaction.encode(to:)(a1);
}

void sub_1001D5B40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v8 = v1[4];
  v7 = v1[5];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v5, v6);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v8, v7);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1001D5C10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  Hasher.init(_seed:)(v8);
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain();
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(v8, v6, v5);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1001D5CE0(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t *)v7, v8) & 1;
}

void sub_1001D5D24()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Class v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class v27;
  id v28;
  id v29;
  Class v30;
  Class v31;
  id v32;
  id v33;
  Class v34;
  Class v35;
  id v36;
  _BYTE v37[56];
  _BYTE v38[136];

  v0 = sub_100005574((uint64_t *)&unk_1004912A0);
  inited = swift_initStackObject(v0, v38);
  *(_OWORD *)(inited + 16) = xmmword_100384BB0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericAlbum);
  *(_QWORD *)(inited + 40) = v2;
  v3 = sub_100005574((uint64_t *)&unk_100491700);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100384A80;
  v5 = MPModelPropertyAlbumTitle;
  *(_QWORD *)(v4 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v4 + 40) = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v8 = (void *)objc_opt_self(MPPropertySet);
  v9 = objc_msgSend(v8, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericPlaylist);
  *(_QWORD *)(inited + 64) = v10;
  v11 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100384A80;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyPlaylistName);
  *(_QWORD *)(v11 + 40) = v12;
  v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v8, "propertySetWithProperties:", v13);

  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericRadioStation);
  *(_QWORD *)(inited + 88) = v15;
  v16 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100384A80;
  *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationName);
  *(_QWORD *)(v16 + 40) = v17;
  v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v8, "propertySetWithProperties:", v18);

  *(_QWORD *)(inited + 96) = v19;
  *(_QWORD *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipGenericSong);
  *(_QWORD *)(inited + 112) = v20;
  v21 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100384A80;
  *(_QWORD *)(v21 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v21 + 40) = v22;
  v23 = swift_initStackObject(v0, v37);
  *(_OWORD *)(v23 + 16) = xmmword_100384A80;
  *(_QWORD *)(v23 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(v23 + 40) = v24;
  v25 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100384A80;
  *(_QWORD *)(v25 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  *(_QWORD *)(v25 + 40) = v26;
  v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v8, "propertySetWithProperties:", v27);

  *(_QWORD *)(v23 + 48) = v28;
  sub_100098EAC(v23);
  v29 = objc_allocWithZone((Class)MPPropertySet);
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1000087DC(0, (unint64_t *)&qword_1004918E0, MPPropertySet_ptr);
  v31 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v29, "initWithProperties:relationships:", v30, v31);

  *(_QWORD *)(inited + 120) = v32;
  sub_100098EAC(inited);
  v33 = objc_allocWithZone((Class)MPPropertySet);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v33, "initWithProperties:relationships:", v34, v35);

  static SharedListening.Event.properties = (uint64_t)v36;
}

id static SharedListening.Event.properties.getter()
{
  if (qword_10048C960 != -1)
    swift_once(&qword_10048C960, sub_1001D5D24);
  return (id)static SharedListening.Event.properties;
}

uint64_t sub_1001D6160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1001D6D18();
  v1 = swift_allocObject(v0, ((*(unsigned int *)(v0 + 48) + 7) & 0x1FFFFFFF8) + 40, *(unsigned __int16 *)(v0 + 52) | 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384AE0;
  *(_QWORD *)(v1 + 32) = sub_1000087DC(0, &qword_100496570, MPModelAlbum_ptr);
  *(_QWORD *)(v1 + 40) = sub_1000087DC(0, &qword_100496578, MPModelSong_ptr);
  *(_QWORD *)(v1 + 48) = sub_1000087DC(0, &qword_100490428, MPModelPlaylist_ptr);
  *(_QWORD *)(v1 + 56) = sub_1000087DC(0, qword_100490438, MPModelRadioStation_ptr);
  result = sub_1000087DC(0, &qword_100496580, MPModelArtist_ptr);
  *(_QWORD *)(v1 + 64) = result;
  off_1004964D0 = (_UNKNOWN *)v1;
  return result;
}

void *sub_1001D623C()
{
  void *result;

  result = (void *)sub_1001D6258();
  off_1004964D8 = result;
  return result;
}

uint64_t sub_1001D6258()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100005574(&qword_1004965B8);
  v1 = swift_allocObject(v0, 128, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100384E10;
  *(_QWORD *)(v1 + 32) = type metadata accessor for Album(0);
  *(_QWORD *)(v1 + 40) = &protocol witness table for Album;
  *(_QWORD *)(v1 + 48) = type metadata accessor for Song(0);
  *(_QWORD *)(v1 + 56) = &protocol witness table for Song;
  *(_QWORD *)(v1 + 64) = type metadata accessor for MusicVideo(0);
  *(_QWORD *)(v1 + 72) = &protocol witness table for MusicVideo;
  *(_QWORD *)(v1 + 80) = type metadata accessor for Playlist(0);
  *(_QWORD *)(v1 + 88) = &protocol witness table for Playlist;
  *(_QWORD *)(v1 + 96) = type metadata accessor for Station(0);
  *(_QWORD *)(v1 + 104) = &protocol witness table for Station;
  *(_QWORD *)(v1 + 112) = type metadata accessor for Artist(0);
  *(_QWORD *)(v1 + 120) = &protocol witness table for Artist;
  return v1;
}

uint64_t sub_1001D6314(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v6;

  v2 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  v4 = a2;
  sub_1000149A8((uint64_t)&v6, v3, &qword_100496598);
  return swift_continuation_resume(v2);
}

uint64_t sub_1001D6364(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD **)(*(_QWORD *)(v4 + 64) + 40);
  *v5 = a2;
  v5[1] = a3;
  v6 = a2;
  v7 = a3;
  return swift_continuation_resume(v4);
}

uint64_t sub_1001D639C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v4 = sub_100005574((uint64_t *)&unk_100493720);
  v3[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001D63FC, 0, 0);
}

uint64_t sub_1001D63FC()
{
  uint64_t v0;
  void *v1;
  _UNKNOWN **v2;
  ValueMetadata *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 96);
  if (v1)
  {
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = 3;
    v2 = &protocol witness table for Player.ReplaceCommand;
    v3 = &type metadata for Player.ReplaceCommand;
    v4 = v1;
  }
  else
  {
    v4 = 0;
    *(_BYTE *)(v0 + 16) = 0;
    v2 = &protocol witness table for Player.PlaybackCommand;
    v3 = &type metadata for Player.PlaybackCommand;
  }
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 40) = v3;
  *(_QWORD *)(v0 + 48) = v2;
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  sub_1000244B0(v0 + 16, v0 + 56);
  v9 = swift_allocObject(&unk_100454A30, 104, 7);
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v1;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = v6;
  *(_BYTE *)(v9 + 56) = v1 == 0;
  sub_1000137C8((__int128 *)(v0 + 56), v9 + 64);
  swift_retain(v6);
  v10 = v4;
  swift_retain(v7);
  v11 = sub_1001AD214(v5, (uint64_t)&unk_1004965D8, v9);
  swift_release(v11);
  sub_10000682C((_QWORD *)(v0 + 16));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D6544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 24) = a6;
  *(_QWORD *)(v8 + 32) = a8;
  *(_BYTE *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 16) = a5;
  v9 = type metadata accessor for Player.CommandOptions(0);
  *(_QWORD *)(v8 + 40) = v9;
  *(_QWORD *)(v8 + 48) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001D65A8, 0, 0);
}

uint64_t sub_1001D65A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = (_QWORD *)swift_task_alloc(dword_100495A94);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_1001D66A4;
    return GroupActivitiesManager.leave(performLeaveCommand:)(*(_BYTE *)(v0 + 80));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    if (*(_QWORD *)(v0 + 24))
    {
      v4 = *(int **)(v0 + 40);
      _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      v5 = (_QWORD *)(v3 + v4[5]);
      *v5 = 0;
      v5[1] = 0;
      *(_QWORD *)(v3 + v4[6]) = 0;
      *(_BYTE *)(v3 + v4[7]) = 0;
      *(_QWORD *)(v3 + v4[8]) = 0;
      v6 = (_QWORD *)swift_task_alloc(dword_10049395C);
      *(_QWORD *)(v0 + 64) = v6;
      *v6 = v0;
      v6[1] = sub_1001D67AC;
      return sub_1001759C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 48));
    }
    else
    {
      swift_task_dealloc(*(_QWORD *)(v0 + 48));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1001D66A4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_1001D66F8, 0, 0);
}

uint64_t sub_1001D66F8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v0 + 24))
  {
    v2 = *(int **)(v0 + 40);
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v3 = (_QWORD *)(v1 + v2[5]);
    *v3 = 0;
    v3[1] = 0;
    *(_QWORD *)(v1 + v2[6]) = 0;
    *(_BYTE *)(v1 + v2[7]) = 0;
    *(_QWORD *)(v1 + v2[8]) = 0;
    v4 = (_QWORD *)swift_task_alloc(dword_10049395C);
    *(_QWORD *)(v0 + 64) = v4;
    *v4 = v0;
    v4[1] = sub_1001D67AC;
    return sub_1001759C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 48));
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001D67AC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 64);
  v5 = *v2;
  *(_QWORD *)(v5 + 72) = v1;
  swift_task_dealloc(v4);
  v6 = *(_QWORD *)(v5 + 48);
  if (v1)
  {
    sub_100184034(*(_QWORD *)(v5 + 48));
    return swift_task_switch(sub_1001D6848, 0, 0);
  }
  else
  {

    sub_100184034(v6);
    swift_task_dealloc(*(_QWORD *)(v5 + 48));
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
}

uint64_t sub_1001D6848()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D687C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.sharedListening);
  sub_1000086B4(v2, (uint64_t)static Logger.sharedListening);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x694C646572616853, 0xEF676E696E657473);
}

uint64_t static Logger.sharedListening.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.sharedListening);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

uint64_t sub_1001D696C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch(sub_1001D6984, 0, 0);
}

uint64_t sub_1001D6984()
{
  uint64_t v0;
  void (*v1)(id);
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;

  v1 = *(void (**)(id))(v0 + 16);
  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
    v3 = v2;
    v4 = objc_allocWithZone((Class)NSError);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v3);
    v6 = objc_msgSend(v4, "initWithDomain:code:userInfo:", v5, 3072, 0);

    v1(v6);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D6A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return swift_task_switch(sub_1001D6A54, 0, 0);
}

uint64_t sub_1001D6A54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;

  v2 = v0[9];
  v1 = v0[10];
  v3 = (void *)v0[8];
  v4 = (void *)objc_opt_self(MPCPlayerChangeRequest);
  v5 = objc_msgSend(v3, "commandRequest");
  v6 = (_QWORD *)swift_allocObject(&unk_100454A58, 40, 7);
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = v1;
  v0[6] = sub_1001DB374;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000F7EF4;
  v0[5] = &unk_100454A70;
  v7 = _Block_copy(v0 + 2);
  v8 = v0[7];
  v9 = v3;
  sub_10003A434(v2, v1);
  objc_msgSend(v4, "performRequest:completion:", v5, v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1001D6B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_1004964EC);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000F894;
  *(_QWORD *)(v3 + 80) = v2;
  *(_OWORD *)(v3 + 64) = v5;
  return swift_task_switch(sub_1001D6A54, 0, 0);
}

void sub_1001D6BDC(void *a1, id a2, void (*a3)(id))
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;

  if (objc_msgSend(a2, "type") == (id)1)
  {
    if (a3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
      v6 = v5;
      v7 = objc_allocWithZone((Class)NSError);
      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      v9 = objc_msgSend(v7, "initWithDomain:code:userInfo:", v8, 3072, 0);

      a3(v9);
    }
  }
  else if (a3)
  {
    a3(a1);
  }
}

uint64_t sub_1001D6CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return sub_10003A5C8(a6, a7);
  }
  return result;
}

uint64_t sub_1001D6D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = sub_100005574(&qword_100496588);
  if (swift_isClassType(v0))
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_100491910;
  else
    v2 = (uint64_t *)&unk_100496590;
  return sub_100005574(v2);
}

uint64_t _s9MusicCore15SharedListeningO8ReactionV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = a1[5];
      v17 = a2[5];
      if (v16)
      {
        if (v17)
        {
          v18 = a1[4];
          v19 = a2[4];
          if (v18 == v19 && v16 == v17)
            return 1;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0) & 1) != 0)
            return 1;
        }
      }
      else if (!v17)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_1001D6E1C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  int64x2_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a3;
  v45 = a2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v41 - v19;
  if (FigOutputMonitorIsScreenProbablyBeingRecorded(v18))
  {
    if (qword_10048C978 != -1)
      swift_once(&qword_10048C978, sub_1001D687C);
    v22 = type metadata accessor for Logger(0, v21);
    v23 = sub_1000086B4(v22, (uint64_t)static Logger.sharedListening);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Play locally action is NOT available because of screen sharing", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v32 = 0uLL;
  }
  else
  {
    v42 = v7;
    v43 = v6;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003B3800);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v13);
    if (qword_10048C570 != -1)
      swift_once(&qword_10048C570, sub_10000AD54);
    v33 = qword_1004A1DA0;
    static Locale.current.getter((id)qword_1004A1DA0);
    v29 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v33, v12, 0, 0, 256);
    v35 = v34;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    v31 = (_QWORD *)swift_allocObject(&unk_100454A08, 40, 7);
    v36 = v45;
    v31[2] = a1;
    v31[3] = v36;
    v37 = v44;
    v31[4] = v44;
    swift_retain(v37);
    v38 = a1;
    swift_retain(v36);
    v39 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v27 = UUID.uuidString.getter(v39);
    v28 = v40;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
    v32 = vdupq_n_s64(2uLL);
    v32.i64[0] = v35;
    v30 = &unk_1004965C8;
  }
  *(_QWORD *)a4 = v27;
  *(_QWORD *)(a4 + 8) = v28;
  *(_QWORD *)(a4 + 16) = v29;
  *(int64x2_t *)(a4 + 24) = v32;
  *(_QWORD *)(a4 + 40) = v30;
  *(_QWORD *)(a4 + 48) = v31;
}

uint64_t sub_1001D712C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D7158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1004964FC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000F894;
  v4[2] = v2;
  v4[3] = v3;
  return swift_task_switch(sub_1001D6984, 0, 0);
}

void sub_1001D71B8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  os_log_type_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  unint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  id v87;
  BOOL v88;
  id v89;

  switch((unint64_t)objc_msgSend(a1, "type"))
  {
    case 1uLL:
      v5 = objc_msgSend(a1, "sessionEvent");
      if (!v5)
        goto LABEL_23;
      v7 = v5;
      v8 = objc_msgSend(v5, "kind");

      if (v8 == (id)4)
      {

        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 5;
        v9 = 2;
      }
      else
      {
        if (v8 != (id)1)
        {
LABEL_23:
          if (qword_10048C978 != -1)
            swift_once(&qword_10048C978, sub_1001D687C);
          v41 = type metadata accessor for Logger(0, v6);
          sub_1000086B4(v41, (uint64_t)static Logger.sharedListening);
          v15 = a1;
          v16 = Logger.logObject.getter(v15);
          v42 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v16, v42))
          {
            v18 = swift_slowAlloc(12, -1);
            v19 = (id)swift_slowAlloc(32, -1);
            v89 = v19;
            *(_DWORD *)v18 = 136446210;
            v43 = objc_msgSend(v15, "sessionEvent");
            v44 = v43;
            if (v43)
            {
              v45 = objc_msgSend(v43, "kind");

            }
            else
            {
              v45 = 0;
            }
            v87 = v45;
            v88 = v44 == 0;
            v64 = sub_100005574(&qword_1004965B0);
            v65 = (char *)String.init<A>(describing:)(&v87, v64);
            *(_QWORD *)(v18 + 4) = sub_100019400(v65, v66, (uint64_t *)&v89);

            swift_bridgeObjectRelease();
            v25 = v42;
            v23 = "Unknown session event kind: %{public}s";
            goto LABEL_51;
          }
          goto LABEL_33;
        }

        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 5;
      }
      goto LABEL_84;
    case 2uLL:
      v26 = objc_msgSend(a1, "playbackEvent");
      if (!v26)
      {
LABEL_28:
        if (qword_10048C978 != -1)
          swift_once(&qword_10048C978, sub_1001D687C);
        v46 = type metadata accessor for Logger(0, v27);
        sub_1000086B4(v46, (uint64_t)static Logger.sharedListening);
        v15 = a1;
        v16 = Logger.logObject.getter(v15);
        v47 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v16, v47))
        {
LABEL_33:

          goto LABEL_53;
        }
        v18 = swift_slowAlloc(12, -1);
        v19 = (id)swift_slowAlloc(32, -1);
        v89 = v19;
        *(_DWORD *)v18 = 136446210;
        v48 = objc_msgSend(v15, "playbackEvent");
        v49 = v48;
        if (v48)
        {
          v50 = objc_msgSend(v48, "kind");

        }
        else
        {
          v50 = 0;
        }
        v87 = v50;
        v88 = v49 == 0;
        v67 = sub_100005574(&qword_1004965A8);
        v68 = (char *)String.init<A>(describing:)(&v87, v67);
        *(_QWORD *)(v18 + 4) = sub_100019400(v68, v69, (uint64_t *)&v89);

        swift_bridgeObjectRelease();
        v25 = v47;
        v23 = "Unknown playback event kind: %{public}s";
LABEL_51:
        v24 = v16;
        goto LABEL_52;
      }
      v28 = v26;
      v29 = objc_msgSend(v26, "kind");

      switch((unint64_t)v29)
      {
        case 1uLL:

          v10 = 0;
          v11 = 0;
          v12 = 0;
          v13 = 5;
          v9 = 4;
          goto LABEL_84;
        case 2uLL:

          v10 = 0;
          v11 = 0;
          v12 = 0;
          v13 = 5;
          v9 = 3;
          goto LABEL_84;
        case 3uLL:

          v10 = 0;
          v11 = 0;
          v12 = 0;
          v13 = 5;
          v9 = 1;
          goto LABEL_84;
        case 4uLL:
          v56 = objc_msgSend(a1, "playbackEvent");
          if (v56)
          {
            v57 = v56;
            v58 = objc_msgSend(v56, "item");

            if (v58)
            {
              v59 = objc_msgSend(v58, "innermostModelObject");

              objc_opt_self(MPModelSong);
              v60 = (void *)swift_dynamicCastObjCClass(v59);
              v58 = v60;
              if (v60)
              {
                v61 = objc_msgSend(v60, "title");
                if (v61)
                {
                  v62 = v61;
                  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
                  v10 = v63;

                  v11 = 0;
                  v12 = 0;
                  v13 = 2;
                  goto LABEL_84;
                }
              }
              else
              {

              }
            }
          }
          else
          {
            v58 = 0;
          }

          v9 = 0;
          v11 = 0;
          v12 = 0;
          v13 = 2;
          v10 = 0xE000000000000000;
          break;
        default:
          goto LABEL_28;
      }
      goto LABEL_84;
    case 3uLL:
      v30 = objc_msgSend(a1, "queueEvent");
      v9 = (uint64_t)v30;
      if (!v30)
        goto LABEL_80;
      v31 = objc_msgSend(v30, "kind");

      if (v31 == (id)1)
      {
        v51 = objc_msgSend(a1, "queueEvent");
        if (!v51)
          goto LABEL_76;
        v52 = v51;
        v53 = objc_msgSend(v51, "addedContent");

        if (!v53)
          goto LABEL_76;
        v54 = objc_msgSend(v53, "container");
        if (v54)
        {
          v55 = v54;
          v9 = (uint64_t)objc_msgSend(v54, "innermostModelObject");

          v11 = 0;
          v12 = 0;
          v13 = 0;
LABEL_83:
          v10 = 1;
          goto LABEL_84;
        }
        v70 = objc_msgSend(v53, "items");
        v71 = sub_1000087DC(0, &qword_1004965A0, MPModelGenericObject_ptr);
        v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

        if ((unint64_t)v72 >> 62)
        {
          if (v72 < 0)
            v77 = v72;
          else
            v77 = v72 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v78 = _CocoaArrayWrapper.endIndex.getter(v77);
          swift_bridgeObjectRelease();
          if (v78)
            goto LABEL_63;
        }
        else if (*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_63:
          if ((v72 & 0xC000000000000001) != 0)
          {
            v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v72);
          }
          else
          {
            if (!*(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              JUMPOUT(0x1001D7CA0);
            }
            v73 = *(id *)(v72 + 32);
          }
          v74 = v73;
          swift_bridgeObjectRelease();
          v75 = objc_msgSend(v74, "innermostModelObject");

          objc_opt_self(MPModelSong);
          v76 = swift_dynamicCastObjCClass(v75);
          if (v76)
          {
            v9 = v76;

            v10 = 0;
            v11 = 0;
            v12 = 0;
            v13 = 0;
            goto LABEL_84;
          }

          goto LABEL_76;
        }

        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
      if (v31 == (id)7)
      {
LABEL_76:
        v79 = objc_msgSend(a1, "queueEvent");
        v9 = (uint64_t)v79;
        if (!v79)
        {
LABEL_80:

LABEL_82:
          v11 = 0;
          v12 = 0;
          v13 = 4;
          goto LABEL_83;
        }
        v80 = objc_msgSend(v79, "contentUpdatedMessage");

        if (v80)
        {
          v81 = objc_msgSend(v80, "localizedTitle");
          if (v81)
          {
            v82 = v81;
            v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
            v10 = v83;

          }
          else
          {
            v9 = 0;
            v10 = 0;
          }
          v84 = objc_msgSend(v80, "localizedMessage");
          if (v84)
          {
            v85 = v84;
            v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
            v12 = v86;

          }
          else
          {

            v11 = 0;
            v12 = 0;
          }
          v13 = 4;
          goto LABEL_84;
        }
LABEL_81:

        v9 = 0;
        goto LABEL_82;
      }
      if (v31 != (id)6)
        goto LABEL_81;
      v32 = objc_msgSend(a1, "queueEvent");
      v10 = (unint64_t)v32;
      if (!v32)
      {

        v9 = 0;
        goto LABEL_56;
      }
      v9 = (uint64_t)objc_msgSend(v32, "playedNowContent");

      if (!v9)
      {

        goto LABEL_55;
      }
      v33 = objc_msgSend((id)v9, "startItem");
      v34 = objc_msgSend(v33, "innermostModelObject");

      objc_opt_self(MPModelSong);
      v9 = swift_dynamicCastObjCClass(v34);
      if (!v9)
      {

        goto LABEL_55;
      }
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 3;
LABEL_84:
      *(_QWORD *)a2 = v9;
      *(_QWORD *)(a2 + 8) = v10;
      *(_QWORD *)(a2 + 16) = v11;
      *(_QWORD *)(a2 + 24) = v12;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 40) = 0;
      *(_BYTE *)(a2 + 48) = v13;
      return;
    case 4uLL:
      v35 = objc_msgSend(a1, "reactionEvent");
      if (!v35)
      {

        goto LABEL_54;
      }
      v36 = v35;
      v37 = objc_msgSend(v35, "reactionIdentifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v10 = v38;

      v39 = objc_msgSend(v36, "reaction");
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v12 = v40;

      v13 = 1;
      goto LABEL_84;
    default:
      if (qword_10048C978 != -1)
        swift_once(&qword_10048C978, sub_1001D687C);
      v14 = type metadata accessor for Logger(0, v4);
      sub_1000086B4(v14, (uint64_t)static Logger.sharedListening);
      v15 = a1;
      v16 = Logger.logObject.getter(v15);
      v17 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v16, v17))
        goto LABEL_33;
      v18 = swift_slowAlloc(12, -1);
      v19 = (id)swift_slowAlloc(32, -1);
      v87 = v19;
      *(_DWORD *)v18 = 136446210;
      v89 = objc_msgSend(v15, "type");
      type metadata accessor for MPCSharedListeningEventType(0);
      v21 = (char *)String.init<A>(describing:)(&v89, v20);
      *(_QWORD *)(v18 + 4) = sub_100019400(v21, v22, (uint64_t *)&v87);

      swift_bridgeObjectRelease();
      v23 = "Unknown event type: %{public}s";
      v24 = v16;
      v25 = v17;
LABEL_52:
      _os_log_impl((void *)&_mh_execute_header, v24, v25, v23, (uint8_t *)v18, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);

LABEL_53:
LABEL_54:
      v9 = 0;
LABEL_55:
      v10 = 0;
LABEL_56:
      v11 = 0;
      v12 = 0;
      v13 = -1;
      goto LABEL_84;
  }
}

uint64_t sub_1001D7CC0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return swift_task_switch(sub_1001D7CD8, 0, 0);
}

uint64_t sub_1001D7CD8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  __n128 v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v3 = (void *)v2[18];
  v4 = type metadata accessor for Logger(0, a2);
  v2[19] = sub_1000086B4(v4, (uint64_t)static Logger.sharedListening);
  v5 = Logger.logObject.getter(v3);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = v2[18];
    v8 = swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138543362;
    *(_QWORD *)(v8 + 4) = v7;
    *v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "🏗 Building session with intent=%{public}@", (uint8_t *)v8, 0xCu);
    v10 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v9, 1, v10);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

    v5 = v2[18];
  }

  v11 = objc_allocWithZone((Class)ICLiveLinkIdentity);
  v2[14] = CFRange.init(_:);
  v2[15] = 0;
  v2[10] = _NSConcreteStackBlock;
  v2[11] = 1107296256;
  v2[12] = sub_1000E776C;
  v2[13] = &unk_1004549B8;
  v12 = _Block_copy(v2 + 10);
  v13 = objc_msgSend(v11, "initWithBlock:", v12);
  v2[20] = v13;
  _Block_release(v12);
  v14 = swift_release(v2[15]);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v14);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v16 = v2[18];
    v17 = (void *)objc_opt_self(MPCPlaybackIntent);
    v2[7] = v2 + 16;
    v2[2] = v2;
    v2[3] = sub_1001D7F54;
    v18 = swift_continuation_init(v2 + 2, 0);
    v2[10] = _NSConcreteStackBlock;
    v2[11] = 0x40000000;
    v2[12] = sub_1001D6364;
    v2[13] = &unk_1004549E0;
    v2[14] = v18;
    objc_msgSend(v17, "buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:", v16, v13, v2 + 10);
    return swift_continuation_await(v2 + 2);
  }
  return result;
}

uint64_t sub_1001D7F54()
{
  return swift_task_switch(sub_1001D7FA0, 0, 0);
}

uint64_t sub_1001D7FA0()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  NSObject *v9;
  uint8_t *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;

  v1 = *(void **)(v0 + 128);
  v2 = *(NSObject **)(v0 + 136);
  if (v1)
  {
    v3 = v1;
    v4 = -[NSObject sharedListeningProperties](v3, "sharedListeningProperties");
    if (v4)
    {

      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      v8 = os_log_type_enabled(v6, v7);
      v9 = *(NSObject **)(v0 + 160);
      if (v8)
      {
        v10 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "✅ Shared listening intent successfully built", v10, 2u);
        swift_slowDealloc(v10, -1, -1);
        v11 = v9;
        v12 = v6;
      }
      else
      {
        v11 = v3;
        v12 = v2;
        v2 = *(NSObject **)(v0 + 160);
        v3 = v6;
      }

      return (*(uint64_t (**)(void *))(v0 + 8))(v1);
    }

  }
  v13 = v2;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v26 = v17;
    *(_DWORD *)v16 = 136446210;
    *(_QWORD *)(v0 + 80) = -[NSObject error](v13, "error");
    v18 = sub_100005574(&qword_100494190);
    v19 = (char *)String.init<A>(describing:)(v0 + 80, v18);
    *(_QWORD *)(v16 + 4) = sub_100019400(v19, v20, &v26);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "⚠️ Creation error %{public}s", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {

  }
  v21 = *(void **)(v0 + 160);
  v22 = sub_1001CE314();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v22, 0, 0);
  *(_QWORD *)v23 = v13;
  *(_BYTE *)(v23 + 8) = 2;
  swift_willThrow(v24);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D8238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[34] = a3;
  v4[35] = a4;
  v4[32] = a1;
  v4[33] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[36] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[37] = v6;
  v4[38] = v7;
  return swift_task_switch(sub_1001D82A8, v6, v7);
}

uint64_t sub_1001D82A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t result;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  id v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  id v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  uint64_t v58[2];

  if (qword_10048C978 != -1)
    swift_once(&qword_10048C978, sub_1001D687C);
  v3 = *(_QWORD *)(v2 + 272);
  v4 = *(void **)(v2 + 256);
  v5 = type metadata accessor for Logger(0, a2);
  *(_QWORD *)(v2 + 312) = sub_1000086B4(v5, (uint64_t)static Logger.sharedListening);
  v6 = v4;
  swift_retain_n(v3, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v2 + 272);
  if (v9)
  {
    v57 = *(_OWORD *)(v2 + 256);
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v58[0] = v12;
    *(_DWORD *)v11 = 136446210;
    *(_OWORD *)(v2 + 208) = v57;
    *(_QWORD *)(v2 + 224) = v10;
    v13 = (id)v57;
    swift_retain(v10);
    v14 = (char *)String.init<A>(describing:)(v2 + 208, &type metadata for Player.BuildSharedSessionCommand);
    *(_QWORD *)(v11 + 4) = sub_100019400(v14, v15, v58);
    swift_bridgeObjectRelease();

    swift_release_n(v10, 2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "🏗 Building session with command=%{public}s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    v16 = *(void **)(v2 + 256);

    swift_release_n(v10, 2);
  }

  v17 = *(_QWORD *)(v2 + 280);
  if (!v17)
    goto LABEL_17;
  v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v2 + 160, 0, 0);
  v19 = *v18;
  if (!v19)
    goto LABEL_17;
  KeyPath = swift_getKeyPath(&unk_100391958);
  v21 = swift_getKeyPath(&unk_100391980);
  v22 = swift_retain(v19);
  static Published.subscript.getter((_QWORD *)(v2 + 248), v22, KeyPath, v21);
  swift_release(v21);
  swift_release(KeyPath);
  swift_release(v19);
  v23 = *(void **)(v2 + 248);
  if (!v23)
    goto LABEL_17;
  result = swift_conformsToProtocol2(&type metadata for Player.BuildSharedSessionCommand, &protocol descriptor for _PlayerCommand);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v25 = (*(uint64_t (**)(void *, ValueMetadata *, uint64_t))(result + 16))(v23, &type metadata for Player.BuildSharedSessionCommand, result);

  if ((v25 & 1) == 0)
  {
LABEL_17:
    swift_release(*(_QWORD *)(v2 + 288));
    v39 = sub_1001CE314();
    swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v39, 0, 0);
    *(_QWORD *)v40 = 3;
    *(_BYTE *)(v40 + 8) = 4;
    swift_willThrow(v41);
    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  v26 = (uint64_t *)(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess(v17 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player, v2 + 184, 0, 0);
  v27 = *v26;
  if (!v27)
    goto LABEL_16;
  v28 = swift_getKeyPath(&unk_1003919A0);
  v29 = swift_getKeyPath(&unk_1003919C8);
  v30 = swift_retain(v27);
  static Published.subscript.getter((_QWORD *)(v2 + 232), v30, v28, v29);
  swift_release(v29);
  swift_release(v28);
  *(_QWORD *)&v31 = swift_release(v27).n128_u64[0];
  v32 = *(void **)(v2 + 232);
  if (!v32)
    goto LABEL_16;
  v33 = objc_msgSend(*(id *)(v2 + 232), "route", v31);
  *(_QWORD *)(v2 + 320) = v33;

  if (!v33)
    goto LABEL_16;
  if ((objc_msgSend(v33, "isDeviceRoute") & 1) != 0)
  {

LABEL_16:
    v34 = *(_QWORD *)(v2 + 272);
    *(_QWORD *)(v2 + 104) = &type metadata for Player.BuildSharedSessionCommand;
    *(_QWORD *)(v2 + 112) = &protocol witness table for Player.BuildSharedSessionCommand;
    v35 = *(_OWORD *)(v2 + 256);
    *(_OWORD *)(v2 + 80) = v35;
    *(_QWORD *)(v2 + 96) = v34;
    v36 = dword_1004930DC;
    v37 = (id)v35;
    swift_retain(v34);
    v38 = (_QWORD *)swift_task_alloc(v36);
    *(_QWORD *)(v2 + 344) = v38;
    *v38 = v2;
    v38[1] = sub_1001D89CC;
    return PlaybackController.perform(_:options:route:intent:)(v2 + 80, 0x10000, 0, 0);
  }
  v42 = v33;
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v58[0] = v46;
    *(_DWORD *)v45 = 136446210;
    v47 = v42;
    v48 = objc_msgSend(v47, "description");
    v49 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *(_QWORD *)(v45 + 4) = sub_100019400(v49, v51, v58);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v43, v44, "    Build session command needs to be performed on the system route.\n    Switching from %{public}s) to system route.", (uint8_t *)v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);
  }
  else
  {

  }
  v52 = v2 + 16;
  v53 = (void *)objc_opt_self(MPAVRoutingController);
  v54 = objc_msgSend(v53, "systemRoute");
  *(_QWORD *)(v2 + 328) = v54;
  *(_QWORD *)(v2 + 16) = v2;
  *(_QWORD *)(v2 + 24) = sub_1001D88C8;
  v55 = swift_continuation_init(v2 + 16, 1);
  *(_QWORD *)(v2 + 120) = _NSConcreteStackBlock;
  v56 = (_QWORD *)(v2 + 120);
  v56[1] = 0x40000000;
  v56[2] = sub_1000A40C0;
  v56[3] = &unk_1004549A0;
  v56[4] = v55;
  objc_msgSend(v53, "setActiveRoute:completion:", v54, v56);
  return swift_continuation_await(v52);
}

uint64_t sub_1001D88C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 336) = v2;
  if (v2)
    v3 = sub_1001D8C94;
  else
    v3 = sub_1001D8924;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 296), *(_QWORD *)(v1 + 304));
}

uint64_t sub_1001D8924()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 328);

  v2 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 104) = &type metadata for Player.BuildSharedSessionCommand;
  *(_QWORD *)(v0 + 112) = &protocol witness table for Player.BuildSharedSessionCommand;
  v3 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 80) = v3;
  *(_QWORD *)(v0 + 96) = v2;
  v4 = dword_1004930DC;
  v5 = (id)v3;
  swift_retain(v2);
  v6 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 344) = v6;
  *v6 = v0;
  v6[1] = sub_1001D89CC;
  return PlaybackController.perform(_:options:route:intent:)(v0 + 80, 0x10000, 0, 0);
}

uint64_t sub_1001D89CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 344);
  v3[44] = a1;
  v3[45] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[37];
    v6 = v3[38];
    v7 = sub_1001D8CE4;
  }
  else
  {
    sub_10000682C(v3 + 10);
    v5 = v3[37];
    v6 = v3[38];
    v7 = sub_1001D8A40;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1001D8A40()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 352);
  swift_release(*(_QWORD *)(v0 + 288));
  if (!v1)
    goto LABEL_10;
  v2 = *(id *)(v0 + 352);
  v3 = objc_msgSend(v2, "error");
  if (!v3)
  {
    v4 = objc_msgSend(v2, "dialog");

    if (v4)
      goto LABEL_5;

LABEL_10:
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }

LABEL_5:
  v5 = *(_QWORD *)(v0 + 352);
  v6 = sub_1001CE314();
  v7 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v6, 0, 0);
  *(_QWORD *)v8 = v5;
  *(_BYTE *)(v8 + 8) = 2;
  swift_willThrow(v9);

  swift_errorRetain(v7);
  v10 = swift_errorRetain(v7);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v22 = v14;
    *(_DWORD *)v13 = 136446210;
    *(_QWORD *)(v0 + 240) = v7;
    swift_errorRetain(v7);
    v15 = sub_100005574((uint64_t *)&unk_1004911F0);
    v16 = (char *)String.init<A>(describing:)(v0 + 240, v15);
    *(_QWORD *)(v13 + 4) = sub_100019400(v16, v17, &v22);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "⚠️ Building session failed with error=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v6, 0, 0);
  *(_QWORD *)v18 = 4;
  *(_BYTE *)(v18 + 8) = 4;
  swift_willThrow(v19);
  swift_errorRelease(v7);
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1001D8C94()
{
  uint64_t v0;
  void *v1;
  void *v2;
  __n128 v3;

  v1 = *(void **)(v0 + 328);
  v2 = *(void **)(v0 + 320);
  v3 = swift_release(*(_QWORD *)(v0 + 288));
  swift_willThrow(v3);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D8CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 288));
  sub_10000682C((_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 360);
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136446210;
    *(_QWORD *)(v0 + 240) = v1;
    swift_errorRetain(v1);
    v7 = sub_100005574((uint64_t *)&unk_1004911F0);
    v8 = (char *)String.init<A>(describing:)(v0 + 240, v7);
    *(_QWORD *)(v5 + 4) = sub_100019400(v8, v9, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "⚠️ Building session failed with error=%{public}s", (uint8_t *)v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = sub_1001CE314();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v10, 0, 0);
  *(_QWORD *)v11 = 4;
  *(_BYTE *)(v11 + 8) = 4;
  swift_willThrow(v12);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D8EA0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[72] = a2;
  v2[71] = a1;
  v3 = type metadata accessor for MainActor(0);
  v2[73] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[74] = v4;
  v2[75] = v5;
  return swift_task_switch(sub_1001D8F14, v4, v5);
}

uint64_t sub_1001D8F14()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  void *v20;
  uint64_t v21;

  v1 = qword_10048C978;
  v2 = *(id *)(v0 + 568);
  if (v1 == -1)
  {
    v4 = v2;
  }
  else
  {
    swift_once(&qword_10048C978, sub_1001D687C);
    v4 = *(void **)(v0 + 568);
  }
  v5 = type metadata accessor for Logger(0, v3);
  *(_QWORD *)(v0 + 608) = sub_1000086B4(v5, (uint64_t)static Logger.sharedListening);
  v6 = Logger.logObject.getter(v4);
  v7 = static os_log_type_t.default.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 568);
  if (v8)
  {
    v10 = swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v21 = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v0 + 496) = v9;
    *(_QWORD *)(v0 + 504) = 1;
    v12 = v9;
    v13 = (char *)String.init<A>(describing:)(v0 + 496, &type metadata for Player.ReplaceCommand);
    *(_QWORD *)(v10 + 4) = sub_100019400(v13, v14, &v21);

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Adding the intent to the player with command%{public}s", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    if (*(_QWORD *)(v0 + 576))
    {
LABEL_5:
      v15 = *(void **)(v0 + 568);
      *(_QWORD *)(v0 + 416) = &type metadata for Player.ReplaceCommand;
      *(_QWORD *)(v0 + 424) = &protocol witness table for Player.ReplaceCommand;
      *(_QWORD *)(v0 + 392) = v15;
      *(_QWORD *)(v0 + 400) = 1;
      v16 = dword_1004930DC;
      v17 = v15;
      v18 = (_QWORD *)swift_task_alloc(v16);
      *(_QWORD *)(v0 + 616) = v18;
      *v18 = v0;
      v18[1] = sub_1001D9158;
      return PlaybackController.perform(_:options:route:intent:)(v0 + 392, 0x10000, 0, 0);
    }
  }
  else
  {

    if (*(_QWORD *)(v0 + 576))
      goto LABEL_5;
  }
  v20 = *(void **)(v0 + 568);
  swift_release(*(_QWORD *)(v0 + 584));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D9158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 616);
  v3[78] = a1;
  v3[79] = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = v3[75];
    v6 = v3[74];
    v7 = sub_1001D9DF4;
  }
  else
  {
    sub_10000682C(v3 + 49);
    v5 = v3[75];
    v6 = v3[74];
    v7 = sub_1001D91D8;
  }
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1001D91D8()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  uint64_t (*v7)(__n128);
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v27;
  void *v28;
  __n128 v29;
  void *v30;
  id v31;
  __n128 v32;

  v1 = (void *)v0[78];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v2, "error");
    if (v3)
    {

      goto LABEL_7;
    }
    v8 = objc_msgSend(v2, "dialog");

    if (v8)
    {
LABEL_7:
      v9 = v0[78];
      v10 = sub_1001CE314();
      v11 = swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v10, 0, 0);
      *(_QWORD *)v12 = v9;
      *(_BYTE *)(v12 + 8) = 2;
      swift_willThrow(v13);

      v0[65] = v11;
      swift_errorRetain(v11);
      v14 = sub_100005574((uint64_t *)&unk_1004911F0);
      type metadata accessor for MPCPlayerRequestError(0);
      v16 = v15;
      if ((swift_dynamicCast(v0 + 64, v0 + 65, v14, v15, 0) & 1) != 0)
      {
        v17 = (void *)v0[64];
        v0[80] = v17;
        v0[66] = v17;
        v18 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
        _BridgedStoredNSError.code.getter(v16, v18);
        if (v0[68] == 1001)
        {
          swift_errorRelease(v11);
          v19 = v17;
          v20 = (void *)_convertErrorToNSError(_:)(v19);

          v21 = objc_msgSend(v20, "msv_errorByUnwrappingDomain:", MPCErrorDomain);
          v0[81] = v21;

          if (v21)
          {
            swift_getErrorValue(v21, v0 + 70, v0 + 59);
            if (dispatch thunk of Error._code.getter(v0[60], v0[61]) == 58)
            {
              v22 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
              v23 = objc_allocWithZone((Class)MPAVRoutingController);
              v24 = String._bridgeToObjectiveC()();
              v25 = objc_msgSend(v23, "initWithDataSource:name:", v22, v24);
              v0[82] = v25;

              v0[31] = v0 + 69;
              v0[26] = v0;
              v0[27] = sub_1001D9550;
              v0[38] = swift_continuation_init(v0 + 26, 0);
              v0[34] = _NSConcreteStackBlock;
              v0[35] = 0x40000000;
              v0[36] = sub_1001D6314;
              v0[37] = &unk_100454940;
              objc_msgSend(v25, "getActiveRouteWithTimeout:completion:", v0 + 34, 2.0);
              return swift_continuation_await(v0 + 26);
            }

          }
          v30 = (void *)v0[71];
          swift_release(v0[73]);
          v31 = v19;
          swift_willThrow(v32);

          swift_errorRelease(v0[65]);
          goto LABEL_15;
        }
        v27 = v0[73];

      }
      else
      {
        v27 = v0[73];
      }
      swift_release(v27);
      v28 = (void *)v0[71];
      swift_errorRelease(v0[65]);
      swift_willThrow(v29);

LABEL_15:
      v7 = (uint64_t (*)(__n128))v0[1];
      return v7(v6);
    }
    v4 = v0[73];
    v5 = (void *)v0[71];

  }
  else
  {
    v4 = v0[73];
    v5 = (void *)v0[71];
  }

  v6 = swift_release(v4);
  v7 = (uint64_t (*)(__n128))v0[1];
  return v7(v6);
}

uint64_t sub_1001D9550()
{
  uint64_t v0;

  return swift_task_switch(sub_1001D9598, *(_QWORD *)(*(_QWORD *)v0 + 592), *(_QWORD *)(*(_QWORD *)v0 + 600));
}

uint64_t sub_1001D9598()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  __n128 v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;

  v1 = *(void **)(v0 + 552);
  *(_QWORD *)(v0 + 664) = v1;
  v2 = (void *)objc_opt_self(MPAVRoutingController);
  *(_QWORD *)(v0 + 672) = v2;
  v3 = v1;
  v4 = objc_msgSend(v2, "systemRoute");
  v5 = v4;
  if (v1)
  {
    if (v4)
    {
      sub_1000087DC(0, &qword_1004941B8, MPAVRoute_ptr);
      v6 = v3;
      v7 = static NSObject.== infix(_:_:)(v6, v5);

      if ((v7 & 1) == 0)
        goto LABEL_9;
LABEL_6:
      v9 = *(void **)(v0 + 656);
      v10 = *(void **)(v0 + 648);
      v11 = *(void **)(v0 + 640);
      v12 = *(void **)(v0 + 568);
      swift_release(*(_QWORD *)(v0 + 584));
      v13 = v11;
      swift_willThrow(v14);

      swift_errorRelease(*(_QWORD *)(v0 + 520));
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v5 = v3;
  }
  else if (!v4)
  {
    goto LABEL_6;
  }

LABEL_9:
  v16 = Logger.logObject.getter(v8);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "SharedListening requires system route, switching…", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_1001D97AC;
  *(_QWORD *)(v0 + 344) = swift_continuation_init(v0 + 144, 1);
  *(_QWORD *)(v0 + 312) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 320) = 0x40000000;
  *(_QWORD *)(v0 + 328) = sub_1000A40C0;
  *(_QWORD *)(v0 + 336) = &unk_100454958;
  objc_msgSend(v2, "setActiveRoute:completion:", 0, v0 + 312);
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_1001D97AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  *(_QWORD *)(*v0 + 680) = v2;
  if (v2)
    v3 = sub_1001DA0B4;
  else
    v3 = sub_1001D980C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 592), *(_QWORD *)(v1 + 600));
}

uint64_t sub_1001D980C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 656);
  v2 = objc_msgSend(*(id *)(v0 + 672), "systemRoute");
  *(_QWORD *)(v0 + 688) = v2;
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_1001D98CC;
  *(_QWORD *)(v0 + 464) = swift_continuation_init(v0 + 80, 1);
  *(_QWORD *)(v0 + 432) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 440) = 0x40000000;
  *(_QWORD *)(v0 + 448) = sub_1000A40C0;
  *(_QWORD *)(v0 + 456) = &unk_100454970;
  objc_msgSend(v1, "selectRoute:operation:completion:", v2, 0, v0 + 432);
  return swift_continuation_await(v0 + 80);
}

uint64_t sub_1001D98CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 696) = v2;
  if (v2)
    v3 = sub_1001DA138;
  else
    v3 = sub_1001D992C;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 592), *(_QWORD *)(v1 + 600));
}

uint64_t sub_1001D992C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 656);

  *(_QWORD *)(v0 + 56) = v0 + 536;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1001D99D8;
  *(_QWORD *)(v0 + 384) = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 352) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 360) = 0x40000000;
  *(_QWORD *)(v0 + 368) = sub_1001D6314;
  *(_QWORD *)(v0 + 376) = &unk_100454988;
  objc_msgSend(v1, "getActiveRouteWithTimeout:completion:", v0 + 352, 2.0);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_1001D99D8()
{
  uint64_t v0;

  return swift_task_switch(sub_1001D9A20, *(_QWORD *)(*(_QWORD *)v0 + 592), *(_QWORD *)(*(_QWORD *)v0 + 600));
}

uint64_t sub_1001D9A20()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  NSObject *v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  char *v23;

  v1 = *(void **)(v0 + 536);
  *(_QWORD *)(v0 + 704) = v1;
  v2 = v1;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    *(_QWORD *)(v5 + 4) = v2;
    *v6 = v1;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "active route=%@", (uint8_t *)v5, 0xCu);
    v7 = sub_100005574(&qword_100494910);
    swift_arrayDestroy(v6, 1, v7);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {

    v3 = v2;
  }
  v8 = *(void **)(v0 + 672);

  v9 = objc_msgSend(v8, "systemRoute");
  v10 = v9;
  if (!v1)
  {
    if (v9)
    {
      v13 = *(_QWORD *)(v0 + 584);

      goto LABEL_12;
    }
LABEL_10:
    v23 = (char *)&dword_100496530 + dword_100496530;
    v14 = (_QWORD *)swift_task_alloc(unk_100496534);
    *(_QWORD *)(v0 + 712) = v14;
    *v14 = v0;
    v14[1] = sub_1001D9CA0;
    return ((uint64_t (*)(_QWORD, _QWORD))v23)(*(_QWORD *)(v0 + 568), *(_QWORD *)(v0 + 576));
  }
  if (!v9)
  {
    v13 = *(_QWORD *)(v0 + 584);

    goto LABEL_12;
  }
  sub_1000087DC(0, &qword_1004941B8, MPAVRoute_ptr);
  v11 = v2;
  v12 = static NSObject.== infix(_:_:)(v11, v10);

  if ((v12 & 1) != 0)
    goto LABEL_10;
  v13 = *(_QWORD *)(v0 + 584);
LABEL_12:
  swift_release(v13);
  v16 = *(void **)(v0 + 656);
  v17 = *(void **)(v0 + 648);
  v18 = *(void **)(v0 + 640);
  v19 = *(void **)(v0 + 568);
  v20 = sub_1001CE314();
  swift_allocError(&type metadata for SharedListening.ErrorHandling.Error, v20, 0, 0);
  *(_QWORD *)v21 = 5;
  *(_BYTE *)(v21 + 8) = 4;
  swift_willThrow(v22);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D9CA0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 712);
  *(_QWORD *)(*v1 + 720) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1001D9D7C;
  else
    v4 = sub_1001D9D04;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 592), *(_QWORD *)(v2 + 600));
}

uint64_t sub_1001D9D04()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 704);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 584);

  swift_release(v5);
  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D9D7C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 704);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(_QWORD *)(v0 + 584);

  swift_release(v5);
  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D9DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v15;
  void *v16;
  __n128 v17;
  void *v18;
  id v19;
  __n128 v20;

  sub_10000682C((_QWORD *)(v0 + 392));
  v1 = *(_QWORD *)(v0 + 632);
  *(_QWORD *)(v0 + 520) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574((uint64_t *)&unk_1004911F0);
  type metadata accessor for MPCPlayerRequestError(0);
  v4 = v3;
  if (!swift_dynamicCast(v0 + 512, v0 + 520, v2, v3, 0))
  {
    v15 = *(_QWORD *)(v0 + 584);
LABEL_8:
    swift_release(v15);
    v16 = *(void **)(v0 + 568);
    swift_errorRelease(*(_QWORD *)(v0 + 520));
    swift_willThrow(v17);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(void **)(v0 + 512);
  *(_QWORD *)(v0 + 640) = v5;
  *(_QWORD *)(v0 + 528) = v5;
  v6 = sub_100006924(&qword_10048D6A0, (uint64_t (*)(uint64_t))type metadata accessor for MPCPlayerRequestError, (uint64_t)&unk_10038706C);
  _BridgedStoredNSError.code.getter(v4, v6);
  if (*(_QWORD *)(v0 + 544) != 1001)
  {
    v15 = *(_QWORD *)(v0 + 584);

    goto LABEL_8;
  }
  swift_errorRelease(v1);
  v7 = v5;
  v8 = (void *)_convertErrorToNSError(_:)(v7);

  v9 = objc_msgSend(v8, "msv_errorByUnwrappingDomain:", MPCErrorDomain);
  *(_QWORD *)(v0 + 648) = v9;

  if (v9)
  {
    swift_getErrorValue(v9, v0 + 560, v0 + 472);
    if (dispatch thunk of Error._code.getter(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488)) == 58)
    {
      v10 = objc_msgSend(objc_allocWithZone((Class)MPAVEndpointRoutingDataSource), "init");
      v11 = objc_allocWithZone((Class)MPAVRoutingController);
      v12 = String._bridgeToObjectiveC()();
      v13 = objc_msgSend(v11, "initWithDataSource:name:", v10, v12);
      *(_QWORD *)(v0 + 656) = v13;

      *(_QWORD *)(v0 + 248) = v0 + 552;
      *(_QWORD *)(v0 + 208) = v0;
      *(_QWORD *)(v0 + 216) = sub_1001D9550;
      *(_QWORD *)(v0 + 304) = swift_continuation_init(v0 + 208, 0);
      *(_QWORD *)(v0 + 272) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 280) = 0x40000000;
      *(_QWORD *)(v0 + 288) = sub_1001D6314;
      *(_QWORD *)(v0 + 296) = &unk_100454940;
      objc_msgSend(v13, "getActiveRouteWithTimeout:completion:", v0 + 272, 2.0);
      return swift_continuation_await(v0 + 208);
    }

  }
  v18 = *(void **)(v0 + 568);
  swift_release(*(_QWORD *)(v0 + 584));
  v19 = v7;
  swift_willThrow(v20);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DA0B4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __n128 v6;

  v1 = *(void **)(v0 + 664);
  v2 = *(void **)(v0 + 656);
  v3 = *(void **)(v0 + 648);
  v4 = *(void **)(v0 + 640);
  v5 = *(void **)(v0 + 568);
  v6 = swift_release(*(_QWORD *)(v0 + 584));
  swift_willThrow(v6);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DA138()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  __n128 v7;

  v1 = *(void **)(v0 + 688);
  v2 = *(void **)(v0 + 664);
  v3 = *(void **)(v0 + 656);
  v4 = *(void **)(v0 + 648);
  v5 = *(void **)(v0 + 640);
  v6 = *(void **)(v0 + 568);
  v7 = swift_release(*(_QWORD *)(v0 + 584));
  swift_willThrow(v7);

  swift_errorRelease(*(_QWORD *)(v0 + 520));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001DA1C4()
{
  unint64_t result;

  result = qword_100496540;
  if (!qword_100496540)
  {
    result = swift_getWitnessTable(&unk_1003918C8, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496540);
  }
  return result;
}

uint64_t sub_1001DA208(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x696A6F6D65 && a2 == 0xE500000000000000)
  {
    v7 = 0xE500000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696A6F6D65, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x44497265646E6573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x44497265646E6573, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001DA33C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v5 = sub_100005574(&qword_100496568);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001DA1C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for SharedListening.Reaction.CodingKeys, &type metadata for SharedListening.Reaction.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v30 = 0;
  v12 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v5);
  v14 = v13;
  v27 = v12;
  v29 = 1;
  swift_bridgeObjectRetain();
  v15 = KeyedDecodingContainer.decode(_:forKey:)(&v29, v5);
  v17 = v16;
  v25 = v15;
  v28 = 2;
  swift_bridgeObjectRetain();
  v26 = v17;
  v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v28, v5);
  v20 = v19;
  v21 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  sub_10000682C(a1);
  swift_bridgeObjectRelease();
  v22 = v26;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v14;
  a2[2] = v25;
  a2[3] = v22;
  a2[4] = v21;
  a2[5] = v20;
  return result;
}

unint64_t sub_1001DA574()
{
  unint64_t result;

  result = qword_100496548;
  if (!qword_100496548)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SharedListening.Reaction, &type metadata for SharedListening.Reaction);
    atomic_store(result, (unint64_t *)&qword_100496548);
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening()
{
  return &type metadata for SharedListening;
}

uint64_t destroy for SharedListening.Reaction(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

_QWORD *initializeWithCopy for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a2[5];
  v7 = a1[5];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for SharedListening.Reaction(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Reaction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Reaction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Reaction()
{
  return &type metadata for SharedListening.Reaction;
}

void destroy for SharedListening.Event(uint64_t a1)
{
  sub_10016D1C0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1001CDCF8(*(id *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1001CDCF8(*(id *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_10016D1C0(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_10016D1C0(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Event(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Event(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001DA9DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 4u)
    return *(unsigned __int8 *)(a1 + 48);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1001DA9F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Event()
{
  return &type metadata for SharedListening.Event;
}

ValueMetadata *type metadata accessor for SharedListening.Event.Content()
{
  return &type metadata for SharedListening.Event.Content;
}

uint64_t destroy for SharedListening.Event.Alert(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a2[3];
  v6 = a1[3];
  a1[3] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

_QWORD *assignWithTake for SharedListening.Event.Alert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.Event.Alert(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.Event.Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Event.Alert()
{
  return &type metadata for SharedListening.Event.Alert;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling()
{
  return &type metadata for SharedListening.ErrorHandling;
}

double destroy for SharedListening.ErrorHandling.Context(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

_QWORD *_s9MusicCore15SharedListeningO13ErrorHandlingV7ContextVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for SharedListening.ErrorHandling.Context(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for SharedListening.ErrorHandling.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.ErrorHandling.Context(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.ErrorHandling.Context(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling.Context()
{
  return &type metadata for SharedListening.ErrorHandling.Context;
}

uint64_t storeEnumTagSinglePayload for SharedListening.Reaction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001DAE68 + 4 * byte_1003916AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001DAE9C + 4 * byte_1003916AA[v4]))();
}

uint64_t sub_1001DAE9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DAEA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DAEACLL);
  return result;
}

uint64_t sub_1001DAEB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DAEC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001DAEC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DAECC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.Reaction.CodingKeys()
{
  return &type metadata for SharedListening.Reaction.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001DAF2C(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1001DAF2C(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 3:
      result = (id)swift_errorRetain(result);
      break;
    case 1:
      result = (id)swift_retain(result);
      break;
    case 2:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for SharedListening.ErrorHandling.Error(uint64_t a1)
{
  sub_1001D18B4(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1001DAF2C(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1001D18B4(v5, v6);
  return a1;
}

uint64_t assignWithTake for SharedListening.ErrorHandling.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1001D18B4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedListening.ErrorHandling.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharedListening.ErrorHandling.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001DB08C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1001DB0A4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SharedListening.ErrorHandling.Error()
{
  return &type metadata for SharedListening.ErrorHandling.Error;
}

unint64_t sub_1001DB0D0()
{
  unint64_t result;

  result = qword_100496550;
  if (!qword_100496550)
  {
    result = swift_getWitnessTable(&unk_1003918A0, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496550);
  }
  return result;
}

unint64_t sub_1001DB118()
{
  unint64_t result;

  result = qword_100496558;
  if (!qword_100496558)
  {
    result = swift_getWitnessTable(&unk_100391810, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496558);
  }
  return result;
}

unint64_t sub_1001DB160()
{
  unint64_t result;

  result = qword_100496560;
  if (!qword_100496560)
  {
    result = swift_getWitnessTable(&unk_100391838, &type metadata for SharedListening.Reaction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496560);
  }
  return result;
}

uint64_t sub_1001DB1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001DB1C4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001DB1CC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001DB200()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_1004965C4);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000EA88;
  return sub_1001D639C(v2, v3, v4);
}

uint64_t sub_1001DB260()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  sub_10000682C((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1001DB2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1004965D4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000EA88;
  return sub_1001D6544(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

uint64_t sub_1001DB340()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001DB374(void *a1)
{
  uint64_t v1;

  sub_1001D6BDC(a1, *(id *)(v1 + 16), *(void (**)(id))(v1 + 24));
}

void *UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor()
{
  return &static UnifiedMessages.groupDefaultsSuiteName;
}

unint64_t static UnifiedMessages.groupDefaultsSuiteName.getter()
{
  return 0xD000000000000015;
}

uint64_t UnifiedMessages.MLI.State.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001DB3F0 + 4 * byte_1003919F0[a1]))(0xD00000000000001ELL, 0x80000001003ACEC0);
}

uint64_t sub_1001DB3F0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1001DB408()
{
  return 0x6572676F72506E69;
}

uint64_t sub_1001DB424()
{
  return 0x6574656C706D6F63;
}

void sub_1001DB440(char *a1)
{
  sub_100028510(*a1);
}

void sub_1001DB44C()
{
  char *v0;

  sub_1000BE53C(*v0);
}

void sub_1001DB454()
{
  __asm { BR              X10 }
}

uint64_t sub_1001DB494(uint64_t a1)
{
  String.hash(into:)(a1, 0x6E776F6E6B6E75, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_1001DB4F8(uint64_t a1)
{
  char *v1;

  sub_1000BE930(a1, *v1);
}

unint64_t sub_1001DB500@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s9MusicCore15UnifiedMessagesO3MLIV5StateO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001DB52C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001DB560 + 4 * byte_1003919F8[*v0]))();
}

void sub_1001DB560(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

void sub_1001DB57C(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676F72506E69;
  a1[1] = 0xEA00000000007373;
}

void sub_1001DB59C(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

uint64_t sub_1001DB5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001DBAE0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

const char *UnifiedMessages.MLI.userDefaultsKey.unsafeMutableAddressor()
{
  return "mliState";
}

uint64_t static UnifiedMessages.MLI.userDefaultsKey.getter()
{
  return 0x6574617453696C6DLL;
}

const char *UnifiedMessages.MLI.sessionIDKey.unsafeMutableAddressor()
{
  return "mliSessionID";
}

uint64_t static UnifiedMessages.MLI.sessionIDKey.getter()
{
  return 0x6973736553696C6DLL;
}

void *UnifiedMessages.MLI.didCompleteTransferKey.unsafeMutableAddressor()
{
  return &static UnifiedMessages.MLI.didCompleteTransferKey;
}

unint64_t static UnifiedMessages.MLI.didCompleteTransferKey.getter()
{
  return 0xD000000000000016;
}

const char *UnifiedMessages.MLI.mliReviewKey.unsafeMutableAddressor()
{
  return "mliReview";
}

uint64_t static UnifiedMessages.MLI.mliReviewKey.getter()
{
  return 0x6569766552696C6DLL;
}

MusicCore::UnifiedMessages::GroupDefaultsKey_optional __swiftcall UnifiedMessages.GroupDefaultsKey.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicCore::UnifiedMessages::GroupDefaultsKey_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043F140, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicCore_UnifiedMessages_GroupDefaultsKey_countOfSongsInLibrary;
  else
    v4.value = MusicCore_UnifiedMessages_GroupDefaultsKey_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

unint64_t UnifiedMessages.GroupDefaultsKey.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000019;
}

uint64_t sub_1001DB734(char *a1, char *a2)
{
  return sub_100028678(*a1, *a2);
}

Swift::Int sub_1001DB740()
{
  char *v0;

  return sub_1000BE608(*v0);
}

uint64_t sub_1001DB748(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  if (*v1)
    v3 = 0x80000001003ACF20;
  else
    v3 = 0x80000001003ACF00;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001DB7A8(uint64_t a1)
{
  char *v1;

  return sub_1000BE8B0(a1, *v1);
}

uint64_t sub_1001DB7B0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043F140, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001DB80C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000019;
  v3 = 0x80000001003ACF00;
  if (*v1)
    v3 = 0x80000001003ACF20;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t _s9MusicCore15UnifiedMessagesO3MLIV5StateO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043F0C0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1001DB89C()
{
  unint64_t result;

  result = qword_1004965E0;
  if (!qword_1004965E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.MLI.State, &type metadata for UnifiedMessages.MLI.State);
    atomic_store(result, (unint64_t *)&qword_1004965E0);
  }
  return result;
}

unint64_t sub_1001DB8E4()
{
  unint64_t result;

  result = qword_1004965E8;
  if (!qword_1004965E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.GroupDefaultsKey, &type metadata for UnifiedMessages.GroupDefaultsKey);
    atomic_store(result, (unint64_t *)&qword_1004965E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages()
{
  return &type metadata for UnifiedMessages;
}

ValueMetadata *type metadata accessor for UnifiedMessages.MLI()
{
  return &type metadata for UnifiedMessages.MLI;
}

uint64_t storeEnumTagSinglePayload for UnifiedMessages.MLI.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001DB994 + 4 * byte_100391A01[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001DB9C8 + 4 * byte_1003919FC[v4]))();
}

uint64_t sub_1001DB9C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DB9D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DB9D8);
  return result;
}

uint64_t sub_1001DB9E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DB9ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001DB9F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DB9F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages.MLI.State()
{
  return &type metadata for UnifiedMessages.MLI.State;
}

uint64_t storeEnumTagSinglePayload for UnifiedMessages.GroupDefaultsKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001DBA60 + 4 * byte_100391A0B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001DBA94 + 4 * byte_100391A06[v4]))();
}

uint64_t sub_1001DBA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DBA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DBAA4);
  return result;
}

uint64_t sub_1001DBAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DBAB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001DBABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DBAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnifiedMessages.GroupDefaultsKey()
{
  return &type metadata for UnifiedMessages.GroupDefaultsKey;
}

unint64_t sub_1001DBAE0()
{
  unint64_t result;

  result = qword_1004965F0;
  if (!qword_1004965F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UnifiedMessages.MLI.State, &type metadata for UnifiedMessages.MLI.State);
    atomic_store(result, (unint64_t *)&qword_1004965F0);
  }
  return result;
}

MusicCore::AccessibilityIdentifier __swiftcall AccessibilityIdentifier.init(name:)(Swift::String name)
{
  void *object;
  uint64_t countAndFlagsBits;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  MusicCore::AccessibilityIdentifier result;
  uint64_t v8;
  void *v9;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v8 = qword_1004965F8;
  v9 = (void *)unk_100496600;
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 46;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = countAndFlagsBits;
  v4._object = object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v8;
  v6 = v9;
  result.rawValue._object = v6;
  result.rawValue._countAndFlagsBits = v5;
  return result;
}

uint64_t static AccessibilityIdentifier.named(_:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v8;

  v4 = qword_10048C980;
  swift_bridgeObjectRetain();
  if (v4 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v8 = qword_1004965F8;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 46;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1001DBC90()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = sub_1001DBCF0();
  v3 = v2;

  qword_1004965F8 = v1;
  unk_100496600 = v3;
}

uint64_t sub_1001DBCF0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  Swift::String v37;
  _BYTE v39[16];
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0;
  v2 = 0x6973754D2E414955;
  v3 = sub_100005574(&qword_10048D510);
  v4 = __chkstk_darwin(v3);
  v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v39[-v7];
  LOBYTE(v42) = 6;
  v9 = sub_10008928C();
  if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9) & 1) != 0)
  {
    LOBYTE(v42) = 5;
    if ((FeatureFlagsKey.isEnabled.getter((uint64_t)&type metadata for Feature.Music, v9) & 1) != 0)
    {
      v42 = 0;
      v43 = 0xE000000000000000;
      v10 = objc_msgSend(v0, "bundleIdentifier");
      if (v10)
      {
        v11 = v10;
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v14 = v13;

        v40 = 46;
        v41 = 0xE100000000000000;
        __chkstk_darwin(v15);
        *(_QWORD *)&v39[-16] = &v40;
        swift_bridgeObjectRetain();
        v16 = sub_1001E6988(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001E70DC, (uint64_t)&v39[-32], v12, v14);
        swift_bridgeObjectRelease(v14);
        v17 = *((_QWORD *)v16 + 2);
        if (v17)
        {
          v18 = (uint64_t *)&v16[32 * v17];
          v19 = *v18;
          v20 = v18[1];
          v22 = v18[2];
          v21 = v18[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease(v16);
LABEL_14:
          v34 = static String._fromSubstring(_:)(v19, v20, v22, v21);
          v36 = v35;
          swift_bridgeObjectRelease(v21);
          v37._countAndFlagsBits = v34;
          v37._object = v36;
          String.append(_:)(v37);
          swift_bridgeObjectRelease(v36);
          return v42;
        }
        swift_bridgeObjectRelease(v16);
      }
      v40 = 0;
      v41 = 0xE000000000000000;
      v23 = objc_msgSend(v1, "executableURL");
      if (v23)
      {
        v24 = v23;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v23);

        v25 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 0, 1, v25);
      }
      else
      {
        v25 = type metadata accessor for URL(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
      }
      sub_10000DCB0((uint64_t)v6, (uint64_t)v8);
      type metadata accessor for URL(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v25) == 1)
      {
        sub_10000DD40((uint64_t)v8);
        v27 = (void *)0xE500000000000000;
        v28 = 0x636973754DLL;
      }
      else
      {
        v28 = URL.lastPathComponent.getter();
        v27 = v29;
        (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v8, v25);
      }
      v30._countAndFlagsBits = v28;
      v30._object = v27;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(v27);
      v19 = Substring.init(_:)(v40, v41);
      v20 = v31;
      v22 = v32;
      v21 = v33;
      goto LABEL_14;
    }
  }
  return v2;
}

uint64_t sub_1001DC01C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6B726F77747241;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.artwork = v3;
  *(_QWORD *)algn_1004A2378 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artwork.unsafeMutableAddressor()
{
  if (qword_10048C988 != -1)
    swift_once(&qword_10048C988, sub_1001DC01C);
  return &static AccessibilityIdentifier.artwork;
}

uint64_t static AccessibilityIdentifier.artwork.getter()
{
  return sub_1001E5978(&qword_10048C988, &static AccessibilityIdentifier.artwork);
}

uint64_t sub_1001DC12C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B62C0;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.doneButton = v3;
  *(_QWORD *)algn_1004A2388 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.doneButton.unsafeMutableAddressor()
{
  if (qword_10048C990 != -1)
    swift_once(&qword_10048C990, sub_1001DC12C);
  return &static AccessibilityIdentifier.doneButton;
}

uint64_t static AccessibilityIdentifier.doneButton.getter()
{
  return sub_1001E5978(&qword_10048C990, &static AccessibilityIdentifier.doneButton);
}

uint64_t sub_1001DC240()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x747475426B636142;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.backButton = v3;
  *(_QWORD *)algn_1004A2398 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.backButton.unsafeMutableAddressor()
{
  if (qword_10048C998 != -1)
    swift_once(&qword_10048C998, sub_1001DC240);
  return &static AccessibilityIdentifier.backButton;
}

uint64_t static AccessibilityIdentifier.backButton.getter()
{
  return sub_1001E5978(&qword_10048C998, &static AccessibilityIdentifier.backButton);
}

uint64_t sub_1001DC354()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 1701998413;
  v1._object = (void *)0xE400000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.moreButton = v3;
  *(_QWORD *)algn_1004A23A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.moreButton.unsafeMutableAddressor()
{
  if (qword_10048C9A0 != -1)
    swift_once(&qword_10048C9A0, sub_1001DC354);
  return &static AccessibilityIdentifier.moreButton;
}

uint64_t static AccessibilityIdentifier.moreButton.getter()
{
  return sub_1001E5978(&qword_10048C9A0, &static AccessibilityIdentifier.moreButton);
}

uint64_t sub_1001DC45C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B62A0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.contextMenuButton = v3;
  *(_QWORD *)algn_1004A23B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.contextMenuButton.unsafeMutableAddressor()
{
  if (qword_10048C9A8 != -1)
    swift_once(&qword_10048C9A8, sub_1001DC45C);
  return &static AccessibilityIdentifier.contextMenuButton;
}

uint64_t static AccessibilityIdentifier.contextMenuButton.getter()
{
  return sub_1001E5978(&qword_10048C9A8, &static AccessibilityIdentifier.contextMenuButton);
}

uint64_t sub_1001DC570()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6280;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.calendarButton = v3;
  *(_QWORD *)algn_1004A23C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.calendarButton.unsafeMutableAddressor()
{
  if (qword_10048C9B0 != -1)
    swift_once(&qword_10048C9B0, sub_1001DC570);
  return &static AccessibilityIdentifier.calendarButton;
}

uint64_t static AccessibilityIdentifier.calendarButton.getter()
{
  return sub_1001E5978(&qword_10048C9B0, &static AccessibilityIdentifier.calendarButton);
}

uint64_t sub_1001DC684()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x65486C6961746544;
  v1._object = (void *)0xEC00000072656461;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeader = v3;
  *(_QWORD *)algn_1004A23D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeader.unsafeMutableAddressor()
{
  if (qword_10048C9B8 != -1)
    swift_once(&qword_10048C9B8, sub_1001DC684);
  return &static AccessibilityIdentifier.detailHeader;
}

uint64_t static AccessibilityIdentifier.detailHeader.getter()
{
  return sub_1001E5978(&qword_10048C9B8, &static AccessibilityIdentifier.detailHeader);
}

uint64_t sub_1001DC79C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6260;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderTitle = v3;
  *(_QWORD *)algn_1004A23E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderTitle.unsafeMutableAddressor()
{
  if (qword_10048C9C0 != -1)
    swift_once(&qword_10048C9C0, sub_1001DC79C);
  return &static AccessibilityIdentifier.detailHeaderTitle;
}

uint64_t static AccessibilityIdentifier.detailHeaderTitle.getter()
{
  return sub_1001E5978(&qword_10048C9C0, &static AccessibilityIdentifier.detailHeaderTitle);
}

uint64_t sub_1001DC8B0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6240;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderTitleFavorited = v3;
  *(_QWORD *)algn_1004A23F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderTitleFavorited.unsafeMutableAddressor()
{
  if (qword_10048C9C8 != -1)
    swift_once(&qword_10048C9C8, sub_1001DC8B0);
  return &static AccessibilityIdentifier.detailHeaderTitleFavorited;
}

uint64_t static AccessibilityIdentifier.detailHeaderTitleFavorited.getter()
{
  return sub_1001E5978(&qword_10048C9C8, &static AccessibilityIdentifier.detailHeaderTitleFavorited);
}

uint64_t sub_1001DC9C4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6220;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderLabel = v3;
  *(_QWORD *)algn_1004A2408 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderLabel.unsafeMutableAddressor()
{
  if (qword_10048C9D0 != -1)
    swift_once(&qword_10048C9D0, sub_1001DC9C4);
  return &static AccessibilityIdentifier.detailHeaderLabel;
}

uint64_t static AccessibilityIdentifier.detailHeaderLabel.getter()
{
  return sub_1001E5978(&qword_10048C9D0, &static AccessibilityIdentifier.detailHeaderLabel);
}

uint64_t sub_1001DCAD8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6200;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderArtistLink = v3;
  *(_QWORD *)algn_1004A2418 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderArtistLink.unsafeMutableAddressor()
{
  if (qword_10048C9D8 != -1)
    swift_once(&qword_10048C9D8, sub_1001DCAD8);
  return &static AccessibilityIdentifier.detailHeaderArtistLink;
}

uint64_t static AccessibilityIdentifier.detailHeaderArtistLink.getter()
{
  return sub_1001E5978(&qword_10048C9D8, &static AccessibilityIdentifier.detailHeaderArtistLink);
}

uint64_t sub_1001DCBEC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B61E0;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderDescriptionLabel = v3;
  *(_QWORD *)algn_1004A2428 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderDescriptionLabel.unsafeMutableAddressor()
{
  if (qword_10048C9E0 != -1)
    swift_once(&qword_10048C9E0, sub_1001DCBEC);
  return &static AccessibilityIdentifier.detailHeaderDescriptionLabel;
}

uint64_t static AccessibilityIdentifier.detailHeaderDescriptionLabel.getter()
{
  return sub_1001E5978(&qword_10048C9E0, &static AccessibilityIdentifier.detailHeaderDescriptionLabel);
}

uint64_t sub_1001DCD00()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B61C0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.detailHeaderMore = v3;
  *(_QWORD *)algn_1004A2438 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.detailHeaderMore.unsafeMutableAddressor()
{
  if (qword_10048C9E8 != -1)
    swift_once(&qword_10048C9E8, sub_1001DCD00);
  return &static AccessibilityIdentifier.detailHeaderMore;
}

uint64_t static AccessibilityIdentifier.detailHeaderMore.getter()
{
  return sub_1001E5978(&qword_10048C9E8, &static AccessibilityIdentifier.detailHeaderMore);
}

uint64_t sub_1001DCE14()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B61A0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playIntentButton = v3;
  *(_QWORD *)algn_1004A2448 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor()
{
  if (qword_10048C9F0 != -1)
    swift_once(&qword_10048C9F0, sub_1001DCE14);
  return &static AccessibilityIdentifier.playIntentButton;
}

uint64_t static AccessibilityIdentifier.playIntentButton.getter()
{
  return sub_1001E5978(&qword_10048C9F0, &static AccessibilityIdentifier.playIntentButton);
}

uint64_t sub_1001DCF28()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6180;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.shuffleIntentButton = v3;
  *(_QWORD *)algn_1004A2458 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor()
{
  if (qword_10048C9F8 != -1)
    swift_once(&qword_10048C9F8, sub_1001DCF28);
  return &static AccessibilityIdentifier.shuffleIntentButton;
}

uint64_t static AccessibilityIdentifier.shuffleIntentButton.getter()
{
  return sub_1001E5978(&qword_10048C9F8, &static AccessibilityIdentifier.shuffleIntentButton);
}

uint64_t sub_1001DD03C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6160;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.startSingingIntentButton = v3;
  *(_QWORD *)algn_1004A2468 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor()
{
  if (qword_10048CA00 != -1)
    swift_once(&qword_10048CA00, sub_1001DD03C);
  return &static AccessibilityIdentifier.startSingingIntentButton;
}

uint64_t static AccessibilityIdentifier.startSingingIntentButton.getter()
{
  return sub_1001E5978(&qword_10048CA00, &static AccessibilityIdentifier.startSingingIntentButton);
}

uint64_t sub_1001DD150()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C6C6543676E6F53;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.songCell = v3;
  *(_QWORD *)algn_1004A2478 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.songCell.unsafeMutableAddressor()
{
  if (qword_10048CA08 != -1)
    swift_once(&qword_10048CA08, sub_1001DD150);
  return &static AccessibilityIdentifier.songCell;
}

uint64_t static AccessibilityIdentifier.songCell.getter()
{
  return sub_1001E5978(&qword_10048CA08, &static AccessibilityIdentifier.songCell);
}

uint64_t sub_1001DD260()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x73694C6B63617254;
  v1._object = (void *)0xED00006C6C654374;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCell = v3;
  *(_QWORD *)algn_1004A2488 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCell.unsafeMutableAddressor()
{
  if (qword_10048CA10 != -1)
    swift_once(&qword_10048CA10, sub_1001DD260);
  return &static AccessibilityIdentifier.trackListCell;
}

uint64_t static AccessibilityIdentifier.trackListCell.getter()
{
  return sub_1001E5978(&qword_10048CA10, &static AccessibilityIdentifier.trackListCell);
}

uint64_t sub_1001DD37C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6140;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListEmptyCell = v3;
  *(_QWORD *)algn_1004A2498 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListEmptyCell.unsafeMutableAddressor()
{
  if (qword_10048CA18 != -1)
    swift_once(&qword_10048CA18, sub_1001DD37C);
  return &static AccessibilityIdentifier.trackListEmptyCell;
}

uint64_t static AccessibilityIdentifier.trackListEmptyCell.getter()
{
  return sub_1001E5978(&qword_10048CA18, &static AccessibilityIdentifier.trackListEmptyCell);
}

uint64_t sub_1001DD490()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6120;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellArtwork = v3;
  *(_QWORD *)algn_1004A24A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellArtwork.unsafeMutableAddressor()
{
  if (qword_10048CA20 != -1)
    swift_once(&qword_10048CA20, sub_1001DD490);
  return &static AccessibilityIdentifier.trackListCellArtwork;
}

uint64_t static AccessibilityIdentifier.trackListCellArtwork.getter()
{
  return sub_1001E5978(&qword_10048CA20, &static AccessibilityIdentifier.trackListCellArtwork);
}

uint64_t sub_1001DD5A4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6100;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellFavoriteBadge = v3;
  *(_QWORD *)algn_1004A24B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellFavoriteBadge.unsafeMutableAddressor()
{
  if (qword_10048CA28 != -1)
    swift_once(&qword_10048CA28, sub_1001DD5A4);
  return &static AccessibilityIdentifier.trackListCellFavoriteBadge;
}

uint64_t static AccessibilityIdentifier.trackListCellFavoriteBadge.getter()
{
  return sub_1001E5978(&qword_10048CA28, &static AccessibilityIdentifier.trackListCellFavoriteBadge);
}

uint64_t sub_1001DD6B8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B60E0;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellPopularBadge = v3;
  *(_QWORD *)algn_1004A24C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellPopularBadge.unsafeMutableAddressor()
{
  if (qword_10048CA30 != -1)
    swift_once(&qword_10048CA30, sub_1001DD6B8);
  return &static AccessibilityIdentifier.trackListCellPopularBadge;
}

uint64_t static AccessibilityIdentifier.trackListCellPopularBadge.getter()
{
  return sub_1001E5978(&qword_10048CA30, &static AccessibilityIdentifier.trackListCellPopularBadge);
}

uint64_t sub_1001DD7CC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B60C0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellTrackNumber = v3;
  *(_QWORD *)algn_1004A24D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellTrackNumber.unsafeMutableAddressor()
{
  if (qword_10048CA38 != -1)
    swift_once(&qword_10048CA38, sub_1001DD7CC);
  return &static AccessibilityIdentifier.trackListCellTrackNumber;
}

uint64_t static AccessibilityIdentifier.trackListCellTrackNumber.getter()
{
  return sub_1001E5978(&qword_10048CA38, &static AccessibilityIdentifier.trackListCellTrackNumber);
}

uint64_t sub_1001DD8E0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B60A0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellChartNumber = v3;
  *(_QWORD *)algn_1004A24E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellChartNumber.unsafeMutableAddressor()
{
  if (qword_10048CA40 != -1)
    swift_once(&qword_10048CA40, sub_1001DD8E0);
  return &static AccessibilityIdentifier.trackListCellChartNumber;
}

uint64_t static AccessibilityIdentifier.trackListCellChartNumber.getter()
{
  return sub_1001E5978(&qword_10048CA40, &static AccessibilityIdentifier.trackListCellChartNumber);
}

uint64_t sub_1001DD9F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6080;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellVideoIcon = v3;
  *(_QWORD *)algn_1004A24F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellVideoIcon.unsafeMutableAddressor()
{
  if (qword_10048CA48 != -1)
    swift_once(&qword_10048CA48, sub_1001DD9F4);
  return &static AccessibilityIdentifier.trackListCellVideoIcon;
}

uint64_t static AccessibilityIdentifier.trackListCellVideoIcon.getter()
{
  return sub_1001E5978(&qword_10048CA48, &static AccessibilityIdentifier.trackListCellVideoIcon);
}

uint64_t sub_1001DDB08()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6060;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellTitle = v3;
  *(_QWORD *)algn_1004A2508 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor()
{
  if (qword_10048CA50 != -1)
    swift_once(&qword_10048CA50, sub_1001DDB08);
  return &static AccessibilityIdentifier.trackListCellTitle;
}

uint64_t static AccessibilityIdentifier.trackListCellTitle.getter()
{
  return sub_1001E5978(&qword_10048CA50, &static AccessibilityIdentifier.trackListCellTitle);
}

uint64_t sub_1001DDC1C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6040;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellArtist = v3;
  *(_QWORD *)algn_1004A2518 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor()
{
  if (qword_10048CA58 != -1)
    swift_once(&qword_10048CA58, sub_1001DDC1C);
  return &static AccessibilityIdentifier.trackListCellArtist;
}

uint64_t static AccessibilityIdentifier.trackListCellArtist.getter()
{
  return sub_1001E5978(&qword_10048CA58, &static AccessibilityIdentifier.trackListCellArtist);
}

uint64_t sub_1001DDD30()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6020;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellAlbum = v3;
  *(_QWORD *)algn_1004A2528 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellAlbum.unsafeMutableAddressor()
{
  if (qword_10048CA60 != -1)
    swift_once(&qword_10048CA60, sub_1001DDD30);
  return &static AccessibilityIdentifier.trackListCellAlbum;
}

uint64_t static AccessibilityIdentifier.trackListCellAlbum.getter()
{
  return sub_1001E5978(&qword_10048CA60, &static AccessibilityIdentifier.trackListCellAlbum);
}

uint64_t sub_1001DDE44()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B6000;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.trackListCellDuration = v3;
  *(_QWORD *)algn_1004A2538 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.trackListCellDuration.unsafeMutableAddressor()
{
  if (qword_10048CA68 != -1)
    swift_once(&qword_10048CA68, sub_1001DDE44);
  return &static AccessibilityIdentifier.trackListCellDuration;
}

uint64_t static AccessibilityIdentifier.trackListCellDuration.getter()
{
  return sub_1001E5978(&qword_10048CA68, &static AccessibilityIdentifier.trackListCellDuration);
}

uint64_t sub_1001DDF58()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x64616F6C6E776F44;
  v1._object = (void *)0xEE00737574617453;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.downloadStatus = v3;
  *(_QWORD *)algn_1004A2548 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.downloadStatus.unsafeMutableAddressor()
{
  if (qword_10048CA70 != -1)
    swift_once(&qword_10048CA70, sub_1001DDF58);
  return &static AccessibilityIdentifier.downloadStatus;
}

uint64_t static AccessibilityIdentifier.downloadStatus.getter()
{
  return sub_1001E5978(&qword_10048CA70, &static AccessibilityIdentifier.downloadStatus);
}

uint64_t sub_1001DE074()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5FE0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsStaticView = v3;
  *(_QWORD *)algn_1004A2558 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsStaticView.unsafeMutableAddressor()
{
  if (qword_10048CA78 != -1)
    swift_once(&qword_10048CA78, sub_1001DE074);
  return &static AccessibilityIdentifier.lyricsStaticView;
}

uint64_t static AccessibilityIdentifier.lyricsStaticView.getter()
{
  return sub_1001E5978(&qword_10048CA78, &static AccessibilityIdentifier.lyricsStaticView);
}

uint64_t sub_1001DE188()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5FC0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsSyncedView = v3;
  *(_QWORD *)algn_1004A2568 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsSyncedView.unsafeMutableAddressor()
{
  if (qword_10048CA80 != -1)
    swift_once(&qword_10048CA80, sub_1001DE188);
  return &static AccessibilityIdentifier.lyricsSyncedView;
}

uint64_t static AccessibilityIdentifier.lyricsSyncedView.getter()
{
  return sub_1001E5978(&qword_10048CA80, &static AccessibilityIdentifier.lyricsSyncedView);
}

uint64_t sub_1001DE29C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7474754279616C50;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playButton = v3;
  *(_QWORD *)algn_1004A2578 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playButton.unsafeMutableAddressor()
{
  if (qword_10048CA88 != -1)
    swift_once(&qword_10048CA88, sub_1001DE29C);
  return &static AccessibilityIdentifier.playButton;
}

uint64_t static AccessibilityIdentifier.playButton.getter()
{
  return sub_1001E5978(&qword_10048CA88, &static AccessibilityIdentifier.playButton);
}

uint64_t sub_1001DE3B0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7475426573756150;
  v1._object = (void *)0xEB000000006E6F74;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.pauseButton = v3;
  *(_QWORD *)algn_1004A2588 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.pauseButton.unsafeMutableAddressor()
{
  if (qword_10048CA90 != -1)
    swift_once(&qword_10048CA90, sub_1001DE3B0);
  return &static AccessibilityIdentifier.pauseButton;
}

uint64_t static AccessibilityIdentifier.pauseButton.getter()
{
  return sub_1001E5978(&qword_10048CA90, &static AccessibilityIdentifier.pauseButton);
}

uint64_t sub_1001DE4C8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x74747542706F7453;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.stopButton = v3;
  *(_QWORD *)algn_1004A2598 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.stopButton.unsafeMutableAddressor()
{
  if (qword_10048CA98 != -1)
    swift_once(&qword_10048CA98, sub_1001DE4C8);
  return &static AccessibilityIdentifier.stopButton;
}

uint64_t static AccessibilityIdentifier.stopButton.getter()
{
  return sub_1001E5978(&qword_10048CA98, &static AccessibilityIdentifier.stopButton);
}

uint64_t sub_1001DE5DC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5FA0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.skipForwardButton = v3;
  *(_QWORD *)algn_1004A25A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.skipForwardButton.unsafeMutableAddressor()
{
  if (qword_10048CAA0 != -1)
    swift_once(&qword_10048CAA0, sub_1001DE5DC);
  return &static AccessibilityIdentifier.skipForwardButton;
}

uint64_t static AccessibilityIdentifier.skipForwardButton.getter()
{
  return sub_1001E5978(&qword_10048CAA0, &static AccessibilityIdentifier.skipForwardButton);
}

uint64_t sub_1001DE6F0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5F80;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.skipBackwardButton = v3;
  *(_QWORD *)algn_1004A25B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.skipBackwardButton.unsafeMutableAddressor()
{
  if (qword_10048CAA8 != -1)
    swift_once(&qword_10048CAA8, sub_1001DE6F0);
  return &static AccessibilityIdentifier.skipBackwardButton;
}

uint64_t static AccessibilityIdentifier.skipBackwardButton.getter()
{
  return sub_1001E5978(&qword_10048CAA8, &static AccessibilityIdentifier.skipBackwardButton);
}

uint64_t sub_1001DE804()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x74747542706D754ALL;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.jumpButton = v3;
  *(_QWORD *)algn_1004A25C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.jumpButton.unsafeMutableAddressor()
{
  if (qword_10048CAB0 != -1)
    swift_once(&qword_10048CAB0, sub_1001DE804);
  return &static AccessibilityIdentifier.jumpButton;
}

uint64_t static AccessibilityIdentifier.jumpButton.getter()
{
  return sub_1001E5978(&qword_10048CAB0, &static AccessibilityIdentifier.jumpButton);
}

uint64_t sub_1001DE918()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x547972617262694CLL;
  v1._object = (void *)0xEA00000000006261;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTab = v3;
  *(_QWORD *)algn_1004A25D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTab.unsafeMutableAddressor()
{
  if (qword_10048CAB8 != -1)
    swift_once(&qword_10048CAB8, sub_1001DE918);
  return &static AccessibilityIdentifier.libraryTab;
}

uint64_t static AccessibilityIdentifier.libraryTab.getter()
{
  return sub_1001E5978(&qword_10048CAB8, &static AccessibilityIdentifier.libraryTab);
}

uint64_t sub_1001DEA2C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6F4E6E657473694CLL;
  v1._object = (void *)0xEC00000062615477;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.listenNowTab = v3;
  *(_QWORD *)algn_1004A25E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.listenNowTab.unsafeMutableAddressor()
{
  if (qword_10048CAC0 != -1)
    swift_once(&qword_10048CAC0, sub_1001DEA2C);
  return &static AccessibilityIdentifier.listenNowTab;
}

uint64_t static AccessibilityIdentifier.listenNowTab.getter()
{
  return sub_1001E5978(&qword_10048CAC0, &static AccessibilityIdentifier.listenNowTab);
}

uint64_t sub_1001DEB44()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x61546573776F7242;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.browseTab = v3;
  *(_QWORD *)algn_1004A25F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.browseTab.unsafeMutableAddressor()
{
  if (qword_10048CAC8 != -1)
    swift_once(&qword_10048CAC8, sub_1001DEB44);
  return &static AccessibilityIdentifier.browseTab;
}

uint64_t static AccessibilityIdentifier.browseTab.getter()
{
  return sub_1001E5978(&qword_10048CAC8, &static AccessibilityIdentifier.browseTab);
}

uint64_t sub_1001DEC58()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6261546F69646152;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.radioTab = v3;
  *(_QWORD *)algn_1004A2608 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.radioTab.unsafeMutableAddressor()
{
  if (qword_10048CAD0 != -1)
    swift_once(&qword_10048CAD0, sub_1001DEC58);
  return &static AccessibilityIdentifier.radioTab;
}

uint64_t static AccessibilityIdentifier.radioTab.getter()
{
  return sub_1001E5978(&qword_10048CAD0, &static AccessibilityIdentifier.radioTab);
}

uint64_t sub_1001DED68()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6154686372616553;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.searchTab = v3;
  *(_QWORD *)algn_1004A2618 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.searchTab.unsafeMutableAddressor()
{
  if (qword_10048CAD8 != -1)
    swift_once(&qword_10048CAD8, sub_1001DED68);
  return &static AccessibilityIdentifier.searchTab;
}

uint64_t static AccessibilityIdentifier.searchTab.getter()
{
  return sub_1001E5978(&qword_10048CAD8, &static AccessibilityIdentifier.searchTab);
}

uint64_t sub_1001DEE7C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6154736F65646956;
  v1._object = (void *)0xE900000000000062;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.videosTab = v3;
  *(_QWORD *)algn_1004A2628 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.videosTab.unsafeMutableAddressor()
{
  if (qword_10048CAE0 != -1)
    swift_once(&qword_10048CAE0, sub_1001DEE7C);
  return &static AccessibilityIdentifier.videosTab;
}

uint64_t static AccessibilityIdentifier.videosTab.getter()
{
  return sub_1001E5978(&qword_10048CAE0, &static AccessibilityIdentifier.videosTab);
}

uint64_t sub_1001DEF90()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5F60;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeader = v3;
  *(_QWORD *)algn_1004A2638 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeader.unsafeMutableAddressor()
{
  if (qword_10048CAE8 != -1)
    swift_once(&qword_10048CAE8, sub_1001DEF90);
  return &static AccessibilityIdentifier.containerDetailHeader;
}

uint64_t static AccessibilityIdentifier.containerDetailHeader.getter()
{
  return sub_1001E5978(&qword_10048CAE8, &static AccessibilityIdentifier.containerDetailHeader);
}

uint64_t sub_1001DF0A4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5F40;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderArtwork = v3;
  *(_QWORD *)algn_1004A2648 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_10048CAF0 != -1)
    swift_once(&qword_10048CAF0, sub_1001DF0A4);
  return &static AccessibilityIdentifier.containerDetailHeaderArtwork;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderArtwork.getter()
{
  return sub_1001E5978(&qword_10048CAF0, &static AccessibilityIdentifier.containerDetailHeaderArtwork);
}

uint64_t sub_1001DF1B8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5F20;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderTitle = v3;
  *(_QWORD *)algn_1004A2658 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderTitle.unsafeMutableAddressor()
{
  if (qword_10048CAF8 != -1)
    swift_once(&qword_10048CAF8, sub_1001DF1B8);
  return &static AccessibilityIdentifier.containerDetailHeaderTitle;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderTitle.getter()
{
  return sub_1001E5978(&qword_10048CAF8, &static AccessibilityIdentifier.containerDetailHeaderTitle);
}

uint64_t sub_1001DF2CC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5EF0;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderAttribution = v3;
  *(_QWORD *)algn_1004A2668 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderAttribution.unsafeMutableAddressor()
{
  if (qword_10048CB00 != -1)
    swift_once(&qword_10048CB00, sub_1001DF2CC);
  return &static AccessibilityIdentifier.containerDetailHeaderAttribution;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderAttribution.getter()
{
  return sub_1001E5978(&qword_10048CB00, &static AccessibilityIdentifier.containerDetailHeaderAttribution);
}

uint64_t sub_1001DF3E0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5ED0;
  v1._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderMetadata = v3;
  *(_QWORD *)algn_1004A2678 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderMetadata.unsafeMutableAddressor()
{
  if (qword_10048CB08 != -1)
    swift_once(&qword_10048CB08, sub_1001DF3E0);
  return &static AccessibilityIdentifier.containerDetailHeaderMetadata;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderMetadata.getter()
{
  return sub_1001E5978(&qword_10048CB08, &static AccessibilityIdentifier.containerDetailHeaderMetadata);
}

uint64_t sub_1001DF4F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5EA0;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailHeaderDescription = v3;
  *(_QWORD *)algn_1004A2688 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailHeaderDescription.unsafeMutableAddressor()
{
  if (qword_10048CB10 != -1)
    swift_once(&qword_10048CB10, sub_1001DF4F4);
  return &static AccessibilityIdentifier.containerDetailHeaderDescription;
}

uint64_t static AccessibilityIdentifier.containerDetailHeaderDescription.getter()
{
  return sub_1001E5978(&qword_10048CB10, &static AccessibilityIdentifier.containerDetailHeaderDescription);
}

uint64_t sub_1001DF608()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5E70;
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailContextualActionsButton = v3;
  *(_QWORD *)algn_1004A2698 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailContextualActionsButton.unsafeMutableAddressor()
{
  if (qword_10048CB18 != -1)
    swift_once(&qword_10048CB18, sub_1001DF608);
  return &static AccessibilityIdentifier.containerDetailContextualActionsButton;
}

uint64_t static AccessibilityIdentifier.containerDetailContextualActionsButton.getter()
{
  return sub_1001E5978(&qword_10048CB18, &static AccessibilityIdentifier.containerDetailContextualActionsButton);
}

uint64_t sub_1001DF71C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5E40;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailFloatingArtwork = v3;
  *(_QWORD *)algn_1004A26A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailFloatingArtwork.unsafeMutableAddressor()
{
  if (qword_10048CB20 != -1)
    swift_once(&qword_10048CB20, sub_1001DF71C);
  return &static AccessibilityIdentifier.containerDetailFloatingArtwork;
}

uint64_t static AccessibilityIdentifier.containerDetailFloatingArtwork.getter()
{
  return sub_1001E5978(&qword_10048CB20, &static AccessibilityIdentifier.containerDetailFloatingArtwork);
}

uint64_t sub_1001DF830()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5E20;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailStateButton = v3;
  *(_QWORD *)algn_1004A26B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailStateButton.unsafeMutableAddressor()
{
  if (qword_10048CB28 != -1)
    swift_once(&qword_10048CB28, sub_1001DF830);
  return &static AccessibilityIdentifier.containerDetailStateButton;
}

uint64_t static AccessibilityIdentifier.containerDetailStateButton.getter()
{
  return sub_1001E5978(&qword_10048CB28, &static AccessibilityIdentifier.containerDetailStateButton);
}

uint64_t sub_1001DF944()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5E00;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailAddButton = v3;
  *(_QWORD *)algn_1004A26C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailAddButton.unsafeMutableAddressor()
{
  if (qword_10048CB30 != -1)
    swift_once(&qword_10048CB30, sub_1001DF944);
  return &static AccessibilityIdentifier.containerDetailAddButton;
}

uint64_t static AccessibilityIdentifier.containerDetailAddButton.getter()
{
  return sub_1001E5978(&qword_10048CB30, &static AccessibilityIdentifier.containerDetailAddButton);
}

uint64_t sub_1001DFA58()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5DE0;
  v1._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadButton = v3;
  *(_QWORD *)algn_1004A26D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadButton.unsafeMutableAddressor()
{
  if (qword_10048CB38 != -1)
    swift_once(&qword_10048CB38, sub_1001DFA58);
  return &static AccessibilityIdentifier.containerDetailDownloadButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadButton.getter()
{
  return sub_1001E5978(&qword_10048CB38, &static AccessibilityIdentifier.containerDetailDownloadButton);
}

uint64_t sub_1001DFB6C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5DB0;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadQueuedButton = v3;
  *(_QWORD *)algn_1004A26E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadQueuedButton.unsafeMutableAddressor()
{
  if (qword_10048CB40 != -1)
    swift_once(&qword_10048CB40, sub_1001DFB6C);
  return &static AccessibilityIdentifier.containerDetailDownloadQueuedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadQueuedButton.getter()
{
  return sub_1001E5978(&qword_10048CB40, &static AccessibilityIdentifier.containerDetailDownloadQueuedButton);
}

uint64_t sub_1001DFC80()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5D80;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadPausedButton = v3;
  *(_QWORD *)algn_1004A26F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadPausedButton.unsafeMutableAddressor()
{
  if (qword_10048CB48 != -1)
    swift_once(&qword_10048CB48, sub_1001DFC80);
  return &static AccessibilityIdentifier.containerDetailDownloadPausedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadPausedButton.getter()
{
  return sub_1001E5978(&qword_10048CB48, &static AccessibilityIdentifier.containerDetailDownloadPausedButton);
}

uint64_t sub_1001DFD94()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5D50;
  v1._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadingButton = v3;
  *(_QWORD *)algn_1004A2708 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadingButton.unsafeMutableAddressor()
{
  if (qword_10048CB50 != -1)
    swift_once(&qword_10048CB50, sub_1001DFD94);
  return &static AccessibilityIdentifier.containerDetailDownloadingButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadingButton.getter()
{
  return sub_1001E5978(&qword_10048CB50, &static AccessibilityIdentifier.containerDetailDownloadingButton);
}

uint64_t sub_1001DFEA8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5D20;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailDownloadedButton = v3;
  *(_QWORD *)algn_1004A2718 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailDownloadedButton.unsafeMutableAddressor()
{
  if (qword_10048CB58 != -1)
    swift_once(&qword_10048CB58, sub_1001DFEA8);
  return &static AccessibilityIdentifier.containerDetailDownloadedButton;
}

uint64_t static AccessibilityIdentifier.containerDetailDownloadedButton.getter()
{
  return sub_1001E5978(&qword_10048CB58, &static AccessibilityIdentifier.containerDetailDownloadedButton);
}

uint64_t sub_1001DFFBC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5CF0;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.containerDetailNavigationBackButton = v3;
  *(_QWORD *)algn_1004A2728 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.containerDetailNavigationBackButton.unsafeMutableAddressor()
{
  if (qword_10048CB60 != -1)
    swift_once(&qword_10048CB60, sub_1001DFFBC);
  return &static AccessibilityIdentifier.containerDetailNavigationBackButton;
}

uint64_t static AccessibilityIdentifier.containerDetailNavigationBackButton.getter()
{
  return sub_1001E5978(&qword_10048CB60, &static AccessibilityIdentifier.containerDetailNavigationBackButton);
}

uint64_t sub_1001E00D0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5CC0;
  v1._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.albumDetailOpenInClassicalButton = v3;
  *(_QWORD *)algn_1004A2738 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.albumDetailOpenInClassicalButton.unsafeMutableAddressor()
{
  if (qword_10048CB68 != -1)
    swift_once(&qword_10048CB68, sub_1001E00D0);
  return &static AccessibilityIdentifier.albumDetailOpenInClassicalButton;
}

uint64_t static AccessibilityIdentifier.albumDetailOpenInClassicalButton.getter()
{
  return sub_1001E5978(&qword_10048CB68, &static AccessibilityIdentifier.albumDetailOpenInClassicalButton);
}

uint64_t sub_1001E01E4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5C90;
  v1._countAndFlagsBits = 0xD000000000000023;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistDetailCollaborationControl = v3;
  *(_QWORD *)algn_1004A2748 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistDetailCollaborationControl.unsafeMutableAddressor()
{
  if (qword_10048CB70 != -1)
    swift_once(&qword_10048CB70, sub_1001E01E4);
  return &static AccessibilityIdentifier.playlistDetailCollaborationControl;
}

uint64_t static AccessibilityIdentifier.playlistDetailCollaborationControl.getter()
{
  return sub_1001E5978(&qword_10048CB70, &static AccessibilityIdentifier.playlistDetailCollaborationControl);
}

uint64_t sub_1001E02F8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5C70;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCell = v3;
  *(_QWORD *)algn_1004A2758 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCell.unsafeMutableAddressor()
{
  if (qword_10048CB78 != -1)
    swift_once(&qword_10048CB78, sub_1001E02F8);
  return &static AccessibilityIdentifier.libraryListCell;
}

uint64_t static AccessibilityIdentifier.libraryListCell.getter()
{
  return sub_1001E5978(&qword_10048CB78, &static AccessibilityIdentifier.libraryListCell);
}

uint64_t sub_1001E040C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5C50;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellArtwork = v3;
  *(_QWORD *)algn_1004A2768 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellArtwork.unsafeMutableAddressor()
{
  if (qword_10048CB80 != -1)
    swift_once(&qword_10048CB80, sub_1001E040C);
  return &static AccessibilityIdentifier.libraryListCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryListCellArtwork.getter()
{
  return sub_1001E5978(&qword_10048CB80, &static AccessibilityIdentifier.libraryListCellArtwork);
}

uint64_t sub_1001E0520()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5C30;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellTitle = v3;
  *(_QWORD *)algn_1004A2778 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellTitle.unsafeMutableAddressor()
{
  if (qword_10048CB88 != -1)
    swift_once(&qword_10048CB88, sub_1001E0520);
  return &static AccessibilityIdentifier.libraryListCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryListCellTitle.getter()
{
  return sub_1001E5978(&qword_10048CB88, &static AccessibilityIdentifier.libraryListCellTitle);
}

uint64_t sub_1001E0634()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5C10;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryListCellSubtitle = v3;
  *(_QWORD *)algn_1004A2788 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryListCellSubtitle.unsafeMutableAddressor()
{
  if (qword_10048CB90 != -1)
    swift_once(&qword_10048CB90, sub_1001E0634);
  return &static AccessibilityIdentifier.libraryListCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryListCellSubtitle.getter()
{
  return sub_1001E5978(&qword_10048CB90, &static AccessibilityIdentifier.libraryListCellSubtitle);
}

uint64_t sub_1001E0748()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5BF0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCell = v3;
  *(_QWORD *)algn_1004A2798 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCell.unsafeMutableAddressor()
{
  if (qword_10048CB98 != -1)
    swift_once(&qword_10048CB98, sub_1001E0748);
  return &static AccessibilityIdentifier.libraryGridCell;
}

uint64_t static AccessibilityIdentifier.libraryGridCell.getter()
{
  return sub_1001E5978(&qword_10048CB98, &static AccessibilityIdentifier.libraryGridCell);
}

uint64_t sub_1001E085C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5BD0;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellArtwork = v3;
  *(_QWORD *)algn_1004A27A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellArtwork.unsafeMutableAddressor()
{
  if (qword_10048CBA0 != -1)
    swift_once(&qword_10048CBA0, sub_1001E085C);
  return &static AccessibilityIdentifier.libraryGridCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryGridCellArtwork.getter()
{
  return sub_1001E5978(&qword_10048CBA0, &static AccessibilityIdentifier.libraryGridCellArtwork);
}

uint64_t sub_1001E0970()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5BB0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellTitle = v3;
  *(_QWORD *)algn_1004A27B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellTitle.unsafeMutableAddressor()
{
  if (qword_10048CBA8 != -1)
    swift_once(&qword_10048CBA8, sub_1001E0970);
  return &static AccessibilityIdentifier.libraryGridCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryGridCellTitle.getter()
{
  return sub_1001E5978(&qword_10048CBA8, &static AccessibilityIdentifier.libraryGridCellTitle);
}

uint64_t sub_1001E0A84()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5B90;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGridCellSubtitle = v3;
  *(_QWORD *)algn_1004A27C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGridCellSubtitle.unsafeMutableAddressor()
{
  if (qword_10048CBB0 != -1)
    swift_once(&qword_10048CBB0, sub_1001E0A84);
  return &static AccessibilityIdentifier.libraryGridCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryGridCellSubtitle.getter()
{
  return sub_1001E5978(&qword_10048CBB0, &static AccessibilityIdentifier.libraryGridCellSubtitle);
}

uint64_t sub_1001E0B98()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5B70;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryContextMenuButton = v3;
  *(_QWORD *)algn_1004A27D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryContextMenuButton.unsafeMutableAddressor()
{
  if (qword_10048CBB8 != -1)
    swift_once(&qword_10048CBB8, sub_1001E0B98);
  return &static AccessibilityIdentifier.libraryContextMenuButton;
}

uint64_t static AccessibilityIdentifier.libraryContextMenuButton.getter()
{
  return sub_1001E5978(&qword_10048CBB8, &static AccessibilityIdentifier.libraryContextMenuButton);
}

uint64_t sub_1001E0CAC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5B50;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFilterOptionsButton = v3;
  *(_QWORD *)algn_1004A27E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFilterOptionsButton.unsafeMutableAddressor()
{
  if (qword_10048CBC0 != -1)
    swift_once(&qword_10048CBC0, sub_1001E0CAC);
  return &static AccessibilityIdentifier.libraryFilterOptionsButton;
}

uint64_t static AccessibilityIdentifier.libraryFilterOptionsButton.getter()
{
  return sub_1001E5978(&qword_10048CBC0, &static AccessibilityIdentifier.libraryFilterOptionsButton);
}

uint64_t sub_1001E0DC0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5B30;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFilterMenu = v3;
  *(_QWORD *)algn_1004A27F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFilterMenu.unsafeMutableAddressor()
{
  if (qword_10048CBC8 != -1)
    swift_once(&qword_10048CBC8, sub_1001E0DC0);
  return &static AccessibilityIdentifier.libraryFilterMenu;
}

uint64_t static AccessibilityIdentifier.libraryFilterMenu.getter()
{
  return sub_1001E5978(&qword_10048CBC8, &static AccessibilityIdentifier.libraryFilterMenu);
}

uint64_t sub_1001E0ED4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5B10;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.librarySortOptionsButton = v3;
  *(_QWORD *)algn_1004A2808 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.librarySortOptionsButton.unsafeMutableAddressor()
{
  if (qword_10048CBD0 != -1)
    swift_once(&qword_10048CBD0, sub_1001E0ED4);
  return &static AccessibilityIdentifier.librarySortOptionsButton;
}

uint64_t static AccessibilityIdentifier.librarySortOptionsButton.getter()
{
  return sub_1001E5978(&qword_10048CBD0, &static AccessibilityIdentifier.librarySortOptionsButton);
}

uint64_t sub_1001E0FE8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5AF0;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCell = v3;
  *(_QWORD *)algn_1004A2818 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCell.unsafeMutableAddressor()
{
  if (qword_10048CBD8 != -1)
    swift_once(&qword_10048CBD8, sub_1001E0FE8);
  return &static AccessibilityIdentifier.libraryTrackCell;
}

uint64_t static AccessibilityIdentifier.libraryTrackCell.getter()
{
  return sub_1001E5978(&qword_10048CBD8, &static AccessibilityIdentifier.libraryTrackCell);
}

uint64_t sub_1001E10FC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5AD0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellArtwork = v3;
  *(_QWORD *)algn_1004A2828 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellArtwork.unsafeMutableAddressor()
{
  if (qword_10048CBE0 != -1)
    swift_once(&qword_10048CBE0, sub_1001E10FC);
  return &static AccessibilityIdentifier.libraryTrackCellArtwork;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellArtwork.getter()
{
  return sub_1001E5978(&qword_10048CBE0, &static AccessibilityIdentifier.libraryTrackCellArtwork);
}

uint64_t sub_1001E1210()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5AB0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellTitle = v3;
  *(_QWORD *)algn_1004A2838 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellTitle.unsafeMutableAddressor()
{
  if (qword_10048CBE8 != -1)
    swift_once(&qword_10048CBE8, sub_1001E1210);
  return &static AccessibilityIdentifier.libraryTrackCellTitle;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellTitle.getter()
{
  return sub_1001E5978(&qword_10048CBE8, &static AccessibilityIdentifier.libraryTrackCellTitle);
}

uint64_t sub_1001E1324()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5A90;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellSubtitle = v3;
  *(_QWORD *)algn_1004A2848 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellSubtitle.unsafeMutableAddressor()
{
  if (qword_10048CBF0 != -1)
    swift_once(&qword_10048CBF0, sub_1001E1324);
  return &static AccessibilityIdentifier.libraryTrackCellSubtitle;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellSubtitle.getter()
{
  return sub_1001E5978(&qword_10048CBF0, &static AccessibilityIdentifier.libraryTrackCellSubtitle);
}

uint64_t sub_1001E1438()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5A70;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellDetailText = v3;
  *(_QWORD *)algn_1004A2858 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellDetailText.unsafeMutableAddressor()
{
  if (qword_10048CBF8 != -1)
    swift_once(&qword_10048CBF8, sub_1001E1438);
  return &static AccessibilityIdentifier.libraryTrackCellDetailText;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellDetailText.getter()
{
  return sub_1001E5978(&qword_10048CBF8, &static AccessibilityIdentifier.libraryTrackCellDetailText);
}

uint64_t sub_1001E154C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5A50;
  v1._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTrackCellDuration = v3;
  *(_QWORD *)algn_1004A2868 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTrackCellDuration.unsafeMutableAddressor()
{
  if (qword_10048CC00 != -1)
    swift_once(&qword_10048CC00, sub_1001E154C);
  return &static AccessibilityIdentifier.libraryTrackCellDuration;
}

uint64_t static AccessibilityIdentifier.libraryTrackCellDuration.getter()
{
  return sub_1001E5978(&qword_10048CC00, &static AccessibilityIdentifier.libraryTrackCellDuration);
}

uint64_t sub_1001E1660()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5A30;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTextCell = v3;
  *(_QWORD *)algn_1004A2878 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTextCell.unsafeMutableAddressor()
{
  if (qword_10048CC08 != -1)
    swift_once(&qword_10048CC08, sub_1001E1660);
  return &static AccessibilityIdentifier.libraryTextCell;
}

uint64_t static AccessibilityIdentifier.libraryTextCell.getter()
{
  return sub_1001E5978(&qword_10048CC08, &static AccessibilityIdentifier.libraryTextCell);
}

uint64_t sub_1001E1774()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5A10;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryFavoriteBadge = v3;
  *(_QWORD *)algn_1004A2888 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryFavoriteBadge.unsafeMutableAddressor()
{
  if (qword_10048CC10 != -1)
    swift_once(&qword_10048CC10, sub_1001E1774);
  return &static AccessibilityIdentifier.libraryFavoriteBadge;
}

uint64_t static AccessibilityIdentifier.libraryFavoriteBadge.getter()
{
  return sub_1001E5978(&qword_10048CC10, &static AccessibilityIdentifier.libraryFavoriteBadge);
}

uint64_t sub_1001E1888()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B59F0;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMenuView = v3;
  *(_QWORD *)algn_1004A2898 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMenuView.unsafeMutableAddressor()
{
  if (qword_10048CC18 != -1)
    swift_once(&qword_10048CC18, sub_1001E1888);
  return &static AccessibilityIdentifier.libraryMenuView;
}

uint64_t static AccessibilityIdentifier.libraryMenuView.getter()
{
  return sub_1001E5978(&qword_10048CC18, &static AccessibilityIdentifier.libraryMenuView);
}

uint64_t sub_1001E199C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B59D0;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryContentView = v3;
  *(_QWORD *)algn_1004A28A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryContentView.unsafeMutableAddressor()
{
  if (qword_10048CC20 != -1)
    swift_once(&qword_10048CC20, sub_1001E199C);
  return &static AccessibilityIdentifier.libraryContentView;
}

uint64_t static AccessibilityIdentifier.libraryContentView.getter()
{
  return sub_1001E5978(&qword_10048CC20, &static AccessibilityIdentifier.libraryContentView);
}

uint64_t sub_1001E1AB0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x567972617262694CLL;
  v1._object = (void *)0xEB00000000776569;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryView = v3;
  *(_QWORD *)algn_1004A28B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryView.unsafeMutableAddressor()
{
  if (qword_10048CC28 != -1)
    swift_once(&qword_10048CC28, sub_1001E1AB0);
  return &static AccessibilityIdentifier.libraryView;
}

uint64_t static AccessibilityIdentifier.libraryView.getter()
{
  return sub_1001E5978(&qword_10048CC28, &static AccessibilityIdentifier.libraryView);
}

uint64_t sub_1001E1BC8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B59B0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryRecentlyAddedView = v3;
  *(_QWORD *)algn_1004A28C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryRecentlyAddedView.unsafeMutableAddressor()
{
  if (qword_10048CC30 != -1)
    swift_once(&qword_10048CC30, sub_1001E1BC8);
  return &static AccessibilityIdentifier.libraryRecentlyAddedView;
}

uint64_t static AccessibilityIdentifier.libraryRecentlyAddedView.getter()
{
  return sub_1001E5978(&qword_10048CC30, &static AccessibilityIdentifier.libraryRecentlyAddedView);
}

uint64_t sub_1001E1CDC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5990;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryArtistsListView = v3;
  *(_QWORD *)algn_1004A28D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryArtistsListView.unsafeMutableAddressor()
{
  if (qword_10048CC38 != -1)
    swift_once(&qword_10048CC38, sub_1001E1CDC);
  return &static AccessibilityIdentifier.libraryArtistsListView;
}

uint64_t static AccessibilityIdentifier.libraryArtistsListView.getter()
{
  return sub_1001E5978(&qword_10048CC38, &static AccessibilityIdentifier.libraryArtistsListView);
}

uint64_t sub_1001E1DF0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5960;
  v1._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryArtistsDetailView = v3;
  *(_QWORD *)algn_1004A28E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryArtistsDetailView.unsafeMutableAddressor()
{
  if (qword_10048CC40 != -1)
    swift_once(&qword_10048CC40, sub_1001E1DF0);
  return &static AccessibilityIdentifier.libraryArtistsDetailView;
}

uint64_t static AccessibilityIdentifier.libraryArtistsDetailView.getter()
{
  return sub_1001E5978(&qword_10048CC40, &static AccessibilityIdentifier.libraryArtistsDetailView);
}

uint64_t sub_1001E1F04()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5940;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryAlbumsView = v3;
  *(_QWORD *)algn_1004A28F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryAlbumsView.unsafeMutableAddressor()
{
  if (qword_10048CC48 != -1)
    swift_once(&qword_10048CC48, sub_1001E1F04);
  return &static AccessibilityIdentifier.libraryAlbumsView;
}

uint64_t static AccessibilityIdentifier.libraryAlbumsView.getter()
{
  return sub_1001E5978(&qword_10048CC48, &static AccessibilityIdentifier.libraryAlbumsView);
}

uint64_t sub_1001E2018()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5920;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryComposersView = v3;
  *(_QWORD *)algn_1004A2908 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryComposersView.unsafeMutableAddressor()
{
  if (qword_10048CC50 != -1)
    swift_once(&qword_10048CC50, sub_1001E2018);
  return &static AccessibilityIdentifier.libraryComposersView;
}

uint64_t static AccessibilityIdentifier.libraryComposersView.getter()
{
  return sub_1001E5978(&qword_10048CC50, &static AccessibilityIdentifier.libraryComposersView);
}

uint64_t sub_1001E212C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5900;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryCompilationsView = v3;
  *(_QWORD *)algn_1004A2918 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryCompilationsView.unsafeMutableAddressor()
{
  if (qword_10048CC58 != -1)
    swift_once(&qword_10048CC58, sub_1001E212C);
  return &static AccessibilityIdentifier.libraryCompilationsView;
}

uint64_t static AccessibilityIdentifier.libraryCompilationsView.getter()
{
  return sub_1001E5978(&qword_10048CC58, &static AccessibilityIdentifier.libraryCompilationsView);
}

uint64_t sub_1001E2240()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B58E0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryDownloadedView = v3;
  *(_QWORD *)algn_1004A2928 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryDownloadedView.unsafeMutableAddressor()
{
  if (qword_10048CC60 != -1)
    swift_once(&qword_10048CC60, sub_1001E2240);
  return &static AccessibilityIdentifier.libraryDownloadedView;
}

uint64_t static AccessibilityIdentifier.libraryDownloadedView.getter()
{
  return sub_1001E5978(&qword_10048CC60, &static AccessibilityIdentifier.libraryDownloadedView);
}

uint64_t sub_1001E2354()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B58C0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryDownloadingView = v3;
  *(_QWORD *)algn_1004A2938 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryDownloadingView.unsafeMutableAddressor()
{
  if (qword_10048CC68 != -1)
    swift_once(&qword_10048CC68, sub_1001E2354);
  return &static AccessibilityIdentifier.libraryDownloadingView;
}

uint64_t static AccessibilityIdentifier.libraryDownloadingView.getter()
{
  return sub_1001E5978(&qword_10048CC68, &static AccessibilityIdentifier.libraryDownloadingView);
}

uint64_t sub_1001E2468()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B58A0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryHomeSharingView = v3;
  *(_QWORD *)algn_1004A2948 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryHomeSharingView.unsafeMutableAddressor()
{
  if (qword_10048CC70 != -1)
    swift_once(&qword_10048CC70, sub_1001E2468);
  return &static AccessibilityIdentifier.libraryHomeSharingView;
}

uint64_t static AccessibilityIdentifier.libraryHomeSharingView.getter()
{
  return sub_1001E5978(&qword_10048CC70, &static AccessibilityIdentifier.libraryHomeSharingView);
}

uint64_t sub_1001E257C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5880;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryGenresView = v3;
  *(_QWORD *)algn_1004A2958 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryGenresView.unsafeMutableAddressor()
{
  if (qword_10048CC78 != -1)
    swift_once(&qword_10048CC78, sub_1001E257C);
  return &static AccessibilityIdentifier.libraryGenresView;
}

uint64_t static AccessibilityIdentifier.libraryGenresView.getter()
{
  return sub_1001E5978(&qword_10048CC78, &static AccessibilityIdentifier.libraryGenresView);
}

uint64_t sub_1001E2690()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5860;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMadeForYouView = v3;
  *(_QWORD *)algn_1004A2968 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMadeForYouView.unsafeMutableAddressor()
{
  if (qword_10048CC80 != -1)
    swift_once(&qword_10048CC80, sub_1001E2690);
  return &static AccessibilityIdentifier.libraryMadeForYouView;
}

uint64_t static AccessibilityIdentifier.libraryMadeForYouView.getter()
{
  return sub_1001E5978(&qword_10048CC80, &static AccessibilityIdentifier.libraryMadeForYouView);
}

uint64_t sub_1001E27A4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5840;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryMusicVideosView = v3;
  *(_QWORD *)algn_1004A2978 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryMusicVideosView.unsafeMutableAddressor()
{
  if (qword_10048CC88 != -1)
    swift_once(&qword_10048CC88, sub_1001E27A4);
  return &static AccessibilityIdentifier.libraryMusicVideosView;
}

uint64_t static AccessibilityIdentifier.libraryMusicVideosView.getter()
{
  return sub_1001E5978(&qword_10048CC88, &static AccessibilityIdentifier.libraryMusicVideosView);
}

uint64_t sub_1001E28B8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5820;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryPlaylistsView = v3;
  *(_QWORD *)algn_1004A2988 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryPlaylistsView.unsafeMutableAddressor()
{
  if (qword_10048CC90 != -1)
    swift_once(&qword_10048CC90, sub_1001E28B8);
  return &static AccessibilityIdentifier.libraryPlaylistsView;
}

uint64_t static AccessibilityIdentifier.libraryPlaylistsView.getter()
{
  return sub_1001E5978(&qword_10048CC90, &static AccessibilityIdentifier.libraryPlaylistsView);
}

uint64_t sub_1001E29CC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5800;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.librarySongsView = v3;
  *(_QWORD *)algn_1004A2998 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.librarySongsView.unsafeMutableAddressor()
{
  if (qword_10048CC98 != -1)
    swift_once(&qword_10048CC98, sub_1001E29CC);
  return &static AccessibilityIdentifier.librarySongsView;
}

uint64_t static AccessibilityIdentifier.librarySongsView.getter()
{
  return sub_1001E5978(&qword_10048CC98, &static AccessibilityIdentifier.librarySongsView);
}

uint64_t sub_1001E2AE0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B57E0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTVAndMoviesView = v3;
  *(_QWORD *)algn_1004A29A8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTVAndMoviesView.unsafeMutableAddressor()
{
  if (qword_10048CCA0 != -1)
    swift_once(&qword_10048CCA0, sub_1001E2AE0);
  return &static AccessibilityIdentifier.libraryTVAndMoviesView;
}

uint64_t static AccessibilityIdentifier.libraryTVAndMoviesView.getter()
{
  return sub_1001E5978(&qword_10048CCA0, &static AccessibilityIdentifier.libraryTVAndMoviesView);
}

uint64_t sub_1001E2BF4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B57C0;
  v1._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.libraryTVEpisodesView = v3;
  *(_QWORD *)algn_1004A29B8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.libraryTVEpisodesView.unsafeMutableAddressor()
{
  if (qword_10048CCA8 != -1)
    swift_once(&qword_10048CCA8, sub_1001E2BF4);
  return &static AccessibilityIdentifier.libraryTVEpisodesView;
}

uint64_t static AccessibilityIdentifier.libraryTVEpisodesView.getter()
{
  return sub_1001E5978(&qword_10048CCA8, &static AccessibilityIdentifier.libraryTVEpisodesView);
}

uint64_t sub_1001E2D08()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B57A0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.listenNowContentView = v3;
  *(_QWORD *)algn_1004A29C8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.listenNowContentView.unsafeMutableAddressor()
{
  if (qword_10048CCB0 != -1)
    swift_once(&qword_10048CCB0, sub_1001E2D08);
  return &static AccessibilityIdentifier.listenNowContentView;
}

uint64_t static AccessibilityIdentifier.listenNowContentView.getter()
{
  return sub_1001E5978(&qword_10048CCB0, &static AccessibilityIdentifier.listenNowContentView);
}

uint64_t sub_1001E2E1C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5780;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.browseContentView = v3;
  *(_QWORD *)algn_1004A29D8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.browseContentView.unsafeMutableAddressor()
{
  if (qword_10048CCB8 != -1)
    swift_once(&qword_10048CCB8, sub_1001E2E1C);
  return &static AccessibilityIdentifier.browseContentView;
}

uint64_t static AccessibilityIdentifier.browseContentView.getter()
{
  return sub_1001E5978(&qword_10048CCB8, &static AccessibilityIdentifier.browseContentView);
}

uint64_t sub_1001E2F30()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5760;
  v1._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.radioContentView = v3;
  *(_QWORD *)algn_1004A29E8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.radioContentView.unsafeMutableAddressor()
{
  if (qword_10048CCC0 != -1)
    swift_once(&qword_10048CCC0, sub_1001E2F30);
  return &static AccessibilityIdentifier.radioContentView;
}

uint64_t static AccessibilityIdentifier.radioContentView.getter()
{
  return sub_1001E5978(&qword_10048CCC0, &static AccessibilityIdentifier.radioContentView);
}

uint64_t sub_1001E3044()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5740;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.searchContentView = v3;
  *(_QWORD *)algn_1004A29F8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.searchContentView.unsafeMutableAddressor()
{
  if (qword_10048CCC8 != -1)
    swift_once(&qword_10048CCC8, sub_1001E3044);
  return &static AccessibilityIdentifier.searchContentView;
}

uint64_t static AccessibilityIdentifier.searchContentView.getter()
{
  return sub_1001E5978(&qword_10048CCC8, &static AccessibilityIdentifier.searchContentView);
}

uint64_t sub_1001E3158()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5720;
  v1._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.videosContentView = v3;
  *(_QWORD *)algn_1004A2A08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.videosContentView.unsafeMutableAddressor()
{
  if (qword_10048CCD0 != -1)
    swift_once(&qword_10048CCD0, sub_1001E3158);
  return &static AccessibilityIdentifier.videosContentView;
}

uint64_t static AccessibilityIdentifier.videosContentView.getter()
{
  return sub_1001E5978(&qword_10048CCD0, &static AccessibilityIdentifier.videosContentView);
}

uint64_t sub_1001E326C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x5672616265646953;
  v1._object = (void *)0xEB00000000776569;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.sidebarView = v3;
  *(_QWORD *)algn_1004A2A18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.sidebarView.unsafeMutableAddressor()
{
  if (qword_10048CCD8 != -1)
    swift_once(&qword_10048CCD8, sub_1001E326C);
  return &static AccessibilityIdentifier.sidebarView;
}

uint64_t static AccessibilityIdentifier.sidebarView.getter()
{
  return sub_1001E5978(&qword_10048CCD8, &static AccessibilityIdentifier.sidebarView);
}

uint64_t sub_1001E3384()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6979616C50776F4ELL;
  v1._object = (void *)0xEE0077656956676ELL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingView = v3;
  *(_QWORD *)algn_1004A2A28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingView.unsafeMutableAddressor()
{
  if (qword_10048CCE0 != -1)
    swift_once(&qword_10048CCE0, sub_1001E3384);
  return &static AccessibilityIdentifier.nowPlayingView;
}

uint64_t static AccessibilityIdentifier.nowPlayingView.getter()
{
  return sub_1001E5978(&qword_10048CCE0, &static AccessibilityIdentifier.nowPlayingView);
}

uint64_t sub_1001E34A0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5700;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.bottomPlayerView = v3;
  *(_QWORD *)algn_1004A2A38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.bottomPlayerView.unsafeMutableAddressor()
{
  if (qword_10048CCE8 != -1)
    swift_once(&qword_10048CCE8, sub_1001E34A0);
  return &static AccessibilityIdentifier.bottomPlayerView;
}

uint64_t static AccessibilityIdentifier.bottomPlayerView.getter()
{
  return sub_1001E5978(&qword_10048CCE8, &static AccessibilityIdentifier.bottomPlayerView);
}

uint64_t sub_1001E35B4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B56E0;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingShuffleButton = v3;
  *(_QWORD *)algn_1004A2A48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingShuffleButton.unsafeMutableAddressor()
{
  if (qword_10048CCF0 != -1)
    swift_once(&qword_10048CCF0, sub_1001E35B4);
  return &static AccessibilityIdentifier.nowPlayingShuffleButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingShuffleButton.getter()
{
  return sub_1001E5978(&qword_10048CCF0, &static AccessibilityIdentifier.nowPlayingShuffleButton);
}

uint64_t sub_1001E36C8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B56C0;
  v1._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingRepeatButton = v3;
  *(_QWORD *)algn_1004A2A58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingRepeatButton.unsafeMutableAddressor()
{
  if (qword_10048CCF8 != -1)
    swift_once(&qword_10048CCF8, sub_1001E36C8);
  return &static AccessibilityIdentifier.nowPlayingRepeatButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingRepeatButton.getter()
{
  return sub_1001E5978(&qword_10048CCF8, &static AccessibilityIdentifier.nowPlayingRepeatButton);
}

uint64_t sub_1001E37DC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B56A0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingAutoPlayButton = v3;
  *(_QWORD *)algn_1004A2A68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingAutoPlayButton.unsafeMutableAddressor()
{
  if (qword_10048CD00 != -1)
    swift_once(&qword_10048CD00, sub_1001E37DC);
  return &static AccessibilityIdentifier.nowPlayingAutoPlayButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingAutoPlayButton.getter()
{
  return sub_1001E5978(&qword_10048CD00, &static AccessibilityIdentifier.nowPlayingAutoPlayButton);
}

uint64_t sub_1001E38F0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5680;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.nowPlayingFavoriteButton = v3;
  *(_QWORD *)algn_1004A2A78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.nowPlayingFavoriteButton.unsafeMutableAddressor()
{
  if (qword_10048CD08 != -1)
    swift_once(&qword_10048CD08, sub_1001E38F0);
  return &static AccessibilityIdentifier.nowPlayingFavoriteButton;
}

uint64_t static AccessibilityIdentifier.nowPlayingFavoriteButton.getter()
{
  return sub_1001E5978(&qword_10048CD08, &static AccessibilityIdentifier.nowPlayingFavoriteButton);
}

uint64_t sub_1001E3A04()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x747475426574754DLL;
  v1._object = (void *)0xEA00000000006E6FLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.muteButton = v3;
  *(_QWORD *)algn_1004A2A88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.muteButton.unsafeMutableAddressor()
{
  if (qword_10048CD10 != -1)
    swift_once(&qword_10048CD10, sub_1001E3A04);
  return &static AccessibilityIdentifier.muteButton;
}

uint64_t static AccessibilityIdentifier.muteButton.getter()
{
  return sub_1001E5978(&qword_10048CD10, &static AccessibilityIdentifier.muteButton);
}

uint64_t sub_1001E3B18()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C53656D756C6F56;
  v1._object = (void *)0xEC00000072656469;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.volumeSlider = v3;
  *(_QWORD *)algn_1004A2A98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.volumeSlider.unsafeMutableAddressor()
{
  if (qword_10048CD18 != -1)
    swift_once(&qword_10048CD18, sub_1001E3B18);
  return &static AccessibilityIdentifier.volumeSlider;
}

uint64_t static AccessibilityIdentifier.volumeSlider.getter()
{
  return sub_1001E5978(&qword_10048CD18, &static AccessibilityIdentifier.volumeSlider);
}

uint64_t sub_1001E3C30()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6B63616279616C50;
  v1._object = (void *)0xEE00726564696C53;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playbackSlider = v3;
  *(_QWORD *)algn_1004A2AA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playbackSlider.unsafeMutableAddressor()
{
  if (qword_10048CD20 != -1)
    swift_once(&qword_10048CD20, sub_1001E3C30);
  return &static AccessibilityIdentifier.playbackSlider;
}

uint64_t static AccessibilityIdentifier.playbackSlider.getter()
{
  return sub_1001E5978(&qword_10048CD20, &static AccessibilityIdentifier.playbackSlider);
}

uint64_t sub_1001E3D4C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x412E726579616C50;
  v1._object = (void *)0xEE006B726F777472;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playerArtwork = v3;
  *(_QWORD *)algn_1004A2AB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playerArtwork.unsafeMutableAddressor()
{
  if (qword_10048CD28 != -1)
    swift_once(&qword_10048CD28, sub_1001E3D4C);
  return &static AccessibilityIdentifier.playerArtwork;
}

uint64_t static AccessibilityIdentifier.playerArtwork.getter()
{
  return sub_1001E5978(&qword_10048CD28, &static AccessibilityIdentifier.playerArtwork);
}

uint64_t sub_1001E3E68()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5660;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playerMenuButton = v3;
  *(_QWORD *)algn_1004A2AC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playerMenuButton.unsafeMutableAddressor()
{
  if (qword_10048CD30 != -1)
    swift_once(&qword_10048CD30, sub_1001E3E68);
  return &static AccessibilityIdentifier.playerMenuButton;
}

uint64_t static AccessibilityIdentifier.playerMenuButton.getter()
{
  return sub_1001E5978(&qword_10048CD30, &static AccessibilityIdentifier.playerMenuButton);
}

uint64_t sub_1001E3F7C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x754273636972794CLL;
  v1._object = (void *)0xEC0000006E6F7474;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.lyricsButton = v3;
  *(_QWORD *)algn_1004A2AD8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.lyricsButton.unsafeMutableAddressor()
{
  if (qword_10048CD38 != -1)
    swift_once(&qword_10048CD38, sub_1001E3F7C);
  return &static AccessibilityIdentifier.lyricsButton;
}

uint64_t static AccessibilityIdentifier.lyricsButton.getter()
{
  return sub_1001E5978(&qword_10048CD38, &static AccessibilityIdentifier.lyricsButton);
}

uint64_t sub_1001E4094()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5640;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playbackQueueButton = v3;
  *(_QWORD *)algn_1004A2AE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playbackQueueButton.unsafeMutableAddressor()
{
  if (qword_10048CD40 != -1)
    swift_once(&qword_10048CD40, sub_1001E4094);
  return &static AccessibilityIdentifier.playbackQueueButton;
}

uint64_t static AccessibilityIdentifier.playbackQueueButton.getter()
{
  return sub_1001E5978(&qword_10048CD40, &static AccessibilityIdentifier.playbackQueueButton);
}

uint64_t sub_1001E41A8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5620;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsView = v3;
  *(_QWORD *)algn_1004A2AF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsView.unsafeMutableAddressor()
{
  if (qword_10048CD48 != -1)
    swift_once(&qword_10048CD48, sub_1001E41A8);
  return &static AccessibilityIdentifier.playlistSuggestedSongsView;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsView.getter()
{
  return sub_1001E5978(&qword_10048CD48, &static AccessibilityIdentifier.playlistSuggestedSongsView);
}

uint64_t sub_1001E42BC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B55F0;
  v1._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton = v3;
  *(_QWORD *)algn_1004A2B08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.unsafeMutableAddressor()
{
  if (qword_10048CD50 != -1)
    swift_once(&qword_10048CD50, sub_1001E42BC);
  return &static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.getter()
{
  return sub_1001E5978(&qword_10048CD50, &static AccessibilityIdentifier.playlistSuggestedSongsRefreshButton);
}

uint64_t sub_1001E43D0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B55D0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCell = v3;
  *(_QWORD *)algn_1004A2B18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCell.unsafeMutableAddressor()
{
  if (qword_10048CD58 != -1)
    swift_once(&qword_10048CD58, sub_1001E43D0);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCell;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCell.getter()
{
  return sub_1001E5978(&qword_10048CD58, &static AccessibilityIdentifier.playlistSuggestedSongsCell);
}

uint64_t sub_1001E44E4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B55A0;
  v1._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork = v3;
  *(_QWORD *)algn_1004A2B28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.unsafeMutableAddressor()
{
  if (qword_10048CD60 != -1)
    swift_once(&qword_10048CD60, sub_1001E44E4);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.getter()
{
  return sub_1001E5978(&qword_10048CD60, &static AccessibilityIdentifier.playlistSuggestedSongsCellArtwork);
}

uint64_t sub_1001E45F8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5570;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellTitle = v3;
  *(_QWORD *)algn_1004A2B38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor()
{
  if (qword_10048CD68 != -1)
    swift_once(&qword_10048CD68, sub_1001E45F8);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellTitle;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellTitle.getter()
{
  return sub_1001E5978(&qword_10048CD68, &static AccessibilityIdentifier.playlistSuggestedSongsCellTitle);
}

uint64_t sub_1001E470C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5540;
  v1._countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName = v3;
  *(_QWORD *)algn_1004A2B48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor()
{
  if (qword_10048CD70 != -1)
    swift_once(&qword_10048CD70, sub_1001E470C);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.getter()
{
  return sub_1001E5978(&qword_10048CD70, &static AccessibilityIdentifier.playlistSuggestedSongsCellArtistName);
}

uint64_t sub_1001E4820()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5510;
  v1._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellDuration = v3;
  *(_QWORD *)algn_1004A2B58 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellDuration.unsafeMutableAddressor()
{
  if (qword_10048CD78 != -1)
    swift_once(&qword_10048CD78, sub_1001E4820);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellDuration;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellDuration.getter()
{
  return sub_1001E5978(&qword_10048CD78, &static AccessibilityIdentifier.playlistSuggestedSongsCellDuration);
}

uint64_t sub_1001E4934()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B54E0;
  v1._countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton = v3;
  *(_QWORD *)algn_1004A2B68 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.unsafeMutableAddressor()
{
  if (qword_10048CD80 != -1)
    swift_once(&qword_10048CD80, sub_1001E4934);
  return &static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton;
}

uint64_t static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.getter()
{
  return sub_1001E5978(&qword_10048CD80, &static AccessibilityIdentifier.playlistSuggestedSongsCellAddButton);
}

uint64_t sub_1001E4A48()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x636973754D646441;
  v1._object = (void *)0xEE006E6F74747542;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.addMusicButton = v3;
  *(_QWORD *)algn_1004A2B78 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.addMusicButton.unsafeMutableAddressor()
{
  if (qword_10048CD88 != -1)
    swift_once(&qword_10048CD88, sub_1001E4A48);
  return &static AccessibilityIdentifier.addMusicButton;
}

uint64_t static AccessibilityIdentifier.addMusicButton.getter()
{
  return sub_1001E5978(&qword_10048CD88, &static AccessibilityIdentifier.addMusicButton);
}

uint64_t sub_1001E4B64()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B54C0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistAddMusicCell = v3;
  *(_QWORD *)algn_1004A2B88 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistAddMusicCell.unsafeMutableAddressor()
{
  if (qword_10048CD90 != -1)
    swift_once(&qword_10048CD90, sub_1001E4B64);
  return &static AccessibilityIdentifier.playlistAddMusicCell;
}

uint64_t static AccessibilityIdentifier.playlistAddMusicCell.getter()
{
  return sub_1001E5978(&qword_10048CD90, &static AccessibilityIdentifier.playlistAddMusicCell);
}

uint64_t sub_1001E4C78()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B54A0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.showOnProfileAndInSearchSwitch = v3;
  *(_QWORD *)algn_1004A2B98 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.showOnProfileAndInSearchSwitch.unsafeMutableAddressor()
{
  if (qword_10048CD98 != -1)
    swift_once(&qword_10048CD98, sub_1001E4C78);
  return &static AccessibilityIdentifier.showOnProfileAndInSearchSwitch;
}

uint64_t static AccessibilityIdentifier.showOnProfileAndInSearchSwitch.getter()
{
  return sub_1001E5978(&qword_10048CD98, &static AccessibilityIdentifier.showOnProfileAndInSearchSwitch);
}

uint64_t sub_1001E4D8C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x462E747369747241;
  v1._object = (void *)0xEF657469726F7661;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.artistFavorite = v3;
  *(_QWORD *)algn_1004A2BA8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artistFavorite.unsafeMutableAddressor()
{
  if (qword_10048CDA0 != -1)
    swift_once(&qword_10048CDA0, sub_1001E4D8C);
  return &static AccessibilityIdentifier.artistFavorite;
}

uint64_t static AccessibilityIdentifier.artistFavorite.getter()
{
  return sub_1001E5978(&qword_10048CDA0, &static AccessibilityIdentifier.artistFavorite);
}

uint64_t sub_1001E4EA8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5480;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.artistUndoFavorite = v3;
  *(_QWORD *)algn_1004A2BB8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.artistUndoFavorite.unsafeMutableAddressor()
{
  if (qword_10048CDA8 != -1)
    swift_once(&qword_10048CDA8, sub_1001E4EA8);
  return &static AccessibilityIdentifier.artistUndoFavorite;
}

uint64_t static AccessibilityIdentifier.artistUndoFavorite.getter()
{
  return sub_1001E5978(&qword_10048CDA8, &static AccessibilityIdentifier.artistUndoFavorite);
}

uint64_t sub_1001E4FBC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x657469726F766146;
  v1._object = (void *)0xED00006567646142;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.favoriteBadge = v3;
  *(_QWORD *)algn_1004A2BC8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.favoriteBadge.unsafeMutableAddressor()
{
  if (qword_10048CDB0 != -1)
    swift_once(&qword_10048CDB0, sub_1001E4FBC);
  return &static AccessibilityIdentifier.favoriteBadge;
}

uint64_t static AccessibilityIdentifier.favoriteBadge.getter()
{
  return sub_1001E5978(&qword_10048CDB0, &static AccessibilityIdentifier.favoriteBadge);
}

uint64_t sub_1001E50D8()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5460;
  v1._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyTermsAcceptButton = v3;
  *(_QWORD *)algn_1004A2BD8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyTermsAcceptButton.unsafeMutableAddressor()
{
  if (qword_10048CDB8 != -1)
    swift_once(&qword_10048CDB8, sub_1001E50D8);
  return &static AccessibilityIdentifier.privacyTermsAcceptButton;
}

uint64_t static AccessibilityIdentifier.privacyTermsAcceptButton.getter()
{
  return sub_1001E5978(&qword_10048CDB8, &static AccessibilityIdentifier.privacyTermsAcceptButton);
}

uint64_t sub_1001E51EC()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5440;
  v1._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyTermsLink = v3;
  *(_QWORD *)algn_1004A2BE8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyTermsLink.unsafeMutableAddressor()
{
  if (qword_10048CDC0 != -1)
    swift_once(&qword_10048CDC0, sub_1001E51EC);
  return &static AccessibilityIdentifier.privacyTermsLink;
}

uint64_t static AccessibilityIdentifier.privacyTermsLink.getter()
{
  return sub_1001E5978(&qword_10048CDC0, &static AccessibilityIdentifier.privacyTermsLink);
}

uint64_t sub_1001E5300()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5420;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeImage = v3;
  *(_QWORD *)algn_1004A2BF8 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeImage.unsafeMutableAddressor()
{
  if (qword_10048CDC8 != -1)
    swift_once(&qword_10048CDC8, sub_1001E5300);
  return &static AccessibilityIdentifier.privacyWelcomeImage;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeImage.getter()
{
  return sub_1001E5978(&qword_10048CDC8, &static AccessibilityIdentifier.privacyWelcomeImage);
}

uint64_t sub_1001E5414()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B5400;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeTitle = v3;
  *(_QWORD *)algn_1004A2C08 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeTitle.unsafeMutableAddressor()
{
  if (qword_10048CDD0 != -1)
    swift_once(&qword_10048CDD0, sub_1001E5414);
  return &static AccessibilityIdentifier.privacyWelcomeTitle;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeTitle.getter()
{
  return sub_1001E5978(&qword_10048CDD0, &static AccessibilityIdentifier.privacyWelcomeTitle);
}

uint64_t sub_1001E5528()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._object = (void *)0x80000001003B53E0;
  v1._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.privacyWelcomeDescription = v3;
  *(_QWORD *)algn_1004A2C18 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.privacyWelcomeDescription.unsafeMutableAddressor()
{
  if (qword_10048CDD8 != -1)
    swift_once(&qword_10048CDD8, sub_1001E5528);
  return &static AccessibilityIdentifier.privacyWelcomeDescription;
}

uint64_t static AccessibilityIdentifier.privacyWelcomeDescription.getter()
{
  return sub_1001E5978(&qword_10048CDD8, &static AccessibilityIdentifier.privacyWelcomeDescription);
}

uint64_t sub_1001E563C()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6569566D75626C41;
  v1._object = (void *)0xE900000000000077;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.albumView = v3;
  *(_QWORD *)algn_1004A2C28 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.albumView.unsafeMutableAddressor()
{
  if (qword_10048CDE0 != -1)
    swift_once(&qword_10048CDE0, sub_1001E563C);
  return &static AccessibilityIdentifier.albumView;
}

uint64_t static AccessibilityIdentifier.albumView.getter()
{
  return sub_1001E5978(&qword_10048CDE0, &static AccessibilityIdentifier.albumView);
}

uint64_t sub_1001E5750()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x7473696C79616C50;
  v1._object = (void *)0xEC00000077656956;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.playlistView = v3;
  *(_QWORD *)algn_1004A2C38 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.playlistView.unsafeMutableAddressor()
{
  if (qword_10048CDE8 != -1)
    swift_once(&qword_10048CDE8, sub_1001E5750);
  return &static AccessibilityIdentifier.playlistView;
}

uint64_t static AccessibilityIdentifier.playlistView.getter()
{
  return sub_1001E5978(&qword_10048CDE8, &static AccessibilityIdentifier.playlistView);
}

uint64_t sub_1001E5868()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  v4 = unk_100496600;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x77656956676E6F53;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  result = swift_bridgeObjectRelease();
  static AccessibilityIdentifier.songView = v3;
  *(_QWORD *)algn_1004A2C48 = v4;
  return result;
}

uint64_t *AccessibilityIdentifier.songView.unsafeMutableAddressor()
{
  if (qword_10048CDF0 != -1)
    swift_once(&qword_10048CDF0, sub_1001E5868);
  return &static AccessibilityIdentifier.songView;
}

uint64_t static AccessibilityIdentifier.songView.getter()
{
  return sub_1001E5978(&qword_10048CDF0, &static AccessibilityIdentifier.songView);
}

uint64_t sub_1001E5978(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

_QWORD *sub_1001E59C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

id UIView.withAccessibilityIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  id v5;

  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(a1, a2);
  return v5;
}

void UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  if (a2)
  {
    v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v2, "setAccessibilityIdentifier:", v4);

}

uint64_t UIAccessibilityIdentification.musicAccessibilityIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "accessibilityIdentifier");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

void (*UIAccessibilityIdentification.musicAccessibilityIdentifier.modify(uint64_t *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  a1[2] = a2;
  a1[3] = v2;
  *a1 = UIAccessibilityIdentification.musicAccessibilityIdentifier.getter();
  a1[1] = v4;
  return sub_1001E5B0C;
}

void sub_1001E5B0C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(*a1, v2);
  }
}

uint64_t View.textSuffix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t TupleTypeMetadata2;
  uint64_t v29;
  uint64_t WitnessTable;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v39[0] = a4;
  v43 = a7;
  v12 = type metadata accessor for Text.Suffix(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a5;
  v53 = a6;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v52, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 0);
  v17 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v41 = OpaqueTypeMetadata2;
  v42 = v17;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v40 = (char *)v39 - v18;
  v19 = a3 & 1;
  v20 = a1;
  v21 = a1;
  v22 = a2;
  v23 = a2;
  v24 = v39[0];
  static Text.Suffix.alwaysVisible(_:)(v20, v22, v19, v39[0]);
  v25 = a6;
  v26 = a6;
  v27 = v39[1];
  View.textSuffix(_:)(v15, a5, v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v45 = a5;
  v46 = v25;
  v47 = v27;
  v48 = v21;
  v49 = v23;
  v50 = v19;
  v51 = v24;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a5, &type metadata for Text, 0, 0);
  v29 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v29);
  v31 = type metadata accessor for HStack(255, v29, WitnessTable);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v31);
  v52 = v31;
  v53 = v32;
  v33 = swift_getOpaqueTypeMetadata2(0, &v52, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v52 = a5;
  v53 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
  v52 = v31;
  v53 = v32;
  v35 = swift_getOpaqueTypeConformance2(&v52, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v37 = v40;
  v36 = v41;
  View.accessibilityRepresentation<A>(representation:)(sub_1001E6040, v44, v41, v33, OpaqueTypeConformance2, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v37, v36);
}

uint64_t sub_1001E5DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v37 = a7;
  v32 = a6;
  v39 = a5;
  v38 = a4;
  v35 = a2;
  v36 = a3;
  v34 = a1;
  v42 = a8;
  v9 = type metadata accessor for AccessibilityChildBehavior(0);
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a6, &type metadata for Text, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for HStack(0, v13, WitnessTable);
  v33 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v15);
  v51 = v15;
  v52 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v51, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v21 = __chkstk_darwin(OpaqueTypeMetadata2);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v31 - v25;
  v44 = v32;
  v45 = v37;
  v46 = v34;
  v47 = v35;
  v48 = v36;
  v49 = v38 & 1;
  v50 = v39;
  v27 = static VerticalAlignment.center.getter(v24);
  v28 = HStack.init(alignment:spacing:content:)(v27, 0, 1, sub_1001E70AC, v43, v13, WitnessTable);
  static AccessibilityChildBehavior.combine.getter(v28);
  View.accessibilityElement(children:)(v11, v15, v18);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v15);
  v51 = v15;
  v52 = v18;
  swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  sub_10003B690((uint64_t)v23, OpaqueTypeMetadata2, (uint64_t)v26);
  v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v23, OpaqueTypeMetadata2);
  sub_100035E98((uint64_t)v26, OpaqueTypeMetadata2, v42);
  return ((uint64_t (*)(char *, uint64_t))v29)(v26, OpaqueTypeMetadata2);
}

uint64_t sub_1001E6040()
{
  return sub_1001E70B8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E5DA8);
}

uint64_t sub_1001E604C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29[2];

  v13 = *(_QWORD *)(a6 - 8);
  v14 = __chkstk_darwin(a1);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v14);
  v19 = (char *)v23 - v18;
  sub_10003B690(v17, v20, (uint64_t)v23 - v18);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, a6);
  v25 = a2;
  v26 = a3;
  a4 &= 1u;
  v27 = a4;
  v28 = a5;
  v29[0] = (uint64_t)v16;
  v29[1] = (uint64_t)&v25;
  sub_10003B4C0(a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_10003B4C0(a2, a3, a4);
  swift_bridgeObjectRetain();
  v24[0] = a6;
  v24[1] = &type metadata for Text;
  v23[0] = a7;
  v23[1] = &protocol witness table for Text;
  sub_1000388A8(v29, 2uLL, (uint64_t)v24);
  sub_10003B4D0(a2, a3, a4);
  swift_bridgeObjectRelease();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v19, a6);
  sub_10003B4D0(v25, v26, v27);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, a6);
}

uint64_t AccessibilityString.init(_:tableName:bundle:comment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];

  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for String.LocalizationValue(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  static Locale.current.getter(v15);
  v16 = String.init(localized:table:bundle:locale:comment:)(v14, a2, a3, a4, v10, 0, 0, 256);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v16;
}

uint64_t View.accessibilityLabel(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E6310(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityLabel<A>(_:));
}

uint64_t View.accessibilityHint(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E6310(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityHint<A>(_:));
}

uint64_t View.accessibilityValue(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E6310(a1, a2, a3, a4, (void (*)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))&View.accessibilityValue<A>(_:));
}

uint64_t sub_1001E6310(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, uint64_t, _QWORD *, uint64_t, unint64_t))
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[2];

  if (a2)
    v8 = a1;
  else
    v8 = 0;
  if (a2)
    v9 = a2;
  else
    v9 = 0xE000000000000000;
  v12[0] = v8;
  v12[1] = v9;
  v10 = sub_10000D478();
  swift_bridgeObjectRetain();
  a5(v12, a3, &type metadata for String, a4, v10);
  return swift_bridgeObjectRelease();
}

uint64_t Text.accessibilityLabel(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  if (a2)
    v10 = a1;
  else
    v10 = 0;
  if (a2)
    v11 = a2;
  else
    v11 = 0xE000000000000000;
  v15[0] = v10;
  v15[1] = v11;
  v12 = sub_10000D478();
  swift_bridgeObjectRetain();
  v13 = Text.accessibilityLabel<A>(_:)(v15, a3, a4, a5 & 1, a6, &type metadata for String, v12);
  swift_bridgeObjectRelease();
  return v13;
}

char *static Text.compact(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)_swiftEmptyArrayStorage;
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v3 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v5 = *v2;
    if (*v2)
    {
      v17[0] = *(v2 - 1);
      v17[1] = v5;
      v6 = sub_10000D478();
      swift_bridgeObjectRetain();
      v7 = Text.init<A>(_:)(v17, &type metadata for String, v6);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_10003EF58(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v15 = *((_QWORD *)v3 + 2);
      v14 = *((_QWORD *)v3 + 3);
      if (v15 >= v14 >> 1)
        v3 = sub_10003EF58((char *)(v14 > 1), v15 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v15 + 1;
      v4 = &v3[32 * v15];
      *((_QWORD *)v4 + 4) = v7;
      *((_QWORD *)v4 + 5) = v9;
      v4[48] = v11 & 1;
      *((_QWORD *)v4 + 7) = v13;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void TabIdentifier.accessibilityIdentifier.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001E65D0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t v3;

  if (qword_10048C980 != -1)
    swift_once(&qword_10048C980, sub_1001DBC90);
  v3 = qword_1004965F8;
  swift_bridgeObjectRetain();
  v0._countAndFlagsBits = 46;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6C2E726142626174;
  v1._object = (void *)0xEE00797261726269;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

char *sub_1001E6988(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  _QWORD v52[4];

  v52[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_100454E98, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v49 = swift_allocObject(&unk_100454EC0, 24, 7);
  *(_QWORD *)(v49 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v33 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    sub_1001E6DA0(v33 | (v15 << 16), v49, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease(a6);
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release(v14);
    v34 = v49;
    goto LABEL_40;
  }
  v44 = a1;
  v45 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v43 = v17 | (v16 << 16);
  v50 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v19 = String.subscript.getter(v9, v11, a6);
    v21 = v20;
    v52[0] = v19;
    v52[1] = v20;
    v22 = a3(v52);
    if (v7)
    {
      swift_release(v45);
      swift_release(v49);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(a6);
      return v10;
    }
    v6 = v22;
    swift_bridgeObjectRelease(v21);
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v50 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v49 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v23 = String.subscript.getter(v8, v9, v11, a6);
  v46 = v24;
  v47 = v23;
  v26 = v25;
  v28 = v27;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_10003DF74(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v30 = *((_QWORD *)v10 + 2);
  v29 = *((_QWORD *)v10 + 3);
  v6 = v30 + 1;
  if (v30 >= v29 >> 1)
    v10 = sub_10003DF74((char *)(v29 > 1), v30 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v31 = &v10[32 * v30];
  *((_QWORD *)v31 + 4) = v47;
  *((_QWORD *)v31 + 5) = v26;
  *((_QWORD *)v31 + 6) = v28;
  *((_QWORD *)v31 + 7) = v46;
  *(_QWORD *)(v45 + 16) = v10;
  v32 = String.index(after:)(v9, v11, a6);
  v9 = v32;
  *(_QWORD *)(v49 + 16) = v32;
  if (*((_QWORD *)v10 + 2) != v44)
  {
    v8 = v32;
    v18 = v32;
    goto LABEL_11;
  }
  v18 = v32;
  v8 = v32;
LABEL_31:
  if (v50 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease(a6);
    v35 = v45;
    goto LABEL_39;
  }
  if (v50 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v43, v11, a6);
    v8 = v36;
    v9 = v37;
    v11 = v38;
    swift_bridgeObjectRelease(a6);
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_10003DF74(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v40 = *((_QWORD *)v10 + 2);
  v39 = *((_QWORD *)v10 + 3);
  if (v40 >= v39 >> 1)
    v10 = sub_10003DF74((char *)(v39 > 1), v40 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v40 + 1;
  v41 = &v10[32 * v40];
  *((_QWORD *)v41 + 4) = v6;
  *((_QWORD *)v41 + 5) = v8;
  *((_QWORD *)v41 + 6) = v9;
  *((_QWORD *)v41 + 7) = v11;
  v35 = v45;
  *(_QWORD *)(v45 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release(v35);
  v34 = v49;
LABEL_40:
  swift_release(v34);
  return v10;
}

uint64_t sub_1001E6DA0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_10003DF74(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_10003DF74((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifier()
{
  return &type metadata for AccessibilityIdentifier;
}

ValueMetadata *type metadata accessor for AccessibilityString()
{
  return &type metadata for AccessibilityString;
}

uint64_t sub_1001E6ED8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_1001E6F34();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_1001E6F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100490010;
  if (!qword_100490010)
  {
    v1 = type metadata accessor for AccessibilityAttachmentModifier(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AccessibilityAttachmentModifier, v1);
    atomic_store(result, (unint64_t *)&qword_100490010);
  }
  return result;
}

uint64_t sub_1001E6F7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeMetadata2;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = a1[1];
  v13 = *a1;
  v1 = v13;
  v14 = v2;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v1, &type metadata for Text, 0, 0);
  v5 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v5);
  v7 = type metadata accessor for HStack(255, v5, WitnessTable);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v7);
  v13 = v7;
  v14 = v8;
  v9 = swift_getOpaqueTypeMetadata2(255, &v13, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 0);
  v13 = v1;
  v14 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.textSuffix(_:)>>, 1);
  v13 = v7;
  v14 = v8;
  v11 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v13 = OpaqueTypeMetadata2;
  v14 = v9;
  v15 = OpaqueTypeConformance2;
  v16 = v11;
  return swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.accessibilityRepresentation<A>(representation:)>>, 1);
}

uint64_t sub_1001E70AC()
{
  return sub_1001E70B8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1001E604C);
}

uint64_t sub_1001E70B8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001E70DC(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = *a1;
  v5 = a1[1];
  v6 = v3[1];
  if (v4 == *v3 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *v3, v6, 0) & 1;
}

uint64_t sub_1001E7130()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E7154()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t static AppReview.requestReview(in:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_100496630 + dword_100496630);
  v3 = (_QWORD *)swift_task_alloc(unk_100496634);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000F894;
  return v5(a1);
}

double static AppReview.recordAppOpened()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  _QWORD v20[4];

  v0 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v0);
  v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TaskPriority(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  v5 = swift_allocObject(&unk_100454F10, 32, 7);
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (uint64_t *)(v5 + 16);
  *(_QWORD *)(v5 + 24) = 0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v7 == 1)
  {
    sub_100008758((uint64_t)v2, (uint64_t *)&unk_100493720);
    v8 = 0;
    v9 = 0;
    v10 = 7168;
  }
  else
  {
    v11 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    v10 = v11 | 0x1C00;
    v12 = *v6;
    if (*v6)
    {
      v13 = *(_QWORD *)(v5 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v9 = v15;
      swift_unknownObjectRelease(v12);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
  }
  v16 = swift_allocObject(&unk_100454F38, 32, 7);
  *(_QWORD *)(v16 + 16) = &unk_100496640;
  *(_QWORD *)(v16 + 24) = v5;
  if (v9 | v8)
  {
    v20[0] = 0;
    v20[1] = 0;
    v17 = v20;
    v20[2] = v8;
    v20[3] = v9;
  }
  else
  {
    v17 = 0;
  }
  v18 = swift_task_create(v10, v17, (char *)&type metadata for () + 8, &unk_1004915E0, v16);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1001E7390()
{
  return swift_task_switch(sub_1001E73A4, 0, 0);
}

uint64_t sub_1001E73A4()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_10048CDF8 != -1)
    swift_once(&qword_10048CDF8, sub_1001E76B8);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to StoreReviewGatingController.didEnterForeground()[1]);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return StoreReviewGatingController.didEnterForeground()();
}

unint64_t sub_1001E741C()
{
  return 0xD000000000000010;
}

uint64_t sub_1001E7438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E879C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_1001E7460(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1001E746C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E85E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E7494(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E85E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001E74BC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;

  v5 = sub_100005574(&qword_100496660);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10000ABC8(a1, v9);
  v11 = sub_1001E85E4();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for AppReview.UsageRequirements.CodingKeys, &type metadata for AppReview.UsageRequirements.CodingKeys, v11, v9, v10);
  if (v2)
    return sub_10000682C(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_10000682C(a1);
  *a2 = v13 & 1;
  return result;
}

uint64_t sub_1001E75D0(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_100005574(&qword_100496670);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  sub_10000ABC8(a1, v8);
  v10 = sub_1001E85E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for AppReview.UsageRequirements.CodingKeys, &type metadata for AppReview.UsageRequirements.CodingKeys, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v11, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1001E76B8()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  id v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v0 = objc_allocWithZone((Class)ICStoreRequestContext);
  v7[4] = sub_1000F5148;
  v8 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000E776C;
  v7[3] = &unk_100454F70;
  v1 = _Block_copy(v7);
  v2 = objc_msgSend(v0, "initWithBlock:", v1);
  _Block_release(v1);
  v3 = swift_release(v8);
  result = swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1, v3);
  if ((result & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)ICAMSBagAdapter), "initWithRequestContext:", v2);

    v6 = objc_allocWithZone((Class)type metadata accessor for StoreReviewGatingController(0));
    result = StoreReviewGatingController.init(bag:)(v5);
    qword_100496608 = result;
  }
  return result;
}

uint64_t sub_1001E77C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100496610);
  sub_1000086B4(v2, (uint64_t)qword_100496610);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x6569766552707041, 0xE900000000000077);
}

void _s9MusicCore9AppReviewO16recordSongPlayedyyFZ_0()
{
  void *v0;
  id v1;
  unint64_t v2;
  unint64_t v3;
  id v4;
  id v5;
  _QWORD v6[6];

  v0 = (void *)objc_opt_self(NSUserDefaults);
  v1 = objc_msgSend(v0, "standardUserDefaults");
  v2 = sub_1001E8490();
  v3 = sub_1001E84D4();
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&type metadata for AppReview.UsageRequirements, v2, (uint64_t)v6);

  v4 = objc_msgSend(v0, "standardUserDefaults");
  NSUserDefaults.decodeValue<A>(_:forKey:)((uint64_t)&type metadata for AppReview.UsageRequirements, v2, (uint64_t)v6);

  if (LOBYTE(v6[0]) == 2 || (v6[0] & 1) == 0)
  {
    v5 = objc_msgSend(v0, "standardUserDefaults");
    v6[3] = &type metadata for AppReview.UsageRequirements;
    v6[4] = v2;
    v6[5] = v3;
    LOBYTE(v6[0]) = 1;
    NSUserDefaults.encodeValue(_:forKey:)(v6);

    sub_10000682C(v6);
  }
}

uint64_t sub_1001E7984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[26] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[27] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[28] = v3;
  v1[29] = v4;
  return swift_task_switch(sub_1001E79F0, v3, v4);
}

void sub_1001E79F0()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;

  sub_1001E8440(*(_QWORD *)(v0 + 208), v0 + 136);
  if (*(_QWORD *)(v0 + 192) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 216));
    sub_100008758(v0 + 136, &qword_10048D950);
  }
  else
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 136);
    if (Strong)
    {
      v3 = Strong;
      v4 = objc_msgSend(Strong, "view");

      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x1001E8030);
      }
      v5 = objc_msgSend(v4, "window");

      v6 = objc_msgSend(v5, "windowScene");
      *(_QWORD *)(v0 + 240) = v6;

      sub_100014B08(v0 + 136);
      if (v6)
      {
        if (qword_10048C658 != -1)
          swift_once(&qword_10048C658, sub_1000B3BEC);
        v7 = static ApplicationCapabilities.Controller.shared;
        KeyPath = swift_getKeyPath(&unk_100391CA8);
        v9 = swift_getKeyPath(&unk_100391CD0);
        static Published.subscript.getter((_QWORD *)(v0 + 16), v7, KeyPath, v9);
        swift_release(v9);
        swift_release(KeyPath);
        v10 = *(_QWORD *)(v0 + 48);
        v11 = *(_QWORD *)(v0 + 72);
        v12 = *(_QWORD *)(v0 + 88);
        v13 = *(void **)(v0 + 96);
        v14 = *(unsigned __int8 *)(v0 + 104);
        v15 = *(_QWORD *)(v0 + 112);
        v16 = *(_QWORD *)(v0 + 128);
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v12);

        __asm { BR              X9 }
      }
      v18 = *(_QWORD *)(v0 + 216);
    }
    else
    {
      v17 = *(_QWORD *)(v0 + 216);
      sub_100014B08(v0 + 136);
      v18 = v17;
    }
    swift_release(v18);
  }
  if (qword_10048CE00 != -1)
    swift_once(&qword_10048CE00, sub_1001E77C4);
  v19 = type metadata accessor for Logger(0, v1);
  v20 = sub_1000086B4(v19, (uint64_t)qword_100496610);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "🤩❌ No windowScene", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  __asm { BR              X0 }
}

uint64_t sub_1001E8040(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  *(_BYTE *)(*v1 + 265) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1001E8098, *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
}

uint64_t sub_1001E8098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint8_t *v16;

  if (*(_BYTE *)(v0 + 265) == 1)
  {
    static AppStore.requestReview(in:)(*(_QWORD *)(v0 + 240));
    if (qword_10048CE00 != -1)
      swift_once(&qword_10048CE00, sub_1001E77C4);
    v2 = type metadata accessor for Logger(0, v1);
    v3 = sub_1000086B4(v2, (uint64_t)qword_100496610);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "🤩 Requesting a review through StoreKit", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = (_QWORD *)swift_task_alloc(async function pointer to StoreReviewGatingController.didPrompt()[1]);
    *(_QWORD *)(v0 + 256) = v7;
    *v7 = v0;
    v7[1] = sub_1001E8284;
    return StoreReviewGatingController.didPrompt()();
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 216));
    if (qword_10048CE00 != -1)
      swift_once(&qword_10048CE00, sub_1001E77C4);
    v10 = type metadata accessor for Logger(0, v9);
    v11 = sub_1000086B4(v10, (uint64_t)qword_100496610);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(void **)(v0 + 240);
    if (v14)
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "🤩❌ Review is being gated by AMS", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001E8284()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 256));
  return swift_task_switch(sub_1001E82D0, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_1001E82D0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 216));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E8308()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E832C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_10049663C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000EA88;
  return swift_task_switch(sub_1001E73A4, 0, 0);
}

uint64_t sub_1001E8384()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E83A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049664C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100496648 + dword_100496648))(a1, v4);
}

ValueMetadata *type metadata accessor for AppReview()
{
  return &type metadata for AppReview;
}

uint64_t sub_1001E8428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001E8438(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001E8440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10048D950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001E8490()
{
  unint64_t result;

  result = qword_100496650;
  if (!qword_100496650)
  {
    result = swift_getWitnessTable(&unk_100391D54, &type metadata for AppReview.UsageRequirements);
    atomic_store(result, (unint64_t *)&qword_100496650);
  }
  return result;
}

unint64_t sub_1001E84D4()
{
  unint64_t result;

  result = qword_100496658;
  if (!qword_100496658)
  {
    result = swift_getWitnessTable(&unk_100391D2C, &type metadata for AppReview.UsageRequirements);
    atomic_store(result, (unint64_t *)&qword_100496658);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReview.UsageRequirements(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001E8564 + 4 * byte_100391C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001E8598 + 4 * asc_100391C80[v4]))();
}

uint64_t sub_1001E8598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E85A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001E85A8);
  return result;
}

uint64_t sub_1001E85B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001E85BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001E85C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E85C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppReview.UsageRequirements()
{
  return &type metadata for AppReview.UsageRequirements;
}

unint64_t sub_1001E85E4()
{
  unint64_t result;

  result = qword_100496668;
  if (!qword_100496668)
  {
    result = swift_getWitnessTable(&unk_100391E40, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496668);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReview.UsageRequirements.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001E8668 + 4 * byte_100391C8A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1001E8688 + 4 * byte_100391C8F[v4]))();
}

_BYTE *sub_1001E8668(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1001E8688(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001E8690(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001E8698(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1001E86A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1001E86A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppReview.UsageRequirements.CodingKeys()
{
  return &type metadata for AppReview.UsageRequirements.CodingKeys;
}

unint64_t sub_1001E86C8()
{
  unint64_t result;

  result = qword_100496678;
  if (!qword_100496678)
  {
    result = swift_getWitnessTable(&unk_100391E18, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496678);
  }
  return result;
}

unint64_t sub_1001E8710()
{
  unint64_t result;

  result = qword_100496680;
  if (!qword_100496680)
  {
    result = swift_getWitnessTable(&unk_100391D88, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496680);
  }
  return result;
}

unint64_t sub_1001E8758()
{
  unint64_t result;

  result = qword_100496688;
  if (!qword_100496688)
  {
    result = swift_getWitnessTable(&unk_100391DB0, &type metadata for AppReview.UsageRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100496688);
  }
  return result;
}

uint64_t sub_1001E879C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001003B6300)
  {
    swift_bridgeObjectRelease(0x80000001003B6300);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010, 0x80000001003B6300, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t static ClassicalBridge.generatePrestoURL(forAlbum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;

  v3 = Album.catalogID.getter(a1);
  if (v4)
  {
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v3, v4, a2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v6, 0, 0);
    *(_QWORD *)v7 = 2;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_BYTE *)(v7 + 32) = 2;
    return swift_willThrow(v8);
  }
}

uint64_t static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1004966D0 + dword_1004966D0);
  v5 = (_QWORD *)swift_task_alloc(unk_1004966D4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return v7(a1, a2);
}

uint64_t sub_1001E892C(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  void *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  _OWORD v45[2];
  uint64_t v46;

  if (!*(_QWORD *)(a1 + 16))
  {
    v22 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v22, 0, 0);
    v23 = 0uLL;
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_QWORD *)(v24 + 32) = 0;
    *(_BYTE *)(v24 + 40) = 2;
LABEL_15:
    swift_willThrow(v23);
    return v27 & 1;
  }
  v2 = v1;
  v46 = a1;
  v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_100040174(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v2, "valueForBagKey:", v7);

  if (!v8)
  {
    swift_bridgeObjectRelease(v46);
    v25 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v25, 0, 0);
    *(_QWORD *)v26 = v4;
    *(_BYTE *)(v26 + 40) = 0;
    goto LABEL_15;
  }
  _bridgeAnyObjectToAny(_:)(v8);
  swift_unknownObjectRelease(v8);
  sub_10009B168(v44, v45);
  sub_10000684C((uint64_t)v45, (uint64_t)v44);
  v9 = v46;
  v10 = *(_QWORD *)(v46 + 16);
  if (v10)
  {
    v11 = v4;
    v12 = 0;
    v40 = v11;
    while (1)
    {
      v13 = *(void **)(v9 + 8 * v12 + 32);
      sub_10000684C((uint64_t)v44, (uint64_t)&v42);
      v14 = v13;
      v15 = sub_100005574((uint64_t *)&unk_100493380);
      if (!swift_dynamicCast(&v41, &v42, (char *)&type metadata for Any + 8, v15, 6))
      {
        swift_bridgeObjectRelease(v9);
        v32 = sub_1000F51A8();
        swift_allocError(&type metadata for ICURLBag.Error, v32, 0, 0);
        v34 = v33;
        *v33 = v14;
        sub_10000684C((uint64_t)v44, (uint64_t)(v33 + 1));
        *((_BYTE *)v34 + 40) = 1;
        goto LABEL_22;
      }
      v16 = v41;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v19 = v18;
      if (*(_QWORD *)(v16 + 16) && (v20 = sub_10009ABAC(v17, v18), (v21 & 1) != 0))
      {
        sub_10000684C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v42);
      }
      else
      {
        v42 = 0u;
        v43 = 0u;
      }
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);
      if (!*((_QWORD *)&v43 + 1))
        break;
      ++v12;
      sub_10000682C(v44);

      sub_10009B168(&v42, v44);
      v11 = v14;
      if (v10 == v12)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease(v9);
    sub_100008758((uint64_t)&v42, &qword_100491B90);
    v35 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v35, 0, 0);
    *(_QWORD *)v36 = v14;
    *(_BYTE *)(v36 + 40) = 0;
LABEL_22:
    v37 = v14;
    swift_willThrow(v38);

    goto LABEL_23;
  }
  v14 = v4;
LABEL_17:
  swift_bridgeObjectRelease(v9);
  sub_10000684C((uint64_t)v44, (uint64_t)&v42);
  if (!swift_dynamicCast(&v41, &v42, (char *)&type metadata for Any + 8, &type metadata for Bool, 6))
  {
    v28 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v28, 0, 0);
    v30 = v29;
    *v29 = v14;
    sub_10000684C((uint64_t)v44, (uint64_t)(v29 + 1));
    *((_BYTE *)v30 + 40) = 1;
    swift_willThrow(v31);

LABEL_23:
    sub_10000682C(v44);
    sub_10000682C(v45);
    return v27 & 1;
  }

  sub_10000682C(v44);
  sub_10000682C(v45);
  v27 = v41 & 1;
  return v27 & 1;
}

uint64_t sub_1001E8D00(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  __n128 v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  _OWORD v44[2];
  uint64_t v45;

  if (!*(_QWORD *)(a1 + 16))
  {
    v22 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v22, 0, 0);
    v23 = 0uLL;
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_QWORD *)(v24 + 32) = 0;
    *(_BYTE *)(v24 + 40) = 2;
    return swift_willThrow(v23);
  }
  v2 = v1;
  v45 = a1;
  v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_100040174(0, 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(v2, "valueForBagKey:", v7);

  if (!v8)
  {
    swift_bridgeObjectRelease(v45);
    v25 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v25, 0, 0);
    *(_QWORD *)v26 = v4;
    *(_BYTE *)(v26 + 40) = 0;
    return swift_willThrow(v23);
  }
  _bridgeAnyObjectToAny(_:)(v8);
  swift_unknownObjectRelease(v8);
  sub_10009B168(v43, v44);
  sub_10000684C((uint64_t)v44, (uint64_t)v43);
  v9 = v45;
  v10 = *(_QWORD *)(v45 + 16);
  if (v10)
  {
    v11 = v4;
    v12 = 0;
    v39 = v11;
    while (1)
    {
      v13 = *(void **)(v9 + 8 * v12 + 32);
      sub_10000684C((uint64_t)v43, (uint64_t)&v41);
      v14 = v13;
      v15 = sub_100005574((uint64_t *)&unk_100493380);
      if (!swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, v15, 6))
      {
        swift_bridgeObjectRelease(v9);
        v32 = sub_1000F51A8();
        swift_allocError(&type metadata for ICURLBag.Error, v32, 0, 0);
        v34 = v33;
        *v33 = v14;
        sub_10000684C((uint64_t)v43, (uint64_t)(v33 + 1));
        *((_BYTE *)v34 + 40) = 1;
        goto LABEL_22;
      }
      v16 = v40;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v19 = v18;
      if (*(_QWORD *)(v16 + 16) && (v20 = sub_10009ABAC(v17, v18), (v21 & 1) != 0))
      {
        sub_10000684C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)&v41);
      }
      else
      {
        v41 = 0u;
        v42 = 0u;
      }
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);
      if (!*((_QWORD *)&v42 + 1))
        break;
      ++v12;
      sub_10000682C(v43);

      sub_10009B168(&v41, v43);
      v11 = v14;
      if (v10 == v12)
        goto LABEL_17;
    }
    swift_bridgeObjectRelease(v9);
    sub_100008758((uint64_t)&v41, &qword_100491B90);
    v35 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v35, 0, 0);
    *(_QWORD *)v36 = v14;
    *(_BYTE *)(v36 + 40) = 0;
LABEL_22:
    v37 = v14;
    swift_willThrow(v38);

  }
  else
  {
    v14 = v4;
LABEL_17:
    swift_bridgeObjectRelease(v9);
    sub_10000684C((uint64_t)v43, (uint64_t)&v41);
    if (swift_dynamicCast(&v40, &v41, (char *)&type metadata for Any + 8, &type metadata for String, 6))
    {

      sub_10000682C(v43);
      sub_10000682C(v44);
      return v40;
    }
    v28 = sub_1000F51A8();
    swift_allocError(&type metadata for ICURLBag.Error, v28, 0, 0);
    v30 = v29;
    *v29 = v14;
    sub_10000684C((uint64_t)v43, (uint64_t)(v29 + 1));
    *((_BYTE *)v30 + 40) = 1;
    swift_willThrow(v31);

  }
  sub_10000682C(v43);
  return sub_10000682C(v44);
}

uint64_t sub_1001E90CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[15] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[16] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[17] = v3;
  v1[18] = v4;
  return swift_task_switch(sub_1001E9138, v3, v4);
}

uint64_t sub_1001E9138()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  id v3;
  NSURL *v4;
  uint64_t v5;
  uint64_t v6;
  Class isa;
  uint64_t v8;

  v1 = v0;
  v2 = v0 + 2;
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1[19] = v3;
  URL._bridgeToObjectiveC()(v4);
  v6 = v5;
  v1[20] = v5;
  sub_100098E90((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000844E4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v1[21] = isa;
  swift_bridgeObjectRelease();
  v1[7] = v1 + 22;
  v1[2] = v1;
  v1[3] = sub_1001E9268;
  v8 = swift_continuation_init(v2, 0);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_10016AA10;
  v1[3] = &unk_1004553D8;
  v1[4] = v8;
  objc_msgSend(v3, "openURL:options:completionHandler:", v6, isa, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_1001E9268()
{
  uint64_t v0;

  return swift_task_switch(sub_1001E92AC, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_1001E92AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 128));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E92FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_100005574(&qword_10048D510);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[18] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[19] = v5;
  v2[20] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v2[21] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v2[22] = v7;
  v2[23] = v8;
  return swift_task_switch(sub_1001E93B4, v7, v8);
}

uint64_t sub_1001E93B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSURL *v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(void **)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = v5;
  v6._object = v3;
  String.append(_:)(v6);
  URL.init(string:)(0xD000000000000022, 0x80000001003B64A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 120);
    swift_release(*(_QWORD *)(v0 + 168));
    sub_100008758(v9, &qword_10048D510);
    v11 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v11, 0, 0);
    *(_QWORD *)v12 = 0xD000000000000022;
    *(_QWORD *)(v12 + 8) = 0x80000001003B64A0;
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v8;
    *(_BYTE *)(v12 + 32) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow(v13);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = v0 + 16;
    v17 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 136);
    v18 = *(_QWORD *)(v0 + 144);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v19, v18);
    v20 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    *(_QWORD *)(v0 + 192) = v20;
    URL._bridgeToObjectiveC()(v21);
    v23 = v22;
    *(_QWORD *)(v0 + 200) = v22;
    sub_100098E90((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1000844E4();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v0 + 208) = isa;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v0 + 216;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1001E9630;
    v25 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v26 = (_QWORD *)(v0 + 80);
    v26[1] = 0x40000000;
    v26[2] = sub_10016AA10;
    v26[3] = &unk_1004553F0;
    v26[4] = v25;
    objc_msgSend(v20, "openURL:options:completionHandler:", v23, isa, v26);
    return swift_continuation_await(v15);
  }
}

uint64_t sub_1001E9630()
{
  uint64_t v0;

  return swift_task_switch(sub_1001E9674, *(_QWORD *)(*(_QWORD *)v0 + 176), *(_QWORD *)(*(_QWORD *)v0 + 184));
}

uint64_t sub_1001E9674()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = swift_release(*(_QWORD *)(v0 + 168));
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v4, v5, v8);

  swift_task_dealloc(v4);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t inited;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91[56];
  char v92[56];
  unint64_t v93;

  v9 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v9);
  v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10048C720 != -1)
    swift_once(&qword_10048C720, sub_1000C378C);
  sub_100005574(&qword_100490BA0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000D460);
  v12 = v87;
  if (!v87)
  {
    v23 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v23, 0, 0);
    *(_OWORD *)v24 = 0u;
    *(_OWORD *)(v24 + 16) = 0u;
    *(_BYTE *)(v24 + 32) = 2;
    swift_willThrow((__n128)0);
    return;
  }
  v80 = a1;
  v79 = a4;
  v81 = a2;
  v93 = a3;
  v13 = sub_100005574(&qword_10048E820);
  inited = swift_initStackObject(v13, v92);
  v82 = xmmword_100384A60;
  *(_OWORD *)(inited + 16) = xmmword_100384A60;
  v15 = (void *)ICURLBagKeyMusicCommon;
  *(_QWORD *)(inited + 32) = ICURLBagKeyMusicCommon;
  v16 = inited + 32;
  v17 = qword_10048CE10;
  v18 = v15;
  if (v17 != -1)
    swift_once(&qword_10048CE10, sub_1001EAB68);
  v19 = (void *)qword_100496698;
  *(_QWORD *)(inited + 40) = qword_100496698;
  v20 = v19;
  v21 = sub_1001E892C(inited);
  if (v4)
  {
    swift_setDeallocating(inited);
    v22 = *(_QWORD *)(inited + 16);
    type metadata accessor for ICURLBagKey(0);
    swift_arrayDestroy(inited + 32, v22, v58);
LABEL_22:

    return;
  }
  v25 = v21;
  swift_setDeallocating(inited);
  v26 = *(_QWORD *)(inited + 16);
  type metadata accessor for ICURLBagKey(0);
  v78 = v27;
  swift_arrayDestroy(v16, v26, v27);
  if ((v25 & 1) == 0)
  {
    v37 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v37, 0, 0);
    *(_QWORD *)v39 = 1;
    *(_QWORD *)(v39 + 8) = 0;
    *(_QWORD *)(v39 + 16) = 0;
    *(_QWORD *)(v39 + 24) = 0;
    *(_BYTE *)(v39 + 32) = 2;
LABEL_16:
    swift_willThrow(v38);
    goto LABEL_22;
  }
  v28 = swift_initStackObject(v13, v91);
  v77 = xmmword_100384A40;
  *(_OWORD *)(v28 + 16) = xmmword_100384A40;
  *(_QWORD *)(v28 + 32) = v18;
  v29 = qword_10048CE20;
  v30 = v18;
  if (v29 != -1)
    swift_once(&qword_10048CE20, sub_1001EABD0);
  v31 = (void *)qword_1004966A8;
  *(_QWORD *)(v28 + 40) = qword_1004966A8;
  v32 = qword_10048CE28;
  v33 = v31;
  if (v32 != -1)
    swift_once(&qword_10048CE28, sub_1001EAC04);
  v34 = (void *)qword_1004966B0;
  *(_QWORD *)(v28 + 48) = qword_1004966B0;
  v35 = v34;
  sub_1001E8D00(v28);
  v40 = v36;
  swift_setDeallocating(v28);
  swift_arrayDestroy(v28 + 32, *(_QWORD *)(v28 + 16), v78);
  swift_bridgeObjectRelease(v40);
  v41 = swift_initStackObject(v13, &v90);
  v42 = v30;
  v43 = v41;
  *(_OWORD *)(v41 + 16) = v77;
  *(_QWORD *)(v41 + 32) = v42;
  v44 = v41 + 32;
  v45 = (void *)qword_1004966A8;
  *(_QWORD *)(v41 + 40) = qword_1004966A8;
  v46 = qword_10048CE30;
  *(_QWORD *)&v77 = v42;
  v47 = v45;
  if (v46 != -1)
    swift_once(&qword_10048CE30, sub_1001EAC34);
  v48 = (void *)qword_1004966B8;
  *(_QWORD *)(v43 + 48) = qword_1004966B8;
  v49 = v48;
  sub_1001E8D00(v43);
  v51 = v50;
  swift_setDeallocating(v43);
  swift_arrayDestroy(v44, *(_QWORD *)(v43 + 16), v78);
  swift_bridgeObjectRelease(v51);
  v52 = swift_initStackObject(v13, &v89);
  *(_OWORD *)(v52 + 16) = v82;
  v53 = (void *)v77;
  *(_QWORD *)(v52 + 32) = v77;
  v54 = qword_10048CE18;
  v55 = v53;
  if (v54 != -1)
    swift_once(&qword_10048CE18, sub_1001EAB9C);
  v56 = (void *)qword_1004966A0;
  *(_QWORD *)(v52 + 40) = qword_1004966A0;
  v57 = v56;
  v59 = sub_1001E8D00(v52);
  v61 = v60;
  swift_setDeallocating(v52);
  swift_arrayDestroy(v52 + 32, *(_QWORD *)(v52 + 16), v78);
  v78 = v59;
  v87 = (void *)v59;
  v88 = v61;
  *(_QWORD *)&v82 = v61;
  v85 = 0x7D646E696B7BLL;
  v86 = 0xE600000000000000;
  v62 = 0x6D75626C61;
  if ((v80 & 1) != 0)
  {
    v63 = 0xE500000000000000;
  }
  else
  {
    v62 = 0x747369747261;
    v63 = 0xE600000000000000;
  }
  v83 = v62;
  v84 = v63;
  v64 = sub_10000D478();
  v65 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v85, &v83, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v64, v64, v64);
  v67 = v66;
  swift_bridgeObjectRelease(v63);
  v87 = (void *)v65;
  v88 = v67;
  v85 = 2103732603;
  v86 = 0xE400000000000000;
  v83 = v81;
  v84 = v93;
  v68 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(&v85, &v83, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v64, v64, v64);
  v70 = v69;
  swift_bridgeObjectRelease(v67);
  URL.init(string:)(v68, v70);
  swift_bridgeObjectRelease(v70);
  v71 = type metadata accessor for URL(0);
  v72 = *(_QWORD *)(v71 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v11, 1, v71) == 1)
  {
    sub_100008758((uint64_t)v11, &qword_10048D510);
    v73 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v73, 0, 0);
    v74 = v82;
    *(_QWORD *)v75 = v78;
    *(_QWORD *)(v75 + 8) = v74;
    v76 = v93;
    *(_QWORD *)(v75 + 16) = v81;
    *(_QWORD *)(v75 + 24) = v76;
    *(_BYTE *)(v75 + 32) = 1;
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  swift_bridgeObjectRelease(v82);

  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v79, v11, v71);
}

uint64_t ClassicalBridge.Type.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D75626C61;
  else
    return 0x747369747261;
}

MusicCore::ClassicalBridge::Type_optional __swiftcall ClassicalBridge.Type.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicCore::ClassicalBridge::Type_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043F190, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicCore_ClassicalBridge_Type_album;
  else
    v4.value = MusicCore_ClassicalBridge_Type_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_1001E9E24(char *a1, char *a2)
{
  return sub_100028720(*a1, *a2);
}

Swift::Int sub_1001E9E30()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6D75626C61;
  else
    v2 = 0x747369747261;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001E9EA8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6D75626C61;
  else
    v2 = 0x747369747261;
  if (*v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001E9EFC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x6D75626C61;
  else
    v2 = 0x747369747261;
  if (v1)
    v3 = 0xE500000000000000;
  else
    v3 = 0xE600000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001E9F70@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10043F190, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001E9FCC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x747369747261;
  if (*v1)
    v2 = 0x6D75626C61;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t static ClassicalBridge.generatePrestoURL(forModelObject:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;

  objc_opt_self(MPModelAlbum);
  v4 = (void *)swift_dynamicCastObjCClass(a1);
  if (v4)
  {
    v5 = a1;
    v6 = objc_msgSend(v4, "identifiers");
    v7 = objc_msgSend(v6, "universalStore");
  }
  else
  {
    objc_opt_self(MPModelArtist);
    v8 = swift_dynamicCastObjCClass(a1);
    if (!v8)
    {
      v19 = sub_10005BBB4();
      swift_allocError(&type metadata for ClassicalBridge.Error, v19, 0, 0);
      v18 = 3;
      goto LABEL_9;
    }
    v9 = (void *)v8;
    v5 = a1;
    v6 = objc_msgSend(v9, "identifiers");
    v7 = objc_msgSend(v6, "universalStore");
  }
  v10 = v7;

  if (v10)
  {
    objc_msgSend(v10, "adamID");
    v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int64, &protocol witness table for Int64);
    v13 = v12;
    swift_unknownObjectRelease(v10);

    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(v4 != 0, v11, v13, a2);
    return swift_bridgeObjectRelease();
  }

  v15 = sub_10005BBB4();
  swift_allocError(&type metadata for ClassicalBridge.Error, v15, 0, 0);
  v18 = 4;
LABEL_9:
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_BYTE *)(v16 + 32) = 2;
  return swift_willThrow(v17);
}

uint64_t sub_1001EA1D4()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_100496690 = result;
  return result;
}

char *sub_1001EA1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v21;

  *(_QWORD *)&v5[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_applicationRecordObserver] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_storeProductViewController], 0);
  v11 = &v5[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_app];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = a2;
  *((_QWORD *)v11 + 2) = a3;
  v12 = &v5[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_applicationInstalledBlock];
  *(_QWORD *)v12 = a4;
  *((_QWORD *)v12 + 1) = a5;
  v21.receiver = v5;
  v21.super_class = (Class)_s23StoreProductCoordinatorCMa();
  swift_retain(a5);
  v13 = (char *)objc_msgSendSuper2(&v21, "init");
  v14 = (void *)*NSNotificationName.applicationRegistered.unsafeMutableAddressor();
  v15 = swift_allocObject(&unk_100455398, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v13);
  v16 = type metadata accessor for NotificationObserver();
  swift_allocObject(v16, 64, 7);
  v17 = v14;
  swift_retain(v15);
  v18 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v17, 0, 1, 0, (uint64_t)sub_1001EC8DC, v15);
  swift_release(v15);

  swift_release(a5);
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_applicationRecordObserver];
  *(_QWORD *)&v13[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_applicationRecordObserver] = v18;
  swift_release(v19);
  return v13;
}

void sub_1001EA358(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  _BYTE v18[24];

  v3 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_app);
    v9 = *(_QWORD *)(Strong
                   + OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_app
                   + 8);
    swift_bridgeObjectRetain();
    LOBYTE(v8) = static ApplicationRecordUtilities.isApplicationInstalled(identifier:)(v8, v9);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      v10 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
      v11 = (_QWORD *)swift_allocObject(&unk_1004553C0, 40, 7);
      v11[2] = 0;
      v11[3] = 0;
      v11[4] = v7;
      v12 = v7;
      v13 = sub_1000C66A8((uint64_t)v5, (uint64_t)&unk_1004967C0, (uint64_t)v11);
      swift_release(v13);
      v14 = (void *)swift_unknownObjectWeakLoadStrong(&v12[OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_storeProductViewController]);
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "presentingViewController");

        if (v16)
        {
          objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, 0);

        }
      }
    }

  }
}

uint64_t sub_1001EA4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_1001EA4EC, 0, 0);
}

uint64_t sub_1001EA4EC()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = v0[3]
     + OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_applicationInstalledBlock;
  v2 = *(int **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v0[4] = v3;
  v4 = v2[1];
  v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  swift_retain(v3);
  v5 = (_QWORD *)swift_task_alloc(v4);
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_1001EA564;
  return v7();
}

uint64_t sub_1001EA564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001EA5F8;
  else
    v3 = sub_1001EA5C8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001EA5C8()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 32));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_1001EA5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v15;

  swift_release(*(_QWORD *)(v0 + 32));
  if (qword_10048CE38 != -1)
    swift_once(&qword_10048CE38, sub_1001EAC60);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = type metadata accessor for Logger(0, v1);
  sub_1000086B4(v3, (uint64_t)static Logger.classicalBridge);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 48);
  if (v7)
  {
    v9 = swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v0 + 16) = v8;
    swift_errorRetain(v8);
    v11 = sub_100005574((uint64_t *)&unk_1004911F0);
    v12 = (char *)String.init<A>(describing:)(v0 + 16, v11);
    *(_QWORD *)(v9 + 4) = sub_100019400(v12, v13, &v15);
    swift_bridgeObjectRelease();
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not execute applicationInstalledBlock, error: %s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 48));
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Logger.classicalBridge.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048CE38 != -1)
    swift_once(&qword_10048CE38, sub_1001EAC60);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.classicalBridge);
}

uint64_t sub_1001EA80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[26] = a4;
  v5[27] = a5;
  v5[25] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[28] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[29] = v7;
  v5[30] = v8;
  return swift_task_switch(sub_1001EA87C, v7, v8);
}

uint64_t sub_1001EA87C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0 + 2;
  v2 = (void *)v0[26];
  v3 = v0[27];
  v4 = sub_100005574(&qword_1004967B0);
  inited = swift_initStackObject(v4, v0 + 10);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(SKStoreProductParameterITunesItemIdentifier);
  *(_QWORD *)(inited + 40) = v6;
  v7 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_app
                 + 16);
  *(_QWORD *)(inited + 72) = &type metadata for Int64;
  *(_QWORD *)(inited + 48) = v7;
  sub_100098D5C(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v0[31] = isa;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 33;
  v0[2] = v0;
  v0[3] = sub_1001EA9BC;
  v9 = swift_continuation_init(v0 + 2, 1);
  v0[20] = _NSConcreteStackBlock;
  v10 = v0 + 20;
  v10[1] = 0x40000000;
  v10[2] = sub_10016ABFC;
  v10[3] = &unk_100455370;
  v10[4] = v9;
  objc_msgSend(v2, "loadProductWithParameters:completionBlock:", isa, v10);
  return swift_continuation_await(v1);
}

uint64_t sub_1001EA9BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 256) = v2;
  if (v2)
    v3 = sub_1001EAA60;
  else
    v3 = sub_1001EAA18;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_1001EAA18()
{
  uint64_t v0;
  void *v1;
  _BYTE *v2;

  v1 = *(void **)(v0 + 248);
  v2 = *(_BYTE **)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 224));
  *v2 = *(_BYTE *)(v0 + 264);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EAA60()
{
  uint64_t v0;
  void *v1;
  __n128 v2;

  v1 = *(void **)(v0 + 248);
  v2 = swift_release(*(_QWORD *)(v0 + 224));
  swift_willThrow(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1001EAAD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s23StoreProductCoordinatorCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

NSString sub_1001EAB68()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100496698 = (uint64_t)result;
  return result;
}

NSString sub_1001EAB9C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1004966A0 = (uint64_t)result;
  return result;
}

NSString sub_1001EABD0()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1004966A8 = (uint64_t)result;
  return result;
}

NSString sub_1001EAC04()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1004966B0 = (uint64_t)result;
  return result;
}

NSString sub_1001EAC34()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1004966B8 = (uint64_t)result;
  return result;
}

uint64_t sub_1001EAC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.classicalBridge);
  sub_1000086B4(v2, (uint64_t)static Logger.classicalBridge);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000010, 0x80000001003B6420);
}

uint64_t static Logger.classicalBridge.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048CE38 != -1)
    swift_once(&qword_10048CE38, sub_1001EAC60);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.classicalBridge);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

_QWORD *sub_1001EAD50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100005574(&qword_10048DAB0);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

unsigned __int8 *sub_1001EADB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_1001EB114(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease();
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_1001EAE98(v8, v9, a3);
  swift_bridgeObjectRelease();
  return v12;
}

unsigned __int8 *sub_1001EAE98(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1001EB114(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v8 = sub_1001EB190(v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1001EB190(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1001EB2D4(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_1001EAD50(v12, 0);
      v5 = sub_1001EB3C0((unint64_t)v14, v8 + 32, v9, a1, a2, v5, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v13 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v13;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v14 + v8, v9 - v8);
  }
}

unint64_t sub_1001EB2D4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_10018F878(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_10018F878(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }
  __break(1u);
  return result;
}

unint64_t sub_1001EB3C0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_10018F878(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_10018F878(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1001EB5D0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[17] = a1;
  v2[18] = a2;
  v3 = sub_100005574((uint64_t *)&unk_100493720);
  v2[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v2[20] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[21] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[22] = v6;
  v2[23] = swift_task_alloc((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[24] = v7;
  v2[25] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[26] = v8;
  v2[27] = v9;
  return swift_task_switch(sub_1001EB690, v8, v9);
}

id sub_1001EB690()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t inited;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void **p_cache;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  id result;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  uint64_t v73;
  unsigned __int8 *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[3];

  if (qword_10048C720 != -1)
    swift_once(&qword_10048C720, sub_1000C378C);
  sub_100005574(&qword_100490BA0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000D460);
  v1 = (void *)v0[16];
  v0[28] = v1;
  if (!v1)
  {
    swift_release(v0[25]);
    v14 = sub_10005BBB4();
    swift_allocError(&type metadata for ClassicalBridge.Error, v14, 0, 0);
    *(_OWORD *)v15 = 0u;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_BYTE *)(v15 + 32) = 2;
    swift_willThrow((__n128)0);
LABEL_13:
    v29 = v0[19];
    swift_task_dealloc(v0[23]);
    swift_task_dealloc(v29);
    v30 = (uint64_t (*)(void))v0[1];
    return (id)v30();
  }
  v2 = sub_100005574(&qword_10048E820);
  inited = swift_initStackObject(v2, v0 + 2);
  v89 = 3;
  *(_OWORD *)(inited + 16) = xmmword_100384A40;
  v4 = (void *)ICURLBagKeyMusicCommon;
  *(_QWORD *)(inited + 32) = ICURLBagKeyMusicCommon;
  v5 = inited + 32;
  v6 = qword_10048CE20;
  v7 = v4;
  if (v6 != -1)
    swift_once(&qword_10048CE20, sub_1001EABD0);
  p_cache = _TtC9MusicCoreP33_4D3C9D6548BB3147DD0F1D268040B2BF26CodableListeningProperties.cache;
  v9 = (void *)qword_1004966A8;
  *(_QWORD *)(inited + 40) = qword_1004966A8;
  v10 = qword_10048CE28;
  v11 = v9;
  if (v10 != -1)
    swift_once(&qword_10048CE28, sub_1001EAC04);
  v12 = (void *)qword_1004966B0;
  *(_QWORD *)(inited + 48) = qword_1004966B0;
  v13 = v12;
  v87 = sub_1001E8D00(inited);
  v88 = v16;
  swift_setDeallocating(inited);
  v17 = *(_QWORD *)(inited + 16);
  type metadata accessor for ICURLBagKey(0);
  v19 = v18;
  swift_arrayDestroy(v5, v17, v18);
  v20 = swift_initStackObject(v2, v0 + 9);
  *(_OWORD *)(v20 + 16) = xmmword_100384A40;
  *(_QWORD *)(v20 + 32) = v7;
  v21 = (void *)qword_1004966A8;
  *(_QWORD *)(v20 + 40) = qword_1004966A8;
  v22 = qword_10048CE30;
  v23 = v7;
  v24 = v21;
  if (v22 != -1)
    swift_once(&qword_10048CE30, sub_1001EAC34);
  v25 = (void *)qword_1004966B8;
  *(_QWORD *)(v20 + 48) = qword_1004966B8;
  v26 = v25;
  v27 = sub_1001E8D00(v20);
  v0[29] = v28;
  v32 = v27;
  v33 = v28;
  swift_setDeallocating(v20);
  swift_arrayDestroy(v20 + 32, *(_QWORD *)(v20 + 16), v19);
  v34 = HIBYTE(v33) & 0xF;
  v35 = v32 & 0xFFFFFFFFFFFFLL;
  if ((v33 & 0x2000000000000000) != 0)
    v36 = HIBYTE(v33) & 0xF;
  else
    v36 = v32 & 0xFFFFFFFFFFFFLL;
  if (!v36)
    goto LABEL_81;
  if ((v33 & 0x1000000000000000) == 0)
  {
    if ((v33 & 0x2000000000000000) == 0)
    {
      if ((v32 & 0x1000000000000000) != 0)
        v37 = (unsigned __int8 *)((v33 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v37 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v32, v33);
      v38 = sub_1001EAE98(v37, v35, 10);
      if ((v39 & 1) == 0)
      {
        v40 = (uint64_t)v38;
        goto LABEL_51;
      }
      goto LABEL_81;
    }
    v90[0] = v32;
    v90[1] = v33 & 0xFFFFFFFFFFFFFFLL;
    if (v32 == 43)
    {
      if (!v34)
        goto LABEL_85;
      if (v34 == 1)
        goto LABEL_83;
      if ((BYTE1(v32) - 48) > 9u)
        goto LABEL_47;
      v40 = (BYTE1(v32) - 48);
      if (v34 != 2)
      {
        if ((BYTE2(v32) - 48) > 9u)
          goto LABEL_47;
        v40 = 10 * (BYTE1(v32) - 48) + (BYTE2(v32) - 48);
        v41 = v34 - 3;
        if (v34 != 3)
        {
          v42 = (unsigned __int8 *)v90 + 3;
          while (1)
          {
            v43 = *v42 - 48;
            if (v43 > 9)
              goto LABEL_47;
            v44 = 10 * v40;
            if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63)
              goto LABEL_47;
            v40 = v44 + v43;
            if (__OFADD__(v44, v43))
              goto LABEL_47;
            LOBYTE(v34) = 0;
            ++v42;
            if (!--v41)
              goto LABEL_50;
          }
        }
      }
    }
    else
    {
      if (v32 == 45)
      {
        if (v34)
        {
          if (v34 != 1)
          {
            if ((BYTE1(v32) - 48) > 9u)
              goto LABEL_47;
            if (v34 == 2)
            {
              LOBYTE(v34) = 0;
              v40 = -(uint64_t)(BYTE1(v32) - 48);
              goto LABEL_50;
            }
            if ((BYTE2(v32) - 48) > 9u)
              goto LABEL_47;
            v40 = -10 * (BYTE1(v32) - 48) - (BYTE2(v32) - 48);
            v77 = v34 - 3;
            if (v34 != 3)
            {
              v78 = (unsigned __int8 *)v90 + 3;
              while (1)
              {
                v79 = *v78 - 48;
                if (v79 > 9)
                  goto LABEL_47;
                v80 = 10 * v40;
                if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63)
                  goto LABEL_47;
                v40 = v80 - v79;
                if (__OFSUB__(v80, v79))
                  goto LABEL_47;
                LOBYTE(v34) = 0;
                ++v78;
                if (!--v77)
                  goto LABEL_50;
              }
            }
            goto LABEL_49;
          }
LABEL_83:
          v40 = 0;
LABEL_50:
          if ((v34 & 1) == 0)
            goto LABEL_51;
LABEL_81:
          swift_release(v0[25]);
          swift_bridgeObjectRelease();
          v84 = sub_10005BBB4();
          swift_allocError(&type metadata for ClassicalBridge.Error, v84, 0, 0);
          *(_QWORD *)v85 = v32;
          *(_QWORD *)(v85 + 8) = v33;
          *(_QWORD *)(v85 + 16) = 0;
          *(_QWORD *)(v85 + 24) = 0;
          *(_BYTE *)(v85 + 32) = 0;
          swift_willThrow(v86);

          goto LABEL_13;
        }
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        swift_once(&qword_10048CE08, sub_1001EA1D4);
        goto LABEL_55;
      }
      if (!v34 || (v32 - 48) > 9u)
      {
LABEL_47:
        v40 = 0;
        LOBYTE(v34) = 1;
        goto LABEL_50;
      }
      v40 = (v32 - 48);
      if (v34 != 1)
      {
        if ((BYTE1(v32) - 48) > 9u)
          goto LABEL_47;
        v40 = 10 * (v32 - 48) + (BYTE1(v32) - 48);
        v73 = v34 - 2;
        if (v34 != 2)
        {
          v74 = (unsigned __int8 *)v90 + 2;
          while (1)
          {
            v75 = *v74 - 48;
            if (v75 > 9)
              goto LABEL_47;
            v76 = 10 * v40;
            if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63)
              goto LABEL_47;
            v40 = v76 + v75;
            if (__OFADD__(v76, v75))
              goto LABEL_47;
            LOBYTE(v34) = 0;
            ++v74;
            if (!--v73)
              goto LABEL_50;
          }
        }
      }
    }
LABEL_49:
    LOBYTE(v34) = 0;
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  v40 = (uint64_t)sub_1001EADB4(v32, v33, 10);
  v83 = v82;
  swift_bridgeObjectRelease();
  if ((v83 & 1) != 0)
    goto LABEL_81;
LABEL_51:
  if ((static ApplicationRecordUtilities.isApplicationInstalled(identifier:)(v87, v88) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = (_QWORD *)swift_task_alloc(dword_100496794);
    v0[30] = v45;
    *v45 = v0;
    v45[1] = sub_1001EC048;
    return (id)sub_1001E90CC(v0[17]);
  }
  v46 = (void *)v0[18];
  if (!v46)
  {
    swift_bridgeObjectRelease();
    v72 = (_QWORD *)swift_task_alloc(dword_10049678C);
    v0[32] = v72;
    *v72 = v0;
    v72[1] = sub_1001EC0F8;
    return (id)sub_1001E92FC(v32, v33);
  }
  v47 = v0[25];
  v48 = v0[22];
  v49 = v0[23];
  v51 = v0[20];
  v50 = v0[21];
  v52 = v0[17];
  v89 = v46;
  swift_release(v47);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v52, v51);
  v53 = *(unsigned __int8 *)(v50 + 80);
  v54 = (v53 + 16) & ~v53;
  v55 = swift_allocObject(&unk_100455330, v54 + v48, v53 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v55 + v54, v49, v51);
  v56 = objc_allocWithZone((Class)_s23StoreProductCoordinatorCMa());
  v57 = sub_1001EA1F8(v87, v88, v40, (uint64_t)&unk_100496798, v55);
  v19 = objc_msgSend(objc_allocWithZone((Class)SKStoreProductViewController), "init");
  objc_msgSend(v19, "setDelegate:", v57);
  v58 = qword_10048CE08;
  p_cache = v57;
  if (v58 != -1)
    goto LABEL_86;
LABEL_55:
  v59 = v0[19];
  objc_setAssociatedObject(v19, (const void *)qword_100496690, p_cache, (void *)1);

  v60 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = p_cache;
  v62 = v19;
  v63 = static MainActor.shared.getter(v62);
  v64 = (_QWORD *)swift_allocObject(&unk_100455358, 48, 7);
  v64[2] = v63;
  v64[3] = &protocol witness table for MainActor;
  v64[4] = v62;
  v64[5] = v61;
  v65 = sub_1001AD360(v59, (uint64_t)&unk_1004967A8, (uint64_t)v64);
  swift_release(v65);
  swift_unknownObjectWeakAssign((char *)v61+ OBJC_IVAR____TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator_storeProductViewController, v62);
  result = objc_msgSend(v62, "view");
  if (result)
  {
    v66 = result;
    v67 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    objc_msgSend(v66, "setTintColor:", v67);

    v68 = (id)v89;
    v69 = objc_msgSend(v68, "presentedViewController");
    v70 = v68;
    if (v69)
    {
      v71 = v68;
      while (1)
      {
        v70 = v69;
        if (!objc_msgSend(v69, "canPresentViewControllers", v87))
          break;

        v69 = objc_msgSend(v70, "presentedViewController");
        v71 = v70;
        if (!v69)
          goto LABEL_79;
      }

      v70 = v71;
    }
LABEL_79:
    objc_msgSend(v70, "presentViewController:animated:completion:", v62, 1, 0, v87);

    v81 = v0[19];
    swift_task_dealloc(v0[23]);
    swift_task_dealloc(v81);
    v30 = (uint64_t (*)(void))v0[1];
    return (id)v30();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EC048()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 240);
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1001EC164;
  else
    v4 = sub_1001EC0A8;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
}

uint64_t sub_1001EC0A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 200));

  v2 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EC0F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(_QWORD *)(v2 + 216);
    v6 = sub_1001EC1B4;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v2 + 208);
    v5 = *(_QWORD *)(v2 + 216);
    v6 = sub_1001EC970;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001EC164()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 224);
  swift_release(*(_QWORD *)(v0 + 200));

  v2 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001EC1B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  swift_release(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(v2);

  v3 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001EC210()
{
  unint64_t result;

  result = qword_1004966D8;
  if (!qword_1004966D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ClassicalBridge.Type, &type metadata for ClassicalBridge.Type);
    atomic_store(result, (unint64_t *)&qword_1004966D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassicalBridge()
{
  return &type metadata for ClassicalBridge;
}

uint64_t storeEnumTagSinglePayload for ClassicalBridge.Type(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001EC2B0 + 4 * byte_100391E95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001EC2E4 + 4 * byte_100391E90[v4]))();
}

uint64_t sub_1001EC2E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EC2EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001EC2F4);
  return result;
}

uint64_t sub_1001EC300(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001EC308);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001EC30C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EC314(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassicalBridge.Type()
{
  return &type metadata for ClassicalBridge.Type;
}

uint64_t _s23StoreProductCoordinatorCMa()
{
  return objc_opt_self(_TtCE9MusicCoreCSo28SKStoreProductViewControllerP33_2120E9B2F4E5B8C48C07BDF209A3517523StoreProductCoordinator);
}

_QWORD *sub_1001EC354(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s23StoreProductCoordinatorC3AppVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  return a1;
}

_QWORD *_s23StoreProductCoordinatorC3AppVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

uint64_t _s23StoreProductCoordinatorC3AppVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s23StoreProductCoordinatorC3AppVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s23StoreProductCoordinatorC3AppVMa()
{
  return &_s23StoreProductCoordinatorC3AppVN;
}

uint64_t sub_1001EC4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5)
  {
    if (a5 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ClassicalBridge.Error(uint64_t a1)
{
  return sub_1001EC510(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1001EC510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (!a5)
    return swift_bridgeObjectRelease(a2);
  if (a5 == 1)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t initializeWithCopy for ClassicalBridge.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1001EC4B0(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ClassicalBridge.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1001EC4B0(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1001EC510(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ClassicalBridge.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1001EC510(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassicalBridge.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassicalBridge.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001EC704(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1001EC71C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClassicalBridge.Error()
{
  return &type metadata for ClassicalBridge.Error;
}

uint64_t sub_1001EC748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001EC7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_100496794);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000EA88;
  return sub_1001E90CC(v3);
}

uint64_t sub_1001EC80C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001EC840(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1004967A4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001EA80C(a1, v4, v5, v7, v6);
}

uint64_t sub_1001EC8B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001EC8DC(uint64_t a1)
{
  uint64_t v1;

  sub_1001EA358(a1, v1);
}

uint64_t sub_1001EC8E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001EC910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1004967BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000EA88;
  v3[3] = v2;
  return swift_task_switch(sub_1001EA4EC, 0, 0);
}

uint64_t *String.cancelButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE50 != -1)
    swift_once(&qword_10048CE50, sub_1001ECBE8);
  return &static String.cancelButtonTitle;
}

uint64_t *String.doneButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE48 != -1)
    swift_once(&qword_10048CE48, sub_1001ECBAC);
  return &static String.doneButtonTitle;
}

uint64_t *String.okButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE40 != -1)
    swift_once(&qword_10048CE40, sub_1001ECB74);
  return &static String.okButtonTitle;
}

uint64_t *String.notNowButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE60 != -1)
    swift_once(&qword_10048CE60, sub_1001ECCA8);
  return &static String.notNowButtonTitle;
}

uint64_t *AccessibilityString.dolbyAtmosLabel.unsafeMutableAddressor()
{
  if (qword_10048CE98 != -1)
    swift_once(&qword_10048CE98, sub_1001ED5BC);
  return &static AccessibilityString.dolbyAtmosLabel;
}

uint64_t *AccessibilityString.dolbyAudioLabel.unsafeMutableAddressor()
{
  if (qword_10048CEA0 != -1)
    swift_once(&qword_10048CEA0, sub_1001ED608);
  return &static AccessibilityString.dolbyAudioLabel;
}

uint64_t *AccessibilityString.losslessLabel.unsafeMutableAddressor()
{
  if (qword_10048CEB0 != -1)
    swift_once(&qword_10048CEB0, sub_1001ED6A4);
  return &static AccessibilityString.losslessLabel;
}

uint64_t *AccessibilityString.hiResLosslessLabel.unsafeMutableAddressor()
{
  if (qword_10048CEA8 != -1)
    swift_once(&qword_10048CEA8, sub_1001ED654);
  return &static AccessibilityString.hiResLosslessLabel;
}

uint64_t sub_1001ECB74(uint64_t a1)
{
  return sub_1001ECE20(a1, 19279, 0xE200000000000000, &static String.okButtonTitle, &qword_1004A2C70);
}

uint64_t static String.okButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE40, &static String.okButtonTitle);
}

uint64_t sub_1001ECBAC(uint64_t a1)
{
  return sub_1001ECE20(a1, 1701736260, 0xE400000000000000, &static String.doneButtonTitle, &qword_1004A2C80);
}

uint64_t static String.doneButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE48, &static String.doneButtonTitle);
}

uint64_t sub_1001ECBE8(uint64_t a1)
{
  return sub_1001ECE20(a1, 0x6C65636E6143, 0xE600000000000000, &static String.cancelButtonTitle, &qword_1004A2C90);
}

uint64_t static String.cancelButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE50, &static String.cancelButtonTitle);
}

uint64_t sub_1001ECC28(uint64_t a1)
{
  return sub_1001ECE20(a1, 0x6574656C6544, 0xE600000000000000, &static String.deleteButtonTitle, &qword_1004A2CA0);
}

uint64_t *String.deleteButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE58 != -1)
    swift_once(&qword_10048CE58, sub_1001ECC28);
  return &static String.deleteButtonTitle;
}

uint64_t static String.deleteButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE58, &static String.deleteButtonTitle);
}

uint64_t sub_1001ECCA8(uint64_t a1)
{
  return sub_1001ECE20(a1, 0x776F4E20746F4ELL, 0xE700000000000000, &static String.notNowButtonTitle, &qword_1004A2CB0);
}

uint64_t static String.notNowButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE60, &static String.notNowButtonTitle);
}

uint64_t sub_1001ECCEC(uint64_t a1)
{
  return sub_1001ECE20(a1, 0x7373696D736944, 0xE700000000000000, &static String.dismissButtonTitle, &qword_1004A2CC0);
}

uint64_t *String.dismissButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE68 != -1)
    swift_once(&qword_10048CE68, sub_1001ECCEC);
  return &static String.dismissButtonTitle;
}

uint64_t static String.dismissButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE68, &static String.dismissButtonTitle);
}

uint64_t sub_1001ECD70(uint64_t a1)
{
  return sub_1001ECE20(a1, 0xD000000000000014, 0x80000001003B65B0, &static String.removeDownloadButtonTitle, &qword_1004A2CD0);
}

uint64_t *String.removeDownloadButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE70 != -1)
    swift_once(&qword_10048CE70, sub_1001ECD70);
  return &static String.removeDownloadButtonTitle;
}

uint64_t static String.removeDownloadButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE70, &static String.removeDownloadButtonTitle);
}

uint64_t sub_1001ECDF8(uint64_t a1)
{
  return sub_1001ECE20(a1, 0x6961674120797254, 0xE90000000000006ELL, &static String.tryAgainButtonTitle, &qword_1004A2CE0);
}

uint64_t sub_1001ECE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _BYTE v24[16];

  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v18 = &v24[-v17];
  String.LocalizationValue.init(stringLiteral:)(a2, a3);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v16, v18, v12);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v19 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v20 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v19, v11, 0, 0, 256);
  v22 = v21;
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v18, v12);
  *a4 = v20;
  *a5 = v22;
  return result;
}

uint64_t *String.tryAgainButtonTitle.unsafeMutableAddressor()
{
  if (qword_10048CE78 != -1)
    swift_once(&qword_10048CE78, sub_1001ECDF8);
  return &static String.tryAgainButtonTitle;
}

uint64_t static String.tryAgainButtonTitle.getter()
{
  return sub_1001E5978(&qword_10048CE78, &static String.tryAgainButtonTitle);
}

uint64_t static String.socialDisconnectMessage(networkName:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v13 = &v25[-v12];
  v14 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v14);
  v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(119, 2);
  v17._object = (void *)0x80000001003B64D0;
  v17._countAndFlagsBits = 0xD000000000000017;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  v18._countAndFlagsBits = a1;
  v18._object = a2;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v18);
  v19._countAndFlagsBits = 0xD00000000000005FLL;
  v19._object = (void *)0x80000001003B64F0;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  v20._countAndFlagsBits = a1;
  v20._object = a2;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v20);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
  String.LocalizationValue.init(stringInterpolation:)(v16);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v22 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v23 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v22, v6, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v23;
}

uint64_t MPModelTVShow.localizedEpisodeCount.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v20 - v10;
  v12 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
  v21 = objc_msgSend(v1, "episodesCount");
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v21, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v16._countAndFlagsBits = 0x65646F7369704520;
  v16._object = (void *)0xEB00000000297328;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  String.LocalizationValue.init(stringInterpolation:)(v14);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v17 = qword_1004A1DA0;
  static Locale.current.getter((id)qword_1004A1DA0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v17, v4, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v18;
}

uint64_t sub_1001ED420(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x7241206D75626C41, 0xED00006B726F7774, &static AccessibilityString.albumArtworkLabel, &qword_1004A2CF0);
}

uint64_t *AccessibilityString.albumArtworkLabel.unsafeMutableAddressor()
{
  if (qword_10048CE80 != -1)
    swift_once(&qword_10048CE80, sub_1001ED420);
  return &static AccessibilityString.albumArtworkLabel;
}

uint64_t static AccessibilityString.albumArtworkLabel.getter()
{
  return sub_1001E5978(&qword_10048CE80, &static AccessibilityString.albumArtworkLabel);
}

uint64_t sub_1001ED4B0(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0xD000000000000010, 0x80000001003B6590, &static AccessibilityString.playlistArtworkLabel, &qword_1004A2D00);
}

uint64_t *AccessibilityString.playlistArtworkLabel.unsafeMutableAddressor()
{
  if (qword_10048CE88 != -1)
    swift_once(&qword_10048CE88, sub_1001ED4B0);
  return &static AccessibilityString.playlistArtworkLabel;
}

uint64_t static AccessibilityString.playlistArtworkLabel.getter()
{
  return sub_1001E5978(&qword_10048CE88, &static AccessibilityString.playlistArtworkLabel);
}

uint64_t sub_1001ED538(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x65646F43205251, 0xE700000000000000, &static AccessibilityString.qrCodeButtonLabel, &qword_1004A2D10);
}

uint64_t *AccessibilityString.qrCodeButtonLabel.unsafeMutableAddressor()
{
  if (qword_10048CE90 != -1)
    swift_once(&qword_10048CE90, sub_1001ED538);
  return &static AccessibilityString.qrCodeButtonLabel;
}

uint64_t static AccessibilityString.qrCodeButtonLabel.getter()
{
  return sub_1001E5978(&qword_10048CE90, &static AccessibilityString.qrCodeButtonLabel);
}

uint64_t sub_1001ED5BC(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x74412079626C6F44, 0xEB00000000736F6DLL, &static AccessibilityString.dolbyAtmosLabel, &qword_1004A2D20);
}

uint64_t static AccessibilityString.dolbyAtmosLabel.getter()
{
  return sub_1001E5978(&qword_10048CE98, &static AccessibilityString.dolbyAtmosLabel);
}

uint64_t sub_1001ED608(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x75412079626C6F44, 0xEB000000006F6964, &static AccessibilityString.dolbyAudioLabel, &qword_1004A2D30);
}

uint64_t static AccessibilityString.dolbyAudioLabel.getter()
{
  return sub_1001E5978(&qword_10048CEA0, &static AccessibilityString.dolbyAudioLabel);
}

uint64_t sub_1001ED654(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x4C207365522D6948, 0xEF7373656C73736FLL, &static AccessibilityString.hiResLosslessLabel, &qword_1004A2D40);
}

uint64_t static AccessibilityString.hiResLosslessLabel.getter()
{
  return sub_1001E5978(&qword_10048CEA8, &static AccessibilityString.hiResLosslessLabel);
}

uint64_t sub_1001ED6A4(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x7373656C73736F4CLL, 0xE800000000000000, &static AccessibilityString.losslessLabel, &qword_1004A2D50);
}

uint64_t static AccessibilityString.losslessLabel.getter()
{
  return sub_1001E5978(&qword_10048CEB0, &static AccessibilityString.losslessLabel);
}

uint64_t sub_1001ED6E8(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0xD000000000000010, 0x80000001003B6570, &static AccessibilityString.favoriteBadgeLabel, &qword_1004A2D60);
}

uint64_t *AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor()
{
  if (qword_10048CEB8 != -1)
    swift_once(&qword_10048CEB8, sub_1001ED6E8);
  return &static AccessibilityString.favoriteBadgeLabel;
}

uint64_t static AccessibilityString.favoriteBadgeLabel.getter()
{
  return sub_1001E5978(&qword_10048CEB8, &static AccessibilityString.favoriteBadgeLabel);
}

uint64_t sub_1001ED770(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x72616C75706F50, 0xE700000000000000, &static AccessibilityString.popularBadgeLabel, &qword_1004A2D70);
}

uint64_t *AccessibilityString.popularBadgeLabel.unsafeMutableAddressor()
{
  if (qword_10048CEC0 != -1)
    swift_once(&qword_10048CEC0, sub_1001ED770);
  return &static AccessibilityString.popularBadgeLabel;
}

uint64_t static AccessibilityString.popularBadgeLabel.getter()
{
  return sub_1001E5978(&qword_10048CEC0, &static AccessibilityString.popularBadgeLabel);
}

uint64_t sub_1001ED7F4(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x76697372656D6D49, 0xE900000000000065, &static AccessibilityString.immersiveBadgeLabel, &qword_1004A2D80);
}

uint64_t *AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor()
{
  if (qword_10048CEC8 != -1)
    swift_once(&qword_10048CEC8, sub_1001ED7F4);
  return &static AccessibilityString.immersiveBadgeLabel;
}

uint64_t static AccessibilityString.immersiveBadgeLabel.getter()
{
  return sub_1001E5978(&qword_10048CEC8, &static AccessibilityString.immersiveBadgeLabel);
}

uint64_t sub_1001ED87C(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0xD000000000000012, 0x80000001003B6550, &static AccessibilityString.downloadedBadgeLabel, &qword_1004A2D90);
}

uint64_t *AccessibilityString.downloadedBadgeLabel.unsafeMutableAddressor()
{
  if (qword_10048CED0 != -1)
    swift_once(&qword_10048CED0, sub_1001ED87C);
  return &static AccessibilityString.downloadedBadgeLabel;
}

uint64_t static AccessibilityString.downloadedBadgeLabel.getter()
{
  return sub_1001E5978(&qword_10048CED0, &static AccessibilityString.downloadedBadgeLabel);
}

uint64_t sub_1001ED904(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x79616C5020776F4ELL, 0xEB00000000676E69, &static AccessibilityString.nowPlayingWafeformLabel, &qword_1004A2DA0);
}

uint64_t *AccessibilityString.nowPlayingWafeformLabel.unsafeMutableAddressor()
{
  if (qword_10048CED8 != -1)
    swift_once(&qword_10048CED8, sub_1001ED904);
  return &static AccessibilityString.nowPlayingWafeformLabel;
}

uint64_t static AccessibilityString.nowPlayingWafeformLabel.getter()
{
  return sub_1001E5978(&qword_10048CED8, &static AccessibilityString.nowPlayingWafeformLabel);
}

uint64_t sub_1001ED990(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x646573756150, 0xE600000000000000, &static AccessibilityString.pausedWafeformLabel, &qword_1004A2DB0);
}

uint64_t *AccessibilityString.pausedWafeformLabel.unsafeMutableAddressor()
{
  if (qword_10048CEE0 != -1)
    swift_once(&qword_10048CEE0, sub_1001ED990);
  return &static AccessibilityString.pausedWafeformLabel;
}

uint64_t static AccessibilityString.pausedWafeformLabel.getter()
{
  return sub_1001E5978(&qword_10048CEE0, &static AccessibilityString.pausedWafeformLabel);
}

uint64_t sub_1001EDA10(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x657469726F766146, 0xE800000000000000, &static AccessibilityString.favoriteButtonLabel, &qword_1004A2DC0);
}

uint64_t *AccessibilityString.favoriteButtonLabel.unsafeMutableAddressor()
{
  if (qword_10048CEE8 != -1)
    swift_once(&qword_10048CEE8, sub_1001EDA10);
  return &static AccessibilityString.favoriteButtonLabel;
}

uint64_t static AccessibilityString.favoriteButtonLabel.getter()
{
  return sub_1001E5978(&qword_10048CEE8, &static AccessibilityString.favoriteButtonLabel);
}

uint64_t sub_1001EDA94(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x766146206F646E55, 0xED0000657469726FLL, &static AccessibilityString.undoFavoriteButtonLabel, &qword_1004A2DD0);
}

uint64_t *AccessibilityString.undoFavoriteButtonLabel.unsafeMutableAddressor()
{
  if (qword_10048CEF0 != -1)
    swift_once(&qword_10048CEF0, sub_1001EDA94);
  return &static AccessibilityString.undoFavoriteButtonLabel;
}

uint64_t static AccessibilityString.undoFavoriteButtonLabel.getter()
{
  return sub_1001E5978(&qword_10048CEF0, &static AccessibilityString.undoFavoriteButtonLabel);
}

uint64_t sub_1001EDB24(uint64_t a1)
{
  return sub_1001EDBC4(a1, 2036427856, 0xE400000000000000, &static AccessibilityString.playbackPlayButtonLabel, &qword_1004A2DE0);
}

uint64_t *AccessibilityString.playbackPlayButtonLabel.unsafeMutableAddressor()
{
  if (qword_10048CEF8 != -1)
    swift_once(&qword_10048CEF8, sub_1001EDB24);
  return &static AccessibilityString.playbackPlayButtonLabel;
}

uint64_t static AccessibilityString.playbackPlayButtonLabel.getter()
{
  return sub_1001E5978(&qword_10048CEF8, &static AccessibilityString.playbackPlayButtonLabel);
}

uint64_t sub_1001EDBA0(uint64_t a1)
{
  return sub_1001EDBC4(a1, 0x656C6666756853, 0xE700000000000000, &static AccessibilityString.playbackShuffleButtonLabel, &qword_1004A2DF0);
}

uint64_t sub_1001EDBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v29[16];

  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v14);
  v19 = &v29[-v18];
  __chkstk_darwin(v17);
  v21 = &v29[-v20];
  String.LocalizationValue.init(stringLiteral:)(a2, a3);
  v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16);
  v22(v19, v21, v12);
  if (qword_10048C570 != -1)
    swift_once(&qword_10048C570, sub_10000AD54);
  v23 = (void *)qword_1004A1DA0;
  v22(v16, v19, v12);
  static Locale.current.getter(v23);
  v24 = String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, v23, v11, 0, 0, 256);
  v26 = v25;
  v27 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v27(v19, v12);
  result = ((uint64_t (*)(_BYTE *, uint64_t))v27)(v21, v12);
  *a4 = v24;
  *a5 = v26;
  return result;
}

uint64_t *AccessibilityString.playbackShuffleButtonLabel.unsafeMutableAddressor()
{
  if (qword_10048CF00 != -1)
    swift_once(&qword_10048CF00, sub_1001EDBA0);
  return &static AccessibilityString.playbackShuffleButtonLabel;
}

uint64_t static AccessibilityString.playbackShuffleButtonLabel.getter()
{
  return sub_1001E5978(&qword_10048CF00, &static AccessibilityString.playbackShuffleButtonLabel);
}

id NSUserDefaults.hasSeenDolbyDownloadFirstTimeAlert.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

void NSUserDefaults.hasSeenDolbyDownloadFirstTimeAlert.setter()
{
  sub_1001EE0E0();
}

uint64_t NSUserDefaults.applicationScriptURL.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;

  v7 = 0xD000000000000014;
  v8 = 0x80000001003B65D0;
  v2 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)&v7, (uint64_t)&type metadata for String, v2, &v9);
  if (v10)
  {
    if ((swift_dynamicCast(&v7, &v9, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v3 = v8;
      v4 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0)
        v4 = v7 & 0xFFFFFFFFFFFFLL;
      if (v4)
      {
        URL.init(string:)(v7, v8);
        return swift_bridgeObjectRelease(v3);
      }
      swift_bridgeObjectRelease(v8);
    }
  }
  else
  {
    sub_100098B58((uint64_t)&v9);
  }
  v6 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 1, 1, v6);
}

uint64_t NSUserDefaults.showAllTVShows.getter()
{
  unint64_t v0;
  uint64_t result;
  char v2[16];
  __int128 v3;
  uint64_t v4;

  strcpy(v2, "showAllTVShows");
  v2[15] = -18;
  v0 = sub_10000D478();
  NSUserDefaults.subscript.getter((uint64_t)v2, (uint64_t)&type metadata for String, v0, &v3);
  if (v4)
  {
    result = swift_dynamicCast(v2, &v3, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v2[0];
  }
  else
  {
    sub_100098B58((uint64_t)&v3);
    return 0;
  }
  return result;
}

void (*NSUserDefaults.hasSeenDolbyDownloadFirstTimeAlert.modify(uint64_t a1))(void **a1)
{
  void *v1;
  NSString v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "BOOLForKey:", v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1001EE050;
}

void sub_1001EE050(void **a1)
{
  sub_1001EE1D8(a1);
}

id NSUserDefaults.hasSeenDolbyDownloadConflictAlert.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

void NSUserDefaults.hasSeenDolbyDownloadConflictAlert.setter()
{
  sub_1001EE0E0();
}

void sub_1001EE0E0()
{
  void *v0;
  Class isa;
  id v2;

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setValue:forKey:", isa, v2);

}

void (*NSUserDefaults.hasSeenDolbyDownloadConflictAlert.modify(uint64_t a1))(void **a1)
{
  void *v1;
  NSString v3;
  unsigned __int8 v4;

  *(_QWORD *)a1 = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "BOOLForKey:", v3);

  *(_BYTE *)(a1 + 8) = v4;
  return sub_1001EE1BC;
}

void sub_1001EE1BC(void **a1)
{
  sub_1001EE1D8(a1);
}

void sub_1001EE1D8(void **a1)
{
  void *v1;
  NSString v2;
  Class isa;

  v1 = *a1;
  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setValue:forKey:", isa, v2);

}

char *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor()
{
  if (qword_10048CF08 != -1)
    swift_once(&qword_10048CF08, sub_1001EE2A4);
  return &static DeviceCapabilities.isInternalInstall;
}

id static DeviceCapabilities.hasWAPICapability.getter()
{
  return sub_1001EE2F0((uint64_t (*)(void))&_MobileGestalt_get_wapiCapability);
}

id static DeviceCapabilities.hasCellularDataCapability.getter()
{
  return sub_1001EE2F0((uint64_t (*)(void))&_MobileGestalt_get_cellularDataCapability);
}

uint64_t sub_1001EE2A4()
{
  uint64_t result;

  result = os_variant_has_internal_content("com.apple.Music");
  static DeviceCapabilities.isInternalInstall = result;
  return result;
}

uint64_t static DeviceCapabilities.isInternalInstall.getter()
{
  return sub_1001EE780(&qword_10048CF08, (unsigned __int8 *)&static DeviceCapabilities.isInternalInstall);
}

id static DeviceCapabilities.hasWatchCompanionCapability.getter()
{
  return sub_1001EE2F0((uint64_t (*)(void))&MobileGestalt_get_watchCompanionCapability);
}

id sub_1001EE2F0(uint64_t (*a1)(void))
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v3 = result;
    v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001EE334()
{
  id v0;
  void *v1;
  unsigned int deviceClassNumber;
  unsigned int v3;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    v3 = 0x2030100u >> (8 * deviceClassNumber);
    if (deviceClassNumber >= 4)
      LOBYTE(v3) = 0;
    static DeviceCapabilities.deviceType = v3;
  }
  else
  {
    __break(1u);
  }
}

char *DeviceCapabilities.deviceType.unsafeMutableAddressor()
{
  if (qword_10048CF10 != -1)
    swift_once(&qword_10048CF10, sub_1001EE334);
  return &static DeviceCapabilities.deviceType;
}

uint64_t static DeviceCapabilities.deviceType.getter()
{
  if (qword_10048CF10 != -1)
    swift_once(&qword_10048CF10, sub_1001EE334);
  return static DeviceCapabilities.deviceType;
}

uint64_t sub_1001EE410()
{
  char v0;
  uint64_t result;

  v0 = 0;
  result = MGGetProductType();
  if (result > 2158787295)
  {
    if (result <= 2311900305)
    {
      if (result != 2158787296 && result != 2270970153)
        goto LABEL_17;
    }
    else if (result != 2311900306 && result != 3645319985 && result != 3242623367)
    {
      goto LABEL_17;
    }
  }
  else if (result <= 820711326)
  {
    if (result != 228444038 && result != 502329937)
      goto LABEL_17;
  }
  else if (result != 820711327 && result != 1429914406 && result != 1721691077)
  {
LABEL_17:
    v0 = 1;
  }
  static DeviceCapabilities.supportsHighFrameRateLyricsBackground = v0;
  return result;
}

char *DeviceCapabilities.supportsHighFrameRateLyricsBackground.unsafeMutableAddressor()
{
  if (qword_10048CF18 != -1)
    swift_once(&qword_10048CF18, sub_1001EE410);
  return &static DeviceCapabilities.supportsHighFrameRateLyricsBackground;
}

uint64_t static DeviceCapabilities.supportsHighFrameRateLyricsBackground.getter()
{
  return sub_1001EE780(&qword_10048CF18, (unsigned __int8 *)&static DeviceCapabilities.supportsHighFrameRateLyricsBackground);
}

uint64_t sub_1001EE574()
{
  uint64_t result;

  result = MGGetProductType();
  static DeviceCapabilities.supportsMotionBlur = result != 1325975682;
  return result;
}

char *DeviceCapabilities.supportsMotionBlur.unsafeMutableAddressor()
{
  if (qword_10048CF20 != -1)
    swift_once(&qword_10048CF20, sub_1001EE574);
  return &static DeviceCapabilities.supportsMotionBlur;
}

uint64_t static DeviceCapabilities.supportsMotionBlur.getter()
{
  return sub_1001EE780(&qword_10048CF20, (unsigned __int8 *)&static DeviceCapabilities.supportsMotionBlur);
}

void sub_1001EE5FC()
{
  uint64_t v0;
  BOOL v1;
  BOOL v2;
  id v3;
  void *v4;
  char hevcDecoder8BitSupported;

  v0 = MGGetProductType();
  v1 = v0 != 3707345671 && v0 != 2159747553;
  v2 = v0 != 1119807502 && v1;
  v3 = (id)MobileGestalt_get_current_device();
  if (v3)
  {
    v4 = v3;
    hevcDecoder8BitSupported = MobileGestalt_get_hevcDecoder8BitSupported();

    static DeviceCapabilities.supportsHEIC = v2 & hevcDecoder8BitSupported;
  }
  else
  {
    __break(1u);
  }
}

char *DeviceCapabilities.supportsHEIC.unsafeMutableAddressor()
{
  if (qword_10048CF28 != -1)
    swift_once(&qword_10048CF28, sub_1001EE5FC);
  return &static DeviceCapabilities.supportsHEIC;
}

uint64_t static DeviceCapabilities.supportsHEIC.getter()
{
  return sub_1001EE780(&qword_10048CF28, (unsigned __int8 *)&static DeviceCapabilities.supportsHEIC);
}

void sub_1001EE6E0()
{
  id v0;
  void *v1;
  char hasExtendedColorDisplay;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    hasExtendedColorDisplay = MobileGestalt_get_hasExtendedColorDisplay();

    static DeviceCapabilities.hasExtendedColorDisplay = hasExtendedColorDisplay;
  }
  else
  {
    __break(1u);
  }
}

char *DeviceCapabilities.hasExtendedColorDisplay.unsafeMutableAddressor()
{
  if (qword_10048CF30 != -1)
    swift_once(&qword_10048CF30, sub_1001EE6E0);
  return &static DeviceCapabilities.hasExtendedColorDisplay;
}

uint64_t static DeviceCapabilities.hasExtendedColorDisplay.getter()
{
  return sub_1001EE780(&qword_10048CF30, (unsigned __int8 *)&static DeviceCapabilities.hasExtendedColorDisplay);
}

uint64_t sub_1001EE780(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id static DeviceCapabilitiesObjC.hasWAPICapability.getter(uint64_t a1, uint64_t a2)
{
  id result;
  void *v3;
  uint64_t wapiCapability;

  result = (id)MobileGestalt_get_current_device(a1, a2);
  if (result)
  {
    v3 = result;
    wapiCapability = MobileGestalt_get_wapiCapability();

    return (id)wapiCapability;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s9MusicCore18DeviceCapabilitiesO9diskUsageSDyAC04DiskF8CategoryOs5Int64VGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  int64_t v10;
  void *v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  id v45;
  id v46;
  unsigned __int8 v47;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t result;
  _QWORD *v61;
  int64_t v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v0 = MGCopyAnswer(CFSTR("DiskUsage"), 0);
  if (v0)
  {
    v69 = v0;
    v1 = sub_100005574(&qword_100496800);
    swift_dynamicCast(&v68, &v69, (char *)&type metadata for Swift.AnyObject + 8, v1, 7);
    v2 = v68;
    v3 = sub_10009B1AC((uint64_t)_swiftEmptyArrayStorage);
    v4 = v2 + 64;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(v2 + 64);
    v61 = (_QWORD *)v3;
    v62 = (unint64_t)(v5 + 63) >> 6;
    v8 = (void *)kMGQDiskUsageTotalSystemCapacity;
    v9 = (void *)kMGQDiskUsageTotalSystemAvailable;
    v65 = (void *)kMGQDiskUsageTotalDataCapacity;
    v64 = (void *)kMGQDiskUsageTotalDataAvailable;
    v63 = (void *)kMGQDiskUsageTotalDiskCapacity;
    swift_bridgeObjectRetain();
    v10 = 0;
    v66 = v8;
    v11 = v9;
    if (v7)
      goto LABEL_8;
LABEL_9:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    if (v14 < v62)
    {
      v15 = *(_QWORD *)(v4 + 8 * v14);
      ++v10;
      if (v15)
        goto LABEL_26;
      v10 = v14 + 1;
      if (v14 + 1 >= v62)
        goto LABEL_57;
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (v15)
        goto LABEL_26;
      v10 = v14 + 2;
      if (v14 + 2 >= v62)
        goto LABEL_57;
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (v15)
        goto LABEL_26;
      v10 = v14 + 3;
      if (v14 + 3 >= v62)
        goto LABEL_57;
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (v15)
        goto LABEL_26;
      v10 = v14 + 4;
      if (v14 + 4 >= v62)
        goto LABEL_57;
      v15 = *(_QWORD *)(v4 + 8 * v10);
      if (v15)
      {
LABEL_26:
        v7 = (v15 - 1) & v15;
        for (i = __clz(__rbit64(v15)) + (v10 << 6); ; i = v12 | (v10 << 6))
        {
          v17 = 8 * i;
          v18 = *(void **)(*(_QWORD *)(v2 + 48) + v17);
          v67 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v17);
          if (!v8)
            break;
          type metadata accessor for CFString(0);
          v20 = v19;
          v21 = sub_1001EF01C();
          v22 = v18;
          v23 = v8;
          LOBYTE(v20) = static _CFObject.== infix(_:_:)(v23, v22, v20, v21);

          v9 = v11;
          if ((v20 & 1) != 0)
          {
            v47 = 0;
LABEL_44:

            goto LABEL_45;
          }
          if (v11)
            goto LABEL_32;
LABEL_33:
          if (v65)
          {
            type metadata accessor for CFString(0);
            v32 = v31;
            v33 = sub_1001EF01C();
            v34 = v18;
            v35 = v65;
            LOBYTE(v32) = static _CFObject.== infix(_:_:)(v35, v34, v32, v33);

            if ((v32 & 1) != 0)
            {
              v47 = 2;
              goto LABEL_44;
            }
          }
          if (v64)
          {
            type metadata accessor for CFString(0);
            v37 = v36;
            v38 = sub_1001EF01C();
            v39 = v18;
            v40 = v64;
            LOBYTE(v37) = static _CFObject.== infix(_:_:)(v40, v39, v37, v38);

            if ((v37 & 1) != 0)
            {
              v47 = 3;
              goto LABEL_44;
            }
          }
          if (!v63)
          {

            v9 = v11;
LABEL_7:

            v8 = v66;
            if (!v7)
              goto LABEL_9;
            goto LABEL_8;
          }
          type metadata accessor for CFString(0);
          v42 = v41;
          v43 = sub_1001EF01C();
          v44 = v63;
          v45 = v18;
          v46 = v44;
          LOBYTE(v42) = static _CFObject.== infix(_:_:)(v46, v45, v42, v43);

          v9 = v11;
          if ((v42 & 1) == 0)
            goto LABEL_7;
          v47 = 4;
LABEL_45:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v61);
          v50 = sub_1000A583C(v47);
          v51 = v61[2];
          v52 = (v49 & 1) == 0;
          v53 = v51 + v52;
          if (__OFADD__(v51, v52))
            goto LABEL_59;
          v54 = v49;
          if (v61[3] >= v53)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1001B5DE8();
          }
          else
          {
            sub_1001B3D10(v53, isUniquelyReferenced_nonNull_native);
            v55 = sub_1000A583C(v47);
            if ((v54 & 1) != (v56 & 1))
              goto LABEL_63;
            v50 = v55;
          }
          v4 = v2 + 64;
          if ((v54 & 1) != 0)
          {
            *(_QWORD *)(v61[7] + 8 * v50) = v67;
          }
          else
          {
            v61[(v50 >> 6) + 8] |= 1 << v50;
            *(_BYTE *)(v61[6] + v50) = v47;
            *(_QWORD *)(v61[7] + 8 * v50) = v67;
            v57 = v61[2];
            v58 = __OFADD__(v57, 1);
            v59 = v57 + 1;
            if (v58)
              goto LABEL_60;
            v61[2] = v59;
          }

          swift_bridgeObjectRelease(0x8000000000000000);
          v8 = v66;
          v9 = v11;
          if (!v7)
            goto LABEL_9;
LABEL_8:
          v12 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
        v24 = v18;
        if (!v9)
          goto LABEL_33;
LABEL_32:
        v25 = v9;
        type metadata accessor for CFString(0);
        v27 = v26;
        v28 = sub_1001EF01C();
        v29 = v18;
        v30 = v25;
        LOBYTE(v27) = static _CFObject.== infix(_:_:)(v30, v29, v27, v28);

        if ((v27 & 1) != 0)
        {
          v47 = 1;
          goto LABEL_44;
        }
        goto LABEL_33;
      }
      v16 = v14 + 5;
      if (v16 < v62)
      {
        v15 = *(_QWORD *)(v4 + 8 * v16);
        if (v15)
        {
          v10 = v16;
          goto LABEL_26;
        }
        while (1)
        {
          v10 = v16 + 1;
          if (__OFADD__(v16, 1))
            goto LABEL_61;
          if (v10 >= v62)
            break;
          v15 = *(_QWORD *)(v4 + 8 * v10);
          ++v16;
          if (v15)
            goto LABEL_26;
        }
      }
    }
LABEL_57:
    swift_release(v2);
    swift_bridgeObjectRelease(v2);
    return (uint64_t)v61;
  }
LABEL_62:
  __break(1u);
LABEL_63:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for DeviceCapabilities.DiskUsageCategory);
  __break(1u);
  return result;
}

unint64_t sub_1001EEDC8()
{
  unint64_t result;

  result = qword_1004967C8;
  if (!qword_1004967C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeviceCapabilities.DiskUsageCategory, &type metadata for DeviceCapabilities.DiskUsageCategory);
    atomic_store(result, (unint64_t *)&qword_1004967C8);
  }
  return result;
}

unint64_t sub_1001EEE10()
{
  unint64_t result;

  result = qword_1004967D0;
  if (!qword_1004967D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeviceCapabilities.DeviceType, &type metadata for DeviceCapabilities.DeviceType);
    atomic_store(result, (unint64_t *)&qword_1004967D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceCapabilities()
{
  return &type metadata for DeviceCapabilities;
}

uint64_t storeEnumTagSinglePayload for DeviceCapabilities.DiskUsageCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001EEEB0 + 4 * byte_100391FD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001EEEE4 + 4 * byte_100391FD0[v4]))();
}

uint64_t sub_1001EEEE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EEEEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001EEEF4);
  return result;
}

uint64_t sub_1001EEF00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001EEF08);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001EEF0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EEF14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceCapabilities.DiskUsageCategory()
{
  return &type metadata for DeviceCapabilities.DiskUsageCategory;
}

uint64_t storeEnumTagSinglePayload for DeviceCapabilities.DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001EEF7C + 4 * byte_100391FDF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001EEFB0 + 4 * byte_100391FDA[v4]))();
}

uint64_t sub_1001EEFB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EEFB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001EEFC0);
  return result;
}

uint64_t sub_1001EEFCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001EEFD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001EEFD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001EEFE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceCapabilities.DeviceType()
{
  return &type metadata for DeviceCapabilities.DeviceType;
}

uint64_t type metadata accessor for DeviceCapabilitiesObjC()
{
  return objc_opt_self(DeviceCapabilities);
}

unint64_t sub_1001EF01C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100496808;
  if (!qword_100496808)
  {
    type metadata accessor for CFString(255);
    result = swift_getWitnessTable(&unk_100386E3C, v1);
    atomic_store(result, (unint64_t *)&qword_100496808);
  }
  return result;
}

uint64_t property wrapper backing initializer of EnvironmentMonitorObserver.networkType(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  type metadata accessor for ICEnvironmentNetworkType(0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t EnvironmentMonitorObserver.networkType.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003921B0);
  v2 = swift_getKeyPath(&unk_1003921D8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001EF114(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003921B0);
  v5 = swift_getKeyPath(&unk_1003921D8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001EF194(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003921B0);
  v5 = swift_getKeyPath(&unk_1003921D8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t EnvironmentMonitorObserver.$networkType.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__networkType, &qword_100496818);
}

uint64_t EnvironmentMonitorObserver.isNetworkConstrained.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003921F8);
  v2 = swift_getKeyPath(&unk_100392220);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001EF288(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003921F8);
  v5 = swift_getKeyPath(&unk_100392220);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001EF308(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003921F8);
  v5 = swift_getKeyPath(&unk_100392220);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t EnvironmentMonitorObserver.$isNetworkConstrained.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__isNetworkConstrained, &qword_100492DA0);
}

uint64_t property wrapper backing initializer of EnvironmentMonitorObserver.thermalLevel(char a1)
{
  char v2;

  v2 = a1;
  return Published.init(initialValue:)(&v2, &type metadata for EnvironmentMonitorObserver.ThermalLevel);
}

uint64_t EnvironmentMonitorObserver.thermalLevel.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100392240);
  v2 = swift_getKeyPath(&unk_100392268);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_1001EF428(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100392240);
  v5 = swift_getKeyPath(&unk_100392268);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1001EF4A8(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100392240);
  v5 = swift_getKeyPath(&unk_100392268);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t EnvironmentMonitorObserver.$thermalLevel.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__thermalLevel, &qword_100496838);
}

BOOL static EnvironmentMonitorObserver.ThermalLevel.< infix(_:_:)(char a1, char a2)
{
  return qword_1003923E0[a1] < qword_1003923E0[a2];
}

uint64_t EnvironmentMonitorObserver.ThermalLevel.rawValue.getter(char a1)
{
  return qword_1003923E0[a1];
}

BOOL sub_1001EF568(char *a1, char *a2)
{
  return qword_1003923E0[*a1] == qword_1003923E0[*a2];
}

Swift::Int sub_1001EF58C()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(qword_1003923E0[v1]);
  return Hasher._finalize()();
}

void sub_1001EF5D8()
{
  char *v0;

  Hasher._combine(_:)(qword_1003923E0[*v0]);
}

Swift::Int sub_1001EF60C()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(qword_1003923E0[v1]);
  return Hasher._finalize()();
}

uint64_t sub_1001EF654@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore26EnvironmentMonitorObserverC12ThermalLevelO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001EF67C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1003923E0[*v1];
}

BOOL sub_1001EF694(char *a1, char *a2)
{
  return qword_1003923E0[*a1] < qword_1003923E0[*a2];
}

BOOL sub_1001EF6B8(char *a1, char *a2)
{
  return qword_1003923E0[*a2] >= qword_1003923E0[*a1];
}

BOOL sub_1001EF6DC(char *a1, char *a2)
{
  return qword_1003923E0[*a1] >= qword_1003923E0[*a2];
}

BOOL sub_1001EF700(char *a1, char *a2)
{
  return qword_1003923E0[*a2] < qword_1003923E0[*a1];
}

unint64_t EnvironmentMonitorObserver.init()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  char *v11;
  objc_super v12;
  id v13;
  _BYTE v14[24];

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver_environmentMonitor;
  v4 = (void *)objc_opt_self(ICEnvironmentMonitor);
  v5 = v0;
  v6 = objc_msgSend(v4, "sharedMonitor");
  *(_QWORD *)&v1[v3] = v6;
  v7 = objc_msgSend(v6, "networkType");
  swift_beginAccess(&v5[OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__networkType], v14, 33, 0);
  v13 = v7;
  type metadata accessor for ICEnvironmentNetworkType(0);
  Published.init(initialValue:)(&v13, v8);
  swift_endAccess(v14);
  LOBYTE(v7) = objc_msgSend(v6, "isNetworkConstrained");
  swift_beginAccess(&v5[OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__isNetworkConstrained], v14, 33, 0);
  LOBYTE(v13) = (_BYTE)v7;
  Published.init(initialValue:)(&v13, &type metadata for Bool);
  swift_endAccess(v14);
  result = (unint64_t)objc_msgSend(v6, "currentThermalLevel");
  if (HIDWORD(result))
  {
    __break(1u);
  }
  else
  {
    v10 = sub_1001F0178(result);
    swift_beginAccess(&v5[OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__thermalLevel], v14, 33, 0);
    LOBYTE(v13) = v10;
    Published.init(initialValue:)(&v13, &type metadata for EnvironmentMonitorObserver.ThermalLevel);
    swift_endAccess(v14);

    v12.receiver = v5;
    v12.super_class = ObjectType;
    v11 = (char *)objc_msgSendSuper2(&v12, "init");
    objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver_environmentMonitor], "registerObserver:", v11);
    return (unint64_t)v11;
  }
  return result;
}

id EnvironmentMonitorObserver.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver_environmentMonitor], "unregisterObserver:", v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

double EnvironmentMonitorObserver.environmentMonitorDidChangeNetworkReachability(_:)(void *a1)
{
  return sub_1001EFCEC(a1, (uint64_t)&unk_100455610, (uint64_t)&unk_100496858);
}

uint64_t sub_1001EFA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001EFB00, v7, v8);
}

uint64_t sub_1001EFB00()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t KeyPath;
  uint64_t v4;

  v1 = *(void **)(v0 + 16);
  v2 = objc_msgSend(*(id *)(v0 + 24), "isNetworkConstrained", swift_release(*(_QWORD *)(v0 + 32)).n128_f64[0]);
  KeyPath = swift_getKeyPath(&unk_1003921F8);
  v4 = swift_getKeyPath(&unk_100392220);
  *(_BYTE *)(v0 + 40) = v2;
  static Published.subscript.setter(v0 + 40, v1, KeyPath, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double EnvironmentMonitorObserver.environmentMonitorDidChangeNetworkType(_:)(void *a1)
{
  return sub_1001EFCEC(a1, (uint64_t)&unk_100455638, (uint64_t)&unk_100496868);
}

uint64_t sub_1001EFBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001EFC2C, v7, v8);
}

uint64_t sub_1001EFC2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t KeyPath;
  uint64_t v4;

  v1 = *(void **)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v0 + 32), "networkType", swift_release(*(_QWORD *)(v0 + 40)).n128_f64[0]);
  KeyPath = swift_getKeyPath(&unk_1003921B0);
  v4 = swift_getKeyPath(&unk_1003921D8);
  *(_QWORD *)(v0 + 16) = v2;
  static Published.subscript.setter(v0 + 16, v1, KeyPath, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double EnvironmentMonitorObserver.environmentMonitorDidChangeThermalLevel(_:)(void *a1)
{
  return sub_1001EFCEC(a1, (uint64_t)&unk_100455660, (uint64_t)&unk_100496878);
}

double sub_1001EFCEC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v7 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor(0);
  v11 = v3;
  v12 = a1;
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(a2, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v11;
  v14[5] = v12;
  v15 = sub_1000C66A8((uint64_t)v9, a3, (uint64_t)v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1001EFDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001EFE50, v7, v8);
}

unint64_t sub_1001EFE50()
{
  uint64_t v0;
  unint64_t result;
  void *v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;

  result = (unint64_t)objc_msgSend(*(id *)(v0 + 24), "currentThermalLevel", swift_release(*(_QWORD *)(v0 + 32)).n128_f64[0]);
  if (HIDWORD(result))
  {
    __break(1u);
  }
  else
  {
    v2 = *(void **)(v0 + 16);
    v3 = sub_1001F0178(result);
    KeyPath = swift_getKeyPath(&unk_100392240);
    v5 = swift_getKeyPath(&unk_100392268);
    *(_BYTE *)(v0 + 40) = v3;
    static Published.subscript.setter(v0 + 40, v2, KeyPath, v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

void sub_1001EFF0C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v9 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  type metadata accessor for MainActor(0);
  v13 = a3;
  v14 = a1;
  v15 = v13;
  v16 = static MainActor.shared.getter(v15);
  v17 = (_QWORD *)swift_allocObject(a4, 48, 7);
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v14;
  v17[5] = v15;
  v18 = sub_1000C66A8((uint64_t)v11, a5, (uint64_t)v17);
  swift_release(v18);

}

uint64_t EnvironmentMonitorObserver.ThermalLevel.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001F0050 + 4 * byte_100392130[a1]))(0x6C616E696D6F6ELL, 0xE700000000000000);
}

uint64_t sub_1001F0050()
{
  return 0x746867696CLL;
}

uint64_t sub_1001F0064()
{
  return 0x6574617265646F6DLL;
}

uint64_t sub_1001F007C()
{
  return 0x7976616568;
}

uint64_t sub_1001F0090()
{
  return 0x676E697070617274;
}

uint64_t sub_1001F00B8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1001F00CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001F00FC + 4 * byte_100392137[*v0]))(0x6C616E696D6F6ELL, 0xE700000000000000);
}

uint64_t sub_1001F00FC()
{
  return 0x746867696CLL;
}

uint64_t sub_1001F0110()
{
  return 0x6574617265646F6DLL;
}

uint64_t sub_1001F0128()
{
  return 0x7976616568;
}

uint64_t sub_1001F013C()
{
  return 0x676E697070617274;
}

uint64_t sub_1001F0164()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1001F0178(int a1)
{
  uint64_t result;

  result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 10:
      result = 1;
      break;
    case 20:
      result = 2;
      break;
    case 30:
      result = 3;
      break;
    case 40:
      result = 4;
      break;
    case 50:
      result = 5;
      break;
    default:
      result = 6;
      break;
  }
  return result;
}

uint64_t _s9MusicCore26EnvironmentMonitorObserverC12ThermalLevelO8rawValueAESgSi_tcfC_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 + 1;
  result = 1;
  switch(v1)
  {
    case 0:
      result = 6;
      break;
    case 1:
      result = 0;
      break;
    case 11:
      return result;
    case 21:
      result = 2;
      break;
    case 31:
      result = 3;
      break;
    case 41:
      result = 4;
      break;
    case 51:
      result = 5;
      break;
    default:
      result = 7;
      break;
  }
  return result;
}

uint64_t sub_1001F0238(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100496854);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001EFA94(a1, v4, v5, v7, v6);
}

uint64_t sub_1001F02B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100496864);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001EFBC0(a1, v4, v5, v7, v6);
}

uint64_t sub_1001F0330(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100496874);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000F894;
  return sub_1001EFDE4(a1, v4, v5, v7, v6);
}

unint64_t sub_1001F03AC()
{
  unint64_t result;

  result = qword_100496880;
  if (!qword_100496880)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for EnvironmentMonitorObserver.ThermalLevel, &type metadata for EnvironmentMonitorObserver.ThermalLevel);
    atomic_store(result, (unint64_t *)&qword_100496880);
  }
  return result;
}

uint64_t sub_1001F03F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__networkType, &qword_100496818);
}

uint64_t sub_1001F0414(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, (uint64_t *)&unk_100496960, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__networkType, &qword_100496818);
}

uint64_t sub_1001F0440(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__isNetworkConstrained, &qword_100492DA0);
}

uint64_t sub_1001F0464(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, &qword_100492DA8, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__isNetworkConstrained, &qword_100492DA0);
}

uint64_t sub_1001F0490(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10017284C(a1, a2, a3, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__thermalLevel, &qword_100496838);
}

uint64_t sub_1001F04B4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001728B8(a1, a2, a3, a4, (uint64_t *)&unk_100496950, &OBJC_IVAR____TtC9MusicCore26EnvironmentMonitorObserver__thermalLevel, &qword_100496838);
}

uint64_t sub_1001F04E0()
{
  return type metadata accessor for EnvironmentMonitorObserver(0);
}

uint64_t type metadata accessor for EnvironmentMonitorObserver(uint64_t a1)
{
  uint64_t result;

  result = qword_100496910;
  if (!qword_100496910)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EnvironmentMonitorObserver);
  return result;
}

void sub_1001F0524(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1001F05F0(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001B8E28(319, (unint64_t *)&qword_100492E18, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001B8E28(319, &qword_100496930, (uint64_t)&type metadata for EnvironmentMonitorObserver.ThermalLevel);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

void sub_1001F05F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_100496920)
  {
    type metadata accessor for ICEnvironmentNetworkType(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_100496920);
  }
}

uint64_t storeEnumTagSinglePayload for EnvironmentMonitorObserver.ThermalLevel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1001F0690 + 4 * byte_1003921AA[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1001F06C4 + 4 * byte_1003921A5[v4]))();
}

uint64_t sub_1001F06C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F06CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F06D4);
  return result;
}

uint64_t sub_1001F06E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F06E8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1001F06EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F06F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentMonitorObserver.ThermalLevel()
{
  return &type metadata for EnvironmentMonitorObserver.ThermalLevel;
}

uint64_t sub_1001F0718(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_100496864);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000EA88;
  return sub_1001EFBC0(a1, v4, v5, v7, v6);
}

uint64_t sub_1001F0794()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t *ExplicitRestrictionsController.shared.unsafeMutableAddressor()
{
  if (qword_10048CF38 != -1)
    swift_once(&qword_10048CF38, sub_1001F0920);
  return &static ExplicitRestrictionsController.shared;
}

uint64_t ExplicitRestrictionsController.accountVerificationURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v15[24];

  v3 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_QWORD *)&v6 = swift_beginAccess(v1 + 24, v15, 0, 0).n128_u64[0];
  v7 = *(void **)(v1 + 24);
  if (v7)
  {
    v8 = objc_msgSend(v7, "verificationURL", v6);
    if (v8)
    {
      v9 = v8;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);

      v10 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
    }
    else
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    }
    return sub_10000DCB0((uint64_t)v5, a1);
  }
  else
  {
    v11 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
}

uint64_t sub_1001F0920()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for ExplicitRestrictionsController();
  swift_allocObject(v0, 56, 7);
  result = sub_1001F0998();
  static ExplicitRestrictionsController.shared = result;
  return result;
}

uint64_t static ExplicitRestrictionsController.shared.getter()
{
  if (qword_10048CF38 != -1)
    swift_once(&qword_10048CF38, sub_1001F0920);
  return swift_retain(static ExplicitRestrictionsController.shared);
}

uint64_t sub_1001F0998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  int v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  _BYTE v27[24];

  v1 = v0;
  *(_BYTE *)(v0 + 16) = 0;
  v2 = v0 + 16;
  *(_QWORD *)(v0 + 24) = 0;
  if (qword_10048CF40 != -1)
    swift_once(&qword_10048CF40, sub_1001F12D4);
  v3 = static ExplicitRestrictionsController.symbols;
  v4 = unk_1004A2E10;
  *(_QWORD *)(v1 + 48) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = (void *)objc_opt_self(MPRestrictionsMonitor);
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(v5, "sharedRestrictionsMonitor");
  LODWORD(v5) = objc_msgSend(v6, "allowsExplicitContent");
  swift_beginAccess(v2, v27, 1, 0);
  v7 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = (_BYTE)v5;
  if ((_DWORD)v5 == v7)
  {
    v8 = v6;
  }
  else
  {
    v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10048CF48 != -1)
      swift_once(&qword_10048CF48, sub_1001F13D8);
    objc_msgSend(v8, "postNotificationName:object:", qword_1004A2E30, v1);

  }
  sub_1001F0CF4();
  v9 = objc_msgSend((id)objc_opt_self(ICAgeVerificationManager), "defaultManager");
  v10 = objc_msgSend(v9, "ageVerificationState");

  sub_1001F1128(v10);
  type metadata accessor for Whitetail.Binding();
  v11 = (void *)MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification;
  v12 = swift_allocObject(&unk_1004558A8, 24, 7);
  swift_weakInit(v12 + 16, v1);
  v13 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)v11, 1, (uint64_t)sub_1001F1594, v12);
  swift_beginAccess(v1 + 48, v26, 33, 0);
  v14 = swift_retain(v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((*(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = *(_QWORD *)((*(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
  specialized Array._endMutation()(v17);
  swift_endAccess(v26);
  v18 = (void *)ICAgeVerificationStateDidChangeNotification;
  v19 = swift_allocObject(&unk_1004558A8, 24, 7);
  swift_weakInit(v19 + 16, v1);
  v20 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)v18, 1, (uint64_t)sub_1001F159C, v19);
  swift_beginAccess(v1 + 48, v26, 33, 0);
  v21 = swift_retain(v20);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
  v23 = *(_QWORD *)((*(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v22 = *(_QWORD *)((*(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v23 >= v22 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
  v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v20);
  specialized Array._endMutation()(v24);
  swift_endAccess(v26);
  swift_release(v20);
  swift_release(v13);
  return v1;
}

uint64_t sub_1001F0CF4()
{
  _QWORD *v0;
  double v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _BYTE v8[24];

  *(_QWORD *)&v1 = swift_beginAccess(v0 + 3, v8, 0, 0).n128_u64[0];
  v2 = (void *)v0[3];
  if (v2 && objc_msgSend(v2, "treatment", v1) == (id)1)
  {
    if (qword_10048CF40 != -1)
      swift_once(&qword_10048CF40, sub_1001F12D4);
    v3 = &qword_1004A2E18;
  }
  else
  {
    if (qword_10048CF40 != -1)
      swift_once(&qword_10048CF40, sub_1001F12D4);
    v3 = &static ExplicitRestrictionsController.symbols;
  }
  v5 = *v3;
  v4 = v3[1];
  swift_beginAccess(v0 + 4, &v7, 1, 0);
  v0[4] = v5;
  v0[5] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1001F0DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  id v4;
  unsigned int v5;
  int v6;
  id v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend((id)objc_opt_self(MPRestrictionsMonitor), "sharedRestrictionsMonitor");
    v5 = objc_msgSend(v4, "allowsExplicitContent");
    swift_beginAccess(v3 + 16, &v8, 1, 0);
    v6 = *(unsigned __int8 *)(v3 + 16);
    *(_BYTE *)(v3 + 16) = v5;
    if (v5 == v6)
    {
      swift_release(v3);
      v7 = v4;
    }
    else
    {
      v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_10048CF48 != -1)
        swift_once(&qword_10048CF48, sub_1001F13D8);
      objc_msgSend(v7, "postNotificationName:object:", qword_1004A2E30, v3);
      swift_release(v3);

    }
  }
}

double sub_1001F0F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  id v5;
  id v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend((id)objc_opt_self(ICAgeVerificationManager), "defaultManager");
    v6 = objc_msgSend(v5, "ageVerificationState");

    sub_1001F1128(v6);
    sub_1001F0CF4();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void *ExplicitRestrictionsController.explicitContentIsAllowed.getter()
{
  uint64_t v0;
  void *result;
  uint64_t v2;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  if (*(_BYTE *)(v0 + 16) != 1)
    return 0;
  swift_beginAccess(v0 + 24, &v2, 0, 0);
  result = *(void **)(v0 + 24);
  if (result)
    return (void *)(((unint64_t)objc_msgSend(result, "status") & 0xFFFFFFFFFFFFFFFDLL) == 1);
  return result;
}

void sub_1001F1028(char a1)
{
  uint64_t v1;
  int v3;
  int v4;
  id v5;
  _BYTE v6[24];

  v3 = a1 & 1;
  swift_beginAccess(v1 + 16, v6, 1, 0);
  v4 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  if (v4 != v3)
  {
    v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_10048CF48 != -1)
      swift_once(&qword_10048CF48, sub_1001F13D8);
    objc_msgSend(v5, "postNotificationName:object:", qword_1004A2E30, v1);

  }
}

void *ExplicitRestrictionsController.ageVerification.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 24, v4, 0, 0);
  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void sub_1001F1128(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  _BYTE v10[24];

  v2 = v1;
  swift_beginAccess(v2 + 24, v10, 1, 0);
  v4 = *(void **)(v2 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  v5 = a1;
  v6 = v5;
  if (a1)
  {
    if (v4)
    {
      sub_1001F1534();
      v7 = v4;
      v8 = v6;
      v9 = static NSObject.== infix(_:_:)(v8, v7);

      if ((v9 & 1) != 0)
        goto LABEL_9;
    }
  }
  else if (!v4)
  {
    v7 = 0;
    v8 = v5;
    goto LABEL_9;
  }
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_10048CF48 != -1)
    swift_once(&qword_10048CF48, sub_1001F13D8);
  objc_msgSend(v8, "postNotificationName:object:", qword_1004A2E28, v2);

  v7 = v6;
LABEL_9:

}

uint64_t *ExplicitRestrictionsController.symbols.unsafeMutableAddressor()
{
  if (qword_10048CF40 != -1)
    swift_once(&qword_10048CF40, sub_1001F12D4);
  return &static ExplicitRestrictionsController.symbols;
}

uint64_t ExplicitRestrictionsController.symbol.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 32, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1001F12D4()
{
  static ExplicitRestrictionsController.symbols = 3028656112;
  unk_1004A2E10 = 0xA400000000000000;
  qword_1004A2E18 = 11768802;
  unk_1004A2E20 = 0xA300000000000000;
}

uint64_t static ExplicitRestrictionsController.symbols.getter()
{
  uint64_t v0;

  if (qword_10048CF40 != -1)
    swift_once(&qword_10048CF40, sub_1001F12D4);
  v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t ExplicitRestrictionsController.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t ExplicitRestrictionsController.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance(v0, 56, 7);
}

NSString sub_1001F13D8()
{
  NSString result;

  qword_1004A2E28 = (uint64_t)String._bridgeToObjectiveC()();
  result = String._bridgeToObjectiveC()();
  qword_1004A2E30 = (uint64_t)result;
  return result;
}

uint64_t sub_1001F143C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 16, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

void sub_1001F1480(char *a1)
{
  sub_1001F1028(*a1);
}

id sub_1001F14A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 24, v6, 0, 0);
  v4 = *(void **)(v3 + 24);
  *a2 = v4;
  return v4;
}

void sub_1001F14E8(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1001F1128(v1);
}

uint64_t type metadata accessor for ExplicitRestrictionsController()
{
  return objc_opt_self(_TtC9MusicCore30ExplicitRestrictionsController);
}

unint64_t sub_1001F1534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100496A28;
  if (!qword_100496A28)
  {
    v1 = objc_opt_self(ICAgeVerificationState);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100496A28);
  }
  return result;
}

uint64_t sub_1001F1570()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F1594()
{
  uint64_t v0;

  sub_1001F0DE0(v0);
}

double sub_1001F159C()
{
  uint64_t v0;

  return sub_1001F0F10(v0);
}

uint64_t LaunchURL.GenericHandler.perform(withURL:)(uint64_t a1, int *a2)
{
  _QWORD *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc(a2[1]);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1001F162C;
  return v8(a1);
}

uint64_t sub_1001F162C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_1001F170C;
  }
  else
  {
    *(_BYTE *)(v4 + 48) = a1 & 1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_1001F16D4;
  }
  return swift_task_switch(v10, v7, v9);
}

uint64_t sub_1001F16D4()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(unsigned __int8 *)(v0 + 48), v1);
}

uint64_t sub_1001F170C()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v1);
}

uint64_t sub_1001F1744(uint64_t a1)
{
  int **v1;
  _QWORD *v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *v1;
  v5 = type metadata accessor for MainActor(0);
  v2[2] = v5;
  v2[3] = static MainActor.shared.getter(v5);
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc(v4[1]);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1001F17C8;
  return v8(a1);
}

uint64_t sub_1001F17C8(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t v11;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 32);
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v1)
  {
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v8;
    v10 = sub_1001F33A0;
  }
  else
  {
    *(_BYTE *)(v4 + 48) = a1 & 1;
    v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    v9 = v11;
    v10 = sub_1001F339C;
  }
  return swift_task_switch(v10, v7, v9);
}

_QWORD *static LaunchURL.ArrayBuilder.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9[2];
  _BYTE v10[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = _swiftEmptyArrayStorage;
  do
  {
    sub_1001F19A4(v2, (uint64_t)v10);
    sub_1001F19EC((uint64_t)v10, (uint64_t)&v7);
    if (v8)
    {
      sub_1000137C8(&v7, (uint64_t)v9);
      sub_1000137C8(v9, (uint64_t)&v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_10003F058(0, v3[2] + 1, 1, v3);
      v5 = v3[2];
      v4 = v3[3];
      if (v5 >= v4 >> 1)
        v3 = sub_10003F058((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
      v3[2] = v5 + 1;
      sub_1000137C8(&v7, (uint64_t)&v3[5 * v5 + 4]);
    }
    else
    {
      sub_1001F1A34((uint64_t)&v7);
    }
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1001F19A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100496A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F19EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100496A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F1A34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100496A38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *static LaunchURL.ArrayBuilder.buildOptional(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  __int128 v6[2];

  sub_1001F19A4(a1, (uint64_t)&v4);
  if (v5)
  {
    sub_1000137C8(&v4, (uint64_t)v6);
    v1 = sub_100005574(&qword_10048E7B8);
    v2 = swift_allocObject(v1, 72, 7);
    *(_OWORD *)(v2 + 16) = xmmword_100384A80;
    sub_1000137C8(v6, v2 + 32);
  }
  else
  {
    sub_1001F1A34((uint64_t)&v4);
    return _swiftEmptyArrayStorage;
  }
  return (_QWORD *)v2;
}

uint64_t sub_1001F1B00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100005574(&qword_10048E7B8);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100384A80;
  sub_1000244B0(a1, v3 + 32);
  return v3;
}

uint64_t LaunchURL.Resolver.init(perform:handlerBuilder:)@<X0>(char a1@<W0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = a1 & 1;
  type metadata accessor for LaunchURL.Resolver(0);
  v6 = Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000012, 0x80000001003ACFB0);
  *(_BYTE *)a3 = v5;
  result = a2(v6);
  *(_QWORD *)(a3 + 8) = result;
  return result;
}

uint64_t LaunchURL.Resolver.perform(withURL:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2[36] = a1;
  v2[37] = v1;
  v3 = type metadata accessor for URL(0);
  v2[38] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[39] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[40] = swift_task_alloc(v5);
  v2[41] = swift_task_alloc(v5);
  v2[42] = swift_task_alloc(v5);
  v2[43] = swift_task_alloc(v5);
  v7 = type metadata accessor for Logger(0, v6);
  v2[44] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[45] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[46] = swift_task_alloc(v9);
  v2[47] = swift_task_alloc(v9);
  v2[48] = swift_task_alloc(v9);
  v2[49] = swift_task_alloc(v9);
  return swift_task_switch(sub_1001F1CB0, 0, 0);
}

uint64_t sub_1001F1CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  void (*v68)(uint64_t, uint64_t);
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  int *v106;
  uint64_t v107;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(int *)(type metadata accessor for LaunchURL.Resolver(0) + 24);
  *(_DWORD *)(v0 + 488) = v9;
  v10 = v8 + v9;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 400) = v11;
  v11(v1, v10, v2);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v0 + 408) = v12;
  v13 = v12(v4, v7, v5);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(_QWORD *)(v0 + 392);
  v19 = *(_QWORD *)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 360);
  v20 = *(_QWORD *)(v0 + 344);
  v22 = *(_QWORD *)(v0 + 304);
  v21 = *(_QWORD *)(v0 + 312);
  if (v16)
  {
    v103 = *(_QWORD *)(v0 + 392);
    v23 = swift_slowAlloc(12, -1);
    v101 = v19;
    v24 = swift_slowAlloc(32, -1);
    v107 = v24;
    *(_DWORD *)v23 = 136446210;
    v25 = sub_1001F2DD0();
    v26 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v22, v25);
    *(_QWORD *)(v23 + 4) = sub_100019400(v26, v27, &v107);
    swift_bridgeObjectRelease();
    v28 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v28(v20, v22);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Evaluating URL=%{public}s", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

    v29 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v29(v103, v101);
  }
  else
  {
    v28 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v28(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 304));

    v29 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v29(v17, v19);
  }
  *(_QWORD *)(v0 + 416) = v29;
  *(_QWORD *)(v0 + 424) = v28;
  v30 = *(_QWORD *)(v0 + 296);
  *(_QWORD *)(v0 + 280) = _swiftEmptyArrayStorage;
  v31 = *(_QWORD *)(v30 + 8);
  *(_QWORD *)(v0 + 432) = v31;
  v32 = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v0 + 440) = v32;
  if (v32)
  {
    *(_QWORD *)(v0 + 456) = v28;
    *(_QWORD *)(v0 + 464) = 0;
    v102 = v28;
    v104 = v29;
    *(_QWORD *)(v0 + 448) = v29;
    v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
    v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v33 = *(_QWORD *)(v0 + 384);
    v34 = *(_QWORD *)(v0 + 352);
    v35 = *(_QWORD *)(v0 + 336);
    v36 = *(_QWORD *)(v0 + 304);
    v37 = v31 + 32;
    v38 = v30 + *(int *)(v0 + 488);
    v39 = *(_QWORD *)(v0 + 288);
    swift_bridgeObjectRetain();
    sub_1000244B0(v37, v0 + 56);
    v97(v33, v38, v34);
    v99(v35, v39, v36);
    v40 = sub_1000244B0(v0 + 56, v0 + 96);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.info.getter();
    v43 = os_log_type_enabled(v41, v42);
    v44 = *(_QWORD *)(v0 + 384);
    v45 = *(_QWORD *)(v0 + 352);
    v46 = *(_QWORD *)(v0 + 336);
    v47 = *(_QWORD *)(v0 + 304);
    if (v43)
    {
      v98 = *(_QWORD *)(v0 + 352);
      v48 = swift_slowAlloc(22, -1);
      v49 = swift_slowAlloc(64, -1);
      v107 = v49;
      *(_DWORD *)v48 = 136446466;
      v50 = sub_1001F2DD0();
      v51 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v47, v50);
      *(_QWORD *)(v48 + 4) = sub_100019400(v51, v52, &v107);
      swift_bridgeObjectRelease();
      v102(v46, v47);
      *(_WORD *)(v48 + 12) = 2082;
      sub_1000244B0(v0 + 96, v0 + 16);
      v53 = sub_100005574(&qword_10048E7C0);
      v54 = (char *)String.init<A>(describing:)(v0 + 16, v53);
      *(_QWORD *)(v48 + 14) = sub_100019400(v54, v55, &v107);
      swift_bridgeObjectRelease();
      sub_10000682C((_QWORD *)(v0 + 96));
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Resolving URL=%{public}s with handler=%{public}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      v56 = v44;
      v57 = v98;
    }
    else
    {
      v102(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 304));
      sub_10000682C((_QWORD *)(v0 + 96));

      v56 = v44;
      v57 = v45;
    }
    v104(v56, v57);
    v83 = *(_QWORD *)(v0 + 80);
    v84 = *(_QWORD *)(v0 + 88);
    sub_10000ABC8((_QWORD *)(v0 + 56), v83);
    v85 = *(int **)(v84 + 8);
    v106 = (int *)((char *)v85 + *v85);
    v86 = (_QWORD *)swift_task_alloc(v85[1]);
    *(_QWORD *)(v0 + 472) = v86;
    *v86 = v0;
    v86[1] = sub_1001F2398;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v106)(*(_QWORD *)(v0 + 288), v83, v84);
  }
  else
  {
    v58 = v0 + 280;
    v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v60 = *(_QWORD *)(v0 + 320);
    v61 = *(_QWORD *)(v0 + 304);
    v62 = *(_QWORD *)(v0 + 288);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0 + 400))(*(_QWORD *)(v0 + 368), v30 + *(int *)(v0 + 488), *(_QWORD *)(v0 + 352));
    v59(v60, v62, v61);
    v63 = *(_QWORD *)(v0 + 280);
    v64 = swift_bridgeObjectRetain_n(v63, 2);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.info.getter();
    v67 = os_log_type_enabled(v65, v66);
    v68 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    v69 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v70 = *(_QWORD *)(v0 + 368);
    v105 = *(_QWORD *)(v0 + 352);
    v71 = *(_QWORD *)(v0 + 320);
    v72 = *(_QWORD *)(v0 + 304);
    if (v67)
    {
      v100 = *(_QWORD *)(v0 + 368);
      v73 = swift_slowAlloc(22, -1);
      v74 = swift_slowAlloc(64, -1);
      v107 = v74;
      *(_DWORD *)v73 = 136446466;
      v75 = sub_1001F2DD0();
      v76 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v72, v75);
      *(_QWORD *)(v73 + 4) = sub_100019400(v76, v77, &v107);
      swift_bridgeObjectRelease();
      v69(v71, v72);
      *(_WORD *)(v73 + 12) = 2082;
      swift_bridgeObjectRetain();
      v78 = sub_100005574(&qword_10048E7C0);
      v79 = (char *)Array.description.getter(v63, v78);
      v81 = v80;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v73 + 14) = sub_100019400(v79, v81, &v107);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v63, 2);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Successfully evaluated URL=%{public}s using handlers=%{public}s", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
      v82 = v74;
      v58 = v0 + 280;
      swift_slowDealloc(v82, -1, -1);
      swift_slowDealloc(v73, -1, -1);

      v68(v100, v105);
    }
    else
    {
      v69(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v63, 2);

      v68(v70, v105);
    }
    v88 = *(_QWORD *)(v0 + 384);
    v89 = *(_QWORD *)(v0 + 392);
    v91 = *(_QWORD *)(v0 + 368);
    v90 = *(_QWORD *)(v0 + 376);
    v93 = *(_QWORD *)(v0 + 336);
    v92 = *(_QWORD *)(v0 + 344);
    v95 = *(_QWORD *)(v0 + 320);
    v94 = *(_QWORD *)(v0 + 328);
    swift_beginAccess(v58, v0 + 256, 0, 0);
    v96 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 16);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v89);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    return (*(uint64_t (**)(BOOL))(v0 + 8))(v96 != 0);
  }
}

uint64_t sub_1001F2398(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 472);
  *(_BYTE *)(v3 + 492) = a1;
  *(_QWORD *)(v3 + 480) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = sub_1001F2C4C;
  }
  else
  {
    v5 = sub_1001F2418;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001F2418()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _BYTE *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (**v25)(uint64_t, uint64_t);
  os_log_type_t v26;
  void (**v27)(uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  void (*v71)(uint64_t, uint64_t);
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  _QWORD *v99;
  void (*v100)(uint64_t, uint64_t);
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  int *v110;
  uint64_t v111;

  v1 = (_QWORD *)(v0 + 56);
  v2 = (_QWORD *)(v0 + 280);
  if ((*(_BYTE *)(v0 + 492) & 1) != 0)
  {
    sub_1000244B0(v0 + 56, v0 + 176);
    v3 = (_QWORD *)*v2;
    if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
      v3 = sub_10003F058(0, v3[2] + 1, 1, v3);
    v5 = v3[2];
    v4 = v3[3];
    if (v5 >= v4 >> 1)
      v3 = sub_10003F058((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
    v3[2] = v5 + 1;
    sub_1000137C8((__int128 *)(v0 + 176), (uint64_t)&v3[5 * v5 + 4]);
    *v2 = v3;
  }
  v6 = (_BYTE *)(v0 + 492);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
  v8 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 288);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 400))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 296) + *(int *)(v0 + 488), *(_QWORD *)(v0 + 352));
  v7(v8, v10, v9);
  v11 = sub_1000244B0(v0 + 56, v0 + 136);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter();
  v14 = os_log_type_enabled(v12, v13);
  v104 = *(_QWORD *)(v0 + 352);
  v107 = *(_QWORD *)(v0 + 376);
  v15 = *(_QWORD *)(v0 + 328);
  v16 = *(_QWORD *)(v0 + 304);
  if (v14)
  {
    v100 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v101 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    v17 = swift_slowAlloc(22, -1);
    v18 = swift_slowAlloc(64, -1);
    v111 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = sub_1001F2DD0();
    v20 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v16, v19);
    *(_QWORD *)(v17 + 4) = sub_100019400(v20, v21, &v111);
    v1 = (_QWORD *)(v0 + 56);
    swift_bridgeObjectRelease();
    v100(v15, v16);
    *(_WORD *)(v17 + 12) = 2082;
    sub_1000244B0(v0 + 136, v0 + 216);
    v22 = sub_100005574(&qword_10048E7C0);
    v23 = (char *)String.init<A>(describing:)(v0 + 216, v22);
    *(_QWORD *)(v17 + 14) = sub_100019400(v23, v24, &v111);
    swift_bridgeObjectRelease();
    v25 = (void (**)(uint64_t, uint64_t))(v0 + 424);
    sub_10000682C((_QWORD *)(v0 + 136));
    v26 = v13;
    v27 = (void (**)(uint64_t, uint64_t))(v0 + 416);
    _os_log_impl((void *)&_mh_execute_header, v12, v26, "Resolved URL=%{public}s with handler=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v28 = v17;
    v6 = (_BYTE *)(v0 + 492);
    swift_slowDealloc(v28, -1, -1);

    v101(v107, v104);
  }
  else
  {
    v25 = (void (**)(uint64_t, uint64_t))(v0 + 456);
    v27 = (void (**)(uint64_t, uint64_t))(v0 + 448);
    v29 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
    (*(void (**)(_QWORD, _QWORD))(v0 + 456))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 304));
    sub_10000682C((_QWORD *)(v0 + 136));

    v29(v107, v104);
  }
  v30 = *v25;
  v31 = *v27;
  if (*v6 == 1 && (**(_BYTE **)(v0 + 296) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_10000682C(v1);
    goto LABEL_17;
  }
  v32 = *(_QWORD *)(v0 + 440);
  v33 = *(_QWORD *)(v0 + 464) + 1;
  sub_10000682C(v1);
  if (v33 == v32)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
    v63 = *(_QWORD *)(v0 + 320);
    v64 = *(_QWORD *)(v0 + 304);
    v65 = *(_QWORD *)(v0 + 288);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 400))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 296) + *(int *)(v0 + 488), *(_QWORD *)(v0 + 352));
    v62(v63, v65, v64);
    v66 = *(_QWORD *)(v0 + 280);
    v67 = swift_bridgeObjectRetain_n(v66, 2);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.info.getter();
    v70 = os_log_type_enabled(v68, v69);
    v71 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    v72 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    v73 = *(_QWORD *)(v0 + 368);
    v74 = *(_QWORD *)(v0 + 352);
    v75 = *(_QWORD *)(v0 + 320);
    v76 = *(_QWORD *)(v0 + 304);
    if (v70)
    {
      v109 = *(_QWORD *)(v0 + 368);
      v77 = swift_slowAlloc(22, -1);
      v106 = v74;
      v78 = swift_slowAlloc(64, -1);
      v111 = v78;
      *(_DWORD *)v77 = 136446466;
      v79 = sub_1001F2DD0();
      v80 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v76, v79);
      *(_QWORD *)(v77 + 4) = sub_100019400(v80, v81, &v111);
      swift_bridgeObjectRelease();
      v72(v75, v76);
      *(_WORD *)(v77 + 12) = 2082;
      swift_bridgeObjectRetain();
      v82 = sub_100005574(&qword_10048E7C0);
      v83 = (char *)Array.description.getter(v66, v82);
      v85 = v84;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v77 + 14) = sub_100019400(v83, v85, &v111);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v66, 2);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Successfully evaluated URL=%{public}s using handlers=%{public}s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy(v78, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v77, -1, -1);

      v71(v109, v106);
    }
    else
    {
      v72(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      swift_bridgeObjectRelease_n(v66, 2);

      v71(v73, v74);
    }
    v86 = *(_QWORD *)(v0 + 384);
    v87 = *(_QWORD *)(v0 + 392);
    v89 = *(_QWORD *)(v0 + 368);
    v88 = *(_QWORD *)(v0 + 376);
    v91 = *(_QWORD *)(v0 + 336);
    v90 = *(_QWORD *)(v0 + 344);
    v93 = *(_QWORD *)(v0 + 320);
    v92 = *(_QWORD *)(v0 + 328);
    swift_beginAccess(v0 + 280, v0 + 256, 0, 0);
    v94 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 16);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v87);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(BOOL))(v0 + 8))(v94 != 0);
  }
  v103 = v30;
  v34 = *(_QWORD *)(v0 + 464) + 1;
  *(_QWORD *)(v0 + 456) = v30;
  *(_QWORD *)(v0 + 464) = v34;
  *(_QWORD *)(v0 + 448) = v31;
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 408);
  v37 = *(_QWORD *)(v0 + 384);
  v105 = v31;
  v38 = *(_QWORD *)(v0 + 352);
  v39 = *(_QWORD *)(v0 + 336);
  v40 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD *)(v0 + 288);
  v42 = *(_QWORD *)(v0 + 296) + *(int *)(v0 + 488);
  sub_1000244B0(*(_QWORD *)(v0 + 432) + 40 * v34 + 32, (uint64_t)v1);
  v35(v37, v42, v38);
  v43 = (_QWORD *)(v0 + 96);
  v36(v39, v41, v40);
  v108 = v1;
  v44 = sub_1000244B0((uint64_t)v1, v0 + 96);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.info.getter();
  v47 = os_log_type_enabled(v45, v46);
  v48 = *(_QWORD *)(v0 + 384);
  v49 = *(_QWORD *)(v0 + 352);
  v50 = *(_QWORD *)(v0 + 336);
  v51 = *(_QWORD *)(v0 + 304);
  if (v47)
  {
    v52 = swift_slowAlloc(22, -1);
    v102 = v49;
    v53 = swift_slowAlloc(64, -1);
    v111 = v53;
    *(_DWORD *)v52 = 136446466;
    v54 = sub_1001F2DD0();
    v55 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v51, v54);
    *(_QWORD *)(v52 + 4) = sub_100019400(v55, v56, &v111);
    swift_bridgeObjectRelease();
    v103(v50, v51);
    *(_WORD *)(v52 + 12) = 2082;
    sub_1000244B0((uint64_t)v43, v0 + 16);
    v57 = sub_100005574(&qword_10048E7C0);
    v58 = (char *)String.init<A>(describing:)(v0 + 16, v57);
    *(_QWORD *)(v52 + 14) = sub_100019400(v58, v59, &v111);
    swift_bridgeObjectRelease();
    sub_10000682C(v43);
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Resolving URL=%{public}s with handler=%{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v52, -1, -1);

    v60 = v48;
    v61 = v102;
  }
  else
  {
    v103(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 304));
    sub_10000682C(v43);

    v60 = v48;
    v61 = v49;
  }
  v105(v60, v61);
  v96 = *(_QWORD *)(v0 + 80);
  v97 = *(_QWORD *)(v0 + 88);
  sub_10000ABC8(v108, v96);
  v98 = *(int **)(v97 + 8);
  v110 = (int *)((char *)v98 + *v98);
  v99 = (_QWORD *)swift_task_alloc(v98[1]);
  *(_QWORD *)(v0 + 472) = v99;
  *v99 = v0;
  v99[1] = sub_1001F2398;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v110)(*(_QWORD *)(v0 + 288), v96, v97);
}

uint64_t sub_1001F2C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  sub_10000682C((_QWORD *)(v0 + 56));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1001F2CEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_100496A44);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001F2D38;
  return LaunchURL.Resolver.perform(withURL:)(a1);
}

uint64_t sub_1001F2D38(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  swift_task_dealloc(v4);
  if (v1)
    v6 = 0;
  else
    v6 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t type metadata accessor for LaunchURL.Resolver(uint64_t a1)
{
  uint64_t result;

  result = qword_100496AB8;
  if (!qword_100496AB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LaunchURL.Resolver);
  return result;
}

unint64_t sub_1001F2DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004912E8;
  if (!qword_1004912E8)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_1004912E8);
  }
  return result;
}

unint64_t sub_1001F2E1C()
{
  unint64_t result;

  result = qword_100496A50;
  if (!qword_100496A50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LaunchURL.Resolver.PerformOption, &type metadata for LaunchURL.Resolver.PerformOption);
    atomic_store(result, (unint64_t *)&qword_100496A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL()
{
  return &type metadata for LaunchURL;
}

ValueMetadata *type metadata accessor for LaunchURL.GenericHandler()
{
  return &type metadata for LaunchURL.GenericHandler;
}

ValueMetadata *type metadata accessor for LaunchURL.ArrayBuilder()
{
  return &type metadata for LaunchURL.ArrayBuilder;
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchURL.Resolver(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v10);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for Logger(0, a2);
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for LaunchURL.Resolver(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Logger(0, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

uint64_t initializeWithCopy for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for Logger(0, a2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v11 = type metadata accessor for Logger(0, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v8, v9, v11);
  return a1;
}

uint64_t initializeWithTake for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = type metadata accessor for Logger(0, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v11 = type metadata accessor for Logger(0, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F3154);
}

uint64_t sub_1001F3154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Logger(0, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LaunchURL.Resolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F31DC);
}

uint64_t sub_1001F31DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Logger(0, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001F3250(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_100392570;
  v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Logger(319, a2);
  if (v4 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LaunchURL.Resolver.PerformOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F331C + 4 * byte_100392485[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F3350 + 4 * asc_100392480[v4]))();
}

uint64_t sub_1001F3350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F3358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F3360);
  return result;
}

uint64_t sub_1001F336C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F3374);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F3378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F3380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL.Resolver.PerformOption()
{
  return &type metadata for LaunchURL.Resolver.PerformOption;
}

char *LifecyclePatrol.isEnabled.unsafeMutableAddressor()
{
  return &static LifecyclePatrol.isEnabled;
}

uint64_t static LifecyclePatrol.isEnabled.getter()
{
  _BYTE v1[24];

  swift_beginAccess(&static LifecyclePatrol.isEnabled, v1, 0, 0);
  return static LifecyclePatrol.isEnabled;
}

uint64_t static LifecyclePatrol.isEnabled.setter(char a1)
{
  uint64_t result;
  _BYTE v3[24];

  result = swift_beginAccess(&static LifecyclePatrol.isEnabled, v3, 1, 0);
  static LifecyclePatrol.isEnabled = a1;
  return result;
}

uint64_t (*static LifecyclePatrol.isEnabled.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static LifecyclePatrol.isEnabled, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t LifecyclePatrol.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, 0);
  return v1;
}

uint64_t LifecyclePatrol.init()()
{
  uint64_t v0;

  swift_unknownObjectWeakInit(v0 + 16, 0);
  return v0;
}

double LifecyclePatrol.didInit(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v2 = v1;
  *(_QWORD *)&result = swift_beginAccess(&static LifecyclePatrol.isEnabled, v16, 0, 0).n128_u64[0];
  if (static LifecyclePatrol.isEnabled == 1)
  {
    v5 = sub_1000651F0();
    v13 = (void *)static OS_dispatch_queue.main.getter(v5, v6, v7, v8, v9, v10, v11, v12);
    v14 = swift_allocObject(&unk_100455A78, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, a1);
    v15 = swift_allocObject(&unk_100455AA0, 32, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v2;
    swift_retain(v14);
    swift_retain(v2);
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_1001F388C, v15, 1.0);

    swift_release(v14);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001F35B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F35D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t ObjectType;
  uint64_t v26;
  _BYTE v27[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = a2 + 16;
    Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
    if (Strong)
    {
      v9 = Strong;
      if (qword_10048CF50 != -1)
        swift_once(&qword_10048CF50, sub_1001F3950);
      v10 = type metadata accessor for Logger(0, v8);
      sub_1000086B4(v10, (uint64_t)qword_100496B00);
      swift_unknownObjectRetain_n(v5, 4, v11);
      v13 = swift_unknownObjectRetain_n(v9, 2, v12);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc(32, -1);
        v17 = swift_slowAlloc(96, -1);
        v26 = v17;
        *(_DWORD *)v16 = 136446722;
        ObjectType = swift_getObjectType();
        v18 = sub_100005574(&qword_100496BE0);
        v19 = (char *)String.init<A>(describing:)(&ObjectType, v18);
        *(_QWORD *)(v16 + 4) = sub_100019400(v19, v20, &v26);
        swift_unknownObjectRelease_n(v5, 2);
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2082;
        ObjectType = v5;
        v21 = (char *)String.init<A>(describing:)(&ObjectType, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v16 + 14) = sub_100019400(v21, v22, &v26);
        swift_unknownObjectRelease_n(v5, 2);
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 22) = 2082;
        ObjectType = v9;
        v23 = (char *)String.init<A>(describing:)(&ObjectType, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v16 + 24) = sub_100019400(v23, v24, &v26);
        swift_unknownObjectRelease_n(v9, 2);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "A new instance of %{public}s<%{public}s> while one already exists <%{public}s>", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy(v17, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v17, -1, -1);
        swift_slowDealloc(v16, -1, -1);
        swift_unknownObjectRelease(v9);

      }
      else
      {

        swift_unknownObjectRelease_n(v5, 4);
        swift_unknownObjectRelease_n(v9, 3);
      }
    }
    swift_unknownObjectWeakAssign(v6, v5);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_1001F3860()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F388C()
{
  uint64_t v0;

  return sub_1001F35D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t LifecyclePatrol.willDeinit(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (result)
  {
    v4 = result;
    result = swift_unknownObjectRelease(result);
    if (v4 == a1)
      return swift_unknownObjectWeakAssign(v1 + 16, 0);
  }
  return result;
}

uint64_t LifecyclePatrol.deinit()
{
  uint64_t v0;

  sub_1000FF204(v0 + 16);
  return v0;
}

uint64_t LifecyclePatrol.__deallocating_deinit()
{
  uint64_t v0;

  sub_1000FF204(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for LifecyclePatrol()
{
  return objc_opt_self(_TtC9MusicCore15LifecyclePatrol);
}

uint64_t sub_1001F3950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_100496B00);
  sub_1000086B4(v2, (uint64_t)qword_100496B00);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD000000000000010, 0x80000001003B6820);
}

unint64_t sub_1001F39D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100005574(&qword_100490400);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_1000F38AC(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_10009B414(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_10000684C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_10009B414((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_100008758((uint64_t)v34, &qword_100496CA0);
      swift_bridgeObjectRelease(v28);
      sub_1000F38AC(a1);
      swift_release(v3);
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_10000684C((uint64_t)v35 + 8, (uint64_t)v29);
    sub_100008758((uint64_t)v34, &qword_100496CA0);
    sub_10009B168(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_10009B168(v30, v32);
    v19 = v31;
    sub_10009B168(v32, v33);
    sub_10009B168(v33, &v31);
    result = sub_10009ABAC(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      *(_OWORD *)v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      sub_10000682C(v10);
      result = (unint64_t)sub_10009B168(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_10009B168(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1001F3DA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  unint64_t result;
  int64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[40];
  _OWORD v40[2];
  _OWORD v41[2];
  uint64_t v42;
  _OWORD v43[2];
  _OWORD v44[2];
  uint64_t v45;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100005574(&qword_100496C98);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v36 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v5) >> 6;
  v7 = (char *)v44 + 8;
  v8 = (char *)v41 + 8;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v34 = v1;
  while (1)
  {
    if (v6)
    {
      v16 = (v6 - 1) & v6;
      v17 = __clz(__rbit64(v6)) | (v10 << 6);
      v18 = v10;
    }
    else
    {
      v19 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v19 >= v35)
      {
LABEL_36:
        sub_1000F38AC(v1);
        return (unint64_t)v3;
      }
      v20 = *(_QWORD *)(v36 + 8 * v19);
      v18 = v10 + 1;
      if (!v20)
      {
        v18 = v10 + 2;
        if (v10 + 2 >= v35)
          goto LABEL_36;
        v20 = *(_QWORD *)(v36 + 8 * v18);
        if (!v20)
        {
          v18 = v10 + 3;
          if (v10 + 3 >= v35)
            goto LABEL_36;
          v20 = *(_QWORD *)(v36 + 8 * v18);
          if (!v20)
          {
            v18 = v10 + 4;
            if (v10 + 4 >= v35)
              goto LABEL_36;
            v20 = *(_QWORD *)(v36 + 8 * v18);
            if (!v20)
            {
              v21 = v10 + 5;
              if (v10 + 5 >= v35)
                goto LABEL_36;
              v20 = *(_QWORD *)(v36 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  v18 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_41;
                  if (v18 >= v35)
                    goto LABEL_36;
                  v20 = *(_QWORD *)(v36 + 8 * v18);
                  ++v21;
                  if (v20)
                    goto LABEL_26;
                }
              }
              v18 = v10 + 5;
            }
          }
        }
      }
LABEL_26:
      v16 = (v20 - 1) & v20;
      v17 = __clz(__rbit64(v20)) + (v18 << 6);
    }
    sub_10009B414(*(_QWORD *)(v1 + 48) + 40 * v17, (uint64_t)v43);
    sub_10000684C(*(_QWORD *)(v1 + 56) + 32 * v17, (uint64_t)v7);
    v41[0] = v44[0];
    v41[1] = v44[1];
    v42 = v45;
    v40[0] = v43[0];
    v40[1] = v43[1];
    sub_10009B414((uint64_t)v40, (uint64_t)v39);
    if (!swift_dynamicCast(&v37, v39, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v37 = 0;
      v38 = 0;
      sub_100008758((uint64_t)v40, &qword_100496CA0);
      v33 = v38;
LABEL_35:
      swift_bridgeObjectRelease(v33);
      sub_1000F38AC(v1);
      swift_release(v3);
      return 0;
    }
    v23 = v37;
    v22 = v38;
    sub_10000684C((uint64_t)v8, (uint64_t)v39);
    sub_100008758((uint64_t)v40, &qword_100496CA0);
    v24 = sub_100005574(&qword_1004904E8);
    if ((swift_dynamicCast(&v37, v39, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
    {
      v37 = 0;
      swift_bridgeObjectRelease(v22);
      v33 = v37;
      goto LABEL_35;
    }
    v25 = v18;
    v26 = v37;
    result = sub_10009ABAC(v23, v22);
    v27 = result;
    if ((v28 & 1) != 0)
    {
      v11 = v8;
      v12 = v7;
      v13 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v13[1]);
      *v13 = v23;
      v13[1] = v22;
      v14 = v3[7];
      v15 = 8 * v27;
      result = swift_bridgeObjectRelease(*(_QWORD *)(v14 + v15));
      *(_QWORD *)(v14 + v15) = v26;
      v7 = v12;
      v8 = v11;
      v1 = v34;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v29 = (uint64_t *)(v3[6] + 16 * result);
    *v29 = v23;
    v29[1] = v22;
    *(_QWORD *)(v3[7] + 8 * result) = v26;
    v30 = v3[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_39;
    v3[2] = v32;
LABEL_8:
    v10 = v25;
    v6 = v16;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1001F4178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t result;
  int64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _BYTE v42[32];
  _QWORD v43[2];
  uint64_t v44;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100005574((uint64_t *)&unk_1004903F0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v37 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v7 = &v44;
  v36 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (uint64_t *)&unk_100496CA8;
  v11 = (uint64_t *)&unk_100493380;
  v12 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v6)
    {
      v39 = (v6 - 1) & v6;
      v40 = v9;
      v20 = __clz(__rbit64(v6)) | (v9 << 6);
    }
    else
    {
      v21 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      if (v21 >= v36)
      {
LABEL_33:
        sub_1000F38AC(v1);
        return (unint64_t)v3;
      }
      v22 = *(_QWORD *)(v37 + 8 * v21);
      v23 = v9 + 1;
      if (!v22)
      {
        v23 = v9 + 2;
        if (v9 + 2 >= v36)
          goto LABEL_33;
        v22 = *(_QWORD *)(v37 + 8 * v23);
        if (!v22)
        {
          v23 = v9 + 3;
          if (v9 + 3 >= v36)
            goto LABEL_33;
          v22 = *(_QWORD *)(v37 + 8 * v23);
          if (!v22)
          {
            v23 = v9 + 4;
            if (v9 + 4 >= v36)
              goto LABEL_33;
            v22 = *(_QWORD *)(v37 + 8 * v23);
            if (!v22)
            {
              v24 = v9 + 5;
              if (v9 + 5 >= v36)
                goto LABEL_33;
              v22 = *(_QWORD *)(v37 + 8 * v24);
              if (!v22)
              {
                while (1)
                {
                  v23 = v24 + 1;
                  if (__OFADD__(v24, 1))
                    goto LABEL_38;
                  if (v23 >= v36)
                    goto LABEL_33;
                  v22 = *(_QWORD *)(v37 + 8 * v23);
                  ++v24;
                  if (v22)
                    goto LABEL_26;
                }
              }
              v23 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v39 = (v22 - 1) & v22;
      v40 = v23;
      v20 = __clz(__rbit64(v22)) + (v23 << 6);
    }
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    sub_10000684C(*(_QWORD *)(v1 + 56) + 32 * v20, (uint64_t)v7);
    v43[0] = v27;
    v43[1] = v26;
    sub_10000684C((uint64_t)v7, (uint64_t)v42);
    swift_bridgeObjectRetain_n(v26, 2);
    sub_100008758((uint64_t)v43, v10);
    v28 = sub_100005574(v11);
    if (!swift_dynamicCast(&v41, v42, v12, v28, 6))
    {
      v41 = 0;
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v41);
      sub_1000F38AC(v1);
      swift_release(v3);
      return 0;
    }
    v29 = v41;
    result = sub_10009ABAC(v27, v26);
    v30 = result;
    if ((v31 & 1) != 0)
    {
      v38 = v29;
      v13 = v12;
      v14 = v11;
      v15 = v7;
      v16 = v1;
      v17 = v10;
      v18 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v18[1]);
      *v18 = v27;
      v18[1] = v26;
      v10 = v17;
      v1 = v16;
      v7 = v15;
      v11 = v14;
      v12 = v13;
      v19 = v3[7];
      result = swift_bridgeObjectRelease(*(_QWORD *)(v19 + 8 * v30));
      *(_QWORD *)(v19 + 8 * v30) = v38;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v32 = (uint64_t *)(v3[6] + 16 * result);
    *v32 = v27;
    v32[1] = v26;
    *(_QWORD *)(v3[7] + 8 * result) = v29;
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_36;
    v3[2] = v35;
LABEL_8:
    v6 = v39;
    v9 = v40;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void sub_1001F44F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD v22[3];
  unsigned __int8 v23;

  v5 = *v2;
  v6 = (os_unfair_lock_s *)v2[2];
  v7 = (uint64_t)&v6[4];
  v8 = v6 + 11;
  os_unfair_lock_lock(v6 + 11);
  sub_1001F4B20(v7, v5, (uint64_t)v22);
  os_unfair_lock_unlock(v8);
  v9 = (void *)v22[0];
  if (v22[0])
  {
    v10 = v22[1];
    v21 = v22[2];
    v20 = v23;
    swift_bridgeObjectRetain();
    v11 = v9;
    v12 = sub_1001F4D78(v11, a1, a2);
    v14 = v13;
    v16 = v15;
    v19 = (uint64_t)&v19;
    v18 = v17 & 1;
    os_unfair_lock_lock(v8);
    sub_1001F5318(v7, v12, v14, v16, v18);
    os_unfair_lock_unlock(v8);
    sub_1001F6260(v9, v10);
    swift_bridgeObjectRelease(v10);

    swift_bridgeObjectRelease(v14);
  }
}

uint64_t sub_1001F4638(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

_QWORD *sub_1001F4674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  NSString v34;
  NSString v35;
  id v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  __n128 v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;

  v5 = v4;
  v8 = a2;
  v10 = type metadata accessor for Logger(0, a2);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v51 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v51 - v18;
  v5[3] = a1;
  v5[4] = v8;
  v5[5] = a3;
  v5[6] = a4;
  v20 = (void *)objc_opt_self(ICURLBagProvider);
  swift_retain(a4);
  v21 = objc_msgSend(v20, "sharedBagProvider");
  LODWORD(v8) = objc_msgSend(v21, "useAMSBag");

  if (!(_DWORD)v8)
  {
    if (qword_10048C770 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    v38 = Logger.init(_:)((id)static OS_os_log.musicBag);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "UserDefaults enabled as source for cached musicTabs.", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    v42 = swift_release(a4);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v42);
    goto LABEL_22;
  }
  if (qword_10048C7B8 != -1)
    swift_once(&qword_10048C7B8, sub_1000F4AB8);
  v22 = objc_msgSend((id)static ICClientInfo.music, "bagProfile");
  if (!v22)
  {
LABEL_17:
    if (qword_10048C770 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    v43 = Logger.init(_:)((id)static OS_os_log.musicBag);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "    AMSBag was intended to be enabled as source for cached musicTabs, but bag profile and/or version were unexpectedly nil.\n    Defaulting to .userDefaults configuration.", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    v47 = swift_release(a4);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v17, v10, v47);
LABEL_22:
    v36 = 0;
    v37 = 0;
    goto LABEL_23;
  }
  v23 = v22;
  v52 = v10;
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v25 = v24;

  v26 = objc_msgSend((id)static ICClientInfo.music, "bagProfileVersion");
  if (!v26)
  {
    swift_bridgeObjectRelease(v25);
    v10 = v52;
    goto LABEL_17;
  }
  v27 = v26;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  if (qword_10048C770 != -1)
    swift_once(&qword_10048C770, sub_1000F0340);
  v30 = Logger.init(_:)((id)static OS_os_log.musicBag);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "AMSBag enabled as source for cached musicTabs.", v33, 2u);
    swift_slowDealloc(v33, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v52);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v36 = objc_msgSend((id)objc_opt_self(AMSBag), "bagForProfile:profileVersion:", v34, v35);
  swift_release(a4);

  v37 = 1;
LABEL_23:
  v48 = sub_100005574(&qword_100496CC0);
  v49 = swift_allocObject(v48, 48, 7);
  *(_DWORD *)(v49 + 44) = 0;
  *(_QWORD *)(v49 + 24) = 0;
  *(_QWORD *)(v49 + 32) = 0;
  *(_QWORD *)(v49 + 16) = v36;
  *(_BYTE *)(v49 + 40) = v37;
  v5[2] = v49;
  return v5;
}

void sub_1001F4B20(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v4 = v3;
  v8 = type metadata accessor for Logger(0, a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v13 = *(_QWORD *)(a1 + 8);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0 && !*(_QWORD *)(a1 + 16))
    {
      *(_QWORD *)(a1 + 16) = 1;
      *(_BYTE *)(a1 + 24) = 1;
      *(_QWORD *)a3 = v12;
      *(_QWORD *)(a3 + 8) = v13;
      *(_QWORD *)(a3 + 16) = 1;
      *(_BYTE *)(a3 + 24) = 1;
      swift_bridgeObjectRetain();
      v14 = v12;
      return;
    }
    v15 = qword_10048C770;
    v28 = v12;
    swift_bridgeObjectRetain();
    if (v15 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    v16 = Logger.init(_:)((id)static OS_os_log.musicBag);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(22, -1);
      v27 = v4;
      v20 = v19;
      v26 = swift_slowAlloc(64, -1);
      v29 = v26;
      *(_DWORD *)v20 = 136315394;
      v21 = (char *)_typeName(_:qualified:)(a2, 0);
      v23 = v22;
      *(_QWORD *)(v20 + 4) = sub_100019400(v21, v22, &v29);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v20 + 12) = 2080;
      *(_QWORD *)(v20 + 14) = sub_100019400((char *)0xD000000000000021, (char *)0x80000001003B6950, &v29);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "    An unexpected attempt to configure an %s instance twice using %s will be ignored.", (uint8_t *)v20, 0x16u);
      v24 = v26;
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease(v13);

  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 16) = 0;
}

id sub_1001F4D78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  Swift::Int v16;
  Class isa;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  __int128 aBlock;
  __int128 v59;
  uint64_t (*v60)(uint64_t);
  _QWORD *v61;
  char v62[48];

  v4 = v3;
  v8 = type metadata accessor for Logger(0, a2);
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  v9 = __chkstk_darwin(v8);
  v53 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (char *)&v51 - v11;
  v57 = objc_msgSend((id)objc_opt_self(AMSBag), "uninitializedToken");
  v12 = *(_QWORD *)(v3 + 24);
  v13 = *(_QWORD *)(v4 + 32);
  v14 = sub_100005574((uint64_t *)&unk_100491700);
  inited = swift_initStackObject(v14, v62);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  swift_bridgeObjectRetain_n(v13, 2);
  v16 = sub_1000D28CC(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, &type metadata for String);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v18 = swift_allocObject(&unk_100455B58, 24, 7);
  swift_weakInit(v18 + 16, v4);
  v19 = (_QWORD *)swift_allocObject(&unk_100455B80, 56, 7);
  v19[2] = v18;
  v19[3] = v12;
  v19[4] = v13;
  v19[5] = a2;
  v19[6] = a3;
  v60 = sub_1001F6704;
  v61 = v19;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v59 = sub_1001F61F4;
  *((_QWORD *)&v59 + 1) = &unk_100455B98;
  v20 = _Block_copy(&aBlock);
  v21 = v61;
  swift_bridgeObjectRetain();
  swift_retain(a3);
  v22 = v21;
  v23 = a1;
  v24 = objc_msgSend(a1, "cachedValuesForKeys:observationToken:updateHandler:", isa, &v57, v20, swift_release(v22).n128_f64[0]);
  _Block_release(v20);

  v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v24, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  if (*(_QWORD *)(v25 + 16) && (v26 = sub_10009ABAC(v12, v13), (v27 & 1) != 0))
  {
    sub_10000684C(*(_QWORD *)(v25 + 56) + 32 * v26, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v59 = 0u;
  }
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v25);
  if (*((_QWORD *)&v59 + 1))
  {
    v28 = sub_100005574(&qword_100490BF8);
    if ((swift_dynamicCast(&v56, &aBlock, (char *)&type metadata for Any + 8, v28, 6) & 1) != 0)
    {
      v29 = v56;
      v30 = qword_10048C770;
      swift_bridgeObjectRetain();
      if (v30 != -1)
        swift_once(&qword_10048C770, sub_1000F0340);
      v31 = (id)static OS_os_log.musicBag;
      v32 = v52;
      Logger.init(_:)(v31);
      v33 = swift_bridgeObjectRetain();
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        *(_QWORD *)&aBlock = v37;
        *(_DWORD *)v36 = 136315138;
        v38 = sub_1001F628C(v29);
        v39 = sub_100005574(&qword_10048E158);
        v40 = (char *)Dictionary.description.getter(v38, &type metadata for String, v39, &protocol witness table for String);
        v41 = v23;
        v43 = v42;
        swift_release(v38);
        *(_QWORD *)(v36 + 4) = sub_100019400(v40, v43, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n(v29, 2);
        v44 = v43;
        v23 = v41;
        swift_bridgeObjectRelease(v44);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "AMSBag provided initial state of musicTabs: %s", (uint8_t *)v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v55);
      }
      else
      {

        swift_bridgeObjectRelease_n(v29, 2);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v32, v55);
      }
      return v23;
    }
  }
  else
  {
    sub_100008758((uint64_t)&aBlock, &qword_100491B90);
  }
  v45 = v53;
  if (qword_10048C770 != -1)
    swift_once(&qword_10048C770, sub_1000F0340);
  v46 = Logger.init(_:)((id)static OS_os_log.musicBag);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "AMSBag didn't provide initial state of musicTabs. No cached value was found.", v49, 2u);
    swift_slowDealloc(v49, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v55);
  return v23;
}

id sub_1001F5318(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  char v9;

  v9 = a5 & 1;
  sub_1001F6260(*(void **)a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_BYTE *)(a1 + 24) = v9;
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1001F5384@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  NSString v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (*a1)
  {
    *a4 = a1[1];
    return swift_bridgeObjectRetain();
  }
  else if (a2
         && (v8 = String._bridgeToObjectiveC()(),
             v9 = objc_msgSend(a2, "dictionaryForBagKey:", v8),
             v8,
             v9)
         && (v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v9, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v9, v11 = sub_1001F3DA0(v10), result = swift_bridgeObjectRelease(v10), v11))
  {
    *a4 = v11;
  }
  else
  {
    v12 = (*(uint64_t (**)(void))(a3 + 40))();
    result = swift_bridgeObjectRelease(0);
    *a4 = v12;
  }
  return result;
}

uint64_t *sub_1001F5474()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  id v5;
  id v7[3];
  char v8;

  v1 = *v0;
  v2 = (os_unfair_lock_s *)v0[2];
  v3 = (uint64_t)&v2[4];
  v4 = v2 + 11;
  os_unfair_lock_lock(v2 + 11);
  sub_1001F5520(v3, v1, (uint64_t)v7);
  os_unfair_lock_unlock(v4);
  v5 = v7[0];
  if (v7[0])
  {
    if ((v8 & 1) == 0)
      objc_msgSend(v7[0], "removeObserverWithToken:", v7[2]);

    swift_bridgeObjectRelease();
  }
  swift_release(v0[2]);
  swift_bridgeObjectRelease();
  swift_release(v0[6]);
  return v0;
}

id sub_1001F5520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  char *v12;
  void *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = v3;
  v8 = type metadata accessor for Logger(0, a2);
  v9 = *(_QWORD *)(v8 - 8);
  result = (id)__chkstk_darwin(v8);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v14 = *(_OWORD *)(a1 + 8);
    if ((*(_BYTE *)(a1 + 24) & 1) == 0)
    {
      *(_QWORD *)a3 = v13;
      *(_OWORD *)(a3 + 8) = v14;
      *(_BYTE *)(a3 + 24) = 0;
      swift_bridgeObjectRetain();
      return v13;
    }
    v15 = *(_QWORD *)(a1 + 8);
    v16 = qword_10048C770;
    v17 = v13;
    v30 = v15;
    swift_bridgeObjectRetain();
    if (v16 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    v18 = Logger.init(_:)((id)static OS_os_log.musicBag);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v28 = v17;
      v22 = v21;
      v23 = swift_slowAlloc(32, -1);
      v29 = v4;
      v24 = v23;
      v31 = v23;
      *(_DWORD *)v22 = 136315138;
      v25 = (char *)_typeName(_:qualified:)(a2, 0);
      *(_QWORD *)(v22 + 4) = sub_100019400(v25, v26, &v31);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "    %s wasn't configured with an AMSBag update handler prior to deallocation. This may have caused musicTabs updates to be missed after initialization.", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v22, -1, -1);
      swift_bridgeObjectRelease();

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1001F5754()
{
  uint64_t v0;

  sub_1001F5474();
  return swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for MusicTabsDictionaryProvider()
{
  return objc_opt_self(_TtC9MusicCore27MusicTabsDictionaryProvider);
}

id *destroy for MusicTabsDictionaryProvider.Configuration(id *result)
{
  id *v1;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    return (id *)swift_bridgeObjectRelease(v1[1]);
  }
  return result;
}

uint64_t initializeWithCopy for MusicTabsDictionaryProvider.Configuration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    v4 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v4;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v6 = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MusicTabsDictionaryProvider.Configuration(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  __int128 v11;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 16) = v9;
      v10 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v11 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v11;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

__n128 initializeWithTake for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MusicTabsDictionaryProvider.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1001F5A5C(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration;
}

uint64_t sub_1001F5A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 aBlock;
  __int128 v44;
  uint64_t (*v45)();
  _QWORD *v46;
  char v47[24];

  v40 = a5;
  v41 = a6;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v47, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v19 = result;
    v20 = *(_QWORD *)(a1 + 16);
    v38 = v14;
    v39 = v11;
    if (v20)
    {
      swift_bridgeObjectRetain();
      v21 = sub_10009ABAC(a3, a4);
      if ((v22 & 1) != 0)
      {
        sub_10000684C(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v44 = 0u;
      }
      swift_bridgeObjectRelease(a4);
      if (*((_QWORD *)&v44 + 1))
      {
        v23 = sub_100005574(&qword_100490BF8);
        if (swift_dynamicCast(&v42, &aBlock, (char *)&type metadata for Any + 8, v23, 6))
          v24 = v42;
        else
          v24 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      aBlock = 0u;
      v44 = 0u;
    }
    sub_100008758((uint64_t)&aBlock, &qword_100491B90);
    v24 = 0;
LABEL_12:
    v25 = *(os_unfair_lock_s **)(v19 + 16);
    v26 = (uint64_t)&v25[4];
    v27 = v25 + 11;
    os_unfair_lock_lock(v25 + 11);
    sub_1001F5DAC(v26, v24, (char *)&aBlock);
    os_unfair_lock_unlock(v27);
    if (aBlock == 1)
    {
      sub_1000651F0();
      v28 = (void *)static OS_dispatch_queue.main.getter();
      v29 = (_QWORD *)swift_allocObject(&unk_100455BD0, 40, 7);
      v30 = v41;
      v29[2] = v40;
      v29[3] = v30;
      v29[4] = v24;
      v45 = sub_1001F6758;
      v46 = v29;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v44 = sub_1000BED80;
      *((_QWORD *)&v44 + 1) = &unk_100455BE8;
      v31 = _Block_copy(&aBlock);
      v32 = v46;
      swift_retain(v30);
      v33 = swift_release(v32);
      static DispatchQoS.unspecified.getter(v33);
      *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
      v34 = sub_1000BE0EC();
      v35 = sub_100005574(&qword_100490838);
      v36 = sub_1000B0348();
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v35, v36, v10, v34);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v13, v31);
      _Block_release(v31);
      swift_release(v19);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v38);
    }
    else
    {
      swift_release(v19);
      return swift_bridgeObjectRelease(v24);
    }
  }
  return result;
}

uint64_t sub_1001F5DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  void *v31;
  uint64_t result;
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  id v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  v7 = type metadata accessor for Logger(0, a2);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v45 - v12;
  v14 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v47 = v7;
    v48 = v3;
    v16 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a1 + 16);
    v17 = *(_BYTE *)(a1 + 24) & 1;
    v52 = a2;
    v53 = v15;
    v54 = v17;
    v51 = v14;
    *(_QWORD *)(a1 + 8) = a2;
    *(_BYTE *)(a1 + 24) = v17;
    v18 = qword_10048C770;
    swift_bridgeObjectRetain_n(a2, 2);
    v19 = v14;
    if (v18 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    Logger.init(_:)((id)static OS_os_log.musicBag);
    v20 = swift_bridgeObjectRetain();
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v46 = a3;
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v55 = v24;
      *(_DWORD *)v23 = 136315394;
      if (v16)
      {
        v25 = v48;
        v26 = sub_1001F628C(v16);
        v48 = v25;
      }
      else
      {
        v26 = 0;
      }
      v50[0] = v26;
      v34 = sub_100005574(&qword_100496CB8);
      v35 = (char *)String.init<A>(describing:)(v50, v34);
      v37 = v36;
      *(_QWORD *)(v23 + 4) = sub_100019400(v35, v36, &v55);
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease(v37);
      *(_WORD *)(v23 + 12) = 2080;
      swift_beginAccess(&v51, v50, 0, 0);
      v38 = v52;
      if (v52)
      {
        v39 = swift_bridgeObjectRetain();
        v40 = v48;
        v41 = sub_1001F628C(v39);
        v48 = v40;
        swift_bridgeObjectRelease(v38);
      }
      else
      {
        v41 = 0;
      }
      v49 = v41;
      v42 = (char *)String.init<A>(describing:)(&v49, v34);
      v44 = v43;
      *(_QWORD *)(v23 + 14) = sub_100019400(v42, v43, &v55);
      swift_bridgeObjectRelease(v44);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "    AMSBag provided updated musicTabs dictionary.\n    Previous: %s\n    Updated: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v47);
      result = swift_bridgeObjectRelease(v52);
      a3 = v46;
    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v47);

      result = swift_bridgeObjectRelease(v52);
    }
    v33 = 1;
  }
  else
  {
    if (qword_10048C770 != -1)
      swift_once(&qword_10048C770, sub_1000F0340);
    v27 = Logger.init(_:)((id)static OS_os_log.musicBag);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc(12, -1);
      v31 = (void *)swift_slowAlloc(32, -1);
      v51 = v31;
      *(_DWORD *)v30 = 136315138;
      *(_QWORD *)(v30 + 4) = sub_100019400((char *)0xD000000000000047, (char *)0x80000001003B6900, (uint64_t *)&v51);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unexpected update handler call in %s with .userDefaults configuration. This is likely programmer error.", (uint8_t *)v30, 0xCu);
      swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v30, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v33 = 0;
  }
  *a3 = v33;
  return result;
}

uint64_t sub_1001F61F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

void *sub_1001F6260(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_1001F628C(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;
  Swift::String v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  __int128 v48;
  _QWORD v49[5];
  _OWORD v50[2];
  _QWORD *v51;

  sub_100005574(&qword_100496CB0);
  result = static _DictionaryStorage.copy(original:)(a1);
  v3 = (_QWORD *)result;
  v4 = 0;
  v40 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v36 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v38 = (unint64_t)(v6 + 63) >> 6;
  v39 = result + 64;
  v37 = (_QWORD *)result;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * i);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v41 = *v14;
      v43 = i;
      v44 = v4;
      v51 = _swiftEmptyArrayStorage;
      v42 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10007736C(0, v18, 0);
      v19 = 0;
      v20 = v51;
      do
      {
        v21 = *(_QWORD *)(v17 + 8 * v19 + 32);
        *(_QWORD *)&v47 = 25705;
        *((_QWORD *)&v47 + 1) = 0xE200000000000000;
        AnyHashable.init<A>(_:)(v49, &v47, &type metadata for String, &protocol witness table for String);
        if (*(_QWORD *)(v21 + 16) && (v22 = sub_1000A580C((uint64_t)v49), (v23 & 1) != 0))
        {
          sub_10000684C(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v47);
        }
        else
        {
          v47 = 0u;
          v48 = 0u;
        }
        sub_10009B178((uint64_t)v49);
        if (*((_QWORD *)&v48 + 1))
        {
          sub_10009B168(&v47, v50);
          sub_10000684C((uint64_t)v50, (uint64_t)v49);
          v24 = swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, &type metadata for String, 6);
          v26 = *((_QWORD *)&v47 + 1);
          v25 = v47;
          sub_10000684C((uint64_t)v50, (uint64_t)&v47);
          if (!v24 || !v26)
          {
            v45 = 0;
            v46 = 0xE000000000000000;
            _StringGuts.grow(_:)(23);
            v27._countAndFlagsBits = 0xD000000000000014;
            v27._object = (void *)0x80000001003B68E0;
            String.append(_:)(v27);
            _print_unlocked<A, B>(_:_:)(&v47, &v45, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            v28._countAndFlagsBits = 62;
            v28._object = (void *)0xE100000000000000;
            String.append(_:)(v28);
            v25 = v45;
            v26 = v46;
          }
          sub_10000682C(&v47);
          sub_10000682C(v50);
        }
        else
        {
          sub_100008758((uint64_t)&v47, &qword_100491B90);
          v26 = 0xEF3E746E65736261;
          v25 = 0x204449206261743CLL;
        }
        v51 = v20;
        v30 = v20[2];
        v29 = v20[3];
        if (v30 >= v29 >> 1)
        {
          sub_10007736C((char *)(v29 > 1), v30 + 1, 1);
          v20 = v51;
        }
        ++v19;
        v20[2] = v30 + 1;
        v31 = &v20[2 * v30];
        v31[4] = v25;
        v31[5] = v26;
      }
      while (v18 != v19);
      swift_bridgeObjectRelease(v17);
      v3 = v37;
      v4 = v44;
      result = v42;
      i = v43;
      v16 = v41;
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v20 = _swiftEmptyArrayStorage;
    }
    *(_QWORD *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v32 = (_QWORD *)(v3[6] + 16 * i);
    *v32 = v16;
    v32[1] = result;
    *(_QWORD *)(v3[7] + 8 * i) = v20;
    v33 = v3[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v3[2] = v35;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_39;
    if (v11 >= v38)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v36 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v38)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v36 + 8 * v4);
      if (!v12)
        break;
    }
LABEL_16:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 2;
  if (v13 >= v38)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v36 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v38)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v36 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_16;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001F66AC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001F66D0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001F6704(uint64_t a1)
{
  uint64_t *v1;

  return sub_1001F5A90(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001F6714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001F6724(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1001F672C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001F6758()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t destroy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t initializeWithCopy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t assignWithTake for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration;
}

uint64_t getEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1001F698C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1001F69A8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State()
{
  return &type metadata for MusicTabsDictionaryProvider.Configuration.AMSBagConfiguration.State;
}

uint64_t PlayActivityFeatureIdentifier.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001F6A20 + 4 * byte_100392670[a1]))(0x65645F6D75626C61, 0xEC0000006C696174);
}

uint64_t sub_1001F6A20()
{
  return 0x736D75626C61;
}

uint64_t sub_1001F6A34()
{
  return 0x5F7972617262696CLL;
}

uint64_t sub_1001F6A58()
{
  return 0x74616C69706D6F63;
}

uint64_t sub_1001F6A78()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_1001F6B10()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1001F6B34()
{
  return 0x796C746E65636572;
}

unint64_t sub_1001F6B58()
{
  return 0xD000000000000013;
}

uint64_t sub_1001F6B74()
{
  return 0x73676E6F73;
}

uint64_t sub_1001F6B88()
{
  return 0x73776F6873;
}

uint64_t sub_1001F6B9C()
{
  return 0x7365646F73697065;
}

uint64_t sub_1001F6BB4()
{
  return 0x79616C705F776F6ELL;
}

uint64_t sub_1001F6BD4()
{
  return 0x616C705F696E696DLL;
}

uint64_t PlayActivityFeatureIdentifier.id.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001F6C30 + 4 * byte_100392682[a1]))(0x65645F6D75626C61, 0xEC0000006C696174);
}

uint64_t sub_1001F6C30()
{
  return 0x736D75626C61;
}

uint64_t sub_1001F6C44()
{
  return 0x5F7972617262696CLL;
}

uint64_t sub_1001F6C68()
{
  return 0x74616C69706D6F63;
}

uint64_t sub_1001F6C88()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_1001F6D20()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1001F6D44()
{
  return 0x796C746E65636572;
}

unint64_t sub_1001F6D68()
{
  return 0xD000000000000013;
}

uint64_t sub_1001F6D84()
{
  return 0x73676E6F73;
}

uint64_t sub_1001F6D98()
{
  return 0x73776F6873;
}

uint64_t sub_1001F6DAC()
{
  return 0x7365646F73697065;
}

uint64_t sub_1001F6DC4()
{
  return 0x79616C705F776F6ELL;
}

uint64_t sub_1001F6DE4()
{
  return 0x616C705F696E696DLL;
}

uint64_t sub_1001F6E04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v2 = *a2;
  v3 = PlayActivityFeatureIdentifier.rawValue.getter(*a1);
  v5 = v4;
  v6 = PlayActivityFeatureIdentifier.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

Swift::Int sub_1001F6E8C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = PlayActivityFeatureIdentifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1001F6EEC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = PlayActivityFeatureIdentifier.rawValue.getter(*v1);
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001F6F2C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  v2 = PlayActivityFeatureIdentifier.rawValue.getter(v1);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1001F6F88@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1001F6FB4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = PlayActivityFeatureIdentifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001F6FDC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = PlayActivityFeatureIdentifier.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_10043E660, a1, a2, &unk_10048CFD8);
  swift_bridgeObjectRelease(a2);
  if (v3 >= 0x12)
    return 18;
  else
    return v3;
}

unint64_t sub_1001F7058()
{
  unint64_t result;

  result = qword_100496CC8;
  if (!qword_100496CC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayActivityFeatureIdentifier, &type metadata for PlayActivityFeatureIdentifier);
    atomic_store(result, (unint64_t *)&qword_100496CC8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlayActivityFeatureIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayActivityFeatureIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1001F7178 + 4 * byte_100392699[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1001F71AC + 4 * byte_100392694[v4]))();
}

uint64_t sub_1001F71AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F71B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F71BCLL);
  return result;
}

uint64_t sub_1001F71C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F71D0);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1001F71D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F71DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayActivityFeatureIdentifier()
{
  return &type metadata for PlayActivityFeatureIdentifier;
}

uint64_t QRCode.init(data:errorCorrectionLevel:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6[5];

  sub_1001F7B60(a1, a2, a3, v6);
  return sub_1001F82A0((uint64_t)v6, a4);
}

void sub_1001F7230()
{
  qword_100496CD0 = Int.seconds.getter(10);
}

uint64_t QRCode.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1000516F8(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

id QRCode.image.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void sub_1001F7288(void *a1, void *a2, CGImage *a3, uint64_t a4, CGContext *a5, double a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11)
{
  CGContext *v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double Height;
  void *v26;
  id v27;
  void *v28;
  double v29;
  id v30;
  double v31;
  double v32;
  id v33;
  void *v34;
  double v35;
  id v36;
  double v37;
  id v38;
  void *v39;
  double v40;
  CGFloat v41;
  id v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double Width;
  uint64_t v48;
  uint64_t i;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGContext *v53;
  int64_t BytesPerRow;
  int64_t v55;
  uint64_t v56;
  BOOL v57;
  int64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v64;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;

  objc_msgSend(a1, "beginPage");
  v64 = a1;
  v18 = (CGContext *)objc_msgSend(a1, "CGContext");
  if (qword_10048CF58 != -1)
    goto LABEL_66;
  while (1)
  {
    CGContextSetLineWidth(v18, *(CGFloat *)&qword_100496CD0);

    v19 = (void *)objc_opt_self(UIColor);
    v20 = objc_msgSend(v19, "whiteColor");
    objc_msgSend(v20, "setStroke");

    v21 = objc_msgSend(v19, "whiteColor");
    objc_msgSend(v21, "setFill");

    v22 = *(double *)&qword_100496CD0;
    v23 = *(double *)&qword_100496CD0 * a6;
    v68.origin.x = a7;
    v68.origin.y = a8;
    v68.size.width = a9;
    v68.size.height = a10;
    v24 = CGRectGetWidth(v68) - v23;
    v69.origin.x = a7;
    v69.origin.y = a8;
    v69.size.width = a9;
    v69.size.height = a10;
    Height = CGRectGetHeight(v69);
    v26 = (void *)objc_opt_self(UIBezierPath);
    a8 = 0.5;
    v70.origin.x = 0.0;
    v70.origin.y = 0.0;
    v70.size.width = v22 * a6;
    v70.size.height = v22 * a6;
    v71 = CGRectInset(v70, v22 * 0.5, v22 * 0.5);
    v27 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", v71.origin.x, v71.origin.y, v71.size.width, v71.size.height, 10.0);
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "setLineWidth:", v22);
      objc_msgSend(v28, "stroke");
      v29 = v22 * a11;
      v72.origin.x = 0.0;
      v72.origin.y = 0.0;
      v72.size.width = v23;
      v72.size.height = v23;
      a7 = v29 * 0.5;
      a9 = CGRectGetMidX(v72) - v29 * 0.5;
      v73.origin.x = 0.0;
      v73.origin.y = 0.0;
      v73.size.width = v23;
      v73.size.height = v23;
      v30 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", a9, CGRectGetMidY(v73) - v29 * 0.5, v29, v29, 2.0);
      objc_msgSend(v30, "fill");

    }
    v31 = Height - v23;
    v32 = *(double *)&qword_100496CD0;
    v74.origin.y = 0.0;
    v74.origin.x = v24;
    v74.size.width = v23;
    v74.size.height = v23;
    v75 = CGRectInset(v74, *(double *)&qword_100496CD0 * 0.5, *(double *)&qword_100496CD0 * 0.5);
    v33 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", v75.origin.x, v75.origin.y, v75.size.width, v75.size.height, 10.0);
    if (v33)
    {
      v34 = v33;
      objc_msgSend(v33, "setLineWidth:", v32);
      objc_msgSend(v34, "stroke");
      v35 = v32 * a11;
      v76.origin.y = 0.0;
      v76.origin.x = v24;
      v76.size.width = v23;
      v76.size.height = v23;
      a8 = v35 * 0.5;
      a9 = CGRectGetMidX(v76) - v35 * 0.5;
      v77.origin.y = 0.0;
      v77.origin.x = v24;
      v77.size.width = v23;
      v77.size.height = v23;
      v36 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", a9, CGRectGetMidY(v77) - v35 * 0.5, v35, v35, 2.0);
      objc_msgSend(v36, "fill");

    }
    v37 = *(double *)&qword_100496CD0;
    v78.origin.x = 0.0;
    v78.origin.y = v31;
    v78.size.width = v23;
    v78.size.height = v23;
    v79 = CGRectInset(v78, *(double *)&qword_100496CD0 * 0.5, *(double *)&qword_100496CD0 * 0.5);
    v38 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", v79.origin.x, v79.origin.y, v79.size.width, v79.size.height, 10.0);
    if (v38)
    {
      v39 = v38;
      objc_msgSend(v38, "setLineWidth:", v37);
      objc_msgSend(v39, "stroke");
      v40 = v37 * a11;
      v80.origin.x = 0.0;
      v80.origin.y = v31;
      v80.size.width = v23;
      v80.size.height = v23;
      a9 = v40 * 0.5;
      v41 = CGRectGetMidX(v80) - v40 * 0.5;
      v81.origin.x = 0.0;
      v81.origin.y = v31;
      v81.size.width = v23;
      v81.size.height = v23;
      v42 = objc_msgSend(v26, "_bezierPathWithPillRect:cornerRadius:", v41, CGRectGetMidY(v81) - v40 * 0.5, v40, v40, 2.0);
      objc_msgSend(v42, "fill");

    }
    objc_msgSend(a2, "extent");
    v43 = CGRectGetHeight(v82);
    if ((~*(_QWORD *)&v43 & 0x7FF0000000000000) == 0)
      break;
    if (v43 <= -9.22337204e18)
      goto LABEL_68;
    if (v43 >= 9.22337204e18)
      goto LABEL_69;
    v44 = (uint64_t)v43;
    if ((uint64_t)v43 < 1)
      goto LABEL_70;
    v18 = a5;
    if ((uint64_t)v43 == 1)
      return;
    v45 = (uint64_t)a6;
    v46 = 1;
    a10 = -1.0;
    *(_QWORD *)&a11 = (uint64_t)v43;
    while (1)
    {
      if (v46 == v44)
        goto LABEL_61;
      objc_msgSend(a2, "extent");
      Width = CGRectGetWidth(v83);
      if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
        break;
      if (Width <= -9.22337204e18)
        goto LABEL_63;
      if (Width >= 9.22337204e18)
        goto LABEL_64;
      v48 = (uint64_t)Width;
      if ((uint64_t)Width < 1)
        goto LABEL_65;
      if ((uint64_t)Width != 1)
      {
        a9 = (double)(v46 - 1);
        for (i = 1; v48 != i; ++i)
        {
          BytesPerRow = CGImageGetBytesPerRow(a3);
          v55 = BytesPerRow * v46;
          if ((unsigned __int128)(BytesPerRow * (__int128)v46) >> 64 != (BytesPerRow * v46) >> 63)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          v56 = i * a4;
          if ((unsigned __int128)(i * (__int128)a4) >> 64 != (i * a4) >> 63)
            goto LABEL_48;
          v57 = __OFADD__(v55, v56);
          v58 = v55 + v56;
          if (v57)
            goto LABEL_49;
          if (!*((_BYTE *)v18 + v58))
          {
            if ((*(_QWORD *)&a6 & 0x7FF0000000000000) == 0x7FF0000000000000)
              goto LABEL_50;
            if (a6 <= -9.22337204e18)
              goto LABEL_51;
            if (a6 >= 9.22337204e18)
              goto LABEL_52;
            objc_msgSend(a2, "extent");
            v59 = CGRectGetWidth(v85);
            if ((~*(_QWORD *)&v59 & 0x7FF0000000000000) == 0)
              goto LABEL_53;
            if (v59 <= -9.22337204e18)
              goto LABEL_54;
            if (v59 >= 9.22337204e18)
              goto LABEL_55;
            v60 = (uint64_t)v59;
            if (v46 <= v45)
            {
              if (i <= v45)
                continue;
              v57 = __OFSUB__(v60, v45);
              v61 = v60 - v45;
              if (v57)
                goto LABEL_59;
              if (__OFSUB__(v61, 1))
                goto LABEL_60;
              if (i >= v61 - 1)
                continue;
            }
            else
            {
              v57 = __OFSUB__(v60, v45);
              v61 = v60 - v45;
              if (v57)
                goto LABEL_56;
            }
            v57 = __OFSUB__(v61, 1);
            v62 = v61 - 1;
            if (v57)
              goto LABEL_57;
            if (v46 < v62 || i > v45)
            {
              if (__OFSUB__(i, 1))
                goto LABEL_58;
              v50 = *(double *)&qword_100496CD0 * (double)(i - 1);
              v51 = *(double *)&qword_100496CD0 * a9;
              v52 = *(double *)&qword_100496CD0 + -1.0;
              v53 = (CGContext *)objc_msgSend(v64, "CGContext");
              v84.origin.x = v50;
              v84.origin.y = v51;
              v84.size.width = v52;
              v84.size.height = v52;
              CGContextFillEllipseInRect(v53, v84);

              v18 = a5;
            }
          }
        }
      }
      ++v46;
      v44 = *(_QWORD *)&a11;
      if (v46 == *(_QWORD *)&a11)
        return;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once(&qword_10048CF58, sub_1001F7230);
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t QRCode.with(errorCorrectionLevel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8[5];

  v6 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  sub_1000516F8(v6, v5);
  sub_1001F7B60(v6, v5, a1, v8);
  return sub_1001F82A0((uint64_t)v8, a2);
}

double QRCode.dotAdjustedWidth(with:scale:)(double a1)
{
  uint64_t *v1;
  double v2;

  v2 = (double)*v1;
  return UIRoundToScale(a1 / v2) * v2;
}

CGMutablePathRef QRCode.dotAlignedPath(with:in:imageBounds:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  uint64_t *v9;
  double Width;
  uint64_t v16;
  double MinX;
  double MinY;
  CGMutablePathRef result;
  CGMutablePathRef v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double *v27;
  _QWORD v28[6];
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v29.origin.x = a6;
  v29.origin.y = a7;
  v29.size.width = a8;
  v29.size.height = a9;
  Width = CGRectGetWidth(v29);
  v16 = *v9;
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  MinX = CGRectGetMinX(v30);
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  MinY = CGRectGetMinY(v31);
  swift_bridgeObjectRetain();
  result = CGPathCreateMutable();
  if (*(_QWORD *)(a1 + 16))
  {
    v20 = result;
    v21 = Width / (double)v16;
    v22 = floor(MinX / v21);
    v23 = floor(MinY / v21);
    v25 = *(double *)(a1 + 32);
    v24 = *(double *)(a1 + 40);
    sub_10004073C(0, 1);
    v28[0] = 0x3FF0000000000000;
    v28[1] = 0;
    v28[2] = 0;
    v28[3] = 0x3FF0000000000000;
    v28[4] = 0;
    v28[5] = 0;
    CGMutablePathRef.move(to:transform:)(v28, v21 * (v22 + ceil(v25 / v21)), v21 * (v23 + ceil(v24 / v21)));
    v26 = *(_QWORD *)(a1 + 16);
    if (v26)
    {
      v27 = (double *)(a1 + 40);
      do
      {
        CGMutablePathRef.addLine(to:transform:)(v28, v21 * (v22 + ceil(*(v27 - 1) / v21)), v21 * (v23 + ceil(*v27 / v21)));
        v27 += 2;
        --v26;
      }
      while (v26);
    }
    swift_bridgeObjectRelease();
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001F7B60(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void *v8;
  id v9;
  Class isa;
  NSString v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;
  void *v16;
  id v17;
  CGImage *v18;
  CGDataProvider *v19;
  uint64_t v20;
  const __CFData *v21;
  const UInt8 *BytePtr;
  const UInt8 *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  const __CFData *v39;
  CGDataProvider *v40;
  uint64_t v41;
  CGPDFDocument *v42;
  CGPDFDocument *v43;
  id v44;
  uint64_t v45;
  double Width;
  double v47;
  uint64_t v48;
  id v49;
  id v50;
  unint64_t v51;
  CGPDFPage *v52;
  CGImage *v53;
  id v54;
  uint64_t v55;
  const __CFData *v56;
  id v57;
  _QWORD aBlock[5];
  uint64_t v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v8 = (void *)objc_opt_self(CIFilter);
  sub_1000516F8(a1, a2);
  v9 = objc_msgSend(v8, "QRCodeGenerator");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setValue:forKey:", isa, v11);

  v12 = v9;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setValue:forKey:", v13, v14);

  v15 = objc_msgSend(v12, "outputImage");
  if (!v15)
  {
    sub_1000067E8(a1, a2);
LABEL_19:

    v21 = 0;
LABEL_20:
    v20 = 0;
    goto LABEL_21;
  }
  v16 = v15;
  v17 = objc_msgSend(objc_allocWithZone((Class)CIContext), "init");
  objc_msgSend(v16, "extent");
  v18 = (CGImage *)objc_msgSend(v17, "createCGImage:fromRect:", v16);

  if (!v18)
  {
    sub_1000067E8(a1, a2);

    goto LABEL_19;
  }
  v19 = CGImageGetDataProvider(v18);
  v20 = (uint64_t)v19;
  if (!v19)
  {
    sub_1000067E8(a1, a2);

    v21 = 0;
    goto LABEL_21;
  }
  v21 = CGDataProviderCopyData(v19);

  if (!v21)
  {
    sub_1000067E8(a1, a2);

    goto LABEL_20;
  }
  v56 = v21;
  BytePtr = CFDataGetBytePtr(v21);
  if (BytePtr)
  {
    v23 = BytePtr;
    v55 = a3;
    v24 = (uint64_t)CGImageGetBitsPerPixel(v18) / 8;
    v25 = Int.seconds.getter(7);
    v26 = Int.seconds.getter(3);
    objc_msgSend(v16, "extent");
    v27 = CGRectGetWidth(v60) + -2.0;
    if (qword_10048CF58 != -1)
      swift_once(&qword_10048CF58, sub_1001F7230);
    v28 = *(double *)&qword_100496CD0;
    v29 = v27 * *(double *)&qword_100496CD0;
    objc_msgSend(v16, "extent");
    v30 = v28 * (CGRectGetHeight(v61) + -2.0);
    v57 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsPDFRenderer), "initWithBounds:", 0.0, 0.0, v29, v30);
    v20 = swift_allocObject(&unk_100455ED8, 96, 7);
    *(double *)(v20 + 16) = v25;
    *(_QWORD *)(v20 + 24) = 0;
    *(_QWORD *)(v20 + 32) = 0;
    *(double *)(v20 + 40) = v29;
    *(double *)(v20 + 48) = v30;
    *(double *)(v20 + 56) = v26;
    *(_QWORD *)(v20 + 64) = v16;
    *(_QWORD *)(v20 + 72) = v18;
    *(_QWORD *)(v20 + 80) = v24;
    *(_QWORD *)(v20 + 88) = v23;
    v31 = swift_allocObject(&unk_100455F00, 32, 7);
    *(_QWORD *)(v31 + 16) = sub_1001F8468;
    *(_QWORD *)(v31 + 24) = v20;
    aBlock[4] = sub_100009BB0;
    v59 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000E776C;
    aBlock[3] = &unk_100455F18;
    v32 = _Block_copy(aBlock);
    v33 = v59;
    swift_retain(v31);
    v53 = v18;
    v54 = v16;
    v34 = objc_msgSend(v57, "PDFDataWithActions:", v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation(v31, "", 117, 66, 37, 1, v35);
    swift_release(v31);
    if ((v33 & 1) != 0)
    {
      __break(1u);
      goto LABEL_31;
    }
    v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    v39 = Data._bridgeToObjectiveC()().super.isa;
    v40 = CGDataProviderCreateWithCFData(v39);

    v41 = v55;
    if (v40)
    {
      v42 = CGPDFDocumentCreateWithProvider(v40);
      if (v42)
      {
        v43 = v42;
        v52 = CGPDFDocumentGetPage(v42, 1uLL);
        if (v52)
        {
          v51 = v38;
          v44 = objc_msgSend((id)objc_opt_self(UIImage), "_imageWithCGPDFPage:", v52);
          if (v44)
          {
            v45 = (uint64_t)v44;
            v50 = v44;
            objc_msgSend(v54, "extent");
            Width = CGRectGetWidth(v62);

            sub_1000067E8(v36, v51);
            v47 = Width + -2.0;
            if ((~COERCE__INT64(Width + -2.0) & 0x7FF0000000000000) != 0)
            {
              if (v47 > -9.22337204e18)
              {
                if (v47 < 9.22337204e18)
                {
                  v48 = (uint64_t)v47;
                  sub_1000516F8(a1, a2);
                  v49 = v50;
                  sub_1000067E8(a1, a2);

                  sub_1000067E8(a1, a2);
                  swift_release(v20);

LABEL_22:
                  *a4 = v48;
                  a4[1] = a1;
                  a4[2] = a2;
                  a4[3] = v45;
                  a4[4] = v41;
                  return;
                }
                goto LABEL_33;
              }
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          sub_1000067E8(a1, a2);

          sub_1000067E8(v36, v38);
        }
        else
        {
          sub_1000067E8(a1, a2);

          sub_1000067E8(v36, v38);
        }
      }
      else
      {
        sub_1000067E8(a1, a2);

        sub_1000067E8(v36, v38);
      }
    }
    else
    {
      sub_1000067E8(a1, a2);

      sub_1000067E8(v36, v38);
    }

    v21 = (const __CFData *)sub_1001F8468;
LABEL_21:
    sub_1000067E8(a1, a2);
    sub_10003A5C8((uint64_t)v21, v20);
    v48 = 0;
    a1 = 0;
    a2 = 0;
    v45 = 0;
    v41 = 0;
    goto LABEL_22;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1001F82A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100495740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for QRCode(uint64_t a1)
{
  sub_1000067E8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));

}

_QWORD *initializeWithCopy for QRCode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;

  v4 = a2[1];
  *a1 = *a2;
  v5 = a2[2];
  sub_1000516F8(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  v6 = (void *)a2[3];
  v7 = a2[4];
  a1[3] = v6;
  a1[4] = v7;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for QRCode(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1000516F8(v4, v5);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_1000067E8(v6, v7);
  v8 = (void *)a2[3];
  v9 = (void *)a1[3];
  a1[3] = v8;
  v10 = v8;

  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for QRCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_1000067E8(v5, v6);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for QRCode()
{
  return &type metadata for QRCode;
}

uint64_t sub_1001F843C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 96, 7);
}

void sub_1001F8468(void *a1)
{
  uint64_t v1;

  sub_1001F7288(a1, *(void **)(v1 + 64), *(CGImage **)(v1 + 72), *(_QWORD *)(v1 + 80), *(CGContext **)(v1 + 88), *(double *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1001F8480()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001F8490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001F84A0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t OSSignposter.sharePlay.unsafeMutableAddressor()
{
  return sub_1001F8660(&qword_10048CF68, (uint64_t)static OSSignposter.sharePlay, (uint64_t)sub_1001F86BC);
}

uint64_t *OS_os_log.sharePlay.unsafeMutableAddressor()
{
  if (qword_10048CF70 != -1)
    swift_once(&qword_10048CF70, sub_1001F880C);
  return &static OS_os_log.sharePlay;
}

uint64_t static OSSignposter.music(_:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return OSSignposter.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, a1, a2);
}

uint64_t static OSSignposter.music(_:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for Logger(0, a2);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Logger.init(_:)(a1);
  return OSSignposter.init(logger:)(v5);
}

uint64_t sub_1001F85D4()
{
  uint64_t v0;

  v0 = type metadata accessor for OSSignposter(0);
  sub_1000086DC(v0, static OSSignposter.launch);
  sub_1000086B4(v0, (uint64_t)static OSSignposter.launch);
  return OSSignposter.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x68636E75614CLL, 0xE600000000000000);
}

uint64_t OSSignposter.launch.unsafeMutableAddressor()
{
  return sub_1001F8660(&qword_10048CF60, (uint64_t)static OSSignposter.launch, (uint64_t)sub_1001F85D4);
}

uint64_t sub_1001F8660(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (*a1 != -1)
    swift_once(a1, a3);
  v4 = type metadata accessor for OSSignposter(0);
  return sub_1000086B4(v4, a2);
}

uint64_t static OSSignposter.launch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F87A4(&qword_10048CF60, (uint64_t)static OSSignposter.launch, (uint64_t)sub_1001F85D4, a1);
}

uint64_t sub_1001F86BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for Logger(0, a2);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSSignposter(0);
  sub_1000086DC(v5, static OSSignposter.sharePlay);
  sub_1000086B4(v5, (uint64_t)static OSSignposter.sharePlay);
  if (qword_10048CF70 != -1)
    swift_once(&qword_10048CF70, sub_1001F880C);
  Logger.init(_:)((id)static OS_os_log.sharePlay);
  return OSSignposter.init(logger:)(v4);
}

uint64_t static OSSignposter.sharePlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F87A4(&qword_10048CF68, (uint64_t)static OSSignposter.sharePlay, (uint64_t)sub_1001F86BC, a1);
}

uint64_t sub_1001F87A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for OSSignposter(0);
  v7 = sub_1000086B4(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v7, v6);
}

uint64_t sub_1001F880C()
{
  uint64_t result;

  sub_1000F08E8();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0x616C506572616853, 0xE900000000000079);
  static OS_os_log.sharePlay = result;
  return result;
}

id static OS_os_log.sharePlay.getter()
{
  if (qword_10048CF70 != -1)
    swift_once(&qword_10048CF70, sub_1001F880C);
  return (id)static OS_os_log.sharePlay;
}

uint64_t sub_1001F88B0()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  __int128 v7[2];
  char v8;

  sub_1001FC3F8(v0, (uint64_t)v7);
  if (v8 == 1)
  {
    v1 = (char *)&loc_1001F8900 + 4 * byte_100392820[MPModelObject.mediaKitPlayableKind.getter()];
    __asm { BR              X10 }
  }
  sub_1000137C8(v7, (uint64_t)v5);
  v2 = v6;
  sub_10000ABC8(v5, v6);
  v3 = sub_1001F8AB8(v2);
  sub_10000682C(v5);
  return v3;
}

void sub_1001F8974()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8998()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F89B4()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F89DC()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8A04()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8A20()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8A44()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8A68()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8A88()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

void sub_1001F8AA0()
{
  void *v0;

  JUMPOUT(0x1001F8958);
}

uint64_t sub_1001F8AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Entry(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v121 = (char *)&v115 - v9;
  v125 = type metadata accessor for Track(0);
  v123 = *(_QWORD *)(v125 - 8);
  v10 = __chkstk_darwin(v125);
  v12 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v124 = (char *)&v115 - v13;
  v130 = type metadata accessor for GenericMusicItem(0);
  v129 = *(_QWORD *)(v130 - 8);
  v14 = __chkstk_darwin(v130);
  v128 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v127 = (char *)&v115 - v16;
  v133 = type metadata accessor for UploadedVideo(0);
  v126 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v132 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for UploadedAudio(0);
  v131 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for TVShow(0);
  v134 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v138 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for TVEpisode(0);
  v137 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for Station(0);
  v140 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v159 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = type metadata accessor for Song(0);
  v143 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v157 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = type metadata accessor for Playlist(0);
  v145 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v147 = (char *)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for MusicVideo(0);
  v146 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v149 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for MusicMovie(0);
  v148 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v153 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Album(0);
  v152 = *(_QWORD *)(v27 - 8);
  v28 = __chkstk_darwin(v27);
  v155 = (char *)&v115 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = a1;
  v30 = *(_QWORD *)(a1 - 8);
  v31 = __chkstk_darwin(v28);
  v118 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v161 = (char *)&v115 - v34;
  v35 = __chkstk_darwin(v33);
  v154 = (char *)&v115 - v36;
  __chkstk_darwin(v35);
  v39 = (char *)&v115 - v38;
  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v122 = v12;
  v119 = v8;
  v120 = v5;
  v40 = type metadata accessor for Logger(0, v37);
  v41 = sub_1000086B4(v40, (uint64_t)static Logger.capabilityUpsell);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v160 = v2;
  v43 = v42(v39, v2, v162);
  v117 = v41;
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = swift_slowAlloc(12, -1);
    v47 = v27;
    v48 = v162;
    v116 = v25;
    v49 = v46;
    v50 = swift_slowAlloc(32, -1);
    v151 = v4;
    v51 = v50;
    v163 = v50;
    *(_DWORD *)v49 = 136315138;
    v52 = v154;
    v42(v154, (uint64_t)v39, v48);
    v53 = (char *)String.init<A>(describing:)(v52, v48);
    v55 = v54;
    *(_QWORD *)(v49 + 4) = sub_100019400(v53, v54, &v163);
    swift_bridgeObjectRelease(v55);
    v56 = v48;
    v27 = v47;
    v57 = *(void (**)(char *, uint64_t))(v30 + 8);
    v57(v39, v56);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "MusicItem - mediaKind =%s", (uint8_t *)v49, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    v58 = v51;
    v4 = v151;
    swift_slowDealloc(v58, -1, -1);
    v59 = v49;
    v25 = v116;
    swift_slowDealloc(v59, -1, -1);
  }
  else
  {
    v57 = *(void (**)(char *, uint64_t))(v30 + 8);
    v57(v39, v162);
  }

  v60 = v157;
  v61 = v161;
  v62 = v162;
  v42(v161, v160, v162);
  v63 = v155;
  v64 = swift_dynamicCast(v155, v61, v62, v27, 0);
  v65 = v158;
  v66 = v159;
  v67 = v156;
  if (!v64)
  {
    v69 = v153;
    if (swift_dynamicCast(v153, v161, v162, v25, 0))
    {
      (*(void (**)(char *, uint64_t))(v148 + 8))(v69, v25);
      v68 = 0x6F6D2D636973756DLL;
      v57(v161, v162);
      return v68;
    }
    v151 = v4;
    v70 = v149;
    v71 = v150;
    if (swift_dynamicCast(v149, v161, v162, v150, 0))
    {
      (*(void (**)(char *, uint64_t))(v146 + 8))(v70, v71);
      v68 = 0x69762D636973756DLL;
      v57(v161, v162);
      return v68;
    }
    v157 = (char *)v57;
    v72 = v147;
    if (swift_dynamicCast(v147, v161, v162, v67, 0))
    {
      (*(void (**)(char *, uint64_t))(v145 + 8))(v72, v67);
      v68 = 0x7473696C79616C70;
      ((void (*)(char *, uint64_t))v157)(v161, v162);
      return v68;
    }
    if (swift_dynamicCast(v60, v161, v162, v65, 0))
    {
      (*(void (**)(char *, uint64_t))(v143 + 8))(v60, v65);
      v68 = 0x73676E6F73;
      ((void (*)(char *, uint64_t))v157)(v161, v162);
      return v68;
    }
    v73 = v144;
    v74 = swift_dynamicCast(v66, v161, v162, v144, 0);
    v75 = (void (*)(char *, uint64_t))v157;
    if (v74)
    {
      (*(void (**)(char *, uint64_t))(v140 + 8))(v66, v73);
      v68 = 0x736E6F6974617473;
LABEL_46:
      v75(v161, v162);
      return v68;
    }
    v76 = v141;
    v77 = v142;
    if (swift_dynamicCast(v141, v161, v162, v142, 0))
    {
      (*(void (**)(char *, uint64_t))(v137 + 8))(v76, v77);
      v68 = 0x6F736970652D7674;
      goto LABEL_46;
    }
    v78 = v138;
    v79 = v139;
    if (swift_dynamicCast(v138, v161, v162, v139, 0))
    {
      (*(void (**)(char *, uint64_t))(v134 + 8))(v78, v79);
      v68 = 0x73776F68732D7674;
      goto LABEL_46;
    }
    v80 = v135;
    v81 = v136;
    if (swift_dynamicCast(v135, v161, v162, v136, 0))
    {
      v68 = 0x646564616F6C7075;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v80, v81);
      goto LABEL_46;
    }
    v82 = v132;
    v83 = v133;
    if (swift_dynamicCast(v132, v161, v162, v133, 0))
    {
      v68 = 0x646564616F6C7075;
      (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v83);
      goto LABEL_46;
    }
    v84 = v127;
    v85 = v130;
    if (swift_dynamicCast(v127, v161, v162, v130, 0))
    {
      (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v84, v85);
      sub_1001FAAC8((uint64_t)&v163);
      v86 = v164;
      if (v164)
      {
        v87 = v165;
        sub_10000ABC8(&v163, v164);
        v68 = sub_1001F8AB8(v86, v87);
        sub_10000682C(&v163);
      }
      else
      {
        sub_100008758((uint64_t)&v163, &qword_100493470);
        v68 = 0;
      }
      (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v130);
      goto LABEL_46;
    }
    v88 = v124;
    v89 = v125;
    if (swift_dynamicCast(v124, v161, v162, v125, 0))
    {
      v90 = v88;
      v91 = v123;
      v92 = v122;
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v90, v89);
      Track.musicItem.getter((uint64_t)&v163);
      v93 = v164;
      if (v164)
      {
        v94 = v165;
        sub_10000ABC8(&v163, v164);
        v68 = sub_1001F8AB8(v93, v94);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v89);
LABEL_35:
        sub_10000682C(&v163);
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v89);
    }
    else
    {
      v95 = v121;
      v96 = v151;
      if (!swift_dynamicCast(v121, v161, v162, v151, 0))
      {
        v102 = v118;
        v103 = v42(v118, v160, v162);
        v104 = Logger.logObject.getter(v103);
        v105 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v104, v105))
        {
          v106 = swift_slowAlloc(12, -1);
          v107 = swift_slowAlloc(32, -1);
          v163 = v107;
          *(_DWORD *)v106 = 136315138;
          v108 = v154;
          v109 = v162;
          v42(v154, (uint64_t)v102, v162);
          v110 = (char *)String.init<A>(describing:)(v108, v109);
          v111 = v109;
          v113 = v112;
          *(_QWORD *)(v106 + 4) = sub_100019400(v110, v112, &v163);
          swift_bridgeObjectRelease(v113);
          v75(v102, v111);
          _os_log_impl((void *)&_mh_execute_header, v104, v105, "Unsupported MusicItem kind=%s", (uint8_t *)v106, 0xCu);
          swift_arrayDestroy(v107, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v107, -1, -1);
          swift_slowDealloc(v106, -1, -1);
        }
        else
        {
          v75(v102, v162);
        }

        goto LABEL_45;
      }
      v97 = v120;
      v98 = v119;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v95, v96);
      sub_1001FA634((uint64_t)&v163);
      v99 = v96;
      v100 = v164;
      if (v164)
      {
        v101 = v165;
        sub_10000ABC8(&v163, v164);
        v68 = sub_1001F8AB8(v100, v101);
        (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
    }
    sub_100008758((uint64_t)&v163, &qword_100493470);
LABEL_45:
    v68 = 0;
    goto LABEL_46;
  }
  (*(void (**)(char *, uint64_t))(v152 + 8))(v63, v27);
  v68 = 0x736D75626C61;
  v57(v161, v162);
  return v68;
}

uint64_t sub_1001F9858(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  v128 = type metadata accessor for Playlist.Entry(0);
  v124 = *(_QWORD *)(v128 - 8);
  v2 = __chkstk_darwin(v128);
  v123 = (char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v125 = (char *)&v119 - v4;
  v132 = type metadata accessor for Track(0);
  v127 = *(_QWORD *)(v132 - 8);
  v5 = __chkstk_darwin(v132);
  v126 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v129 = (char *)&v119 - v7;
  v136 = type metadata accessor for GenericMusicItem(0);
  v131 = *(_QWORD *)(v136 - 8);
  v8 = __chkstk_darwin(v136);
  v130 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v135 = (char *)&v119 - v10;
  v140 = type metadata accessor for UploadedVideo(0);
  v134 = *(_QWORD *)(v140 - 8);
  v11 = __chkstk_darwin(v140);
  v133 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v139 = (char *)&v119 - v13;
  v144 = type metadata accessor for UploadedAudio(0);
  v138 = *(_QWORD *)(v144 - 8);
  v14 = __chkstk_darwin(v144);
  v137 = (char *)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v143 = (char *)&v119 - v16;
  v148 = type metadata accessor for TVShow(0);
  v142 = *(_QWORD *)(v148 - 8);
  v17 = __chkstk_darwin(v148);
  v141 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v147 = (char *)&v119 - v19;
  v152 = type metadata accessor for TVEpisode(0);
  v146 = *(_QWORD *)(v152 - 8);
  v20 = __chkstk_darwin(v152);
  v145 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v151 = (char *)&v119 - v22;
  v156 = type metadata accessor for Station(0);
  v150 = *(_QWORD *)(v156 - 8);
  v23 = __chkstk_darwin(v156);
  v149 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v155 = (char *)&v119 - v25;
  v160 = type metadata accessor for Song(0);
  v154 = *(_QWORD *)(v160 - 8);
  v26 = __chkstk_darwin(v160);
  v153 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v159 = (char *)&v119 - v28;
  v164 = type metadata accessor for Playlist(0);
  v158 = *(_QWORD *)(v164 - 8);
  v29 = __chkstk_darwin(v164);
  v157 = (char *)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v163 = (char *)&v119 - v31;
  v166 = type metadata accessor for MusicVideo(0);
  v162 = *(_QWORD *)(v166 - 8);
  v32 = __chkstk_darwin(v166);
  v161 = (char *)&v119 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v165 = (char *)&v119 - v34;
  v35 = type metadata accessor for MusicMovie(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v119 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v41 = (char *)&v119 - v40;
  v42 = type metadata accessor for Album(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v119 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __chkstk_darwin(v44);
  v49 = (char *)&v119 - v48;
  v50 = __chkstk_darwin(v47);
  v120 = (char *)&v119 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __chkstk_darwin(v50);
  v122 = (char *)&v119 - v53;
  __chkstk_darwin(v52);
  v55 = (char *)&v119 - v54;
  v167 = v56;
  v121 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
  v121((char *)&v119 - v54, v168, a1);
  if (swift_dynamicCast(v49, v55, a1, v42, 0))
  {
    v57 = (*(uint64_t (**)(char *, char *, uint64_t))(v43 + 32))(v46, v49, v42);
    v58 = Album.catalogID.getter(v57);
    v60 = v59;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v42);
    if (v60)
      v61 = v58;
    else
      v61 = 0;
    v62 = v167;
    goto LABEL_28;
  }
  if (swift_dynamicCast(v41, v55, a1, v35, 0))
  {
    v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(v39, v41, v35);
    v61 = MusicMovie.catalogID.getter(v63);
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
    if (!v65)
      v61 = 0;
    v62 = v167;
    goto LABEL_28;
  }
  v67 = v165;
  v66 = v166;
  v68 = swift_dynamicCast(v165, v55, a1, v166, 0);
  v62 = v167;
  if (v68)
  {
    v70 = v161;
    v69 = v162;
    v71 = (*(uint64_t (**)(char *, char *, uint64_t))(v162 + 32))(v161, v67, v66);
    v72 = MusicVideo.catalogID.getter(v71);
    goto LABEL_26;
  }
  v74 = v163;
  v66 = v164;
  if (swift_dynamicCast(v163, v55, a1, v164, 0))
  {
    v70 = v157;
    v69 = v158;
    v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v158 + 32))(v157, v74, v66);
    v72 = Playlist.catalogID.getter(v75);
    goto LABEL_26;
  }
  v76 = v159;
  v66 = v160;
  if (swift_dynamicCast(v159, v55, a1, v160, 0))
  {
    v70 = v153;
    v69 = v154;
    v77 = (*(uint64_t (**)(char *, char *, uint64_t))(v154 + 32))(v153, v76, v66);
    v72 = Song.catalogID.getter(v77);
    goto LABEL_26;
  }
  v79 = v155;
  v78 = v156;
  if (swift_dynamicCast(v155, v55, a1, v156, 0))
  {
    v80 = v150;
    v81 = v149;
    v82 = (*(uint64_t (**)(char *, char *, uint64_t))(v150 + 32))(v149, v79, v78);
    v61 = Station.id.getter(v82);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v78);
    goto LABEL_28;
  }
  v83 = v151;
  v66 = v152;
  if (swift_dynamicCast(v151, v55, a1, v152, 0))
  {
    v69 = v146;
    v70 = v145;
    v84 = (*(uint64_t (**)(char *, char *, uint64_t))(v146 + 32))(v145, v83, v66);
    v72 = TVEpisode.catalogID.getter(v84);
    goto LABEL_26;
  }
  v85 = v147;
  v66 = v148;
  if (swift_dynamicCast(v147, v55, a1, v148, 0))
  {
    v69 = v142;
    v70 = v141;
    v86 = (*(uint64_t (**)(char *, char *, uint64_t))(v142 + 32))(v141, v85, v66);
    v72 = TVShow.catalogID.getter(v86);
    goto LABEL_26;
  }
  v87 = v143;
  v66 = v144;
  if (swift_dynamicCast(v143, v55, a1, v144, 0))
  {
    v69 = v138;
    v70 = v137;
    v88 = (*(uint64_t (**)(char *, char *, uint64_t))(v138 + 32))(v137, v87, v66);
    v72 = UploadedAudio.catalogID.getter(v88);
    goto LABEL_26;
  }
  v89 = v139;
  v66 = v140;
  if (!swift_dynamicCast(v139, v55, a1, v140, 0))
  {
    v93 = v135;
    v94 = v136;
    if (swift_dynamicCast(v135, v55, a1, v136, 0))
    {
      v95 = v131;
      v96 = v130;
      (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v130, v93, v94);
      sub_1001FAAC8((uint64_t)&v169);
      v97 = v170;
      if (v170)
      {
        v98 = v171;
        sub_10000ABC8(&v169, v170);
        v61 = sub_1001F9858(v97, v98);
        sub_10000682C(&v169);
      }
      else
      {
        sub_100008758((uint64_t)&v169, &qword_100493470);
        v61 = 0;
      }
      (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v94);
      goto LABEL_28;
    }
    v99 = v129;
    v100 = v132;
    if (swift_dynamicCast(v129, v55, a1, v132, 0))
    {
      v101 = v127;
      v102 = v126;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v99, v100);
      Track.musicItem.getter((uint64_t)&v169);
    }
    else
    {
      v103 = v125;
      v100 = v128;
      if (!swift_dynamicCast(v125, v55, a1, v128, 0))
      {
        if (qword_10048CF78 != -1)
          swift_once(&qword_10048CF78, sub_1001FAFEC);
        v107 = type metadata accessor for Logger(0, v104);
        sub_1000086B4(v107, (uint64_t)static Logger.capabilityUpsell);
        v108 = v122;
        v109 = (void (*)(char *, char *, uint64_t))v121;
        v110 = ((uint64_t (*)(char *, uint64_t, uint64_t))v121)(v122, v168, a1);
        v111 = Logger.logObject.getter(v110);
        v112 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v111, v112))
        {
          v113 = swift_slowAlloc(12, -1);
          v114 = swift_slowAlloc(32, -1);
          v169 = v114;
          *(_DWORD *)v113 = 136315138;
          v115 = v120;
          v109(v120, v108, a1);
          v116 = (char *)String.init<A>(describing:)(v115, a1);
          v118 = v117;
          *(_QWORD *)(v113 + 4) = sub_100019400(v116, v117, &v169);
          swift_bridgeObjectRelease(v118);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v108, a1);
          _os_log_impl((void *)&_mh_execute_header, v111, v112, "Unsupported MusicItem catalogID=%s", (uint8_t *)v113, 0xCu);
          swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v114, -1, -1);
          swift_slowDealloc(v113, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v62 + 8))(v108, a1);
        }

        goto LABEL_47;
      }
      v101 = v124;
      v102 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v103, v100);
      sub_1001FA634((uint64_t)&v169);
    }
    v105 = v170;
    if (v170)
    {
      v106 = v171;
      sub_10000ABC8(&v169, v170);
      v61 = sub_1001F9858(v105, v106);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v100);
      sub_10000682C(&v169);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v100);
    sub_100008758((uint64_t)&v169, &qword_100493470);
LABEL_47:
    v61 = 0;
    goto LABEL_28;
  }
  v69 = v134;
  v70 = v133;
  v90 = (*(uint64_t (**)(char *, char *, uint64_t))(v134 + 32))(v133, v89, v66);
  v72 = UploadedVideo.catalogID.getter(v90);
LABEL_26:
  v61 = v72;
  v91 = v73;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v66);
  if (!v91)
    v61 = 0;
LABEL_28:
  (*(void (**)(char *, uint64_t))(v62 + 8))(v55, a1);
  return v61;
}

uint64_t Logger.capabilityUpsell.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v2 = type metadata accessor for Logger(0, a2);
  return sub_1000086B4(v2, (uint64_t)static Logger.capabilityUpsell);
}

uint64_t sub_1001FA5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1000D6BA8, v6, v7);
}

uint64_t sub_1001FA634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  unint64_t *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint8_t *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  os_log_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;

  v3 = type metadata accessor for Playlist.Entry(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Entry.InternalItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v40 - v13;
  Playlist.Entry.internalItem.getter(v12);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v14, v7);
  if (v15 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v17 = type metadata accessor for MusicMovie(0);
    v18 = (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie;
    *(_QWORD *)(a1 + 24) = v17;
    v19 = (unint64_t *)&unk_10048EBE8;
    v20 = &protocol conformance descriptor for MusicMovie;
LABEL_3:
    *(_QWORD *)(a1 + 32) = sub_100006924(v19, v18, (uint64_t)v20);
LABEL_9:
    v23 = sub_1000207D4((_QWORD *)a1);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v23, v14, v17);
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v21 = type metadata accessor for MusicVideo(0);
    v17 = v21;
    v22 = &protocol witness table for MusicVideo;
LABEL_8:
    *(_QWORD *)(a1 + 24) = v21;
    *(_QWORD *)(a1 + 32) = v22;
    goto LABEL_9;
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v21 = type metadata accessor for Song(0);
    v17 = v21;
    v22 = &protocol witness table for Song;
    goto LABEL_8;
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v17 = type metadata accessor for TVEpisode(0);
    v18 = (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode;
    *(_QWORD *)(a1 + 24) = v17;
    v19 = (unint64_t *)&unk_10048EBF0;
    v20 = &protocol conformance descriptor for TVEpisode;
    goto LABEL_3;
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v17 = type metadata accessor for UploadedAudio(0);
    v18 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio;
    *(_QWORD *)(a1 + 24) = v17;
    v19 = (unint64_t *)&unk_10048F5B8;
    v20 = &protocol conformance descriptor for UploadedAudio;
    goto LABEL_3;
  }
  if (v15 == enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v14, v7);
    v17 = type metadata accessor for UploadedVideo(0);
    v18 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo;
    *(_QWORD *)(a1 + 24) = v17;
    v19 = (unint64_t *)&unk_10048EC08;
    v20 = &protocol conformance descriptor for UploadedVideo;
    goto LABEL_3;
  }
  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v25 = type metadata accessor for Logger(0, v16);
  sub_1000086B4(v25, (uint64_t)static Logger.capabilityUpsell);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.fault.getter();
  v44 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (_DWORD *)swift_slowAlloc(12, -1);
    v41 = v29;
    v30 = swift_slowAlloc(32, -1);
    v43 = v30;
    v45 = v30;
    *v29 = 136315138;
    v42 = v27;
    Playlist.Entry.internalItem.getter(v30);
    v31 = sub_100006924(&qword_10048DA50, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem, (uint64_t)&protocol conformance descriptor for Playlist.Entry.InternalItem);
    v32 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v31);
    v34 = v33;
    v35 = *(void (**)(char *, uint64_t))(v8 + 8);
    v35(v11, v7);
    v36 = sub_100019400(v32, v34, &v45);
    v37 = (uint8_t *)v41;
    *(_QWORD *)(v41 + 1) = v36;
    swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v38 = v42;
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v44, "Unknown Entry internalItem=%s", v37, 0xCu);
    v39 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    v35 = *(void (**)(char *, uint64_t))(v8 + 8);
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v35)(v14, v7);
}

uint64_t sub_1001FAAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  unint64_t *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for GenericMusicItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v32 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v32 - v8, v1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v13 = type metadata accessor for Album(0);
    v14 = v13;
    v15 = &protocol witness table for Album;
LABEL_14:
    *(_QWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = v15;
    goto LABEL_15;
  }
  if (v11 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v14 = type metadata accessor for MusicMovie(0);
    v16 = (uint64_t (*)(uint64_t))&type metadata accessor for MusicMovie;
    *(_QWORD *)(a1 + 24) = v14;
    v17 = (unint64_t *)&unk_10048EBE8;
    v18 = &protocol conformance descriptor for MusicMovie;
LABEL_5:
    *(_QWORD *)(a1 + 32) = sub_100006924(v17, v16, (uint64_t)v18);
LABEL_15:
    v19 = sub_1000207D4((_QWORD *)a1);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v19, v9, v14);
  }
  if (v11 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v13 = type metadata accessor for MusicVideo(0);
    v14 = v13;
    v15 = &protocol witness table for MusicVideo;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v13 = type metadata accessor for Playlist(0);
    v14 = v13;
    v15 = &protocol witness table for Playlist;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v13 = type metadata accessor for Song(0);
    v14 = v13;
    v15 = &protocol witness table for Song;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v13 = type metadata accessor for Station(0);
    v14 = v13;
    v15 = &protocol witness table for Station;
    goto LABEL_14;
  }
  if (v11 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v14 = type metadata accessor for TVEpisode(0);
    v16 = (uint64_t (*)(uint64_t))&type metadata accessor for TVEpisode;
    *(_QWORD *)(a1 + 24) = v14;
    v17 = (unint64_t *)&unk_10048EBF0;
    v18 = &protocol conformance descriptor for TVEpisode;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v14 = type metadata accessor for TVShow(0);
    v16 = (uint64_t (*)(uint64_t))&type metadata accessor for TVShow;
    *(_QWORD *)(a1 + 24) = v14;
    v17 = (unint64_t *)&unk_10048EC00;
    v18 = &protocol conformance descriptor for TVShow;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v14 = type metadata accessor for UploadedAudio(0);
    v16 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedAudio;
    *(_QWORD *)(a1 + 24) = v14;
    v17 = (unint64_t *)&unk_10048F5B8;
    v18 = &protocol conformance descriptor for UploadedAudio;
    goto LABEL_5;
  }
  if (v11 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    v14 = type metadata accessor for UploadedVideo(0);
    v16 = (uint64_t (*)(uint64_t))&type metadata accessor for UploadedVideo;
    *(_QWORD *)(a1 + 24) = v14;
    v17 = (unint64_t *)&unk_10048EC08;
    v18 = &protocol conformance descriptor for UploadedVideo;
    goto LABEL_5;
  }
  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v21 = type metadata accessor for Logger(0, v12);
  sub_1000086B4(v21, (uint64_t)static Logger.capabilityUpsell);
  v22 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, v1, v3);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v33 = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = sub_100006924(&qword_10048E880, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v28 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v3, v27);
    v30 = v29;
    *(_QWORD *)(v25 + 4) = sub_100019400(v28, v29, &v33);
    swift_bridgeObjectRelease(v30);
    v31 = *(void (**)(char *, uint64_t))(v4 + 8);
    v31(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unsupported GenericMusicItem kind=%s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t))(v4 + 8);
    v31(v7, v3);
  }

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v31)(v9, v3);
}

uint64_t sub_1001FAFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, static Logger.capabilityUpsell);
  sub_1000086B4(v2, (uint64_t)static Logger.capabilityUpsell);
  return Logger.init(subsystem:category:)(0xD000000000000013, 0x80000001003ACFD0, 0xD00000000000001CLL, 0x80000001003B69D0);
}

uint64_t static Logger.capabilityUpsell.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v3 = type metadata accessor for Logger(0, a1);
  v4 = sub_1000086B4(v3, (uint64_t)static Logger.capabilityUpsell);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v4, v3);
}

void _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  const char *v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  __int128 v118[2];
  unsigned __int8 v119;
  _OWORD v120[2];
  unsigned __int8 v121;

  v2 = sub_100005574((uint64_t *)&unk_100493720);
  __chkstk_darwin(v2);
  v4 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for URLQueryItem(0);
  v5 = *(_QWORD *)(v110 - 8);
  v6 = __chkstk_darwin(v110);
  v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v104 - v9;
  v11 = sub_100005574(&qword_10048D510);
  __chkstk_darwin(v11);
  v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v114 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v114 + 64);
  v16 = __chkstk_darwin(v14);
  v111 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v113 = (char *)&v104 - v17;
  if (qword_10048C720 != -1)
    swift_once(&qword_10048C720, sub_1000C378C);
  sub_100005574(&qword_100490BA0);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000D460);
  v19 = *(void **)&v120[0];
  if (!*(_QWORD *)&v120[0])
    goto LABEL_8;
  v112 = v14;
  v109 = v4;
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMarketingItemDynamicUIUrl);
  v21 = v20;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v23 = objc_msgSend(v19, "stringForBagKey:", v22);

  if (!v23)
  {

    goto LABEL_8;
  }
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  *(_QWORD *)&v120[0] = 0x2F2F3A636973756DLL;
  *((_QWORD *)&v120[0] + 1) = 0xE800000000000000;
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28 = *((_QWORD *)&v120[0] + 1);
  URL.init(string:)(*(_QWORD *)&v120[0], *((_QWORD *)&v120[0] + 1));
  swift_bridgeObjectRelease(v28);
  v29 = v114;
  v30 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v13, 1, v112) == 1)
  {

    sub_100008758((uint64_t)v13, &qword_10048D510);
LABEL_8:
    if (qword_10048CF78 != -1)
      swift_once(&qword_10048CF78, sub_1001FAFEC);
    v31 = type metadata accessor for Logger(0, v18);
    v32 = sub_1000086B4(v31, (uint64_t)static Logger.capabilityUpsell);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Could not build marketingURL", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    return;
  }
  v36 = 0xD000000000000011;
  v106 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v106(v113, v13, v30);
  v37 = sub_100005574(&qword_10048E830);
  v38 = *(unsigned __int8 *)(v5 + 80);
  v39 = (v38 + 32) & ~v38;
  v108 = *(_QWORD *)(v5 + 72);
  v40 = swift_allocObject(v37, v39 + 2 * v108, v38 | 7);
  *(_OWORD *)(v40 + 16) = xmmword_100384A60;
  v107 = (char *)v40;
  v105 = v39;
  URLQueryItem.init(name:value:)(0x5465636976726573, 0xEB00000000657079, 0x636973756DLL, 0xE500000000000000);
  sub_1001FC2CC(a1, (uint64_t)v120);
  if (v121 == 253)
  {
    v36 = 0xD000000000000017;
    v43 = 0x80000001003B69F0;
    v41 = v113;
  }
  else
  {
    v41 = v113;
    if (v121 == 255)
    {
      v42 = "musicAddToLibrary";
    }
    else if (v121 == 254)
    {
      v36 = 0xD000000000000012;
      v42 = "musicAddToPlaylist";
    }
    else
    {
      sub_100014974((uint64_t)v120);
      v36 = 0xD000000000000013;
      v42 = "musicPlaybackUpsell";
    }
    v43 = (unint64_t)(v42 - 32) | 0x8000000000000000;
  }
  URLQueryItem.init(name:value:)(0x6E656D6563616C70, 0xE900000000000074, v36, v43);
  swift_bridgeObjectRelease(v43);
  sub_1001FC2CC(a1, (uint64_t)v118);
  if (v119 < 0xFDu)
  {
    sub_1001A3830(v118, v120);
    v45 = sub_1001F88B0();
    v44 = v107;
    if (v46)
    {
      v47 = v46;
      URLQueryItem.init(name:value:)(0x74694B616964656DLL, 0xEC000000646E694BLL, v45, v46);
      swift_bridgeObjectRelease(v47);
      v49 = *((_QWORD *)v44 + 2);
      v48 = *((_QWORD *)v44 + 3);
      v50 = v110;
      if (v49 >= v48 >> 1)
        v44 = (char *)sub_10003DE00(v48 > 1, v49 + 1, 1, v44);
      *((_QWORD *)v44 + 2) = v49 + 1;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v44[v105 + v49 * v108], v10, v50);
    }
    else
    {
      if (qword_10048CF78 != -1)
        swift_once(&qword_10048CF78, sub_1001FAFEC);
      v51 = type metadata accessor for Logger(0, v46);
      sub_1000086B4(v51, (uint64_t)static Logger.capabilityUpsell);
      v52 = sub_1001FC3F8((uint64_t)v120, (uint64_t)v118);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v53, v54))
      {
        v55 = swift_slowAlloc(12, -1);
        v56 = swift_slowAlloc(32, -1);
        v117 = v56;
        *(_DWORD *)v55 = 136315138;
        sub_1001FC3F8((uint64_t)v118, (uint64_t)v115);
        v57 = (char *)String.init<A>(describing:)(v115, &type metadata for SubscriptionUpsellPresenter.Placement.Source);
        v59 = v58;
        *(_QWORD *)(v55 + 4) = sub_100019400(v57, v58, &v117);
        swift_bridgeObjectRelease(v59);
        sub_1001FC42C((uint64_t)v118);
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Missing kind for item=%s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        v60 = v56;
        v44 = v107;
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v55, -1, -1);
      }
      else
      {
        sub_1001FC42C((uint64_t)v118);
      }

      v50 = v110;
    }
    sub_1001FC3F8((uint64_t)v120, (uint64_t)v118);
    if (v119 == 1)
    {
      v61 = *(void **)&v118[0];
      v62 = MPModelObject.bestIdentifier(for:)(2, 1u);
      v64 = v63;

      if (v64)
      {
LABEL_35:
        URLQueryItem.init(name:value:)(1684366707, 0xE400000000000000, v62, v64);
        swift_bridgeObjectRelease(v64);
        v67 = *((_QWORD *)v44 + 2);
        v66 = *((_QWORD *)v44 + 3);
        if (v67 >= v66 >> 1)
          v44 = (char *)sub_10003DE00(v66 > 1, v67 + 1, 1, v44);
        v41 = v113;
        *((_QWORD *)v44 + 2) = v67 + 1;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v44[v105 + v67 * v108], v8, v50);
        sub_1001FC42C((uint64_t)v120);
        goto LABEL_45;
      }
    }
    else
    {
      sub_1000137C8(v118, (uint64_t)v115);
      v68 = v116;
      sub_10000ABC8(v115, v116);
      v62 = sub_1001F9858(v68);
      v64 = v69;
      sub_10000682C(v115);
      if (v64)
        goto LABEL_35;
    }
    if (qword_10048CF78 != -1)
      swift_once(&qword_10048CF78, sub_1001FAFEC);
    v70 = type metadata accessor for Logger(0, v65);
    sub_1000086B4(v70, (uint64_t)static Logger.capabilityUpsell);
    v71 = sub_1001FC3F8((uint64_t)v120, (uint64_t)v118);
    v72 = Logger.logObject.getter(v71);
    v73 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc(12, -1);
      v75 = swift_slowAlloc(32, -1);
      v117 = v75;
      *(_DWORD *)v74 = 136315138;
      sub_1001FC3F8((uint64_t)v118, (uint64_t)v115);
      v76 = (char *)String.init<A>(describing:)(v115, &type metadata for SubscriptionUpsellPresenter.Placement.Source);
      v78 = v77;
      *(_QWORD *)(v74 + 4) = sub_100019400(v76, v77, &v117);
      swift_bridgeObjectRelease(v78);
      sub_1001FC42C((uint64_t)v118);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Missing id for item=%s", (uint8_t *)v74, 0xCu);
      swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v75, -1, -1);
      swift_slowDealloc(v74, -1, -1);

    }
    else
    {

      sub_1001FC42C((uint64_t)v118);
    }
    sub_1001FC42C((uint64_t)v120);
    v41 = v113;
    goto LABEL_45;
  }
  sub_100014974((uint64_t)v118);
  v44 = v107;
LABEL_45:
  URL.append(queryItems:)((Swift::OpaquePointer)v44);
  swift_bridgeObjectRelease(v44);
  if (qword_10048CF78 != -1)
    swift_once(&qword_10048CF78, sub_1001FAFEC);
  v80 = type metadata accessor for Logger(0, v79);
  v81 = sub_1000086B4(v80, (uint64_t)static Logger.capabilityUpsell);
  v82 = Logger.logObject.getter(v81);
  v83 = static os_log_type_t.default.getter();
  v84 = os_log_type_enabled(v82, v83);
  v85 = (uint64_t)v109;
  if (v84)
  {
    v86 = swift_slowAlloc(12, -1);
    v87 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v120[0] = v87;
    *(_DWORD *)v86 = 136446210;
    swift_beginAccess(v41, v118, 0, 0);
    v88 = sub_100006924((unint64_t *)&qword_1004912E8, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v89 = v112;
    v90 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v112, v88);
    v92 = v91;
    *(_QWORD *)(v86 + 4) = sub_100019400(v90, v91, (uint64_t *)v120);
    swift_bridgeObjectRelease(v92);
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "Will present upsell with URL=%{public}s", (uint8_t *)v86, 0xCu);
    swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v86, -1, -1);

  }
  else
  {

    v89 = v112;
  }
  v93 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v85, 1, 1, v93);
  v94 = swift_beginAccess(v41, v120, 0, 0);
  v95 = v114;
  v96 = v111;
  (*(void (**)(char *, char *, uint64_t, __n128))(v114 + 16))(v111, v41, v89, v94);
  v97 = type metadata accessor for MainActor(0);
  v98 = static MainActor.shared.getter(v97);
  v99 = *(unsigned __int8 *)(v95 + 80);
  v100 = v41;
  v101 = (v99 + 32) & ~v99;
  v102 = swift_allocObject(&unk_100456090, v101 + v15, v99 | 7);
  *(_QWORD *)(v102 + 16) = v98;
  *(_QWORD *)(v102 + 24) = &protocol witness table for MainActor;
  v106((char *)(v102 + v101), v96, v89);
  v103 = sub_1000C66A8(v85, (uint64_t)&unk_100496CE0, v102);
  swift_release(v103);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v100, v89);
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter()
{
  return &type metadata for SubscriptionUpsellPresenter;
}

void destroy for SubscriptionUpsellPresenter.Placement(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 <= 1)
  {
    if (v1 == 1)

    else
      sub_10000682C((_QWORD *)a1);
  }
}

uint64_t initializeWithCopy for SubscriptionUpsellPresenter.Placement(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 > 1)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else if (v3 == 1)
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
    v5 = v4;
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionUpsellPresenter.Placement(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  unsigned int v10;
  uint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = *((unsigned __int8 *)a2 + 40);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      if (v5 != 1)
      {
LABEL_17:
        v11 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v11 - 8))(a1, a2);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      }
      goto LABEL_8;
    }
LABEL_12:
    v8 = *a2;
    v9 = a2[1];
    *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  if (v5 > 1)
  {
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    goto LABEL_12;
  }
  if ((__int128 *)a1 != a2)
  {
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    v10 = *((unsigned __int8 *)a2 + 40);
    if (v10 >= 2)
      v10 = *(_DWORD *)a2 + 2;
    if (v10 != 1)
      goto LABEL_17;
LABEL_8:
    v6 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
    v7 = v6;
  }
  return a1;
}

uint64_t assignWithTake for SubscriptionUpsellPresenter.Placement(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  unsigned int v7;
  __int128 v8;

  v4 = *(unsigned __int8 *)(a1 + 40);
  v5 = *(unsigned __int8 *)(a2 + 40);
  if (v4 > 1)
  {
    if (v5 <= 1)
    {
      if (v5 != 1)
      {
LABEL_17:
        v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      }
      goto LABEL_8;
    }
LABEL_12:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    return a1;
  }
  if (v5 > 1)
  {
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    goto LABEL_12;
  }
  if (a1 != a2)
  {
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    v7 = *(unsigned __int8 *)(a2 + 40);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 != 1)
      goto LABEL_17;
LABEL_8:
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 4)
    return v4 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -3 - a2;
  }
  return result;
}

uint64_t sub_1001FBFEC(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

double sub_1001FC000(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFE)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 25) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter.Placement()
{
  return &type metadata for SubscriptionUpsellPresenter.Placement;
}

void destroy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)

  else
    sub_10000682C((_QWORD *)a1);
}

uint64_t initializeWithCopy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  char v6;
  __int128 v7;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = v4;
    v6 = 1;
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    v6 = 0;
  }
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
      v7 = v6;
    }
    else
    {
      v8 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)

    else
      sub_10000682C((_QWORD *)a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = 1;
    }
    else
    {
      v6 = 0;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement.Source(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SubscriptionUpsellPresenter.Placement.Source(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionUpsellPresenter.Placement.Source()
{
  return &type metadata for SubscriptionUpsellPresenter.Placement.Source;
}

uint64_t sub_1001FC2CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SubscriptionUpsellPresenter.Placement(a2, a1);
  return a2;
}

uint64_t sub_1001FC300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001FC374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_100496CDC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000EA88;
  return sub_1001FA5C8(a1, v5, v6, v7);
}

uint64_t sub_1001FC3F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SubscriptionUpsellPresenter.Placement.Source(a2, a1);
  return a2;
}

uint64_t sub_1001FC42C(uint64_t a1)
{
  destroy for SubscriptionUpsellPresenter.Placement.Source(a1);
  return a1;
}

uint64_t static ApplicationRecordUtilities.isApplicationInstalled(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  result = (uint64_t)sub_1001FCFD0(a1, a2, 0);
  if (result)
  {

    return 1;
  }
  return result;
}

uint64_t static ApplicationRecordUtilities.openApplication(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_1001FC4F0, 0, 0);
}

id sub_1001FC4F0()
{
  _QWORD *v0;
  id result;
  void *v2;
  _QWORD *v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;

  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  v0[17] = result;
  if (result)
  {
    v2 = result;
    v3 = v0 + 2;
    v4 = String._bridgeToObjectiveC()();
    v0[18] = v4;
    v0[7] = v0 + 20;
    v0[2] = v0;
    v0[3] = sub_1001FC5D0;
    v5 = swift_continuation_init(v0 + 2, 1);
    v0[10] = _NSConcreteStackBlock;
    v6 = v0 + 10;
    v6[1] = 0x40000000;
    v6[2] = sub_1001FC6B0;
    v6[3] = &unk_1004567C8;
    v6[4] = v5;
    objc_msgSend(v2, "openApplicationWithBundleIdentifier:configuration:completionHandler:", v4, 0, v6);
    return (id)swift_continuation_await(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FC5D0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_1001FC668;
  else
    v2 = sub_1001FC630;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001FC630()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001FC668(__n128 a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v1 + 144);
  v3 = *(void **)(v1 + 136);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1001FC6B0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100005574(&qword_100496F20);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    swift_continuation_throwingResume(v3);
  }
}

NSString sub_1001FC730()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  static NSNotificationName.applicationRegistered = (uint64_t)result;
  return result;
}

uint64_t *NSNotificationName.applicationRegistered.unsafeMutableAddressor()
{
  if (qword_100496CF0 != -1)
    swift_once(&qword_100496CF0, sub_1001FC730);
  return &static NSNotificationName.applicationRegistered;
}

id static NSNotificationName.applicationRegistered.getter()
{
  if (qword_100496CF0 != -1)
    swift_once(&qword_100496CF0, sub_1001FC730);
  return (id)static NSNotificationName.applicationRegistered;
}

id variable initialization expression of BrightnessManager.brightnessClient()
{
  return objc_msgSend(objc_allocWithZone((Class)BrightnessSystemClient), "init");
}

unint64_t variable initialization expression of BrightnessManager.minimumBrightness()
{
  return sub_1001FC814((uint64_t)&off_1004560A8);
}

unint64_t sub_1001FC814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496F10);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_1002121A0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FC924(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496F08);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *((_QWORD *)v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    result = sub_1002121A0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v6 += 24;
    v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FCA34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t result;
  char v14;
  unint64_t *v15;
  unint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496EF8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (unint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *(v6 - 1);
    v8 = *v6;
    v9 = v6[1];
    v10 = v6[2];
    v11 = v6[3];
    v12 = v6[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_100212240(v7, v8, v9, v10);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (unint64_t *)(v4[6] + 32 * result);
    *v15 = v7;
    v15[1] = v8;
    v15[2] = v9;
    v15[3] = v10;
    v16 = (unint64_t *)(v4[7] + 16 * result);
    *v16 = v11;
    v16[1] = v12;
    v17 = v4[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v6 += 6;
    v4[2] = v19;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FCB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496EE8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1002121A0(v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v4[6] + 16 * result);
    *v13 = v7;
    v13[1] = v8;
    v14 = (_QWORD *)(v4[7] + 16 * result);
    *v14 = v10;
    v14[1] = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FCC90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t result;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496EE0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v6 - 3);
    v8 = *(v6 - 2);
    v10 = (void *)*(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    v11 = v10;
    swift_bridgeObjectRetain();
    result = sub_100212320(v7, v8, (uint64_t)v11);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = (uint64_t *)(v4[6] + 24 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = (uint64_t)v11;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v15 = v4[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4[2] = v17;
    v6 += 4;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FCDCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005574(&qword_100496F18);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1002121A0(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t variable initialization expression of BrightnessManager.resetBrightness()
{
  return sub_1001FC814((uint64_t)&off_1004560F8);
}

unint64_t variable initialization expression of BrightnessManager.disableCBFeatures()
{
  return sub_1001FC924((uint64_t)&off_100456148);
}

unint64_t variable initialization expression of BrightnessManager.enableCBFeatures()
{
  return sub_1001FC924((uint64_t)&off_100456180);
}

uint64_t variable initialization expression of Datavault.logger@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = type metadata accessor for Logger(0, a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t variable initialization expression of WeakArray.items(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for WeakArray.WeakBox(0, a1, a1, a4);
  return static Array._allocateUninitialized(_:)(0, v4);
}

uint64_t variable initialization expression of WeakValuesDictionary.storage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;

  v5 = sub_1001FD4E8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a1, v5, 0, 0);
  v7 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  return Dictionary.init(dictionaryLiteral:)(v7, a1, v5, a3);
}

id sub_1001FCFD0(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  __n128 v11;
  id v13;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v13 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v13);

  v8 = v13;
  if (v7)
  {
    v9 = v13;
  }
  else
  {
    v10 = v13;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow(v11);
  }
  return v7;
}

NSNumber sub_1001FD0A8()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_1001FD0B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1001FD100(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1001FD154(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Int sub_1001FD178()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001FD1BC()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001FD1E4()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_1001FD224(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1001FD238(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1001FD24C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_100496EC0, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_100393050);
  v3 = sub_100006924(&qword_100496EC8, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_100392FF0);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001FD2D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_100496ED0, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100393274);
  v3 = sub_100006924(&qword_100496ED8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100392C6C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_DWORD *sub_1001FD354@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_1001FD364@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1001FD370(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924(&qword_100496EB0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1003931A8);
  v3 = sub_100006924(&qword_100496EB8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100393148);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

uint64_t sub_1001FD404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100006924((unint64_t *)&qword_100496F50, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_10039340C);
  v3 = sub_100006924(qword_100496F58, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100393360);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1001FD488()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_1001FD490()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_1001FD4C0(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

BOOL sub_1001FD4D4(float *a1, float *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1001FD4E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100496DB0;
  if (!qword_100496DB0)
  {
    v1 = objc_opt_self(NSValue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100496DB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationRecordUtilities()
{
  return &type metadata for ApplicationRecordUtilities;
}

void type metadata accessor for AnimationCurve(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DB8, (uint64_t)&unk_100456930);
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DC0, (uint64_t)&unk_100456950);
}

__n128 initializeWithTake for UserDefaultsKeyValueTrigger(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DC8, (uint64_t)&unk_1004569D0);
}

void type metadata accessor for CTFrame(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DD0, (uint64_t)&unk_100456A00);
}

void type metadata accessor for Event(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DD8, (uint64_t)&unk_100456A30);
}

void _s3__C4NameVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DE0, (uint64_t)&unk_100456A58);
}

void _s3__C16os_unfair_lock_sVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DE8, (uint64_t)&unk_100456A80);
}

void _s3__C24MPCPlaybackIntentOptionsVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DF0, (uint64_t)&unk_100456AA8);
}

__n128 initializeWithTake for NotificationTrigger(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496DF8, (uint64_t)&unk_100456B28);
}

void _s3__C6CGRectVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E00, (uint64_t)&unk_100456BA8);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E08, (uint64_t)&unk_100456BD0);
}

void type metadata accessor for Attribute(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E10, (uint64_t)&unk_100456BF0);
}

void _s3__C6CGSizeVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E18, (uint64_t)&unk_100456C68);
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E20, (uint64_t)&unk_100456C90);
}

void _s3__C7CGPointVMa_0(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E28, (uint64_t)&unk_100456D10);
}

void type metadata accessor for CTRun(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E30, (uint64_t)&unk_100456D38);
}

void type metadata accessor for CTLine(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496E38, (uint64_t)&unk_100456D68);
}

uint64_t sub_1001FD6A4()
{
  return sub_100006924(&qword_100496E40, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100392C30);
}

uint64_t sub_1001FD6D0()
{
  return sub_100006924(&qword_100496E48, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100392C04);
}

uint64_t sub_1001FD6FC()
{
  return sub_100006924(&qword_100496E50, (uint64_t (*)(uint64_t))type metadata accessor for Attribute, (uint64_t)&unk_100392D68);
}

uint64_t sub_1001FD728()
{
  return sub_100006924(&qword_100496E58, (uint64_t (*)(uint64_t))_s3__C24MPCPlaybackIntentOptionsVMa_0, (uint64_t)&unk_100392E18);
}

uint64_t sub_1001FD754()
{
  return sub_100006924(&qword_100496E60, (uint64_t (*)(uint64_t))_s3__C24MPCPlaybackIntentOptionsVMa_0, (uint64_t)&unk_100392DE4);
}

uint64_t sub_1001FD780()
{
  return sub_100006924(&qword_100496E68, (uint64_t (*)(uint64_t))_s3__C24MPCPlaybackIntentOptionsVMa_0, (uint64_t)&unk_100392E44);
}

uint64_t sub_1001FD7AC()
{
  return sub_100006924(&qword_100496E70, (uint64_t (*)(uint64_t))_s3__C24MPCPlaybackIntentOptionsVMa_0, (uint64_t)&unk_100392E80);
}

uint64_t sub_1001FD7D8()
{
  return sub_100006924(&qword_100496E78, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_100392FB4);
}

uint64_t sub_1001FD804()
{
  return sub_100006924(&qword_100496E80, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_100392F88);
}

uint64_t sub_1001FD830()
{
  return sub_100006924(&qword_100496E88, (uint64_t (*)(uint64_t))_s3__C4NameVMa_0, (uint64_t)&unk_100393024);
}

uint64_t sub_1001FD85C()
{
  return sub_100006924(&qword_100496E90, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10039310C);
}

uint64_t sub_1001FD888()
{
  return sub_100006924(&qword_100496E98, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1003930E0);
}

uint64_t sub_1001FD8B4()
{
  return sub_100006924(&qword_100496EA0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_10039317C);
}

uint64_t sub_1001FD8E0()
{
  return sub_100006924(&qword_100496EA8, (uint64_t (*)(uint64_t))_s3__C3KeyVMa_0, (uint64_t)&unk_100392CA0);
}

unint64_t sub_1001FD90C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  _BYTE *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  sub_100005574(&qword_100496F00);
  v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  result = sub_1002121B4(v5, v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (_BYTE *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v3[6] + 16 * result);
    *v10 = v5;
    v10[1] = v4;
    *(_BYTE *)(v3[7] + result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 24;
    v5 = *((_QWORD *)v9 - 2);
    v15 = *((_QWORD *)v9 - 1);
    v6 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1002121B4(v5, v15);
    v9 = v14;
    v4 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1001FDA20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  Swift::UInt v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100005574(&qword_100496EF0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1002122C8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

void type metadata accessor for MPModelPlaylistEntryType(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496F28, (uint64_t)&unk_100456D98);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1000068B4(a1, &qword_100496F30, (uint64_t)&unk_100456DB8);
}

uint64_t sub_1001FDB20()
{
  return sub_100006924(&qword_100496F38, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100393324);
}

uint64_t sub_1001FDB4C()
{
  return sub_100006924(&qword_100496F40, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1003932F8);
}

uint64_t sub_1001FDB78()
{
  return sub_100006924(&qword_100496F48, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_100393394);
}

uint64_t static ArrayBuilder.buildBlock(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  _QWORD v7[6];

  v7[5] = a1;
  v7[2] = a2;
  v2 = type metadata accessor for Array(255);
  v3 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
  v5 = swift_getWitnessTable(&protocol conformance descriptor for [A], v2);
  return Sequence.flatMap<A>(_:)(sub_100030D94, v7, v3, v2, WitnessTable, v5);
}

uint64_t static ArrayBuilder.buildExpression(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __C::_NSRange v10;
  Swift::Int location;
  uint64_t WitnessTable;
  uint64_t v13;
  _QWORD v15[6];

  v4 = type metadata accessor for Optional(255, a2);
  v5 = type metadata accessor for _ContiguousArrayStorage(0, v4);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = swift_allocObject(v5, ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80) | 7);
  v8 = static Array._adoptStorage(_:count:)(v7, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  v15[5] = v8;
  v10.location = type metadata accessor for Array(0);
  location = v10.location;
  CFRange.init(_:)(v10);
  v15[2] = a2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], location);
  v13 = Sequence.compactMap<A>(_:)(sub_1001FDD40, v15, location, a2, WitnessTable);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001FDD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for Optional(0, *(_QWORD *)(v2 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
}

uint64_t type metadata accessor for ArrayBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ArrayBuilder);
}

uint64_t Whitetail.Binding.configurationBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = swift_allocObject(v4, 48, 7);
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(a1, a2, a3, a4);
  return v9;
}

{
  uint64_t v4;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _BYTE v13[72];

  v9 = sub_100005574(&qword_100496FF0);
  inited = swift_initStackObject(v9, v13);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = 0;
  v11 = swift_allocObject(v4, 48, 7);
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, a2, a3, a4);
  return v11;
}

uint64_t Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;
  char v31[32];

  v5 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 36) = 0;
  *(_QWORD *)(v5 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 24) = a4;
  swift_retain(v5);
  swift_retain(a4);
  v16 = sub_1001FF3E4(a1, v5);
  swift_bridgeObjectRelease(a1);
  swift_release(v5);
  swift_beginAccess(v5 + 40, v31, 1, 0);
  v17 = *(_QWORD *)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v16;
  swift_bridgeObjectRelease(v17);
  if ((a2 & 1) != 0)
  {
    v18 = (void *)objc_opt_self(NSThread);
    swift_retain_n(v5, 2);
    if (objc_msgSend(v18, "isMainThread"))
    {
      (*(void (**)(void))(v5 + 16))();
    }
    else
    {
      sub_1001FF558();
      v19 = (void *)static OS_dispatch_queue.main.getter();
      aBlock[4] = sub_100009BB0;
      v30 = v5;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000BED80;
      aBlock[3] = &unk_100456F70;
      v20 = _Block_copy(aBlock);
      v21 = v30;
      swift_retain(v5);
      v22 = swift_release(v21);
      static DispatchQoS.unspecified.getter(v22);
      aBlock[0] = _swiftEmptyArrayStorage;
      v23 = sub_100006924((unint64_t *)&qword_100496FE0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v24 = sub_100005574((uint64_t *)&unk_100497EE0);
      v25 = sub_1001FF5AC();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v20);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v27);
    }
    swift_release_n(v5, 2);
  }
  swift_release(a4);
  return v5;
}

Swift::Void __swiftcall Whitetail.Binding.setNeedsUpdate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (os_unfair_lock_s *)(v1 + 32);
  swift_beginAccess(v1 + 32, aBlock, 33, 0);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  swift_endAccess(aBlock);
  if ((*(_BYTE *)(v1 + 36) & 1) == 0)
  {
    *(_BYTE *)(v1 + 36) = 1;
    sub_1001FF558();
    v19 = v3;
    v11 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_1001FF5F8;
    v21 = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BED80;
    aBlock[3] = &unk_100456F98;
    v12 = _Block_copy(aBlock);
    v13 = v21;
    swift_retain(v1);
    v14 = swift_release(v13);
    static DispatchQoS.unspecified.getter(v14);
    aBlock[0] = _swiftEmptyArrayStorage;
    v15 = sub_100006924((unint64_t *)&qword_100496FE0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v16 = sub_100005574((uint64_t *)&unk_100497EE0);
    v17 = sub_1001FF5AC();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v2, v15);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
    _Block_release(v12);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess(v10, aBlock, 33, 0);
  os_unfair_lock_unlock(v10);
  swift_endAccess(aBlock);
}

uint64_t Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _BYTE v13[72];

  v9 = sub_100005574(&qword_100496FF0);
  inited = swift_initStackObject(v9, v13);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  sub_1000244B0((uint64_t)a1, inited + 32);
  v11 = swift_allocObject(v4, 48, 7);
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, a2, a3, a4);
  sub_10000682C(a1);
  return v11;
}

uint64_t Whitetail.Binding.add(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(double (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = a1[3];
  v4 = a1[4];
  sub_10000ABC8(a1, v3);
  v5 = swift_allocObject(&unk_100456FD0, 24, 7);
  swift_weakInit(v5 + 16, v1);
  v6 = *(uint64_t (**)(double (*)(), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain(v5);
  v7 = v6(sub_1001FF624, v5, v3, v4);
  if (v2)
  {
    swift_errorRelease(v2);
    return swift_release_n(v5, 2);
  }
  else
  {
    v9 = v7;
    swift_release_n(v5, 2);
    swift_beginAccess(v1 + 40, v14, 33, 0);
    v10 = swift_unknownObjectRetain(v9);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((*(_QWORD *)(v1 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((*(_QWORD *)(v1 + 40) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
    specialized Array._endMutation()(v13);
    swift_endAccess(v14);
    return swift_unknownObjectRelease(v9);
  }
}

double sub_1001FE59C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    Whitetail.Binding.setNeedsUpdate()();
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Whitetail.Binding.add(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(double (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  _QWORD *v20;

  v3 = v2;
  v4 = *((_QWORD *)a1._rawValue + 2);
  if (v4)
  {
    v5 = v1;
    v6 = (char *)a1._rawValue + 32;
    v20 = (_QWORD *)(v1 + 40);
    swift_bridgeObjectRetain();
    do
    {
      v8 = v6[3];
      v7 = v6[4];
      sub_10000ABC8(v6, v8);
      v9 = swift_allocObject(&unk_100456FD0, 24, 7);
      v10 = v5;
      swift_weakInit(v9 + 16, v5);
      v11 = *(uint64_t (**)(double (*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
      swift_retain(v9);
      v12 = v11(sub_1001FF624, v9, v8, v7);
      if (v3)
      {
        swift_errorRelease(v3);
        swift_release_n(v9, 2);
        v3 = 0;
      }
      else
      {
        v13 = v12;
        swift_release_n(v9, 2);
        v14 = v20;
        swift_beginAccess(v20, v19, 33, 0);
        v15 = swift_unknownObjectRetain(v13);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v13);
        specialized Array._endMutation()(v18);
        swift_endAccess(v19);
        swift_unknownObjectRelease(v13);
      }
      v5 = v10;
      v6 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001FE77C(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = (os_unfair_lock_s *)(a1 + 32);
  swift_beginAccess(a1 + 32, v5, 33, 0);
  os_unfair_lock_lock(v2);
  *(_BYTE *)(a1 + 36) = 0;
  os_unfair_lock_unlock(v2);
  v3 = swift_endAccess(v5);
  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v3);
}

uint64_t Whitetail.Binding.description.getter()
{
  _QWORD *v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  _QWORD v12[3];
  _QWORD v13[2];

  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._countAndFlagsBits = _typeName(_:qualified:)(*v0, 0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 8250;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v12[0] = v0;
  _print_unlocked<A, B>(_:_:)(v12, v13, &type metadata for UnsafeMutableRawPointer, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 0x6576726573626F20;
  v5._object = (void *)0xEB000000003D7372;
  String.append(_:)(v5);
  swift_beginAccess(v0 + 5, v12, 0, 0);
  v6 = v0[5];
  v7 = swift_bridgeObjectRetain();
  v8._countAndFlagsBits = Array.description.getter(v7, (char *)&type metadata for Swift.AnyObject + 8);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 62;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v13[0];
}

uint64_t Whitetail.Binding.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t Whitetail.Binding.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t sub_1001FE960()
{
  return Whitetail.Binding.description.getter();
}

id DistributedNotificationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  NSString v7;
  void *v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v5 = swift_allocObject(&unk_100456FF8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = objc_allocWithZone((Class)MusicDarwinNotificationObserver);
  swift_retain(a2);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11[4] = sub_100009BB0;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000BED80;
  v11[3] = &unk_100457010;
  v8 = _Block_copy(v11);
  v9 = objc_msgSend(v6, "initWithNotificationName:handler:", v7, v8);

  _Block_release(v8);
  swift_release(v12);
  return v9;
}

id sub_1001FEA8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return DistributedNotificationTrigger.createObserver(_:)(a1, a2, *v2);
}

uint64_t NotificationTrigger.object.getter(uint64_t a1, uint64_t a2)
{
  return swift_unknownObjectRetain(a2);
}

uint64_t NotificationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject(&unk_100457048, 32, 7);
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = type metadata accessor for NotificationObserver();
  swift_allocObject(v9, 64, 7);
  swift_unknownObjectRetain(a4);
  swift_retain(a2);
  return NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(a3, a4, 1, 1, (uint64_t)sub_100009BB0, v8);
}

uint64_t sub_1001FEB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(void **)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v7 = swift_allocObject(&unk_100457358, 32, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = type metadata accessor for NotificationObserver();
  swift_allocObject(v8, 64, 7);
  swift_unknownObjectRetain(v5);
  swift_retain(a2);
  return NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, v5, 1, 1, (uint64_t)sub_10000AD24, v7);
}

uint64_t KeyValueObservationTrigger.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return swift_retain(a2);
}

uint64_t KeyValueObservationTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v12 = (_QWORD *)swift_allocObject(&unk_100457070, 48, 7);
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a1;
  v12[5] = a2;
  v13 = a3;
  swift_retain(a2);
  v14 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(a4, 0, sub_1001FF684, v12, &protocol witness table for NSObject);
  swift_release(v12);

  return v14;
}

uint64_t sub_1001FECC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return KeyValueObservationTrigger.createObserver(_:)(a1, a2, *(void **)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t UserDefaultsKeyValueTrigger.init<A>(suiteName:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  dispatch thunk of RawRepresentable.rawValue.getter(&v9, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a3, a4);
  return a1;
}

char *UserDefaultsKeyValueTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  char *v13;

  v12 = swift_allocObject(&unk_100457098, 32, 7);
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain(a2);
  v13 = sub_1001FEE18(a5, a6, a3, a4, (uint64_t)sub_10000AD24, v12);
  swift_bridgeObjectRelease();
  swift_release(v12);
  return v13;
}

char *sub_1001FEE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)();
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];

  v36 = a5;
  v37 = a6;
  v10 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = __chkstk_darwin(v10);
  v14 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v35 = (uint64_t)&v34 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v34 - v17;
  v38[0] = a1;
  v38[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = String.init<A>(_:)(v38, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v21 = v20;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v22 = &v18[*(int *)(v10 + 20)];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  v23 = (uint64_t *)&v18[*(int *)(v10 + 24)];
  *v23 = v19;
  v23[1] = v21;
  if (qword_100496D68 != -1)
    swift_once(&qword_100496D68, sub_1002279B4);
  v24 = qword_100497FC8;
  v25 = *(_QWORD *)(qword_100497FC8
                  + OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaultsP33_0EE8F48931DDE162065F15584D7CE3A39_Observer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v25 + 16));
  v26 = v38[3];
  sub_100227A88(v24, (uint64_t)v18, v36, v37);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));
  if (v26)
  {
    sub_1001FFCA8((uint64_t)v18);
  }
  else
  {
    v27 = v35;
    sub_1001FFCE4((uint64_t)v18, v35);
    sub_1001FFD28((uint64_t)v18, (uint64_t)v14);
    v28 = *(unsigned __int8 *)(v11 + 80);
    v29 = (v28 + 16) & ~v28;
    v30 = swift_allocObject(&unk_100457380, v29 + v12, v28 | 7);
    sub_1001FFD28((uint64_t)v14, v30 + v29);
    v31 = type metadata accessor for NSUserDefaults.KeyValueRegistration(0);
    v14 = (char *)swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
    sub_1001FFD28(v27, (uint64_t)&v14[OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_identifier]);
    v32 = (void (**)())&v14[OBJC_IVAR____TtCE14MusicUtilitiesCSo14NSUserDefaults20KeyValueRegistration_onInvalidate];
    *v32 = sub_1001FFE08;
    v32[1] = (void (*)())v30;
  }
  return v14;
}

char *sub_1001FF054(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  v5 = *v2;
  v6 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  v9 = swift_allocObject(&unk_100457330, 32, 7);
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain(a2);
  v10 = sub_1001FEE18(v8, v7, v5, v6, (uint64_t)sub_10000AD24, v9);
  swift_bridgeObjectRelease();
  swift_release(v9);
  return v10;
}

uint64_t PublisherTrigger.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a3, a1, v5);
}

uint64_t PublisherTrigger.createObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  void *WitnessTable;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41[4];

  v39 = a1;
  v40 = a2;
  v4 = sub_100005574(&qword_100496FF8);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *(_QWORD *)(a3 + 16);
  v7 = (void *)type metadata accessor for Published.Publisher(255, v38);
  v8 = (void *)sub_1001FF558();
  WitnessTable = (void *)swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v7);
  v35 = WitnessTable;
  v10 = (void *)sub_100006924(&qword_100497000, (uint64_t (*)(uint64_t))sub_1001FF558, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v41[0] = v7;
  v41[1] = v8;
  v41[2] = WitnessTable;
  v41[3] = v10;
  v11 = type metadata accessor for Publishers.ReceiveOn(0, v41);
  v36 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - v12;
  v14 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.ReceiveOn<A, B>, v11);
  v15 = type metadata accessor for Publishers.Drop(0, v11, v14);
  v37 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v34 - v17;
  v41[0] = (id)static OS_dispatch_queue.main.getter(v16, v19, v20, v21, v22, v23, v24, v25);
  v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
  Publisher.receive<A>(on:options:)(v41, v6, v7, v8, v35);
  sub_1001FF6A4((uint64_t)v6);

  Publisher.dropFirst(_:)(1, v11, v14);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
  v27 = (_QWORD *)swift_allocObject(&unk_1004570C0, 40, 7);
  v28 = v39;
  v27[2] = v38;
  v27[3] = v28;
  v29 = v40;
  v27[4] = v40;
  swift_retain(v29);
  v30 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Drop<A>, v15);
  v31 = Publisher<>.sink(receiveValue:)(sub_1001FF708, v27, v15, v30);
  v32 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v37 + 8))(v18, v15, v32);
  return v31;
}

uint64_t sub_1001FF3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PublisherTrigger.createObserver(_:)(a1, a2, a3);
}

_QWORD *sub_1001FF3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(double (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  result = _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8 = (_QWORD *)(a1 + 32);
    v19 = a1;
    swift_bridgeObjectRetain();
    do
    {
      v10 = v8[3];
      v9 = v8[4];
      sub_10000ABC8(v8, v10);
      v11 = swift_allocObject(&unk_100456FD0, 24, 7);
      swift_weakInit(v11 + 16, a2);
      v12 = *(uint64_t (**)(double (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
      swift_retain(v11);
      v13 = v12(sub_1001FF624, v11, v10, v9);
      if (v3)
      {
        swift_errorRelease(v3);
        swift_release_n(v11, 2);
        v3 = 0;
      }
      else
      {
        v14 = v13;
        v15 = swift_release_n(v11, 2);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
        specialized Array._endMutation()(v18);
      }
      v8 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v19);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_1001FF558()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100497ED0;
  if (!qword_100497ED0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100497ED0);
  }
  return result;
}

uint64_t sub_1001FF594(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1001FF5A4(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_1001FF5AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100496FE8;
  if (!qword_100496FE8)
  {
    v1 = sub_100005600((uint64_t *)&unk_100497EE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100496FE8);
  }
  return result;
}

uint64_t sub_1001FF5F8()
{
  uint64_t v0;

  return sub_1001FE77C(v0);
}

uint64_t sub_1001FF600()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001FF624()
{
  uint64_t v0;

  return sub_1001FE59C(v0);
}

uint64_t sub_1001FF63C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FF660()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001FF684()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1001FF6A4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100496FF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FF6E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001FF708()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

ValueMetadata *type metadata accessor for Whitetail()
{
  return &type metadata for Whitetail;
}

uint64_t type metadata accessor for Whitetail.Binding()
{
  return objc_opt_self(_TtCO14MusicUtilities9Whitetail7Binding);
}

ValueMetadata *type metadata accessor for DistributedNotificationTrigger()
{
  return &type metadata for DistributedNotificationTrigger;
}

_QWORD *initializeBufferWithCopyOfBuffer for NotificationTrigger(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_unknownObjectRetain(v4);
  return a1;
}

uint64_t destroy for NotificationTrigger(uint64_t a1)
{

  return swift_unknownObjectRelease(*(_QWORD *)(a1 + 8));
}

uint64_t assignWithCopy for NotificationTrigger(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v7);
  return a1;
}

uint64_t assignWithTake for NotificationTrigger(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationTrigger()
{
  return &type metadata for NotificationTrigger;
}

_QWORD *sub_1001FF868(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_retain(v4);
  return a1;
}

double sub_1001FF89C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 8)).n128_u64[0];
  return result;
}

uint64_t sub_1001FF8C4(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_1001FF91C(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t type metadata accessor for KeyValueObservationTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyValueObservationTrigger);
}

uint64_t getEnumTagSinglePayload for UserDefaultsKeyValueTrigger(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefaultsKeyValueTrigger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDefaultsKeyValueTrigger()
{
  return &type metadata for UserDefaultsKeyValueTrigger;
}

uint64_t sub_1001FF9FC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Published.Publisher(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 24);
    return 0;
  }
  return result;
}

uint64_t sub_1001FFA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v5 - 8))(a1, a2, v5);
}

uint64_t sub_1001FFAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a2 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_1001FFAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  return a1;
}

uint64_t sub_1001FFB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  return a1;
}

uint64_t sub_1001FFB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  return a1;
}

uint64_t sub_1001FFBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  return a1;
}

uint64_t sub_1001FFC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FFC0C);
}

uint64_t sub_1001FFC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a3 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, a2, v5);
}

uint64_t sub_1001FFC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FFC58);
}

uint64_t sub_1001FFC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for Published.Publisher(0, *(_QWORD *)(a4 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

uint64_t type metadata accessor for PublisherTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PublisherTrigger);
}

uint64_t sub_1001FFCA8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FFCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FFD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s20KeyValueRegistrationC10IdentifierVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FFD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(_s20KeyValueRegistrationC10IdentifierVMa(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4, v5);
}

void sub_1001FFE08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s20KeyValueRegistrationC10IdentifierVMa(0) - 8) + 80);
  sub_100227834(v0 + ((v1 + 16) & ~v1));
}

uint64_t NotificationObserver.__allocating_init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(void *a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  v13 = swift_allocObject(v6, 64, 7);
  NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(a1, a2, a3, a4, a5, a6);
  return v13;
}

uint64_t NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(void *a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  __objc2_class **v14;
  char **v15;
  void *v16;
  id v17;
  id v18;
  uint64_t Strong;
  id v20;
  id v21;

  v13 = swift_unknownObjectWeakInit(v6 + 24, 0);
  *(_QWORD *)(v6 + 16) = a1;
  swift_unknownObjectWeakAssign(v13, a2);
  *(_BYTE *)(v6 + 32) = a3;
  v14 = (__objc2_class **)NSNotificationCenter_ptr;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  if ((a4 & 1) != 0)
  {
    v15 = &selRef_defaultCenter;
  }
  else
  {
    v14 = &off_10043B240;
    v15 = &selRef_default;
  }
  v16 = (void *)objc_opt_self(*v14);
  v17 = a1;
  swift_retain(a6);
  v18 = objc_msgSend(v16, *v15);
  *(_QWORD *)(v6 + 40) = v18;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 24);
  v20 = v17;
  v21 = v18;
  swift_retain(v6);
  objc_msgSend(v21, "addObserver:selector:name:object:", v6, "handleNotification:", v20, Strong);

  swift_release(v6);
  swift_unknownObjectRelease(Strong);

  swift_unknownObjectRelease(a2);
  swift_release(a6);
  return v6;
}

uint64_t NotificationObserver.deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
  objc_msgSend(v1, "removeObserver:name:object:", v0, v2, Strong);
  swift_unknownObjectRelease(Strong);

  sub_1000FF204(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t NotificationObserver.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t Strong;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
  objc_msgSend(v1, "removeObserver:name:object:", v0, v2, Strong);
  swift_unknownObjectRelease(Strong);

  sub_1000FF204(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_100200140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *, uint64_t);
  void *v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  __n128 v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  __n128 v50;
  void (*v51)(char *, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD aBlock[5];
  uint64_t v64;

  v2 = v1;
  v62 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Notification(0);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v13 = __chkstk_darwin(v11);
  v14 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v53 - v16;
  __chkstk_darwin(v15);
  if (*(_BYTE *)(v2 + 32) != 1)
    return (*(uint64_t (**)(uint64_t))(v2 + 48))(v62);
  v54 = v10;
  v55 = v8;
  v56 = v7;
  v57 = v6;
  v58 = v4;
  v59 = v3;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v22 = (char *)&v53 - v18;
  v23 = v20;
  v24 = v19;
  v21((char *)&v53 - v18, v62, v20);
  v61 = v22;
  v21(v17, (uint64_t)v22, v23);
  v21(v14, (uint64_t)v17, v23);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (v25 + 24) & ~v25;
  v27 = swift_allocObject(&unk_1004573B8, v26 + v12, v25 | 7);
  *(_QWORD *)(v27 + 16) = v2;
  v62 = v24;
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v60 = v23;
  v28(v27 + v26, v17, v23);
  v29 = (void *)objc_opt_self(NSThread);
  swift_retain_n(v2, 2);
  v30 = v14;
  if (objc_msgSend(v29, "isMainThread"))
  {
    (*(void (**)(char *))(v2 + 48))(v14);
  }
  else
  {
    v32 = sub_1000087DC(0, (unint64_t *)&qword_100497ED0, OS_dispatch_queue_ptr);
    v40 = (void *)static OS_dispatch_queue.main.getter(v32, v33, v34, v35, v36, v37, v38, v39);
    aBlock[4] = sub_1002007C4;
    v64 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BED80;
    aBlock[3] = &unk_1004573D0;
    v41 = _Block_copy(aBlock);
    v42 = v64;
    swift_retain(v27);
    v43 = swift_release(v42);
    v44 = v54;
    static DispatchQoS.unspecified.getter(v43);
    aBlock[0] = _swiftEmptyArrayStorage;
    v45 = sub_10020081C();
    v46 = sub_100005574((uint64_t *)&unk_100497EE0);
    v47 = sub_1001FF5AC();
    v48 = v57;
    v49 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v46, v47, v59, v45);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v44, v48, v41);
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v49);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v56);
  }
  swift_release(v2);
  v50 = swift_release(v27);
  v51 = *(void (**)(char *, uint64_t, __n128))(v62 + 8);
  v52 = v60;
  v51(v30, v60, v50);
  return ((uint64_t (*)(char *, uint64_t))v51)(v61, v52);
}

uint64_t NotificationObserver.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t Strong;
  uint64_t v18;
  unint64_t v19;

  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v1._object = (void *)0x80000001003B6B40;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v1);
  v2._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(*(_QWORD *)(v0 + 16));
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x3D7463656A626F20;
  v3._object = (void *)0xE800000000000000;
  String.append(_:)(v3);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 24);
  v4 = sub_100005574(&qword_1004971C0);
  v5._countAndFlagsBits = String.init<A>(describing:)(&Strong, v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x3D7265746E656320;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  sub_1000087DC(0, (unint64_t *)&unk_100497EB0, NSObject_ptr);
  v7 = *(void **)(v0 + 40);
  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) != 0)
  {
    v10 = (void *)0xE700000000000000;
    v11 = 0x746C7561666564;
  }
  else
  {
    v12 = objc_msgSend(v7, "description");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v10 = v13;

  }
  v14._countAndFlagsBits = v11;
  v14._object = v10;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return v18;
}

uint64_t sub_100200710()
{
  return NotificationObserver.debugDescription.getter();
}

uint64_t type metadata accessor for NotificationObserver()
{
  return objc_opt_self(_TtC14MusicUtilities20NotificationObserver);
}

uint64_t sub_100200750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Notification(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002007C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 16) + 48))(v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100200804(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100200814(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_10020081C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100496FE0;
  if (!qword_100496FE0)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_100496FE0);
  }
  return result;
}

uint64_t BrightnessManager.__allocating_init(windowScene:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 64, 7);
  BrightnessManager.init(windowScene:)(a1);
  return v3;
}

_QWORD *BrightnessManager.init(windowScene:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v2 = v1;
  v1[2] = objc_msgSend(objc_allocWithZone((Class)BrightnessSystemClient), "init");
  v1[3] = sub_1001FC814((uint64_t)&off_1004561B8);
  v1[4] = sub_1001FC814((uint64_t)&off_100456208);
  v1[5] = sub_1001FC924((uint64_t)&off_100456258);
  v1[6] = sub_1001FC924((uint64_t)&off_100456290);
  v1[7] = _swiftEmptyArrayStorage;
  v4 = sub_100005574(&qword_1004972B0);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100384B70;
  v6 = swift_allocObject(&unk_100457418, 24, 7);
  swift_weakInit(v6 + 16, v2);
  v7 = type metadata accessor for NotificationObserver();
  swift_allocObject(v7, 64, 7);
  v8 = UISceneWillDeactivateNotification;
  v9 = a1;
  *(_QWORD *)(v5 + 32) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v8, (uint64_t)a1, 1, 1, (uint64_t)sub_100200AB4, v6);
  v10 = swift_allocObject(&unk_100457418, 24, 7);
  swift_weakInit(v10 + 16, v2);
  swift_allocObject(v7, 64, 7);
  v11 = v9;
  v12 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UISceneDidActivateNotification, (uint64_t)a1, 1, 1, (uint64_t)sub_100200C28, v10);
  *(_QWORD *)(v5 + 40) = v12;
  specialized Array._endMutation()(v12);

  v2[7] = v5;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100200A90()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_100200AB4(uint64_t a1)
{
  uint64_t v1;

  return sub_100200BD0(a1, v1, BrightnessManager.resetBrightnessToSystemDefault());
}

Swift::Void __swiftcall BrightnessManager.resetBrightnessToSystemDefault()()
{
  uint64_t v0;
  void *v1;
  Class isa;
  NSString v3;
  Class v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forKey:", isa, v3);

  v4 = Dictionary._bridgeToObjectiveC()().super.isa;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forKey:", v4, v5);

}

double sub_100200BD0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    a3();
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

double sub_100200C28(uint64_t a1)
{
  uint64_t v1;

  return sub_100200BD0(a1, v1, BrightnessManager.increaseBrightnessIfNeeded());
}

Swift::Void __swiftcall BrightnessManager.increaseBrightnessIfNeeded()()
{
  uint64_t v0;
  void *v1;
  Class isa;
  NSString v3;
  Class v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forKey:", isa, v3);

  v4 = Dictionary._bridgeToObjectiveC()().super.isa;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setProperty:forKey:", v4, v5);

}

uint64_t BrightnessManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t BrightnessManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for BrightnessManager()
{
  return objc_opt_self(_TtC14MusicUtilities17BrightnessManager);
}

uint64_t ControlEventHandler.__allocating_init<A>(control:events:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, 48, 7);
  ControlEventHandler.init<A>(control:events:handler:)(a1, a2, a3, a4, a5);
  return v11;
}

_QWORD *ControlEventHandler.init<A>(control:events:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t Strong;
  void *v14;

  v11 = swift_unknownObjectWeakInit(v5 + 2, 0);
  swift_unknownObjectWeakAssign(v11, a1);
  v5[3] = a2;
  v12 = (_QWORD *)swift_allocObject(&unk_100457440, 40, 7);
  v12[2] = a5;
  v12[3] = a3;
  v12[4] = a4;
  v5[4] = sub_100200FC4;
  v5[5] = v12;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 2);
  if (Strong)
  {
    v14 = (void *)Strong;
    swift_retain(v5);
    objc_msgSend(v14, "addTarget:action:forControlEvents:", v5, "handleActionFromControl:", a2);

    swift_release(v5);
  }

  return v5;
}

void sub_100200F34(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;

  v6 = swift_dynamicCastUnknownClass(a1, a4);
  if (v6)
  {
    v7 = v6;
    v8 = a1;
    a2(v7);

  }
}

uint64_t sub_100200FA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100200FC4(void *a1)
{
  uint64_t v1;

  sub_100200F34(a1, *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t ControlEventHandler.deinit()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:forControlEvents:", v0, "handleActionFromControl:", *(_QWORD *)(v0 + 24));

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t ControlEventHandler.__deallocating_deinit()
{
  uint64_t v0;
  void *Strong;
  void *v2;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v2 = Strong;
    objc_msgSend(Strong, "removeTarget:action:forControlEvents:", v0, "handleActionFromControl:", *(_QWORD *)(v0 + 24));

  }
  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

void ControlEventHandling<>.on(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  _QWORD *v11;
  id v12;

  v5 = v4;
  sub_1000087DC(0, &qword_100497380, UIAction_ptr);
  v10 = swift_allocObject(&unk_100457468, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16, v5);
  v11 = (_QWORD *)swift_allocObject(&unk_100457490, 48, 7);
  v11[2] = a4;
  v11[3] = v10;
  v11[4] = a2;
  v11[5] = a3;
  swift_retain(a3);
  v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100201444, v11);
  objc_msgSend(v5, "addAction:forControlEvents:", v12, a1);

}

uint64_t sub_100201200()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100201224(void *a1, uint64_t a2, void (*a3)(void *))
{
  id v5;
  id v6;
  uint64_t v7;
  void *Strong;
  uint64_t v9;
  void *v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v5 = objc_msgSend(a1, "sender");
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1002015B0((uint64_t)v11, (uint64_t)v12);
  if (!v13)
  {
    sub_1002015F8((uint64_t)v12);
LABEL_8:
    v9 = a2 + 16;
    swift_beginAccess(v9, v12, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v9);
    if (!Strong)
      return;
    goto LABEL_9;
  }
  v7 = sub_1000087DC(0, &qword_100497478, UIControl_ptr);
  if ((swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    goto LABEL_8;
  Strong = v10;
LABEL_9:
  a3(Strong);

}

void sub_100201324(void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5)
{
  id v8;
  id v9;
  void *Strong;
  uint64_t v11;
  void *v12;
  _OWORD v13[2];
  _BYTE v14[24];
  uint64_t v15;

  v8 = objc_msgSend(a1, "sender");
  if (v8)
  {
    v9 = v8;
    _bridgeAnyObjectToAny(_:)(v8);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_1002015B0((uint64_t)v13, (uint64_t)v14);
  if (!v15)
  {
    sub_1002015F8((uint64_t)v14);
LABEL_8:
    v11 = a2 + 16;
    swift_beginAccess(v11, v14, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
    if (!Strong)
      return;
    goto LABEL_9;
  }
  if (!swift_dynamicCast(&v12, v14, (char *)&type metadata for Any + 8, a5, 6))
    goto LABEL_8;
  Strong = v12;
LABEL_9:
  a3(Strong);

}

uint64_t sub_100201418()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100201444(void *a1)
{
  uint64_t v1;

  sub_100201324(a1, *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

void sub_100201450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v7 = *v3;
  sub_1000087DC(0, &qword_100497380, UIAction_ptr);
  v8 = swift_allocObject(&unk_1004574B8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16, v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1004574E0, 40, 7);
  v9[2] = v8;
  v9[3] = a2;
  v9[4] = a3;
  swift_retain(a3);
  v10 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1002015A4, v9);
  objc_msgSend(v7, "addAction:forControlEvents:", v10, a1);

}

uint64_t type metadata accessor for ControlEventHandler()
{
  return objc_opt_self(_TtC14MusicUtilities19ControlEventHandler);
}

uint64_t sub_100201578()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1002015A4(void *a1)
{
  uint64_t v1;

  sub_100201224(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_1002015B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100497470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002015F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100497470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Datavault.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Datavault.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1002016D0(v3, a1);
}

uint64_t sub_1002016D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100497480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Datavault.logger.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100201770(a1, v3);
  return swift_endAccess(v5);
}

uint64_t sub_100201770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_100497480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Datavault.logger.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger, a1, 33, 0);
  return j__swift_endAccess;
}

_QWORD *Datavault.__allocating_init(url:storageClass:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v18;

  v4 = v3;
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)URL.path.getter(v10);
  v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v16 = sub_100201A1C(v13, v15, (uint64_t)v12, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v16;
}

_QWORD *Datavault.__allocating_init(path:storageClass:)(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v19;

  v5 = v4;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v19 - v15;
  URL.init(fileURLWithPath:)(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v17 = sub_100201A1C(a1, a2, (uint64_t)v14, a3, a4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v17;
}

_QWORD *sub_100201A1C(char *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  NSString v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  __n128 v34;
  uint64_t v35;
  char *v36;
  __n128 v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t, __n128);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  __int16 v61;
  unsigned __int16 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  __n128 v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  char *v85;
  __n128 v86;
  unsigned int v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  char *v98;
  id v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[3];
  _BYTE v113[24];

  v105 = a2;
  v106 = a5;
  v102 = a4;
  v104 = a1;
  v103 = *v5;
  v8 = type metadata accessor for Logger(0, a2);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v101 = (char *)v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)v97 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)v97 - v15;
  v17 = type metadata accessor for URL(0);
  v109 = *(_QWORD *)(v17 - 8);
  v110 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = v5;
  v20 = (char *)v5 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))((uint64_t)v5 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger, 1, 1, v8);
  v111 = a3;
  URL.deletingLastPathComponent()(v21);
  v22 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v108 = v19;
  NSFileManager.createDirectoryIfNeeded(at:)();
  if (!v6)
  {
    v23 = v101;
    v24 = v16;
    v98 = v20;
    v97[0] = v14;
    v100 = v9;
    v97[1] = 0;
    v113[0] = 0;
    v25 = v104;
    v26 = v105;
    v27 = String._bridgeToObjectiveC()();
    v99 = v22;
    objc_msgSend(v22, "fileExistsAtPath:isDirectory:", v27, v113);

    v28 = v26;
    if (v113[0] == 1)
    {
      v29 = v26;
      v30 = String.utf8CString.getter(v25, v26);
      v31 = v106;
      v32 = String.utf8CString.getter(v102, v106);
      v33 = rootless_check_datavault_flag(v30 + 32, v32 + 32);
      swift_release(v30);
      v34 = swift_release(v32);
      v35 = v100;
      if (!v33)
      {
        v58 = v109;
        v59 = v110;
        (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v108, v110, v34);

        swift_bridgeObjectRelease(v31);
        v28 = v29;
LABEL_29:
        v63 = v104;
        goto LABEL_30;
      }
      v36 = v98;
      v37 = swift_beginAccess(v98, v113, 0, 0);
      v38 = v8;
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48);
      v28 = v29;
      if (!v39(v36, 1, v38, v37))
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v24, v36, v38);
        v40 = swift_bridgeObjectRetain_n(v29, 2);
        v41 = Logger.logObject.getter(v40);
        v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = swift_slowAlloc(12, -1);
          v101 = (char *)swift_slowAlloc(32, -1);
          v112[0] = (uint64_t)v101;
          *(_DWORD *)v43 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v43 + 4) = sub_100229328(v104, v29, v112);
          swift_bridgeObjectRelease_n(v29, 3);
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "Found unsecure directory %s attempting to convert to datavault", (uint8_t *)v43, 0xCu);
          v44 = v101;
          swift_arrayDestroy(v101, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v44, -1, -1);
          swift_slowDealloc(v43, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v29, 2);
        }
        (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v38);
        v28 = v29;
      }
      v74 = String.utf8CString.getter(v104, v28);
      v75 = String.utf8CString.getter(v102, v31);
      swift_bridgeObjectRelease(v31);
      v76 = rootless_convert_to_datavault(v74 + 32, v75 + 32);
      swift_release(v74);
      swift_release(v75);
      if (v76)
      {
        v77 = swift_bridgeObjectRelease(v28);
        v78 = errno.getter(v77);
        v79 = sub_100202668();
        swift_allocError(&type metadata for Datavault.Error, v79, 0, 0);
        *(_DWORD *)v80 = v78;
        *(_BYTE *)(v80 + 4) = 1;
        goto LABEL_21;
      }
      v85 = v98;
      v86 = swift_beginAccess(v98, v112, 32, 0);
      v87 = v39(v85, 1, v38, v86);
      v88 = v99;
      if (v87)
      {
        v58 = v109;
        v59 = v110;
        (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
        swift_endAccess(v112);

        goto LABEL_29;
      }
      v89 = v100;
      v90 = v97[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v100 + 16))(v97[0], v85, v38);
      swift_endAccess(v112);
      v91 = swift_bridgeObjectRetain_n(v28, 2);
      v92 = Logger.logObject.getter(v91);
      v93 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v92, v93))
      {
        swift_bridgeObjectRelease_n(v28, 2);

        (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v90, v38);
        v58 = v109;
        v59 = v110;
        (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
        goto LABEL_29;
      }
      v94 = swift_slowAlloc(12, -1);
      v95 = swift_slowAlloc(32, -1);
      v112[0] = v95;
      *(_DWORD *)v94 = 136315138;
      swift_bridgeObjectRetain();
      v96 = v38;
      v63 = v104;
      *(_QWORD *)(v94 + 4) = sub_100229328(v104, v28, v112);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "Datavault directory conversion successful %s", (uint8_t *)v94, 0xCu);
      swift_arrayDestroy(v95, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v94, -1, -1);

      (*(void (**)(_QWORD, uint64_t))(v89 + 8))(v97[0], v96);
      v58 = v109;
      v59 = v110;
      (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v110);
    }
    else
    {
      v45 = v98;
      v46 = swift_beginAccess(v98, v113, 0, 0);
      v47 = v100;
      v48 = v8;
      v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v100 + 48))(v45, 1, v8, v46);
      if (!(_DWORD)v49)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v23, v45, v8);
        v50 = swift_bridgeObjectRetain_n(v26, 2);
        v51 = Logger.logObject.getter(v50);
        v52 = v47;
        v53 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v51, v53))
        {
          v54 = swift_slowAlloc(12, -1);
          v55 = v28;
          v56 = swift_slowAlloc(32, -1);
          v112[0] = v56;
          *(_DWORD *)v54 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v54 + 4) = sub_100229328(v104, v55, v112);
          swift_bridgeObjectRelease_n(v55, 3);
          _os_log_impl((void *)&_mh_execute_header, v51, v53, "Creating DataVault directory %s", (uint8_t *)v54, 0xCu);
          swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
          v57 = v56;
          v28 = v55;
          swift_slowDealloc(v57, -1, -1);
          swift_slowDealloc(v54, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v28, 2);
        }
        v49 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v23, v48);
      }
      v60 = S_IRUSR.getter(v49);
      v61 = S_IWUSR.getter() | v60;
      v62 = v61 | S_IXUSR.getter();
      v63 = v104;
      v64 = String.utf8CString.getter(v104, v28);
      v65 = v106;
      v66 = String.utf8CString.getter(v102, v106);
      swift_bridgeObjectRelease(v65);
      v67 = rootless_mkdir_datavault(v64 + 32, v62, v66 + 32);
      swift_release(v64);
      v68 = swift_release(v66);
      if (v67)
      {
        v69 = swift_bridgeObjectRelease(v28);
        v70 = errno.getter(v69);
        v71 = sub_100202668();
        swift_allocError(&type metadata for Datavault.Error, v71, 0, 0);
        *(_DWORD *)v73 = v70;
        *(_BYTE *)(v73 + 4) = 0;
LABEL_21:
        swift_willThrow(v72);

        goto LABEL_22;
      }
      v58 = v109;
      v59 = v110;
      (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v108, v110, v68);

    }
LABEL_30:
    v81 = v107;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))((uint64_t)v107 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url, v111, v59);
    v81[2] = v63;
    v81[3] = v28;
    return v81;
  }
  swift_bridgeObjectRelease(v105);

  swift_bridgeObjectRelease(v106);
LABEL_22:
  v81 = v107;
  v82 = v110;
  v83 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
  v83(v111, v110);
  v83((uint64_t)v108, v82);
  sub_1002023B4((uint64_t)v81 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);
  swift_deallocPartialClassInstance(v81, v103, *(unsigned int *)(*v81 + 48), *(unsigned __int16 *)(*v81 + 52));
  return v81;
}

uint64_t Datavault.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1002023B4(v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);
  return v0;
}

uint64_t sub_1002023B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_100497480);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Datavault.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_url;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1002023B4(v0 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10020245C()
{
  return type metadata accessor for Datavault(0);
}

uint64_t type metadata accessor for Datavault(uint64_t a1)
{
  uint64_t result;

  result = qword_1004974B0;
  if (!qword_1004974B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Datavault);
  return result;
}

void sub_1002024A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_100393820;
  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100202534(319, v3);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_100202534(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1004974C0)
  {
    v3 = type metadata accessor for Logger(255, a2);
    v4 = type metadata accessor for Optional(a1, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1004974C0);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for Datavault.Error(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Datavault.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Datavault.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

uint64_t sub_100202628(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u)
    return *(unsigned __int8 *)(a1 + 4);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100202640(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Datavault.Error()
{
  return &type metadata for Datavault.Error;
}

unint64_t sub_100202668()
{
  unint64_t result;

  result = qword_100497550;
  if (!qword_100497550)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Datavault.Error, &type metadata for Datavault.Error);
    atomic_store(result, (unint64_t *)&qword_100497550);
  }
  return result;
}

id sub_100202760()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayLinkHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002027A8()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_100497558 = result;
  return result;
}

id CADisplayLink.init(handler:)(uint64_t a1, uint64_t a2)
{
  objc_class *v4;
  char *v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  const void *v11;
  id v12;
  objc_super v14;

  v4 = (objc_class *)type metadata accessor for DisplayLinkHandler();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = &v5[OBJC_IVAR____TtC14MusicUtilitiesP33_A1FC62D80C043A876151FA559C82DA5918DisplayLinkHandler__handler];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v14.receiver = v5;
  v14.super_class = v4;
  swift_retain(a2);
  v7 = objc_msgSendSuper2(&v14, "init");
  v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "displayLinkWithTarget:selector:", v7, "handleDisplayLinkFired:", v14.receiver, v14.super_class);
  v9 = qword_100496CF8;
  v10 = v8;
  if (v9 != -1)
    swift_once(&qword_100496CF8, sub_1002027A8);
  v11 = (const void *)qword_100497558;
  v12 = v7;
  objc_setAssociatedObject(v10, v11, v12, (void *)1);

  swift_release(a2);
  return v10;
}

uint64_t type metadata accessor for DisplayLinkHandler()
{
  return objc_opt_self(_TtC14MusicUtilitiesP33_A1FC62D80C043A876151FA559C82DA5918DisplayLinkHandler);
}

uint64_t EdgePairSequence.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for Array(0);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  if ((Collection.isEmpty.getter(v4, WitnessTable) & 1) != 0)
  {
    v6 = type metadata accessor for Optional(255, v3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, v3, v6, 0, 0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a2, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    v9 = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    RangeReplaceableCollection.removeFirst()(v4, v9);
    v10 = type metadata accessor for Optional(255, v3);
    v11 = swift_getTupleTypeMetadata2(0, v3, v10, 0, 0);
    v12 = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    RangeReplaceableCollection<>.popLast()(v4, v12, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 0, 1, v11);
  }
}

uint64_t sub_100202A54(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for EdgePairSequence<A>, a1);
}

uint64_t type metadata accessor for EdgePairSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EdgePairSequence);
}

uint64_t Collection<>.compare<A>(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t TupleTypeMetadata2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void (*v53)(uint64_t *, char *, uint64_t);
  unsigned int (*v54)(uint64_t *, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  void (*v87)(uint64_t *, _QWORD);
  uint64_t v88;
  char *v89;
  void (*v90)(char *);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t *, _QWORD);
  unint64_t v125;
  uint64_t v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(uint64_t *, _QWORD);
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void (*v152)(uint64_t *, _QWORD);
  uint64_t v153;
  char *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t WitnessTable;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  char *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t AssociatedTypeWitness;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  void (*v212)(char *);
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;

  v209 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a4);
  v204 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = __chkstk_darwin(AssociatedTypeWitness);
  v198 = (char *)&v182 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v203 = (char *)&v182 - v14;
  __chkstk_darwin(v13);
  v218 = (char *)&v182 - v15;
  v205 = a5;
  v194 = swift_getAssociatedTypeWitness(0, a5);
  v193 = *(_QWORD *)(v194 - 8);
  v16 = __chkstk_darwin(v194);
  v190 = (char *)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v192 = (char *)&v182 - v19;
  __chkstk_darwin(v18);
  v207 = (char *)&v182 - v20;
  v21 = *(_QWORD *)(a5 + 8);
  v185 = type metadata accessor for EnumeratedSequence(0, a3, v21);
  __chkstk_darwin(v185);
  v184 = (char *)&v182 - v22;
  v186 = v21;
  v212 = (void (*)(char *))type metadata accessor for EnumeratedSequence.Iterator(0, a3, v21);
  v182 = *((_QWORD *)v212 - 1);
  __chkstk_darwin(v212);
  v210 = (unint64_t)&v182 - v23;
  v24 = *(char **)(a4 + 8);
  v25 = swift_getAssociatedTypeWitness(0, v24);
  v214 = *(_QWORD *)(v25 - 8);
  v26 = __chkstk_darwin(v25);
  v197 = (char *)&v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v215 = (char *)&v182 - v28;
  v199 = a6;
  v30 = type metadata accessor for CollectionComparisonOperation(0, v25, a6, v29);
  __chkstk_darwin(v30);
  v195 = (uint64_t *)((char *)&v182 - v31);
  v216 = v25;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, &type metadata for Int, v25, "offset element ", 0);
  v221 = type metadata accessor for Optional(0, TupleTypeMetadata2);
  v213 = *(_QWORD *)(v221 - 8);
  v33 = __chkstk_darwin(v221);
  v202 = (char *)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v220 = (char *)&v182 - v36;
  __chkstk_darwin(v35);
  v38 = (uint64_t *)((char *)&v182 - v37);
  v188 = type metadata accessor for EnumeratedSequence(0, a2, v24);
  __chkstk_darwin(v188);
  v187 = (char *)&v182 - v39;
  v196 = v24;
  v219 = (char *)type metadata accessor for EnumeratedSequence.Iterator(0, a2, v24);
  v183 = *((_QWORD *)v219 - 1);
  __chkstk_darwin(v219);
  v41 = (char *)&v182 - v40;
  v200 = a2;
  v42 = a4;
  v43 = dispatch thunk of Collection.count.getter(a2, a4);
  v208 = a3;
  v44 = dispatch thunk of Collection.count.getter(a3, v205);
  result = static Array._allocateUninitialized(_:)(0, v30);
  v225 = result;
  v191 = v44;
  v46 = __OFADD__(v44, 1);
  v47 = v44 + 1;
  if (v46)
    goto LABEL_53;
  v48 = type metadata accessor for Array(0);
  v49 = sub_100205298((uint64_t)&v225, v47, v48);
  result = swift_bridgeObjectRelease();
  v225 = v49;
  if (__OFADD__(v43, 1))
  {
LABEL_54:
    __break(1u);
  }
  else
  {
    v189 = v43;
    v217 = v42;
    v211 = type metadata accessor for Array(0);
    v50 = sub_100205298((uint64_t)&v225, v43 + 1, v211);
    swift_bridgeObjectRelease();
    v227 = v50;
    v201 = v30;
    v226 = static Array._allocateUninitialized(_:)(0, v30);
    v51 = v200;
    Sequence.enumerated()(v200, v196);
    EnumeratedSequence.makeIterator()(v188);
    while (1)
    {
      v52 = v220;
      EnumeratedSequence.Iterator.next()(v219);
      v53 = *(void (**)(uint64_t *, char *, uint64_t))(v213 + 32);
      v53(v38, v52, v221);
      v54 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48);
      if (v54(v38, 1, TupleTypeMetadata2) == 1)
        break;
      v55 = *v38;
      v56 = v215;
      v57 = *(void (**)(char *, char *, uint64_t))(v214 + 32);
      v58 = v216;
      v57(v215, (char *)v38 + *(int *)(TupleTypeMetadata2 + 48), v216);
      v59 = v195;
      *v195 = 0;
      *((_BYTE *)v59 + 8) = 1;
      v59[2] = v55;
      v57((char *)v59 + *(int *)(v201 + 40), v56, v58);
      result = Array.append(_:)(v59, v48);
      if (__OFADD__(v55, 1))
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v60 = v226;
      v61 = v211;
      type metadata accessor for Array(0);
      swift_bridgeObjectRetain();
      Array._makeMutableAndUnique()();
      v62 = v227;
      sub_100205248(v55 + 1, v227, v61);
      Array._makeMutableAndUnique()();
      v63 = *(_QWORD *)(v62 + 8 * (v55 + 1) + 32);
      result = _swift_isClassOrObjCExistentialType(v48, v48);
      v64 = v63 & 0xFFFFFFFFFFFFF8;
      if ((result & 1) == 0)
        v64 = v63;
      if (!*(_QWORD *)(v64 + 16))
        goto LABEL_50;
      *(_QWORD *)(v63 + 32) = v60;
      swift_bridgeObjectRelease();
      v51 = v200;
    }
    (*(void (**)(char *, char *))(v183 + 8))(v41, v219);
    swift_bridgeObjectRelease();
    v226 = static Array._allocateUninitialized(_:)(0, v201);
    Sequence.enumerated()(v208, v186);
    EnumeratedSequence.makeIterator()(v185);
    v65 = v220;
    EnumeratedSequence.Iterator.next()(v212);
    v66 = (uint64_t *)v202;
    v53((uint64_t *)v202, v65, v221);
    if (v54(v66, 1, TupleTypeMetadata2) != 1)
    {
      v67 = *(void (**)(char *, char *, uint64_t))(v214 + 32);
      v68 = v211;
      do
      {
        v69 = *v66;
        v70 = (char *)v66 + *(int *)(TupleTypeMetadata2 + 48);
        v72 = v215;
        v71 = v216;
        v67(v215, v70, v216);
        v73 = v195;
        *v195 = 1;
        *((_BYTE *)v73 + 8) = 1;
        v73[2] = v69;
        v67((char *)v73 + *(int *)(v201 + 40), v72, v71);
        result = Array.append(_:)(v73, v48);
        v46 = __OFADD__(v69, 1);
        v74 = v69 + 1;
        if (v46)
          goto LABEL_51;
        v75 = v226;
        type metadata accessor for Array(0);
        swift_bridgeObjectRetain();
        Array._makeMutableAndUnique()();
        v76 = v227;
        result = _swift_isClassOrObjCExistentialType(v68, v68);
        v77 = v76 & 0xFFFFFFFFFFFFF8;
        if ((result & 1) == 0)
          v77 = v76;
        if (!*(_QWORD *)(v77 + 16))
          goto LABEL_52;
        Array._makeMutableAndUnique()();
        v78 = *(_QWORD *)(v76 + 32);
        sub_100205248(v74, v78, v48);
        *(_QWORD *)(v78 + 8 * v74 + 32) = v75;
        swift_bridgeObjectRelease();
        v79 = v220;
        EnumeratedSequence.Iterator.next()(v212);
        v66 = (uint64_t *)v202;
        v53((uint64_t *)v202, v79, v221);
        v80 = v54(v66, 1, TupleTypeMetadata2);
        v51 = v200;
      }
      while (v80 != 1);
    }
    (*(void (**)(unint64_t, void (*)(char *)))(v182 + 8))(v210, v212);
    swift_bridgeObjectRelease();
    v81 = v189;
    if (!v189 || !v191)
    {
LABEL_46:
      Array.subscript.getter(v81, v227, v211);
      Array.subscript.getter(v191, v225, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v224;
    }
    v82 = v205;
    result = dispatch thunk of Collection.startIndex.getter(v208);
    v196 = (char *)(v81 - 1);
    if (v81 >= 1 && v191 >= 1)
    {
      v81 = 1;
      v83 = v201;
      v213 = v48;
      while (1)
      {
        dispatch thunk of Collection.startIndex.getter(v51);
        v84 = 0;
        v202 = (char *)(v81 - 1);
        v221 = 40;
        v210 = v81;
        while (1)
        {
          v85 = v48;
          v219 = v84 + 1;
          v86 = v84;
          v87 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v225, v218, v51, v217);
          v88 = v214;
          v89 = v215;
          v90 = *(void (**)(char *))(v214 + 16);
          v91 = v216;
          v90(v215);
          v87(&v225, 0);
          v92 = dispatch thunk of Collection.subscript.read(&v225, v207, v208, v82);
          v93 = v197;
          v212 = v90;
          v90(v197);
          ((void (*)(uint64_t *, _QWORD))v92)(&v225, 0);
          LOBYTE(v92) = dispatch thunk of static Equatable.== infix(_:_:)(v89, v93, v91, v199);
          v94 = *(void (**)(char *, uint64_t))(v88 + 8);
          v94(v93, v91);
          v94(v89, v91);
          v220 = v86;
          if ((v92 & 1) != 0)
          {
            v95 = v86;
            v96 = v211;
            Array.subscript.getter(v95, v227, v211);
            Array.subscript.getter(v202, v225, v85);
            swift_bridgeObjectRelease();
            v97 = v224;
            type metadata accessor for Array(0);
            Array._makeMutableAndUnique()();
            v98 = v227;
            v99 = (unint64_t)v219;
            sub_100205248((unint64_t)v219, v227, v96);
            v100 = (uint64_t *)(v98 + v221);
            Array._makeMutableAndUnique()();
            v101 = *v100;
            v102 = v210;
            sub_100205248(v210, v101, v85);
            *(_QWORD *)(v101 + 8 * v102 + 32) = v97;
            swift_bridgeObjectRelease();
            v103 = v200;
          }
          else
          {
            v104 = v227;
            v105 = v86;
            v106 = v86;
            v107 = v211;
            Array.subscript.getter(v105, v227, v211);
            v108 = v210;
            Array.subscript.getter(v210, v225, v85);
            swift_bridgeObjectRelease();
            Array.subscript.getter(v219, v104, v107);
            v109 = v202;
            Array.subscript.getter(v202, v225, v85);
            swift_bridgeObjectRelease();
            Array.subscript.getter(v106, v104, v107);
            Array.subscript.getter(v109, v225, v85);
            swift_bridgeObjectRelease();
            v110 = swift_bridgeObjectRetain();
            v111 = Array.count.getter(v110, v83);
            swift_bridgeObjectRelease();
            v112 = swift_bridgeObjectRetain();
            v113 = Array.count.getter(v112, v83);
            swift_bridgeObjectRelease();
            v114 = swift_bridgeObjectRetain();
            v115 = Array.count.getter(v114, v83);
            swift_bridgeObjectRelease();
            v116 = v113 >= v111 ? v111 : v113;
            v117 = v115 >= v116 ? v116 : v115;
            v118 = swift_bridgeObjectRetain();
            v119 = Array.count.getter(v118, v83);
            swift_bridgeObjectRelease();
            if (v119 == v117)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v120 = v204;
              v121 = v203;
              v122 = AssociatedTypeWitness;
              (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v203, v218, AssociatedTypeWitness);
              v123 = v200;
              v124 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v225, v121, v200, v217);
              v125 = v108;
              v127 = v215;
              v126 = v216;
              v212(v215);
              v124(&v225, 0);
              (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v122);
              v128 = v195;
              *v195 = 0;
              *((_BYTE *)v128 + 8) = 1;
              v128[2] = v220;
              v129 = v213;
              (*(void (**)(char *, char *, uint64_t))(v214 + 32))((char *)v128 + *(int *)(v83 + 40), v127, v126);
              Array.append(_:)(v128, v129);
              v130 = v224;
              type metadata accessor for Array(0);
              Array._makeMutableAndUnique()();
              v131 = v227;
              v132 = (unint64_t)v219;
              sub_100205248((unint64_t)v219, v227, v107);
              v133 = (uint64_t *)(v131 + v221);
              Array._makeMutableAndUnique()();
              v134 = *v133;
              sub_100205248(v125, v134, v129);
              *(_QWORD *)(v134 + 8 * v125 + 32) = v130;
              v103 = v123;
              v99 = v132;
            }
            else
            {
              v135 = (unint64_t)v219;
              v136 = v220;
              swift_bridgeObjectRelease();
              v137 = swift_bridgeObjectRetain();
              v138 = Array.count.getter(v137, v83);
              swift_bridgeObjectRelease();
              v139 = v138 == v117;
              v140 = v205;
              v141 = v208;
              if (v139)
              {
                swift_bridgeObjectRelease();
                v142 = v193;
                v143 = v192;
                v144 = v194;
                (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v192, v207, v194);
                v145 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v225, v143, v141, v140);
                v147 = v215;
                v146 = v216;
                v212(v215);
                v145(&v225, 0);
                (*(void (**)(char *, uint64_t))(v142 + 8))(v143, v144);
                v148 = v195;
                *v195 = 1;
                *((_BYTE *)v148 + 8) = 1;
                v148[2] = v202;
                (*(void (**)(char *, char *, uint64_t))(v214 + 32))((char *)v148 + *(int *)(v83 + 40), v147, v146);
                v156 = v213;
                Array.append(_:)(v148, v213);
                v157 = v223;
              }
              else
              {
                swift_bridgeObjectRelease();
                v149 = v193;
                v150 = v192;
                v151 = v194;
                (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v192, v207, v194);
                v152 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v225, v150, v141, v140);
                v154 = v215;
                v153 = v216;
                v212(v215);
                v152(&v225, 0);
                (*(void (**)(char *, uint64_t))(v149 + 8))(v150, v151);
                v155 = v195;
                *v195 = 2;
                *((_BYTE *)v155 + 8) = 1;
                v155[2] = v136;
                (*(void (**)(char *, char *, uint64_t))(v214 + 32))((char *)v155 + *(int *)(v83 + 40), v154, v153);
                v156 = v213;
                Array.append(_:)(v155, v213);
                v157 = v222;
              }
              v158 = v211;
              type metadata accessor for Array(0);
              Array._makeMutableAndUnique()();
              v159 = v227;
              v99 = v135;
              sub_100205248(v135, v227, v158);
              v160 = (uint64_t *)(v159 + v221);
              Array._makeMutableAndUnique()();
              v161 = *v160;
              v162 = v210;
              sub_100205248(v210, v161, v156);
              *(_QWORD *)(v161 + 8 * v162 + 32) = v157;
              v103 = v200;
            }
            swift_bridgeObjectRelease();
          }
          v163 = v204;
          v164 = v198;
          v165 = v218;
          v166 = AssociatedTypeWitness;
          (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v198, v218, AssociatedTypeWitness);
          v167 = v203;
          v168 = v103;
          dispatch thunk of Collection.index(_:offsetBy:)(v164, 1, v103, v217);
          v169 = *(void (**)(char *, uint64_t))(v163 + 8);
          v169(v164, v166);
          v169(v165, v166);
          result = (*(uint64_t (**)(char *, char *, uint64_t))(v163 + 32))(v165, v167, v166);
          if (v196 == v220)
            break;
          v84 = v220 + 1;
          v221 += 8;
          v46 = __OFADD__(v99, 1);
          v83 = v201;
          v48 = v213;
          v82 = v205;
          v51 = v168;
          if (v46)
          {
            __break(1u);
            goto LABEL_49;
          }
        }
        v170 = v193;
        v171 = v190;
        v172 = v207;
        v173 = v194;
        (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v190, v207, v194);
        v174 = v192;
        v82 = v205;
        dispatch thunk of Collection.index(_:offsetBy:)(v171, 1, v208, v205);
        v175 = *(void (**)(char *, uint64_t))(v170 + 8);
        v175(v171, v173);
        v169(v218, AssociatedTypeWitness);
        v175(v172, v173);
        v176 = v173;
        v177 = v210;
        (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v172, v174, v176);
        if (v177 == v191)
          break;
        v46 = __OFADD__(v177, 1);
        v81 = v177 + 1;
        v83 = v201;
        v48 = v213;
        v51 = v168;
        if (v46)
        {
          __break(1u);
          goto LABEL_46;
        }
      }
      Array.subscript.getter(v189, v227, v211);
      v179 = v213;
      Array.subscript.getter(v191, v225, v213);
      swift_bridgeObjectRelease();
      v226 = v224;
      swift_bridgeObjectRetain();
      v223 = Array.init()(v201);
      __chkstk_darwin(v223);
      v180 = v208;
      *(&v182 - 6) = v168;
      *(&v182 - 5) = v180;
      *(&v182 - 4) = v217;
      *(&v182 - 3) = v82;
      *(&v182 - 2) = v199;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v179);
      Sequence.reduce<A>(into:_:)(&v225, &v223, sub_100205348, &v182 - 8, v179, v179, WitnessTable);
      swift_bridgeObjectRelease();
      v175(v207, v194);
      swift_bridgeObjectRelease();
      v178 = v225;
      swift_bridgeObjectRelease();
      return v178;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CollectionComparisonOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollectionComparisonOperation);
}

uint64_t sub_100203DF8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;

  *(_QWORD *)a7 = a1;
  *(_BYTE *)(a7 + 8) = a2 & 1;
  *(_QWORD *)(a7 + 16) = a3;
  v9 = a7 + *(int *)(type metadata accessor for CollectionComparisonOperation(0, a5, a6, a4) + 40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v9, a4, a5);
}

uint64_t sub_100203E5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t WitnessTable;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v46 = a4;
  v47 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(a5 + 8));
  v45 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v44 = (char *)&v40 - v14;
  v16 = type metadata accessor for CollectionComparisonOperation(0, AssociatedTypeWitness, a7, v15);
  v17 = __chkstk_darwin(v16);
  v18 = __chkstk_darwin(v17);
  v22 = (char *)&v40 - v19;
  if (*(_BYTE *)(a2 + 8) != 1)
    goto LABEL_5;
  if (*(_QWORD *)a2)
  {
    if (*(_QWORD *)a2 == 1)
    {
      v41 = v20;
      v42 = v21;
      v43 = v7;
      goto LABEL_8;
    }
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v40 - v19, a2, v16);
    v23 = type metadata accessor for Array(0);
    v24 = v22;
    return Array.append(_:)(v24, v23);
  }
  v41 = v20;
  v42 = v21;
  v43 = v7;
LABEL_8:
  v46 = &v40;
  v47 = a1;
  v50 = *a1;
  __chkstk_darwin(v18);
  *(&v40 - 8) = a3;
  *(&v40 - 7) = v26;
  *(&v40 - 6) = a5;
  *(&v40 - 5) = v27;
  *(&v40 - 4) = a7;
  *(&v40 - 3) = v28;
  *((_BYTE *)&v40 - 16) = v29;
  *(&v40 - 1) = a2;
  v30 = type metadata accessor for Array(0);
  swift_bridgeObjectRetain();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v30);
  v32 = v43;
  Collection.firstIndex(where:)(&v48, sub_100205A28, &v40 - 10, v30, WitnessTable);
  swift_bridgeObjectRelease();
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v22, a2, v16);
    v24 = v22;
    v23 = v30;
    return Array.append(_:)(v24, v23);
  }
  v43 = v32;
  v33 = *v47;
  v40 = v48;
  Array.subscript.getter(v48, v33, v16);
  v34 = *((_QWORD *)v22 + 2);
  v46 = *(uint64_t **)(v42 + 8);
  ((void (*)(char *, uint64_t))v46)(v22, v16);
  if (*(_BYTE *)(a2 + 8) == 1 && !*(_QWORD *)a2)
  {
    v35 = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v35 = v34;
    v34 = *(_QWORD *)(a2 + 16);
  }
  v37 = v44;
  v36 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, a2 + *(int *)(v16 + 40), AssociatedTypeWitness);
  v38 = v41;
  *v41 = v35;
  *((_BYTE *)v38 + 8) = 0;
  v38[2] = v34;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)v38 + *(int *)(v16 + 40), v37, AssociatedTypeWitness);
  Array.remove(at:)(v40, v30);
  v39 = v46;
  ((void (*)(char *, uint64_t))v46)(v22, v16);
  (*(void (**)(char *, _QWORD *, uint64_t))(v42 + 16))(v22, v38, v16);
  Array.append(_:)(v22, v30);
  return ((uint64_t (*)(_QWORD *, uint64_t))v39)(v38, v16);
}

BOOL static CollectionComparisonOperationType.__derived_enum_equals(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1)
          return 1;
      }
      else if ((a4 & 1) != 0 && a3 > 1)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

uint64_t sub_100204204(uint64_t *a1, unint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t *, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t *v28;

  v28 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(a7 + 8));
  v14 = type metadata accessor for CollectionComparisonOperation(0, AssociatedTypeWitness, a9, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v27 - v19;
  v21 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
  {
    if (v21)
    {
      if (v21 == 1)
      {
        if ((a3 & 1) == 0 || a2 != 1)
        {
LABEL_16:
          v24 = *(void (**)(char *, uint64_t *, uint64_t))(v15 + 16);
          v24((char *)&v27 - v19, a1, v14);
          v24(v18, v28, v14);
          v23 = 0;
          goto LABEL_17;
        }
      }
      else if ((a3 & 1) == 0 || a2 < 2)
      {
        goto LABEL_16;
      }
    }
    else if ((a3 & 1) == 0 || a2)
    {
      goto LABEL_16;
    }
  }
  else if ((a3 & 1) != 0 || v21 != a2)
  {
    goto LABEL_16;
  }
  v22 = *(void (**)(char *, uint64_t *, uint64_t))(v15 + 16);
  v22((char *)&v27 - v19, a1, v14);
  v22(v18, v28, v14);
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(&v20[*(int *)(v14 + 40)], &v18[*(int *)(v14 + 40)], AssociatedTypeWitness, a9);
LABEL_17:
  v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v18, v14);
  v25(v20, v14);
  return v23 & 1;
}

uint64_t ArtworkImage.Size.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CollectionComparisonOperation.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t CollectionComparisonOperation.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

CFRange (__swiftcall *CollectionComparisonOperation.value.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

BOOL sub_100204424(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  int v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(unsigned __int8 *)(a2 + 8);
      else
        v7 = 0;
      return v7 == 1;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t CollectionComparisonOperationType.description.getter(uint64_t a1, char a2)
{
  Swift::String v2;
  void *object;
  uint64_t v5;

  if ((a2 & 1) != 0)
  {
    v5 = 0x747265736E69;
    if (a1 != 1)
      v5 = 0x7574697473627573;
    if (a1)
      return v5;
    else
      return 0x6574656C6564;
  }
  else
  {
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v2._object;
    String.append(_:)(v2);
    swift_bridgeObjectRelease(object);
    return 0x6F72662065766F6DLL;
  }
}

uint64_t sub_100204554()
{
  uint64_t v0;

  return CollectionComparisonOperationType.description.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void UICollectionView.performBatchUpdates<A>(using:modelUpdateHandler:forSectionAt:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(), uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  char isEscapingClosureAtFileLocation;
  void **v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;

  v17 = (_QWORD *)swift_allocObject(&unk_100457630, 72, 7);
  v17[2] = a7;
  v17[3] = a8;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a1;
  v17[7] = a4;
  v17[8] = v8;
  v18 = swift_allocObject(&unk_100457658, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_10020536C;
  *(_QWORD *)(v18 + 24) = v17;
  v30 = sub_100009BB0;
  v31 = v18;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_100009BD0;
  v29 = &unk_100457670;
  v19 = _Block_copy(&v26);
  v20 = v31;
  swift_retain(a3);
  v21 = v8;
  swift_retain(v18);
  swift_bridgeObjectRetain();
  v22 = swift_release(v20).n128_u64[0];
  if (a5)
  {
    v30 = a5;
    v31 = a6;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_100204BB4;
    v29 = &unk_100457698;
    a5 = (uint64_t (*)())_Block_copy(&v26);
    v23 = v31;
    swift_retain(a6);
    v22 = swift_release(v23).n128_u64[0];
  }
  objc_msgSend(v21, "performBatchUpdates:completion:", v19, a5, *(double *)&v22);
  _Block_release(a5);
  _Block_release(v19);
  v24 = swift_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v18, "", 137, 132, 34, 1, v24);
  swift_release(v18);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_10020472C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  Class isa;
  char *v31;
  uint64_t v32;
  NSIndexPath v33;
  uint64_t v34;
  Swift::Bool IsNativeType;
  void (*v36)(uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  id v62;
  char *v63;
  uint64_t v64;

  v61 = a1;
  v62 = a5;
  v60 = a2;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63 = (char *)&v54 - v15;
  v17 = type metadata accessor for CollectionComparisonOperation(0, a6, a7, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin(v17);
  v21 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v54 - v23;
  v61(v22);
  v25 = swift_bridgeObjectRetain();
  if (!Array.endIndex.getter(v25, v17))
    return swift_bridgeObjectRelease();
  v55 = v19;
  v58 = v11;
  v61 = a4;
  v26 = 0;
  v56 = xmmword_100384A80;
  v27 = v12;
  v59 = v24;
  v60 = a3;
  while (1)
  {
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v26, IsNativeType, a3, v17);
    if (IsNativeType)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v24, a3+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v26, v17);
      v36 = v61;
      v37 = v63;
      v38 = v26 + 1;
      if (__OFADD__(v26, 1))
        goto LABEL_16;
      goto LABEL_7;
    }
    result = _ArrayBuffer._getElementSlowPath(_:)(v26, a3, v17);
    v37 = v63;
    if (v55 != 8)
      break;
    v53 = result;
    v64 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v18 + 16))(v24, &v64, v17);
    swift_unknownObjectRelease(v53);
    v36 = v61;
    v38 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_16:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v24, v17);
    IndexPath.init(row:section:)(*((_QWORD *)v21 + 2), v36);
    v39 = *(_QWORD *)v21;
    if (v21[8] == 1)
    {
      if (v39)
      {
        if (v39 == 1)
        {
          v40 = sub_100005574(&qword_100497690);
          v41 = *(unsigned __int8 *)(v27 + 80);
          v42 = (v41 + 32) & ~v41;
          v43 = swift_allocObject(v40, v42 + *(_QWORD *)(v27 + 72), v41 | 7);
          v29 = v27;
          *(_OWORD *)(v43 + 16) = v56;
          v32 = v58;
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v43 + v42, v37, v58);
          v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v62, "insertItemsAtIndexPaths:", v33.super.isa);
        }
        else
        {
          v48 = sub_100005574(&qword_100497690);
          v49 = *(unsigned __int8 *)(v27 + 80);
          v50 = (v49 + 32) & ~v49;
          v51 = swift_allocObject(v48, v50 + *(_QWORD *)(v27 + 72), v49 | 7);
          v29 = v27;
          *(_OWORD *)(v51 + 16) = v56;
          v32 = v58;
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v51 + v50, v37, v58);
          v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v62, "reloadItemsAtIndexPaths:", v33.super.isa);
        }
      }
      else
      {
        v44 = sub_100005574(&qword_100497690);
        v45 = *(unsigned __int8 *)(v27 + 80);
        v46 = (v45 + 32) & ~v45;
        v47 = swift_allocObject(v44, v46 + *(_QWORD *)(v27 + 72), v45 | 7);
        v29 = v27;
        *(_OWORD *)(v47 + 16) = v56;
        v32 = v58;
        (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v47 + v46, v37, v58);
        v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v62, "deleteItemsAtIndexPaths:", v33.super.isa);
      }
    }
    else
    {
      v28 = v57;
      IndexPath.init(row:section:)(v39, v36);
      v29 = v27;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v31 = v28;
      v32 = v58;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v58);
      v33.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v62, "moveItemAtIndexPath:toIndexPath:", isa, v33.super.isa);

    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v32);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    a3 = v60;
    v34 = Array.endIndex.getter(v60, v17);
    ++v26;
    v27 = v29;
    v24 = v59;
    if (v38 == v34)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

double sub_100204BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  double result;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void UITableView.performBatchUpdates<A>(using:modelUpdateHandler:forSectionAt:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(), uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v8;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  char isEscapingClosureAtFileLocation;
  void **v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;

  v17 = (_QWORD *)swift_allocObject(&unk_1004576D0, 72, 7);
  v17[2] = a7;
  v17[3] = a8;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a1;
  v17[7] = a4;
  v17[8] = v8;
  v18 = swift_allocObject(&unk_1004576F8, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_1002053D8;
  *(_QWORD *)(v18 + 24) = v17;
  v30 = sub_10000AD24;
  v31 = v18;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  v28 = sub_100009BD0;
  v29 = &unk_100457710;
  v19 = _Block_copy(&v26);
  v20 = v31;
  swift_retain(a3);
  v21 = v8;
  swift_retain(v18);
  swift_bridgeObjectRetain();
  v22 = swift_release(v20).n128_u64[0];
  if (a5)
  {
    v30 = a5;
    v31 = a6;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    v28 = sub_100204BB4;
    v29 = &unk_100457738;
    a5 = (uint64_t (*)())_Block_copy(&v26);
    v23 = v31;
    swift_retain(a6);
    v22 = swift_release(v23).n128_u64[0];
  }
  objc_msgSend(v21, "performBatchUpdates:completion:", v19, a5, *(double *)&v22);
  _Block_release(a5);
  _Block_release(v19);
  v24 = swift_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v18, "", 137, 157, 34, 1, v24);
  swift_release(v18);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

uint64_t sub_100204DBC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void (*a4)(uint64_t), void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  Class isa;
  char *v31;
  uint64_t v32;
  NSIndexPath v33;
  uint64_t v34;
  Swift::Bool IsNativeType;
  void (*v36)(uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  id v62;
  char *v63;
  uint64_t v64;

  v61 = a1;
  v62 = a5;
  v60 = a2;
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v57 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63 = (char *)&v54 - v15;
  v17 = type metadata accessor for CollectionComparisonOperation(0, a6, a7, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = __chkstk_darwin(v17);
  v21 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v54 - v23;
  v61(v22);
  v25 = swift_bridgeObjectRetain();
  if (!Array.endIndex.getter(v25, v17))
    return swift_bridgeObjectRelease();
  v55 = v19;
  v58 = v11;
  v61 = a4;
  v26 = 0;
  v56 = xmmword_100384A80;
  v27 = v12;
  v59 = v24;
  v60 = a3;
  while (1)
  {
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v26, IsNativeType, a3, v17);
    if (IsNativeType)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v24, a3+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v26, v17);
      v36 = v61;
      v37 = v63;
      v38 = v26 + 1;
      if (__OFADD__(v26, 1))
        goto LABEL_16;
      goto LABEL_7;
    }
    result = _ArrayBuffer._getElementSlowPath(_:)(v26, a3, v17);
    v37 = v63;
    if (v55 != 8)
      break;
    v53 = result;
    v64 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v18 + 16))(v24, &v64, v17);
    swift_unknownObjectRelease(v53);
    v36 = v61;
    v38 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_16:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v24, v17);
    IndexPath.init(row:section:)(*((_QWORD *)v21 + 2), v36);
    v39 = *(_QWORD *)v21;
    if (v21[8] == 1)
    {
      if (v39)
      {
        if (v39 == 1)
        {
          v40 = sub_100005574(&qword_100497690);
          v41 = *(unsigned __int8 *)(v27 + 80);
          v42 = (v41 + 32) & ~v41;
          v43 = swift_allocObject(v40, v42 + *(_QWORD *)(v27 + 72), v41 | 7);
          v29 = v27;
          *(_OWORD *)(v43 + 16) = v56;
          v32 = v58;
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v43 + v42, v37, v58);
          v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v62, "insertRowsAtIndexPaths:withRowAnimation:", v33.super.isa, 100);
        }
        else
        {
          v48 = sub_100005574(&qword_100497690);
          v49 = *(unsigned __int8 *)(v27 + 80);
          v50 = (v49 + 32) & ~v49;
          v51 = swift_allocObject(v48, v50 + *(_QWORD *)(v27 + 72), v49 | 7);
          v29 = v27;
          *(_OWORD *)(v51 + 16) = v56;
          v32 = v58;
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v51 + v50, v37, v58);
          v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          objc_msgSend(v62, "reloadRowsAtIndexPaths:withRowAnimation:", v33.super.isa, 100);
        }
      }
      else
      {
        v44 = sub_100005574(&qword_100497690);
        v45 = *(unsigned __int8 *)(v27 + 80);
        v46 = (v45 + 32) & ~v45;
        v47 = swift_allocObject(v44, v46 + *(_QWORD *)(v27 + 72), v45 | 7);
        v29 = v27;
        *(_OWORD *)(v47 + 16) = v56;
        v32 = v58;
        (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v47 + v46, v37, v58);
        v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v62, "deleteRowsAtIndexPaths:withRowAnimation:", v33.super.isa, 100);
      }
    }
    else
    {
      v28 = v57;
      IndexPath.init(row:section:)(v39, v36);
      v29 = v27;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v31 = v28;
      v32 = v58;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v58);
      v33.super.isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v62, "moveRowAtIndexPath:toIndexPath:", isa, v33.super.isa);

    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v37, v32);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    a3 = v60;
    v34 = Array.endIndex.getter(v60, v17);
    ++v26;
    v27 = v29;
    v24 = v59;
    if (v38 == v34)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100205248(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = _swift_isClassOrObjCExistentialType(a3, a3);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v6 = a2;
  if (*(_QWORD *)(v6 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_100205298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = static Array._allocateUninitialized(_:)(a2, a3);
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    if (a2)
    {
      v9 = v7;
      v10 = *(_QWORD *)(a3 - 8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      v12 = a2 - 1;
      if (v12)
      {
        v13 = *(_QWORD *)(v10 + 72);
        v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    type metadata accessor for Array(0);
    return v8;
  }
  return result;
}

uint64_t sub_100205348(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100203E5C(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_10020536C()
{
  return sub_1002053E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10020472C);
}

uint64_t sub_100205378()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100205388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100205398(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1002053A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002053D8()
{
  return sub_1002053E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100204DBC);
}

uint64_t sub_1002053E4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[7], v1[8], v1[2], v1[3]);
}

uint64_t sub_1002053FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10020540C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

_QWORD *sub_100205490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 24) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *(_QWORD *)a2;
    *v3 = *(_QWORD *)a2;
    v3 = (_QWORD *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain(v8);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((a1 & 0xFFFFFFFFFFFFFFF8) + v5 + 24) & ~v5, ((a2 & 0xFFFFFFFFFFFFFFF8) + v5 + 24) & ~v5);
  }
  return v3;
}

uint64_t sub_10020554C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_100205570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1002055D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 24))((*(unsigned __int8 *)(v5 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_100205640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1002056A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((*(unsigned __int8 *)(v4 + 80) + 24 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 24 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100205710(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 24) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((a1 & 0xFFFFFFFFFFFFFFF8) + v6 + 24) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1002057D0 + 4 * byte_100393960[(v8 - 1)]))();
}

void sub_100205834(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 24) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = &dword_100000004;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 24) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t initializeBufferWithCopyOfBuffer for CollectionComparisonOperationType(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CollectionComparisonOperationType()
{
  return &type metadata for CollectionComparisonOperationType;
}

uint64_t sub_100205A28(uint64_t *a1)
{
  uint64_t v1;

  return sub_100204204(a1, *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64), *(uint64_t **)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48)) & 1;
}

uint64_t static Task<>.sleep(for:)(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch(sub_100205A90, 0, 0);
}

void sub_100205A90()
{
  uint64_t v0;
  double v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (unint64_t)v1;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    *(_QWORD *)(v0 + 24) = v3;
    *v3 = v0;
    v3[1] = sub_10001ACC0;
    static Task<>.sleep(nanoseconds:)(v2);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t static Task<>.delayed(by:priority:task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v10 = sub_100005574(&qword_1004976A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100205C00(a1, (uint64_t)v12);
  v13 = swift_allocObject(&unk_100457878, 64, 7);
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = a4;
  *(double *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = a2;
  *(_QWORD *)(v13 + 56) = a3;
  swift_retain(a3);
  return sub_100205E8C((uint64_t)v12, (uint64_t)&unk_1004976B0, v13, a4);
}

uint64_t sub_100205C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004976A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100205C48(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = a6;
  *(double *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch(sub_100205C68, 0, 0);
}

void sub_100205C68()
{
  uint64_t v0;
  double v1;
  unint64_t v2;
  _QWORD *v3;

  v1 = *(double *)(v0 + 24) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (unint64_t)v1;
    v3 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep(nanoseconds:)[1]);
    *(_QWORD *)(v0 + 48) = v3;
    *v3 = v0;
    v3[1] = sub_100205D04;
    static Task<>.sleep(nanoseconds:)(v2);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_100205D04()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD);

  v2 = (_QWORD *)*v1;
  v3 = *(_QWORD *)(*v1 + 48);
  v4 = *v1;
  swift_task_dealloc(v3);
  if (v0)
    return (*(uint64_t (**)(void))(v4 + 8))();
  v6 = (int *)v2[4];
  v8 = (uint64_t (*)(_QWORD))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v2[7] = v7;
  *v7 = v4;
  v7[1] = sub_100205DA0;
  return v8(v2[2]);
}

uint64_t sub_100205DA0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100205DE8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100205E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 40);
  v5 = swift_task_alloc(dword_1004976AC);
  v6 = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_10000EA88;
  *(_OWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_100205C68, 0, 0);
}

uint64_t sub_100205E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned __int8 v19;
  _QWORD v21[4];

  v8 = type metadata accessor for TaskPriority(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_100206070(a1);
    v11 = 7168;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
    {
LABEL_6:
      v18 = 0;
      return swift_task_create(v11, v18, a4, a2, a3);
    }
  }
  else
  {
    v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    v11 = v19 | 0x1C00;
    v12 = *(_QWORD *)(a3 + 16);
    if (!v12)
      goto LABEL_6;
  }
  v13 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v12);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
  v17 = v16;
  swift_unknownObjectRelease(v12);
  if (!(v17 | v15))
    goto LABEL_6;
  v21[0] = 0;
  v21[1] = 0;
  v18 = v21;
  v21[2] = v15;
  v21[3] = v17;
  return swift_task_create(v11, v18, a4, a2, a3);
}

uint64_t static Task<>.userFeedbackDelayed(task:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100005574(&qword_1004976A0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v7);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v11 = static Task<>.delayed(by:priority:task:)((uint64_t)v9, a1, a2, a3, 2.0);
  sub_100206070((uint64_t)v9);
  return v11;
}

uint64_t sub_100206070(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_1004976A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id CASpringAnimation.springParameters.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;

  objc_msgSend(v0, "mass");
  v2 = v1;
  objc_msgSend(v0, "stiffness");
  v4 = v3;
  objc_msgSend(v0, "damping");
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v2, v4, v5, 0.0, 0.0);
}

void CASpringAnimation.springParameters.setter(void *a1)
{
  void *v1;

  objc_msgSend(a1, "mass");
  objc_msgSend(v1, "setMass:");
  objc_msgSend(a1, "stiffness");
  objc_msgSend(v1, "setStiffness:");
  objc_msgSend(a1, "damping");
  objc_msgSend(v1, "setDamping:");
  objc_msgSend(v1, "setInitialVelocity:", 0.0);

}

void (*CASpringAnimation.springParameters.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  a1[1] = v1;
  objc_msgSend(v1, "mass");
  v4 = v3;
  objc_msgSend(v1, "stiffness");
  v6 = v5;
  objc_msgSend(v1, "damping");
  *a1 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v4, v6, v7, 0.0, 0.0);
  return sub_10020626C;
}

void sub_10020626C(uint64_t a1, char a2)
{
  id v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(id *)a1;
  v3 = *(void **)(a1 + 8);
  v5 = *(id *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2;
    objc_msgSend(v4, "mass");
    objc_msgSend(v3, "setMass:");
    objc_msgSend(v4, "stiffness");
    objc_msgSend(v3, "setStiffness:");
    objc_msgSend(v4, "damping");
    objc_msgSend(v3, "setDamping:");
    objc_msgSend(v3, "setInitialVelocity:", 0.0);

  }
  else
  {
    objc_msgSend(v2, "mass");
    objc_msgSend(v3, "setMass:");
    objc_msgSend(v5, "stiffness");
    objc_msgSend(v3, "setStiffness:");
    objc_msgSend(v5, "damping");
    objc_msgSend(v3, "setDamping:");
    objc_msgSend(v3, "setInitialVelocity:", 0.0);
  }

}

void static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7)
{
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  objc_msgSend(a1, "settlingDuration");
  v15 = v14;
  objc_msgSend(a1, "mass");
  v17 = v16;
  objc_msgSend(a1, "stiffness");
  v19 = v18;
  objc_msgSend(a1, "damping");
  v21 = v20;
  v29 = a3;
  v30 = a4;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_1000BED80;
  v28 = &unk_100457890;
  v22 = _Block_copy(&v25);
  v23 = v30;
  swift_retain(a4);
  swift_release(v23);
  if (a5)
  {
    v29 = a5;
    v30 = a6;
    v25 = _NSConcreteStackBlock;
    v26 = 1107296256;
    v27 = sub_100204BB4;
    v28 = &unk_1004578B8;
    a5 = _Block_copy(&v25);
    v24 = v30;
    swift_retain(a6);
    swift_release(v24);
  }
  objc_msgSend((id)objc_opt_self(UIView), "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", a2, v22, a5, v15, a7, v17, v19, v21, 0.0);
  _Block_release(a5);
  _Block_release(v22);
}

uint64_t sub_100206528(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100206538(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8)
{
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void **v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;

  v16 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v16, "begin");
  objc_msgSend(v16, "setAnimationTimingFunction:", a1);
  v25 = a3;
  v26 = a4;
  v21 = _NSConcreteStackBlock;
  v22 = 1107296256;
  v23 = sub_1000BED80;
  v24 = &unk_1004578E0;
  v17 = _Block_copy(&v21);
  v18 = v26;
  swift_retain(a4);
  swift_release(v18);
  if (a5)
  {
    v25 = a5;
    v26 = a6;
    v21 = _NSConcreteStackBlock;
    v22 = 1107296256;
    v23 = sub_100204BB4;
    v24 = &unk_100457908;
    a5 = _Block_copy(&v21);
    v19 = v26;
    swift_retain(a6);
    swift_release(v19);
  }
  objc_msgSend((id)objc_opt_self(UIView), "animateWithDuration:delay:options:animations:completion:", a2, v17, a5, a7, a8);
  _Block_release(a5);
  _Block_release(v17);
  return objc_msgSend(v16, "commit");
}

void sub_1002066B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  CFTimeInterval v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating))
  {
    objc_msgSend(a1, "duration");
    v2 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration;
    *(_QWORD *)v2 = v3;
    *(_BYTE *)(v2 + 8) = 0;
    v4 = CACurrentMediaTime();
    v5 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime;
    *(CFTimeInterval *)v5 = v4;
    *(_BYTE *)(v5 + 8) = 0;
    v6 = objc_msgSend((id)objc_opt_self(CADisplayLink), "displayLinkWithTarget:selector:", v1, "displayLinkFiredWithDisplayLink:");
    v7 = OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink;
    v8 = *(void **)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink) = v6;

    v9 = *(void **)(v1 + v7);
    if (v9)
    {
      v10 = (void *)objc_opt_self(NSRunLoop);
      v11 = v9;
      v12 = objc_msgSend(v10, "currentRunLoop");
      objc_msgSend(v11, "addToRunLoop:forMode:", v12, NSDefaultRunLoopMode);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100206888(void *a1)
{
  uint64_t v1;
  id result;
  double v3;
  double *v4;
  void (*v5)(uint64_t, double);
  double *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;

  result = objc_msgSend(a1, "timestamp");
  v4 = (double *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime + 8) & 1) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = *(void (**)(uint64_t, double))(v1
                                              + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
  if (v5)
  {
    v6 = (double *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration);
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration + 8) & 1) == 0)
    {
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating + 8);
      v8 = (v3 - *v4) / *v6;
      v9 = swift_retain(v7);
      v5(v9, v8);
      return (id)sub_10003A5C8((uint64_t)v5, v7);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t CAAnimation.progress.getter()
{
  return sub_100206CB0(&OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating, (void (*)(_QWORD, _QWORD))sub_100208034);
}

uint64_t type metadata accessor for CAAnimationCompletionHandler()
{
  return objc_opt_self(_TtC14MusicUtilities28CAAnimationCompletionHandler);
}

id CAAnimation.progress.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id result;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  objc_super v27;

  v3 = v2;
  result = objc_msgSend(v3, "delegate");
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for CAAnimationCompletionHandler();
    v9 = swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      v12 = v10[1];
      *v10 = a1;
      v10[1] = a2;
      sub_10003A5C8(v11, v12);
      return (id)swift_unknownObjectRelease(v7);
    }
    result = (id)swift_unknownObjectRelease(v7);
  }
  if (a1)
  {
    v13 = (objc_class *)type metadata accessor for CAAnimationCompletionHandler();
    v14 = (char *)objc_allocWithZone(v13);
    v15 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
    v16 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    v17 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v18 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration];
    *(_QWORD *)v18 = 0;
    v18[8] = 1;
    *(_QWORD *)&v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink] = 0;
    v27.receiver = v14;
    v27.super_class = v13;
    swift_retain_n(a2, 2);
    v19 = (char *)objc_msgSendSuper2(&v27, "init");
    v20 = (uint64_t *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating + 8];
    *v20 = a1;
    v20[1] = a2;
    sub_10003A5C8(v21, v22);
    v23 = &v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    v24 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    v25 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion + 8];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    sub_10003A5C8(v24, v25);
    v26 = v19;
    objc_msgSend(v3, "setDelegate:", v26, v27.receiver, v27.super_class);
    sub_10003A5C8(a1, a2);

    return (id)sub_10003A5C8(a1, a2);
  }
  return result;
}

uint64_t (*CAAnimation.progress.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "delegate");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for CAAnimationCompletionHandler();
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating);
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating + 8);
      sub_10003A434(v7, v8);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  *a1 = v7;
  a1[1] = v8;
  return sub_100206C80;
}

uint64_t sub_100206C80(uint64_t *a1, char a2)
{
  return sub_100206FB0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))CAAnimation.progress.setter, (void (*)(uint64_t, uint64_t))sub_100208034, sub_100208030);
}

uint64_t CAAnimation.completion.getter()
{
  return sub_100206CB0(&OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion, (void (*)(_QWORD, _QWORD))sub_10003A434);
}

uint64_t sub_100206CB0(_QWORD *a1, void (*a2)(_QWORD, _QWORD))
{
  void *v2;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  v5 = objc_msgSend(v2, "delegate");
  if (!v5)
    return 0;
  v6 = v5;
  v7 = type metadata accessor for CAAnimationCompletionHandler();
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8)
  {
    v9 = (_QWORD *)(v8 + *a1);
    v10 = *v9;
    a2(*v9, v9[1]);
  }
  else
  {
    v10 = 0;
  }
  swift_unknownObjectRelease(v6);
  return v10;
}

id CAAnimation.completion.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id result;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  objc_super v27;

  v3 = v2;
  result = objc_msgSend(v3, "delegate");
  if (result)
  {
    v7 = result;
    v8 = type metadata accessor for CAAnimationCompletionHandler();
    v9 = swift_dynamicCastClass(v7, v8);
    if (v9)
    {
      v10 = (uint64_t *)(v9 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      v12 = v10[1];
      *v10 = a1;
      v10[1] = a2;
      sub_10003A5C8(v11, v12);
      return (id)swift_unknownObjectRelease(v7);
    }
    result = (id)swift_unknownObjectRelease(v7);
  }
  if (a1)
  {
    v13 = (objc_class *)type metadata accessor for CAAnimationCompletionHandler();
    v14 = (char *)objc_allocWithZone(v13);
    v15 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
    v16 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    *(_QWORD *)v16 = 0;
    *((_QWORD *)v16 + 1) = 0;
    v17 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime];
    *(_QWORD *)v17 = 0;
    v17[8] = 1;
    v18 = &v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration];
    *(_QWORD *)v18 = 0;
    v18[8] = 1;
    *(_QWORD *)&v14[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink] = 0;
    v27.receiver = v14;
    v27.super_class = v13;
    swift_retain_n(a2, 2);
    v19 = (char *)objc_msgSendSuper2(&v27, "init");
    v20 = &v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    v21 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating];
    v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animating + 8];
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    sub_10003A5C8(v21, v22);
    v23 = (uint64_t *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    v24 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion];
    v25 = *(_QWORD *)&v19[OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion + 8];
    *v23 = a1;
    v23[1] = a2;
    sub_10003A5C8(v24, v25);
    v26 = v19;
    objc_msgSend(v3, "setDelegate:", v26, v27.receiver, v27.super_class);
    sub_10003A5C8(a1, a2);

    return (id)sub_10003A5C8(a1, a2);
  }
  return result;
}

uint64_t (*CAAnimation.completion.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(v1, "delegate");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for CAAnimationCompletionHandler();
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion + 8);
      sub_10003A434(v7, v8);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  *a1 = v7;
  a1[1] = v8;
  return sub_100206F94;
}

uint64_t sub_100206F94(uint64_t *a1, char a2)
{
  return sub_100206FB0(a1, a2, (uint64_t (*)(uint64_t, uint64_t))CAAnimation.completion.setter, (void (*)(uint64_t, uint64_t))sub_10003A434, sub_10003A5C8);
}

uint64_t sub_100206FB0(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  if ((a2 & 1) == 0)
    return a3(*a1, v7);
  a4(*a1, v7);
  a3(v6, v7);
  return a5(v6, v7);
}

uint64_t CALayer.addAsyncAnimation(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = v5;
  v4[7] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[8] = v6;
  v4[9] = v7;
  return swift_task_switch(sub_1002070A4, v6, v7);
}

{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_100005574(&qword_1004976F0);
  __chkstk_darwin(v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = a1;
  v14 = v3;
  v15 = a2;
  v16 = a3;
  (*(void (**)(_BYTE *, _QWORD))(v10 + 104))(v9, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:));
  return AsyncStream.init(_:bufferingPolicy:_:)(&type metadata for CALayer.AnimationStatus, v9, sub_100207C48, v12, &type metadata for CALayer.AnimationStatus);
}

uint64_t sub_1002070A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = v1[5];
  v4 = v1[3];
  v3 = v1[4];
  v5 = v1[2];
  v6 = static MainActor.shared.getter(a1);
  v1[10] = v6;
  v7 = (_QWORD *)swift_task_alloc(48);
  v1[11] = v7;
  v7[2] = v5;
  v7[3] = v2;
  v7[4] = v4;
  v7[5] = v3;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[12] = v8;
  *v8 = v1;
  v8[1] = sub_100207178;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 13, v6, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x80000001003B6DD0, sub_10020769C, v7, &type metadata for Bool);
}

uint64_t sub_100207178()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 88);
  v3 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002071E0, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1002071E0()
{
  uint64_t v0;
  __n128 v1;

  v1 = swift_release(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(unsigned __int8 *)(v0 + 104), v1);
}

id sub_100207214(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSString v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  uint64_t v21;
  void *v22;
  id v23;
  id result;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  uint64_t v50;

  v49 = a3;
  v8 = sub_100005574(&qword_100497798);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v11 = *(unsigned __int8 *)(v9 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_100457A20, v12 + v10, v11 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  CAAnimation.completion.setter((uint64_t)sub_100207FC8, v13);
  v14 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v14, "begin");
  objc_msgSend(v14, "setDisableActions:", 1);
  if (a5)
    v15 = String._bridgeToObjectiveC()();
  else
    v15 = 0;
  objc_msgSend(v49, "addAnimation:forKey:", a2, v15);

  objc_opt_self(CABasicAnimation);
  v16 = swift_dynamicCastObjCClass(a2);
  if (v16)
  {
    if (a5)
    {
      v17 = (void *)v16;
      v18 = a2;
      v19 = objc_msgSend(v17, "toValue");
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v49, "setValue:forKey:", v19, v20);

      swift_unknownObjectRelease(v19);
    }
    return objc_msgSend(v14, "commit");
  }
  objc_opt_self(CAAnimationGroup);
  v21 = swift_dynamicCastObjCClass(a2);
  if (!v21)
    return objc_msgSend(v14, "commit");
  v22 = (void *)v21;
  v23 = a2;
  result = objc_msgSend(v22, "animations");
  v25 = (uint64_t)_swiftEmptyArrayStorage;
  if (result)
  {
    v26 = result;
    v27 = sub_100207F80();
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

    v50 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v28 >> 62)
    {
      if (v28 < 0)
        v38 = v28;
      else
        v38 = v28 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      result = (id)_CocoaArrayWrapper.endIndex.getter(v38);
      v29 = (uint64_t)result;
      if (result)
        goto LABEL_11;
    }
    else
    {
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain();
      if (v29)
      {
LABEL_11:
        if (v29 < 1)
          goto LABEL_47;
        for (i = 0; i != v29; ++i)
        {
          if ((v28 & 0xC000000000000001) != 0)
            v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v28);
          else
            v31 = *(id *)(v28 + 8 * i + 32);
          v32 = v31;
          objc_opt_self(CABasicAnimation);
          v33 = swift_dynamicCastObjCClass(v32);
          if (v33)
          {
            v34 = v33;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
            v36 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v35 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v36 >= v35 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
            v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
            specialized Array._endMutation()(v37);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease();
        v25 = v50;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    v25 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_28:
    result = (id)swift_bridgeObjectRelease();
  }
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v46 = v25;
    else
      v46 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v39 = _CocoaArrayWrapper.endIndex.getter(v46);
    result = (id)swift_bridgeObjectRelease();
    if (v39)
      goto LABEL_31;
    goto LABEL_44;
  }
  v39 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v39)
  {
LABEL_44:

    swift_bridgeObjectRelease();
    return objc_msgSend(v14, "commit");
  }
LABEL_31:
  v47 = v23;
  v48 = v14;
  if (v39 >= 1)
  {
    for (j = 0; j != v39; ++j)
    {
      if ((v25 & 0xC000000000000001) != 0)
        v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v25);
      else
        v41 = *(id *)(v25 + 8 * j + 32);
      v42 = v41;
      v43 = objc_msgSend(v41, "keyPath", v47);
      if (v43)
      {
        v44 = v43;
        v45 = objc_msgSend(v42, "toValue");
        objc_msgSend(v49, "setValue:forKey:", v45, v44);

        swift_unknownObjectRelease(v45);
        v42 = v44;
      }

    }
    swift_bridgeObjectRelease();
    v14 = v48;
    return objc_msgSend(v14, "commit");
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

id sub_10020769C(uint64_t a1)
{
  uint64_t v1;

  return sub_100207214(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

id sub_100207768(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  NSString v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  NSString v27;
  uint64_t v28;
  void *v29;
  id v30;
  id result;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t j;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v57;

  v54 = a4;
  v55 = a5;
  v56 = a3;
  v7 = sub_100005574(&qword_100497780);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, a1, v7);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = v13 + v9;
  v15 = v12 | 7;
  v16 = swift_allocObject(&unk_1004579D0, v14, v12 | 7);
  v17 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v17(v16 + v13, v10, v7);
  CAAnimation.progress.setter((uint64_t)sub_100207EF4, v16);
  v11(v10, a1, v7);
  v18 = swift_allocObject(&unk_1004579F8, v14, v15);
  v19 = v7;
  v20 = v55;
  v17(v18 + v13, v10, v19);
  CAAnimation.completion.setter((uint64_t)sub_100207F40, v18);
  v21 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v21, "begin", v54);
  objc_msgSend(v21, "setDisableActions:", 1);
  if (v20)
    v22 = String._bridgeToObjectiveC()();
  else
    v22 = 0;
  objc_msgSend(v56, "addAnimation:forKey:", a2, v22);

  objc_opt_self(CABasicAnimation);
  v23 = swift_dynamicCastObjCClass(a2);
  if (v23)
  {
    if (v20)
    {
      v24 = (void *)v23;
      v25 = a2;
      v26 = objc_msgSend(v24, "toValue");
      v27 = String._bridgeToObjectiveC()();
      objc_msgSend(v56, "setValue:forKey:", v26, v27);

      swift_unknownObjectRelease(v26);
    }
    return objc_msgSend(v21, "commit");
  }
  objc_opt_self(CAAnimationGroup);
  v28 = swift_dynamicCastObjCClass(a2);
  if (!v28)
    return objc_msgSend(v21, "commit");
  v29 = (void *)v28;
  v30 = a2;
  result = objc_msgSend(v29, "animations");
  v32 = (uint64_t)_swiftEmptyArrayStorage;
  if (result)
  {
    v33 = result;
    v34 = sub_100207F80();
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

    v57 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v35 >> 62)
    {
      if (v35 < 0)
        v45 = v35;
      else
        v45 = v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      result = (id)_CocoaArrayWrapper.endIndex.getter(v45);
      v36 = (uint64_t)result;
      if (result)
        goto LABEL_11;
    }
    else
    {
      v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain();
      if (v36)
      {
LABEL_11:
        if (v36 < 1)
          goto LABEL_47;
        for (i = 0; i != v36; ++i)
        {
          if ((v35 & 0xC000000000000001) != 0)
            v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v35);
          else
            v38 = *(id *)(v35 + 8 * i + 32);
          v39 = v38;
          objc_opt_self(CABasicAnimation);
          v40 = swift_dynamicCastObjCClass(v39);
          if (v40)
          {
            v41 = v40;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
            v43 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v42 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v43 >= v42 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
            v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
            specialized Array._endMutation()(v44);
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease();
        v32 = v57;
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease();
    v32 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_28:
    result = (id)swift_bridgeObjectRelease();
  }
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0)
      v53 = v32;
    else
      v53 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v46 = _CocoaArrayWrapper.endIndex.getter(v53);
    result = (id)swift_bridgeObjectRelease();
    if (v46)
      goto LABEL_31;
    goto LABEL_44;
  }
  v46 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v46)
  {
LABEL_44:

    swift_bridgeObjectRelease();
    return objc_msgSend(v21, "commit");
  }
LABEL_31:
  v54 = v30;
  v55 = v21;
  if (v46 >= 1)
  {
    for (j = 0; j != v46; ++j)
    {
      if ((v32 & 0xC000000000000001) != 0)
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v32);
      else
        v48 = *(id *)(v32 + 8 * j + 32);
      v49 = v48;
      v50 = objc_msgSend(v48, "keyPath", v54);
      if (v50)
      {
        v51 = v50;
        v52 = objc_msgSend(v49, "toValue");
        objc_msgSend(v56, "setValue:forKey:", v52, v51);

        swift_unknownObjectRelease(v52);
        v49 = v51;
      }

    }
    swift_bridgeObjectRelease();
    v21 = v55;
    return objc_msgSend(v21, "commit");
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

id sub_100207C48(uint64_t a1)
{
  void **v1;

  return sub_100207768(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100207C54(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v8;
  char v9;

  v2 = sub_100005574(&qword_100497790);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1;
  v9 = 0;
  v6 = sub_100005574(&qword_100497780);
  AsyncStream.Continuation.yield(_:)(&v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100207CFC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = sub_100005574(&qword_100497790);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 & 1;
  v8 = 1;
  v6 = sub_100005574(&qword_100497780);
  AsyncStream.Continuation.yield(_:)(&v7, v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  AsyncStream.Continuation.finish()();
}

id static CATransaction.performWithoutAnimation(_:)(void (*a1)(id))
{
  void *v2;

  v2 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v2, "begin");
  a1(objc_msgSend(v2, "setDisableActions:", 1));
  return objc_msgSend(v2, "commit");
}

ValueMetadata *type metadata accessor for CALayer.AnimationStatus()
{
  return &type metadata for CALayer.AnimationStatus;
}

void sub_100207E30(char a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD);
  uint64_t v9;

  v3 = OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_displayLink);
  if (v4)
  {
    objc_msgSend(v4, "invalidate");
    v5 = *(void **)(v1 + v3);
    *(_QWORD *)(v1 + v3) = 0;

  }
  v6 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_animationDuration;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_startTime;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = *(void (**)(_QWORD))(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion);
  if (v8)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14MusicUtilities28CAAnimationCompletionHandler_completion + 8);
    swift_retain(v9);
    v8(a1 & 1);
    sub_10003A5C8((uint64_t)v8, v9);
  }
}

uint64_t sub_100207EE8()
{
  return sub_1000D4E44(&qword_100497780);
}

uint64_t sub_100207EF4(double a1)
{
  sub_100005574(&qword_100497780);
  return sub_100207C54(a1);
}

uint64_t sub_100207F34()
{
  return sub_1000D4E44(&qword_100497780);
}

void sub_100207F40(char a1)
{
  sub_100005574(&qword_100497780);
  sub_100207CFC(a1);
}

unint64_t sub_100207F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100497788;
  if (!qword_100497788)
  {
    v1 = objc_opt_self(CAAnimation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100497788);
  }
  return result;
}

uint64_t sub_100207FBC()
{
  return sub_1000D4E44(&qword_100497798);
}

uint64_t sub_100207FC8(char a1)
{
  uint64_t v2;
  char v4;

  sub_100005574(&qword_100497798);
  v4 = a1;
  v2 = sub_100005574(&qword_100497798);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

double Int.seconds.getter(uint64_t a1)
{
  return (double)a1;
}

double CGSize.nonNegative()(double result)
{
  if (result < 0.0)
    return 0.0;
  return result;
}

double static CGSize.* infix(_:_:)(double a1, double a2, double a3)
{
  return a1 * a3;
}

CGFloat static CGAffineTransform.+ infix(_:_:)@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  CGFloat result;
  __int128 v7;
  __int128 v8;
  CGAffineTransform v9;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v4 = a1[1];
  *(_OWORD *)&t1.a = *a1;
  *(_OWORD *)&t1.c = v4;
  *(_OWORD *)&t1.tx = a1[2];
  v5 = a2[1];
  *(_OWORD *)&t2.a = *a2;
  *(_OWORD *)&t2.c = v5;
  *(_OWORD *)&t2.tx = a2[2];
  CGAffineTransformConcat(&v9, &t1, &t2);
  result = v9.a;
  v7 = *(_OWORD *)&v9.c;
  v8 = *(_OWORD *)&v9.tx;
  *a3 = *(_OWORD *)&v9.a;
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

void sub_1002080E0()
{
  static CGPoint.topLeft = 0;
  *(_QWORD *)algn_1004A2EB8 = 0;
}

uint64_t *CGPoint.topLeft.unsafeMutableAddressor()
{
  if (qword_100496D00 != -1)
    swift_once(&qword_100496D00, sub_1002080E0);
  return &static CGPoint.topLeft;
}

double static CGPoint.topLeft.getter()
{
  _BYTE v1[24];

  if (qword_100496D00 != -1)
    swift_once(&qword_100496D00, sub_1002080E0);
  swift_beginAccess(&static CGPoint.topLeft, v1, 0, 0);
  return *(double *)&static CGPoint.topLeft;
}

void static CGPoint.topLeft.setter(double a1, double a2)
{
  _BYTE v4[24];

  if (qword_100496D00 != -1)
    swift_once(&qword_100496D00, sub_1002080E0);
  swift_beginAccess(&static CGPoint.topLeft, v4, 1, 0);
  static CGPoint.topLeft = *(_QWORD *)&a1;
  *(double *)algn_1004A2EB8 = a2;
}

uint64_t (*static CGPoint.topLeft.modify(uint64_t a1))(_QWORD)
{
  if (qword_100496D00 != -1)
    swift_once(&qword_100496D00, sub_1002080E0);
  swift_beginAccess(&static CGPoint.topLeft, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.topCenter.unsafeMutableAddressor()
{
  return &static CGPoint.topCenter;
}

double static CGPoint.topCenter.getter()
{
  _BYTE v1[24];

  swift_beginAccess(&static CGPoint.topCenter, v1, 0, 0);
  return *(double *)&static CGPoint.topCenter;
}

uint64_t static CGPoint.topCenter.setter(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(&static CGPoint.topCenter, v5, 1, 0);
  static CGPoint.topCenter = *(_QWORD *)&a1;
  *(double *)algn_100497808 = a2;
  return result;
}

uint64_t (*static CGPoint.topCenter.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(&static CGPoint.topCenter, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_100208358()
{
  double result;

  result = 1.0;
  static CGPoint.topRight = xmmword_1003952A0;
  return result;
}

__int128 *CGPoint.topRight.unsafeMutableAddressor()
{
  if (qword_100496D08 != -1)
    swift_once(&qword_100496D08, sub_100208358);
  return &static CGPoint.topRight;
}

double static CGPoint.topRight.getter()
{
  return sub_100208938(&qword_100496D08, (uint64_t)&static CGPoint.topRight);
}

uint64_t static CGPoint.topRight.setter(double a1, double a2)
{
  return sub_1002089B4(&qword_100496D08, (double *)&static CGPoint.topRight, (double *)&static CGPoint.topRight + 1, a1, a2);
}

uint64_t (*static CGPoint.topRight.modify(uint64_t a1))(_QWORD)
{
  if (qword_100496D08 != -1)
    swift_once(&qword_100496D08, sub_100208358);
  swift_beginAccess(&static CGPoint.topRight, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.centerLeft.unsafeMutableAddressor()
{
  return &static CGPoint.centerLeft;
}

double static CGPoint.centerLeft.getter()
{
  _BYTE v1[24];

  swift_beginAccess(static CGPoint.centerLeft, v1, 0, 0);
  return static CGPoint.centerLeft[0];
}

uint64_t static CGPoint.centerLeft.setter(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(static CGPoint.centerLeft, v5, 1, 0);
  static CGPoint.centerLeft[0] = a1;
  unk_100497818 = *(_QWORD *)&a2;
  return result;
}

uint64_t (*static CGPoint.centerLeft.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static CGPoint.centerLeft, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.center.unsafeMutableAddressor()
{
  return &static CGPoint.center;
}

double static CGPoint.center.getter()
{
  _BYTE v1[24];

  swift_beginAccess(static CGPoint.center, v1, 0, 0);
  return static CGPoint.center[0];
}

uint64_t static CGPoint.center.setter(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(static CGPoint.center, v5, 1, 0);
  static CGPoint.center[0] = a1;
  unk_100497828 = *(_QWORD *)&a2;
  return result;
}

uint64_t (*static CGPoint.center.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static CGPoint.center, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t *CGPoint.centerRight.unsafeMutableAddressor()
{
  return &static CGPoint.centerRight;
}

double static CGPoint.centerRight.getter()
{
  _BYTE v1[24];

  swift_beginAccess(static CGPoint.centerRight, v1, 0, 0);
  return static CGPoint.centerRight[0];
}

uint64_t static CGPoint.centerRight.setter(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(static CGPoint.centerRight, v5, 1, 0);
  static CGPoint.centerRight[0] = a1;
  unk_100497838 = *(_QWORD *)&a2;
  return result;
}

uint64_t (*static CGPoint.centerRight.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static CGPoint.centerRight, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_1002086EC()
{
  double result;

  result = 0.0;
  static CGPoint.bottomLeft = xmmword_100384BD0;
  return result;
}

__int128 *CGPoint.bottomLeft.unsafeMutableAddressor()
{
  if (qword_100496D10 != -1)
    swift_once(&qword_100496D10, sub_1002086EC);
  return &static CGPoint.bottomLeft;
}

double static CGPoint.bottomLeft.getter()
{
  return sub_100208938(&qword_100496D10, (uint64_t)&static CGPoint.bottomLeft);
}

uint64_t static CGPoint.bottomLeft.setter(double a1, double a2)
{
  return sub_1002089B4(&qword_100496D10, (double *)&static CGPoint.bottomLeft, (double *)&static CGPoint.bottomLeft + 1, a1, a2);
}

uint64_t (*static CGPoint.bottomLeft.modify(uint64_t a1))(_QWORD)
{
  if (qword_100496D10 != -1)
    swift_once(&qword_100496D10, sub_1002086EC);
  swift_beginAccess(&static CGPoint.bottomLeft, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t *CGPoint.bottomCenter.unsafeMutableAddressor()
{
  return &static CGPoint.bottomCenter;
}

double static CGPoint.bottomCenter.getter()
{
  _BYTE v1[24];

  swift_beginAccess(static CGPoint.bottomCenter, v1, 0, 0);
  return static CGPoint.bottomCenter[0];
}

uint64_t static CGPoint.bottomCenter.setter(double a1, double a2)
{
  uint64_t result;
  _BYTE v5[24];

  result = swift_beginAccess(static CGPoint.bottomCenter, v5, 1, 0);
  static CGPoint.bottomCenter[0] = a1;
  unk_100497848 = *(_QWORD *)&a2;
  return result;
}

uint64_t (*static CGPoint.bottomCenter.modify(uint64_t a1))(_QWORD)
{
  swift_beginAccess(static CGPoint.bottomCenter, a1, 33, 0);
  return j_j__swift_endAccess;
}

__n128 sub_1002088C8()
{
  __n128 result;

  __asm { FMOV            V0.2D, #1.0 }
  static CGPoint.bottomRight = (__int128)result;
  return result;
}

__int128 *CGPoint.bottomRight.unsafeMutableAddressor()
{
  if (qword_100496D18 != -1)
    swift_once(&qword_100496D18, sub_1002088C8);
  return &static CGPoint.bottomRight;
}

double static CGPoint.bottomRight.getter()
{
  return sub_100208938(&qword_100496D18, (uint64_t)&static CGPoint.bottomRight);
}

double sub_100208938(_QWORD *a1, uint64_t a2)
{
  _BYTE v4[24];

  if (*a1 != -1)
    swift_once();
  swift_beginAccess(a2, v4, 0, 0);
  return *(double *)a2;
}

uint64_t static CGPoint.bottomRight.setter(double a1, double a2)
{
  return sub_1002089B4(&qword_100496D18, (double *)&static CGPoint.bottomRight, (double *)&static CGPoint.bottomRight + 1, a1, a2);
}

uint64_t sub_1002089B4(_QWORD *a1, double *a2, double *a3, double a4, double a5)
{
  uint64_t result;
  _BYTE v10[24];

  if (*a1 != -1)
    swift_once();
  result = swift_beginAccess(a2, v10, 1, 0);
  *a2 = a4;
  *a3 = a5;
  return result;
}

uint64_t (*static CGPoint.bottomRight.modify(uint64_t a1))(_QWORD)
{
  if (qword_100496D18 != -1)
    swift_once(&qword_100496D18, sub_1002088C8);
  swift_beginAccess(&static CGPoint.bottomRight, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t CGRect.outset(by:for:)(double a1, double a2, double a3, double a4)
{
  return CGRect.inset(by:for:)(-a1, -a2, -a3, -a4);
}

CTFrameRef CTFramesetterRef.createFrame(_:)(double a1, double a2, double a3, double a4)
{
  const __CTFramesetter *v4;
  const CGPath *v5;
  CTFrameRef Frame;
  CFRange v8;

  v5 = CGPathCreateWithRect(*(CGRect *)&a1, 0);
  v8.location = 0;
  v8.length = 0;
  Frame = CTFramesetterCreateFrame(v4, v8, v5, 0);

  return Frame;
}

double CTFramesetterRef.suggestedFrameSize(constraints:)(double a1, double a2)
{
  const __CTFramesetter *v2;
  double result;
  CFRange v4;

  v4.location = 0;
  v4.length = 0;
  *(_QWORD *)&result = *(_OWORD *)&CTFramesetterSuggestFrameSizeWithConstraints(v2, v4, 0, *(CGSize *)&a1, 0);
  return result;
}

Swift::Void __swiftcall CTFrameRef.draw(in:)(CGContextRef in)
{
  const __CTFrame *v1;

  CTFrameDraw(v1, in);
}

void *CTFrameRef.lines.getter()
{
  return sub_100209544((uint64_t (*)(uint64_t))&_CTFrameGetLines, (uint64_t (*)(_QWORD))type metadata accessor for CTLine);
}

CGPoint **CTFrameRef.lineOrigins.getter()
{
  const __CTFrame *v0;
  const __CFArray *v1;
  uint64_t v2;
  uint64_t v3;
  CGPoint **v4;
  const __CTFrame *v5;
  CGPoint **v6;
  uint64_t v8;
  uint64_t v9;

  v1 = CTFrameGetLines(v0);
  v9 = 0;
  type metadata accessor for CTLine(0);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v1, &v9, v2);

  if (v9)
    v3 = v9;
  else
    v3 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = (CGPoint **)_CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(CGPoint ***)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v5 = v0;
  v6 = sub_10020AB5C(v4, v5);

  return v6;
}

CGPoint **sub_100208BF8(CGPoint **result, uint64_t *a2, CTFrameRef frame)
{
  CGPoint *v3;
  const __CFArray *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CFRange v13;

  v3 = *result;
  if (*result)
  {
    v13.location = 0;
    v13.length = 0;
    CTFrameGetLineOrigins(frame, v13, v3);
    v7 = CTFrameGetLines(frame);
    v12 = 0;
    type metadata accessor for CTLine(0);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)(v7, &v12, v8);

    if (v12)
      v9 = v12;
    else
      v9 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v11 = v9;
      else
        v11 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v10 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    result = (CGPoint **)swift_bridgeObjectRelease();
    *a2 = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *CTFrameRef.lineFrames(lines:origins:flippedCoordinates:useExtendedLineBounds:)(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  const __CTLine *v5;
  CGFloat height;
  CGFloat width;
  double v8;
  uint64_t v9;
  const __CTLine *v13;
  const __CTLine *i;
  const __CTLine *v15;
  CTLineBoundsOptions v16;
  unint64_t v17;
  unint64_t v18;
  CGFloat *v19;
  const __CTLine *v20;
  const __CTLine *v21;
  char *v22;
  char *v23;
  double *v24;
  char *v25;
  double v26;
  const __CTLine *v27;
  uint64_t v28;
  double v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  double *v36;
  char *v37;
  uint64_t v38;
  CTLineBoundsOptions options;
  unint64_t v41;
  CGRect BoundsWithOptions;
  CGRect v44;

  if (!((unint64_t)a1 >> 62))
  {
    v13 = *(const __CTLine **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_3;
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  if (a1 < 0)
    v38 = a1;
  else
    v38 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (const __CTLine *)_CocoaArrayWrapper.endIndex.getter(v38);
  if (!v13)
    goto LABEL_42;
LABEL_3:
  v41 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_46;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_48;
  }
  for (i = (const __CTLine *)*(id *)(a1 + 32);
        ;
        i = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1))
  {
    v15 = i;
    v4 = *(_QWORD *)(a2 + 16);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return _swiftEmptyArrayStorage;
    }
    v9 = *(_QWORD *)(a2 + 32);
    v8 = *(double *)(a2 + 40);
    if ((a4 & 1) != 0)
      v16 = 32;
    else
      v16 = 0;
    options = v16;
    BoundsWithOptions = CTLineGetBoundsWithOptions(i, v16);
    width = BoundsWithOptions.size.width;
    height = BoundsWithOptions.size.height;
    if ((a3 & 1) == 0)
      v8 = 0.0;
    v5 = v15;
    a4 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
LABEL_48:
      a4 = sub_10020A808(0, a4[2] + 1, 1, a4);
    v18 = a4[2];
    v17 = a4[3];
    if (v18 >= v17 >> 1)
      a4 = sub_10020A808((_QWORD *)(v17 > 1), v18 + 1, 1, a4);
    a4[2] = v18 + 1;
    v19 = (CGFloat *)&a4[5 * v18];
    *((_QWORD *)v19 + 4) = v5;
    *((_QWORD *)v19 + 5) = v9;
    v19[6] = 0.0;
    v19[7] = width;
    v19[8] = height;

    if (v13 == (const __CTLine *)1)
      goto LABEL_16;
    if (v41)
    {
      v20 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
      goto LABEL_22;
    }
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      break;
LABEL_45:
    __break(1u);
LABEL_46:
    ;
  }
  v20 = (const __CTLine *)*(id *)(a1 + 40);
LABEL_22:
  v21 = v20;
  v22 = (char *)(v4 - 1);
  if (v4 != 1)
  {
    v23 = 0;
    v24 = (double *)(a2 + 56);
    v25 = (char *)v13 - 2;
    v26 = 0.0;
    while (1)
    {
      v28 = *((_QWORD *)v24 - 1);
      v29 = *v24;
      v44 = CTLineGetBoundsWithOptions(v21, options);
      v30 = v44.size.width;
      v31 = v44.size.height;
      v32 = v26 + v8 - v29;
      if ((a3 & 1) != 0)
      {
        v8 = v29;
        v26 = v32;
        v33 = v32;
      }
      else
      {
        v33 = 0.0;
      }
      v13 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native(a4) & 1) == 0)
        a4 = sub_10020A808(0, a4[2] + 1, 1, a4);
      v35 = a4[2];
      v34 = a4[3];
      if (v35 >= v34 >> 1)
        a4 = sub_10020A808((_QWORD *)(v34 > 1), v35 + 1, 1, a4);
      a4[2] = v35 + 1;
      v36 = (double *)&a4[5 * v35];
      *((_QWORD *)v36 + 4) = v13;
      *((_QWORD *)v36 + 5) = v28;
      v36[6] = v33;
      v36[7] = v30;
      v36[8] = v31;

      if (v25 == v23)
        break;
      v37 = v23 + 2;
      if (v41)
      {
        v27 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, a1);
      }
      else
      {
        if ((unint64_t)v37 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_45;
        v27 = (const __CTLine *)*(id *)(a1 + 8 * (_QWORD)v23 + 48);
      }
      v21 = v27;
      v24 += 2;
      if (v22 == ++v23)
        goto LABEL_23;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a4;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a4;
}

double CTLineRef.extendedBounds.getter()
{
  return sub_100209074(0x20uLL);
}

double CTLineRef.bounds.getter()
{
  return sub_100209074(0);
}

double sub_100209074(CTLineBoundsOptions options)
{
  const __CTLine *v1;
  double result;

  *(_QWORD *)&result = (unint64_t)CTLineGetBoundsWithOptions(v1, options);
  return result;
}

uint64_t CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(char a1, char a2)
{
  const __CTFrame *v2;
  const __CTLine *v3;
  CGFloat height;
  CGFloat width;
  double v6;
  CGPoint *v7;
  CGPoint **v8;
  CTLineBoundsOptions v9;
  const __CFArray *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  const __CFArray *v15;
  uint64_t v16;
  CGPoint **v17;
  char *v18;
  const __CTLine *v19;
  const __CTLine *v20;
  CTLineBoundsOptions v21;
  unint64_t v22;
  unint64_t v23;
  CGFloat *v24;
  const __CTLine *v25;
  char *v26;
  char *v27;
  double v28;
  const __CTLine *v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v40;
  unint64_t v41;
  uint64_t v43;
  CGRect BoundsWithOptions;
  CGRect v45;

  v8 = (CGPoint **)v2;
  LOBYTE(v9) = a2;
  v10 = CTFrameGetLines(v2);
  v43 = 0;
  type metadata accessor for CTLine(0);
  v12 = v11;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v10, &v43, v11);

  v13 = (double *)_swiftEmptyArrayStorage;
  if (v43)
    v14 = v43;
  else
    v14 = (uint64_t)_swiftEmptyArrayStorage;
  v15 = CTFrameGetLines((CTFrameRef)v8);
  v43 = 0;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v15, &v43, v12);

  if (v43)
    v16 = v43;
  else
    v16 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v16 >> 62)
    goto LABEL_51;
  v17 = *(CGPoint ***)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v16 = v8;
    v8 = sub_10020AB5C(v17, (const __CTFrame *)v16);

    if ((unint64_t)v14 >> 62)
      break;
    v18 = *(char **)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v18)
      goto LABEL_59;
LABEL_11:
    v41 = v14 & 0xC000000000000001;
    if ((v14 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v19 = (const __CTLine *)*(id *)(v14 + 32);
        goto LABEL_14;
      }
      __break(1u);
LABEL_65:
      v16 = (uint64_t)sub_10020A808(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
      goto LABEL_21;
    }
    while (1)
    {
      v19 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
LABEL_14:
      v20 = v19;
      v13 = (double *)v8[2];
      if (!v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_60;
      }
      v7 = v8[4];
      v6 = *((double *)v8 + 5);
      if ((v9 & 1) != 0)
        v21 = 32;
      else
        v21 = 0;
      BoundsWithOptions = CTLineGetBoundsWithOptions(v19, v21);
      width = BoundsWithOptions.size.width;
      height = BoundsWithOptions.size.height;
      if ((a1 & 1) == 0)
        v6 = 0.0;
      v3 = v20;
      v16 = (uint64_t)_swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        goto LABEL_65;
LABEL_21:
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
        v16 = (uint64_t)sub_10020A808((_QWORD *)(v22 > 1), v23 + 1, 1, (_QWORD *)v16);
      *(_QWORD *)(v16 + 16) = v23 + 1;
      v24 = (CGFloat *)(v16 + 40 * v23);
      *((_QWORD *)v24 + 4) = v3;
      *((_QWORD *)v24 + 5) = v7;
      v24[6] = 0.0;
      v24[7] = width;
      v24[8] = height;

      if (v18 == (char *)1)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
      if (v41)
      {
        v25 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v14);
        goto LABEL_30;
      }
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
        break;
LABEL_62:
      __break(1u);
    }
    v25 = (const __CTLine *)*(id *)(v14 + 40);
LABEL_30:
    v3 = v25;
    v40 = (char *)v13 - 1;
    if (v13 == (double *)1)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_61;
    }
    v26 = 0;
    if ((v9 & 1) != 0)
      v9 = 32;
    else
      v9 = 0;
    v13 = (double *)(v8 + 7);
    v27 = v18 - 2;
    v7 = 0;
    v28 = 0.0;
    while (v26 + 1 < (char *)v8[2])
    {
      v30 = *((_QWORD *)v13 - 1);
      v31 = *v13;
      v45 = CTLineGetBoundsWithOptions(v3, v9);
      width = v45.size.width;
      height = v45.size.height;
      v32 = v28 + v6 - v31;
      if ((a1 & 1) != 0)
      {
        v6 = v31;
        v28 = v32;
        v33 = v32;
      }
      else
      {
        v33 = 0.0;
      }
      v18 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (uint64_t)sub_10020A808(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
      v35 = *(_QWORD *)(v16 + 16);
      v34 = *(_QWORD *)(v16 + 24);
      if (v35 >= v34 >> 1)
        v16 = (uint64_t)sub_10020A808((_QWORD *)(v34 > 1), v35 + 1, 1, (_QWORD *)v16);
      *(_QWORD *)(v16 + 16) = v35 + 1;
      v36 = v16 + 40 * v35;
      *(_QWORD *)(v36 + 32) = v18;
      *(_QWORD *)(v36 + 40) = v30;
      *(double *)(v36 + 48) = v33;
      *(CGFloat *)(v36 + 56) = width;
      *(CGFloat *)(v36 + 64) = height;

      if (v27 == v26)
        goto LABEL_24;
      v37 = v26 + 2;
      if (v41)
      {
        v29 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v14);
      }
      else
      {
        if ((unint64_t)v37 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_62;
        v29 = (const __CTLine *)*(id *)(v14 + 8 * (_QWORD)v26 + 48);
      }
      v3 = v29;
      ++v26;
      v13 += 2;
      if (v40 == v26)
        goto LABEL_31;
    }
    __break(1u);
LABEL_51:
    if (v16 < 0)
      v38 = v16;
    else
      v38 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = (CGPoint **)_CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease();
  }
  if (v14 < 0)
    v16 = v14;
  else
    v16 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = (char *)_CocoaArrayWrapper.endIndex.getter(v16);
  if (v18)
    goto LABEL_11;
LABEL_59:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_60:
  v16 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_61:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

Swift::Void __swiftcall CTLineRef.draw(in:)(CGContextRef in)
{
  const __CTLine *v1;

  CTLineDraw(v1, in);
}

void *CTLineRef.glyphRuns.getter()
{
  return sub_100209544((uint64_t (*)(uint64_t))&CTLineGetGlyphRuns, (uint64_t (*)(_QWORD))type metadata accessor for CTRun);
}

void *sub_100209544(uint64_t (*a1)(uint64_t), uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v7;

  v4 = (id)a1(v2);
  v7 = 0;
  v5 = a2(0);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v4, &v7, v5);

  if (v7)
    return (void *)v7;
  else
    return &_swiftEmptyArrayStorage;
}

CFIndex CTLineRef.glyphCount.getter()
{
  const __CTLine *v0;

  return CTLineGetGlyphCount(v0);
}

CFIndex CTLineRef.cfStringRange.getter()
{
  const __CTLine *v0;

  return CTLineGetStringRange(v0).location;
}

CGFloat CTLineRef.offset(stringIndex:)(CFIndex charIndex)
{
  const __CTLine *v1;

  return CTLineGetOffsetForStringIndex(v1, charIndex, 0);
}

__C::_NSRange __swiftcall CTRunRef.convertToGlyphRange(textRange:)(__C::_NSRange textRange)
{
  const __CTRun *v1;
  const __CTRun *v2;
  Swift::Int length;
  Swift::Int location;
  char Status;
  Swift::Int GlyphCount;
  Swift::Int v7;
  Swift::Int v8;
  const __CTRun *v9;
  _QWORD *v10;
  const __CTRun *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  Swift::Int v17;
  BOOL v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  __C::_NSRange result;
  CFRange v25;
  CFRange v26;

  v2 = v1;
  length = textRange.length;
  location = textRange.location;
  Status = CTRunGetStatus(v2);
  GlyphCount = CTRunGetGlyphCount(v2);
  v8 = GlyphCount;
  if ((Status & 1) == 0)
  {
    if ((GlyphCount & 0x8000000000000000) == 0)
    {
      v9 = v2;
      if (v8)
      {
        v10 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v8, &type metadata for Int);
        v10[2] = v8;
      }
      else
      {
        v10 = _swiftEmptyArrayStorage;
      }
      v25.location = 0;
      v25.length = 0;
      CTRunGetStringIndices(v9, v25, v10 + 4);
      GlyphCount = CTRunGetGlyphCount(v9);
      if (v8 >= GlyphCount)
      {
        v10[2] = GlyphCount;

        v13 = v10[2];
        if (!v13)
          goto LABEL_31;
        goto LABEL_15;
      }
      goto LABEL_35;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (GlyphCount < 0)
    goto LABEL_34;
  v11 = v2;
  if (v8)
  {
    v12 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(v8, &type metadata for Int);
    v12[2] = v8;
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  v26.location = 0;
  v26.length = 0;
  CTRunGetStringIndices(v11, v26, v12 + 4);
  GlyphCount = CTRunGetGlyphCount(v11);
  if (v8 < GlyphCount)
    goto LABEL_36;
  v12[2] = GlyphCount;

  GlyphCount = (Swift::Int)sub_1002097E8((char *)v12);
  v10 = (_QWORD *)GlyphCount;
  v13 = *(_QWORD *)(GlyphCount + 16);
  if (!v13)
    goto LABEL_31;
LABEL_15:
  v14 = v10[4];
  if (v14 != location)
  {
    v15 = 0;
    while (v13 - 1 != v15)
    {
      v16 = v10[v15++ + 5];
      if (v16 == location)
        goto LABEL_20;
    }
    goto LABEL_31;
  }
  v15 = 0;
LABEL_20:
  v17 = location + length;
  if (__OFADD__(location, length))
    goto LABEL_37;
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v14 != v19)
  {
    v20 = 0;
    v21 = v13 - 1;
    while (v21 != v20)
    {
      v22 = v10[v20++ + 5];
      if (v22 == v19)
        goto LABEL_27;
    }
    goto LABEL_31;
  }
  v20 = 0;
LABEL_27:
  GlyphCount = swift_bridgeObjectRelease();
  v23 = v20 - v15;
  if (__OFSUB__(v20, v15))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v7 = v23 + 1;
  if (!__OFADD__(v23, 1))
    goto LABEL_32;
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease();
  v15 = 0;
  v7 = 0;
LABEL_32:
  GlyphCount = v15;
LABEL_40:
  result.length = v7;
  result.location = GlyphCount;
  return result;
}

